SmellsMetrics,Ter, 12 jun 2018 14:14:32 BRT
Method,CALL,CALLED,IMP,LOC,NBD,NP,STAT,v(G)
"null.call(IEntity)",2,8,n/a,5,0,1,2,1
"null.check(String,String)",1,1,n/a,4,0,2,1,1
"null.check(byte,byte)",0,0,n/a,4,0,2,1,1
"null.check(char,char)",0,0,n/a,4,0,2,1,1
"null.check(double,double)",0,0,n/a,4,0,2,1,1
"null.check(float,float)",0,0,n/a,4,0,2,1,1
"null.check(int,int)",0,1,n/a,4,0,2,1,1
"null.check(long,long)",0,0,n/a,4,0,2,1,1
"null.check(short,short)",0,0,n/a,4,0,2,1,1
"null.compare(IEntity,IEntity)",2,0,n/a,4,0,2,1,1
"null.compare(IModifier<?>,IModifier<?>)",2,0,n/a,12,1,2,7,3
"null.compare(TextureAtlasSourceWithWithLocationCallback<?>,TextureAtlasSourceWithWithLocationCallback<?>)",8,0,n/a,9,1,2,4,2
"null.matches(int,int,int,int,int,int)",0,1,n/a,4,0,6,1,1
"null.onAllocatePoolItem()",1,4,n/a,4,0,0,1,1
"null.onHandleRecycleItem(IntLRUCacheQueueNode)",0,2,n/a,6,0,1,3,1
"null.onHandleRecycleItem(IntLRUCacheValueHolder<V>)",0,2,n/a,5,0,1,2,1
"null.onHandleRecycleItem(LRUCacheQueueNode<K>)",0,2,n/a,6,0,1,3,1
"null.onHandleRecycleItem(LRUCacheValueHolder<K, V>)",0,2,n/a,5,0,1,2,1
"null.swapAxis(float[])",0,1,n/a,7,0,1,4,1
"org.andengine.AndEngine.checkCodePathSupport()",3,1,n/a,9,2,0,4,3
"org.andengine.AndEngine.checkDeviceSupported()",2,1,n/a,4,0,0,2,1
"org.andengine.AndEngine.checkEGLConfigChooserSupport()",6,1,n/a,15,1,0,8,2
"org.andengine.AndEngine.checkOpenGLSupport()",1,1,n/a,3,0,0,1,1
"org.andengine.AndEngine.isDeviceSupported()",1,0,n/a,8,1,0,4,2
"org.andengine.audio.BaseAudioEntity.BaseAudioEntity(IAudioManager<? extends IAudioEntity>)",0,2,n/a,3,0,1,1,1
"org.andengine.audio.BaseAudioEntity.assertNotReleased()",1,24,n/a,5,1,0,2,2
"org.andengine.audio.BaseAudioEntity.getActualLeftVolume()",2,0,n/a,4,0,0,2,1
"org.andengine.audio.BaseAudioEntity.getActualRightVolume()",2,0,n/a,4,0,0,2,1
"org.andengine.audio.BaseAudioEntity.getAudioManager()",1,2,n/a,4,0,0,2,1
"org.andengine.audio.BaseAudioEntity.getLeftVolume()",1,0,n/a,5,0,0,2,1
"org.andengine.audio.BaseAudioEntity.getMasterVolume()",2,4,n/a,4,0,0,2,1
"org.andengine.audio.BaseAudioEntity.getRightVolume()",1,0,n/a,5,0,0,2,1
"org.andengine.audio.BaseAudioEntity.getVolume()",1,0,n/a,5,0,0,2,1
"org.andengine.audio.BaseAudioEntity.isReleased()",0,0,n/a,3,0,0,1,1
"org.andengine.audio.BaseAudioEntity.onMasterVolumeChanged(float)",1,1,n/a,4,0,1,1,1
"org.andengine.audio.BaseAudioEntity.pause()",1,2,n/a,4,0,0,1,1
"org.andengine.audio.BaseAudioEntity.play()",1,2,n/a,4,0,0,1,1
"org.andengine.audio.BaseAudioEntity.release()",1,3,n/a,5,0,0,2,1
"org.andengine.audio.BaseAudioEntity.resume()",1,2,n/a,4,0,0,1,1
"org.andengine.audio.BaseAudioEntity.setLooping(boolean)",1,2,n/a,4,0,1,1,1
"org.andengine.audio.BaseAudioEntity.setVolume(float)",2,0,n/a,5,0,1,2,1
"org.andengine.audio.BaseAudioEntity.setVolume(float,float)",1,3,n/a,6,0,2,3,1
"org.andengine.audio.BaseAudioEntity.stop()",1,3,n/a,4,0,0,1,1
"org.andengine.audio.BaseAudioEntity.throwOnReleased()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.audio.BaseAudioManager.add(T)",1,5,n/a,4,0,1,1,1
"org.andengine.audio.BaseAudioManager.getMasterVolume()",0,2,n/a,4,0,0,1,1
"org.andengine.audio.BaseAudioManager.releaseAll()",4,2,n/a,9,1,0,7,2
"org.andengine.audio.BaseAudioManager.remove(T)",1,2,n/a,4,0,1,1,1
"org.andengine.audio.BaseAudioManager.setMasterVolume(float)",3,0,n/a,9,1,1,7,2
"org.andengine.audio.IAudioEntity.getLeftVolume()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioEntity.getRightVolume()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioEntity.getVolume()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioEntity.onMasterVolumeChanged(float)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.andengine.audio.IAudioEntity.pause()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioEntity.play()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioEntity.release()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioEntity.resume()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioEntity.setLooping(boolean)",n/a,0,3,n/a,n/a,1,n/a,n/a
"org.andengine.audio.IAudioEntity.setVolume(float)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.audio.IAudioEntity.setVolume(float,float)",n/a,0,3,n/a,n/a,2,n/a,n/a
"org.andengine.audio.IAudioEntity.stop()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioManager.add(T)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.andengine.audio.IAudioManager.getMasterVolume()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioManager.releaseAll()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.audio.IAudioManager.remove(T)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.andengine.audio.IAudioManager.setMasterVolume(float)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.audio.exception.AudioException.AudioException()",1,0,n/a,3,0,0,1,1
"org.andengine.audio.exception.AudioException.AudioException(String)",1,0,n/a,3,0,1,1,1
"org.andengine.audio.exception.AudioException.AudioException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.audio.exception.AudioException.AudioException(Throwable)",1,0,n/a,3,0,1,1,1
"org.andengine.audio.music.Music.Music(MusicManager,MediaPlayer)",1,4,n/a,4,0,2,2,1
"org.andengine.audio.music.Music.getAudioManager()",1,4,n/a,4,0,0,1,1
"org.andengine.audio.music.Music.getMediaPlayer()",1,0,n/a,4,0,0,2,1
"org.andengine.audio.music.Music.isPlaying()",2,0,n/a,4,0,0,2,1
"org.andengine.audio.music.Music.onMasterVolumeChanged(float)",1,1,n/a,4,0,1,1,1
"org.andengine.audio.music.Music.pause()",2,2,n/a,5,0,0,2,1
"org.andengine.audio.music.Music.play()",2,2,n/a,5,0,0,2,1
"org.andengine.audio.music.Music.release()",5,3,n/a,8,0,0,5,1
"org.andengine.audio.music.Music.resume()",2,2,n/a,5,0,0,2,1
"org.andengine.audio.music.Music.seekTo(int)",2,0,n/a,4,0,1,2,1
"org.andengine.audio.music.Music.setLooping(boolean)",2,2,n/a,5,0,1,2,1
"org.andengine.audio.music.Music.setOnCompletionListener(OnCompletionListener)",2,0,n/a,4,0,1,2,1
"org.andengine.audio.music.Music.setVolume(float,float)",4,4,n/a,8,0,2,5,1
"org.andengine.audio.music.Music.stop()",2,3,n/a,5,0,0,2,1
"org.andengine.audio.music.Music.throwOnReleased()",1,1,n/a,4,0,0,1,1
"org.andengine.audio.music.MusicFactory.createMusicFromAsset(MusicManager,Context,String)",10,0,n/a,9,0,3,7,1
"org.andengine.audio.music.MusicFactory.createMusicFromAssetFileDescriptor(MusicManager,AssetFileDescriptor)",8,0,n/a,8,0,2,6,1
"org.andengine.audio.music.MusicFactory.createMusicFromFile(MusicManager,File)",7,0,n/a,8,0,2,6,1
"org.andengine.audio.music.MusicFactory.createMusicFromResource(MusicManager,Context,int)",4,0,n/a,7,0,3,5,1
"org.andengine.audio.music.MusicFactory.getAssetBasePath()",0,0,n/a,3,0,0,1,1
"org.andengine.audio.music.MusicFactory.onCreate()",1,1,n/a,3,0,0,1,1
"org.andengine.audio.music.MusicFactory.setAssetBasePath(String)",3,1,n/a,10,1,1,3,3
"org.andengine.audio.music.MusicManager.MusicManager()",0,1,n/a,2,0,0,0,1
"org.andengine.audio.music.exception.MusicException.MusicException()",1,0,n/a,3,0,0,1,1
"org.andengine.audio.music.exception.MusicException.MusicException(String)",1,0,n/a,3,0,1,1,1
"org.andengine.audio.music.exception.MusicException.MusicException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.audio.music.exception.MusicException.MusicException(Throwable)",1,0,n/a,3,0,1,1,1
"org.andengine.audio.sound.Sound.Sound(SoundManager,int)",1,5,n/a,4,0,2,2,1
"org.andengine.audio.sound.Sound.getAudioManager()",1,4,n/a,4,0,0,1,1
"org.andengine.audio.sound.Sound.getRate()",0,0,n/a,3,0,0,1,1
"org.andengine.audio.sound.Sound.getSoundID()",0,2,n/a,3,0,0,1,1
"org.andengine.audio.sound.Sound.getSoundPool()",2,8,n/a,3,0,0,1,1
"org.andengine.audio.sound.Sound.getStreamID()",0,0,n/a,3,0,0,1,1
"org.andengine.audio.sound.Sound.isLoaded()",0,0,n/a,3,0,0,1,1
"org.andengine.audio.sound.Sound.onMasterVolumeChanged(float)",1,1,n/a,4,0,1,1,1
"org.andengine.audio.sound.Sound.pause()",3,2,n/a,7,1,0,3,2
"org.andengine.audio.sound.Sound.play()",4,2,n/a,8,0,0,5,1
"org.andengine.audio.sound.Sound.release()",6,3,n/a,9,0,0,6,1
"org.andengine.audio.sound.Sound.resume()",3,2,n/a,7,1,0,3,2
"org.andengine.audio.sound.Sound.setLoaded(boolean)",0,1,n/a,3,0,1,1,1
"org.andengine.audio.sound.Sound.setLoopCount(int)",3,1,n/a,7,1,1,4,2
"org.andengine.audio.sound.Sound.setLooping(boolean)",2,2,n/a,5,0,1,2,2
"org.andengine.audio.sound.Sound.setRate(float)",3,0,n/a,7,1,1,4,2
"org.andengine.audio.sound.Sound.setVolume(float,float)",4,4,n/a,10,1,2,6,2
"org.andengine.audio.sound.Sound.stop()",3,3,n/a,7,1,0,3,2
"org.andengine.audio.sound.Sound.throwOnReleased()",1,1,n/a,4,0,0,1,1
"org.andengine.audio.sound.SoundFactory.createSoundFromAsset(SoundManager,Context,String)",6,0,n/a,8,1,3,5,1
"org.andengine.audio.sound.SoundFactory.createSoundFromAssetFileDescriptor(SoundManager,AssetFileDescriptor)",4,0,n/a,8,1,2,5,1
"org.andengine.audio.sound.SoundFactory.createSoundFromFile(SoundManager,File)",2,0,n/a,3,0,2,1,1
"org.andengine.audio.sound.SoundFactory.createSoundFromFileDescriptor(SoundManager,FileDescriptor,long,long)",4,0,n/a,8,1,4,5,1
"org.andengine.audio.sound.SoundFactory.createSoundFromPath(SoundManager,String)",4,1,n/a,8,1,2,5,1
"org.andengine.audio.sound.SoundFactory.createSoundFromResource(SoundManager,Context,int)",4,0,n/a,8,1,3,5,1
"org.andengine.audio.sound.SoundFactory.getAssetBasePath()",0,0,n/a,3,0,0,1,1
"org.andengine.audio.sound.SoundFactory.onCreate()",1,1,n/a,3,0,0,1,1
"org.andengine.audio.sound.SoundFactory.setAssetBasePath(String)",3,1,n/a,10,1,1,3,3
"org.andengine.audio.sound.SoundManager.SoundManager()",1,0,n/a,3,0,0,1,1
"org.andengine.audio.sound.SoundManager.SoundManager(int)",2,2,n/a,4,0,1,2,1
"org.andengine.audio.sound.SoundManager.add(Sound)",3,10,n/a,5,0,1,2,1
"org.andengine.audio.sound.SoundManager.getSoundPool()",0,6,n/a,3,0,0,1,1
"org.andengine.audio.sound.SoundManager.onLoadComplete(SoundPool,int,int)",3,0,n/a,11,2,3,5,3
"org.andengine.audio.sound.SoundManager.releaseAll()",2,3,n/a,5,0,0,2,1
"org.andengine.audio.sound.SoundManager.remove(Sound)",3,3,n/a,8,1,1,4,2
"org.andengine.audio.sound.exception.SoundException.SoundException()",1,0,n/a,3,0,0,1,1
"org.andengine.audio.sound.exception.SoundException.SoundException(String)",1,1,n/a,3,0,1,1,1
"org.andengine.audio.sound.exception.SoundException.SoundException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.audio.sound.exception.SoundException.SoundException(Throwable)",1,1,n/a,3,0,1,1,1
"org.andengine.engine.Engine.Engine(EngineOptions)",31,5,n/a,43,1,1,26,6
"org.andengine.engine.Engine.EngineLock.EngineLock(boolean)",1,1,n/a,3,0,1,1,1
"org.andengine.engine.Engine.EngineLock.notifyCanDraw()",2,2,n/a,4,0,0,2,1
"org.andengine.engine.Engine.EngineLock.notifyCanUpdate()",2,2,n/a,4,0,0,2,1
"org.andengine.engine.Engine.EngineLock.waitUntilCanDraw()",2,1,n/a,5,1,0,2,2
"org.andengine.engine.Engine.EngineLock.waitUntilCanUpdate()",2,2,n/a,5,1,0,2,2
"org.andengine.engine.Engine.UpdateThread.UpdateThread()",2,1,n/a,3,0,0,1,1
"org.andengine.engine.Engine.UpdateThread.postRunnable(Runnable)",1,1,n/a,3,0,1,1,1
"org.andengine.engine.Engine.UpdateThread.run()",11,0,n/a,15,2,0,8,4
"org.andengine.engine.Engine.UpdateThread.setEngine(Engine)",0,1,n/a,3,0,1,1,1
"org.andengine.engine.Engine.clearDrawHandlers()",1,0,n/a,3,0,0,1,1
"org.andengine.engine.Engine.clearUpdateHandlers()",1,0,n/a,3,0,0,1,1
"org.andengine.engine.Engine.convertSceneToSurfaceTouchEvent(Camera,TouchEvent)",1,0,n/a,3,0,2,1,1
"org.andengine.engine.Engine.convertSurfaceToSceneTouchEvent(Camera,TouchEvent)",1,1,n/a,3,0,2,1,1
"org.andengine.engine.Engine.disableAccelerationSensor(Context)",3,2,n/a,12,1,1,5,2
"org.andengine.engine.Engine.disableLocationSensor(Context)",2,2,n/a,4,0,1,2,1
"org.andengine.engine.Engine.disableOrientationSensor(Context)",5,2,n/a,13,1,1,6,3
"org.andengine.engine.Engine.enableAccelerationSensor(Context,IAccelerationListener)",2,2,n/a,6,0,2,1,1
"org.andengine.engine.Engine.enableAccelerationSensor(Context,IAccelerationListener,AccelerationSensorOptions)",8,4,n/a,18,2,3,10,3
"org.andengine.engine.Engine.enableLocationSensor(Context,ILocationListener,LocationSensorOptions)",8,2,n/a,8,0,3,5,1
"org.andengine.engine.Engine.enableOrientationSensor(Context,IOrientationListener)",2,2,n/a,6,0,2,1,1
"org.andengine.engine.Engine.enableOrientationSensor(Context,IOrientationListener,OrientationSensorOptions)",11,4,n/a,19,2,3,11,4
"org.andengine.engine.Engine.enableVibrator(Context)",1,1,n/a,4,0,1,2,1
"org.andengine.engine.Engine.getAccelerationData()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getCamera()",0,2,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getCameraFromSurfaceTouchEvent(TouchEvent)",1,1,n/a,3,0,1,1,1
"org.andengine.engine.Engine.getEngineLock()",0,1,n/a,8,0,0,1,1
"org.andengine.engine.Engine.getEngineOptions()",0,9,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getFontManager()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getMusicManager()",1,1,n/a,7,1,0,3,2
"org.andengine.engine.Engine.getNanosecondsElapsed()",1,1,n/a,4,0,0,2,1
"org.andengine.engine.Engine.getOrientationData()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getScene()",0,2,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getSceneFromSurfaceTouchEvent(TouchEvent)",0,1,n/a,3,0,1,1,1
"org.andengine.engine.Engine.getSecondsElapsedTotal()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getShaderProgramManager()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getSoundManager()",1,1,n/a,7,1,0,3,2
"org.andengine.engine.Engine.getSurfaceHeight()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getSurfaceWidth()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getTextureManager()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getTouchController()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.Engine.getVertexBufferObjectManager()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.Engine.isRunning()",0,2,n/a,3,0,0,1,1
"org.andengine.engine.Engine.isSensorSupported(SensorManager,int)",2,6,n/a,3,0,2,1,1
"org.andengine.engine.Engine.onAccuracyChanged(Sensor,int)",7,0,n/a,20,3,2,14,6
"org.andengine.engine.Engine.onDestroy()",11,1,n/a,20,1,0,14,2
"org.andengine.engine.Engine.onDrawFrame(GLState)",9,1,n/a,15,1,1,11,1
"org.andengine.engine.Engine.onDrawScene(GLState,Camera)",2,1,n/a,6,1,2,3,2
"org.andengine.engine.Engine.onLocationChanged(Location)",2,1,n/a,13,2,1,6,3
"org.andengine.engine.Engine.onProviderDisabled(String)",1,0,n/a,4,0,1,1,1
"org.andengine.engine.Engine.onProviderEnabled(String)",1,0,n/a,4,0,1,1,1
"org.andengine.engine.Engine.onReloadResources()",4,1,n/a,6,0,0,4,1
"org.andengine.engine.Engine.onSensorChanged(SensorEvent)",7,0,n/a,20,3,1,14,6
"org.andengine.engine.Engine.onStatusChanged(String,int,Bundle)",3,0,n/a,14,1,3,10,4
"org.andengine.engine.Engine.onTickUpdate()",14,1,n/a,25,2,0,17,2
"org.andengine.engine.Engine.onTouch(View,MotionEvent)",5,0,n/a,15,2,2,7,3
"org.andengine.engine.Engine.onTouchEvent(TouchEvent)",5,1,n/a,16,1,1,6,2
"org.andengine.engine.Engine.onTouchHUD(Camera,TouchEvent)",3,1,n/a,7,1,2,3,2
"org.andengine.engine.Engine.onTouchScene(Scene,TouchEvent)",1,1,n/a,7,1,2,3,2
"org.andengine.engine.Engine.onUpdate(long)",3,4,n/a,8,0,1,6,1
"org.andengine.engine.Engine.onUpdateCameraSurface()",1,1,n/a,3,0,0,1,1
"org.andengine.engine.Engine.onUpdateDrawHandlers(GLState,Camera)",1,1,n/a,3,0,2,1,1
"org.andengine.engine.Engine.onUpdateScene(float)",1,2,n/a,5,1,1,2,2
"org.andengine.engine.Engine.onUpdateUpdateHandlers(float)",4,4,n/a,5,0,1,3,1
"org.andengine.engine.Engine.registerDrawHandler(IDrawHandler)",1,0,n/a,3,0,1,1,1
"org.andengine.engine.Engine.registerSelfAsSensorListener(SensorManager,int,SensorDelay)",4,3,n/a,4,0,3,2,1
"org.andengine.engine.Engine.registerUpdateHandler(IUpdateHandler)",1,0,n/a,3,0,1,1,1
"org.andengine.engine.Engine.runOnUpdateThread(Runnable)",1,2,n/a,3,0,1,1,1
"org.andengine.engine.Engine.runOnUpdateThread(Runnable,boolean)",2,3,n/a,14,1,2,3,2
"org.andengine.engine.Engine.runSafely(Runnable)",3,0,n/a,13,1,1,4,1
"org.andengine.engine.Engine.setScene(Scene)",0,2,n/a,3,0,1,1,1
"org.andengine.engine.Engine.setSurfaceSize(int,int)",1,1,n/a,5,0,2,3,1
"org.andengine.engine.Engine.setTouchController(ITouchController)",1,2,n/a,4,0,1,2,1
"org.andengine.engine.Engine.start()",1,1,n/a,6,1,0,3,2
"org.andengine.engine.Engine.startUpdateThread()",1,1,n/a,3,0,0,1,1
"org.andengine.engine.Engine.stop()",0,1,n/a,5,1,0,2,2
"org.andengine.engine.Engine.throwOnDestroyed()",1,3,n/a,5,1,0,2,2
"org.andengine.engine.Engine.unregisterDrawHandler(IDrawHandler)",1,0,n/a,3,0,1,1,1
"org.andengine.engine.Engine.unregisterSelfAsSensorListener(SensorManager,int)",3,3,n/a,4,0,2,2,1
"org.andengine.engine.Engine.unregisterUpdateHandler(IUpdateHandler)",1,0,n/a,3,0,1,1,1
"org.andengine.engine.Engine.vibrate(long)",2,0,n/a,7,1,1,3,2
"org.andengine.engine.Engine.vibrate(long[],int)",2,0,n/a,7,1,2,3,2
"org.andengine.engine.FixedStepEngine.FixedStepEngine(EngineOptions,int)",1,0,n/a,4,0,2,2,1
"org.andengine.engine.FixedStepEngine.onUpdate(long)",1,4,n/a,9,1,1,5,2
"org.andengine.engine.LimitedFPSEngine.LimitedFPSEngine(EngineOptions,int)",1,0,n/a,4,0,2,2,1
"org.andengine.engine.LimitedFPSEngine.onUpdate(long)",3,4,n/a,12,1,1,7,2
"org.andengine.engine.camera.BoundCamera.BoundCamera(float,float,float,float)",1,1,n/a,3,0,4,1,1
"org.andengine.engine.camera.BoundCamera.BoundCamera(float,float,float,float,float,float,float,float)",2,0,n/a,5,0,8,3,1
"org.andengine.engine.camera.BoundCamera.ensureInBounds()",7,2,n/a,15,1,0,9,3
"org.andengine.engine.camera.BoundCamera.getBoundedX(float)",2,1,n/a,23,2,1,11,4
"org.andengine.engine.camera.BoundCamera.getBoundedY(float)",2,1,n/a,23,2,1,11,4
"org.andengine.engine.camera.BoundCamera.getBoundsHeight()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.BoundCamera.getBoundsWidth()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.BoundCamera.getBoundsXMax()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.BoundCamera.getBoundsXMin()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.BoundCamera.getBoundsYMax()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.BoundCamera.getBoundsYMin()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.BoundCamera.isBoundsEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.BoundCamera.setBounds(float,float,float,float)",0,1,n/a,10,0,4,8,1
"org.andengine.engine.camera.BoundCamera.setBoundsEnabled(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.BoundCamera.setCenter(float,float)",2,6,n/a,7,1,2,3,2
"org.andengine.engine.camera.Camera.Camera(float,float,float,float)",1,3,n/a,3,0,4,1,1
"org.andengine.engine.camera.Camera.allocateUpdateHandlers()",1,1,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.applyCameraSceneRotation(TouchEvent)",4,1,n/a,9,1,1,6,2
"org.andengine.engine.camera.Camera.applyCameraSceneRotation(float[])",1,1,n/a,6,1,1,3,2
"org.andengine.engine.camera.Camera.applyRotation(GLState,float,float,float)",3,3,n/a,5,0,4,3,1
"org.andengine.engine.camera.Camera.applySceneRotation(TouchEvent)",6,1,n/a,9,1,1,6,2
"org.andengine.engine.camera.Camera.applySceneRotation(float[])",3,1,n/a,6,1,1,3,2
"org.andengine.engine.camera.Camera.applySceneToCameraSceneOffset(TouchEvent)",1,2,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.applySceneToCameraSceneOffset(float[])",0,2,n/a,4,0,1,2,1
"org.andengine.engine.camera.Camera.clearUpdateHandlers()",1,0,n/a,6,1,0,3,2
"org.andengine.engine.camera.Camera.convertAxisAlignedSceneToSurfaceTouchEvent(TouchEvent,int,int)",7,1,n/a,9,0,3,7,1
"org.andengine.engine.camera.Camera.convertAxisAlignedSurfaceToSceneTouchEvent(TouchEvent,float,float)",5,1,n/a,9,0,3,7,1
"org.andengine.engine.camera.Camera.convertCameraSceneToSceneTouchEvent(TouchEvent)",3,2,n/a,5,0,1,3,1
"org.andengine.engine.camera.Camera.convertSceneToCameraSceneTouchEvent(TouchEvent)",3,2,n/a,5,0,1,3,1
"org.andengine.engine.camera.Camera.convertSceneToSurfaceTouchEvent(TouchEvent,int,int)",8,1,n/a,14,1,3,9,3
"org.andengine.engine.camera.Camera.convertSurfaceToSceneTouchEvent(TouchEvent,int,int)",4,5,n/a,22,1,3,17,3
"org.andengine.engine.camera.Camera.getCameraSceneCoordinatesFromSceneCoordinates(float,float)",1,0,n/a,5,0,2,3,1
"org.andengine.engine.camera.Camera.getCameraSceneCoordinatesFromSceneCoordinates(float[])",3,1,n/a,6,0,1,4,1
"org.andengine.engine.camera.Camera.getCameraSceneRotation()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getCenterX()",0,18,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getCenterY()",0,18,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getHUD()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getHeight()",0,4,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getHeightRaw()",0,5,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getRotation()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getSceneCoordinatesFromCameraSceneCoordinates(float,float)",1,0,n/a,5,0,2,3,1
"org.andengine.engine.camera.Camera.getSceneCoordinatesFromCameraSceneCoordinates(float[])",3,1,n/a,6,0,1,4,1
"org.andengine.engine.camera.Camera.getSurfaceHeight()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getSurfaceWidth()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getSurfaceX()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getSurfaceY()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getWidth()",0,5,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getWidthRaw()",0,5,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getXMax()",0,8,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getXMin()",0,8,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getYMax()",0,8,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getYMin()",0,8,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getZFar()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.getZNear()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.hasHUD()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.isLineVisible(Line)",1,1,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.isRectangularShapeVisible(RectangularShape)",1,1,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.isRectangularShapeVisible(float,float,float,float,Transformation)",1,0,n/a,3,0,5,1,1
"org.andengine.engine.camera.Camera.isResizeOnSurfaceSizeChanged()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.isRotated()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.Camera.offsetCenter(float,float)",3,0,n/a,3,0,2,1,1
"org.andengine.engine.camera.Camera.onApplyCameraSceneMatrix(GLState)",4,1,n/a,9,1,1,6,2
"org.andengine.engine.camera.Camera.onApplySceneBackgroundMatrix(GLState)",4,1,n/a,9,1,1,6,2
"org.andengine.engine.camera.Camera.onApplySceneMatrix(GLState)",8,1,n/a,7,1,1,4,2
"org.andengine.engine.camera.Camera.onDrawHUD(GLState)",1,5,n/a,5,1,1,2,2
"org.andengine.engine.camera.Camera.onSurfaceSizeChanged(int,int,int,int,int,int,int,int)",5,1,n/a,21,1,8,18,2
"org.andengine.engine.camera.Camera.onSurfaceSizeInitialized(int,int,int,int)",0,1,n/a,6,0,4,4,1
"org.andengine.engine.camera.Camera.onUpdate(float)",3,11,n/a,10,1,1,5,3
"org.andengine.engine.camera.Camera.registerUpdateHandler(IUpdateHandler)",2,0,n/a,6,1,1,3,2
"org.andengine.engine.camera.Camera.reset()",0,4,n/a,3,0,0,0,1
"org.andengine.engine.camera.Camera.set(float,float,float,float)",0,2,n/a,6,0,4,4,1
"org.andengine.engine.camera.Camera.setCameraSceneRotation(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.setCenter(float,float)",2,4,n/a,8,0,2,6,1
"org.andengine.engine.camera.Camera.setChaseEntity(IEntity)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.setHUD(HUD)",1,1,n/a,6,1,1,3,2
"org.andengine.engine.camera.Camera.setResizeOnSurfaceSizeChanged(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.setRotation(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.setSurfaceSize(int,int,int,int)",2,5,n/a,7,1,4,4,5
"org.andengine.engine.camera.Camera.setXMax(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.setXMin(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.setYMax(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.setYMin(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.setZClippingPlanes(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.engine.camera.Camera.setZFar(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.setZNear(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.unapplyCameraSceneRotation(TouchEvent)",4,1,n/a,9,1,1,6,2
"org.andengine.engine.camera.Camera.unapplyCameraSceneRotation(float[])",1,1,n/a,6,1,1,3,2
"org.andengine.engine.camera.Camera.unapplySceneRotation(TouchEvent)",6,1,n/a,9,1,1,6,2
"org.andengine.engine.camera.Camera.unapplySceneRotation(float[])",3,1,n/a,6,1,1,3,2
"org.andengine.engine.camera.Camera.unapplySceneToCameraSceneOffset(TouchEvent)",1,2,n/a,3,0,1,1,1
"org.andengine.engine.camera.Camera.unapplySceneToCameraSceneOffset(float[])",0,2,n/a,4,0,1,2,1
"org.andengine.engine.camera.Camera.unregisterUpdateHandler(IUpdateHandler)",1,0,n/a,6,1,1,3,2
"org.andengine.engine.camera.Camera.unregisterUpdateHandlers(IUpdateHandlerMatcher)",1,0,n/a,6,1,1,3,2
"org.andengine.engine.camera.Camera.updateChaseEntity()",2,1,n/a,6,1,0,3,2
"org.andengine.engine.camera.CameraFactory.createPixelPerfectCamera(Context,float,float)",2,0,n/a,6,0,3,4,1
"org.andengine.engine.camera.CameraFactory.getDisplayMetrics(Context)",2,1,n/a,3,0,1,1,1
"org.andengine.engine.camera.SmoothCamera.SmoothCamera(float,float,float,float,float,float,float)",3,0,n/a,9,0,7,7,1
"org.andengine.engine.camera.SmoothCamera.getMaxVelocityX()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.SmoothCamera.getMaxVelocityY()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.SmoothCamera.getMaxZoomFactorChange()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.SmoothCamera.getTargetCenterX()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.SmoothCamera.getTargetCenterY()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.SmoothCamera.getTargetZoomFactor()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.SmoothCamera.limitToMaxVelocityX(float,float)",2,1,n/a,7,1,2,3,2
"org.andengine.engine.camera.SmoothCamera.limitToMaxVelocityY(float,float)",2,1,n/a,7,1,2,3,2
"org.andengine.engine.camera.SmoothCamera.limitToMaxZoomFactorChange(float,float)",2,1,n/a,7,1,2,3,2
"org.andengine.engine.camera.SmoothCamera.onSmoothZoomFinished()",0,2,n/a,2,0,0,0,1
"org.andengine.engine.camera.SmoothCamera.onSmoothZoomStarted()",0,1,n/a,2,0,0,0,1
"org.andengine.engine.camera.SmoothCamera.onUpdate(float)",10,11,n/a,27,2,1,19,5
"org.andengine.engine.camera.SmoothCamera.setCenter(float,float)",0,6,n/a,5,0,2,2,1
"org.andengine.engine.camera.SmoothCamera.setCenterDirect(float,float)",1,0,n/a,5,0,2,3,1
"org.andengine.engine.camera.SmoothCamera.setMaxVelocity(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.engine.camera.SmoothCamera.setMaxVelocityX(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.SmoothCamera.setMaxVelocityY(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.SmoothCamera.setMaxZoomFactorChange(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.SmoothCamera.setZoomFactor(float)",1,3,n/a,11,2,1,5,3
"org.andengine.engine.camera.SmoothCamera.setZoomFactorDirect(float)",3,0,n/a,10,1,1,6,2
"org.andengine.engine.camera.ZoomCamera.ZoomCamera(float,float,float,float)",1,1,n/a,3,0,4,1,1
"org.andengine.engine.camera.ZoomCamera.applySceneToCameraSceneOffset(TouchEvent)",7,2,n/a,11,1,1,7,2
"org.andengine.engine.camera.ZoomCamera.applySceneToCameraSceneOffset(float[])",4,2,n/a,8,1,1,4,2
"org.andengine.engine.camera.ZoomCamera.getHeight()",1,4,n/a,4,0,0,1,1
"org.andengine.engine.camera.ZoomCamera.getWidth()",1,5,n/a,4,0,0,1,1
"org.andengine.engine.camera.ZoomCamera.getXMax()",3,8,n/a,9,1,0,4,2
"org.andengine.engine.camera.ZoomCamera.getXMin()",3,8,n/a,9,1,0,4,2
"org.andengine.engine.camera.ZoomCamera.getYMax()",3,8,n/a,9,1,0,4,2
"org.andengine.engine.camera.ZoomCamera.getYMin()",3,8,n/a,9,1,0,4,2
"org.andengine.engine.camera.ZoomCamera.getZoomFactor()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.camera.ZoomCamera.setZoomFactor(float)",1,3,n/a,6,1,1,3,2
"org.andengine.engine.camera.ZoomCamera.unapplySceneToCameraSceneOffset(TouchEvent)",7,2,n/a,11,1,1,7,2
"org.andengine.engine.camera.ZoomCamera.unapplySceneToCameraSceneOffset(float[])",4,2,n/a,8,1,1,4,2
"org.andengine.engine.camera.hud.HUD.HUD()",2,1,n/a,4,0,0,2,1
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.AnalogOnScreenControl(float,float,Camera,ITextureRegion,ITextureRegion,float,VertexBufferObjectManager,IAnalogOnScreenControlListener)",2,0,n/a,4,0,8,2,1
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.AnalogOnScreenControl(float,float,Camera,ITextureRegion,ITextureRegion,float,long,VertexBufferObjectManager,IAnalogOnScreenControlListener)",2,0,n/a,4,0,9,2,1
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.IAnalogOnScreenControlListener.onControlClick(AnalogOnScreenControl)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.getOnScreenControlListener()",1,2,n/a,4,0,0,1,1
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.onClick(ClickDetector,int,float,float)",2,1,n/a,4,0,4,1,1
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.onHandleControlBaseTouched(TouchEvent,float,float)",2,2,n/a,5,0,3,2,1
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.onUpdateControlKnob(float,float)",5,22,n/a,9,1,2,4,2
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.setOnControlClickEnabled(boolean)",1,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.setOnControlClickMaximumMilliseconds(long)",1,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.BaseOnScreenControl(float,float,Camera,ITextureRegion,ITextureRegion,float,VertexBufferObjectManager,IOnScreenControlListener)",14,3,n/a,4,2,8,13,1
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.IOnScreenControlListener.onControlChange(BaseOnScreenControl,float,float)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.getControlBase()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.getControlKnob()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.getOnScreenControlListener()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.onHandleControlBaseLeft()",1,1,n/a,6,0,0,1,1
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.onHandleControlBaseTouched(TouchEvent,float,float)",5,2,n/a,27,2,3,21,7
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.onHandleControlKnobReleased()",1,2,n/a,6,0,0,1,1
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.onSceneTouchEvent(Scene,TouchEvent)",3,2,n/a,13,2,2,8,3
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.onUpdateControlKnob(float,float)",6,22,n/a,14,0,2,8,1
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.refreshControlKnobPosition()",1,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.updateControlKnob(float,float)",7,2,n/a,6,0,2,4,1
"org.andengine.engine.camera.hud.controls.DigitalOnScreenControl.DigitalOnScreenControl(float,float,Camera,ITextureRegion,ITextureRegion,float,VertexBufferObjectManager,IOnScreenControlListener)",1,0,n/a,3,0,8,1,1
"org.andengine.engine.camera.hud.controls.DigitalOnScreenControl.DigitalOnScreenControl(float,float,Camera,ITextureRegion,ITextureRegion,float,boolean,VertexBufferObjectManager,IOnScreenControlListener)",1,1,n/a,4,0,9,2,1
"org.andengine.engine.camera.hud.controls.DigitalOnScreenControl.isAllowDiagonal()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.camera.hud.controls.DigitalOnScreenControl.onUpdateControlKnob(float,float)",29,22,n/a,47,3,2,35,20
"org.andengine.engine.camera.hud.controls.DigitalOnScreenControl.setAllowDiagonal(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.camera.hud.controls.DigitalOnScreenControl.testDiagonalAngle(float,float)",0,9,n/a,3,0,2,1,2
"org.andengine.engine.handler.BaseEntityUpdateHandler.BaseEntityUpdateHandler(IEntity)",0,1,n/a,3,0,1,1,1
"org.andengine.engine.handler.BaseEntityUpdateHandler.getEntity()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.BaseEntityUpdateHandler.onUpdate(float)",1,9,n/a,4,0,1,1,1
"org.andengine.engine.handler.BaseEntityUpdateHandler.onUpdate(float,IEntity)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.andengine.engine.handler.BaseEntityUpdateHandler.reset()",0,4,n/a,3,0,0,0,1
"org.andengine.engine.handler.BaseEntityUpdateHandler.setEntity(IEntity)",0,1,n/a,3,0,1,1,1
"org.andengine.engine.handler.DrawHandlerList.DrawHandlerList()",0,0,n/a,2,0,0,0,1
"org.andengine.engine.handler.DrawHandlerList.DrawHandlerList(int)",1,1,n/a,3,0,1,1,1
"org.andengine.engine.handler.DrawHandlerList.onDraw(GLState,Camera)",3,9,n/a,7,1,2,5,2
"org.andengine.engine.handler.IDrawHandler.onDraw(GLState,Camera)",n/a,8,6,n/a,n/a,2,n/a,n/a
"org.andengine.engine.handler.IUpdateHandler.onUpdate(float)",n/a,7,21,n/a,n/a,1,n/a,n/a
"org.andengine.engine.handler.IUpdateHandler.reset()",n/a,4,29,n/a,n/a,0,n/a,n/a
"org.andengine.engine.handler.UpdateHandlerList.UpdateHandlerList()",0,0,n/a,2,0,0,0,1
"org.andengine.engine.handler.UpdateHandlerList.UpdateHandlerList(int)",1,3,n/a,3,0,1,1,1
"org.andengine.engine.handler.UpdateHandlerList.onUpdate(float)",3,10,n/a,7,1,1,5,2
"org.andengine.engine.handler.UpdateHandlerList.reset()",3,4,n/a,7,1,0,5,2
"org.andengine.engine.handler.collision.CollisionHandler.CollisionHandler(ICollisionCallback,IShape,ArrayList<? extends IShape>)",3,1,n/a,14,1,3,9,4
"org.andengine.engine.handler.collision.CollisionHandler.CollisionHandler(ICollisionCallback,IShape,IShape)",2,0,n/a,3,0,3,1,1
"org.andengine.engine.handler.collision.CollisionHandler.onUpdate(float)",5,7,n/a,14,3,1,10,4
"org.andengine.engine.handler.collision.CollisionHandler.reset()",0,4,n/a,3,0,0,0,1
"org.andengine.engine.handler.collision.ICollisionCallback.onCollision(IShape,IShape)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.andengine.engine.handler.physics.PhysicsHandler.PhysicsHandler(IEntity)",1,1,n/a,3,0,1,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.accelerate(float,float)",0,1,n/a,4,0,2,2,1
"org.andengine.engine.handler.physics.PhysicsHandler.getAccelerationX()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.getAccelerationY()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.getAngularVelocity()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.getVelocityX()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.getVelocityY()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.isEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.onUpdate(float,IEntity)",5,1,n/a,23,2,2,13,7
"org.andengine.engine.handler.physics.PhysicsHandler.reset()",0,5,n/a,8,0,0,5,1
"org.andengine.engine.handler.physics.PhysicsHandler.setAcceleration(float)",0,0,n/a,4,0,1,2,1
"org.andengine.engine.handler.physics.PhysicsHandler.setAcceleration(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.engine.handler.physics.PhysicsHandler.setAccelerationX(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.setAccelerationY(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.setAngularVelocity(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.setEnabled(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.setVelocity(float)",0,0,n/a,4,0,1,2,1
"org.andengine.engine.handler.physics.PhysicsHandler.setVelocity(float,float)",0,1,n/a,4,0,2,2,1
"org.andengine.engine.handler.physics.PhysicsHandler.setVelocityX(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.handler.physics.PhysicsHandler.setVelocityY(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.handler.runnable.RunnableHandler.onUpdate(float)",3,10,n/a,8,1,1,6,2
"org.andengine.engine.handler.runnable.RunnableHandler.postRunnable(Runnable)",1,7,n/a,3,0,1,1,1
"org.andengine.engine.handler.runnable.RunnableHandler.reset()",1,4,n/a,4,0,0,1,1
"org.andengine.engine.handler.timer.ITimerCallback.onTimePassed(TimerHandler)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.engine.handler.timer.TimerHandler.TimerHandler(float,ITimerCallback)",1,0,n/a,3,0,2,1,1
"org.andengine.engine.handler.timer.TimerHandler.TimerHandler(float,boolean,ITimerCallback)",1,3,n/a,8,1,3,5,2
"org.andengine.engine.handler.timer.TimerHandler.getTimerSeconds()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.timer.TimerHandler.getTimerSecondsElapsed()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.timer.TimerHandler.isAutoReset()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.timer.TimerHandler.isTimerCallbackTriggered()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.handler.timer.TimerHandler.onUpdate(float)",2,8,n/a,18,3,1,10,5
"org.andengine.engine.handler.timer.TimerHandler.reset()",0,6,n/a,5,0,0,2,1
"org.andengine.engine.handler.timer.TimerHandler.setAutoReset(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.handler.timer.TimerHandler.setTimerCallbackTriggered(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.handler.timer.TimerHandler.setTimerSeconds(float)",1,0,n/a,6,1,1,3,2
"org.andengine.engine.options.AudioOptions.getMusicOptions()",0,0,n/a,3,0,0,1,1
"org.andengine.engine.options.AudioOptions.getSoundOptions()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.AudioOptions.needsMusic()",1,3,n/a,3,0,0,1,1
"org.andengine.engine.options.AudioOptions.needsSound()",1,3,n/a,3,0,0,1,1
"org.andengine.engine.options.AudioOptions.setNeedsMusic(boolean)",1,0,n/a,4,0,1,2,1
"org.andengine.engine.options.AudioOptions.setNeedsSound(boolean)",1,0,n/a,4,0,1,2,1
"org.andengine.engine.options.EngineOptions.EngineOptions(boolean,ScreenOrientation,IResolutionPolicy,Camera)",0,0,n/a,6,0,4,4,1
"org.andengine.engine.options.EngineOptions.getAudioOptions()",0,7,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.getCamera()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.getEngineLock()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.getRenderOptions()",0,3,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.getResolutionPolicy()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.getScreenOrientation()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.getTouchOptions()",0,2,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.getUpdateThread()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.getUpdateThreadPriority()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.getWakeLockOptions()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.hasEngineLock()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.hasUpdateThread()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.isFullscreen()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.EngineOptions.setEngineLock(EngineLock)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.options.EngineOptions.setUpdateThread(UpdateThread)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.options.EngineOptions.setUpdateThreadPriority(int)",0,0,n/a,6,0,1,1,1
"org.andengine.engine.options.EngineOptions.setWakeLockOptions(WakeLockOptions)",0,0,n/a,4,0,1,2,1
"org.andengine.engine.options.MusicOptions.needsMusic()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.MusicOptions.setNeedsMusic(boolean)",0,1,n/a,4,0,1,2,1
"org.andengine.engine.options.RenderOptions.isDithering()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.RenderOptions.isMultiSampling()",0,2,n/a,3,0,0,1,1
"org.andengine.engine.options.RenderOptions.setDithering(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.options.RenderOptions.setMultiSampling(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.options.SoundOptions.getMaxSimultaneousStreams()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.SoundOptions.needsSound()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.SoundOptions.setMaxSimultaneousStreams(int)",0,0,n/a,4,0,1,2,1
"org.andengine.engine.options.SoundOptions.setNeedsSound(boolean)",0,1,n/a,4,0,1,2,1
"org.andengine.engine.options.TouchOptions.getTouchEventIntervalMilliseconds()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.TouchOptions.needsMultiTouch()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.TouchOptions.setNeedsMultiTouch(boolean)",0,0,n/a,4,0,1,2,1
"org.andengine.engine.options.TouchOptions.setTouchEventIntervalMilliseconds(long)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.options.WakeLockOptions.WakeLockOptions(int)",0,4,n/a,3,0,1,1,1
"org.andengine.engine.options.WakeLockOptions.getFlag()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.options.resolutionpolicy.BaseResolutionPolicy.throwOnNotMeasureSpecEXACTLY(int,int)",3,3,n/a,7,1,2,4,3
"org.andengine.engine.options.resolutionpolicy.FillResolutionPolicy.onMeasure(RenderSurfaceView,int,int)",4,1,n/a,7,0,3,4,1
"org.andengine.engine.options.resolutionpolicy.FixedResolutionPolicy.FixedResolutionPolicy(int,int)",0,0,n/a,4,0,2,2,1
"org.andengine.engine.options.resolutionpolicy.FixedResolutionPolicy.onMeasure(RenderSurfaceView,int,int)",1,1,n/a,4,0,3,1,1
"org.andengine.engine.options.resolutionpolicy.IResolutionPolicy.onMeasure(RenderSurfaceView,int,int)",n/a,1,4,n/a,n/a,3,n/a,n/a
"org.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy.RatioResolutionPolicy(float)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy.RatioResolutionPolicy(float,float)",0,0,n/a,3,0,2,1,1
"org.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy.onMeasure(RenderSurfaceView,int,int)",6,1,n/a,18,1,3,13,2
"org.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy.RelativeResolutionPolicy(float)",1,0,n/a,3,0,1,1,1
"org.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy.RelativeResolutionPolicy(float,float)",0,1,n/a,4,0,2,2,1
"org.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy.onMeasure(RenderSurfaceView,int,int)",4,1,n/a,7,0,3,4,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.DoubleSceneSplitScreenEngine(EngineOptions,Camera)",1,0,n/a,4,0,2,2,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.convertSurfaceToSceneTouchEvent(Camera,TouchEvent)",4,1,n/a,10,1,2,5,2
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.getCamera()",0,2,n/a,5,0,0,1,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.getCameraFromSurfaceTouchEvent(TouchEvent)",3,1,n/a,8,1,1,3,2
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.getFirstCamera()",0,3,n/a,3,0,0,1,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.getFirstScene()",1,1,n/a,3,0,0,1,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.getScene()",1,2,n/a,5,0,0,1,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.getSceneFromSurfaceTouchEvent(TouchEvent)",3,1,n/a,8,1,1,3,2
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.getSecondCamera()",0,4,n/a,3,0,0,1,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.getSecondScene()",0,1,n/a,3,0,0,1,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.onDrawScene(GLState,Camera)",11,1,n/a,23,1,2,16,3
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.onUpdateCameraSurface()",4,1,n/a,7,0,0,4,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.onUpdateScene(float)",2,2,n/a,7,1,1,3,2
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.onUpdateUpdateHandlers(float)",3,4,n/a,5,0,1,2,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.setFirstScene(Scene)",1,1,n/a,3,0,1,1,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.setScene(Scene)",1,2,n/a,5,0,1,1,1
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine.setSecondScene(Scene)",0,0,n/a,3,0,1,1,1
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine.SingleSceneSplitScreenEngine(EngineOptions,Camera)",1,0,n/a,4,0,2,2,1
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine.convertSurfaceToSceneTouchEvent(Camera,TouchEvent)",4,1,n/a,10,1,2,5,2
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine.getCamera()",0,2,n/a,5,0,0,1,1
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine.getCameraFromSurfaceTouchEvent(TouchEvent)",3,1,n/a,8,1,1,3,2
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine.getFirstCamera()",0,3,n/a,3,0,0,1,1
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine.getSecondCamera()",0,4,n/a,3,0,0,1,1
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine.onDrawScene(GLState,Camera)",11,1,n/a,25,2,2,15,2
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine.onUpdateCameraSurface()",4,1,n/a,7,0,0,4,1
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine.onUpdateUpdateHandlers(float)",3,4,n/a,5,0,1,2,1
"org.andengine.entity.Entity.Entity()",1,3,n/a,3,0,0,1,1
"org.andengine.entity.Entity.Entity(float,float)",0,4,n/a,4,0,2,2,1
"org.andengine.entity.Entity.allocateChildren()",1,1,n/a,3,0,0,1,1
"org.andengine.entity.Entity.allocateEntityModifiers()",1,1,n/a,3,0,0,1,1
"org.andengine.entity.Entity.allocateUpdateHandlers()",1,1,n/a,3,0,0,1,1
"org.andengine.entity.Entity.applyRotation(GLState)",3,1,n/a,13,1,1,7,2
"org.andengine.entity.Entity.applyScale(GLState)",3,1,n/a,11,1,1,8,3
"org.andengine.entity.Entity.applySkew(GLState)",3,1,n/a,11,1,1,8,3
"org.andengine.entity.Entity.applyTranslation(GLState)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.Entity.assertEntityHasNoParent(IEntity)",9,1,n/a,8,1,1,5,2
"org.andengine.entity.Entity.attachChild(IEntity)",5,7,n/a,10,1,1,6,2
"org.andengine.entity.Entity.callOnChildren(IEntityParameterCallable)",1,1,n/a,7,1,1,3,2
"org.andengine.entity.Entity.callOnChildren(IEntityParameterCallable,IEntityMatcher)",1,1,n/a,7,1,2,3,2
"org.andengine.entity.Entity.clearEntityModifiers()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.Entity.clearUpdateHandlers()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.Entity.convertLocalToSceneCoordinates(float,float)",1,3,n/a,7,0,2,1,1
"org.andengine.entity.Entity.convertLocalToSceneCoordinates(float,float,float[])",2,4,n/a,11,0,3,5,1
"org.andengine.entity.Entity.convertLocalToSceneCoordinates(float[])",1,1,n/a,7,0,1,1,1
"org.andengine.entity.Entity.convertLocalToSceneCoordinates(float[],float[])",2,2,n/a,11,0,2,5,1
"org.andengine.entity.Entity.convertSceneToLocalCoordinates(float,float)",1,1,n/a,7,0,2,1,1
"org.andengine.entity.Entity.convertSceneToLocalCoordinates(float,float,float[])",2,2,n/a,10,0,3,4,1
"org.andengine.entity.Entity.convertSceneToLocalCoordinates(float[])",1,1,n/a,7,0,1,1,1
"org.andengine.entity.Entity.convertSceneToLocalCoordinates(float[],float[])",2,2,n/a,10,0,2,4,1
"org.andengine.entity.Entity.detachChild(IEntity)",1,3,n/a,7,1,1,3,2
"org.andengine.entity.Entity.detachChild(IEntityMatcher)",1,1,n/a,7,1,1,3,2
"org.andengine.entity.Entity.detachChild(int)",5,1,n/a,14,2,1,10,4
"org.andengine.entity.Entity.detachChildren()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.Entity.detachChildren(IEntityMatcher)",1,1,n/a,7,1,1,3,2
"org.andengine.entity.Entity.detachSelf()",1,2,n/a,9,1,0,4,2
"org.andengine.entity.Entity.dispose()",1,5,n/a,8,1,0,3,2
"org.andengine.entity.Entity.draw(GLState,Camera)",0,2,n/a,6,0,2,0,1
"org.andengine.entity.Entity.finalize()",2,0,n/a,7,1,0,3,2
"org.andengine.entity.Entity.getAlpha()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getBlue()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getChildByIndex(int)",1,1,n/a,7,1,1,3,2
"org.andengine.entity.Entity.getChildByMatcher(IEntityMatcher)",1,1,n/a,7,1,1,3,2
"org.andengine.entity.Entity.getChildByTag(int)",3,1,n/a,13,2,1,9,4
"org.andengine.entity.Entity.getChildCount()",1,5,n/a,7,1,0,3,2
"org.andengine.entity.Entity.getColor()",0,16,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getEntityModifierCount()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.Entity.getFirstChild()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.Entity.getGreen()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getLastChild()",2,1,n/a,7,1,0,3,2
"org.andengine.entity.Entity.getLocalToParentTransformation()",12,6,n/a,45,2,0,31,8
"org.andengine.entity.Entity.getLocalToSceneTransformation()",5,7,n/a,14,1,0,8,3
"org.andengine.entity.Entity.getParent()",0,2,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getParentToLocalTransformation()",12,2,n/a,43,2,0,31,8
"org.andengine.entity.Entity.getRed()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getRotation()",0,3,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getRotationCenterX()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getRotationCenterY()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getScaleCenterX()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getScaleCenterY()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getScaleX()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getScaleY()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getSceneCenterCoordinates()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getSceneCenterCoordinates(float[])",1,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.getSceneToLocalTransformation()",5,4,n/a,14,1,0,8,3
"org.andengine.entity.Entity.getSkewCenterX()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getSkewCenterY()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getSkewX()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getSkewY()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getTag()",0,4,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getUpdateHandlerCount()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.Entity.getUserData()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getX()",0,12,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getY()",0,12,n/a,4,0,0,1,1
"org.andengine.entity.Entity.getZIndex()",0,4,n/a,4,0,0,1,1
"org.andengine.entity.Entity.hasParent()",0,2,n/a,4,0,0,1,1
"org.andengine.entity.Entity.isChildrenIgnoreUpdate()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.isChildrenVisible()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.isCulled(Camera)",0,2,n/a,4,0,1,1,1
"org.andengine.entity.Entity.isCullingEnabled()",0,2,n/a,4,0,0,1,1
"org.andengine.entity.Entity.isDisposed()",0,3,n/a,4,0,0,1,1
"org.andengine.entity.Entity.isIgnoreUpdate()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.isRotated()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.Entity.isRotatedOrScaledOrSkewed()",0,5,n/a,4,0,0,1,5
"org.andengine.entity.Entity.isScaled()",0,1,n/a,4,0,0,1,2
"org.andengine.entity.Entity.isSkewed()",0,1,n/a,4,0,0,1,2
"org.andengine.entity.Entity.isVisible()",0,6,n/a,4,0,0,1,1
"org.andengine.entity.Entity.onApplyTransformations(GLState)",4,1,n/a,10,0,1,4,1
"org.andengine.entity.Entity.onAttached()",0,2,n/a,3,0,0,0,1
"org.andengine.entity.Entity.onDetached()",0,2,n/a,3,0,0,0,1
"org.andengine.entity.Entity.onDraw(GLState,Camera)",2,17,n/a,6,1,2,2,4
"org.andengine.entity.Entity.onManagedDraw(GLState,Camera)",17,2,n/a,40,5,2,25,7
"org.andengine.entity.Entity.onManagedUpdate(float)",5,5,n/a,15,2,1,11,6
"org.andengine.entity.Entity.onUpdate(float)",1,11,n/a,6,1,1,2,2
"org.andengine.entity.Entity.onUpdateColor()",0,7,n/a,2,0,0,0,1
"org.andengine.entity.Entity.postDraw(GLState,Camera)",0,2,n/a,6,0,2,0,1
"org.andengine.entity.Entity.preDraw(GLState,Camera)",0,2,n/a,6,0,2,0,1
"org.andengine.entity.Entity.query(IEntityMatcher)",2,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.query(IEntityMatcher,L)",5,3,n/a,12,2,2,9,3
"org.andengine.entity.Entity.queryFirst(IEntityMatcher)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.queryFirstForSubclass(IEntityMatcher)",4,3,n/a,16,2,1,11,4
"org.andengine.entity.Entity.queryForSubclass(IEntityMatcher)",2,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.queryForSubclass(IEntityMatcher,L)",5,3,n/a,13,2,2,9,3
"org.andengine.entity.Entity.registerEntityModifier(IEntityModifier)",2,2,n/a,7,1,1,3,2
"org.andengine.entity.Entity.registerUpdateHandler(IUpdateHandler)",2,3,n/a,7,1,1,3,2
"org.andengine.entity.Entity.reset()",5,7,n/a,23,2,0,19,4
"org.andengine.entity.Entity.setAlpha(float)",2,7,n/a,9,1,1,2,2
"org.andengine.entity.Entity.setBlue(float)",2,1,n/a,9,1,1,2,2
"org.andengine.entity.Entity.setChildrenIgnoreUpdate(boolean)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.setChildrenVisible(boolean)",0,13,n/a,4,0,1,1,1
"org.andengine.entity.Entity.setColor(Color)",2,5,n/a,5,0,1,2,1
"org.andengine.entity.Entity.setColor(float,float,float)",2,6,n/a,11,1,3,2,2
"org.andengine.entity.Entity.setColor(float,float,float,float)",2,1,n/a,12,1,4,2,2
"org.andengine.entity.Entity.setCullingEnabled(boolean)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.setGreen(float)",2,1,n/a,9,1,1,2,2
"org.andengine.entity.Entity.setIgnoreUpdate(boolean)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.setParent(IEntity)",0,3,n/a,4,0,1,1,1
"org.andengine.entity.Entity.setPosition(IEntity)",3,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.setPosition(float,float)",0,19,n/a,7,0,2,4,1
"org.andengine.entity.Entity.setRed(float)",2,1,n/a,9,1,1,2,2
"org.andengine.entity.Entity.setRotation(float)",0,8,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setRotationCenter(float,float)",0,2,n/a,7,0,2,4,1
"org.andengine.entity.Entity.setRotationCenterX(float)",0,1,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setRotationCenterY(float)",0,1,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setScale(float)",0,4,n/a,7,0,1,4,1
"org.andengine.entity.Entity.setScale(float,float)",0,5,n/a,7,0,2,4,1
"org.andengine.entity.Entity.setScaleCenter(float,float)",0,3,n/a,7,0,2,4,1
"org.andengine.entity.Entity.setScaleCenterX(float)",0,1,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setScaleCenterY(float)",0,1,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setScaleX(float)",0,1,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setScaleY(float)",0,1,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setSkew(float)",0,1,n/a,7,0,1,4,1
"org.andengine.entity.Entity.setSkew(float,float)",0,3,n/a,7,0,2,4,1
"org.andengine.entity.Entity.setSkewCenter(float,float)",0,1,n/a,7,0,2,4,1
"org.andengine.entity.Entity.setSkewCenterX(float)",0,1,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setSkewCenterY(float)",0,1,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setSkewX(float)",0,3,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setSkewY(float)",0,3,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setTag(int)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.setUserData(Object)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.setVisible(boolean)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.setX(float)",0,4,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setY(float)",0,4,n/a,6,0,1,3,1
"org.andengine.entity.Entity.setZIndex(int)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.Entity.sortChildren()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.Entity.sortChildren(IEntityComparator)",2,1,n/a,7,1,1,3,2
"org.andengine.entity.Entity.sortChildren(boolean)",2,2,n/a,11,1,1,5,3
"org.andengine.entity.Entity.toString()",3,0,n/a,6,0,0,3,1
"org.andengine.entity.Entity.toString(StringBuilder)",11,3,n/a,15,3,1,11,5
"org.andengine.entity.Entity.unregisterEntityModifier(IEntityModifier)",1,1,n/a,7,1,1,3,2
"org.andengine.entity.Entity.unregisterEntityModifiers(IEntityModifierMatcher)",1,1,n/a,7,1,1,3,2
"org.andengine.entity.Entity.unregisterUpdateHandler(IUpdateHandler)",1,1,n/a,7,1,1,3,2
"org.andengine.entity.Entity.unregisterUpdateHandlers(IUpdateHandlerMatcher)",1,1,n/a,7,1,1,3,2
"org.andengine.entity.IEntity.attachChild(IEntity)",n/a,2,3,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.callOnChildren(IEntityParameterCallable)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.callOnChildren(IEntityParameterCallable,IEntityMatcher)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.clearEntityModifiers()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.clearUpdateHandlers()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.convertLocalToSceneCoordinates(float,float)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.convertLocalToSceneCoordinates(float,float,float[])",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.andengine.entity.IEntity.convertLocalToSceneCoordinates(float[])",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.convertLocalToSceneCoordinates(float[],float[])",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.convertSceneToLocalCoordinates(float,float)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.convertSceneToLocalCoordinates(float,float,float[])",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.andengine.entity.IEntity.convertSceneToLocalCoordinates(float[])",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.convertSceneToLocalCoordinates(float[],float[])",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.detachChild(IEntity)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.detachChild(IEntityMatcher)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.detachChild(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.detachChildren()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.detachChildren(IEntityMatcher)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.detachSelf()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getAlpha()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getBlue()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getChildByIndex(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.getChildByMatcher(IEntityMatcher)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.getChildByTag(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.getChildCount()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getColor()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getEntityModifierCount()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getFirstChild()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getGreen()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getLastChild()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getLocalToParentTransformation()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getLocalToSceneTransformation()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getParent()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getParentToLocalTransformation()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getRed()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getRotation()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getRotationCenterX()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getRotationCenterY()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getScaleCenterX()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getScaleCenterY()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getScaleX()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getScaleY()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getSceneCenterCoordinates()",n/a,2,4,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getSceneCenterCoordinates(float[])",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.getSceneToLocalTransformation()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getSkewCenterX()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getSkewCenterY()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getSkewX()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getSkewY()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getTag()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getUpdateHandlerCount()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getUserData()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getX()",n/a,9,3,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getY()",n/a,9,3,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.getZIndex()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.hasParent()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.isChildrenIgnoreUpdate()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.isChildrenVisible()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.isCulled(Camera)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.isCullingEnabled()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.isIgnoreUpdate()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.isRotated()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.isRotatedOrScaledOrSkewed()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.isScaled()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.isSkewed()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.isVisible()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.onAttached()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.onDetached()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.query(IEntityMatcher)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.query(IEntityMatcher,L)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.queryFirst(IEntityMatcher)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.queryFirstForSubclass(IEntityMatcher)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.queryForSubclass(IEntityMatcher)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.queryForSubclass(IEntityMatcher,L)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.registerEntityModifier(IEntityModifier)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.registerUpdateHandler(IUpdateHandler)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setAlpha(float)",n/a,7,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setBlue(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setChildrenIgnoreUpdate(boolean)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setChildrenVisible(boolean)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setColor(Color)",n/a,5,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setColor(float,float,float)",n/a,6,2,n/a,n/a,3,n/a,n/a
"org.andengine.entity.IEntity.setColor(float,float,float,float)",n/a,1,2,n/a,n/a,4,n/a,n/a
"org.andengine.entity.IEntity.setCullingEnabled(boolean)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setGreen(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setIgnoreUpdate(boolean)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setParent(IEntity)",n/a,3,3,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setPosition(IEntity)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setPosition(float,float)",n/a,15,3,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.setRed(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setRotation(float)",n/a,8,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setRotationCenter(float,float)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.setRotationCenterX(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setRotationCenterY(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setScale(float)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setScale(float,float)",n/a,5,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.setScaleCenter(float,float)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.setScaleCenterX(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setScaleCenterY(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setScaleX(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setScaleY(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setSkew(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setSkew(float,float)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.setSkewCenter(float,float)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntity.setSkewCenterX(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setSkewCenterY(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setSkewX(float)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setSkewY(float)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setTag(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setUserData(Object)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setVisible(boolean)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setX(float)",n/a,3,3,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setY(float)",n/a,3,3,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.setZIndex(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.sortChildren()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.IEntity.sortChildren(IEntityComparator)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.sortChildren(boolean)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.toString(StringBuilder)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.unregisterEntityModifier(IEntityModifier)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.unregisterEntityModifiers(IEntityModifierMatcher)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.unregisterUpdateHandler(IUpdateHandler)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntity.unregisterUpdateHandlers(IUpdateHandlerMatcher)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntityFactory.create(float,float)",n/a,1,3,n/a,n/a,2,n/a,n/a
"org.andengine.entity.IEntityMatcher.matches(IEntity)",n/a,18,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.IEntityParameterCallable.call(IEntity)",n/a,8,0,n/a,n/a,1,n/a,n/a
"org.andengine.entity.TagEntityMatcher.TagEntityMatcher(int)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.TagEntityMatcher.getTag()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.TagEntityMatcher.matches(IEntity)",1,18,n/a,4,0,1,1,1
"org.andengine.entity.TagEntityMatcher.setTag(int)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.ZIndexSorter.ZIndexSorter()",0,1,n/a,2,0,0,0,1
"org.andengine.entity.ZIndexSorter.getInstance()",1,3,n/a,6,1,0,3,2
"org.andengine.entity.ZIndexSorter.sort(IEntity[])",1,0,n/a,3,0,1,1,1
"org.andengine.entity.ZIndexSorter.sort(IEntity[],int,int)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.ZIndexSorter.sort(IList<IEntity>)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.ZIndexSorter.sort(IList<IEntity>,int,int)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.ZIndexSorter.sort(List<IEntity>)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.ZIndexSorter.sort(List<IEntity>,int,int)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.AlphaModifier.AlphaModifier(AlphaModifier)",1,3,n/a,3,0,1,1,1
"org.andengine.entity.modifier.AlphaModifier.AlphaModifier(float,float,float)",2,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.AlphaModifier.AlphaModifier(float,float,float,IEaseFunction)",1,5,n/a,3,0,4,1,1
"org.andengine.entity.modifier.AlphaModifier.AlphaModifier(float,float,float,IEntityModifierListener)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.AlphaModifier.AlphaModifier(float,float,float,IEntityModifierListener,IEaseFunction)",1,6,n/a,3,0,5,1,1
"org.andengine.entity.modifier.AlphaModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.AlphaModifier.onSetInitialValue(IEntity,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.modifier.AlphaModifier.onSetValue(IEntity,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifier(float,CardinalSplineMoveModifierConfig)",2,1,n/a,3,0,2,1,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifier(float,CardinalSplineMoveModifierConfig,IEaseFunction)",1,3,n/a,3,0,3,1,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifier(float,CardinalSplineMoveModifierConfig,IEntityModifierListener)",2,1,n/a,3,0,3,1,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifier(float,CardinalSplineMoveModifierConfig,IEntityModifierListener,IEaseFunction)",2,4,n/a,7,0,4,5,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifierConfig.CardinalSplineMoveModifierConfig(int,float)",2,2,n/a,12,1,2,5,2
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifierConfig.deepCopy()",4,2,n/a,7,0,0,5,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifierConfig.deepCopyReverse()",3,1,n/a,6,0,0,4,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifierConfig.getControlPointCount()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifierConfig.getControlPointX(int)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifierConfig.getControlPointY(int)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifierConfig.setControlPoint(int,float,float)",0,0,n/a,4,0,3,2,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.cardinalSplineX(float,float,float,float,float,float)",0,0,n/a,11,0,6,9,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.cardinalSplineY(float,float,float,float,float,float)",0,0,n/a,11,0,6,9,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.deepCopy()",2,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.onManagedInitialize(IEntity)",0,1,n/a,3,0,1,0,1
"org.andengine.entity.modifier.CardinalSplineMoveModifier.onManagedUpdate(float,IEntity)",7,1,n/a,39,1,2,28,2
"org.andengine.entity.modifier.CardinalSplineMoveModifier.reverse()",2,0,n/a,3,0,0,1,1
"org.andengine.entity.modifier.CatmullRomSplineMoveModifier.CatmullRomMoveModifierConfig.CatmullRomMoveModifierConfig(int)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.CatmullRomSplineMoveModifier.CatmullRomSplineMoveModifier(float,CatmullRomMoveModifierConfig)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.CatmullRomSplineMoveModifier.CatmullRomSplineMoveModifier(float,CatmullRomMoveModifierConfig,IEaseFunction)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.CatmullRomSplineMoveModifier.CatmullRomSplineMoveModifier(float,CatmullRomMoveModifierConfig,IEntityModifierListener)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.CatmullRomSplineMoveModifier.CatmullRomSplineMoveModifier(float,CatmullRomMoveModifierConfig,IEntityModifierListener,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.ColorModifier.ColorModifier(ColorModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.ColorModifier.ColorModifier(float,Color,Color)",8,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.ColorModifier.ColorModifier(float,Color,Color,IEaseFunction)",7,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.ColorModifier.ColorModifier(float,Color,Color,IEntityModifierListener)",8,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.ColorModifier.ColorModifier(float,Color,Color,IEntityModifierListener,IEaseFunction)",7,0,n/a,3,0,5,1,1
"org.andengine.entity.modifier.ColorModifier.ColorModifier(float,float,float,float,float,float,float)",2,0,n/a,3,0,7,1,1
"org.andengine.entity.modifier.ColorModifier.ColorModifier(float,float,float,float,float,float,float,IEaseFunction)",1,0,n/a,3,0,8,1,1
"org.andengine.entity.modifier.ColorModifier.ColorModifier(float,float,float,float,float,float,float,IEntityModifierListener)",2,0,n/a,3,0,8,1,1
"org.andengine.entity.modifier.ColorModifier.ColorModifier(float,float,float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,4,n/a,3,0,9,1,1
"org.andengine.entity.modifier.ColorModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.ColorModifier.onSetInitialValues(IEntity,float,float,float)",1,1,n/a,4,0,4,1,1
"org.andengine.entity.modifier.ColorModifier.onSetValues(IEntity,float,float,float,float)",1,1,n/a,4,0,5,1,1
"org.andengine.entity.modifier.CubicBezierCurveMoveModifier.CubicBezierCurveMoveModifier(float,float,float,float,float,float,float,float,float)",2,0,n/a,14,0,9,1,1
"org.andengine.entity.modifier.CubicBezierCurveMoveModifier.CubicBezierCurveMoveModifier(float,float,float,float,float,float,float,float,float,IEaseFunction)",1,1,n/a,15,0,10,1,1
"org.andengine.entity.modifier.CubicBezierCurveMoveModifier.CubicBezierCurveMoveModifier(float,float,float,float,float,float,float,float,float,IEntityModifierListener)",2,0,n/a,15,0,10,1,1
"org.andengine.entity.modifier.CubicBezierCurveMoveModifier.CubicBezierCurveMoveModifier(float,float,float,float,float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,3,n/a,25,0,11,10,1
"org.andengine.entity.modifier.CubicBezierCurveMoveModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.CubicBezierCurveMoveModifier.onManagedInitialize(IEntity)",0,1,n/a,3,0,1,0,1
"org.andengine.entity.modifier.CubicBezierCurveMoveModifier.onManagedUpdate(float,IEntity)",3,1,n/a,17,0,2,11,1
"org.andengine.entity.modifier.DelayModifier.DelayModifier(DelayModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.DelayModifier.DelayModifier(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.DelayModifier.DelayModifier(float,IEntityModifierListener)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.DelayModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.DelayModifier.onManagedInitialize(IEntity)",0,1,n/a,3,0,1,0,1
"org.andengine.entity.modifier.DelayModifier.onManagedUpdate(float,IEntity)",0,1,n/a,3,0,2,0,1
"org.andengine.entity.modifier.DoubleValueChangeEntityModifier.DoubleValueChangeEntityModifier(DoubleValueChangeEntityModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.DoubleValueChangeEntityModifier.DoubleValueChangeEntityModifier(float,float,float)",1,1,n/a,3,0,3,1,1
"org.andengine.entity.modifier.DoubleValueChangeEntityModifier.DoubleValueChangeEntityModifier(float,float,float,IEntityModifierListener)",1,1,n/a,3,0,4,1,1
"org.andengine.entity.modifier.DoubleValueSpanEntityModifier.DoubleValueSpanEntityModifier(DoubleValueSpanEntityModifier)",1,3,n/a,3,0,1,1,1
"org.andengine.entity.modifier.DoubleValueSpanEntityModifier.DoubleValueSpanEntityModifier(float,float,float,float,float)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.modifier.DoubleValueSpanEntityModifier.DoubleValueSpanEntityModifier(float,float,float,float,float,IEaseFunction)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.DoubleValueSpanEntityModifier.DoubleValueSpanEntityModifier(float,float,float,float,float,IEntityModifierListener)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.DoubleValueSpanEntityModifier.DoubleValueSpanEntityModifier(float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,6,n/a,3,0,7,1,1
"org.andengine.entity.modifier.DurationEntityModifier.DurationEntityModifier(DurationEntityModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.DurationEntityModifier.DurationEntityModifier(float)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.DurationEntityModifier.DurationEntityModifier(float,IEntityModifierListener)",1,4,n/a,3,0,2,1,1
"org.andengine.entity.modifier.EntityModifier.EntityModifier()",1,1,n/a,3,0,0,1,1
"org.andengine.entity.modifier.EntityModifier.EntityModifier(IEntityModifierListener)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.EntityModifierList.EntityModifierList(IEntity)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.EntityModifierList.EntityModifierList(IEntity,int)",1,1,n/a,3,0,2,1,1
"org.andengine.entity.modifier.FadeInModifier.FadeInModifier(FadeInModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.FadeInModifier.FadeInModifier(float)",2,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.FadeInModifier.FadeInModifier(float,IEaseFunction)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.FadeInModifier.FadeInModifier(float,IEntityModifierListener)",2,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.FadeInModifier.FadeInModifier(float,IEntityModifierListener,IEaseFunction)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.FadeInModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.FadeOutModifier.FadeOutModifier(FadeOutModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.FadeOutModifier.FadeOutModifier(float)",2,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.FadeOutModifier.FadeOutModifier(float,IEaseFunction)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.FadeOutModifier.FadeOutModifier(float,IEntityModifierListener)",2,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.FadeOutModifier.FadeOutModifier(float,IEntityModifierListener,IEaseFunction)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.FadeOutModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.IEntityModifier.deepCopy()",n/a,3,25,n/a,n/a,0,n/a,n/a
"org.andengine.entity.modifier.JumpModifier.JumpModifier(JumpModifier)",1,1,n/a,5,0,1,3,1
"org.andengine.entity.modifier.JumpModifier.JumpModifier(float,float,float,float,float,float)",2,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.JumpModifier.JumpModifier(float,float,float,float,float,float,IEaseFunction)",1,0,n/a,3,0,7,1,1
"org.andengine.entity.modifier.JumpModifier.JumpModifier(float,float,float,float,float,float,IEntityModifierListener)",2,0,n/a,3,0,7,1,1
"org.andengine.entity.modifier.JumpModifier.JumpModifier(float,float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,0,n/a,3,0,8,1,1
"org.andengine.entity.modifier.JumpModifier.JumpModifier(float,float,float,float,float,float,int)",2,0,n/a,3,0,7,1,1
"org.andengine.entity.modifier.JumpModifier.JumpModifier(float,float,float,float,float,float,int,IEaseFunction)",1,3,n/a,3,0,8,1,1
"org.andengine.entity.modifier.JumpModifier.JumpModifier(float,float,float,float,float,float,int,IEntityModifierListener)",2,0,n/a,3,0,8,1,1
"org.andengine.entity.modifier.JumpModifier.JumpModifier(float,float,float,float,float,float,int,IEntityModifierListener,IEaseFunction)",1,4,n/a,5,0,9,3,1
"org.andengine.entity.modifier.JumpModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.JumpModifier.onSetValues(IEntity,float,float,float)",1,2,n/a,6,0,4,3,1
"org.andengine.entity.modifier.LoopEntityModifier.LoopEntityModifier(IEntityModifier)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.LoopEntityModifier.LoopEntityModifier(IEntityModifier,int)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.LoopEntityModifier.LoopEntityModifier(IEntityModifier,int,IEntityModifierListener)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.LoopEntityModifier.LoopEntityModifier(IEntityModifier,int,ILoopEntityModifierListener)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.LoopEntityModifier.LoopEntityModifier(IEntityModifierListener,int,ILoopEntityModifierListener,IEntityModifier)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.LoopEntityModifier.LoopEntityModifier(LoopEntityModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.LoopEntityModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.MoveByModifier.MoveByModifier(DoubleValueChangeEntityModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.MoveByModifier.MoveByModifier(float,float,float)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.MoveByModifier.MoveByModifier(float,float,float,IEntityModifierListener)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.MoveByModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.MoveByModifier.onChangeValues(float,IEntity,float,float)",3,1,n/a,4,0,4,1,1
"org.andengine.entity.modifier.MoveModifier.MoveModifier(MoveModifier)",1,2,n/a,3,0,1,1,1
"org.andengine.entity.modifier.MoveModifier.MoveModifier(float,float,float,float,float)",2,0,n/a,3,0,5,1,1
"org.andengine.entity.modifier.MoveModifier.MoveModifier(float,float,float,float,float,IEaseFunction)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.modifier.MoveModifier.MoveModifier(float,float,float,float,float,IEntityModifierListener)",2,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.MoveModifier.MoveModifier(float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,4,n/a,3,0,7,1,1
"org.andengine.entity.modifier.MoveModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.MoveModifier.onSetInitialValues(IEntity,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.MoveModifier.onSetValues(IEntity,float,float,float)",1,2,n/a,4,0,4,1,1
"org.andengine.entity.modifier.MoveXModifier.MoveXModifier(MoveXModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.MoveXModifier.MoveXModifier(float,float,float)",2,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.MoveXModifier.MoveXModifier(float,float,float,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.MoveXModifier.MoveXModifier(float,float,float,IEntityModifierListener)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.MoveXModifier.MoveXModifier(float,float,float,IEntityModifierListener,IEaseFunction)",1,2,n/a,3,0,5,1,1
"org.andengine.entity.modifier.MoveXModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.MoveXModifier.onSetInitialValue(IEntity,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.modifier.MoveXModifier.onSetValue(IEntity,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.MoveYModifier.MoveYModifier(MoveYModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.MoveYModifier.MoveYModifier(float,float,float)",2,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.MoveYModifier.MoveYModifier(float,float,float,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.MoveYModifier.MoveYModifier(float,float,float,IEntityModifierListener)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.MoveYModifier.MoveYModifier(float,float,float,IEntityModifierListener,IEaseFunction)",1,2,n/a,3,0,5,1,1
"org.andengine.entity.modifier.MoveYModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.MoveYModifier.onSetInitialValue(IEntity,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.modifier.MoveYModifier.onSetValue(IEntity,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.ParallelEntityModifier.ParallelEntityModifier(IEntityModifier...)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.ParallelEntityModifier.ParallelEntityModifier(IEntityModifierListener,IEntityModifier...)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.ParallelEntityModifier.ParallelEntityModifier(ParallelEntityModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.ParallelEntityModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.PathModifier.IPathModifierListener.onPathFinished(PathModifier,IEntity)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.andengine.entity.modifier.PathModifier.IPathModifierListener.onPathStarted(PathModifier,IEntity)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.andengine.entity.modifier.PathModifier.IPathModifierListener.onPathWaypointFinished(PathModifier,IEntity,int)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.andengine.entity.modifier.PathModifier.IPathModifierListener.onPathWaypointStarted(PathModifier,IEntity,int)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.andengine.entity.modifier.PathModifier.Path.Path(Path)",3,1,n/a,10,0,1,8,1
"org.andengine.entity.modifier.PathModifier.Path.Path(float[],float[])",1,0,n/a,9,1,2,6,2
"org.andengine.entity.modifier.PathModifier.Path.Path(int)",0,0,n/a,6,0,1,4,1
"org.andengine.entity.modifier.PathModifier.Path.deepCopy()",1,1,n/a,3,0,0,1,1
"org.andengine.entity.modifier.PathModifier.Path.getCoordinatesX()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.modifier.PathModifier.Path.getCoordinatesY()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.modifier.PathModifier.Path.getLength()",1,1,n/a,6,1,0,3,2
"org.andengine.entity.modifier.PathModifier.Path.getSegmentLength(int)",1,2,n/a,8,0,1,6,1
"org.andengine.entity.modifier.PathModifier.Path.getSize()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.modifier.PathModifier.Path.to(float,float)",0,0,n/a,7,0,2,5,1
"org.andengine.entity.modifier.PathModifier.Path.updateLength()",1,1,n/a,7,1,0,6,2
"org.andengine.entity.modifier.PathModifier.PathModifier(PathModifier)",2,1,n/a,4,0,1,2,1
"org.andengine.entity.modifier.PathModifier.PathModifier(float,Path)",2,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.PathModifier.PathModifier(float,Path,IEaseFunction)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.PathModifier.PathModifier(float,Path,IEntityModifierListener)",2,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.PathModifier.PathModifier(float,Path,IEntityModifierListener,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.PathModifier.PathModifier(float,Path,IEntityModifierListener,IPathModifierListener)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.PathModifier.PathModifier(float,Path,IEntityModifierListener,IPathModifierListener,IEaseFunction)",17,7,n/a,7,3,5,27,7
"org.andengine.entity.modifier.PathModifier.PathModifier(float,Path,IPathModifierListener)",2,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.PathModifier.PathModifier(float,Path,IPathModifierListener,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.PathModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.PathModifier.getDuration()",1,6,n/a,4,0,0,1,1
"org.andengine.entity.modifier.PathModifier.getPath()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.modifier.PathModifier.getPathModifierListener()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.modifier.PathModifier.getSecondsElapsed()",1,0,n/a,4,0,0,1,1
"org.andengine.entity.modifier.PathModifier.isFinished()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.PathModifier.onUpdate(float,IEntity)",1,4,n/a,4,0,2,1,1
"org.andengine.entity.modifier.PathModifier.reset()",1,6,n/a,4,0,0,1,1
"org.andengine.entity.modifier.PathModifier.setPathModifierListener(IPathModifierListener)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier.QuadraticBezierCurveMoveModifier(float,float,float,float,float,float,float)",2,0,n/a,12,0,7,1,1
"org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier.QuadraticBezierCurveMoveModifier(float,float,float,float,float,float,float,IEaseFunction)",1,1,n/a,13,0,8,1,1
"org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier.QuadraticBezierCurveMoveModifier(float,float,float,float,float,float,float,IEaseFunction,IEntityModifierListener)",1,3,n/a,21,0,9,8,1
"org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier.QuadraticBezierCurveMoveModifier(float,float,float,float,float,float,float,IEntityModifierListener)",2,0,n/a,13,0,8,1,1
"org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier.onManagedInitialize(IEntity)",0,1,n/a,3,0,1,0,1
"org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier.onManagedUpdate(float,IEntity)",3,1,n/a,13,0,2,8,1
"org.andengine.entity.modifier.RotationAtModifier.RotationAtModifier(RotationAtModifier)",1,1,n/a,5,0,1,3,1
"org.andengine.entity.modifier.RotationAtModifier.RotationAtModifier(float,float,float,float,float)",2,0,n/a,3,0,5,1,1
"org.andengine.entity.modifier.RotationAtModifier.RotationAtModifier(float,float,float,float,float,IEaseFunction)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.modifier.RotationAtModifier.RotationAtModifier(float,float,float,float,float,IEntityModifierListener)",2,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.RotationAtModifier.RotationAtModifier(float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,2,n/a,5,0,7,3,1
"org.andengine.entity.modifier.RotationAtModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.RotationAtModifier.onManagedInitialize(IEntity)",2,3,n/a,5,0,1,2,1
"org.andengine.entity.modifier.RotationByModifier.RotationByModifier(RotationByModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.RotationByModifier.RotationByModifier(float,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.RotationByModifier.RotationByModifier(float,float,IEntityModifierListener)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.RotationByModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.RotationByModifier.onChangeValue(float,IEntity,float)",2,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.RotationModifier.RotationModifier(RotationModifier)",1,2,n/a,3,0,1,1,1
"org.andengine.entity.modifier.RotationModifier.RotationModifier(float,float,float)",2,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.RotationModifier.RotationModifier(float,float,float,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.RotationModifier.RotationModifier(float,float,float,IEntityModifierListener)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.RotationModifier.RotationModifier(float,float,float,IEntityModifierListener,IEaseFunction)",1,3,n/a,3,0,5,1,1
"org.andengine.entity.modifier.RotationModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.RotationModifier.onSetInitialValue(IEntity,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.modifier.RotationModifier.onSetValue(IEntity,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.ScaleAtModifier.ScaleAtModifier(ScaleAtModifier)",1,1,n/a,5,0,1,3,1
"org.andengine.entity.modifier.ScaleAtModifier.ScaleAtModifier(float,float,float,float,float)",2,0,n/a,3,0,5,1,1
"org.andengine.entity.modifier.ScaleAtModifier.ScaleAtModifier(float,float,float,float,float,IEaseFunction)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.modifier.ScaleAtModifier.ScaleAtModifier(float,float,float,float,float,IEntityModifierListener)",2,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.ScaleAtModifier.ScaleAtModifier(float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,2,n/a,3,0,7,1,1
"org.andengine.entity.modifier.ScaleAtModifier.ScaleAtModifier(float,float,float,float,float,float,float)",2,0,n/a,3,0,7,1,1
"org.andengine.entity.modifier.ScaleAtModifier.ScaleAtModifier(float,float,float,float,float,float,float,IEaseFunction)",1,1,n/a,3,0,8,1,1
"org.andengine.entity.modifier.ScaleAtModifier.ScaleAtModifier(float,float,float,float,float,float,float,IEntityModifierListener)",2,0,n/a,3,0,8,1,1
"org.andengine.entity.modifier.ScaleAtModifier.ScaleAtModifier(float,float,float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,3,n/a,5,0,9,3,1
"org.andengine.entity.modifier.ScaleAtModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.ScaleAtModifier.onManagedInitialize(IEntity)",2,3,n/a,5,0,1,2,1
"org.andengine.entity.modifier.ScaleModifier.ScaleModifier(ScaleModifier)",1,2,n/a,3,0,1,1,1
"org.andengine.entity.modifier.ScaleModifier.ScaleModifier(float,float,float)",2,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.ScaleModifier.ScaleModifier(float,float,float,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.ScaleModifier.ScaleModifier(float,float,float,IEntityModifierListener)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.ScaleModifier.ScaleModifier(float,float,float,IEntityModifierListener,IEaseFunction)",1,2,n/a,3,0,5,1,1
"org.andengine.entity.modifier.ScaleModifier.ScaleModifier(float,float,float,float,float)",2,0,n/a,3,0,5,1,1
"org.andengine.entity.modifier.ScaleModifier.ScaleModifier(float,float,float,float,float,IEaseFunction)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.ScaleModifier.ScaleModifier(float,float,float,float,float,IEntityModifierListener)",2,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.ScaleModifier.ScaleModifier(float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,5,n/a,3,0,7,1,1
"org.andengine.entity.modifier.ScaleModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.ScaleModifier.onSetInitialValues(IEntity,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.ScaleModifier.onSetValues(IEntity,float,float,float)",1,1,n/a,4,0,4,1,1
"org.andengine.entity.modifier.SequenceEntityModifier.SequenceEntityModifier(IEntityModifier...)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.modifier.SequenceEntityModifier.SequenceEntityModifier(IEntityModifierListener,IEntityModifier...)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.SequenceEntityModifier.SequenceEntityModifier(ISubSequenceShapeModifierListener,IEntityModifier...)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.modifier.SequenceEntityModifier.SequenceEntityModifier(ISubSequenceShapeModifierListener,IEntityModifierListener,IEntityModifier...)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.SequenceEntityModifier.SequenceEntityModifier(SequenceEntityModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.SequenceEntityModifier.deepCopy()",1,4,n/a,4,0,0,1,1
"org.andengine.entity.modifier.SingleValueChangeEntityModifier.SingleValueChangeEntityModifier(SingleValueChangeEntityModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.SingleValueChangeEntityModifier.SingleValueChangeEntityModifier(float,float)",1,1,n/a,3,0,2,1,1
"org.andengine.entity.modifier.SingleValueChangeEntityModifier.SingleValueChangeEntityModifier(float,float,IEntityModifierListener)",1,1,n/a,3,0,3,1,1
"org.andengine.entity.modifier.SingleValueSpanEntityModifier.SingleValueSpanEntityModifier(SingleValueSpanEntityModifier)",1,6,n/a,3,0,1,1,1
"org.andengine.entity.modifier.SingleValueSpanEntityModifier.SingleValueSpanEntityModifier(float,float,float)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.SingleValueSpanEntityModifier.SingleValueSpanEntityModifier(float,float,float,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.SingleValueSpanEntityModifier.SingleValueSpanEntityModifier(float,float,float,IEntityModifierListener)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.SingleValueSpanEntityModifier.SingleValueSpanEntityModifier(float,float,float,IEntityModifierListener,IEaseFunction)",1,12,n/a,3,0,5,1,1
"org.andengine.entity.modifier.SkewModifier.SkewModifier(SkewModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.SkewModifier.SkewModifier(float,float,float,float,float)",2,0,n/a,3,0,5,1,1
"org.andengine.entity.modifier.SkewModifier.SkewModifier(float,float,float,float,float,IEaseFunction)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.SkewModifier.SkewModifier(float,float,float,float,float,IEntityModifierListener)",2,0,n/a,3,0,6,1,1
"org.andengine.entity.modifier.SkewModifier.SkewModifier(float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,2,n/a,3,0,7,1,1
"org.andengine.entity.modifier.SkewModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.SkewModifier.onSetInitialValues(IEntity,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.SkewModifier.onSetValues(IEntity,float,float,float)",1,1,n/a,4,0,4,1,1
"org.andengine.entity.modifier.SkewXModifier.SkewXModifier(SkewXModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.SkewXModifier.SkewXModifier(float,float,float)",2,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.SkewXModifier.SkewXModifier(float,float,float,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.SkewXModifier.SkewXModifier(float,float,float,IEntityModifierListener)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.SkewXModifier.SkewXModifier(float,float,float,IEntityModifierListener,IEaseFunction)",1,2,n/a,3,0,5,1,1
"org.andengine.entity.modifier.SkewXModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.SkewXModifier.onSetInitialValue(IEntity,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.modifier.SkewXModifier.onSetValue(IEntity,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.SkewYModifier.SkewYModifier(SkewYModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.SkewYModifier.SkewYModifier(float,float,float)",2,0,n/a,3,0,3,1,1
"org.andengine.entity.modifier.SkewYModifier.SkewYModifier(float,float,float,IEaseFunction)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.SkewYModifier.SkewYModifier(float,float,float,IEntityModifierListener)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.modifier.SkewYModifier.SkewYModifier(float,float,float,IEntityModifierListener,IEaseFunction)",1,2,n/a,3,0,5,1,1
"org.andengine.entity.modifier.SkewYModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.modifier.SkewYModifier.onSetInitialValue(IEntity,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.modifier.SkewYModifier.onSetValue(IEntity,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.modifier.TripleValueSpanEntityModifier.TripleValueSpanEntityModifier(TripleValueSpanEntityModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.modifier.TripleValueSpanEntityModifier.TripleValueSpanEntityModifier(float,float,float,float,float,float,float,IEaseFunction)",1,0,n/a,3,0,8,1,1
"org.andengine.entity.modifier.TripleValueSpanEntityModifier.TripleValueSpanEntityModifier(float,float,float,float,float,float,float,IEntityModifierListener,IEaseFunction)",1,4,n/a,3,0,9,1,1
"org.andengine.entity.particle.BatchedPseudoSpriteParticleSystem.BatchedPseudoSpriteParticleSystem(IParticleEmitter,float,float,int,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.particle.BatchedPseudoSpriteParticleSystem.BatchedPseudoSpriteParticleSystem(float,float,IParticleEmitter,float,float,int,ITextureRegion,VertexBufferObjectManager)",5,1,n/a,4,2,8,4,1
"org.andengine.entity.particle.BatchedPseudoSpriteParticleSystem.onManagedDraw(GLState,Camera)",12,2,n/a,15,1,2,11,2
"org.andengine.entity.particle.BatchedSpriteParticleSystem.BatchedSpriteParticleSystem(IParticleEmitter,float,float,int,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.particle.BatchedSpriteParticleSystem.BatchedSpriteParticleSystem(float,float,IParticleEmitter,float,float,int,ITextureRegion,VertexBufferObjectManager)",5,1,n/a,5,2,8,3,1
"org.andengine.entity.particle.BatchedSpriteParticleSystem.onManagedDraw(GLState,Camera)",10,2,n/a,15,1,2,11,2
"org.andengine.entity.particle.BlendFunctionParticleSystem.BlendFunctionParticleSystem(IEntityFactory<T>,IParticleEmitter,float,float,int)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.particle.BlendFunctionParticleSystem.BlendFunctionParticleSystem(float,float,IEntityFactory<T>,IParticleEmitter,float,float,int)",1,2,n/a,3,0,7,1,1
"org.andengine.entity.particle.BlendFunctionParticleSystem.getBlendFunctionDestination()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.BlendFunctionParticleSystem.getBlendFunctionSource()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.BlendFunctionParticleSystem.isBlendingEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.BlendFunctionParticleSystem.postDraw(GLState,Camera)",1,2,n/a,6,1,2,2,2
"org.andengine.entity.particle.BlendFunctionParticleSystem.preDraw(GLState,Camera)",2,2,n/a,7,1,2,3,2
"org.andengine.entity.particle.BlendFunctionParticleSystem.setBlendFunction(int,int)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.particle.BlendFunctionParticleSystem.setBlendFunctionDestination(int)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.BlendFunctionParticleSystem.setBlendFunctionSource(int)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.BlendFunctionParticleSystem.setBlendingEnabled(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.Particle.getEntity()",0,17,n/a,3,0,0,1,1
"org.andengine.entity.particle.Particle.getExpireTime()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.Particle.getLifeTime()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.particle.Particle.getPhysicsHandler()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.particle.Particle.isExpired()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.Particle.onDraw(GLState,Camera)",1,1,n/a,5,1,2,2,2
"org.andengine.entity.particle.Particle.onUpdate(float)",5,1,n/a,16,2,1,10,4
"org.andengine.entity.particle.Particle.reset()",2,1,n/a,7,0,0,5,1
"org.andengine.entity.particle.Particle.setEntity(T)",1,1,n/a,4,0,1,2,1
"org.andengine.entity.particle.Particle.setExpireTime(float)",0,1,n/a,3,0,1,1,1
"org.andengine.entity.particle.Particle.setExpired(boolean)",0,2,n/a,3,0,1,1,1
"org.andengine.entity.particle.ParticleSystem.ParticleSystem(IEntityFactory<T>,IParticleEmitter,float,float,int)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.particle.ParticleSystem.ParticleSystem(float,float,IEntityFactory<T>,IParticleEmitter,float,float,int)",2,4,n/a,11,0,7,8,1
"org.andengine.entity.particle.ParticleSystem.addParticleInitializer(IParticleInitializer<T>)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.ParticleSystem.addParticleModifier(IParticleModifier<T>)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.ParticleSystem.determineCurrentRate()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.particle.ParticleSystem.getParticleEmitter()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.ParticleSystem.getParticleFactory()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.ParticleSystem.isParticlesSpawnEnabled()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.particle.ParticleSystem.moveParticleToEnd(int)",1,1,n/a,12,1,1,5,2
"org.andengine.entity.particle.ParticleSystem.onManagedDraw(GLState,Camera)",1,2,n/a,6,1,2,4,2
"org.andengine.entity.particle.ParticleSystem.onManagedUpdate(float)",8,5,n/a,20,2,1,16,5
"org.andengine.entity.particle.ParticleSystem.removeParticleInitializer(IParticleInitializer<T>)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.ParticleSystem.removeParticleModifier(IParticleModifier<T>)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.ParticleSystem.reset()",1,7,n/a,6,0,0,3,1
"org.andengine.entity.particle.ParticleSystem.setParticlesSpawnEnabled(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.ParticleSystem.spawnParticle()",13,1,n/a,27,3,0,20,5
"org.andengine.entity.particle.ParticleSystem.spawnParticles(float)",4,1,n/a,10,1,1,9,2
"org.andengine.entity.particle.SpriteParticleSystem.SpriteParticleSystem(IParticleEmitter,float,float,int,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.particle.SpriteParticleSystem.SpriteParticleSystem(float,float,IEntityFactory<Sprite>,IParticleEmitter,float,float,int)",1,0,n/a,3,0,7,1,1
"org.andengine.entity.particle.SpriteParticleSystem.SpriteParticleSystem(float,float,IParticleEmitter,float,float,int,ITextureRegion,VertexBufferObjectManager)",3,1,n/a,4,2,8,2,1
"org.andengine.entity.particle.emitter.BaseCircleParticleEmitter.BaseCircleParticleEmitter(float,float,float)",1,2,n/a,3,0,3,1,1
"org.andengine.entity.particle.emitter.BaseCircleParticleEmitter.BaseCircleParticleEmitter(float,float,float,float)",3,3,n/a,5,0,4,3,1
"org.andengine.entity.particle.emitter.BaseCircleParticleEmitter.getRadiusX()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.emitter.BaseCircleParticleEmitter.getRadiusY()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.emitter.BaseCircleParticleEmitter.setRadius(float)",0,0,n/a,4,0,1,2,1
"org.andengine.entity.particle.emitter.BaseCircleParticleEmitter.setRadius(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.particle.emitter.BaseCircleParticleEmitter.setRadiusX(float)",0,1,n/a,3,0,1,1,1
"org.andengine.entity.particle.emitter.BaseCircleParticleEmitter.setRadiusY(float)",0,1,n/a,3,0,1,1,1
"org.andengine.entity.particle.emitter.BaseParticleEmitter.BaseParticleEmitter(float,float)",0,3,n/a,4,0,2,2,1
"org.andengine.entity.particle.emitter.BaseParticleEmitter.getCenterX()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.emitter.BaseParticleEmitter.getCenterY()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.emitter.BaseParticleEmitter.onUpdate(float)",0,7,n/a,3,0,1,0,1
"org.andengine.entity.particle.emitter.BaseParticleEmitter.reset()",0,4,n/a,3,0,0,0,1
"org.andengine.entity.particle.emitter.BaseParticleEmitter.setCenter(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.particle.emitter.BaseParticleEmitter.setCenterX(float)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.emitter.BaseParticleEmitter.setCenterY(float)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.emitter.BaseRectangleParticleEmitter.BaseRectangleParticleEmitter(float,float,float)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.particle.emitter.BaseRectangleParticleEmitter.BaseRectangleParticleEmitter(float,float,float,float)",3,3,n/a,5,0,4,3,1
"org.andengine.entity.particle.emitter.BaseRectangleParticleEmitter.getHeight()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.emitter.BaseRectangleParticleEmitter.getWidth()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.emitter.BaseRectangleParticleEmitter.setHeight(float)",0,1,n/a,4,0,1,2,1
"org.andengine.entity.particle.emitter.BaseRectangleParticleEmitter.setWidth(float)",0,1,n/a,4,0,1,2,1
"org.andengine.entity.particle.emitter.CircleOutlineParticleEmitter.CircleOutlineParticleEmitter(float,float,float)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.particle.emitter.CircleOutlineParticleEmitter.CircleOutlineParticleEmitter(float,float,float,float)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.particle.emitter.CircleOutlineParticleEmitter.getPositionOffset(float[])",3,1,n/a,6,0,1,3,1
"org.andengine.entity.particle.emitter.CircleParticleEmitter.CircleParticleEmitter(float,float,float)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.particle.emitter.CircleParticleEmitter.CircleParticleEmitter(float,float,float,float)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.particle.emitter.CircleParticleEmitter.getPositionOffset(float[])",5,1,n/a,6,0,1,3,1
"org.andengine.entity.particle.emitter.IParticleEmitter.getPositionOffset(float[])",n/a,1,5,n/a,n/a,1,n/a,n/a
"org.andengine.entity.particle.emitter.PointParticleEmitter.PointParticleEmitter(float,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.particle.emitter.PointParticleEmitter.getPositionOffset(float[])",0,1,n/a,5,0,1,2,1
"org.andengine.entity.particle.emitter.RectangleOutlineParticleEmitter.RectangleOutlineParticleEmitter(float,float,float,float)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.particle.emitter.RectangleOutlineParticleEmitter.getPositionOffset(float[])",2,1,n/a,5,0,1,2,1
"org.andengine.entity.particle.emitter.RectangleParticleEmitter.RectangleParticleEmitter(float,float,float,float)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.particle.emitter.RectangleParticleEmitter.getPositionOffset(float[])",2,1,n/a,5,0,1,2,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.AccelerationParticleInitializer(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.AccelerationParticleInitializer(float,float)",1,2,n/a,3,0,2,1,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.AccelerationParticleInitializer(float,float,float,float)",1,1,n/a,3,0,4,1,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.getMaxAccelerationX()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.getMaxAccelerationY()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.getMinAccelerationX()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.getMinAccelerationY()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.onInitializeParticle(Particle<T>,float,float)",2,1,n/a,4,0,3,1,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.setAcceleration(float,float,float,float)",0,0,n/a,6,0,4,4,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.setAccelerationX(float)",0,0,n/a,4,0,1,2,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.setAccelerationX(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.setAccelerationY(float)",0,0,n/a,4,0,1,2,1
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer.setAccelerationY(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.particle.initializer.AlphaParticleInitializer.AlphaParticleInitializer(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.initializer.AlphaParticleInitializer.AlphaParticleInitializer(float,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.particle.initializer.AlphaParticleInitializer.onInitializeParticle(Particle<T>,float)",2,1,n/a,4,0,2,1,1
"org.andengine.entity.particle.initializer.BaseDoubleValueParticleInitializer.BaseDoubleValueParticleInitializer(float,float,float,float)",1,3,n/a,5,0,4,3,1
"org.andengine.entity.particle.initializer.BaseDoubleValueParticleInitializer.getRandomValueB()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.particle.initializer.BaseDoubleValueParticleInitializer.onInitializeParticle(Particle<T>,float)",2,1,n/a,4,0,2,1,1
"org.andengine.entity.particle.initializer.BaseDoubleValueParticleInitializer.onInitializeParticle(Particle<T>,float,float)",n/a,1,3,n/a,n/a,3,n/a,n/a
"org.andengine.entity.particle.initializer.BaseSingleValueParticleInitializer.BaseSingleValueParticleInitializer(float,float)",0,6,n/a,4,0,2,2,1
"org.andengine.entity.particle.initializer.BaseSingleValueParticleInitializer.getRandomValue()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.particle.initializer.BaseSingleValueParticleInitializer.onInitializeParticle(Particle<T>)",2,0,n/a,4,0,1,1,1
"org.andengine.entity.particle.initializer.BaseSingleValueParticleInitializer.onInitializeParticle(Particle<T>,float)",n/a,1,4,n/a,n/a,2,n/a,n/a
"org.andengine.entity.particle.initializer.BaseTripleValueParticleInitializer.BaseTripleValueParticleInitializer(float,float,float,float,float,float)",1,4,n/a,5,0,6,3,1
"org.andengine.entity.particle.initializer.BaseTripleValueParticleInitializer.getRandomValueC()",1,1,n/a,7,1,0,3,2
"org.andengine.entity.particle.initializer.BaseTripleValueParticleInitializer.onInitializeParticle(Particle<T>,float,float)",2,1,n/a,4,0,3,1,1
"org.andengine.entity.particle.initializer.BaseTripleValueParticleInitializer.onInitializeParticle(Particle<T>,float,float,float)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.andengine.entity.particle.initializer.BlendFunctionParticleInitializer.BlendFunctionParticleInitializer(int,int)",0,0,n/a,7,0,2,2,1
"org.andengine.entity.particle.initializer.BlendFunctionParticleInitializer.onInitializeParticle(Particle<T>)",2,0,n/a,4,0,1,1,1
"org.andengine.entity.particle.initializer.ColorParticleInitializer.ColorParticleInitializer(Color)",7,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.initializer.ColorParticleInitializer.ColorParticleInitializer(Color,Color)",7,0,n/a,3,0,2,1,1
"org.andengine.entity.particle.initializer.ColorParticleInitializer.ColorParticleInitializer(float,float,float)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.particle.initializer.ColorParticleInitializer.ColorParticleInitializer(float,float,float,float,float,float)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.particle.initializer.ColorParticleInitializer.onInitializeParticle(Particle<T>,float,float,float)",2,1,n/a,4,0,4,1,1
"org.andengine.entity.particle.initializer.GravityParticleInitializer.GravityParticleInitializer()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.IParticleInitializer.onInitializeParticle(Particle<T>)",n/a,0,5,n/a,n/a,1,n/a,n/a
"org.andengine.entity.particle.initializer.RotationParticleInitializer.RotationParticleInitializer(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.initializer.RotationParticleInitializer.RotationParticleInitializer(float,float)",1,1,n/a,3,0,2,1,1
"org.andengine.entity.particle.initializer.RotationParticleInitializer.getMaxRotation()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.RotationParticleInitializer.getMinRotation()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.RotationParticleInitializer.onInitializeParticle(Particle<T>,float)",2,1,n/a,4,0,2,1,1
"org.andengine.entity.particle.initializer.RotationParticleInitializer.setRotation(float)",0,0,n/a,4,0,1,2,1
"org.andengine.entity.particle.initializer.RotationParticleInitializer.setRotation(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.particle.initializer.ScaleParticleInitializer.ScaleParticleInitializer(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.initializer.ScaleParticleInitializer.ScaleParticleInitializer(float,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.particle.initializer.ScaleParticleInitializer.onInitializeParticle(Particle<T>,float)",2,1,n/a,4,0,2,1,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.VelocityParticleInitializer(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.VelocityParticleInitializer(float,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.VelocityParticleInitializer(float,float,float,float)",1,2,n/a,3,0,4,1,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.getMaxVelocityX()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.getMaxVelocityY()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.getMinVelocityX()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.getMinVelocityY()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.onInitializeParticle(Particle<T>,float,float)",2,1,n/a,4,0,3,1,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.setVelocity(float,float,float,float)",0,0,n/a,6,0,4,4,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.setVelocityX(float)",0,0,n/a,4,0,1,2,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.setVelocityX(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.setVelocityY(float)",0,0,n/a,4,0,1,2,1
"org.andengine.entity.particle.initializer.VelocityParticleInitializer.setVelocityY(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.particle.modifier.AlphaParticleModifier.AlphaParticleModifier(float,float,float,float)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.particle.modifier.AlphaParticleModifier.AlphaParticleModifier(float,float,float,float,IEaseFunction)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.particle.modifier.AlphaParticleModifier.onSetInitialValue(Particle<T>,float)",2,1,n/a,4,0,2,1,1
"org.andengine.entity.particle.modifier.AlphaParticleModifier.onSetValue(Particle<T>,float,float)",2,1,n/a,4,0,3,1,1
"org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier.BaseDoubleValueSpanParticleModifier(float,float,float,float,float,float)",2,0,n/a,3,0,6,1,1
"org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier.BaseDoubleValueSpanParticleModifier(float,float,float,float,float,float,IEaseFunction)",1,3,n/a,5,0,7,3,1
"org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier.onSetInitialValue(Particle<T>,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier.onSetInitialValues(Particle<T>,float,float)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier.onSetValue(Particle<T>,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier.onSetValues(Particle<T>,float,float,float)",n/a,1,2,n/a,n/a,4,n/a,n/a
"org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier.reset(float,float,float,float)",1,2,n/a,5,0,4,1,1
"org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier.reset(float,float,float,float,float,float)",1,2,n/a,5,0,6,3,1
"org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier.BaseSingleValueSpanParticleModifier(float,float,float,float)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier.BaseSingleValueSpanParticleModifier(float,float,float,float,IEaseFunction)",0,4,n/a,8,0,5,6,1
"org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier.onInitializeParticle(Particle<T>)",1,0,n/a,4,0,1,1,1
"org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier.onSetInitialValue(Particle<T>,float)",n/a,1,3,n/a,n/a,2,n/a,n/a
"org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier.onSetValue(Particle<T>,float,float)",n/a,1,3,n/a,n/a,3,n/a,n/a
"org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier.onUpdateParticle(Particle<T>)",3,0,n/a,8,1,1,4,3
"org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier.reset(float,float,float,float)",0,2,n/a,7,0,4,5,1
"org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier.BaseTripleValueSpanParticleModifier(float,float,float,float,float,float,float,float)",2,0,n/a,3,0,8,1,1
"org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier.BaseTripleValueSpanParticleModifier(float,float,float,float,float,float,float,float,IEaseFunction)",1,2,n/a,5,0,9,3,1
"org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier.onSetInitialValues(Particle<T>,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier.onSetInitialValues(Particle<T>,float,float,float)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier.onSetValues(Particle<T>,float,float,float)",1,1,n/a,4,0,4,1,1
"org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier.onSetValues(Particle<T>,float,float,float,float)",n/a,1,1,n/a,n/a,5,n/a,n/a
"org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier.reset(float,float,float,float,float,float)",1,2,n/a,5,0,6,1,1
"org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier.reset(float,float,float,float,float,float,float,float)",1,0,n/a,5,0,8,3,1
"org.andengine.entity.particle.modifier.ColorParticleModifier.ColorParticleModifier(float,float,float,float,float,float,float,float)",2,0,n/a,3,0,8,1,1
"org.andengine.entity.particle.modifier.ColorParticleModifier.ColorParticleModifier(float,float,float,float,float,float,float,float,IEaseFunction)",1,1,n/a,3,0,9,1,1
"org.andengine.entity.particle.modifier.ColorParticleModifier.onSetInitialValues(Particle<T>,float,float,float)",2,1,n/a,4,0,4,1,1
"org.andengine.entity.particle.modifier.ColorParticleModifier.onSetValues(Particle<T>,float,float,float,float)",2,1,n/a,4,0,5,1,1
"org.andengine.entity.particle.modifier.ExpireParticleInitializer.ExpireParticleInitializer(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.modifier.ExpireParticleInitializer.ExpireParticleInitializer(float,float)",0,1,n/a,4,0,2,2,1
"org.andengine.entity.particle.modifier.ExpireParticleInitializer.getMaxLifeTime()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.modifier.ExpireParticleInitializer.getMinLifeTime()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.modifier.ExpireParticleInitializer.onInitializeParticle(Particle<T>)",2,0,n/a,4,0,1,1,1
"org.andengine.entity.particle.modifier.ExpireParticleInitializer.setLifeTime(float)",0,0,n/a,4,0,1,2,1
"org.andengine.entity.particle.modifier.ExpireParticleInitializer.setLifeTime(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.particle.modifier.IParticleModifier.onUpdateParticle(Particle<T>)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.particle.modifier.OffCameraExpireParticleModifier.OffCameraExpireParticleModifier(Camera)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.particle.modifier.OffCameraExpireParticleModifier.getCamera()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.particle.modifier.OffCameraExpireParticleModifier.onInitializeParticle(Particle<T>)",0,0,n/a,3,0,1,0,1
"org.andengine.entity.particle.modifier.OffCameraExpireParticleModifier.onUpdateParticle(Particle<T>)",3,0,n/a,6,1,1,2,2
"org.andengine.entity.particle.modifier.RotationParticleModifier.RotationParticleModifier(float,float,float,float)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.particle.modifier.RotationParticleModifier.RotationParticleModifier(float,float,float,float,IEaseFunction)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.particle.modifier.RotationParticleModifier.onSetInitialValue(Particle<T>,float)",2,1,n/a,4,0,2,1,1
"org.andengine.entity.particle.modifier.RotationParticleModifier.onSetValue(Particle<T>,float,float)",2,1,n/a,4,0,3,1,1
"org.andengine.entity.particle.modifier.ScaleParticleModifier.ScaleParticleModifier(float,float,float,float)",2,0,n/a,3,0,4,1,1
"org.andengine.entity.particle.modifier.ScaleParticleModifier.ScaleParticleModifier(float,float,float,float,IEaseFunction)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.particle.modifier.ScaleParticleModifier.ScaleParticleModifier(float,float,float,float,float,float)",2,0,n/a,3,0,6,1,1
"org.andengine.entity.particle.modifier.ScaleParticleModifier.ScaleParticleModifier(float,float,float,float,float,float,IEaseFunction)",1,2,n/a,3,0,7,1,1
"org.andengine.entity.particle.modifier.ScaleParticleModifier.onSetInitialValues(Particle<T>,float,float)",2,1,n/a,4,0,3,1,1
"org.andengine.entity.particle.modifier.ScaleParticleModifier.onSetValues(Particle<T>,float,float,float)",2,1,n/a,4,0,4,1,1
"org.andengine.entity.primitive.DrawMode.DrawMode(int)",0,7,n/a,3,0,1,1,1
"org.andengine.entity.primitive.DrawMode.getDrawMode()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.primitive.Line.Line(float,float,float,float,VertexBufferObjectManager)",1,0,n/a,6,0,5,1,1
"org.andengine.entity.primitive.Line.Line(float,float,float,float,VertexBufferObjectManager,DrawType)",1,0,n/a,6,0,6,1,1
"org.andengine.entity.primitive.Line.Line(float,float,float,float,float,ILineVertexBufferObject)",5,1,n/a,16,0,6,14,1
"org.andengine.entity.primitive.Line.Line(float,float,float,float,float,VertexBufferObjectManager)",1,0,n/a,6,0,6,1,1
"org.andengine.entity.primitive.Line.Line(float,float,float,float,float,VertexBufferObjectManager,DrawType)",2,3,n/a,3,0,7,1,1
"org.andengine.entity.primitive.Line.collidesWith(IShape)",2,2,n/a,11,1,1,6,3
"org.andengine.entity.primitive.Line.contains(float,float)",1,3,n/a,5,0,2,1,1
"org.andengine.entity.primitive.Line.draw(GLState,Camera)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.primitive.Line.getLineWidth()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.primitive.Line.getSceneCenterCoordinates()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Line.getSceneCenterCoordinates(float[])",1,1,n/a,4,0,1,1,1
"org.andengine.entity.primitive.Line.getVertexBufferObject()",0,3,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Line.getX()",1,12,n/a,8,0,0,1,1
"org.andengine.entity.primitive.Line.getX1()",1,4,n/a,3,0,0,1,1
"org.andengine.entity.primitive.Line.getX2()",0,4,n/a,3,0,0,1,1
"org.andengine.entity.primitive.Line.getY()",1,12,n/a,8,0,0,1,1
"org.andengine.entity.primitive.Line.getY1()",1,4,n/a,3,0,0,1,1
"org.andengine.entity.primitive.Line.getY2()",0,4,n/a,3,0,0,1,1
"org.andengine.entity.primitive.Line.isCulled(Camera)",1,2,n/a,4,0,1,1,1
"org.andengine.entity.primitive.Line.onUpdateColor()",1,8,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Line.onUpdateVertices()",1,5,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Line.postDraw(GLState,Camera)",2,8,n/a,5,0,2,2,1
"org.andengine.entity.primitive.Line.preDraw(GLState,Camera)",3,8,n/a,6,0,2,3,1
"org.andengine.entity.primitive.Line.setLineWidth(float)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.primitive.Line.setPosition(float,float)",1,19,n/a,12,0,2,5,1
"org.andengine.entity.primitive.Line.setPosition(float,float,float,float)",2,3,n/a,6,0,4,4,1
"org.andengine.entity.primitive.Line.setX(float)",1,4,n/a,10,0,1,3,1
"org.andengine.entity.primitive.Line.setY(float)",1,4,n/a,10,0,1,3,1
"org.andengine.entity.primitive.Mesh.Mesh(float,float,float[],int,DrawMode,VertexBufferObjectManager)",1,0,n/a,6,0,6,1,1
"org.andengine.entity.primitive.Mesh.Mesh(float,float,float[],int,DrawMode,VertexBufferObjectManager,DrawType)",2,1,n/a,6,0,7,1,1
"org.andengine.entity.primitive.Mesh.Mesh(float,float,int,DrawMode,IMeshVertexBufferObject)",5,1,n/a,8,0,5,6,1
"org.andengine.entity.primitive.Mesh.collidesWith(IShape)",0,2,n/a,12,1,1,5,3
"org.andengine.entity.primitive.Mesh.contains(float,float)",1,3,n/a,5,0,2,1,1
"org.andengine.entity.primitive.Mesh.draw(GLState,Camera)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.primitive.Mesh.getBufferData()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.primitive.Mesh.getVertexBufferObject()",0,3,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Mesh.onUpdateColor()",1,7,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Mesh.onUpdateVertices()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Mesh.postDraw(GLState,Camera)",2,8,n/a,5,0,2,2,1
"org.andengine.entity.primitive.Mesh.preDraw(GLState,Camera)",2,8,n/a,5,0,2,2,1
"org.andengine.entity.primitive.Mesh.setDrawMode(DrawMode)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.primitive.Mesh.setVertexCountToDraw(int)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.primitive.Rectangle.Rectangle(float,float,float,float,IRectangleVertexBufferObject)",5,1,n/a,7,0,5,5,1
"org.andengine.entity.primitive.Rectangle.Rectangle(float,float,float,float,VertexBufferObjectManager)",1,0,n/a,6,0,5,1,1
"org.andengine.entity.primitive.Rectangle.Rectangle(float,float,float,float,VertexBufferObjectManager,DrawType)",2,1,n/a,6,0,6,1,1
"org.andengine.entity.primitive.Rectangle.draw(GLState,Camera)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.primitive.Rectangle.getVertexBufferObject()",0,3,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Rectangle.onUpdateColor()",1,8,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Rectangle.onUpdateVertices()",1,4,n/a,4,0,0,1,1
"org.andengine.entity.primitive.Rectangle.postDraw(GLState,Camera)",2,8,n/a,5,0,2,2,1
"org.andengine.entity.primitive.Rectangle.preDraw(GLState,Camera)",2,8,n/a,5,0,2,2,1
"org.andengine.entity.primitive.vbo.HighPerformanceLineVertexBufferObject.HighPerformanceLineVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.primitive.vbo.HighPerformanceLineVertexBufferObject.onUpdateColor(Line)",3,1,n/a,8,0,1,5,1
"org.andengine.entity.primitive.vbo.HighPerformanceLineVertexBufferObject.onUpdateVertices(Line)",5,1,n/a,9,0,1,6,1
"org.andengine.entity.primitive.vbo.HighPerformanceMeshVertexBufferObject.HighPerformanceMeshVertexBufferObject(VertexBufferObjectManager,float[],int,DrawType,boolean,VertexBufferObjectAttributes)",1,1,n/a,4,0,6,2,1
"org.andengine.entity.primitive.vbo.HighPerformanceMeshVertexBufferObject.onUpdateColor(Mesh)",3,1,n/a,9,1,1,7,2
"org.andengine.entity.primitive.vbo.HighPerformanceMeshVertexBufferObject.onUpdateVertices(Mesh)",1,1,n/a,5,0,1,1,1
"org.andengine.entity.primitive.vbo.HighPerformanceRectangleVertexBufferObject.HighPerformanceRectangleVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.primitive.vbo.HighPerformanceRectangleVertexBufferObject.onUpdateColor(Rectangle)",3,1,n/a,10,0,1,7,1
"org.andengine.entity.primitive.vbo.HighPerformanceRectangleVertexBufferObject.onUpdateVertices(Rectangle)",3,1,n/a,17,0,1,14,1
"org.andengine.entity.primitive.vbo.ILineVertexBufferObject.onUpdateColor(Line)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.primitive.vbo.ILineVertexBufferObject.onUpdateVertices(Line)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.primitive.vbo.IMeshVertexBufferObject.getBufferData()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.primitive.vbo.IMeshVertexBufferObject.onUpdateColor(Mesh)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.primitive.vbo.IMeshVertexBufferObject.onUpdateVertices(Mesh)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.primitive.vbo.IRectangleVertexBufferObject.onUpdateColor(Rectangle)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.primitive.vbo.IRectangleVertexBufferObject.onUpdateVertices(Rectangle)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.primitive.vbo.LowMemoryLineVertexBufferObject.LowMemoryLineVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.primitive.vbo.LowMemoryLineVertexBufferObject.onUpdateColor(Line)",5,1,n/a,8,0,1,5,1
"org.andengine.entity.primitive.vbo.LowMemoryLineVertexBufferObject.onUpdateVertices(Line)",9,1,n/a,9,0,1,6,1
"org.andengine.entity.primitive.vbo.LowMemoryRectangleVertexBufferObject.LowMemoryRectangleVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.primitive.vbo.LowMemoryRectangleVertexBufferObject.onUpdateColor(Rectangle)",7,1,n/a,10,0,1,7,1
"org.andengine.entity.primitive.vbo.LowMemoryRectangleVertexBufferObject.onUpdateVertices(Rectangle)",11,1,n/a,17,0,1,14,1
"org.andengine.entity.scene.CameraScene.CameraScene()",1,1,n/a,6,0,0,1,1
"org.andengine.entity.scene.CameraScene.CameraScene(Camera)",0,2,n/a,3,0,1,1,1
"org.andengine.entity.scene.CameraScene.centerShapeInCamera(IAreaShape)",5,0,n/a,4,0,1,2,1
"org.andengine.entity.scene.CameraScene.centerShapeInCameraHorizontally(IAreaShape)",4,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.CameraScene.centerShapeInCameraVertically(IAreaShape)",4,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.CameraScene.getCamera()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.CameraScene.onApplyMatrix(GLState,Camera)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.scene.CameraScene.onChildSceneTouchEvent(TouchEvent)",4,3,n/a,12,1,1,7,2
"org.andengine.entity.scene.CameraScene.onSceneTouchEvent(TouchEvent)",3,4,n/a,15,2,1,8,3
"org.andengine.entity.scene.CameraScene.setCamera(Camera)",0,3,n/a,3,0,1,1,1
"org.andengine.entity.scene.IOnAreaTouchListener.onAreaTouched(TouchEvent,ITouchArea,float,float)",n/a,4,1,n/a,n/a,4,n/a,n/a
"org.andengine.entity.scene.IOnSceneTouchListener.onSceneTouchEvent(Scene,TouchEvent)",n/a,2,3,n/a,n/a,2,n/a,n/a
"org.andengine.entity.scene.ITouchArea.contains(float,float)",n/a,3,6,n/a,n/a,2,n/a,n/a
"org.andengine.entity.scene.ITouchArea.convertLocalToSceneCoordinates(float,float)",n/a,0,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.scene.ITouchArea.convertSceneToLocalCoordinates(float,float)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.scene.ITouchArea.onAreaTouched(TouchEvent,float,float)",n/a,5,4,n/a,n/a,3,n/a,n/a
"org.andengine.entity.scene.Scene.Scene()",0,1,n/a,2,0,0,0,1
"org.andengine.entity.scene.Scene.Scene(int)",2,0,n/a,6,1,1,4,2
"org.andengine.entity.scene.Scene.back()",2,1,n/a,7,1,0,4,2
"org.andengine.entity.scene.Scene.clearChildScene()",0,4,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.clearTouchAreas()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.getBackground()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.getChildScene()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.getOnAreaTouchListener()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.getOnSceneTouchListener()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.getSecondsElapsedTotal()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.getTouchAreas()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.hasChildScene()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.hasOnAreaTouchListener()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.hasOnSceneTouchListener()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.isBackgroundEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.isOnSceneTouchListenerBindingOnActionDownEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.isTouchAreaBindingOnActionDownEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.isTouchAreaBindingOnActionMoveEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.onApplyMatrix(GLState,Camera)",1,1,n/a,3,0,2,1,1
"org.andengine.entity.scene.Scene.onAreaTouchEvent(TouchEvent,float,float,ITouchArea)",3,3,n/a,13,1,4,9,3
"org.andengine.entity.scene.Scene.onChildSceneTouchEvent(TouchEvent)",1,3,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.onManagedDraw(GLState,Camera)",11,2,n/a,23,2,2,15,5
"org.andengine.entity.scene.Scene.onManagedUpdate(float)",4,5,n/a,13,1,1,8,4
"org.andengine.entity.scene.Scene.onSceneTouchEvent(TouchEvent)",32,3,n/a,106,7,1,69,39
"org.andengine.entity.scene.Scene.postRunnable(Runnable)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.registerTouchArea(ITouchArea)",1,4,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.reset()",2,8,n/a,5,0,0,2,1
"org.andengine.entity.scene.Scene.setBackground(IBackground)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.setBackgroundEnabled(boolean)",0,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.setChildScene(Scene)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.setChildScene(Scene,boolean,boolean,boolean)",1,3,n/a,7,0,4,5,1
"org.andengine.entity.scene.Scene.setChildSceneModal(Scene)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.setOnAreaTouchListener(IOnAreaTouchListener)",0,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.setOnAreaTouchTraversalBackToFront()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.setOnAreaTouchTraversalFrontToBack()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.Scene.setOnSceneTouchListener(IOnSceneTouchListener)",0,2,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.setOnSceneTouchListenerBindingOnActionDownEnabled(boolean)",1,0,n/a,17,1,1,3,3
"org.andengine.entity.scene.Scene.setParent(IEntity)",0,3,n/a,4,0,1,0,1
"org.andengine.entity.scene.Scene.setParentScene(Scene)",0,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.setTouchAreaBindingOnActionDownEnabled(boolean)",1,2,n/a,17,1,1,3,3
"org.andengine.entity.scene.Scene.setTouchAreaBindingOnActionMoveEnabled(boolean)",1,0,n/a,17,1,1,3,3
"org.andengine.entity.scene.Scene.unregisterTouchArea(ITouchArea)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.Scene.unregisterTouchAreas(ITouchAreaMatcher)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.AutoParallaxBackground.AutoParallaxBackground(float,float,float,float)",1,0,n/a,4,0,4,2,1
"org.andengine.entity.scene.background.AutoParallaxBackground.onUpdate(float)",1,8,n/a,5,0,1,2,1
"org.andengine.entity.scene.background.AutoParallaxBackground.setParallaxChangePerSecond(float)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.Background.Background()",0,1,n/a,2,0,0,0,1
"org.andengine.entity.scene.background.Background.Background(Color)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.Background.Background(float,float,float)",1,2,n/a,3,0,3,1,1
"org.andengine.entity.scene.background.Background.Background(float,float,float,float)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.scene.background.Background.allocateBackgroundModifiers()",1,1,n/a,3,0,0,1,1
"org.andengine.entity.scene.background.Background.clearBackgroundModifiers()",1,0,n/a,6,1,0,2,2
"org.andengine.entity.scene.background.Background.isColorEnabled()",0,0,n/a,4,0,0,1,1
"org.andengine.entity.scene.background.Background.onDraw(GLState,Camera)",6,10,n/a,7,1,2,3,2
"org.andengine.entity.scene.background.Background.onUpdate(float)",1,8,n/a,6,1,1,2,2
"org.andengine.entity.scene.background.Background.registerBackgroundModifier(IModifier<IBackground>)",2,0,n/a,7,1,1,3,2
"org.andengine.entity.scene.background.Background.reset()",1,4,n/a,4,0,0,1,1
"org.andengine.entity.scene.background.Background.setColor(Color)",1,0,n/a,4,0,1,1,1
"org.andengine.entity.scene.background.Background.setColor(float,float,float)",1,2,n/a,10,0,3,1,1
"org.andengine.entity.scene.background.Background.setColor(float,float,float,float)",1,0,n/a,11,0,4,1,1
"org.andengine.entity.scene.background.Background.setColorEnabled(boolean)",0,0,n/a,4,0,1,1,1
"org.andengine.entity.scene.background.Background.unregisterBackgroundModifier(IModifier<IBackground>)",1,0,n/a,8,1,1,3,2
"org.andengine.entity.scene.background.EntityBackground.EntityBackground(IEntity)",0,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.EntityBackground.EntityBackground(float,float,float,IEntity)",1,1,n/a,4,0,4,2,1
"org.andengine.entity.scene.background.EntityBackground.onDraw(GLState,Camera)",2,10,n/a,5,0,2,2,1
"org.andengine.entity.scene.background.IBackground.clearBackgroundModifiers()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.scene.background.IBackground.isColorEnabled()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.scene.background.IBackground.registerBackgroundModifier(IModifier<IBackground>)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.scene.background.IBackground.setColor(Color)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.scene.background.IBackground.setColor(float,float,float)",n/a,2,1,n/a,n/a,3,n/a,n/a
"org.andengine.entity.scene.background.IBackground.setColor(float,float,float,float)",n/a,0,1,n/a,n/a,4,n/a,n/a
"org.andengine.entity.scene.background.IBackground.setColorEnabled(boolean)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.scene.background.IBackground.unregisterBackgroundModifier(IModifier<IBackground>)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.scene.background.ParallaxBackground.ParallaxBackground(float,float,float)",1,1,n/a,3,0,3,1,1
"org.andengine.entity.scene.background.ParallaxBackground.ParallaxEntity.ParallaxEntity(float,IAreaShape)",0,0,n/a,4,0,2,2,1
"org.andengine.entity.scene.background.ParallaxBackground.ParallaxEntity.onDraw(GLState,Camera,float)",7,0,n/a,19,2,3,13,3
"org.andengine.entity.scene.background.ParallaxBackground.attachParallaxEntity(ParallaxEntity)",1,0,n/a,4,0,1,2,1
"org.andengine.entity.scene.background.ParallaxBackground.detachParallaxEntity(ParallaxEntity)",1,0,n/a,8,1,1,5,2
"org.andengine.entity.scene.background.ParallaxBackground.onDraw(GLState,Camera)",3,10,n/a,9,1,2,7,2
"org.andengine.entity.scene.background.ParallaxBackground.setParallaxValue(float)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.RepeatingSpriteBackground.RepeatingSpriteBackground(float,float,TextureManager,IBitmapTextureAtlasSource,VertexBufferObjectManager)",1,0,n/a,9,0,5,1,1
"org.andengine.entity.scene.background.RepeatingSpriteBackground.RepeatingSpriteBackground(float,float,TextureManager,IBitmapTextureAtlasSource,float,VertexBufferObjectManager)",2,1,n/a,5,0,6,3,1
"org.andengine.entity.scene.background.RepeatingSpriteBackground.getBitmapTextureAtlas()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.background.RepeatingSpriteBackground.loadSprite(float,float,TextureManager,IBitmapTextureAtlasSource,VertexBufferObjectManager)",12,1,n/a,13,0,5,11,1
"org.andengine.entity.scene.background.SpriteBackground.SpriteBackground(Sprite)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.SpriteBackground.SpriteBackground(float,float,float,Sprite)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.scene.background.SpriteBackground.getSprite()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.ColorBackgroundModifier(ColorBackgroundModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.ColorBackgroundModifier(float,Color,Color)",8,0,n/a,3,0,3,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.ColorBackgroundModifier(float,Color,Color,IBackgroundModifierListener)",8,0,n/a,3,0,4,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.ColorBackgroundModifier(float,Color,Color,IBackgroundModifierListener,IEaseFunction)",7,0,n/a,3,0,5,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.ColorBackgroundModifier(float,Color,Color,IEaseFunction)",7,0,n/a,3,0,4,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.ColorBackgroundModifier(float,float,float,float,float,float,float)",2,0,n/a,3,0,7,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.ColorBackgroundModifier(float,float,float,float,float,float,float,IBackgroundModifierListener)",2,0,n/a,3,0,8,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.ColorBackgroundModifier(float,float,float,float,float,float,float,IBackgroundModifierListener,IEaseFunction)",1,4,n/a,3,0,9,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.ColorBackgroundModifier(float,float,float,float,float,float,float,IEaseFunction)",1,0,n/a,3,0,8,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.onSetInitialValues(IBackground,float,float,float)",1,1,n/a,4,0,4,1,1
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier.onSetValues(IBackground,float,float,float,float)",1,1,n/a,4,0,5,1,1
"org.andengine.entity.scene.background.modifier.IBackgroundModifier.deepCopy()",n/a,3,4,n/a,n/a,0,n/a,n/a
"org.andengine.entity.scene.background.modifier.LoopBackgroundModifier.LoopBackgroundModifier(IBackgroundModifier)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.modifier.LoopBackgroundModifier.LoopBackgroundModifier(IBackgroundModifier,int)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.background.modifier.LoopBackgroundModifier.LoopBackgroundModifier(IBackgroundModifier,int,IBackgroundModifierListener)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.scene.background.modifier.LoopBackgroundModifier.LoopBackgroundModifier(IBackgroundModifier,int,ILoopBackgroundModifierListener)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.scene.background.modifier.LoopBackgroundModifier.LoopBackgroundModifier(IBackgroundModifier,int,ILoopBackgroundModifierListener,IBackgroundModifierListener)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.scene.background.modifier.LoopBackgroundModifier.LoopBackgroundModifier(LoopBackgroundModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.modifier.LoopBackgroundModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.background.modifier.ParallelBackgroundModifier.ParallelBackgroundModifier(IBackgroundModifier...)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.modifier.ParallelBackgroundModifier.ParallelBackgroundModifier(IBackgroundModifierListener,IBackgroundModifier...)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.background.modifier.ParallelBackgroundModifier.ParallelBackgroundModifier(ParallelBackgroundModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.modifier.ParallelBackgroundModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier.SequenceBackgroundModifier(IBackgroundModifier...)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier.SequenceBackgroundModifier(IBackgroundModifierListener,IBackgroundModifier...)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier.SequenceBackgroundModifier(ISubSequenceBackgroundModifierListener,IBackgroundModifier...)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier.SequenceBackgroundModifier(ISubSequenceBackgroundModifierListener,IBackgroundModifierListener,IBackgroundModifier...)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier.SequenceBackgroundModifier(SequenceBackgroundModifier)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier.deepCopy()",1,4,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.MenuScene.IOnMenuItemClickListener.onMenuItemClicked(MenuScene,IMenuItem,float,float)",n/a,1,0,n/a,n/a,4,n/a,n/a
"org.andengine.entity.scene.menu.MenuScene.MenuScene()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.menu.MenuScene.MenuScene(Camera)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.MenuScene.MenuScene(Camera,IOnMenuItemClickListener)",3,3,n/a,6,0,2,4,1
"org.andengine.entity.scene.menu.MenuScene.MenuScene(IOnMenuItemClickListener)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.MenuScene.addMenuItem(IMenuItem)",3,0,n/a,5,0,1,3,1
"org.andengine.entity.scene.menu.MenuScene.back()",2,2,n/a,5,0,0,2,1
"org.andengine.entity.scene.menu.MenuScene.buildAnimations()",4,0,n/a,6,0,0,4,1
"org.andengine.entity.scene.menu.MenuScene.clearChildScene()",4,4,n/a,7,1,0,3,2
"org.andengine.entity.scene.menu.MenuScene.clearMenuItems()",4,0,n/a,7,1,0,6,2
"org.andengine.entity.scene.menu.MenuScene.closeMenuScene()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.menu.MenuScene.getChildScene()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.MenuScene.getMenuItemCount()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.menu.MenuScene.getOnMenuItemClickListener()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.menu.MenuScene.onAreaTouched(TouchEvent,ITouchArea,float,float)",6,4,n/a,27,2,4,21,7
"org.andengine.entity.scene.menu.MenuScene.onSceneTouchEvent(Scene,TouchEvent)",1,2,n/a,8,1,2,4,2
"org.andengine.entity.scene.menu.MenuScene.prepareAnimations()",3,2,n/a,5,0,0,3,1
"org.andengine.entity.scene.menu.MenuScene.reset()",5,10,n/a,9,1,0,7,2
"org.andengine.entity.scene.menu.MenuScene.setChildScene(Scene,boolean,boolean,boolean)",2,3,n/a,8,1,4,3,2
"org.andengine.entity.scene.menu.MenuScene.setMenuAnimator(IMenuAnimator)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.MenuScene.setOnMenuItemClickListener(IOnMenuItemClickListener)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.AlphaMenuAnimator()",1,1,n/a,3,0,0,1,1
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.AlphaMenuAnimator(HorizontalAlign)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.AlphaMenuAnimator(HorizontalAlign,IEaseFunction)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.AlphaMenuAnimator(HorizontalAlign,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.AlphaMenuAnimator(HorizontalAlign,float,IEaseFunction)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.AlphaMenuAnimator(IEaseFunction)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.AlphaMenuAnimator(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.AlphaMenuAnimator(float,IEaseFunction)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.buildAnimations(ArrayList<IMenuItem>,float,float)",5,1,n/a,10,1,3,8,2
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator.prepareAnimations(ArrayList<IMenuItem>,float,float)",9,1,n/a,29,2,3,26,5
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.BaseMenuAnimator()",1,3,n/a,3,0,0,1,1
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.BaseMenuAnimator(HorizontalAlign)",1,3,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.BaseMenuAnimator(HorizontalAlign,IEaseFunction)",1,2,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.BaseMenuAnimator(HorizontalAlign,float)",2,5,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.BaseMenuAnimator(HorizontalAlign,float,IEaseFunction)",0,5,n/a,5,0,3,3,1
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.BaseMenuAnimator(IEaseFunction)",1,2,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.BaseMenuAnimator(float)",1,4,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.BaseMenuAnimator(float,IEaseFunction)",1,3,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.getMaximumWidth(ArrayList<IMenuItem>)",4,4,n/a,8,1,1,7,2
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator.getOverallHeight(ArrayList<IMenuItem>)",4,4,n/a,9,1,1,8,2
"org.andengine.entity.scene.menu.animator.DirectMenuAnimator.DirectMenuAnimator()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.menu.animator.DirectMenuAnimator.DirectMenuAnimator(HorizontalAlign)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.DirectMenuAnimator.DirectMenuAnimator(HorizontalAlign,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.DirectMenuAnimator.DirectMenuAnimator(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.DirectMenuAnimator.buildAnimations(ArrayList<IMenuItem>,float,float)",0,1,n/a,3,0,3,0,1
"org.andengine.entity.scene.menu.animator.DirectMenuAnimator.prepareAnimations(ArrayList<IMenuItem>,float,float)",8,1,n/a,28,2,3,25,5
"org.andengine.entity.scene.menu.animator.IMenuAnimator.buildAnimations(ArrayList<IMenuItem>,float,float)",n/a,1,3,n/a,n/a,3,n/a,n/a
"org.andengine.entity.scene.menu.animator.IMenuAnimator.prepareAnimations(ArrayList<IMenuItem>,float,float)",n/a,1,3,n/a,n/a,3,n/a,n/a
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.SlideMenuAnimator()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.SlideMenuAnimator(HorizontalAlign)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.SlideMenuAnimator(HorizontalAlign,IEaseFunction)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.SlideMenuAnimator(HorizontalAlign,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.SlideMenuAnimator(HorizontalAlign,float,IEaseFunction)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.SlideMenuAnimator(IEaseFunction)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.SlideMenuAnimator(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.SlideMenuAnimator(float,IEaseFunction)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.buildAnimations(ArrayList<IMenuItem>,float,float)",10,1,n/a,30,2,3,27,5
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator.prepareAnimations(ArrayList<IMenuItem>,float,float)",6,1,n/a,14,1,3,12,2
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,ITiledTextureRegion,ITiledSpriteVertexBufferObject)",1,0,n/a,4,0,3,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,ITiledTextureRegion,ITiledSpriteVertexBufferObject,ShaderProgram)",1,0,n/a,4,0,4,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,ITiledTextureRegion,VertexBufferObjectManager)",1,0,n/a,4,0,3,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,ITiledTextureRegion,VertexBufferObjectManager,DrawType)",1,0,n/a,4,0,4,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,ITiledTextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,ITiledTextureRegion,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,4,0,4,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject,ShaderProgram)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,float,float,ITiledTextureRegion,VertexBufferObjectManager)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",1,0,n/a,4,0,7,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.AnimatedSpriteMenuItem(int,float,float,ITiledTextureRegion,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.getID()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.onSelected()",0,2,n/a,4,0,0,0,1
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem.onUnselected()",0,5,n/a,4,0,0,0,1
"org.andengine.entity.scene.menu.item.IMenuItem.getID()",n/a,1,4,n/a,n/a,0,n/a,n/a
"org.andengine.entity.scene.menu.item.IMenuItem.onSelected()",n/a,2,4,n/a,n/a,0,n/a,n/a
"org.andengine.entity.scene.menu.item.IMenuItem.onUnselected()",n/a,5,4,n/a,n/a,0,n/a,n/a
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,ITextureRegion,ISpriteVertexBufferObject)",1,0,n/a,4,0,3,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,ITextureRegion,ISpriteVertexBufferObject,ShaderProgram)",1,0,n/a,4,0,4,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,4,0,3,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,ITextureRegion,VertexBufferObjectManager,DrawType)",1,0,n/a,4,0,4,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,ITextureRegion,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,4,0,4,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,float,float,ITextureRegion,ISpriteVertexBufferObject)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,float,float,ITextureRegion,ISpriteVertexBufferObject,ShaderProgram)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,float,float,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,float,float,ITextureRegion,VertexBufferObjectManager,DrawType)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,float,float,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",1,0,n/a,4,0,7,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.SpriteMenuItem(int,float,float,ITextureRegion,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.getID()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.onSelected()",0,2,n/a,4,0,0,0,1
"org.andengine.entity.scene.menu.item.SpriteMenuItem.onUnselected()",0,5,n/a,4,0,0,0,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,TextOptions,VertexBufferObjectManager)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,TextOptions,VertexBufferObjectManager,DrawType)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,TextOptions,VertexBufferObjectManager,DrawType,ShaderProgram)",1,0,n/a,4,0,7,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,TextOptions,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,VertexBufferObjectManager)",1,0,n/a,4,0,4,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,VertexBufferObjectManager,DrawType)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,VertexBufferObjectManager,DrawType,ShaderProgram)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,int,TextOptions,ITextVertexBufferObject)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,int,TextOptions,ITextVertexBufferObject,ShaderProgram)",1,0,n/a,4,0,7,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,int,TextOptions,VertexBufferObjectManager)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,int,TextOptions,VertexBufferObjectManager,DrawType)",1,0,n/a,4,0,7,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,int,TextOptions,VertexBufferObjectManager,DrawType,ShaderProgram)",1,0,n/a,4,0,8,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,int,VertexBufferObjectManager)",1,0,n/a,4,0,5,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,int,VertexBufferObjectManager,DrawType)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,int,VertexBufferObjectManager,DrawType,ShaderProgram)",1,0,n/a,4,0,7,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.TextMenuItem(int,IFont,CharSequence,int,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.scene.menu.item.TextMenuItem.getID()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.TextMenuItem.onSelected()",0,2,n/a,4,0,0,0,1
"org.andengine.entity.scene.menu.item.TextMenuItem.onUnselected()",0,5,n/a,4,0,0,0,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.BaseMenuItemDecorator(IMenuItem)",0,2,n/a,3,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.attachChild(IEntity)",1,2,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.callOnChildren(IEntityParameterCallable)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.callOnChildren(IEntityParameterCallable,IEntityMatcher)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.clearEntityModifiers()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.clearUpdateHandlers()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.collidesWith(IShape)",1,2,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.contains(float,float)",1,3,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.convertLocalToSceneCoordinates(float,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.convertLocalToSceneCoordinates(float,float,float[])",1,1,n/a,4,0,3,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.convertLocalToSceneCoordinates(float[])",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.convertLocalToSceneCoordinates(float[],float[])",1,1,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.convertSceneToLocalCoordinates(float,float)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.convertSceneToLocalCoordinates(float,float,float[])",1,1,n/a,4,0,3,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.convertSceneToLocalCoordinates(float[])",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.convertSceneToLocalCoordinates(float[],float[])",1,1,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.detachChild(IEntity)",1,2,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.detachChild(IEntityMatcher)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.detachChild(int)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.detachChildren()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.detachChildren(IEntityMatcher)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.detachSelf()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.dispose()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getAlpha()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getBlendFunctionDestination()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getBlendFunctionSource()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getBlue()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getChildByIndex(int)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getChildByMatcher(IEntityMatcher)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getChildByTag(int)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getChildCount()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getColor()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getEntityModifierCount()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getFirstChild()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getGreen()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getHeight()",1,8,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getHeightScaled()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getID()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getLastChild()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getLocalToParentTransformation()",1,5,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getLocalToSceneTransformation()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getParent()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getParentToLocalTransformation()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getRed()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getRotation()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getRotationCenterX()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getRotationCenterY()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getScaleCenterX()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getScaleCenterY()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getScaleX()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getScaleY()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getSceneCenterCoordinates()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getSceneCenterCoordinates(float[])",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getSceneToLocalTransformation()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getShaderProgram()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getSkewCenterX()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getSkewCenterY()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getSkewX()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getSkewY()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getTag()",1,4,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getUpdateHandlerCount()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getUserData()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getVertexBufferObject()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getVertexBufferObjectManager()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getWidth()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getWidthScaled()",1,9,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getX()",1,9,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getY()",1,9,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.getZIndex()",1,4,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.hasParent()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isBlendingEnabled()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isChildrenIgnoreUpdate()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isChildrenVisible()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isCulled(Camera)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isCullingEnabled()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isDisposed()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isIgnoreUpdate()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isRotated()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isRotatedOrScaledOrSkewed()",1,5,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isScaled()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isSkewed()",1,1,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.isVisible()",1,5,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onAreaTouched(TouchEvent,float,float)",1,5,n/a,4,0,3,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onAttached()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onDetached()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onDraw(GLState,Camera)",1,8,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onMenuItemReset(IMenuItem)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onMenuItemSelected(IMenuItem)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onMenuItemUnselected(IMenuItem)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onSelected()",2,2,n/a,5,0,0,2,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onUnselected()",2,5,n/a,5,0,0,2,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.onUpdate(float)",1,7,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.query(IEntityMatcher)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.query(IEntityMatcher,L)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.queryFirst(IEntityMatcher)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.queryFirstForSubclass(IEntityMatcher)",1,2,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.queryForSubclass(IEntityMatcher)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.queryForSubclass(IEntityMatcher,L)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.registerEntityModifier(IEntityModifier)",1,2,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.registerUpdateHandler(IUpdateHandler)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.reset()",2,4,n/a,5,0,0,2,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setAlpha(float)",1,7,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setBlendFunction(int,int)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setBlendFunctionDestination(int)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setBlendFunctionSource(int)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setBlendingEnabled(boolean)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setBlue(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setChildrenIgnoreUpdate(boolean)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setChildrenVisible(boolean)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setColor(Color)",1,5,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setColor(float,float,float)",1,6,n/a,4,0,3,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setColor(float,float,float,float)",1,1,n/a,4,0,4,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setCullingEnabled(boolean)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setGreen(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setHeight(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setIgnoreUpdate(boolean)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setParent(IEntity)",1,3,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setPosition(IEntity)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setPosition(float,float)",1,15,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setRed(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setRotation(float)",1,8,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setRotationCenter(float,float)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setRotationCenterX(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setRotationCenterY(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setScale(float)",1,6,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setScale(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setScaleCenter(float,float)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setScaleCenterX(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setScaleCenterY(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setScaleX(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setScaleY(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setShaderProgram(ShaderProgram)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setSize(float,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setSkew(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setSkew(float,float)",1,3,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setSkewCenter(float,float)",1,1,n/a,4,0,2,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setSkewCenterX(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setSkewCenterY(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setSkewX(float)",1,3,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setSkewY(float)",1,3,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setTag(int)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setUserData(Object)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setVisible(boolean)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setWidth(float)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setX(float)",1,3,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setY(float)",1,3,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.setZIndex(int)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.sortChildren()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.sortChildren(IEntityComparator)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.sortChildren(boolean)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.toString(StringBuilder)",1,2,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.unregisterEntityModifier(IEntityModifier)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.unregisterEntityModifiers(IEntityModifierMatcher)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.unregisterUpdateHandler(IUpdateHandler)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator.unregisterUpdateHandlers(IUpdateHandlerMatcher)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator.ColorMenuItemDecorator(IMenuItem,Color,Color)",2,0,n/a,6,0,3,4,1
"org.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator.onMenuItemReset(IMenuItem)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator.onMenuItemSelected(IMenuItem)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator.onMenuItemUnselected(IMenuItem)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator.ScaleMenuItemDecorator(IMenuItem,float,float)",2,0,n/a,6,0,3,4,1
"org.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator.onMenuItemReset(IMenuItem)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator.onMenuItemSelected(IMenuItem)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator.onMenuItemUnselected(IMenuItem)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.shape.IAreaShape.getHeight()",n/a,8,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IAreaShape.getHeightScaled()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IAreaShape.getWidth()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IAreaShape.getWidthScaled()",n/a,9,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IAreaShape.setHeight(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.shape.IAreaShape.setSize(float,float)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.shape.IAreaShape.setWidth(float)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.shape.IShape.collidesWith(IShape)",n/a,2,5,n/a,n/a,1,n/a,n/a
"org.andengine.entity.shape.IShape.getBlendFunctionDestination()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IShape.getBlendFunctionSource()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IShape.getShaderProgram()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IShape.getVertexBufferObject()",n/a,3,8,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IShape.getVertexBufferObjectManager()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IShape.isBlendingEnabled()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.IShape.setBlendFunction(int,int)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.andengine.entity.shape.IShape.setBlendFunctionDestination(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.shape.IShape.setBlendFunctionSource(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.shape.IShape.setBlendingEnabled(boolean)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.shape.IShape.setShaderProgram(ShaderProgram)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.shape.RectangularShape.RectangularShape(float,float,float,float,ShaderProgram)",4,3,n/a,8,0,5,6,1
"org.andengine.entity.shape.RectangularShape.collidesWith(IShape)",2,2,n/a,10,1,1,5,3
"org.andengine.entity.shape.RectangularShape.contains(float,float)",1,4,n/a,4,0,2,1,1
"org.andengine.entity.shape.RectangularShape.getHeight()",0,31,n/a,4,0,0,1,1
"org.andengine.entity.shape.RectangularShape.getHeightScaled()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.shape.RectangularShape.getSceneCenterCoordinates()",1,3,n/a,4,0,0,1,1
"org.andengine.entity.shape.RectangularShape.getSceneCenterCoordinates(float[])",1,1,n/a,4,0,1,1,1
"org.andengine.entity.shape.RectangularShape.getWidth()",0,26,n/a,4,0,0,1,1
"org.andengine.entity.shape.RectangularShape.getWidthScaled()",1,10,n/a,4,0,0,1,1
"org.andengine.entity.shape.RectangularShape.isCulled(Camera)",1,2,n/a,4,0,1,1,1
"org.andengine.entity.shape.RectangularShape.reset()",4,11,n/a,7,0,0,4,1
"org.andengine.entity.shape.RectangularShape.resetRotationCenter()",0,2,n/a,4,0,0,2,1
"org.andengine.entity.shape.RectangularShape.resetScaleCenter()",0,2,n/a,4,0,0,2,1
"org.andengine.entity.shape.RectangularShape.resetSkewCenter()",0,2,n/a,4,0,0,2,1
"org.andengine.entity.shape.RectangularShape.setHeight(float)",1,1,n/a,5,0,1,2,1
"org.andengine.entity.shape.RectangularShape.setSize(float,float)",1,1,n/a,6,0,2,3,1
"org.andengine.entity.shape.RectangularShape.setWidth(float)",1,1,n/a,5,0,1,2,1
"org.andengine.entity.shape.Shape.Shape(float,float,ShaderProgram)",1,4,n/a,4,0,3,2,1
"org.andengine.entity.shape.Shape.dispose()",5,6,n/a,8,1,0,4,4
"org.andengine.entity.shape.Shape.getBlendFunctionDestination()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.shape.Shape.getBlendFunctionSource()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.shape.Shape.getShaderProgram()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.shape.Shape.getVertexBufferObjectManager()",2,1,n/a,4,0,0,1,1
"org.andengine.entity.shape.Shape.initBlendFunction(ITexture)",2,5,n/a,3,0,1,1,1
"org.andengine.entity.shape.Shape.initBlendFunction(ITextureRegion)",2,1,n/a,3,0,1,1,1
"org.andengine.entity.shape.Shape.initBlendFunction(TextureOptions)",1,1,n/a,5,1,1,2,2
"org.andengine.entity.shape.Shape.isBlendingEnabled()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.shape.Shape.onAreaTouched(TouchEvent,float,float)",0,6,n/a,4,0,3,1,1
"org.andengine.entity.shape.Shape.onUpdateVertices()",n/a,3,7,n/a,n/a,0,n/a,n/a
"org.andengine.entity.shape.Shape.postDraw(GLState,Camera)",1,8,n/a,6,1,2,2,2
"org.andengine.entity.shape.Shape.preDraw(GLState,Camera)",2,8,n/a,7,1,2,3,2
"org.andengine.entity.shape.Shape.reset()",1,9,n/a,6,0,0,3,1
"org.andengine.entity.shape.Shape.setBlendFunction(int,int)",0,3,n/a,5,0,2,2,1
"org.andengine.entity.shape.Shape.setBlendFunctionDestination(int)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.shape.Shape.setBlendFunctionSource(int)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.shape.Shape.setBlendingEnabled(boolean)",0,7,n/a,4,0,1,1,1
"org.andengine.entity.shape.Shape.setShaderProgram(ShaderProgram)",0,1,n/a,4,0,1,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject)",1,1,n/a,3,0,4,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject,ShaderProgram)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager)",1,1,n/a,3,0,4,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager,ShaderProgram)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject)",2,1,n/a,3,0,6,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject,ShaderProgram)",1,1,n/a,3,0,7,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,float,float,ITiledTextureRegion,VertexBufferObjectManager)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType)",1,1,n/a,3,0,7,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",1,1,n/a,3,0,8,1,1
"org.andengine.entity.sprite.AnimatedSprite.AnimatedSprite(float,float,float,float,ITiledTextureRegion,VertexBufferObjectManager,ShaderProgram)",1,1,n/a,3,0,7,1,1
"org.andengine.entity.sprite.AnimatedSprite.IAnimationListener.onAnimationFinished(AnimatedSprite)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.AnimatedSprite.IAnimationListener.onAnimationFrameChanged(AnimatedSprite,int,int)",n/a,3,0,n/a,n/a,3,n/a,n/a
"org.andengine.entity.sprite.AnimatedSprite.IAnimationListener.onAnimationLoopFinished(AnimatedSprite,int,int)",n/a,2,0,n/a,n/a,3,n/a,n/a
"org.andengine.entity.sprite.AnimatedSprite.IAnimationListener.onAnimationStarted(AnimatedSprite,int)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.andengine.entity.sprite.AnimatedSprite.animate(IAnimationData)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(IAnimationData,IAnimationListener)",2,1,n/a,4,0,2,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long,IAnimationListener)",3,1,n/a,4,0,2,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long,boolean)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long,boolean,IAnimationListener)",3,1,n/a,4,0,3,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long,int)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long,int,IAnimationListener)",3,1,n/a,4,0,3,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[])",1,0,n/a,3,0,1,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],IAnimationListener)",2,1,n/a,4,0,2,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],boolean)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],boolean,IAnimationListener)",2,1,n/a,4,0,3,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int,IAnimationListener)",2,1,n/a,4,0,3,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int,int,boolean)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int,int,boolean,IAnimationListener)",2,1,n/a,4,0,5,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int,int,int)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int,int,int,IAnimationListener)",2,1,n/a,4,0,5,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int[])",1,0,n/a,9,0,2,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int[],IAnimationListener)",2,1,n/a,11,0,3,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int[],boolean)",1,0,n/a,10,0,3,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int[],boolean,IAnimationListener)",2,1,n/a,12,0,4,2,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int[],int)",1,0,n/a,10,0,3,1,1
"org.andengine.entity.sprite.AnimatedSprite.animate(long[],int[],int,IAnimationListener)",2,1,n/a,12,0,4,2,1
"org.andengine.entity.sprite.AnimatedSprite.initAnimation(IAnimationListener)",1,12,n/a,7,0,1,5,1
"org.andengine.entity.sprite.AnimatedSprite.isAnimationRunning()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.sprite.AnimatedSprite.onManagedUpdate(float)",17,5,n/a,61,4,1,40,18
"org.andengine.entity.sprite.AnimatedSprite.stopAnimation()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.sprite.AnimatedSprite.stopAnimation(int)",1,0,n/a,4,0,1,2,1
"org.andengine.entity.sprite.AnimationData.AnimationData()",0,1,n/a,3,0,0,0,1
"org.andengine.entity.sprite.AnimationData.AnimationData(IAnimationData)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.sprite.AnimationData.AnimationData(long,int)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.sprite.AnimationData.AnimationData(long,int,boolean)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.sprite.AnimationData.AnimationData(long,int,int)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.sprite.AnimationData.AnimationData(long[])",1,0,n/a,3,0,1,1,1
"org.andengine.entity.sprite.AnimationData.AnimationData(long[],boolean)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.sprite.AnimationData.AnimationData(long[],int)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.sprite.AnimationData.AnimationData(long[],int,int,boolean)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.AnimationData.AnimationData(long[],int,int,int)",1,0,n/a,9,0,4,1,1
"org.andengine.entity.sprite.AnimationData.AnimationData(long[],int[],int)",1,1,n/a,10,0,3,1,1
"org.andengine.entity.sprite.AnimationData.calculateCurrentFrameIndex(long)",0,1,n/a,15,2,1,8,3
"org.andengine.entity.sprite.AnimationData.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.entity.sprite.AnimationData.fillFrameDurations(long,int)",1,1,n/a,5,0,2,3,1
"org.andengine.entity.sprite.AnimationData.getAnimationDuration()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.sprite.AnimationData.getFirstFrameIndex()",0,3,n/a,4,0,0,1,1
"org.andengine.entity.sprite.AnimationData.getFrameCount()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.sprite.AnimationData.getFrameDurations()",0,1,n/a,4,0,0,1,1
"org.andengine.entity.sprite.AnimationData.getFrames()",0,2,n/a,4,0,0,1,1
"org.andengine.entity.sprite.AnimationData.getLoopCount()",0,3,n/a,4,0,0,1,1
"org.andengine.entity.sprite.AnimationData.set(IAnimationData)",6,2,n/a,4,0,1,1,1
"org.andengine.entity.sprite.AnimationData.set(long,int)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.sprite.AnimationData.set(long,int,boolean)",1,3,n/a,4,0,3,1,2
"org.andengine.entity.sprite.AnimationData.set(long,int,int)",2,3,n/a,4,0,3,1,1
"org.andengine.entity.sprite.AnimationData.set(long[])",1,2,n/a,4,0,1,1,1
"org.andengine.entity.sprite.AnimationData.set(long[],boolean)",1,3,n/a,4,0,2,1,2
"org.andengine.entity.sprite.AnimationData.set(long[],int)",1,4,n/a,4,0,2,1,1
"org.andengine.entity.sprite.AnimationData.set(long[],int,int)",1,0,n/a,4,0,3,1,1
"org.andengine.entity.sprite.AnimationData.set(long[],int,int,boolean)",1,3,n/a,4,0,4,1,2
"org.andengine.entity.sprite.AnimationData.set(long[],int,int,int)",2,4,n/a,13,1,4,3,2
"org.andengine.entity.sprite.AnimationData.set(long[],int,int[],int,int)",2,3,n/a,17,1,5,13,4
"org.andengine.entity.sprite.AnimationData.set(long[],int[])",1,1,n/a,10,0,2,1,1
"org.andengine.entity.sprite.AnimationData.set(long[],int[],boolean)",1,2,n/a,11,0,3,1,2
"org.andengine.entity.sprite.AnimationData.set(long[],int[],int)",1,3,n/a,11,0,3,1,1
"org.andengine.entity.sprite.ButtonSprite.ButtonSprite(float,float,ITextureRegion,ITextureRegion,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.sprite.ButtonSprite.ButtonSprite(float,float,ITextureRegion,ITextureRegion,ITextureRegion,VertexBufferObjectManager,OnClickListener)",3,1,n/a,3,0,7,1,1
"org.andengine.entity.sprite.ButtonSprite.ButtonSprite(float,float,ITextureRegion,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.ButtonSprite.ButtonSprite(float,float,ITextureRegion,ITextureRegion,VertexBufferObjectManager,OnClickListener)",3,1,n/a,3,0,6,1,1
"org.andengine.entity.sprite.ButtonSprite.ButtonSprite(float,float,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.ButtonSprite.ButtonSprite(float,float,ITextureRegion,VertexBufferObjectManager,OnClickListener)",3,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.ButtonSprite.ButtonSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.ButtonSprite.ButtonSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager,OnClickListener)",11,4,n/a,17,1,5,14,5
"org.andengine.entity.sprite.ButtonSprite.OnClickListener.onClick(ButtonSprite,float,float)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.andengine.entity.sprite.ButtonSprite.State.State(int)",0,3,n/a,3,0,1,1,1
"org.andengine.entity.sprite.ButtonSprite.State.getTiledTextureRegionIndex()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.sprite.ButtonSprite.changeState(State)",10,7,n/a,13,1,1,8,3
"org.andengine.entity.sprite.ButtonSprite.contains(float,float)",2,5,n/a,8,1,2,3,2
"org.andengine.entity.sprite.ButtonSprite.getState()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.sprite.ButtonSprite.isEnabled()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.sprite.ButtonSprite.isPressed()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.sprite.ButtonSprite.onAreaTouched(TouchEvent,float,float)",12,6,n/a,16,2,3,11,8
"org.andengine.entity.sprite.ButtonSprite.setEnabled(boolean)",2,0,n/a,8,1,1,5,4
"org.andengine.entity.sprite.ButtonSprite.setOnClickListener(OnClickListener)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,ITextureRegion,IDiamondSpriteVertexBufferObject)",3,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,ITextureRegion,IDiamondSpriteVertexBufferObject,ShaderProgram)",3,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,ITextureRegion,VertexBufferObjectManager)",3,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,ITextureRegion,VertexBufferObjectManager,DrawType)",3,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",3,0,n/a,3,0,6,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,ITextureRegion,VertexBufferObjectManager,ShaderProgram)",3,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,float,float,ITextureRegion,IDiamondSpriteVertexBufferObject)",1,2,n/a,3,0,6,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,float,float,ITextureRegion,IDiamondSpriteVertexBufferObject,ShaderProgram)",1,2,n/a,3,0,7,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,DrawType)",2,3,n/a,3,0,7,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",2,3,n/a,3,0,8,1,1
"org.andengine.entity.sprite.DiamondSprite.DiamondSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,3,0,7,1,1
"org.andengine.entity.sprite.IAnimationData.calculateCurrentFrameIndex(long)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.deepCopy()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.getAnimationDuration()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.getFirstFrameIndex()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.getFrameCount()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.getFrameDurations()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.getFrames()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.getLoopCount()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(IAnimationData)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long,int)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long,int,boolean)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long,int,int)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long[])",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long[],boolean)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long[],int)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long[],int,int)",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long[],int,int,boolean)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long[],int,int,int)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long[],int[])",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long[],int[],boolean)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.andengine.entity.sprite.IAnimationData.set(long[],int[],int)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.andengine.entity.sprite.Sprite.Sprite(float,float,ITextureRegion,ISpriteVertexBufferObject)",3,1,n/a,3,0,4,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,ITextureRegion,ISpriteVertexBufferObject,ShaderProgram)",3,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,ITextureRegion,VertexBufferObjectManager)",3,4,n/a,3,0,4,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,ITextureRegion,VertexBufferObjectManager,DrawType)",3,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",3,1,n/a,3,0,6,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,ITextureRegion,VertexBufferObjectManager,ShaderProgram)",3,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,float,float,ITextureRegion,ISpriteVertexBufferObject)",2,3,n/a,3,0,6,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,float,float,ITextureRegion,ISpriteVertexBufferObject,ShaderProgram)",6,8,n/a,10,0,7,8,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager)",1,2,n/a,3,0,6,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,DrawType)",2,4,n/a,3,0,7,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",2,5,n/a,3,0,8,1,1
"org.andengine.entity.sprite.Sprite.Sprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,ShaderProgram)",1,1,n/a,3,0,7,1,1
"org.andengine.entity.sprite.Sprite.draw(GLState,Camera)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.sprite.Sprite.getTextureRegion()",0,17,n/a,3,0,0,1,1
"org.andengine.entity.sprite.Sprite.getVertexBufferObject()",0,4,n/a,4,0,0,1,1
"org.andengine.entity.sprite.Sprite.isFlippedHorizontal()",0,20,n/a,3,0,0,1,1
"org.andengine.entity.sprite.Sprite.isFlippedVertical()",0,10,n/a,3,0,0,1,1
"org.andengine.entity.sprite.Sprite.onUpdateColor()",1,8,n/a,4,0,0,1,1
"org.andengine.entity.sprite.Sprite.onUpdateTextureCoordinates()",1,4,n/a,3,0,0,1,1
"org.andengine.entity.sprite.Sprite.onUpdateVertices()",1,4,n/a,4,0,0,1,1
"org.andengine.entity.sprite.Sprite.postDraw(GLState,Camera)",2,8,n/a,5,0,2,2,1
"org.andengine.entity.sprite.Sprite.preDraw(GLState,Camera)",5,9,n/a,6,0,2,3,1
"org.andengine.entity.sprite.Sprite.reset()",4,11,n/a,5,0,0,2,1
"org.andengine.entity.sprite.Sprite.setFlipped(boolean,boolean)",1,0,n/a,7,1,2,4,3
"org.andengine.entity.sprite.Sprite.setFlippedHorizontal(boolean)",1,0,n/a,6,1,1,3,2
"org.andengine.entity.sprite.Sprite.setFlippedVertical(boolean)",1,0,n/a,6,1,1,3,2
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject)",3,1,n/a,3,0,4,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject,ShaderProgram)",3,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager)",1,1,n/a,3,0,4,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType)",3,3,n/a,3,0,5,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",3,3,n/a,3,0,6,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,ITiledTextureRegion,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject)",2,2,n/a,3,0,6,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,float,float,ITiledTextureRegion,ITiledSpriteVertexBufferObject,ShaderProgram)",1,5,n/a,4,0,7,2,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,float,float,ITiledTextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType)",3,4,n/a,3,0,7,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,float,float,ITiledTextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",3,4,n/a,3,0,8,1,1
"org.andengine.entity.sprite.TiledSprite.TiledSprite(float,float,float,float,ITiledTextureRegion,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,3,0,7,1,1
"org.andengine.entity.sprite.TiledSprite.draw(GLState,Camera)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.sprite.TiledSprite.getCurrentTileIndex()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.sprite.TiledSprite.getTextureRegion()",2,17,n/a,4,0,0,1,1
"org.andengine.entity.sprite.TiledSprite.getTileCount()",2,9,n/a,3,0,0,1,1
"org.andengine.entity.sprite.TiledSprite.getTiledTextureRegion()",0,4,n/a,3,0,0,1,1
"org.andengine.entity.sprite.TiledSprite.getVertexBufferObject()",1,7,n/a,4,0,0,1,1
"org.andengine.entity.sprite.TiledSprite.onUpdateColor()",2,8,n/a,4,0,0,1,1
"org.andengine.entity.sprite.TiledSprite.onUpdateTextureCoordinates()",2,4,n/a,4,0,0,1,1
"org.andengine.entity.sprite.TiledSprite.onUpdateVertices()",2,4,n/a,4,0,0,1,1
"org.andengine.entity.sprite.TiledSprite.setCurrentTileIndex(int)",0,7,n/a,3,0,1,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,ITextureRegion,IUncoloredSpriteVertexBufferObject)",3,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,ITextureRegion,IUncoloredSpriteVertexBufferObject,ShaderProgram)",3,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,ITextureRegion,ShaderProgram,VertexBufferObjectManager)",3,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,ITextureRegion,VertexBufferObjectManager)",3,1,n/a,3,0,4,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,ITextureRegion,VertexBufferObjectManager,DrawType)",3,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",3,0,n/a,3,0,6,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,float,float,ITextureRegion,IUncoloredSpriteVertexBufferObject)",2,2,n/a,3,0,6,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,float,float,ITextureRegion,IUncoloredSpriteVertexBufferObject,ShaderProgram)",1,3,n/a,3,0,7,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,DrawType)",2,3,n/a,3,0,7,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",2,3,n/a,3,0,8,1,1
"org.andengine.entity.sprite.UncoloredSprite.UncoloredSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,3,0,7,1,1
"org.andengine.entity.sprite.UncoloredSprite.onUpdateColor()",0,8,n/a,4,0,0,0,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,ITextureRegion,IUniformColorSpriteVertexBufferObject)",3,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,ITextureRegion,IUniformColorSpriteVertexBufferObject,ShaderProgram)",3,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,ITextureRegion,VertexBufferObjectManager)",3,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,ITextureRegion,VertexBufferObjectManager,DrawType)",3,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",3,0,n/a,3,0,6,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,ITextureRegion,VertexBufferObjectManager,ShaderProgram)",3,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,float,float,ITextureRegion,IUniformColorSpriteVertexBufferObject)",2,1,n/a,3,0,6,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,float,float,ITextureRegion,IUniformColorSpriteVertexBufferObject,ShaderProgram)",1,3,n/a,3,0,7,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,DrawType)",2,3,n/a,3,0,7,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,DrawType,ShaderProgram)",2,4,n/a,3,0,8,1,1
"org.andengine.entity.sprite.UniformColorSprite.UniformColorSprite(float,float,float,float,ITextureRegion,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,3,0,7,1,1
"org.andengine.entity.sprite.UniformColorSprite.draw(GLState,Camera)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.sprite.UniformColorSprite.preDraw(GLState,Camera)",6,9,n/a,5,0,2,2,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(ITexture,int,ISpriteBatchVertexBufferObject)",1,1,n/a,3,0,3,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(ITexture,int,ISpriteBatchVertexBufferObject,ShaderProgram)",1,1,n/a,3,0,4,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(ITexture,int,VertexBufferObjectManager)",1,1,n/a,3,0,3,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(ITexture,int,VertexBufferObjectManager,DrawType)",1,1,n/a,3,0,4,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(ITexture,int,VertexBufferObjectManager,DrawType,ShaderProgram)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(ITexture,int,VertexBufferObjectManager,ShaderProgram)",1,1,n/a,3,0,4,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(float,float,ITexture,int,ISpriteBatchVertexBufferObject)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(float,float,ITexture,int,ISpriteBatchVertexBufferObject,ShaderProgram)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(float,float,ITexture,int,VertexBufferObjectManager)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(float,float,ITexture,int,VertexBufferObjectManager,DrawType)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(float,float,ITexture,int,VertexBufferObjectManager,DrawType,ShaderProgram)",1,1,n/a,3,0,7,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.DynamicSpriteBatch(float,float,ITexture,int,VertexBufferObjectManager,ShaderProgram)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.begin()",3,2,n/a,7,1,0,3,2
"org.andengine.entity.sprite.batch.DynamicSpriteBatch.onUpdateSpriteBatch()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(ITexture,int,ISpriteBatchVertexBufferObject)",2,2,n/a,3,0,3,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(ITexture,int,ISpriteBatchVertexBufferObject,ShaderProgram)",1,3,n/a,3,0,4,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(ITexture,int,VertexBufferObjectManager)",1,2,n/a,3,0,3,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(ITexture,int,VertexBufferObjectManager,DrawType)",2,3,n/a,3,0,4,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(ITexture,int,VertexBufferObjectManager,DrawType,ShaderProgram)",2,3,n/a,3,0,5,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(ITexture,int,VertexBufferObjectManager,ShaderProgram)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(float,float,ITexture,VertexBufferObjectManager,int,ShaderProgram)",1,0,n/a,3,0,6,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(float,float,ITexture,int,ISpriteBatchVertexBufferObject)",2,2,n/a,3,0,5,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(float,float,ITexture,int,ISpriteBatchVertexBufferObject,ShaderProgram)",3,4,n/a,8,0,6,6,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(float,float,ITexture,int,VertexBufferObjectManager)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(float,float,ITexture,int,VertexBufferObjectManager,DrawType)",2,3,n/a,3,0,6,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.SpriteBatch(float,float,ITexture,int,VertexBufferObjectManager,DrawType,ShaderProgram)",2,3,n/a,3,0,7,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.add(ITextureRegion,float,float,Transformation,float,float,float,float)",2,5,n/a,22,0,8,10,1
"org.andengine.entity.sprite.batch.SpriteBatch.add(ITextureRegion,float,float,float,float,float)",1,2,n/a,11,0,6,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.add(ITextureRegion,float,float,float,float,float,float,float,float)",1,4,n/a,14,0,9,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.add(ITextureRegion,float,float,float,float,float,float,float,float,float)",6,2,n/a,22,0,10,8,1
"org.andengine.entity.sprite.batch.SpriteBatch.add(ITextureRegion,float,float,float,float,float,float,float,float,float,float)",6,2,n/a,24,0,11,8,1
"org.andengine.entity.sprite.batch.SpriteBatch.add(ITextureRegion,float,float,float,float,float,float,float,float,float,float,float)",7,2,n/a,25,0,12,9,1
"org.andengine.entity.sprite.batch.SpriteBatch.addInner(ITextureRegion,float,float,float,float,float,float,float,float)",2,1,n/a,8,0,9,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.addInner(ITextureRegion,float,float,float,float,float,float,float,float,float,float,float,float)",2,3,n/a,8,0,13,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.addWithPackedColor(ITextureRegion,float,float,Transformation,float)",2,5,n/a,19,0,5,10,1
"org.andengine.entity.sprite.batch.SpriteBatch.addWithPackedColor(ITextureRegion,float,float,float,float,float)",1,2,n/a,11,0,6,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.addWithPackedColor(ITextureRegion,float,float,float,float,float,float)",6,0,n/a,19,0,7,8,1
"org.andengine.entity.sprite.batch.SpriteBatch.addWithPackedColor(ITextureRegion,float,float,float,float,float,float,float)",6,0,n/a,21,0,8,8,1
"org.andengine.entity.sprite.batch.SpriteBatch.addWithPackedColor(ITextureRegion,float,float,float,float,float,float,float,float)",7,0,n/a,22,0,9,9,1
"org.andengine.entity.sprite.batch.SpriteBatch.assertCapacity()",1,8,n/a,5,1,0,2,2
"org.andengine.entity.sprite.batch.SpriteBatch.assertCapacity(int)",1,1,n/a,5,1,1,2,2
"org.andengine.entity.sprite.batch.SpriteBatch.assertTexture(ITextureRegion)",2,9,n/a,5,1,1,2,2
"org.andengine.entity.sprite.batch.SpriteBatch.begin()",0,2,n/a,3,0,0,0,1
"org.andengine.entity.sprite.batch.SpriteBatch.collidesWith(IShape)",0,2,n/a,4,0,1,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.contains(float,float)",0,3,n/a,4,0,2,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.dispose()",4,6,n/a,7,1,0,3,4
"org.andengine.entity.sprite.batch.SpriteBatch.draw(GLState,Camera)",3,2,n/a,6,0,2,3,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(ITextureRegion,IEntity,float,float)",3,0,n/a,6,0,4,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(ITextureRegion,IEntity,float,float,float)",9,3,n/a,15,2,5,7,3
"org.andengine.entity.sprite.batch.SpriteBatch.draw(ITextureRegion,IEntity,float,float,float,float,float,float)",9,1,n/a,15,2,8,7,3
"org.andengine.entity.sprite.batch.SpriteBatch.draw(ITextureRegion,float,float,float,float,float)",3,0,n/a,9,0,6,4,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(ITextureRegion,float,float,float,float,float,float,float,float)",3,0,n/a,9,0,9,4,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(ITextureRegion,float,float,float,float,float,float,float,float,float)",3,0,n/a,9,0,10,4,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(ITextureRegion,float,float,float,float,float,float,float,float,float,float)",3,0,n/a,9,0,11,4,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(ITextureRegion,float,float,float,float,float,float,float,float,float,float,float)",3,0,n/a,9,0,12,4,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(ITextureRegion,float,float,float,float,float,float,float,float,float,float,float,float)",3,0,n/a,9,0,13,4,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(Sprite)",6,0,n/a,6,0,1,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(Sprite,float)",4,0,n/a,6,0,2,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.draw(Sprite,float,float,float,float)",4,0,n/a,6,0,5,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(ITextureRegion,IEntity,float,float)",3,0,n/a,3,0,4,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(ITextureRegion,IEntity,float,float,float)",7,4,n/a,10,2,5,5,3
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(ITextureRegion,IEntity,float,float,float,float,float,float)",7,1,n/a,10,2,8,5,3
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(ITextureRegion,float,float,float,float,float)",1,0,n/a,4,0,6,2,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(ITextureRegion,float,float,float,float,float,float,float,float)",1,0,n/a,4,0,9,2,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(ITextureRegion,float,float,float,float,float,float,float,float,float)",1,0,n/a,4,0,10,2,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(ITextureRegion,float,float,float,float,float,float,float,float,float,float)",1,0,n/a,4,0,11,2,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(ITextureRegion,float,float,float,float,float,float,float,float,float,float,float)",1,0,n/a,4,0,12,2,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(ITextureRegion,float,float,float,float,float,float,float,float,float,float,float,float)",1,0,n/a,4,0,13,2,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(Sprite)",6,1,n/a,3,0,1,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(Sprite,float)",4,1,n/a,3,0,2,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.drawWithoutChecks(Sprite,float,float,float,float)",4,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.end()",0,1,n/a,3,0,0,0,1
"org.andengine.entity.sprite.batch.SpriteBatch.getIndex()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.getTexture()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.getVertexBufferObject()",0,3,n/a,4,0,0,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.onSubmit()",2,1,n/a,6,0,0,4,1
"org.andengine.entity.sprite.batch.SpriteBatch.onUpdateVertices()",0,3,n/a,4,0,0,0,1
"org.andengine.entity.sprite.batch.SpriteBatch.postDraw(GLState,Camera)",3,8,n/a,8,1,2,4,2
"org.andengine.entity.sprite.batch.SpriteBatch.preDraw(GLState,Camera)",5,8,n/a,10,1,2,6,2
"org.andengine.entity.sprite.batch.SpriteBatch.reset()",2,9,n/a,5,0,0,2,1
"org.andengine.entity.sprite.batch.SpriteBatch.setIndex(int)",2,2,n/a,6,0,1,4,1
"org.andengine.entity.sprite.batch.SpriteBatch.setTexture(ITexture)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.sprite.batch.SpriteBatch.submit()",1,3,n/a,3,0,0,1,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(ITexture,int,ISpriteBatchVertexBufferObject)",2,0,n/a,5,0,3,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(ITexture,int,ISpriteBatchVertexBufferObject,ShaderProgram)",2,0,n/a,5,0,4,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(ITexture,int,VertexBufferObjectManager)",2,0,n/a,5,0,3,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(ITexture,int,VertexBufferObjectManager,DrawType)",2,0,n/a,5,0,4,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(ITexture,int,VertexBufferObjectManager,DrawType,ShaderProgram)",2,0,n/a,5,0,5,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(ITexture,int,VertexBufferObjectManager,ShaderProgram)",2,0,n/a,5,0,4,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(float,float,ITexture,int,ISpriteBatchVertexBufferObject)",2,0,n/a,5,0,5,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(float,float,ITexture,int,ISpriteBatchVertexBufferObject,ShaderProgram)",2,0,n/a,5,0,6,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(float,float,ITexture,int,VertexBufferObjectManager)",2,0,n/a,5,0,5,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(float,float,ITexture,int,VertexBufferObjectManager,DrawType)",2,0,n/a,5,0,6,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(float,float,ITexture,int,VertexBufferObjectManager,DrawType,ShaderProgram)",2,0,n/a,5,0,7,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.SpriteGroup(float,float,ITexture,int,VertexBufferObjectManager,ShaderProgram)",2,0,n/a,5,0,6,2,1
"org.andengine.entity.sprite.batch.SpriteGroup.assertCapacity()",3,1,n/a,5,1,0,2,2
"org.andengine.entity.sprite.batch.SpriteGroup.attachChild(IEntity)",3,7,n/a,12,1,1,3,2
"org.andengine.entity.sprite.batch.SpriteGroup.attachChild(Sprite)",4,1,n/a,5,0,1,3,1
"org.andengine.entity.sprite.batch.SpriteGroup.attachChildren(ArrayList<? extends Sprite>)",3,0,n/a,6,1,1,5,2
"org.andengine.entity.sprite.batch.SpriteGroup.onUpdateSpriteBatch()",3,1,n/a,13,2,0,9,3
"org.andengine.entity.sprite.batch.vbo.HighPerformanceSpriteBatchVertexBufferObject.HighPerformanceSpriteBatchVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,4,n/a,3,0,5,1,1
"org.andengine.entity.sprite.batch.vbo.HighPerformanceSpriteBatchVertexBufferObject.addWithPackedColor(ITextureRegion,float,float,float,float,float)",6,3,n/a,82,1,6,72,2
"org.andengine.entity.sprite.batch.vbo.HighPerformanceSpriteBatchVertexBufferObject.addWithPackedColor(ITextureRegion,float,float,float,float,float,float,float,float,float)",6,2,n/a,86,1,10,76,2
"org.andengine.entity.sprite.batch.vbo.HighPerformanceSpriteBatchVertexBufferObject.getBufferDataOffset()",0,0,n/a,4,0,0,1,1
"org.andengine.entity.sprite.batch.vbo.HighPerformanceSpriteBatchVertexBufferObject.setBufferDataOffset(int)",0,2,n/a,4,0,1,1,1
"org.andengine.entity.sprite.batch.vbo.ISpriteBatchVertexBufferObject.addWithPackedColor(ITextureRegion,float,float,float,float,float)",n/a,3,2,n/a,n/a,6,n/a,n/a
"org.andengine.entity.sprite.batch.vbo.ISpriteBatchVertexBufferObject.addWithPackedColor(ITextureRegion,float,float,float,float,float,float,float,float,float)",n/a,2,2,n/a,n/a,10,n/a,n/a
"org.andengine.entity.sprite.batch.vbo.ISpriteBatchVertexBufferObject.getBufferDataOffset()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.entity.sprite.batch.vbo.ISpriteBatchVertexBufferObject.setBufferDataOffset(int)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.batch.vbo.LowMemorySpriteBatchVertexBufferObject.LowMemorySpriteBatchVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.batch.vbo.LowMemorySpriteBatchVertexBufferObject.addWithPackedColor(ITextureRegion,float,float,float,float,float)",66,3,n/a,82,1,6,72,2
"org.andengine.entity.sprite.batch.vbo.LowMemorySpriteBatchVertexBufferObject.addWithPackedColor(ITextureRegion,float,float,float,float,float,float,float,float,float)",66,2,n/a,86,1,10,76,2
"org.andengine.entity.sprite.batch.vbo.LowMemorySpriteBatchVertexBufferObject.getBufferDataOffset()",0,0,n/a,4,0,0,1,1
"org.andengine.entity.sprite.batch.vbo.LowMemorySpriteBatchVertexBufferObject.setBufferDataOffset(int)",0,2,n/a,4,0,1,1,1
"org.andengine.entity.sprite.vbo.HighPerformanceDiamondSpriteVertexBufferObject.HighPerformanceDiamondSpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,2,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.HighPerformanceDiamondSpriteVertexBufferObject.onUpdateTextureCoordinates(Sprite)",22,1,n/a,56,2,1,45,5
"org.andengine.entity.sprite.vbo.HighPerformanceDiamondSpriteVertexBufferObject.onUpdateVertices(Sprite)",3,1,n/a,19,0,1,16,1
"org.andengine.entity.sprite.vbo.HighPerformanceSpriteVertexBufferObject.HighPerformanceSpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,4,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.HighPerformanceSpriteVertexBufferObject.onUpdateColor(Sprite)",3,1,n/a,10,0,1,7,1
"org.andengine.entity.sprite.vbo.HighPerformanceSpriteVertexBufferObject.onUpdateTextureCoordinates(Sprite)",22,1,n/a,54,2,1,43,5
"org.andengine.entity.sprite.vbo.HighPerformanceSpriteVertexBufferObject.onUpdateVertices(Sprite)",3,1,n/a,17,0,1,14,1
"org.andengine.entity.sprite.vbo.HighPerformanceTiledSpriteVertexBufferObject.HighPerformanceTiledSpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,2,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.HighPerformanceTiledSpriteVertexBufferObject.onUpdateColor(TiledSprite)",4,1,n/a,17,1,1,15,2
"org.andengine.entity.sprite.vbo.HighPerformanceTiledSpriteVertexBufferObject.onUpdateTextureCoordinates(TiledSprite)",24,1,n/a,68,3,1,58,6
"org.andengine.entity.sprite.vbo.HighPerformanceTiledSpriteVertexBufferObject.onUpdateVertices(TiledSprite)",4,1,n/a,26,1,1,24,2
"org.andengine.entity.sprite.vbo.HighPerformanceUncoloredSpriteVertexBufferObject.HighPerformanceUncoloredSpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,2,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.HighPerformanceUncoloredSpriteVertexBufferObject.onUpdateTextureCoordinates(Sprite)",22,1,n/a,54,2,1,43,5
"org.andengine.entity.sprite.vbo.HighPerformanceUncoloredSpriteVertexBufferObject.onUpdateVertices(Sprite)",3,1,n/a,17,0,1,14,1
"org.andengine.entity.sprite.vbo.HighPerformanceUniformColorSpriteVertexBufferObject.HighPerformanceUniformColorSpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.HighPerformanceUniformColorSpriteVertexBufferObject.onUpdateColor(Sprite)",0,1,n/a,4,0,1,0,1
"org.andengine.entity.sprite.vbo.HighPerformanceUniformColorSpriteVertexBufferObject.onUpdateTextureCoordinates(Sprite)",22,1,n/a,54,2,1,43,5
"org.andengine.entity.sprite.vbo.HighPerformanceUniformColorSpriteVertexBufferObject.onUpdateVertices(Sprite)",3,1,n/a,17,0,1,14,1
"org.andengine.entity.sprite.vbo.ISpriteVertexBufferObject.onUpdateColor(Sprite)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.vbo.ISpriteVertexBufferObject.onUpdateTextureCoordinates(Sprite)",n/a,1,8,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.vbo.ISpriteVertexBufferObject.onUpdateVertices(Sprite)",n/a,1,8,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.vbo.ITiledSpriteVertexBufferObject.onUpdateColor(TiledSprite)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.vbo.ITiledSpriteVertexBufferObject.onUpdateTextureCoordinates(TiledSprite)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.vbo.ITiledSpriteVertexBufferObject.onUpdateVertices(TiledSprite)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.sprite.vbo.LowMemoryDiamondSpriteVertexBufferObject.LowMemoryDiamondSpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.LowMemoryDiamondSpriteVertexBufferObject.onUpdateTextureCoordinates(Sprite)",38,1,n/a,56,2,1,45,5
"org.andengine.entity.sprite.vbo.LowMemoryDiamondSpriteVertexBufferObject.onUpdateVertices(Sprite)",11,1,n/a,19,0,1,16,1
"org.andengine.entity.sprite.vbo.LowMemorySpriteVertexBufferObject.LowMemorySpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,3,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.LowMemorySpriteVertexBufferObject.onUpdateColor(Sprite)",7,1,n/a,10,0,1,7,1
"org.andengine.entity.sprite.vbo.LowMemorySpriteVertexBufferObject.onUpdateTextureCoordinates(Sprite)",38,1,n/a,54,2,1,43,5
"org.andengine.entity.sprite.vbo.LowMemorySpriteVertexBufferObject.onUpdateVertices(Sprite)",11,1,n/a,17,0,1,14,1
"org.andengine.entity.sprite.vbo.LowMemoryTiledSpriteVertexBufferObject.LowMemoryTiledSpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.LowMemoryTiledSpriteVertexBufferObject.onUpdateColor(TiledSprite)",10,1,n/a,17,1,1,15,2
"org.andengine.entity.sprite.vbo.LowMemoryTiledSpriteVertexBufferObject.onUpdateTextureCoordinates(TiledSprite)",48,1,n/a,68,3,1,58,6
"org.andengine.entity.sprite.vbo.LowMemoryTiledSpriteVertexBufferObject.onUpdateVertices(TiledSprite)",16,1,n/a,26,1,1,24,2
"org.andengine.entity.sprite.vbo.LowMemoryUncoloredSpriteVertexBufferObject.LowMemoryUncoloredSpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.LowMemoryUncoloredSpriteVertexBufferObject.onUpdateTextureCoordinates(Sprite)",38,1,n/a,56,2,1,45,5
"org.andengine.entity.sprite.vbo.LowMemoryUncoloredSpriteVertexBufferObject.onUpdateVertices(Sprite)",11,1,n/a,19,0,1,16,1
"org.andengine.entity.sprite.vbo.LowMemoryUniformColorSpriteVertexBufferObject.LowMemoryUniformColorSpriteVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.sprite.vbo.LowMemoryUniformColorSpriteVertexBufferObject.onUpdateColor(Sprite)",0,1,n/a,4,0,1,0,1
"org.andengine.entity.sprite.vbo.LowMemoryUniformColorSpriteVertexBufferObject.onUpdateTextureCoordinates(Sprite)",38,1,n/a,54,2,1,43,5
"org.andengine.entity.sprite.vbo.LowMemoryUniformColorSpriteVertexBufferObject.onUpdateVertices(Sprite)",11,1,n/a,17,0,1,14,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,TextOptions,VertexBufferObjectManager)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,TextOptions,VertexBufferObjectManager,DrawType)",2,3,n/a,3,0,7,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,TextOptions,VertexBufferObjectManager,DrawType,ShaderProgram)",2,3,n/a,3,0,8,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,TextOptions,VertexBufferObjectManager,ShaderProgram)",1,1,n/a,3,0,7,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,VertexBufferObjectManager)",1,1,n/a,3,0,5,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,VertexBufferObjectManager,DrawType)",2,2,n/a,3,0,6,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,VertexBufferObjectManager,DrawType,ShaderProgram)",2,2,n/a,3,0,7,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,VertexBufferObjectManager,ShaderProgram)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,int,TextOptions,ITextVertexBufferObject)",2,2,n/a,3,0,7,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,int,TextOptions,ITextVertexBufferObject,ShaderProgram)",6,3,n/a,12,0,8,10,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,int,TextOptions,VertexBufferObjectManager)",1,1,n/a,3,0,7,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,int,TextOptions,VertexBufferObjectManager,DrawType)",2,3,n/a,3,0,8,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,int,TextOptions,VertexBufferObjectManager,DrawType,ShaderProgram)",2,3,n/a,3,0,9,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,int,VertexBufferObjectManager)",1,1,n/a,3,0,6,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,int,VertexBufferObjectManager,DrawType)",2,2,n/a,3,0,7,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,int,VertexBufferObjectManager,DrawType,ShaderProgram)",2,2,n/a,3,0,8,1,1
"org.andengine.entity.text.Text.Text(float,float,IFont,CharSequence,int,VertexBufferObjectManager,ShaderProgram)",1,1,n/a,3,0,7,1,1
"org.andengine.entity.text.Text.draw(GLState,Camera)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.text.Text.getAutoWrap()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getAutoWrapWidth()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getCharactersMaximum()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getFont()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getHorizontalAlign()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getLeading()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getLineAlignmentWidth()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getLineWidthMaximum()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getLineWidths()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getLines()",0,2,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getText()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getTextOptions()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.getVertexBufferObject()",0,3,n/a,4,0,0,1,1
"org.andengine.entity.text.Text.invalidateText()",1,4,n/a,3,0,0,1,1
"org.andengine.entity.text.Text.onUpdateColor()",1,8,n/a,4,0,0,1,1
"org.andengine.entity.text.Text.onUpdateVertices()",1,4,n/a,4,0,0,1,1
"org.andengine.entity.text.Text.postDraw(GLState,Camera)",2,8,n/a,5,0,2,2,1
"org.andengine.entity.text.Text.preDraw(GLState,Camera)",4,8,n/a,6,0,2,3,1
"org.andengine.entity.text.Text.setAutoWrap(AutoWrap)",1,0,n/a,4,0,1,2,1
"org.andengine.entity.text.Text.setAutoWrapWidth(float)",1,0,n/a,4,0,1,2,1
"org.andengine.entity.text.Text.setCharactersToDraw(int)",1,2,n/a,7,1,1,4,2
"org.andengine.entity.text.Text.setHorizontalAlign(HorizontalAlign)",1,0,n/a,4,0,1,2,1
"org.andengine.entity.text.Text.setLeading(float)",1,0,n/a,4,0,1,2,1
"org.andengine.entity.text.Text.setText(CharSequence)",11,4,n/a,35,1,1,26,4
"org.andengine.entity.text.Text.setTextOptions(TextOptions)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TextOptions.TextOptions()",1,5,n/a,3,0,0,1,1
"org.andengine.entity.text.TextOptions.TextOptions(AutoWrap,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.text.TextOptions.TextOptions(AutoWrap,float,HorizontalAlign)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.text.TextOptions.TextOptions(AutoWrap,float,HorizontalAlign,float)",0,5,n/a,6,0,4,4,1
"org.andengine.entity.text.TextOptions.TextOptions(HorizontalAlign)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TextOptions.getAutoWrap()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.TextOptions.getAutoWrapWidth()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.TextOptions.getHorizontalAlign()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.TextOptions.getLeading()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.TextOptions.setAutoWrap(AutoWrap)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TextOptions.setAutoWrapWidth(float)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TextOptions.setHorizontalAlign(HorizontalAlign)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TextOptions.setLeading(float)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TickerText.TickerText(float,float,IFont,String,TickerTextOptions,VertexBufferObjectManager)",1,0,n/a,5,0,6,3,1
"org.andengine.entity.text.TickerText.TickerTextOptions.TickerTextOptions()",0,0,n/a,2,0,0,0,1
"org.andengine.entity.text.TickerText.TickerTextOptions.TickerTextOptions(AutoWrap,float,HorizontalAlign,float)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.text.TickerText.TickerTextOptions.TickerTextOptions(AutoWrap,float,HorizontalAlign,float,float)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.text.TickerText.TickerTextOptions.TickerTextOptions(AutoWrap,float,HorizontalAlign,float,float,boolean)",1,4,n/a,5,0,6,3,1
"org.andengine.entity.text.TickerText.TickerTextOptions.TickerTextOptions(HorizontalAlign,float)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.text.TickerText.TickerTextOptions.TickerTextOptions(HorizontalAlign,float,boolean)",1,1,n/a,3,0,3,1,1
"org.andengine.entity.text.TickerText.TickerTextOptions.TickerTextOptions(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TickerText.TickerTextOptions.TickerTextOptions(float,boolean)",1,1,n/a,3,0,2,1,1
"org.andengine.entity.text.TickerText.TickerTextOptions.getCharactersPerSecond()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.TickerText.TickerTextOptions.isReverse()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.TickerText.TickerTextOptions.setCharactersPerSecond(float)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TickerText.TickerTextOptions.setReverse(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TickerText.draw(GLState,Camera)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.text.TickerText.getCharactersPerSecond()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.TickerText.getCharactersVisible()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.text.TickerText.getTextOptions()",1,2,n/a,4,0,0,1,1
"org.andengine.entity.text.TickerText.isReverse()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.text.TickerText.onManagedUpdate(float)",3,5,n/a,15,2,1,8,4
"org.andengine.entity.text.TickerText.reset()",1,11,n/a,6,0,0,3,1
"org.andengine.entity.text.TickerText.setCharactersPerSecond(float)",0,0,n/a,4,0,1,2,1
"org.andengine.entity.text.TickerText.setReverse(boolean)",0,0,n/a,3,0,1,1,1
"org.andengine.entity.text.TickerText.setText(CharSequence)",1,4,n/a,7,1,1,3,2
"org.andengine.entity.text.exception.OutOfCharactersException.OutOfCharactersException()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.text.exception.OutOfCharactersException.OutOfCharactersException(String)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.text.exception.OutOfCharactersException.OutOfCharactersException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.entity.text.exception.OutOfCharactersException.OutOfCharactersException(Throwable)",1,1,n/a,3,0,1,1,1
"org.andengine.entity.text.exception.TextException.TextException()",1,1,n/a,3,0,0,1,1
"org.andengine.entity.text.exception.TextException.TextException(String)",1,2,n/a,3,0,1,1,1
"org.andengine.entity.text.exception.TextException.TextException(String,Throwable)",1,1,n/a,3,0,2,1,1
"org.andengine.entity.text.exception.TextException.TextException(Throwable)",1,2,n/a,3,0,1,1,1
"org.andengine.entity.text.vbo.HighPerformanceTextVertexBufferObject.HighPerformanceTextVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,2,n/a,3,0,5,1,1
"org.andengine.entity.text.vbo.HighPerformanceTextVertexBufferObject.onUpdateColor(Text)",4,1,n/a,17,1,1,15,2
"org.andengine.entity.text.vbo.HighPerformanceTextVertexBufferObject.onUpdateVertices(Text)",18,1,n/a,77,3,1,72,8
"org.andengine.entity.text.vbo.ITextVertexBufferObject.onUpdateColor(Text)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.text.vbo.ITextVertexBufferObject.onUpdateVertices(Text)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.entity.text.vbo.LowMemoryTextVertexBufferObject.LowMemoryTextVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,0,n/a,3,0,5,1,1
"org.andengine.entity.text.vbo.LowMemoryTextVertexBufferObject.onUpdateColor(Text)",10,1,n/a,17,1,1,15,2
"org.andengine.entity.text.vbo.LowMemoryTextVertexBufferObject.onUpdateVertices(Text)",42,1,n/a,77,3,1,72,8
"org.andengine.entity.util.AverageFPSCounter.AverageFPSCounter()",1,1,n/a,3,0,0,1,1
"org.andengine.entity.util.AverageFPSCounter.AverageFPSCounter(float)",0,2,n/a,3,0,1,1,1
"org.andengine.entity.util.AverageFPSCounter.onHandleAverageDurationElapsed(float)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.util.AverageFPSCounter.onUpdate(float)",3,9,n/a,9,1,1,5,2
"org.andengine.entity.util.FPSCounter.getFPS()",0,1,n/a,3,0,0,1,1
"org.andengine.entity.util.FPSCounter.onUpdate(float)",0,8,n/a,5,0,1,2,1
"org.andengine.entity.util.FPSCounter.reset()",0,5,n/a,5,0,0,2,1
"org.andengine.entity.util.FPSLogger.FPSLogger()",1,0,n/a,3,0,0,1,1
"org.andengine.entity.util.FPSLogger.FPSLogger(float)",1,0,n/a,3,0,1,1,1
"org.andengine.entity.util.FPSLogger.onHandleAverageDurationElapsed(float)",1,1,n/a,6,0,1,3,1
"org.andengine.entity.util.FPSLogger.onLogFPS()",2,1,n/a,8,1,0,2,2
"org.andengine.entity.util.FPSLogger.onUpdate(float)",3,9,n/a,6,0,1,3,1
"org.andengine.entity.util.FPSLogger.reset()",1,5,n/a,6,0,0,3,1
"org.andengine.entity.util.FrameCountCrasher.FrameCountCrasher(int)",0,0,n/a,4,0,1,2,1
"org.andengine.entity.util.FrameCountCrasher.onUpdate(float)",2,7,n/a,15,3,1,10,4
"org.andengine.entity.util.FrameCountCrasher.reset()",0,4,n/a,3,0,0,0,1
"org.andengine.entity.util.FrameCounter.getFrames()",0,0,n/a,3,0,0,1,1
"org.andengine.entity.util.FrameCounter.onUpdate(float)",0,7,n/a,4,0,1,1,1
"org.andengine.entity.util.FrameCounter.reset()",0,4,n/a,4,0,0,1,1
"org.andengine.entity.util.ScreenCapture.IScreenCaptureCallback.onScreenCaptureFailed(String,Exception)",n/a,2,0,n/a,n/a,2,n/a,n/a
"org.andengine.entity.util.ScreenCapture.IScreenCaptureCallback.onScreenCaptured(String)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.andengine.entity.util.ScreenCapture.capture(int,int,String,IScreenCaptureCallback)",1,0,n/a,3,0,4,1,1
"org.andengine.entity.util.ScreenCapture.capture(int,int,int,int,String,IScreenCaptureCallback)",1,1,n/a,5,0,6,3,1
"org.andengine.entity.util.ScreenCapture.onManagedDraw(GLState,Camera)",1,2,n/a,4,0,2,1,1
"org.andengine.entity.util.ScreenCapture.onManagedUpdate(float)",0,5,n/a,4,0,1,0,1
"org.andengine.entity.util.ScreenCapture.onScreenGrabFailed(Exception)",1,1,n/a,4,0,1,1,1
"org.andengine.entity.util.ScreenCapture.onScreenGrabbed(Bitmap)",3,1,n/a,9,1,1,4,2
"org.andengine.entity.util.ScreenCapture.reset()",0,7,n/a,4,0,0,0,1
"org.andengine.entity.util.ScreenCapture.saveCapture(Bitmap,String)",4,1,n/a,11,1,2,7,2
"org.andengine.entity.util.ScreenGrabber.IScreenGrabberCallback.onScreenGrabFailed(Exception)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.util.ScreenGrabber.IScreenGrabberCallback.onScreenGrabbed(Bitmap)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.entity.util.ScreenGrabber.grab(int,int,IScreenGrabberCallback)",1,0,n/a,3,0,3,1,1
"org.andengine.entity.util.ScreenGrabber.grab(int,int,int,int)",4,1,n/a,21,2,4,17,3
"org.andengine.entity.util.ScreenGrabber.grab(int,int,int,int,IScreenGrabberCallback)",0,2,n/a,8,0,5,6,1
"org.andengine.entity.util.ScreenGrabber.onManagedDraw(GLState,Camera)",3,3,n/a,12,2,2,6,3
"org.andengine.entity.util.ScreenGrabber.onManagedUpdate(float)",0,5,n/a,4,0,1,0,1
"org.andengine.entity.util.ScreenGrabber.reset()",0,7,n/a,4,0,0,0,1
"org.andengine.input.sensor.BaseSensorData.BaseSensorData(int,int)",0,2,n/a,4,0,2,2,1
"org.andengine.input.sensor.BaseSensorData.getAccuracy()",0,1,n/a,3,0,0,1,1
"org.andengine.input.sensor.BaseSensorData.getValues()",0,0,n/a,3,0,0,1,1
"org.andengine.input.sensor.BaseSensorData.setAccuracy(int)",0,3,n/a,3,0,1,1,1
"org.andengine.input.sensor.BaseSensorData.setValues(float[])",1,2,n/a,3,0,1,1,1
"org.andengine.input.sensor.BaseSensorData.toString()",1,0,n/a,4,0,0,1,1
"org.andengine.input.sensor.SensorDelay.SensorDelay(int)",0,4,n/a,3,0,1,1,1
"org.andengine.input.sensor.SensorDelay.getDelay()",0,1,n/a,3,0,0,1,1
"org.andengine.input.sensor.acceleration.AccelerationData.AccelerationData(int)",1,1,n/a,3,0,1,1,1
"org.andengine.input.sensor.acceleration.AccelerationData.IAxisSwap.swapAxis(float[])",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.andengine.input.sensor.acceleration.AccelerationData.getX()",0,0,n/a,3,0,0,1,1
"org.andengine.input.sensor.acceleration.AccelerationData.getY()",0,0,n/a,3,0,0,1,1
"org.andengine.input.sensor.acceleration.AccelerationData.getZ()",0,0,n/a,3,0,0,1,1
"org.andengine.input.sensor.acceleration.AccelerationData.setValues(float[])",2,3,n/a,5,0,1,2,1
"org.andengine.input.sensor.acceleration.AccelerationData.setX(float)",0,0,n/a,3,0,1,1,1
"org.andengine.input.sensor.acceleration.AccelerationData.setY(float)",0,0,n/a,3,0,1,1,1
"org.andengine.input.sensor.acceleration.AccelerationData.setZ(float)",0,0,n/a,3,0,1,1,1
"org.andengine.input.sensor.acceleration.AccelerationData.toString()",1,0,n/a,4,0,0,1,1
"org.andengine.input.sensor.acceleration.AccelerationSensorOptions.AccelerationSensorOptions(SensorDelay)",0,1,n/a,3,0,1,1,1
"org.andengine.input.sensor.acceleration.AccelerationSensorOptions.getSensorDelay()",0,1,n/a,3,0,0,1,1
"org.andengine.input.sensor.acceleration.IAccelerationListener.onAccelerationAccuracyChanged(AccelerationData)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.andengine.input.sensor.acceleration.IAccelerationListener.onAccelerationChanged(AccelerationData)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.andengine.input.sensor.location.ILocationListener.onLocationChanged(Location)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.andengine.input.sensor.location.ILocationListener.onLocationLost()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.input.sensor.location.ILocationListener.onLocationProviderDisabled()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.input.sensor.location.ILocationListener.onLocationProviderEnabled()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.input.sensor.location.ILocationListener.onLocationProviderStatusChanged(LocationProviderStatus,Bundle)",n/a,3,0,n/a,n/a,2,n/a,n/a
"org.andengine.input.sensor.location.LocationSensorOptions.LocationSensorOptions()",0,0,n/a,13,0,0,0,1
"org.andengine.input.sensor.location.LocationSensorOptions.LocationSensorOptions(int,boolean,boolean,boolean,int,boolean,boolean,long,long)",6,0,n/a,22,0,9,9,1
"org.andengine.input.sensor.location.LocationSensorOptions.getMinimumTriggerDistance()",0,1,n/a,3,0,0,1,1
"org.andengine.input.sensor.location.LocationSensorOptions.getMinimumTriggerTime()",0,1,n/a,3,0,0,1,1
"org.andengine.input.sensor.location.LocationSensorOptions.isEnabledOnly()",0,1,n/a,3,0,0,1,1
"org.andengine.input.sensor.location.LocationSensorOptions.setEnabledOnly(boolean)",0,1,n/a,3,0,1,1,1
"org.andengine.input.sensor.location.LocationSensorOptions.setMinimumTriggerDistance(long)",0,1,n/a,3,0,1,1,1
"org.andengine.input.sensor.location.LocationSensorOptions.setMinimumTriggerTime(long)",0,1,n/a,3,0,1,1,1
"org.andengine.input.sensor.orientation.IOrientationListener.onOrientationAccuracyChanged(OrientationData)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.andengine.input.sensor.orientation.IOrientationListener.onOrientationChanged(OrientationData)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.andengine.input.sensor.orientation.OrientationData.OrientationData(int)",1,1,n/a,3,0,1,1,1
"org.andengine.input.sensor.orientation.OrientationData.getAccelerationAccuracy()",1,0,n/a,3,0,0,1,1
"org.andengine.input.sensor.orientation.OrientationData.getMagneticFieldAccuracy()",0,0,n/a,3,0,0,1,1
"org.andengine.input.sensor.orientation.OrientationData.getPitch()",0,0,n/a,3,0,0,1,1
"org.andengine.input.sensor.orientation.OrientationData.getRoll()",0,0,n/a,3,0,0,1,1
"org.andengine.input.sensor.orientation.OrientationData.getYaw()",0,0,n/a,3,0,0,1,1
"org.andengine.input.sensor.orientation.OrientationData.setAccelerationAccuracy(int)",1,1,n/a,3,0,1,1,1
"org.andengine.input.sensor.orientation.OrientationData.setAccelerationValues(float[])",2,1,n/a,4,0,1,2,1
"org.andengine.input.sensor.orientation.OrientationData.setAccuracy(int)",1,3,n/a,5,0,1,1,1
"org.andengine.input.sensor.orientation.OrientationData.setMagneticFieldAccuracy(int)",0,1,n/a,3,0,1,1,1
"org.andengine.input.sensor.orientation.OrientationData.setMagneticFieldValues(float[])",2,1,n/a,4,0,1,2,1
"org.andengine.input.sensor.orientation.OrientationData.setValues(float[])",1,2,n/a,5,0,1,1,1
"org.andengine.input.sensor.orientation.OrientationData.toString()",1,0,n/a,4,0,0,1,1
"org.andengine.input.sensor.orientation.OrientationData.updateOrientation()",3,2,n/a,23,1,0,13,4
"org.andengine.input.sensor.orientation.OrientationSensorOptions.OrientationSensorOptions(SensorDelay)",0,1,n/a,3,0,1,1,1
"org.andengine.input.sensor.orientation.OrientationSensorOptions.getSensorDelay()",0,2,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.TouchEventPool.onAllocatePoolItem()",1,1,n/a,4,0,0,1,1
"org.andengine.input.touch.TouchEvent.getAction()",0,8,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.getMotionEvent()",0,10,n/a,8,0,0,1,1
"org.andengine.input.touch.TouchEvent.getPointerID()",0,21,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.getX()",0,23,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.getY()",0,20,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.isActionCancel()",0,1,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.isActionDown()",0,2,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.isActionMove()",0,1,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.isActionOutside()",0,0,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.isActionUp()",0,1,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.obtain(float,float,int,int,MotionEvent)",2,1,n/a,5,0,5,3,1
"org.andengine.input.touch.TouchEvent.offset(float,float)",0,4,n/a,4,0,2,2,1
"org.andengine.input.touch.TouchEvent.recycle()",1,1,n/a,3,0,0,1,1
"org.andengine.input.touch.TouchEvent.recycle(TouchEvent)",1,0,n/a,3,0,1,1,1
"org.andengine.input.touch.TouchEvent.set(float,float)",0,10,n/a,4,0,2,2,1
"org.andengine.input.touch.TouchEvent.set(float,float,int,int,MotionEvent)",0,1,n/a,7,0,5,5,1
"org.andengine.input.touch.controller.BaseTouchController.BaseTouchController()",0,1,n/a,2,0,0,0,1
"org.andengine.input.touch.controller.BaseTouchController.TouchEventRunnablePoolItem.onRecycle()",4,2,n/a,7,0,0,4,1
"org.andengine.input.touch.controller.BaseTouchController.TouchEventRunnablePoolItem.run()",1,0,n/a,4,0,0,1,1
"org.andengine.input.touch.controller.BaseTouchController.TouchEventRunnablePoolItem.set(TouchEvent)",0,1,n/a,3,0,1,1,1
"org.andengine.input.touch.controller.BaseTouchController.fireTouchEvent(float,float,int,int,MotionEvent)",5,3,n/a,6,0,5,4,1
"org.andengine.input.touch.controller.BaseTouchController.onUpdate(float)",1,7,n/a,4,0,1,1,1
"org.andengine.input.touch.controller.BaseTouchController.reset()",1,4,n/a,4,0,0,1,1
"org.andengine.input.touch.controller.BaseTouchController.setTouchEventCallback(ITouchEventCallback)",0,1,n/a,4,0,1,1,1
"org.andengine.input.touch.controller.ITouchController.onHandleMotionEvent(MotionEvent)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.input.touch.controller.ITouchController.setTouchEventCallback(ITouchEventCallback)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.input.touch.controller.ITouchEventCallback.onTouchEvent(TouchEvent)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.input.touch.controller.MultiTouch.isSupported(Context)",1,0,n/a,6,1,1,3,2
"org.andengine.input.touch.controller.MultiTouch.isSupportedDistinct(Context)",1,0,n/a,6,1,1,3,2
"org.andengine.input.touch.controller.MultiTouchController.getPointerIndex(MotionEvent)",1,1,n/a,3,0,1,1,1
"org.andengine.input.touch.controller.MultiTouchController.onHandleMotionEvent(MotionEvent)",6,1,n/a,23,1,1,19,6
"org.andengine.input.touch.controller.MultiTouchController.onHandleTouchAction(int,MotionEvent)",5,3,n/a,5,0,2,3,1
"org.andengine.input.touch.controller.MultiTouchController.onHandleTouchMove(MotionEvent)",5,1,n/a,7,1,1,6,2
"org.andengine.input.touch.controller.SingleTouchController.SingleTouchController()",0,1,n/a,2,0,0,0,1
"org.andengine.input.touch.controller.SingleTouchController.onHandleMotionEvent(MotionEvent)",4,1,n/a,4,0,1,1,1
"org.andengine.input.touch.detector.BaseDetector.isEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.input.touch.detector.BaseDetector.onManagedTouchEvent(TouchEvent)",n/a,1,6,n/a,n/a,1,n/a,n/a
"org.andengine.input.touch.detector.BaseDetector.onSceneTouchEvent(Scene,TouchEvent)",1,3,n/a,4,0,2,1,1
"org.andengine.input.touch.detector.BaseDetector.onTouchEvent(TouchEvent)",1,1,n/a,7,1,1,3,2
"org.andengine.input.touch.detector.BaseDetector.reset()",n/a,0,6,n/a,n/a,0,n/a,n/a
"org.andengine.input.touch.detector.BaseDetector.setEnabled(boolean)",0,2,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.ClickDetector.ClickDetector(IClickDetectorListener)",1,1,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.ClickDetector.ClickDetector(long,IClickDetectorListener)",0,1,n/a,4,0,2,2,1
"org.andengine.input.touch.detector.ClickDetector.IClickDetectorListener.onClick(ClickDetector,int,float,float)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.andengine.input.touch.detector.ClickDetector.getTriggerClickMaximumMilliseconds()",0,0,n/a,3,0,0,1,1
"org.andengine.input.touch.detector.ClickDetector.onManagedTouchEvent(TouchEvent)",9,1,n/a,25,3,1,18,6
"org.andengine.input.touch.detector.ClickDetector.prepareClick(TouchEvent)",3,1,n/a,4,0,1,2,1
"org.andengine.input.touch.detector.ClickDetector.reset()",0,0,n/a,5,0,0,2,1
"org.andengine.input.touch.detector.ClickDetector.setTriggerClickMaximumMilliseconds(long)",0,2,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.ContinuousHoldDetector.ContinuousHoldDetector(IHoldDetectorListener)",1,0,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.ContinuousHoldDetector.ContinuousHoldDetector(long,float,float,IHoldDetectorListener)",4,1,n/a,4,2,4,3,1
"org.andengine.input.touch.detector.ContinuousHoldDetector.fireListener()",3,1,n/a,12,3,0,7,5
"org.andengine.input.touch.detector.ContinuousHoldDetector.onManagedTouchEvent(TouchEvent)",15,1,n/a,41,4,1,26,11
"org.andengine.input.touch.detector.ContinuousHoldDetector.onUpdate(float)",1,7,n/a,4,0,1,1,1
"org.andengine.input.touch.detector.ContinuousHoldDetector.prepareHold(TouchEvent)",2,3,n/a,5,0,1,2,1
"org.andengine.input.touch.detector.ContinuousHoldDetector.reset()",2,5,n/a,8,0,0,2,1
"org.andengine.input.touch.detector.HoldDetector.HoldDetector(IHoldDetectorListener)",1,0,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.HoldDetector.HoldDetector(long,float,IHoldDetectorListener)",2,2,n/a,5,0,3,3,1
"org.andengine.input.touch.detector.HoldDetector.IHoldDetectorListener.onHold(HoldDetector,long,int,float,float)",n/a,1,0,n/a,n/a,5,n/a,n/a
"org.andengine.input.touch.detector.HoldDetector.IHoldDetectorListener.onHoldFinished(HoldDetector,long,int,float,float)",n/a,3,0,n/a,n/a,5,n/a,n/a
"org.andengine.input.touch.detector.HoldDetector.IHoldDetectorListener.onHoldStarted(HoldDetector,int,float,float)",n/a,1,0,n/a,n/a,4,n/a,n/a
"org.andengine.input.touch.detector.HoldDetector.getTriggerHoldMaximumDistance()",0,0,n/a,3,0,0,1,1
"org.andengine.input.touch.detector.HoldDetector.getTriggerHoldMinimumMilliseconds()",0,0,n/a,3,0,0,1,1
"org.andengine.input.touch.detector.HoldDetector.isHolding()",0,2,n/a,3,0,0,1,1
"org.andengine.input.touch.detector.HoldDetector.onManagedTouchEvent(TouchEvent)",24,1,n/a,65,7,1,41,19
"org.andengine.input.touch.detector.HoldDetector.prepareHold(TouchEvent)",8,2,n/a,13,1,1,10,2
"org.andengine.input.touch.detector.HoldDetector.reset()",2,1,n/a,13,1,0,6,2
"org.andengine.input.touch.detector.HoldDetector.setTriggerHoldMaximumDistance(float)",1,1,n/a,6,1,1,3,2
"org.andengine.input.touch.detector.HoldDetector.setTriggerHoldMinimumMilliseconds(long)",1,1,n/a,6,1,1,3,2
"org.andengine.input.touch.detector.HoldDetector.triggerOnHold(long)",1,3,n/a,5,1,1,2,2
"org.andengine.input.touch.detector.HoldDetector.triggerOnHoldFinished(long)",1,4,n/a,6,1,1,3,2
"org.andengine.input.touch.detector.HoldDetector.triggerOnHoldStarted()",1,3,n/a,6,1,0,3,2
"org.andengine.input.touch.detector.PinchZoomDetector.IPinchZoomDetectorListener.onPinchZoom(PinchZoomDetector,TouchEvent,float)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.andengine.input.touch.detector.PinchZoomDetector.IPinchZoomDetectorListener.onPinchZoomFinished(PinchZoomDetector,TouchEvent,float)",n/a,4,0,n/a,n/a,3,n/a,n/a
"org.andengine.input.touch.detector.PinchZoomDetector.IPinchZoomDetectorListener.onPinchZoomStarted(PinchZoomDetector,TouchEvent)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.andengine.input.touch.detector.PinchZoomDetector.PinchZoomDetector(IPinchZoomDetectorListener)",0,0,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.PinchZoomDetector.calculatePointerDistance(MotionEvent)",5,2,n/a,6,0,1,1,1
"org.andengine.input.touch.detector.PinchZoomDetector.getZoomFactor()",0,4,n/a,3,0,0,1,1
"org.andengine.input.touch.detector.PinchZoomDetector.hasTwoOrMorePointers(MotionEvent)",1,2,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.PinchZoomDetector.isZooming()",0,1,n/a,3,0,0,1,1
"org.andengine.input.touch.detector.PinchZoomDetector.onManagedTouchEvent(TouchEvent)",13,1,n/a,39,4,1,28,11
"org.andengine.input.touch.detector.PinchZoomDetector.reset()",2,0,n/a,12,1,0,5,2
"org.andengine.input.touch.detector.ScrollDetector.IScrollDetectorListener.onScroll(ScrollDetector,int,float,float)",n/a,1,0,n/a,n/a,4,n/a,n/a
"org.andengine.input.touch.detector.ScrollDetector.IScrollDetectorListener.onScrollFinished(ScrollDetector,int,float,float)",n/a,2,0,n/a,n/a,4,n/a,n/a
"org.andengine.input.touch.detector.ScrollDetector.IScrollDetectorListener.onScrollStarted(ScrollDetector,int,float,float)",n/a,1,0,n/a,n/a,4,n/a,n/a
"org.andengine.input.touch.detector.ScrollDetector.ScrollDetector(IScrollDetectorListener)",1,1,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.ScrollDetector.ScrollDetector(float,IScrollDetectorListener)",0,2,n/a,4,0,2,2,1
"org.andengine.input.touch.detector.ScrollDetector.getTriggerScrollMinimumDistance()",0,0,n/a,3,0,0,1,1
"org.andengine.input.touch.detector.ScrollDetector.getX(TouchEvent)",1,1,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.ScrollDetector.getY(TouchEvent)",1,1,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.ScrollDetector.onManagedTouchEvent(TouchEvent)",14,1,n/a,45,4,1,34,13
"org.andengine.input.touch.detector.ScrollDetector.prepareScroll(int,float,float)",0,2,n/a,6,0,3,4,1
"org.andengine.input.touch.detector.ScrollDetector.reset()",1,0,n/a,10,1,0,6,2
"org.andengine.input.touch.detector.ScrollDetector.setTriggerScrollMinimumDistance(float)",0,0,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.ScrollDetector.triggerOnScroll(float,float)",1,1,n/a,5,1,2,2,2
"org.andengine.input.touch.detector.ScrollDetector.triggerOnScrollFinished(float,float)",1,1,n/a,6,1,2,3,2
"org.andengine.input.touch.detector.ScrollDetector.triggerOnScrollStarted(float,float)",1,1,n/a,5,1,2,2,2
"org.andengine.input.touch.detector.SurfaceGestureDetector.InnerOnGestureDetectorListener.InnerOnGestureDetectorListener(float)",0,1,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetector.InnerOnGestureDetectorListener.onDoubleTap(MotionEvent)",1,0,n/a,4,0,1,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetector.InnerOnGestureDetectorListener.onFling(MotionEvent,MotionEvent,float,float)",14,0,n/a,19,2,4,12,6
"org.andengine.input.touch.detector.SurfaceGestureDetector.InnerOnGestureDetectorListener.onSingleTapConfirmed(MotionEvent)",1,0,n/a,4,0,1,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetector.SurfaceGestureDetector(Context)",1,1,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetector.SurfaceGestureDetector(Context,float)",2,2,n/a,3,0,2,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetector.onDoubleTap()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.input.touch.detector.SurfaceGestureDetector.onManagedTouchEvent(TouchEvent)",2,1,n/a,4,0,1,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetector.onSingleTap()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.input.touch.detector.SurfaceGestureDetector.onSwipeDown()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.input.touch.detector.SurfaceGestureDetector.onSwipeLeft()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.input.touch.detector.SurfaceGestureDetector.onSwipeRight()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.input.touch.detector.SurfaceGestureDetector.onSwipeUp()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.input.touch.detector.SurfaceGestureDetector.reset()",0,0,n/a,3,0,0,0,1
"org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter.SurfaceGestureDetectorAdapter(Context)",1,0,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter.SurfaceGestureDetectorAdapter(Context,float)",1,0,n/a,3,0,2,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter.onDoubleTap()",0,1,n/a,4,0,0,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter.onSingleTap()",0,1,n/a,4,0,0,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter.onSwipeDown()",0,1,n/a,4,0,0,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter.onSwipeLeft()",0,1,n/a,4,0,0,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter.onSwipeRight()",0,1,n/a,4,0,0,1,1
"org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter.onSwipeUp()",0,1,n/a,4,0,0,1,1
"org.andengine.input.touch.detector.SurfaceScrollDetector.SurfaceScrollDetector(IScrollDetectorListener)",1,0,n/a,3,0,1,1,1
"org.andengine.input.touch.detector.SurfaceScrollDetector.SurfaceScrollDetector(float,IScrollDetectorListener)",1,0,n/a,3,0,2,1,1
"org.andengine.input.touch.detector.SurfaceScrollDetector.getX(TouchEvent)",2,1,n/a,4,0,1,1,1
"org.andengine.input.touch.detector.SurfaceScrollDetector.getY(TouchEvent)",2,1,n/a,4,0,1,1,1
"org.andengine.opengl.GLES20Fix.GLES20Fix()",0,0,n/a,2,0,0,0,1
"org.andengine.opengl.GLES20Fix.glDrawElements(int,int,int,int)",0,1,n/a,1,-1,4,0,1
"org.andengine.opengl.GLES20Fix.glDrawElementsFix(int,int,int,int)",2,0,n/a,7,1,4,3,2
"org.andengine.opengl.GLES20Fix.glVertexAttribPointer(int,int,int,boolean,int,int)",0,1,n/a,1,-1,6,0,1
"org.andengine.opengl.GLES20Fix.glVertexAttribPointerFix(int,int,int,boolean,int,int)",2,1,n/a,7,1,6,3,2
"org.andengine.opengl.exception.GLException.GLException(int)",2,2,n/a,3,0,1,1,1
"org.andengine.opengl.exception.GLException.GLException(int,String)",1,2,n/a,4,0,2,2,1
"org.andengine.opengl.exception.GLException.getError()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.exception.GLException.getErrorString(int)",2,1,n/a,7,1,1,4,2
"org.andengine.opengl.exception.GLFrameBufferException.GLFrameBufferException(int)",1,1,n/a,3,0,1,1,1
"org.andengine.opengl.exception.GLFrameBufferException.GLFrameBufferException(int,String)",1,4,n/a,3,0,2,1,1
"org.andengine.opengl.exception.RenderTextureInitializationException.RenderTextureInitializationException()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.exception.RenderTextureInitializationException.RenderTextureInitializationException(String)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.exception.RenderTextureInitializationException.RenderTextureInitializationException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.exception.RenderTextureInitializationException.RenderTextureInitializationException(Throwable)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFont(TextureManager,AssetManager,String)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFont(TextureManager,AssetManager,String,BitmapTextureFormat)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFont(TextureManager,AssetManager,String,BitmapTextureFormat,TextureOptions)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFont(TextureManager,AssetManager,String,BitmapTextureFormat,TextureOptions,BitmapFontOptions)",44,4,n/a,89,4,6,57,18
"org.andengine.opengl.font.BitmapFont.BitmapFont(TextureManager,AssetManager,String,TextureOptions)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.BitmapFontInfo(String)",24,1,n/a,31,1,1,26,4
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getCharset()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getFace()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getPaddingBottom()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getPaddingLeft()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getPaddingRight()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getPaddingTop()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getSize()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getSpacingX()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getSpacingY()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getStretchHeight()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.getUnicode()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.isAntiAliased()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.isBold()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.isItalic()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo.isSmooth()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontOptions.BitmapFontOptions(int,int)",0,1,n/a,4,0,2,2,1
"org.andengine.opengl.font.BitmapFont.BitmapFontOptions.getTextureOffsetX()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontOptions.getTextureOffsetY()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontPage.BitmapFontPage(AssetManager,String,String)",8,1,n/a,13,1,3,9,3
"org.andengine.opengl.font.BitmapFont.BitmapFontPage.getID()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.BitmapFontPage.getTexture()",0,4,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.getAttribute(String[],int,String)",4,2,n/a,8,1,3,5,2
"org.andengine.opengl.font.BitmapFont.getBase()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.getBitmapFontInfo()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.getBitmapFontPage(int)",0,0,n/a,3,0,1,1,1
"org.andengine.opengl.font.BitmapFont.getBitmapFontPageCount()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.getBitmapFontPages()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.getBooleanAttribute(String[],int,String)",6,5,n/a,8,1,3,5,3
"org.andengine.opengl.font.BitmapFont.getCharAttribute(String[],int,String)",1,1,n/a,3,0,3,1,1
"org.andengine.opengl.font.BitmapFont.getIntAttribute(String[],int,String)",6,23,n/a,8,1,3,5,3
"org.andengine.opengl.font.BitmapFont.getLetter(char)",2,6,n/a,8,1,1,4,2
"org.andengine.opengl.font.BitmapFont.getLineHeight()",0,3,n/a,4,0,0,1,1
"org.andengine.opengl.font.BitmapFont.getScaleHeight()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.getScaleWidth()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.getStringAttribute(String[],int,String)",6,3,n/a,8,1,3,5,3
"org.andengine.opengl.font.BitmapFont.getTexture()",1,2,n/a,4,0,0,1,1
"org.andengine.opengl.font.BitmapFont.isPacked()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.BitmapFont.load()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.font.BitmapFont.loadTextures()",2,1,n/a,7,1,0,6,2
"org.andengine.opengl.font.BitmapFont.parseCharacters(int,BufferedReader)",19,1,n/a,30,2,2,26,4
"org.andengine.opengl.font.BitmapFont.parseKernings(int,BufferedReader)",10,1,n/a,16,2,2,13,4
"org.andengine.opengl.font.BitmapFont.unload()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.font.BitmapFont.unloadTextures()",2,1,n/a,7,1,0,6,2
"org.andengine.opengl.font.Font.Font(FontManager,ITexture,Typeface,float,boolean,Color)",2,0,n/a,3,0,6,1,1
"org.andengine.opengl.font.Font.Font(FontManager,ITexture,Typeface,float,boolean,int)",11,3,n/a,15,0,6,13,1
"org.andengine.opengl.font.Font.createLetter(char)",15,1,n/a,34,2,1,28,6
"org.andengine.opengl.font.Font.drawLetter(String,float,float)",1,2,n/a,3,0,3,1,1
"org.andengine.opengl.font.Font.getAscent()",0,3,n/a,6,0,0,1,1
"org.andengine.opengl.font.Font.getDescent()",0,1,n/a,6,0,0,1,1
"org.andengine.opengl.font.Font.getLeading()",0,0,n/a,6,0,0,1,1
"org.andengine.opengl.font.Font.getLetter(char)",4,7,n/a,10,1,1,6,2
"org.andengine.opengl.font.Font.getLetterAdvance(String)",1,1,n/a,4,0,1,2,1
"org.andengine.opengl.font.Font.getLetterBitmap(Letter)",8,1,n/a,15,0,1,11,1
"org.andengine.opengl.font.Font.getLineHeight()",2,3,n/a,4,0,0,1,1
"org.andengine.opengl.font.Font.getTexture()",0,2,n/a,4,0,0,1,1
"org.andengine.opengl.font.Font.invalidateLetters()",3,0,n/a,8,1,0,6,2
"org.andengine.opengl.font.Font.load()",2,0,n/a,5,0,0,2,1
"org.andengine.opengl.font.Font.prepareLetters(char...)",1,0,n/a,5,1,1,2,2
"org.andengine.opengl.font.Font.unload()",2,0,n/a,5,0,0,2,1
"org.andengine.opengl.font.Font.update(GLState)",20,0,n/a,33,5,1,23,10
"org.andengine.opengl.font.Font.updateTextBounds(String)",1,1,n/a,3,0,1,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,ITexture,Typeface,float,boolean,int)",1,1,n/a,3,0,6,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,ITexture,float)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,ITexture,float,boolean)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,ITexture,float,boolean,int)",2,3,n/a,3,0,5,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,ITexture,float,int)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,BitmapTextureFormat,TextureOptions,Typeface,float)",1,0,n/a,3,0,8,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,BitmapTextureFormat,TextureOptions,Typeface,float,boolean)",1,0,n/a,3,0,9,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,BitmapTextureFormat,TextureOptions,Typeface,float,boolean,int)",2,4,n/a,3,0,10,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,BitmapTextureFormat,TextureOptions,Typeface,float,int)",1,0,n/a,3,0,9,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,TextureOptions,Typeface,float)",1,0,n/a,3,0,7,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,TextureOptions,Typeface,float,boolean)",1,0,n/a,3,0,8,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,TextureOptions,Typeface,float,boolean,int)",1,7,n/a,3,0,9,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,TextureOptions,Typeface,float,int)",1,0,n/a,3,0,8,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,TextureOptions,float,boolean,int)",2,1,n/a,3,0,8,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,Typeface,float)",1,0,n/a,3,0,6,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,Typeface,float,boolean)",1,0,n/a,3,0,7,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,Typeface,float,boolean,int)",1,0,n/a,3,0,8,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,Typeface,float,int)",1,0,n/a,3,0,7,1,1
"org.andengine.opengl.font.FontFactory.create(FontManager,TextureManager,int,int,float,boolean,int)",1,0,n/a,3,0,7,1,1
"org.andengine.opengl.font.FontFactory.createFromAsset(FontManager,ITexture,AssetManager,String,float,boolean,int)",2,0,n/a,3,0,7,1,1
"org.andengine.opengl.font.FontFactory.createFromAsset(FontManager,TextureManager,int,int,AssetManager,String,float,boolean,int)",1,0,n/a,3,0,9,1,1
"org.andengine.opengl.font.FontFactory.createFromAsset(FontManager,TextureManager,int,int,BitmapTextureFormat,TextureOptions,AssetManager,String,float,boolean,int)",3,1,n/a,3,0,11,1,1
"org.andengine.opengl.font.FontFactory.createFromAsset(FontManager,TextureManager,int,int,TextureOptions,AssetManager,String,float,boolean,int)",1,1,n/a,3,0,10,1,1
"org.andengine.opengl.font.FontFactory.createStroke(FontManager,ITexture,Typeface,float,boolean,int,float,int)",1,0,n/a,3,0,8,1,1
"org.andengine.opengl.font.FontFactory.createStroke(FontManager,ITexture,Typeface,float,boolean,int,float,int,boolean)",1,0,n/a,3,0,9,1,1
"org.andengine.opengl.font.FontFactory.createStrokeFromAsset(FontManager,ITexture,AssetManager,String,float,boolean,int,float,int)",2,0,n/a,3,0,9,1,1
"org.andengine.opengl.font.FontFactory.createStrokeFromAsset(FontManager,ITexture,AssetManager,String,float,boolean,int,float,int,boolean)",2,0,n/a,3,0,10,1,1
"org.andengine.opengl.font.FontFactory.getAssetBasePath()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.FontFactory.onCreate()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.font.FontFactory.setAssetBasePath(String)",3,1,n/a,10,1,1,3,3
"org.andengine.opengl.font.FontLibrary.FontLibrary()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.FontLibrary.FontLibrary(int)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.font.FontLibrary.loadFonts(FontManager)",3,0,n/a,9,2,1,7,3
"org.andengine.opengl.font.FontManager.loadFont(Font)",2,3,n/a,6,1,1,3,2
"org.andengine.opengl.font.FontManager.loadFonts(Font...)",1,0,n/a,5,1,1,4,2
"org.andengine.opengl.font.FontManager.onCreate()",0,1,n/a,2,0,0,0,1
"org.andengine.opengl.font.FontManager.onDestroy()",4,1,n/a,7,1,0,6,2
"org.andengine.opengl.font.FontManager.onReload()",3,1,n/a,6,1,0,5,2
"org.andengine.opengl.font.FontManager.unloadFont(Font)",2,2,n/a,6,1,1,3,2
"org.andengine.opengl.font.FontManager.unloadFonts(Font...)",1,0,n/a,5,1,1,4,2
"org.andengine.opengl.font.FontManager.updateFonts(GLState)",3,1,n/a,9,2,1,7,3
"org.andengine.opengl.font.FontUtils.breakText(IFont,CharSequence,MeasureDirection,float,float[])",1,0,n/a,13,0,5,1,1
"org.andengine.opengl.font.FontUtils.getAdvanceCorrection(IFont,CharSequence,int)",2,1,n/a,4,0,3,2,1
"org.andengine.opengl.font.FontUtils.measureText(IFont,CharSequence)",1,1,n/a,8,0,2,1,1
"org.andengine.opengl.font.FontUtils.measureText(IFont,CharSequence,float[])",2,1,n/a,9,0,3,1,1
"org.andengine.opengl.font.FontUtils.measureText(IFont,CharSequence,int,int)",1,3,n/a,10,0,4,1,1
"org.andengine.opengl.font.FontUtils.measureText(IFont,CharSequence,int,int,float[])",5,2,n/a,38,2,5,20,7
"org.andengine.opengl.font.FontUtils.splitLines(CharSequence,L)",1,1,n/a,3,0,2,1,1
"org.andengine.opengl.font.FontUtils.splitLines(IFont,CharSequence,L,AutoWrap,float)",5,1,n/a,25,1,5,10,5
"org.andengine.opengl.font.FontUtils.splitLinesByCJK(IFont,CharSequence,L,float)",8,1,n/a,53,6,4,34,12
"org.andengine.opengl.font.FontUtils.splitLinesByLetters(IFont,CharSequence,L,float)",11,1,n/a,50,5,4,31,9
"org.andengine.opengl.font.FontUtils.splitLinesByWords(IFont,CharSequence,L,float)",18,1,n/a,107,5,4,62,18
"org.andengine.opengl.font.IFont.getLetter(char)",n/a,6,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.font.IFont.getLineHeight()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.font.IFont.getTexture()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.font.IFont.load()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.font.IFont.unload()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.font.Letter.Letter(char,boolean,int,int,int,int,float,float,float,float,float,float,float)",0,2,n/a,15,0,13,13,1
"org.andengine.opengl.font.Letter.Letter(char,float)",1,1,n/a,6,0,2,1,1
"org.andengine.opengl.font.Letter.Letter(char,int,int,int,int,float,float,float,float,float,float,float)",1,2,n/a,3,0,12,1,1
"org.andengine.opengl.font.Letter.addKerning(int,int)",2,0,n/a,6,1,2,3,2
"org.andengine.opengl.font.Letter.equals(Object)",2,0,n/a,17,1,1,10,5
"org.andengine.opengl.font.Letter.getKerning(int)",1,3,n/a,6,1,1,3,2
"org.andengine.opengl.font.Letter.hashCode()",0,0,n/a,7,0,0,4,1
"org.andengine.opengl.font.Letter.isWhitespace()",0,3,n/a,3,0,0,1,1
"org.andengine.opengl.font.Letter.toString()",2,0,n/a,19,0,0,1,1
"org.andengine.opengl.font.StrokeFont.StrokeFont(FontManager,ITexture,Typeface,float,boolean,Color,float,Color)",3,0,n/a,3,0,8,1,1
"org.andengine.opengl.font.StrokeFont.StrokeFont(FontManager,ITexture,Typeface,float,boolean,Color,float,Color,boolean)",3,0,n/a,3,0,9,1,1
"org.andengine.opengl.font.StrokeFont.StrokeFont(FontManager,ITexture,Typeface,float,boolean,int,float,int)",1,2,n/a,3,0,8,1,1
"org.andengine.opengl.font.StrokeFont.StrokeFont(FontManager,ITexture,Typeface,float,boolean,int,float,int,boolean)",8,3,n/a,12,0,9,10,1
"org.andengine.opengl.font.StrokeFont.drawLetter(String,float,float)",2,2,n/a,7,1,3,3,2
"org.andengine.opengl.font.StrokeFont.updateTextBounds(String)",3,1,n/a,6,0,1,3,1
"org.andengine.opengl.font.exception.FontException.FontException()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.font.exception.FontException.FontException(String)",1,25,n/a,3,0,1,1,1
"org.andengine.opengl.font.exception.FontException.FontException(String,Throwable)",1,2,n/a,3,0,2,1,1
"org.andengine.opengl.font.exception.FontException.FontException(Throwable)",1,25,n/a,3,0,1,1,1
"org.andengine.opengl.font.exception.LetterNotFoundException.LetterNotFoundException()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.font.exception.LetterNotFoundException.LetterNotFoundException(String)",1,1,n/a,3,0,1,1,1
"org.andengine.opengl.font.exception.LetterNotFoundException.LetterNotFoundException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.font.exception.LetterNotFoundException.LetterNotFoundException(Throwable)",1,1,n/a,3,0,1,1,1
"org.andengine.opengl.shader.PositionColorShaderProgram.PositionColorShaderProgram()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.shader.PositionColorShaderProgram.bind(GLState,VertexBufferObjectAttributes)",4,8,n/a,6,0,2,3,1
"org.andengine.opengl.shader.PositionColorShaderProgram.getInstance()",1,4,n/a,6,1,0,3,2
"org.andengine.opengl.shader.PositionColorShaderProgram.link(GLState)",4,7,n/a,7,0,1,4,1
"org.andengine.opengl.shader.PositionColorShaderProgram.unbind(GLState)",2,7,n/a,5,0,1,2,1
"org.andengine.opengl.shader.PositionColorTextureCoordinatesShaderProgram.PositionColorTextureCoordinatesShaderProgram()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.shader.PositionColorTextureCoordinatesShaderProgram.bind(GLState,VertexBufferObjectAttributes)",4,8,n/a,6,0,2,3,1
"org.andengine.opengl.shader.PositionColorTextureCoordinatesShaderProgram.getInstance()",1,8,n/a,6,1,0,3,2
"org.andengine.opengl.shader.PositionColorTextureCoordinatesShaderProgram.link(GLState)",6,7,n/a,9,0,1,6,1
"org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram.bind(GLState,VertexBufferObjectAttributes)",9,8,n/a,11,0,2,8,1
"org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram.getInstance()",1,1,n/a,6,1,0,3,2
"org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram.link(GLState)",9,7,n/a,12,0,1,9,1
"org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram.unbind(GLState)",5,7,n/a,8,0,1,5,1
"org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram.PositionTextureCoordinatesShaderProgram()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram.bind(GLState,VertexBufferObjectAttributes)",5,8,n/a,7,0,2,4,1
"org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram.getInstance()",1,4,n/a,6,1,0,3,2
"org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram.link(GLState)",5,7,n/a,8,0,1,5,1
"org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram.unbind(GLState)",2,7,n/a,5,0,1,2,1
"org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram.PositionTextureCoordinatesTextureSelectShaderProgram()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram.bind(GLState,VertexBufferObjectAttributes)",6,8,n/a,8,0,2,5,1
"org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram.getInstance()",1,1,n/a,6,1,0,3,2
"org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram.link(GLState)",7,7,n/a,10,0,1,7,1
"org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram.unbind(GLState)",2,7,n/a,5,0,1,2,1
"org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram.PositionTextureCoordinatesUniformColorShaderProgram()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram.bind(GLState,VertexBufferObjectAttributes)",5,8,n/a,7,0,2,4,1
"org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram.getInstance()",1,3,n/a,6,1,0,3,2
"org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram.link(GLState)",6,7,n/a,9,0,1,6,1
"org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram.unbind(GLState)",2,7,n/a,5,0,1,2,1
"org.andengine.opengl.shader.ShaderProgram.ShaderProgram(IShaderSource,IShaderSource)",0,1,n/a,4,0,2,2,1
"org.andengine.opengl.shader.ShaderProgram.ShaderProgram(String,String)",3,6,n/a,3,0,2,1,1
"org.andengine.opengl.shader.ShaderProgram.bind(GLState,VertexBufferObjectAttributes)",3,8,n/a,7,1,2,4,2
"org.andengine.opengl.shader.ShaderProgram.compile(GLState)",11,1,n/a,16,1,1,12,2
"org.andengine.opengl.shader.ShaderProgram.compileShader(String,int)",7,2,n/a,13,1,2,9,3
"org.andengine.opengl.shader.ShaderProgram.delete(GLState)",1,0,n/a,7,1,1,4,2
"org.andengine.opengl.shader.ShaderProgram.getAttributeLocation(String)",4,0,n/a,8,1,1,4,2
"org.andengine.opengl.shader.ShaderProgram.getAttributeLocationOptional(String)",2,0,n/a,8,1,1,4,2
"org.andengine.opengl.shader.ShaderProgram.getUniformLocation(String)",4,23,n/a,8,1,1,4,2
"org.andengine.opengl.shader.ShaderProgram.getUniformLocationOptional(String)",2,11,n/a,8,1,1,4,2
"org.andengine.opengl.shader.ShaderProgram.initAttributeLocations()",9,1,n/a,35,3,0,23,9
"org.andengine.opengl.shader.ShaderProgram.initUniformLocations()",9,1,n/a,31,3,0,23,9
"org.andengine.opengl.shader.ShaderProgram.isCompiled()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.shader.ShaderProgram.link(GLState)",6,7,n/a,10,1,1,7,2
"org.andengine.opengl.shader.ShaderProgram.setCompiled(boolean)",0,1,n/a,3,0,1,1,1
"org.andengine.opengl.shader.ShaderProgram.setTexture(String,int)",2,0,n/a,7,0,2,1,1
"org.andengine.opengl.shader.ShaderProgram.setTextureOptional(String,int)",2,0,n/a,10,1,2,3,2
"org.andengine.opengl.shader.ShaderProgram.setUniform(String,float)",2,0,n/a,3,0,2,1,1
"org.andengine.opengl.shader.ShaderProgram.setUniform(String,float,float)",2,0,n/a,3,0,3,1,1
"org.andengine.opengl.shader.ShaderProgram.setUniform(String,float,float,float)",2,0,n/a,3,0,4,1,1
"org.andengine.opengl.shader.ShaderProgram.setUniform(String,float,float,float,float)",2,0,n/a,3,0,5,1,1
"org.andengine.opengl.shader.ShaderProgram.setUniform(String,float[])",2,0,n/a,3,0,2,1,1
"org.andengine.opengl.shader.ShaderProgram.setUniformOptional(String,float)",3,0,n/a,6,1,2,3,2
"org.andengine.opengl.shader.ShaderProgram.setUniformOptional(String,float,float)",3,0,n/a,6,1,3,3,2
"org.andengine.opengl.shader.ShaderProgram.setUniformOptional(String,float,float,float)",3,0,n/a,6,1,4,3,2
"org.andengine.opengl.shader.ShaderProgram.setUniformOptional(String,float,float,float,float)",3,0,n/a,6,1,5,3,2
"org.andengine.opengl.shader.ShaderProgram.setUniformOptional(String,float[])",3,0,n/a,6,1,2,3,2
"org.andengine.opengl.shader.ShaderProgram.unbind(GLState)",0,7,n/a,3,0,1,0,1
"org.andengine.opengl.shader.ShaderProgramManager.loadShaderProgram(ShaderProgram)",15,7,n/a,14,1,1,8,4
"org.andengine.opengl.shader.ShaderProgramManager.loadShaderPrograms(ShaderProgram...)",1,0,n/a,5,1,1,4,2
"org.andengine.opengl.shader.ShaderProgramManager.onCreate()",12,1,n/a,8,0,0,6,1
"org.andengine.opengl.shader.ShaderProgramManager.onDestroy()",4,1,n/a,7,1,0,6,2
"org.andengine.opengl.shader.ShaderProgramManager.onReload()",3,1,n/a,6,1,0,5,2
"org.andengine.opengl.shader.exception.ShaderProgramCompileException.ShaderProgramCompileException(String,String)",1,1,n/a,3,0,2,1,1
"org.andengine.opengl.shader.exception.ShaderProgramException.ShaderProgramException(String)",1,6,n/a,3,0,1,1,1
"org.andengine.opengl.shader.exception.ShaderProgramException.ShaderProgramException(String,ShaderProgramException)",1,1,n/a,3,0,2,1,1
"org.andengine.opengl.shader.exception.ShaderProgramLinkException.ShaderProgramLinkException(String)",1,3,n/a,3,0,1,1,1
"org.andengine.opengl.shader.exception.ShaderProgramLinkException.ShaderProgramLinkException(String,ShaderProgramException)",1,1,n/a,3,0,2,1,1
"org.andengine.opengl.shader.source.CriteriaShaderSource.CriteriaShaderSource(CriteriaShaderSourceEntry...)",0,0,n/a,3,0,1,1,1
"org.andengine.opengl.shader.source.CriteriaShaderSource.CriteriaShaderSourceEntry.CriteriaShaderSourceEntry(String)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.shader.source.CriteriaShaderSource.CriteriaShaderSourceEntry.CriteriaShaderSourceEntry(String,IGLCriteria...)",0,1,n/a,4,0,2,2,1
"org.andengine.opengl.shader.source.CriteriaShaderSource.CriteriaShaderSourceEntry.getShaderSource()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.shader.source.CriteriaShaderSource.CriteriaShaderSourceEntry.isMet(GLState)",1,1,n/a,10,3,1,5,4
"org.andengine.opengl.shader.source.CriteriaShaderSource.getShaderSource(GLState)",4,2,n/a,10,2,1,7,3
"org.andengine.opengl.shader.source.IShaderSource.getShaderSource(GLState)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.shader.source.StringShaderSource.StringShaderSource(String)",0,2,n/a,3,0,1,1,1
"org.andengine.opengl.shader.source.StringShaderSource.getShaderSource(GLState)",0,2,n/a,4,0,1,1,1
"org.andengine.opengl.texture.DebugTextureStateListener.onLoadedToHardware(ITexture)",2,1,n/a,6,1,1,2,2
"org.andengine.opengl.texture.DebugTextureStateListener.onUnloadedFromHardware(ITexture)",2,1,n/a,6,1,1,2,2
"org.andengine.opengl.texture.ITexture.bind(GLState)",n/a,6,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.ITexture.bind(GLState,int)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.ITexture.getHardwareTextureID()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.getHeight()",n/a,7,6,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.getPixelFormat()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.getTextureOptions()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.getTextureStateListener()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.getWidth()",n/a,7,6,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.hasTextureStateListener()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.isLoadedToHardware()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.isUpdateOnHardwareNeeded()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.load()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.load(GLState)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.ITexture.loadToHardware(GLState)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.ITexture.reloadToHardware(GLState)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.ITexture.setNotLoadedToHardware()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.setTextureStateListener(ITextureStateListener)",n/a,0,3,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.ITexture.setUpdateOnHardwareNeeded(boolean)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.ITexture.unload()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.ITexture.unload(GLState)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.ITexture.unloadFromHardware(GLState)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.ITextureStateListener.onLoadedToHardware(ITexture)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.ITextureStateListener.onUnloadedFromHardware(ITexture)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.PixelFormat.PixelFormat(int,int,int,int)",0,8,n/a,6,0,4,4,1
"org.andengine.opengl.texture.PixelFormat.getBitsPerPixel()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.PixelFormat.getGLFormat()",0,8,n/a,3,0,0,1,1
"org.andengine.opengl.texture.PixelFormat.getGLInternalFormat()",0,5,n/a,3,0,0,1,1
"org.andengine.opengl.texture.PixelFormat.getGLType()",0,8,n/a,3,0,0,1,1
"org.andengine.opengl.texture.Texture.Texture(TextureManager,PixelFormat,TextureOptions,ITextureStateListener)",0,5,n/a,11,0,4,4,1
"org.andengine.opengl.texture.Texture.bind(GLState)",1,6,n/a,4,0,1,1,1
"org.andengine.opengl.texture.Texture.bind(GLState,int)",2,1,n/a,5,0,2,2,1
"org.andengine.opengl.texture.Texture.getHardwareTextureID()",0,1,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.getPixelFormat()",0,2,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.getTextureOptions()",0,3,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.getTextureStateListener()",0,1,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.hasTextureStateListener()",0,2,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.isLoadedToHardware()",0,6,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.isUpdateOnHardwareNeeded()",0,3,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.load()",1,5,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.load(GLState)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.Texture.loadToHardware(GLState)",5,5,n/a,11,1,1,7,2
"org.andengine.opengl.texture.Texture.reloadToHardware(GLState)",2,3,n/a,5,0,1,2,1
"org.andengine.opengl.texture.Texture.setNotLoadedToHardware()",0,3,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.setTextureStateListener(ITextureStateListener)",0,2,n/a,4,0,1,1,1
"org.andengine.opengl.texture.Texture.setUpdateOnHardwareNeeded(boolean)",0,3,n/a,4,0,1,1,1
"org.andengine.opengl.texture.Texture.unload()",1,4,n/a,4,0,0,1,1
"org.andengine.opengl.texture.Texture.unload(GLState)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.Texture.unloadFromHardware(GLState)",2,5,n/a,8,1,1,4,2
"org.andengine.opengl.texture.Texture.writeTextureToHardware(GLState)",n/a,1,5,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.TextureManager.addMappedTexture(String,ITexture)",5,3,n/a,10,1,2,7,4
"org.andengine.opengl.texture.TextureManager.getMappedTexture(String)",2,3,n/a,6,1,1,3,2
"org.andengine.opengl.texture.TextureManager.getTexture(String,AssetManager,String)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.TextureManager.getTexture(String,AssetManager,String,TextureOptions)",6,1,n/a,10,1,4,6,2
"org.andengine.opengl.texture.TextureManager.getTexture(String,IInputStreamOpener)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.texture.TextureManager.getTexture(String,IInputStreamOpener,BitmapTextureFormat,TextureOptions)",1,1,n/a,3,0,4,1,1
"org.andengine.opengl.texture.TextureManager.getTexture(String,IInputStreamOpener,BitmapTextureFormat,TextureOptions,boolean)",5,1,n/a,12,2,5,7,3
"org.andengine.opengl.texture.TextureManager.getTexture(String,IInputStreamOpener,TextureOptions)",1,1,n/a,3,0,3,1,1
"org.andengine.opengl.texture.TextureManager.hasMappedTexture(String)",2,3,n/a,6,1,1,3,2
"org.andengine.opengl.texture.TextureManager.loadTexture(GLState,ITexture)",9,2,n/a,26,1,2,12,5
"org.andengine.opengl.texture.TextureManager.loadTexture(ITexture)",5,4,n/a,18,1,1,8,3
"org.andengine.opengl.texture.TextureManager.onCreate()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.TextureManager.onDestroy()",6,1,n/a,12,1,0,9,2
"org.andengine.opengl.texture.TextureManager.onReload()",9,1,n/a,17,2,0,11,5
"org.andengine.opengl.texture.TextureManager.removedMappedTexture(String)",2,0,n/a,6,1,1,3,2
"org.andengine.opengl.texture.TextureManager.unloadTexture(GLState,ITexture)",6,2,n/a,22,1,2,9,4
"org.andengine.opengl.texture.TextureManager.unloadTexture(ITexture)",6,2,n/a,21,2,1,9,5
"org.andengine.opengl.texture.TextureManager.updateTextures(GLState)",19,1,n/a,50,4,1,36,13
"org.andengine.opengl.texture.TextureOptions.TextureOptions(int,int,int,int,boolean)",0,9,n/a,7,0,5,5,1
"org.andengine.opengl.texture.TextureOptions.apply()",4,1,n/a,6,0,0,4,1
"org.andengine.opengl.texture.TextureStateAdapter.onLoadedToHardware(ITexture)",0,1,n/a,6,0,1,0,1
"org.andengine.opengl.texture.TextureStateAdapter.onUnloadedFromHardware(ITexture)",0,1,n/a,3,0,1,0,1
"org.andengine.opengl.texture.TextureWarmUpVertexBufferObject.TextureWarmUpVertexBufferObject()",14,1,n/a,16,0,0,14,1
"org.andengine.opengl.texture.TextureWarmUpVertexBufferObject.getHeapMemoryByteSize()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.TextureWarmUpVertexBufferObject.getNativeHeapMemoryByteSize()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.TextureWarmUpVertexBufferObject.onBufferData()",2,1,n/a,4,0,0,1,1
"org.andengine.opengl.texture.TextureWarmUpVertexBufferObject.warmup(GLState,ITexture)",11,1,n/a,14,1,2,9,1
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.DebugTextureAtlasStateListener.onLoadedToHardware(ITexture)",2,1,n/a,6,1,1,2,2
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.DebugTextureAtlasStateListener.onTextureAtlasSourceLoadExeption(ITextureAtlas<T>,T,Throwable)",3,1,n/a,4,0,3,1,1
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.DebugTextureAtlasStateListener.onTextureAtlasSourceLoaded(ITextureAtlas<T>,T)",3,1,n/a,4,0,2,1,1
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.DebugTextureAtlasStateListener.onUnloadedFromHardware(ITexture)",2,1,n/a,6,1,1,2,2
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.TextureAtlasStateAdapter.onLoadedToHardware(ITexture)",0,1,n/a,2,0,1,0,1
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.TextureAtlasStateAdapter.onTextureAtlasSourceLoadExeption(ITextureAtlas<T>,T,Throwable)",0,1,n/a,2,0,3,0,1
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.TextureAtlasStateAdapter.onTextureAtlasSourceLoaded(ITextureAtlas<T>,T)",0,1,n/a,2,0,2,0,1
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.TextureAtlasStateAdapter.onUnloadedFromHardware(ITexture)",0,1,n/a,2,0,1,0,1
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.onTextureAtlasSourceLoadExeption(ITextureAtlas<T>,T,Throwable)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.onTextureAtlasSourceLoaded(ITextureAtlas<T>,T)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.addEmptyTextureAtlasSource(int,int,int,int)",n/a,5,2,n/a,n/a,4,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.addTextureAtlasSource(T,int,int)",n/a,4,2,n/a,n/a,3,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.addTextureAtlasSource(T,int,int,int)",n/a,2,2,n/a,n/a,4,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.clearTextureAtlasSources()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.getTextureAtlasStateListener()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.getTextureStateListener()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.hasTextureAtlasStateListener()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.hasTextureStateListener()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.removeTextureAtlasSource(T,int,int)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.setTextureAtlasStateListener(ITextureAtlasStateListener<T>)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.setTextureStateListener(ITextureStateListener)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.atlas.TextureAtlas.TextureAtlas(TextureManager,int,int,PixelFormat,TextureOptions,ITextureAtlasStateListener<T>)",1,1,n/a,5,0,6,3,1
"org.andengine.opengl.texture.atlas.TextureAtlas.addTextureAtlasSource(T,int,int)",4,6,n/a,8,0,3,5,1
"org.andengine.opengl.texture.atlas.TextureAtlas.addTextureAtlasSource(T,int,int,int)",15,2,n/a,22,2,4,10,6
"org.andengine.opengl.texture.atlas.TextureAtlas.checkTextureAtlasSourcePosition(T,int,int)",7,1,n/a,9,1,3,6,5
"org.andengine.opengl.texture.atlas.TextureAtlas.clearTextureAtlasSources()",1,1,n/a,5,0,0,2,1
"org.andengine.opengl.texture.atlas.TextureAtlas.getHeight()",0,9,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.TextureAtlas.getTextureAtlasStateListener()",1,3,n/a,5,0,0,1,1
"org.andengine.opengl.texture.atlas.TextureAtlas.getTextureStateListener()",1,2,n/a,8,0,0,1,1
"org.andengine.opengl.texture.atlas.TextureAtlas.getWidth()",0,9,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.TextureAtlas.hasTextureAtlasStateListener()",1,1,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.TextureAtlas.hasTextureStateListener()",1,3,n/a,5,0,0,1,1
"org.andengine.opengl.texture.atlas.TextureAtlas.removeTextureAtlasSource(T,int,int)",5,1,n/a,12,2,3,9,5
"org.andengine.opengl.texture.atlas.TextureAtlas.setTextureAtlasStateListener(ITextureAtlasStateListener<T>)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.TextureAtlas.setTextureStateListener(ITextureStateListener)",1,3,n/a,8,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.BitmapTextureAtlas(TextureManager,int,int)",1,0,n/a,6,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.BitmapTextureAtlas(TextureManager,int,int,BitmapTextureFormat)",1,1,n/a,6,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.BitmapTextureAtlas(TextureManager,int,int,BitmapTextureFormat,ITextureAtlasStateListener<IBitmapTextureAtlasSource>)",1,0,n/a,7,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.BitmapTextureAtlas(TextureManager,int,int,BitmapTextureFormat,TextureOptions)",1,3,n/a,7,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.BitmapTextureAtlas(TextureManager,int,int,BitmapTextureFormat,TextureOptions,ITextureAtlasStateListener<IBitmapTextureAtlasSource>)",2,7,n/a,9,0,6,2,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.BitmapTextureAtlas(TextureManager,int,int,ITextureAtlasStateListener<IBitmapTextureAtlasSource>)",1,0,n/a,8,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.BitmapTextureAtlas(TextureManager,int,int,TextureOptions)",1,0,n/a,8,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.BitmapTextureAtlas(TextureManager,int,int,TextureOptions,ITextureAtlasStateListener<IBitmapTextureAtlasSource>)",1,0,n/a,9,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.addEmptyTextureAtlasSource(int,int,int,int)",2,5,n/a,4,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.getBitmapTextureFormat()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas.writeTextureToHardware(GLState)",29,1,n/a,47,3,1,32,12
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromAsset(BitmapTextureAtlas,AssetManager,String,int,int)",2,0,n/a,4,0,5,2,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromAsset(BitmapTextureAtlas,Context,String,int,int)",2,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromAsset(BuildableBitmapTextureAtlas,AssetManager,String)",1,1,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromAsset(BuildableBitmapTextureAtlas,AssetManager,String,boolean)",2,1,n/a,4,0,4,2,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromAsset(BuildableBitmapTextureAtlas,Context,String)",2,1,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromAsset(BuildableBitmapTextureAtlas,Context,String,boolean)",2,1,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromResource(BitmapTextureAtlas,Context,int,int,int)",2,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromResource(BitmapTextureAtlas,Resources,int,int,int)",2,0,n/a,4,0,5,2,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromResource(BuildableBitmapTextureAtlas,Context,int)",2,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromResource(BuildableBitmapTextureAtlas,Context,int,boolean)",2,1,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromResource(BuildableBitmapTextureAtlas,Resources,int)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromResource(BuildableBitmapTextureAtlas,Resources,int,boolean)",2,1,n/a,4,0,4,2,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromSource(BitmapTextureAtlas,IBitmapTextureAtlasSource,int,int)",1,3,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromSource(BuildableBitmapTextureAtlas,IBitmapTextureAtlasSource)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createFromSource(BuildableBitmapTextureAtlas,IBitmapTextureAtlasSource,boolean)",1,3,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromAsset(BitmapTextureAtlas,AssetManager,String,int,int,int,int)",2,0,n/a,4,0,7,2,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromAsset(BitmapTextureAtlas,Context,String,int,int,int,int)",2,0,n/a,3,0,7,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromAsset(BuildableBitmapTextureAtlas,AssetManager,String,int,int)",2,0,n/a,4,0,5,2,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromAsset(BuildableBitmapTextureAtlas,Context,String,int,int)",2,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromAssetDirectory(BuildableBitmapTextureAtlas,AssetManager,String)",4,0,n/a,23,1,3,12,3
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromResource(BitmapTextureAtlas,Context,int,int,int,int,int)",2,0,n/a,3,0,7,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromResource(BitmapTextureAtlas,Resources,int,int,int,int,int)",2,0,n/a,4,0,7,2,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromResource(BuildableBitmapTextureAtlas,Context,int,int,int)",2,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromResource(BuildableBitmapTextureAtlas,Resources,int,int,int)",2,0,n/a,4,0,5,2,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromSource(BitmapTextureAtlas,IBitmapTextureAtlasSource,int,int,int,int)",1,2,n/a,3,0,6,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.createTiledFromSource(BuildableBitmapTextureAtlas,IBitmapTextureAtlasSource,int,int)",1,2,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.getAssetBasePath()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.reset()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory.setAssetBasePath(String)",3,2,n/a,10,1,1,3,3
"org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas.BuildableBitmapTextureAtlas(TextureManager,int,int)",1,0,n/a,6,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas.BuildableBitmapTextureAtlas(TextureManager,int,int,BitmapTextureFormat)",1,1,n/a,6,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas.BuildableBitmapTextureAtlas(TextureManager,int,int,BitmapTextureFormat,ITextureAtlasStateListener<IBitmapTextureAtlasSource>)",1,0,n/a,7,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas.BuildableBitmapTextureAtlas(TextureManager,int,int,BitmapTextureFormat,TextureOptions)",1,0,n/a,7,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas.BuildableBitmapTextureAtlas(TextureManager,int,int,BitmapTextureFormat,TextureOptions,ITextureAtlasStateListener<IBitmapTextureAtlasSource>)",2,6,n/a,8,0,6,1,1
"org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas.BuildableBitmapTextureAtlas(TextureManager,int,int,ITextureAtlasStateListener<IBitmapTextureAtlasSource>)",1,0,n/a,8,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas.BuildableBitmapTextureAtlas(TextureManager,int,int,TextureOptions)",1,0,n/a,8,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas.BuildableBitmapTextureAtlas(TextureManager,int,int,TextureOptions,ITextureAtlasStateListener<IBitmapTextureAtlasSource>)",1,0,n/a,9,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource.AssetBitmapTextureAtlasSource(AssetManager,String,int,int,int,int)",1,2,n/a,5,0,6,3,1
"org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource.create(AssetManager,String)",1,4,n/a,3,0,2,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource.create(AssetManager,String,int,int)",6,1,n/a,14,1,4,9,2
"org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource.onLoadBitmap(Config)",7,2,n/a,15,1,1,9,2
"org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource.toString()",2,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.EmptyBitmapTextureAtlasSource.EmptyBitmapTextureAtlasSource(int,int)",1,1,n/a,3,0,2,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.EmptyBitmapTextureAtlasSource.EmptyBitmapTextureAtlasSource(int,int,int,int)",1,2,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.EmptyBitmapTextureAtlasSource.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.EmptyBitmapTextureAtlasSource.onLoadBitmap(Config)",1,2,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.EmptyBitmapTextureAtlasSource.toString()",2,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource.FileBitmapTextureAtlasSource(File,int,int,int,int)",1,2,n/a,4,0,5,2,1
"org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource.create(File)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource.create(File,int,int)",7,3,n/a,14,1,3,9,2
"org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource.createFromExternalStorage(Context,String,int,int)",3,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource.createFromInternalStorage(Context,String,int,int)",3,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource.onLoadBitmap(Config)",7,2,n/a,15,1,1,9,2
"org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource.toString()",2,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource.deepCopy()",n/a,0,10,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource.onLoadBitmap(Config)",n/a,2,6,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource.PictureBitmapTextureAtlasSource(Picture)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource.PictureBitmapTextureAtlasSource(Picture,int,int)",3,1,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource.PictureBitmapTextureAtlasSource(Picture,int,int,float)",5,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource.PictureBitmapTextureAtlasSource(Picture,int,int,int,int)",1,2,n/a,4,0,5,2,1
"org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource.deepCopy()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource.onLoadBitmap(Config)",9,2,n/a,15,1,1,11,2
"org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource.ResourceBitmapTextureAtlasSource(Resources,int,int,int,int,int)",1,2,n/a,5,0,6,3,1
"org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource.create(Resources,int)",1,4,n/a,3,0,2,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource.create(Resources,int,int,int)",3,1,n/a,7,0,4,4,1
"org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource.onLoadBitmap(Config)",2,2,n/a,7,0,1,3,1
"org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource.toString()",2,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.BaseBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource)",2,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.BaseBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,TextureAtlasSourceDecoratorOptions)",8,2,n/a,6,0,2,4,2
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.deepCopy()",3,0,n/a,6,0,0,4,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.getAntiAliasing()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.getInsetBottom()",0,6,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.getInsetLeft()",0,6,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.getInsetRight()",0,6,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.getInsetTop()",0,6,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.setAntiAliasing(boolean)",0,1,n/a,4,0,1,2,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.setInsetBottom(float)",0,0,n/a,4,0,1,2,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.setInsetLeft(float)",0,0,n/a,4,0,1,2,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.setInsetRight(float)",0,0,n/a,4,0,1,2,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.setInsetTop(float)",0,0,n/a,4,0,1,2,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.setInsets(float)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions.setInsets(float,float,float,float)",0,2,n/a,7,0,4,5,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.deepCopy()",n/a,0,6,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.ensureLoadedBitmapIsMutable(Bitmap)",4,1,n/a,9,1,1,5,2
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.getPaint()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.getTextureAtlasSourceDecoratorOptions()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.getTextureHeight()",1,22,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.getTextureWidth()",1,22,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.onDecorateBitmap(Canvas)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.onLoadBitmap(Config)",5,2,n/a,11,1,1,6,2
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.setPaint(Paint)",0,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.setTextureAtlasSourceDecoratorOptions(TextureAtlasSourceDecoratorOptions)",0,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator.BaseShapeBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,TextureAtlasSourceDecoratorOptions)",1,5,n/a,4,0,3,2,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator.deepCopy()",n/a,0,6,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator.onDecorateBitmap(Canvas)",1,1,n/a,4,0,1,1,2
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator.ColorKeyBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,Color)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator.ColorKeyBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,Color,TextureAtlasSourceDecoratorOptions)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator.ColorKeyBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,Color,int)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator.ColorKeyBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,Color,int,TextureAtlasSourceDecoratorOptions)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator.ColorKeyBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator.ColorKeyBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,TextureAtlasSourceDecoratorOptions)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator.ColorKeyBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator.ColorKeyBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int,TextureAtlasSourceDecoratorOptions)",1,1,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator.ColorSwapBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,Color,Color)",3,1,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator.ColorSwapBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,Color,Color,TextureAtlasSourceDecoratorOptions)",3,1,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator.ColorSwapBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,Color,int,Color)",3,1,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator.ColorSwapBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,Color,int,Color,TextureAtlasSourceDecoratorOptions)",3,1,n/a,3,0,6,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator.ColorSwapBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int)",1,2,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator.ColorSwapBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int,TextureAtlasSourceDecoratorOptions)",1,2,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator.ColorSwapBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int,int)",1,2,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator.ColorSwapBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int,int,TextureAtlasSourceDecoratorOptions)",4,6,n/a,8,0,6,6,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.FillBitmapTextureAtlasSourceDecorator.FillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.FillBitmapTextureAtlasSourceDecorator.FillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,TextureAtlasSourceDecoratorOptions)",3,2,n/a,6,0,4,4,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.FillBitmapTextureAtlasSourceDecorator.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientDirection.LinearGradientDirection(int,int,int,int)",0,8,n/a,6,0,4,4,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientDirection.getFromX(int)",0,1,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientDirection.getFromY(int)",0,1,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientDirection.getToX(int)",0,1,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientDirection.getToY(int)",0,1,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientFillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int,LinearGradientDirection)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientFillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int,LinearGradientDirection,TextureAtlasSourceDecoratorOptions)",1,1,n/a,3,0,6,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientFillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int[],float[],LinearGradientDirection)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientFillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int[],float[],LinearGradientDirection,TextureAtlasSourceDecoratorOptions)",10,3,n/a,14,0,6,12,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.OutlineBitmapTextureAtlasSourceDecorator.OutlineBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.OutlineBitmapTextureAtlasSourceDecorator.OutlineBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,TextureAtlasSourceDecoratorOptions)",3,2,n/a,6,0,4,4,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.OutlineBitmapTextureAtlasSourceDecorator.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator.RadialGradientFillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int,RadialGradientDirection)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator.RadialGradientFillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int,int,RadialGradientDirection,TextureAtlasSourceDecoratorOptions)",1,1,n/a,3,0,6,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator.RadialGradientFillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int[],float[],RadialGradientDirection)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator.RadialGradientFillBitmapTextureAtlasSourceDecorator(IBitmapTextureAtlasSource,IBitmapTextureAtlasSourceDecoratorShape,int[],float[],RadialGradientDirection,TextureAtlasSourceDecoratorOptions)",10,3,n/a,21,1,6,18,3
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator.deepCopy()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.ArcBitmapTextureAtlasSourceDecoratorShape.ArcBitmapTextureAtlasSourceDecoratorShape()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.ArcBitmapTextureAtlasSourceDecoratorShape.ArcBitmapTextureAtlasSourceDecoratorShape(float,float,boolean)",0,1,n/a,5,0,3,3,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.ArcBitmapTextureAtlasSourceDecoratorShape.getDefaultInstance()",1,0,n/a,7,1,0,3,2
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.ArcBitmapTextureAtlasSourceDecoratorShape.onDecorateBitmap(Canvas,Paint,TextureAtlasSourceDecoratorOptions)",8,1,n/a,9,0,3,6,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.CircleBitmapTextureAtlasSourceDecoratorShape.CircleBitmapTextureAtlasSourceDecoratorShape()",0,1,n/a,2,0,0,0,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.CircleBitmapTextureAtlasSourceDecoratorShape.getDefaultInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.CircleBitmapTextureAtlasSourceDecoratorShape.onDecorateBitmap(Canvas,Paint,TextureAtlasSourceDecoratorOptions)",14,1,n/a,9,0,3,6,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.EllipseBitmapTextureAtlasSourceDecoratorShape.EllipseBitmapTextureAtlasSourceDecoratorShape()",0,1,n/a,2,0,0,0,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.EllipseBitmapTextureAtlasSourceDecoratorShape.getDefaultInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.EllipseBitmapTextureAtlasSourceDecoratorShape.onDecorateBitmap(Canvas,Paint,TextureAtlasSourceDecoratorOptions)",8,1,n/a,9,0,3,6,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.IBitmapTextureAtlasSourceDecoratorShape.onDecorateBitmap(Canvas,Paint,TextureAtlasSourceDecoratorOptions)",n/a,1,5,n/a,n/a,3,n/a,n/a
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RectangleBitmapTextureAtlasSourceDecoratorShape.RectangleBitmapTextureAtlasSourceDecoratorShape()",0,1,n/a,2,0,0,0,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RectangleBitmapTextureAtlasSourceDecoratorShape.getDefaultInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RectangleBitmapTextureAtlasSourceDecoratorShape.onDecorateBitmap(Canvas,Paint,TextureAtlasSourceDecoratorOptions)",7,1,n/a,8,0,3,5,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape(float,float)",0,1,n/a,4,0,2,2,1
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape.getDefaultInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape.onDecorateBitmap(Canvas,Paint,TextureAtlasSourceDecoratorOptions)",8,1,n/a,9,0,3,6,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.BuildableTextureAtlas(T)",0,1,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.TextureAtlasSourceWithWithLocationCallback.TextureAtlasSourceWithWithLocationCallback(T,Callback<T>)",0,1,n/a,4,0,2,2,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.TextureAtlasSourceWithWithLocationCallback.getCallback()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.TextureAtlasSourceWithWithLocationCallback.getTextureAtlasSource()",0,5,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.addEmptyTextureAtlasSource(int,int,int,int)",1,5,n/a,4,0,4,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.addTextureAtlasSource(S,Callback<S>)",2,2,n/a,4,0,2,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.addTextureAtlasSource(S,int,int)",1,4,n/a,5,0,3,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.addTextureAtlasSource(S,int,int,int)",1,2,n/a,5,0,4,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.bind(GLState)",1,6,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.bind(GLState,int)",1,1,n/a,4,0,2,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.build(ITextureAtlasBuilder<S, T>)",3,2,n/a,7,0,1,4,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.clearTextureAtlasSources()",2,1,n/a,5,0,0,2,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.getHardwareTextureID()",1,1,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.getHeight()",1,7,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.getPixelFormat()",1,2,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.getTextureAtlasStateListener()",1,1,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.getTextureOptions()",1,3,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.getTextureStateListener()",1,1,n/a,8,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.getWidth()",1,7,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.hasTextureAtlasStateListener()",1,2,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.hasTextureStateListener()",1,1,n/a,8,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.isLoadedToHardware()",1,6,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.isUpdateOnHardwareNeeded()",1,3,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.load()",1,4,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.load(GLState)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.loadToHardware(GLState)",1,3,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.reloadToHardware(GLState)",1,3,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.removeTextureAtlasSource(ITextureAtlasSource)",4,0,n/a,12,2,1,9,3
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.removeTextureAtlasSource(S,int,int)",1,1,n/a,4,0,3,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.setNotLoadedToHardware()",1,3,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.setTextureAtlasStateListener(ITextureAtlasStateListener<S>)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.setTextureStateListener(ITextureStateListener)",1,1,n/a,8,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.setUpdateOnHardwareNeeded(boolean)",1,3,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.unload()",1,4,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.unload(GLState)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.unloadFromHardware(GLState)",1,3,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlasTextureRegionFactory.createFromSource(BuildableTextureAtlas<T, A>,T,boolean)",8,1,n/a,4,2,3,4,1
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlasTextureRegionFactory.createTiledFromSource(BuildableTextureAtlas<T, A>,T,int,int)",10,1,n/a,13,4,4,15,3
"org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas.addTextureAtlasSource(S,Callback<S>)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas.addTextureAtlasSource(S,int,int)",n/a,4,1,n/a,n/a,3,n/a,n/a
"org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas.addTextureAtlasSource(S,int,int,int)",n/a,2,1,n/a,n/a,4,n/a,n/a
"org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas.build(ITextureAtlasBuilder<S, T>)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas.removeTextureAtlasSource(ITextureAtlasSource)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.BlackPawnTextureAtlasBuilder(int,int,int)",0,0,n/a,10,0,3,3,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Node.Node(Rect)",0,2,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Node.Node(int,int,int,int)",2,4,n/a,3,0,4,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Node.createChildren(ITextureAtlasSource,int,int,int,int,int,int)",25,3,n/a,33,1,7,7,2
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Node.getChildA()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Node.getChildB()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Node.getRect()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Node.insert(ITextureAtlasSource,int,int,int,int)",11,4,n/a,63,3,5,46,21
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Rect.Rect(int,int,int,int)",0,2,n/a,6,0,4,4,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Rect.getBottom()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Rect.getHeight()",0,4,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Rect.getLeft()",0,5,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Rect.getRight()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Rect.getTop()",0,5,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Rect.getWidth()",0,4,n/a,3,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Rect.toString()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.build(A,ArrayList<TextureAtlasSourceWithWithLocationCallback<T>>)",17,1,n/a,26,2,2,21,4
"org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder.TextureAtlasBuilderException.TextureAtlasBuilderException(String)",1,1,n/a,3,0,1,1,1
"org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder.build(A,ArrayList<TextureAtlasSourceWithWithLocationCallback<T>>)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.BaseTextureAtlasSource(int,int,int,int)",0,6,n/a,6,0,4,4,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.getTextureHeight()",0,22,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.getTextureWidth()",0,22,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.getTextureX()",0,6,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.getTextureY()",0,6,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.setTextureHeight(int)",0,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.setTextureWidth(int)",0,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.setTextureX(int)",0,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.setTextureY(int)",0,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource.toString()",4,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource.deepCopy()",n/a,0,10,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource.getTextureHeight()",n/a,21,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource.getTextureWidth()",n/a,21,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource.getTextureX()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource.getTextureY()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource.setTextureHeight(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource.setTextureWidth(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource.setTextureX(int)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource.setTextureY(int)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.bitmap.AssetBitmapTexture.AssetBitmapTexture(TextureManager,AssetManager,String)",2,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.bitmap.AssetBitmapTexture.AssetBitmapTexture(TextureManager,AssetManager,String,BitmapTextureFormat)",2,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.bitmap.AssetBitmapTexture.AssetBitmapTexture(TextureManager,AssetManager,String,BitmapTextureFormat,TextureOptions)",2,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.bitmap.AssetBitmapTexture.AssetBitmapTexture(TextureManager,AssetManager,String,BitmapTextureFormat,TextureOptions,ITextureStateListener)",2,0,n/a,3,0,6,1,1
"org.andengine.opengl.texture.bitmap.AssetBitmapTexture.AssetBitmapTexture(TextureManager,AssetManager,String,TextureOptions)",2,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.bitmap.BitmapTexture.BitmapTexture(TextureManager,IInputStreamOpener)",1,2,n/a,3,0,2,1,1
"org.andengine.opengl.texture.bitmap.BitmapTexture.BitmapTexture(TextureManager,IInputStreamOpener,BitmapTextureFormat)",1,2,n/a,3,0,3,1,1
"org.andengine.opengl.texture.bitmap.BitmapTexture.BitmapTexture(TextureManager,IInputStreamOpener,BitmapTextureFormat,TextureOptions)",1,5,n/a,3,0,4,1,1
"org.andengine.opengl.texture.bitmap.BitmapTexture.BitmapTexture(TextureManager,IInputStreamOpener,BitmapTextureFormat,TextureOptions,ITextureStateListener)",6,6,n/a,15,1,5,11,1
"org.andengine.opengl.texture.bitmap.BitmapTexture.BitmapTexture(TextureManager,IInputStreamOpener,TextureOptions)",1,3,n/a,3,0,3,1,1
"org.andengine.opengl.texture.bitmap.BitmapTexture.getHeight()",0,7,n/a,4,0,0,1,1
"org.andengine.opengl.texture.bitmap.BitmapTexture.getWidth()",0,7,n/a,4,0,0,1,1
"org.andengine.opengl.texture.bitmap.BitmapTexture.onGetBitmap(Config)",3,1,n/a,5,0,1,3,1
"org.andengine.opengl.texture.bitmap.BitmapTexture.writeTextureToHardware(GLState)",13,1,n/a,24,1,1,14,7
"org.andengine.opengl.texture.bitmap.BitmapTextureFormat.BitmapTextureFormat(Config,PixelFormat)",0,4,n/a,4,0,2,2,1
"org.andengine.opengl.texture.bitmap.BitmapTextureFormat.fromPixelFormat(PixelFormat)",2,1,n/a,14,1,1,11,6
"org.andengine.opengl.texture.bitmap.BitmapTextureFormat.getBitmapConfig()",0,2,n/a,3,0,0,1,1
"org.andengine.opengl.texture.bitmap.BitmapTextureFormat.getPixelFormat()",0,3,n/a,3,0,0,1,1
"org.andengine.opengl.texture.bitmap.ResourceBitmapTexture.ResourceBitmapTexture(TextureManager,Resources,int)",2,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.bitmap.ResourceBitmapTexture.ResourceBitmapTexture(TextureManager,Resources,int,BitmapTextureFormat)",2,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.bitmap.ResourceBitmapTexture.ResourceBitmapTexture(TextureManager,Resources,int,BitmapTextureFormat,TextureOptions)",2,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.bitmap.ResourceBitmapTexture.ResourceBitmapTexture(TextureManager,Resources,int,BitmapTextureFormat,TextureOptions,ITextureStateListener)",2,0,n/a,3,0,6,1,1
"org.andengine.opengl.texture.bitmap.ResourceBitmapTexture.ResourceBitmapTexture(TextureManager,Resources,int,TextureOptions)",2,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.ETC1Texture(TextureManager)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.ETC1Texture(TextureManager,ITextureStateListener)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.ETC1Texture(TextureManager,TextureOptions)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.ETC1Texture(TextureManager,TextureOptions,ITextureStateListener)",5,3,n/a,10,1,3,6,1
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.ETC1TextureHeader.ETC1TextureHeader(byte[])",14,1,n/a,13,1,1,9,3
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.ETC1TextureHeader.getHeight()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.ETC1TextureHeader.getWidth()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.getHeight()",1,7,n/a,4,0,0,1,1
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.getInputStream()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.getWidth()",1,7,n/a,4,0,0,1,1
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.writeTextureToHardware(GLState)",4,1,n/a,5,0,1,2,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZCompressionFormat.CCZCompressionFormat(short)",0,4,n/a,3,0,1,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZCompressionFormat.fromID(short)",3,1,n/a,11,2,1,9,3
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZCompressionFormat.wrap(InputStream)",5,1,n/a,12,1,1,9,4
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZHeader.CCZHeader(byte[])",9,1,n/a,11,1,1,6,2
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZHeader.getCCZCompressionFormat()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZHeader.getCCZCompressionFormatID()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZHeader.getUncompressedSize()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZHeader.getUserdata()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZHeader.getVersion()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.PVRCCZTexture(TextureManager,PVRTextureFormat)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.PVRCCZTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.PVRCCZTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy,ITextureStateListener)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.PVRCCZTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy,TextureOptions)",1,1,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.PVRCCZTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy,TextureOptions,ITextureStateListener)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.PVRCCZTexture(TextureManager,PVRTextureFormat,ITextureStateListener)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.PVRCCZTexture(TextureManager,PVRTextureFormat,TextureOptions)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.PVRCCZTexture(TextureManager,PVRTextureFormat,TextureOptions,ITextureStateListener)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.getInputStream()",5,4,n/a,6,0,0,3,1
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.getPVRTextureBuffer()",5,1,n/a,11,1,0,6,1
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture.PVRGZTexture(TextureManager,PVRTextureFormat)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture.PVRGZTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture.PVRGZTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy,ITextureStateListener)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture.PVRGZTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy,TextureOptions)",1,1,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture.PVRGZTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy,TextureOptions,ITextureStateListener)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture.PVRGZTexture(TextureManager,PVRTextureFormat,ITextureStateListener)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture.PVRGZTexture(TextureManager,PVRTextureFormat,TextureOptions)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture.PVRGZTexture(TextureManager,PVRTextureFormat,TextureOptions,ITextureStateListener)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture.getInputStream()",2,3,n/a,4,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTexture(TextureManager,PVRTextureFormat)",2,2,n/a,3,0,2,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy)",1,2,n/a,3,0,3,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy,ITextureStateListener)",1,2,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy,TextureOptions)",1,3,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTexture(TextureManager,PVRTextureFormat,IPVRTexturePixelBufferStrategy,TextureOptions,ITextureStateListener)",23,9,n/a,31,3,5,22,7
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTexture(TextureManager,PVRTextureFormat,ITextureStateListener)",2,2,n/a,3,0,3,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTexture(TextureManager,PVRTextureFormat,TextureOptions)",2,2,n/a,3,0,3,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTexture(TextureManager,PVRTextureFormat,TextureOptions,ITextureStateListener)",2,2,n/a,3,0,4,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureFormat.PVRTextureFormat(int,boolean,PixelFormat)",0,7,n/a,5,0,3,3,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureFormat.fromID(int)",3,1,n/a,11,2,1,9,3
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureFormat.fromPixelFormat(PixelFormat)",2,3,n/a,12,1,1,9,5
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureFormat.getID()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureFormat.getPixelFormat()",0,5,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureFormat.isCompressed()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.PVRTextureHeader(byte[])",9,1,n/a,10,1,1,6,2
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getBitmaskAlpha()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getBitmaskBlue()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getBitmaskGreen()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getBitmaskRed()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getBitsPerPixel()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getDataLength()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getFlags()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getHeight()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getNumMipmaps()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getPVRTag()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getPVRTextureFormat()",0,4,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.getWidth()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.hasAlpha()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.headerLength()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader.numSurfs()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.getHeight()",1,8,n/a,4,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.getInputStream()",1,3,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.getPVRTextureBuffer()",5,1,n/a,10,1,0,6,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.getPVRTextureHeader()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.getWidth()",1,8,n/a,4,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.hasMipMaps()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.onGetInputStream()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.writeTextureToHardware(GLState)",12,1,n/a,27,2,1,18,5
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy.GreedyPVRTexturePixelBufferStrategyBufferManager.GreedyPVRTexturePixelBufferStrategyBufferManager(PVRTexture)",1,1,n/a,3,0,1,1,1
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy.GreedyPVRTexturePixelBufferStrategyBufferManager.getPixelBuffer(int,int)",3,2,n/a,6,0,2,3,1
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy.loadPVRTextureData(IPVRTexturePixelBufferStrategyBufferManager,int,int,int,PixelFormat,int,int,int)",5,1,n/a,7,0,8,2,1
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy.newPVRTexturePixelBufferStrategyManager(PVRTexture)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy.IPVRTexturePixelBufferStrategyBufferManager.getPixelBuffer(int,int)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy.loadPVRTextureData(IPVRTexturePixelBufferStrategyBufferManager,int,int,int,PixelFormat,int,int,int)",n/a,1,2,n/a,n/a,8,n/a,n/a
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy.newPVRTexturePixelBufferStrategyManager(PVRTexture)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy.SmartPVRTexturePixelBufferStrategy(int)",0,3,n/a,3,0,1,1,1
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy.SmartPVRTexturePixelBufferStrategyBufferManager.SmartPVRTexturePixelBufferStrategyBufferManager(PVRTexture)",1,1,n/a,3,0,1,1,1
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy.SmartPVRTexturePixelBufferStrategyBufferManager.getPixelBuffer(int,int)",5,2,n/a,25,2,2,14,6
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy.loadPVRTextureData(IPVRTexturePixelBufferStrategyBufferManager,int,int,int,PixelFormat,int,int,int)",8,1,n/a,22,1,8,14,2
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy.newPVRTexturePixelBufferStrategyManager(PVRTexture)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.BaseTextureRegion.BaseTextureRegion(ITexture)",0,2,n/a,3,0,1,1,1
"org.andengine.opengl.texture.region.BaseTextureRegion.deepCopy()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.BaseTextureRegion.getTexture()",0,12,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.ITextureRegion.deepCopy()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getHeight()",n/a,31,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getScale()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getTexture()",n/a,11,1,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getTextureX()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getTextureY()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getU()",n/a,46,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getU2()",n/a,46,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getV()",n/a,46,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getV2()",n/a,46,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.getWidth()",n/a,31,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.isRotated()",n/a,16,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.isScaled()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.set(float,float,float,float)",n/a,2,2,n/a,n/a,4,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.setTextureHeight(float)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.setTexturePosition(float,float)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.setTextureSize(float,float)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.setTextureWidth(float)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.setTextureX(float)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITextureRegion.setTextureY(float)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.deepCopy()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getCurrentTileIndex()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getHeight(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getScale(int)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getTextureRegion(int)",n/a,3,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getTextureX(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getTextureY(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getTileCount()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getU(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getU2(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getV(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getV2(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.getWidth(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.isRotated(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.isScaled(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.nextTile()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.set(int,float,float,float,float)",n/a,0,1,n/a,n/a,5,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.setCurrentTileIndex(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.setTextureHeight(int,float)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.setTexturePosition(int,float,float)",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.setTextureSize(int,float,float)",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.setTextureWidth(int,float)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.setTextureX(int,float)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion.setTextureY(int,float)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.texture.region.TextureRegion.TextureRegion(ITexture,float,float,float,float)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.region.TextureRegion.TextureRegion(ITexture,float,float,float,float,boolean)",1,7,n/a,3,0,6,1,1
"org.andengine.opengl.texture.region.TextureRegion.TextureRegion(ITexture,float,float,float,float,float)",1,0,n/a,3,0,6,1,1
"org.andengine.opengl.texture.region.TextureRegion.TextureRegion(ITexture,float,float,float,float,float,boolean)",2,4,n/a,16,1,7,12,2
"org.andengine.opengl.texture.region.TextureRegion.deepCopy()",2,1,n/a,8,1,0,3,2
"org.andengine.opengl.texture.region.TextureRegion.getHeight()",0,31,n/a,8,1,0,3,2
"org.andengine.opengl.texture.region.TextureRegion.getScale()",0,4,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TextureRegion.getTextureX()",0,3,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TextureRegion.getTextureY()",0,3,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TextureRegion.getU()",0,46,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TextureRegion.getU2()",0,46,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TextureRegion.getV()",0,46,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TextureRegion.getV2()",0,46,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TextureRegion.getWidth()",0,31,n/a,8,1,0,3,2
"org.andengine.opengl.texture.region.TextureRegion.isRotated()",0,16,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TextureRegion.isScaled()",0,2,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TextureRegion.set(float,float,float,float)",1,2,n/a,8,0,4,5,1
"org.andengine.opengl.texture.region.TextureRegion.setTextureHeight(float)",1,3,n/a,5,0,1,2,1
"org.andengine.opengl.texture.region.TextureRegion.setTexturePosition(float,float)",1,3,n/a,6,0,2,3,1
"org.andengine.opengl.texture.region.TextureRegion.setTextureSize(float,float)",1,2,n/a,6,0,2,3,1
"org.andengine.opengl.texture.region.TextureRegion.setTextureWidth(float)",1,3,n/a,5,0,1,2,1
"org.andengine.opengl.texture.region.TextureRegion.setTextureX(float)",1,2,n/a,5,0,1,2,1
"org.andengine.opengl.texture.region.TextureRegion.setTextureY(float)",1,2,n/a,5,0,1,2,1
"org.andengine.opengl.texture.region.TextureRegion.updateUV()",4,8,n/a,16,0,0,9,1
"org.andengine.opengl.texture.region.TextureRegionFactory.createFromSource(ITextureAtlas<T>,T,int,int)",1,1,n/a,3,0,4,1,1
"org.andengine.opengl.texture.region.TextureRegionFactory.createFromSource(ITextureAtlas<T>,T,int,int,boolean)",4,1,n/a,5,0,5,3,1
"org.andengine.opengl.texture.region.TextureRegionFactory.createTiledFromSource(ITextureAtlas<T>,T,int,int,int,int)",1,1,n/a,3,0,6,1,1
"org.andengine.opengl.texture.region.TextureRegionFactory.createTiledFromSource(ITextureAtlas<T>,T,int,int,int,int,boolean)",4,1,n/a,5,0,7,3,1
"org.andengine.opengl.texture.region.TextureRegionFactory.extractFromTexture(ITexture)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.region.TextureRegionFactory.extractFromTexture(ITexture,boolean)",3,1,n/a,3,0,2,1,1
"org.andengine.opengl.texture.region.TextureRegionFactory.extractFromTexture(ITexture,int,int,int,int)",1,0,n/a,3,0,5,1,1
"org.andengine.opengl.texture.region.TextureRegionFactory.extractFromTexture(ITexture,int,int,int,int,boolean)",1,1,n/a,3,0,6,1,1
"org.andengine.opengl.texture.region.TextureRegionFactory.extractTiledFromTexture(ITexture,int,int)",3,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.region.TextureRegionFactory.extractTiledFromTexture(ITexture,int,int,int,int,int,int)",1,0,n/a,3,0,7,1,1
"org.andengine.opengl.texture.region.TextureRegionLibrary.TextureRegionLibrary(int)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.region.TextureRegionLibrary.get(int)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TextureRegionLibrary.getTiled(int)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.TiledTextureRegion(ITexture,ITextureRegion...)",1,5,n/a,3,0,2,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.TiledTextureRegion(ITexture,boolean,ITextureRegion...)",10,3,n/a,17,3,3,9,4
"org.andengine.opengl.texture.region.TiledTextureRegion.create(ITexture,int,int,int,int,int,int)",1,3,n/a,3,0,7,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.create(ITexture,int,int,int,int,int,int,boolean)",2,2,n/a,14,2,8,14,3
"org.andengine.opengl.texture.region.TiledTextureRegion.deepCopy()",2,1,n/a,9,1,0,7,2
"org.andengine.opengl.texture.region.TiledTextureRegion.getCurrentTileIndex()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getHeight()",1,31,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getHeight(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getScale()",1,4,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getScale(int)",1,2,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getTextureRegion(int)",0,3,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getTextureX()",1,2,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getTextureX(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getTextureY()",1,2,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getTextureY(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getTileCount()",0,4,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getU()",1,46,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getU(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getU2()",1,46,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getU2(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getV()",1,46,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getV(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getV2()",1,46,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getV2(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getWidth()",1,31,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.getWidth(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.isRotated()",1,16,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.isRotated(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.isScaled()",1,2,n/a,4,0,0,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.isScaled(int)",1,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.nextTile()",0,0,n/a,7,1,0,3,2
"org.andengine.opengl.texture.region.TiledTextureRegion.set(float,float,float,float)",1,2,n/a,4,0,4,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.set(int,float,float,float,float)",1,0,n/a,4,0,5,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setCurrentTileIndex(int)",0,0,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureHeight(float)",1,3,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureHeight(int,float)",1,0,n/a,4,0,2,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTexturePosition(float,float)",1,2,n/a,4,0,2,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTexturePosition(int,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureSize(float,float)",1,2,n/a,4,0,2,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureSize(int,float,float)",1,0,n/a,4,0,3,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureWidth(float)",1,3,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureWidth(int,float)",1,0,n/a,4,0,2,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureX(float)",1,2,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureX(int,float)",1,0,n/a,4,0,2,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureY(float)",1,2,n/a,4,0,1,1,1
"org.andengine.opengl.texture.region.TiledTextureRegion.setTextureY(int,float)",1,0,n/a,4,0,2,1,1
"org.andengine.opengl.texture.render.RenderTexture.RenderTexture(TextureManager,int,int)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.texture.render.RenderTexture.RenderTexture(TextureManager,int,int,PixelFormat)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.render.RenderTexture.RenderTexture(TextureManager,int,int,PixelFormat,TextureOptions)",1,3,n/a,3,0,5,1,1
"org.andengine.opengl.texture.render.RenderTexture.RenderTexture(TextureManager,int,int,PixelFormat,TextureOptions,ITextureStateListener)",1,1,n/a,6,0,6,4,1
"org.andengine.opengl.texture.render.RenderTexture.RenderTexture(TextureManager,int,int,TextureOptions)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.texture.render.RenderTexture.begin(GLState)",1,4,n/a,7,0,1,1,1
"org.andengine.opengl.texture.render.RenderTexture.begin(GLState,Color)",5,2,n/a,9,0,2,1,1
"org.andengine.opengl.texture.render.RenderTexture.begin(GLState,boolean,boolean)",8,4,n/a,32,1,3,22,3
"org.andengine.opengl.texture.render.RenderTexture.begin(GLState,boolean,boolean,Color)",5,2,n/a,9,0,4,1,1
"org.andengine.opengl.texture.render.RenderTexture.begin(GLState,boolean,boolean,float,float,float,float)",5,4,n/a,18,0,7,5,1
"org.andengine.opengl.texture.render.RenderTexture.begin(GLState,float,float,float,float)",1,3,n/a,12,0,5,1,1
"org.andengine.opengl.texture.render.RenderTexture.destroy(GLState)",2,3,n/a,5,0,1,3,1
"org.andengine.opengl.texture.render.RenderTexture.end(GLState)",1,8,n/a,11,0,1,1,1
"org.andengine.opengl.texture.render.RenderTexture.end(GLState,boolean,boolean)",6,9,n/a,23,1,3,8,3
"org.andengine.opengl.texture.render.RenderTexture.finish(GLState)",1,1,n/a,6,0,1,1,1
"org.andengine.opengl.texture.render.RenderTexture.flush(GLState)",1,1,n/a,6,0,1,1,1
"org.andengine.opengl.texture.render.RenderTexture.getBitmap(GLState)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.render.RenderTexture.getBitmap(GLState,int,int,int,int)",3,1,n/a,6,1,5,3,2
"org.andengine.opengl.texture.render.RenderTexture.getHeight()",0,7,n/a,4,0,0,1,1
"org.andengine.opengl.texture.render.RenderTexture.getPixelsARGB_8888(GLState)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.texture.render.RenderTexture.getPixelsARGB_8888(GLState,int,int,int,int)",8,2,n/a,9,0,5,7,1
"org.andengine.opengl.texture.render.RenderTexture.getWidth()",0,7,n/a,4,0,0,1,1
"org.andengine.opengl.texture.render.RenderTexture.init(GLState)",10,1,n/a,28,1,1,13,3
"org.andengine.opengl.texture.render.RenderTexture.isInitialized()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.texture.render.RenderTexture.resotorePreviousViewport()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.texture.render.RenderTexture.restorePreviousFramebufferObjectID(GLState)",1,2,n/a,3,0,1,1,1
"org.andengine.opengl.texture.render.RenderTexture.savePreviousFramebufferObjectID(GLState)",1,2,n/a,3,0,1,1,1
"org.andengine.opengl.texture.render.RenderTexture.savePreviousViewport()",1,1,n/a,7,0,0,5,1
"org.andengine.opengl.texture.render.RenderTexture.writeTextureToHardware(GLState)",4,1,n/a,4,0,1,1,1
"org.andengine.opengl.util.BufferUtils.allocateDirectByteBuffer(int)",2,3,n/a,11,1,1,3,2
"org.andengine.opengl.util.BufferUtils.freeDirectByteBuffer(ByteBuffer)",1,4,n/a,5,1,1,2,2
"org.andengine.opengl.util.BufferUtils.getUnsignedByte(ByteBuffer)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.util.BufferUtils.getUnsignedByte(ByteBuffer,int)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.BufferUtils.getUnsignedInt(ByteBuffer)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.util.BufferUtils.getUnsignedInt(ByteBuffer,int)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.BufferUtils.getUnsignedShort(ByteBuffer)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.util.BufferUtils.getUnsignedShort(ByteBuffer,int)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.BufferUtils.jniAllocateDirect(int)",0,1,n/a,1,-1,1,0,1
"org.andengine.opengl.util.BufferUtils.jniFreeDirect(ByteBuffer)",0,1,n/a,1,-1,1,0,1
"org.andengine.opengl.util.BufferUtils.jniPut(ByteBuffer,float[],int,int)",0,1,n/a,1,-1,4,0,1
"org.andengine.opengl.util.BufferUtils.put(ByteBuffer,float[],int,int)",4,1,n/a,17,2,4,8,3
"org.andengine.opengl.util.BufferUtils.putUnsignedByte(ByteBuffer,int)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.BufferUtils.putUnsignedByte(ByteBuffer,int,int)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.util.BufferUtils.putUnsignedInt(ByteBuffer,int,long)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.util.BufferUtils.putUnsignedInt(ByteBuffer,long)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.BufferUtils.putUnsignedShort(ByteBuffer,int)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.BufferUtils.putUnsignedShort(ByteBuffer,int,int)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.util.GLHelper.convertARGB_8888toA_8(int[])",0,1,n/a,10,1,1,6,2
"org.andengine.opengl.util.GLHelper.convertARGB_8888toRGBA_4444(int[])",2,0,n/a,3,0,1,1,1
"org.andengine.opengl.util.GLHelper.convertARGB_8888toRGBA_4444(int[],ByteOrder)",0,2,n/a,23,2,2,13,4
"org.andengine.opengl.util.GLHelper.convertARGB_8888toRGBA_8888(int[])",2,0,n/a,3,0,1,1,1
"org.andengine.opengl.util.GLHelper.convertARGB_8888toRGBA_8888(int[],ByteOrder)",0,2,n/a,20,2,2,12,4
"org.andengine.opengl.util.GLHelper.convertARGB_8888toRGB_565(int[])",2,0,n/a,3,0,1,1,1
"org.andengine.opengl.util.GLHelper.convertARGB_8888toRGB_565(int[],ByteOrder)",0,2,n/a,23,2,2,13,4
"org.andengine.opengl.util.GLHelper.convertRGBA_8888toARGB_8888(int[])",2,1,n/a,3,0,1,1,1
"org.andengine.opengl.util.GLHelper.convertRGBA_8888toARGB_8888(int[],ByteOrder)",0,1,n/a,20,2,2,12,4
"org.andengine.opengl.util.GLHelper.convertRGBA_8888toARGB_8888_FlippedVertical(int[],int,int)",2,0,n/a,3,0,3,1,1
"org.andengine.opengl.util.GLHelper.convertRGBA_8888toARGB_8888_FlippedVertical(int[],int,int,ByteOrder)",0,1,n/a,25,3,4,19,6
"org.andengine.opengl.util.GLHelper.getPixels(Bitmap,PixelFormat)",2,0,n/a,6,0,2,1,1
"org.andengine.opengl.util.GLHelper.getPixels(Bitmap,PixelFormat,ByteOrder)",11,3,n/a,17,1,3,13,7
"org.andengine.opengl.util.GLHelper.getPixelsARGB_8888(Bitmap)",3,1,n/a,7,0,1,5,1
"org.andengine.opengl.util.GLMatrixStack.GLMatrixStack()",1,2,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLMatrixStack.GLMatrixStackOverflowException.GLMatrixStackOverflowException()",0,1,n/a,2,0,0,0,1
"org.andengine.opengl.util.GLMatrixStack.GLMatrixStackUnderflowException.GLMatrixStackUnderflowException()",0,1,n/a,2,0,0,0,1
"org.andengine.opengl.util.GLMatrixStack.getMatrix(float[])",1,2,n/a,3,0,1,1,1
"org.andengine.opengl.util.GLMatrixStack.glLoadIdentity()",1,4,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLMatrixStack.glOrthof(float,float,float,float,float,float)",1,2,n/a,3,0,6,1,1
"org.andengine.opengl.util.GLMatrixStack.glPopMatrix()",1,2,n/a,6,1,0,3,2
"org.andengine.opengl.util.GLMatrixStack.glPushMatrix()",2,2,n/a,7,1,0,4,2
"org.andengine.opengl.util.GLMatrixStack.glRotatef(float,float,float,float)",3,2,n/a,5,0,4,3,1
"org.andengine.opengl.util.GLMatrixStack.glScalef(float,float,float)",1,2,n/a,3,0,3,1,1
"org.andengine.opengl.util.GLMatrixStack.glSkewf(float,float)",3,2,n/a,5,0,2,3,1
"org.andengine.opengl.util.GLMatrixStack.glTranslatef(float,float,float)",1,2,n/a,3,0,3,1,1
"org.andengine.opengl.util.GLMatrixStack.reset()",1,6,n/a,4,0,0,2,1
"org.andengine.opengl.util.GLMatrixStack.setSkewM(float[],int,float,float)",2,1,n/a,18,0,4,16,1
"org.andengine.opengl.util.GLState.activeTexture(int)",1,1,n/a,10,1,1,4,2
"org.andengine.opengl.util.GLState.bindArrayBuffer(int)",1,4,n/a,6,1,1,3,2
"org.andengine.opengl.util.GLState.bindFramebuffer(int)",1,3,n/a,3,0,1,1,1
"org.andengine.opengl.util.GLState.bindIndexBuffer(int)",1,2,n/a,6,1,1,3,2
"org.andengine.opengl.util.GLState.bindTexture(int)",1,4,n/a,11,1,1,3,2
"org.andengine.opengl.util.GLState.blendFunction(int,int)",1,3,n/a,7,1,2,4,3
"org.andengine.opengl.util.GLState.checkError()",2,1,n/a,6,1,0,3,2
"org.andengine.opengl.util.GLState.checkFramebufferStatus()",7,1,n/a,19,1,0,16,8
"org.andengine.opengl.util.GLState.clearError()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.deleteArrayBuffer(int)",1,2,n/a,7,1,1,4,2
"org.andengine.opengl.util.GLState.deleteFramebuffer(int)",1,1,n/a,7,1,1,4,2
"org.andengine.opengl.util.GLState.deleteIndexBuffer(int)",1,0,n/a,7,1,1,4,2
"org.andengine.opengl.util.GLState.deleteProgram(int)",1,1,n/a,6,1,1,3,2
"org.andengine.opengl.util.GLState.deleteTexture(int)",1,1,n/a,7,1,1,4,2
"org.andengine.opengl.util.GLState.disableBlend()",1,5,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.disableCulling()",1,2,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.disableDepthTest()",1,2,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.disableDither()",1,1,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.disableScissorTest()",1,3,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.enableBlend()",1,5,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.enableCulling()",1,1,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.enableDepthTest()",1,2,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.enableDither()",1,2,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.enableScissorTest()",1,3,n/a,11,1,0,5,2
"org.andengine.opengl.util.GLState.finish()",1,4,n/a,11,0,0,1,1
"org.andengine.opengl.util.GLState.flush()",1,4,n/a,9,0,0,1,1
"org.andengine.opengl.util.GLState.generateArrayBuffer(int,int)",4,0,n/a,8,0,2,6,1
"org.andengine.opengl.util.GLState.generateBuffer()",1,2,n/a,4,0,0,2,1
"org.andengine.opengl.util.GLState.generateFramebuffer()",1,1,n/a,4,0,0,2,1
"org.andengine.opengl.util.GLState.generateIndexBuffer(int,int)",4,0,n/a,8,0,2,6,1
"org.andengine.opengl.util.GLState.generateTexture()",1,1,n/a,4,0,0,2,1
"org.andengine.opengl.util.GLState.getActiveFramebuffer()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getActiveTexture()",0,0,n/a,6,0,0,1,1
"org.andengine.opengl.util.GLState.getError()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getExtensions()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getFramebufferStatus()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getInteger(int)",1,6,n/a,4,0,1,2,1
"org.andengine.opengl.util.GLState.getMaximumFragmentShaderUniformVectorCount()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getMaximumTextureSize()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getMaximumTextureUnits()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getMaximumVertexAttributeCount()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getMaximumVertexShaderUniformVectorCount()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getModelViewGLMatrix()",1,0,n/a,4,0,0,2,1
"org.andengine.opengl.util.GLState.getModelViewProjectionGLMatrix()",1,6,n/a,4,0,0,2,1
"org.andengine.opengl.util.GLState.getProjectionGLMatrix()",1,0,n/a,4,0,0,2,1
"org.andengine.opengl.util.GLState.getRenderer()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.getVersion()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.glTexImage2D(int,int,Bitmap,int,PixelFormat)",7,1,n/a,11,0,5,2,1
"org.andengine.opengl.util.GLState.glTexSubImage2D(int,int,int,int,Bitmap,PixelFormat)",6,2,n/a,10,0,6,2,1
"org.andengine.opengl.util.GLState.isBlendEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.isCullingEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.isDepthTestEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.isDitherEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.isScissorTestEnabled()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.isTexture(int)",1,0,n/a,3,0,1,1,1
"org.andengine.opengl.util.GLState.lineWidth(float)",1,1,n/a,6,1,1,3,2
"org.andengine.opengl.util.GLState.loadModelViewGLMatrixIdentity()",1,4,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.loadProjectionGLMatrixIdentity()",1,1,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.orthoModelViewGLMatrixf(float,float,float,float,float,float)",1,0,n/a,3,0,6,1,1
"org.andengine.opengl.util.GLState.orthoProjectionGLMatrixf(float,float,float,float,float,float)",1,4,n/a,3,0,6,1,1
"org.andengine.opengl.util.GLState.popModelViewGLMatrix()",1,4,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.popProjectionGLMatrix()",1,3,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.pushModelViewGLMatrix()",1,4,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.pushProjectionGLMatrix()",1,3,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.reset(RenderOptions,ConfigChooser,EGLConfig)",34,1,n/a,39,1,3,36,2
"org.andengine.opengl.util.GLState.resetGLMatrixStacks()",2,0,n/a,4,0,0,2,1
"org.andengine.opengl.util.GLState.resetModelViewGLMatrixStack()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.resetProjectionGLMatrixStack()",1,0,n/a,3,0,0,1,1
"org.andengine.opengl.util.GLState.rotateModelViewGLMatrixf(float,float,float,float)",1,1,n/a,3,0,4,1,1
"org.andengine.opengl.util.GLState.rotateProjectionGLMatrixf(float,float,float,float)",1,1,n/a,3,0,4,1,1
"org.andengine.opengl.util.GLState.scaleModelViewGLMatrixf(float,float,int)",1,2,n/a,3,0,3,1,1
"org.andengine.opengl.util.GLState.scaleProjectionGLMatrixf(float,float,float)",1,0,n/a,3,0,3,1,1
"org.andengine.opengl.util.GLState.setBlendEnabled(boolean)",2,0,n/a,10,1,1,3,2
"org.andengine.opengl.util.GLState.setCullingEnabled(boolean)",2,0,n/a,10,1,1,3,2
"org.andengine.opengl.util.GLState.setDepthTestEnabled(boolean)",2,0,n/a,10,1,1,3,2
"org.andengine.opengl.util.GLState.setDitherEnabled(boolean)",2,1,n/a,10,1,1,3,2
"org.andengine.opengl.util.GLState.setScissorTestEnabled(boolean)",2,0,n/a,10,1,1,3,2
"org.andengine.opengl.util.GLState.skewModelViewGLMatrixf(float,float)",1,1,n/a,3,0,2,1,1
"org.andengine.opengl.util.GLState.skewProjectionGLMatrixf(float,float)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.GLState.translateModelViewGLMatrixf(float,float,float)",1,10,n/a,3,0,3,1,1
"org.andengine.opengl.util.GLState.translateProjectionGLMatrixf(float,float,float)",1,2,n/a,3,0,3,1,1
"org.andengine.opengl.util.GLState.useProgram(int)",1,1,n/a,6,1,1,3,2
"org.andengine.opengl.util.VertexUtils.getVertex(float[],int,int,int)",0,26,n/a,10,0,4,1,1
"org.andengine.opengl.util.criteria.AndroidVersionCodeGLCriteria.AndroidVersionCodeGLCriteria(IntOperator,int)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.criteria.AndroidVersionCodeGLCriteria.getActualCriteria(GLState)",0,1,n/a,4,0,1,1,1
"org.andengine.opengl.util.criteria.BuildModelGLCriteria.BuildModelGLCriteria(StringOperator,String)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.criteria.BuildModelGLCriteria.getActualCriteria(GLState)",0,1,n/a,4,0,1,1,1
"org.andengine.opengl.util.criteria.GLExtensionsGLCriteria.GLExtensionsGLCriteria(StringOperator,String)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.criteria.GLExtensionsGLCriteria.getActualCriteria(GLState)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.util.criteria.GLRendererGLCriteria.GLRendererGLCriteria(StringOperator,String)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.criteria.GLRendererGLCriteria.getActualCriteria(GLState)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.util.criteria.GLVersionGLCriteria.GLVersionGLCriteria(StringOperator,String)",1,0,n/a,3,0,2,1,1
"org.andengine.opengl.util.criteria.GLVersionGLCriteria.getActualCriteria(GLState)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.util.criteria.IGLCriteria.isMet(GLState)",n/a,3,4,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.util.criteria.IntGLCriteria.IntGLCriteria(IntOperator,int)",0,1,n/a,4,0,2,2,1
"org.andengine.opengl.util.criteria.IntGLCriteria.getActualCriteria(GLState)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.util.criteria.IntGLCriteria.isMet(GLState)",2,3,n/a,4,0,1,1,1
"org.andengine.opengl.util.criteria.LogicalAndGLCriteria.LogicalAndGLCriteria(IGLCriteria...)",0,0,n/a,3,0,1,1,1
"org.andengine.opengl.util.criteria.LogicalAndGLCriteria.isMet(GLState)",1,3,n/a,9,2,1,4,3
"org.andengine.opengl.util.criteria.LogicalOrGLCriteria.LogicalOrGLCriteria(IGLCriteria...)",0,0,n/a,3,0,1,1,1
"org.andengine.opengl.util.criteria.LogicalOrGLCriteria.isMet(GLState)",1,3,n/a,9,2,1,4,3
"org.andengine.opengl.util.criteria.StringGLCriteria.StringGLCriteria(StringOperator,String)",0,4,n/a,4,0,2,2,1
"org.andengine.opengl.util.criteria.StringGLCriteria.getActualCriteria(GLState)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.util.criteria.StringGLCriteria.isMet(GLState)",2,3,n/a,4,0,1,1,1
"org.andengine.opengl.vbo.DrawType.DrawType(int)",0,3,n/a,3,0,1,1,1
"org.andengine.opengl.vbo.DrawType.getUsage()",0,2,n/a,3,0,0,1,1
"org.andengine.opengl.vbo.HighPerformanceVertexBufferObject.HighPerformanceVertexBufferObject(VertexBufferObjectManager,float[],DrawType,boolean,VertexBufferObjectAttributes)",2,1,n/a,9,1,5,5,2
"org.andengine.opengl.vbo.HighPerformanceVertexBufferObject.HighPerformanceVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",2,6,n/a,9,1,5,5,2
"org.andengine.opengl.vbo.HighPerformanceVertexBufferObject.getBufferData()",0,2,n/a,3,0,0,1,1
"org.andengine.opengl.vbo.HighPerformanceVertexBufferObject.getHeapMemoryByteSize()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.HighPerformanceVertexBufferObject.getNativeHeapMemoryByteSize()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.HighPerformanceVertexBufferObject.onBufferData()",7,1,n/a,13,1,0,6,2
"org.andengine.opengl.vbo.IVertexBufferObject.bind(GLState)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.bind(GLState,ShaderProgram)",n/a,6,2,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.draw(int,int)",n/a,8,2,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.draw(int,int,int)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.getByteCapacity()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.getCapacity()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.getGPUMemoryByteSize()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.getHardwareBufferID()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.getHeapMemoryByteSize()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.getNativeHeapMemoryByteSize()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.getVertexBufferObjectManager()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.isAutoDispose()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.isDirtyOnHardware()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.isLoadedToHardware()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.setDirtyOnHardware()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.setNotLoadedToHardware()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.unbind(GLState,ShaderProgram)",n/a,6,2,n/a,n/a,2,n/a,n/a
"org.andengine.opengl.vbo.IVertexBufferObject.unloadFromHardware(GLState)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.vbo.LowMemoryVertexBufferObject.LowMemoryVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",2,6,n/a,4,0,5,2,1
"org.andengine.opengl.vbo.LowMemoryVertexBufferObject.getFloatBuffer()",0,2,n/a,3,0,0,1,1
"org.andengine.opengl.vbo.LowMemoryVertexBufferObject.getHeapMemoryByteSize()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.LowMemoryVertexBufferObject.getNativeHeapMemoryByteSize()",1,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.LowMemoryVertexBufferObject.onBufferData()",2,1,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.SharedMemoryVertexBufferObject.SharedMemoryVertexBufferObject(VertexBufferObjectManager,int,DrawType,VertexBufferObjectAttributes)",1,0,n/a,3,0,4,1,1
"org.andengine.opengl.vbo.SharedMemoryVertexBufferObject.aquireByteBuffer()",8,1,n/a,14,2,0,9,4
"org.andengine.opengl.vbo.SharedMemoryVertexBufferObject.dispose()",4,5,n/a,13,2,0,7,2
"org.andengine.opengl.vbo.SharedMemoryVertexBufferObject.getSharedByteBufferByteCapacity()",3,0,n/a,15,2,0,9,2
"org.andengine.opengl.vbo.SharedMemoryVertexBufferObject.releaseByteBuffer(ByteBuffer)",1,2,n/a,4,0,1,1,1
"org.andengine.opengl.vbo.VertexBufferObject.VertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",4,4,n/a,16,0,5,7,1
"org.andengine.opengl.vbo.VertexBufferObject.bind(GLState)",4,1,n/a,14,2,1,8,4
"org.andengine.opengl.vbo.VertexBufferObject.bind(GLState,ShaderProgram)",2,7,n/a,5,0,2,2,1
"org.andengine.opengl.vbo.VertexBufferObject.dispose()",3,5,n/a,12,2,0,6,3
"org.andengine.opengl.vbo.VertexBufferObject.draw(int,int)",1,9,n/a,4,0,2,1,1
"org.andengine.opengl.vbo.VertexBufferObject.draw(int,int,int)",1,1,n/a,4,0,3,1,1
"org.andengine.opengl.vbo.VertexBufferObject.finalize()",2,0,n/a,7,1,0,3,2
"org.andengine.opengl.vbo.VertexBufferObject.getByteCapacity()",1,5,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.VertexBufferObject.getCapacity()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.VertexBufferObject.getGPUMemoryByteSize()",2,0,n/a,8,1,0,3,2
"org.andengine.opengl.vbo.VertexBufferObject.getHardwareBufferID()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.VertexBufferObject.getVertexBufferObjectManager()",0,1,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.VertexBufferObject.isAutoDispose()",0,2,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.VertexBufferObject.isDirtyOnHardware()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.VertexBufferObject.isDisposed()",0,3,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.VertexBufferObject.isLoadedToHardware()",0,2,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.VertexBufferObject.loadToHardware(GLState)",1,1,n/a,4,0,1,2,1
"org.andengine.opengl.vbo.VertexBufferObject.onBufferData()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.andengine.opengl.vbo.VertexBufferObject.setDirtyOnHardware()",0,40,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.VertexBufferObject.setNotLoadedToHardware()",0,1,n/a,5,0,0,2,1
"org.andengine.opengl.vbo.VertexBufferObject.unbind(GLState,ShaderProgram)",1,7,n/a,5,0,2,1,1
"org.andengine.opengl.vbo.VertexBufferObject.unloadFromHardware(GLState)",1,1,n/a,5,0,1,2,1
"org.andengine.opengl.vbo.VertexBufferObjectManager.getGPUHeapMemoryByteSize()",3,0,n/a,8,1,0,7,2
"org.andengine.opengl.vbo.VertexBufferObjectManager.getHeapMemoryByteSize()",3,0,n/a,8,1,0,7,2
"org.andengine.opengl.vbo.VertexBufferObjectManager.getNativeHeapMemoryByteSize()",3,0,n/a,8,1,0,7,2
"org.andengine.opengl.vbo.VertexBufferObjectManager.onCreate()",0,1,n/a,2,0,0,0,1
"org.andengine.opengl.vbo.VertexBufferObjectManager.onDestroy()",4,1,n/a,7,1,0,6,2
"org.andengine.opengl.vbo.VertexBufferObjectManager.onReload()",4,1,n/a,7,1,0,6,2
"org.andengine.opengl.vbo.VertexBufferObjectManager.onUnloadVertexBufferObject(IVertexBufferObject)",2,2,n/a,5,1,1,2,2
"org.andengine.opengl.vbo.VertexBufferObjectManager.onVertexBufferObjectLoaded(IVertexBufferObject)",1,2,n/a,3,0,1,1,1
"org.andengine.opengl.vbo.VertexBufferObjectManager.updateVertexBufferObjects(GLState)",5,1,n/a,12,2,1,9,3
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.ZeroMemoryVertexBufferObject(VertexBufferObjectManager,int,DrawType,boolean,VertexBufferObjectAttributes)",1,1,n/a,7,0,5,5,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.aquireByteBuffer()",4,1,n/a,9,0,0,3,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.bind(GLState)",8,1,n/a,21,3,1,13,4
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.bind(GLState,ShaderProgram)",2,6,n/a,5,0,2,2,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.dispose()",2,5,n/a,9,1,0,4,2
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.draw(int,int)",1,8,n/a,4,0,2,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.draw(int,int,int)",1,1,n/a,4,0,3,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.finalize()",2,0,n/a,7,1,0,3,2
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.getByteCapacity()",0,3,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.getCapacity()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.getGPUMemoryByteSize()",2,0,n/a,8,1,0,3,2
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.getHardwareBufferID()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.getHeapMemoryByteSize()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.getNativeHeapMemoryByteSize()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.getVertexBufferObjectManager()",0,1,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.isAutoDispose()",0,2,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.isDirtyOnHardware()",0,0,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.isDisposed()",0,3,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.isLoadedToHardware()",0,2,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.loadToHardware(GLState)",1,1,n/a,4,0,1,2,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.onPopulateBufferData(ByteBuffer)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.releaseByteBuffer(ByteBuffer)",1,2,n/a,3,0,1,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.setDirtyOnHardware()",0,2,n/a,4,0,0,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.setNotLoadedToHardware()",0,0,n/a,5,0,0,2,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.unbind(GLState,ShaderProgram)",1,6,n/a,5,0,2,1,1
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject.unloadFromHardware(GLState)",1,1,n/a,5,0,1,2,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute.VertexBufferObjectAttribute(int,String,int,int,boolean,int)",0,2,n/a,8,0,6,6,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute.getLocation()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute.getName()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute.getOffset()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute.getSize()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute.getType()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute.glVertexAttribPointer(int)",1,1,n/a,3,0,1,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute.isNormalized()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributeFix.VertexBufferObjectAttributeFix(int,String,int,int,boolean,int)",1,1,n/a,3,0,6,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributeFix.glVertexAttribPointer(int)",1,1,n/a,4,0,1,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes.VertexBufferObjectAttributes(int,VertexBufferObjectAttribute...)",0,1,n/a,4,0,2,2,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes.glVertexAttribPointers()",1,1,n/a,8,1,0,7,2
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributesBuilder.VertexBufferObjectAttributesBuilder(int)",0,9,n/a,3,0,1,1,1
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributesBuilder.add(int,String,int,int,boolean)",3,21,n/a,19,1,5,14,5
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributesBuilder.build()",5,9,n/a,6,1,0,3,2
"org.andengine.opengl.view.ConfigChooser.ConfigChooser(boolean)",0,2,n/a,3,0,1,1,1
"org.andengine.opengl.view.ConfigChooser.ConfigChooserMatcher.matches(int,int,int,int,int,int)",n/a,1,4,n/a,n/a,6,n/a,n/a
"org.andengine.opengl.view.ConfigChooser.chooseConfig(EGL10,EGLDisplay)",4,1,n/a,16,1,2,7,4
"org.andengine.opengl.view.ConfigChooser.chooseConfig(EGL10,EGLDisplay,ConfigChooserMatcher)",8,4,n/a,22,2,3,15,5
"org.andengine.opengl.view.ConfigChooser.findEGLConfig(EGL10,EGLDisplay,EGLConfig[],ConfigChooserMatcher)",8,1,n/a,23,3,4,20,4
"org.andengine.opengl.view.ConfigChooser.findEGLConfig(EGL10,EGLDisplay,int[],int,ConfigChooserMatcher)",3,3,n/a,7,1,5,4,2
"org.andengine.opengl.view.ConfigChooser.getAlphaSize()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.view.ConfigChooser.getBlueSize()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.view.ConfigChooser.getConfigAttrib(EGL10,EGLDisplay,EGLConfig,int,int)",1,6,n/a,7,1,5,3,2
"org.andengine.opengl.view.ConfigChooser.getDepthSize()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.view.ConfigChooser.getEGLConfigCount(EGL10,EGLDisplay,int[])",2,3,n/a,6,1,3,3,2
"org.andengine.opengl.view.ConfigChooser.getGreenSize()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.view.ConfigChooser.getRedSize()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.view.ConfigChooser.getStencilSize()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.view.ConfigChooser.isCoverageMultiSampling()",0,1,n/a,3,0,0,1,1
"org.andengine.opengl.view.ConfigChooser.isMultiSampling()",0,0,n/a,3,0,0,1,1
"org.andengine.opengl.view.EngineRenderer.EngineRenderer(Engine,ConfigChooser,IRendererListener)",4,1,n/a,7,0,3,5,1
"org.andengine.opengl.view.EngineRenderer.onDrawFrame(GL10)",4,0,n/a,14,2,1,7,4
"org.andengine.opengl.view.EngineRenderer.onSurfaceChanged(GL10,int,int)",4,0,n/a,9,1,3,5,2
"org.andengine.opengl.view.EngineRenderer.onSurfaceCreated(GL10,EGLConfig)",8,0,n/a,24,2,2,8,2
"org.andengine.opengl.view.IRendererListener.onSurfaceChanged(GLState,int,int)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.andengine.opengl.view.IRendererListener.onSurfaceCreated(GLState)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.opengl.view.RenderSurfaceView.RenderSurfaceView(Context)",2,1,n/a,4,0,1,2,1
"org.andengine.opengl.view.RenderSurfaceView.RenderSurfaceView(Context,AttributeSet)",2,0,n/a,4,0,2,2,1
"org.andengine.opengl.view.RenderSurfaceView.getConfigChooser()",2,0,n/a,6,1,0,3,2
"org.andengine.opengl.view.RenderSurfaceView.onMeasure(int,int)",5,0,n/a,11,1,2,4,2
"org.andengine.opengl.view.RenderSurfaceView.setMeasuredDimensionProxy(int,int)",1,4,n/a,3,0,2,1,1
"org.andengine.opengl.view.RenderSurfaceView.setRenderer(Engine,IRendererListener)",8,3,n/a,10,1,2,7,2
"org.andengine.ui.IGameInterface.OnCreateResourcesCallback.onCreateResourcesFinished()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.andengine.ui.IGameInterface.OnCreateSceneCallback.onCreateSceneFinished(Scene)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.andengine.ui.IGameInterface.OnPopulateSceneCallback.onPopulateSceneFinished()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.andengine.ui.IGameInterface.onCreateEngine(EngineOptions)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.andengine.ui.IGameInterface.onCreateEngineOptions()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.ui.IGameInterface.onCreateResources(OnCreateResourcesCallback)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.andengine.ui.IGameInterface.onCreateScene(OnCreateSceneCallback)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.andengine.ui.IGameInterface.onDestroyResources()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.ui.IGameInterface.onGameCreated()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.ui.IGameInterface.onGameDestroyed()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.ui.IGameInterface.onPauseGame()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.ui.IGameInterface.onPopulateScene(Scene,OnPopulateSceneCallback)",n/a,1,4,n/a,n/a,2,n/a,n/a
"org.andengine.ui.IGameInterface.onReloadResources()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.ui.IGameInterface.onResumeGame()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.BaseActivity.doAsync(int,int,AsyncCallable<T>,Callback<T>,Callback<Exception>)",1,0,n/a,15,0,5,1,1
"org.andengine.ui.activity.BaseActivity.doAsync(int,int,Callable<T>,Callback<T>)",1,0,n/a,14,0,4,1,1
"org.andengine.ui.activity.BaseActivity.doAsync(int,int,Callable<T>,Callback<T>,Callback<Exception>)",1,0,n/a,15,0,5,1,1
"org.andengine.ui.activity.BaseActivity.doProgressAsync(int,int,ProgressCallable<T>,Callback<T>)",1,0,n/a,14,0,4,1,1
"org.andengine.ui.activity.BaseActivity.doProgressAsync(int,int,ProgressCallable<T>,Callback<T>,Callback<Exception>)",1,1,n/a,15,0,5,1,1
"org.andengine.ui.activity.BaseActivity.toastOnUIThread(CharSequence)",1,0,n/a,3,0,1,1,1
"org.andengine.ui.activity.BaseActivity.toastOnUIThread(CharSequence,int)",9,1,n/a,4,3,2,4,2
"org.andengine.ui.activity.BaseGameActivity.acquireWakeLock()",3,1,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.acquireWakeLock(WakeLockOptions)",6,1,n/a,13,2,1,7,3
"org.andengine.ui.activity.BaseGameActivity.applyEngineOptions()",21,1,n/a,33,2,0,24,10
"org.andengine.ui.activity.BaseGameActivity.callGameResumedOnUIThread()",3,1,n/a,4,2,0,2,1
"org.andengine.ui.activity.BaseGameActivity.createSurfaceViewLayoutParams()",1,1,n/a,5,0,0,3,1
"org.andengine.ui.activity.BaseGameActivity.disableAccelerationSensor()",1,0,n/a,6,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.disableLocationSensor()",1,0,n/a,6,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.disableOrientationSensor()",1,0,n/a,6,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.enableAccelerationSensor(IAccelerationListener)",1,0,n/a,6,0,1,1,1
"org.andengine.ui.activity.BaseGameActivity.enableAccelerationSensor(IAccelerationListener,AccelerationSensorOptions)",1,0,n/a,6,0,2,1,1
"org.andengine.ui.activity.BaseGameActivity.enableLocationSensor(ILocationListener,LocationSensorOptions)",1,0,n/a,6,0,2,1,1
"org.andengine.ui.activity.BaseGameActivity.enableOrientationSensor(IOrientationListener)",1,0,n/a,6,0,1,1,1
"org.andengine.ui.activity.BaseGameActivity.enableOrientationSensor(IOrientationListener,OrientationSensorOptions)",1,0,n/a,6,0,2,1,1
"org.andengine.ui.activity.BaseGameActivity.enableVibrator()",1,0,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.getEngine()",0,0,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.getFontManager()",1,0,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.getMusicManager()",1,1,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.getShaderProgramManager()",1,0,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.getSoundManager()",1,1,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.getTextureManager()",1,0,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.getVertexBufferObjectManager()",1,0,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.isGameLoaded()",0,0,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.isGamePaused()",0,0,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.isGameRunning()",0,0,n/a,3,0,0,1,1
"org.andengine.ui.activity.BaseGameActivity.onCreate(Bundle)",11,0,n/a,12,1,1,8,2
"org.andengine.ui.activity.BaseGameActivity.onCreateEngine(EngineOptions)",1,1,n/a,4,0,1,1,1
"org.andengine.ui.activity.BaseGameActivity.onCreateGame()",54,1,n/a,11,4,0,27,10
"org.andengine.ui.activity.BaseGameActivity.onDestroy()",14,0,n/a,15,1,0,9,3
"org.andengine.ui.activity.BaseGameActivity.onDestroyResources()",15,2,n/a,12,1,0,6,4
"org.andengine.ui.activity.BaseGameActivity.onGameCreated()",6,2,n/a,15,2,0,6,3
"org.andengine.ui.activity.BaseGameActivity.onGameDestroyed()",5,1,n/a,7,1,0,3,2
"org.andengine.ui.activity.BaseGameActivity.onPause()",9,0,n/a,12,1,0,7,3
"org.andengine.ui.activity.BaseGameActivity.onPauseGame()",6,1,n/a,8,1,0,4,2
"org.andengine.ui.activity.BaseGameActivity.onReloadResources()",6,2,n/a,7,1,0,3,2
"org.andengine.ui.activity.BaseGameActivity.onResume()",8,0,n/a,9,1,0,5,2
"org.andengine.ui.activity.BaseGameActivity.onResumeGame()",6,3,n/a,8,1,0,4,2
"org.andengine.ui.activity.BaseGameActivity.onSetContentView()",4,1,n/a,5,0,0,3,1
"org.andengine.ui.activity.BaseGameActivity.onSurfaceChanged(GLState,int,int)",5,1,n/a,6,1,3,2,2
"org.andengine.ui.activity.BaseGameActivity.onSurfaceCreated(GLState)",8,1,n/a,19,2,1,10,6
"org.andengine.ui.activity.BaseGameActivity.onWindowFocusChanged(boolean)",2,0,n/a,7,1,1,3,4
"org.andengine.ui.activity.BaseGameActivity.releaseWakeLock()",2,1,n/a,5,1,0,2,3
"org.andengine.ui.activity.BaseGameActivity.runOnUpdateThread(Runnable)",1,0,n/a,6,0,1,1,1
"org.andengine.ui.activity.BaseGameActivity.runOnUpdateThread(Runnable,boolean)",1,0,n/a,6,0,2,1,1
"org.andengine.ui.activity.LayoutGameActivity.getLayoutID()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.LayoutGameActivity.getRenderSurfaceViewID()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.LayoutGameActivity.onSetContentView()",5,1,n/a,6,0,0,3,1
"org.andengine.ui.activity.LegacyBaseGameActivity.onCreateEngine(EngineOptions)",1,1,n/a,4,0,1,1,1
"org.andengine.ui.activity.LegacyBaseGameActivity.onCreateEngineOptions()",0,1,n/a,4,0,0,1,1
"org.andengine.ui.activity.LegacyBaseGameActivity.onCreateResources(OnCreateResourcesCallback)",2,1,n/a,5,0,1,2,1
"org.andengine.ui.activity.LegacyBaseGameActivity.onCreateScene(OnCreateSceneCallback)",2,1,n/a,5,0,1,2,1
"org.andengine.ui.activity.LegacyBaseGameActivity.onDestroyResources()",2,2,n/a,5,0,0,2,1
"org.andengine.ui.activity.LegacyBaseGameActivity.onGameCreated()",2,2,n/a,5,0,0,2,1
"org.andengine.ui.activity.LegacyBaseGameActivity.onLoadComplete()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.LegacyBaseGameActivity.onLoadEngine()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.LegacyBaseGameActivity.onLoadResources()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.LegacyBaseGameActivity.onLoadScene()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.LegacyBaseGameActivity.onPopulateScene(Scene,OnPopulateSceneCallback)",1,1,n/a,4,0,2,1,1
"org.andengine.ui.activity.LegacyBaseGameActivity.onUnloadResources()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.SimpleAsyncGameActivity.onCreateResources(OnCreateResourcesCallback)",8,1,n/a,4,4,1,6,1
"org.andengine.ui.activity.SimpleAsyncGameActivity.onCreateResourcesAsync(IProgressListener)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.andengine.ui.activity.SimpleAsyncGameActivity.onCreateScene(OnCreateSceneCallback)",8,1,n/a,4,4,1,6,1
"org.andengine.ui.activity.SimpleAsyncGameActivity.onCreateSceneAsync(IProgressListener)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.andengine.ui.activity.SimpleAsyncGameActivity.onPopulateScene(Scene,OnPopulateSceneCallback)",8,1,n/a,4,4,2,6,1
"org.andengine.ui.activity.SimpleAsyncGameActivity.onPopulateSceneAsync(Scene,IProgressListener)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.andengine.ui.activity.SimpleBaseGameActivity.onCreateResources()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.SimpleBaseGameActivity.onCreateResources(OnCreateResourcesCallback)",2,1,n/a,5,0,1,2,1
"org.andengine.ui.activity.SimpleBaseGameActivity.onCreateScene()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.SimpleBaseGameActivity.onCreateScene(OnCreateSceneCallback)",2,1,n/a,5,0,1,2,1
"org.andengine.ui.activity.SimpleBaseGameActivity.onPopulateScene(Scene,OnPopulateSceneCallback)",1,1,n/a,4,0,2,1,1
"org.andengine.ui.activity.SimpleLayoutGameActivity.onCreateResources()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.SimpleLayoutGameActivity.onCreateResources(OnCreateResourcesCallback)",2,1,n/a,5,0,1,2,1
"org.andengine.ui.activity.SimpleLayoutGameActivity.onCreateScene()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.ui.activity.SimpleLayoutGameActivity.onCreateScene(OnCreateSceneCallback)",2,1,n/a,5,0,1,2,1
"org.andengine.ui.activity.SimpleLayoutGameActivity.onPopulateScene(Scene,OnPopulateSceneCallback)",1,1,n/a,4,0,2,1,1
"org.andengine.ui.dialog.GenericInputDialogBuilder.GenericInputDialogBuilder(Context,int,int,int,int,Callback<T>,OnCancelListener)",1,1,n/a,3,0,7,1,1
"org.andengine.ui.dialog.GenericInputDialogBuilder.GenericInputDialogBuilder(Context,int,int,int,int,String,Callback<T>,OnCancelListener)",0,2,n/a,10,0,8,8,1
"org.andengine.ui.dialog.GenericInputDialogBuilder.create()",23,0,n/a,5,3,0,22,5
"org.andengine.ui.dialog.GenericInputDialogBuilder.generateResult(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.ui.dialog.GenericInputDialogBuilder.setView(Builder,EditText)",1,1,n/a,3,0,2,1,1
"org.andengine.ui.dialog.StringInputDialogBuilder.StringInputDialogBuilder(Context,int,int,int,int,Callback<String>,OnCancelListener)",1,0,n/a,3,0,7,1,1
"org.andengine.ui.dialog.StringInputDialogBuilder.StringInputDialogBuilder(Context,int,int,int,int,String,Callback<String>,OnCancelListener)",1,0,n/a,3,0,8,1,1
"org.andengine.ui.dialog.StringInputDialogBuilder.generateResult(String)",0,1,n/a,4,0,1,1,1
"org.andengine.util.ActivityUtils.doAsync(Context,CharSequence,CharSequence,AsyncCallable<T>,Callback<T>,Callback<Exception>)",6,0,n/a,10,3,6,6,2
"org.andengine.util.ActivityUtils.doAsync(Context,CharSequence,CharSequence,Callable<T>,Callback<T>)",1,0,n/a,3,0,5,1,1
"org.andengine.util.ActivityUtils.doAsync(Context,CharSequence,CharSequence,Callable<T>,Callback<T>,Callback<Exception>)",1,0,n/a,3,0,6,1,1
"org.andengine.util.ActivityUtils.doAsync(Context,CharSequence,CharSequence,Callable<T>,Callback<T>,Callback<Exception>,boolean)",18,0,n/a,21,5,7,22,7
"org.andengine.util.ActivityUtils.doAsync(Context,CharSequence,CharSequence,Callable<T>,Callback<T>,boolean)",1,0,n/a,3,0,6,1,1
"org.andengine.util.ActivityUtils.doAsync(Context,int,int,AsyncCallable<T>,Callback<T>,Callback<Exception>)",3,0,n/a,3,0,6,1,1
"org.andengine.util.ActivityUtils.doAsync(Context,int,int,Callable<T>,Callback<T>)",1,0,n/a,3,0,5,1,1
"org.andengine.util.ActivityUtils.doAsync(Context,int,int,Callable<T>,Callback<T>,Callback<Exception>)",1,0,n/a,3,0,6,1,1
"org.andengine.util.ActivityUtils.doAsync(Context,int,int,Callable<T>,Callback<T>,Callback<Exception>,boolean)",3,0,n/a,3,0,7,1,1
"org.andengine.util.ActivityUtils.doAsync(Context,int,int,Callable<T>,Callback<T>,boolean)",1,0,n/a,3,0,6,1,1
"org.andengine.util.ActivityUtils.doProgressAsync(Context,CharSequence,int,ProgressCallable<T>,Callback<T>)",1,0,n/a,3,0,5,1,1
"org.andengine.util.ActivityUtils.doProgressAsync(Context,CharSequence,int,ProgressCallable<T>,Callback<T>,Callback<Exception>)",21,0,n/a,22,5,6,25,6
"org.andengine.util.ActivityUtils.doProgressAsync(Context,int,int,ProgressCallable<T>,Callback<T>)",1,0,n/a,3,0,5,1,1
"org.andengine.util.ActivityUtils.doProgressAsync(Context,int,int,ProgressCallable<T>,Callback<T>,Callback<Exception>)",2,0,n/a,3,0,6,1,1
"org.andengine.util.ActivityUtils.keepScreenOn(Activity)",2,1,n/a,3,0,1,1,1
"org.andengine.util.ActivityUtils.requestFullscreen(Activity)",4,1,n/a,6,0,1,4,1
"org.andengine.util.ActivityUtils.setScreenBrightness(Activity,float)",3,0,n/a,10,0,2,4,1
"org.andengine.util.BetaUtils.finishWhenExpired(Activity,GregorianCalendar,int,int)",1,0,n/a,3,0,4,1,1
"org.andengine.util.BetaUtils.finishWhenExpired(Activity,GregorianCalendar,int,int,Intent,Intent)",24,1,n/a,7,4,6,18,4
"org.andengine.util.DialogUtils.keepScreenOn(Dialog)",2,0,n/a,3,0,1,1,1
"org.andengine.util.FileUtils.copyFile(File,File)",5,0,n/a,12,1,2,8,1
"org.andengine.util.FileUtils.copyToExternalStorage(Context,InputStream,String)",5,0,n/a,8,1,3,4,2
"org.andengine.util.FileUtils.copyToExternalStorage(Context,String,String)",3,0,n/a,3,0,3,1,1
"org.andengine.util.FileUtils.copyToExternalStorage(Context,int,String)",3,0,n/a,3,0,3,1,1
"org.andengine.util.FileUtils.copyToExternalStorage(InputStream,String)",5,0,n/a,8,1,2,4,2
"org.andengine.util.FileUtils.copyToInternalStorage(Context,InputStream,String)",4,0,n/a,3,0,3,1,1
"org.andengine.util.FileUtils.copyToInternalStorage(Context,String,String)",3,0,n/a,3,0,3,1,1
"org.andengine.util.FileUtils.copyToInternalStorage(Context,int,String)",3,0,n/a,3,0,3,1,1
"org.andengine.util.FileUtils.deleteDirectory(File)",5,1,n/a,22,3,1,10,4
"org.andengine.util.FileUtils.ensureDirectoriesExistOnExternalStorage(Context,String)",6,0,n/a,11,1,2,6,3
"org.andengine.util.FileUtils.getAbsolutePathOnExternalStorage(Context,String)",2,8,n/a,3,0,2,1,1
"org.andengine.util.FileUtils.getAbsolutePathOnExternalStorage(String)",1,3,n/a,3,0,1,1,1
"org.andengine.util.FileUtils.getAbsolutePathOnInternalStorage(Context,String)",2,1,n/a,3,0,2,1,1
"org.andengine.util.FileUtils.getDirectoryListOnExternalStorage(Context,String)",3,0,n/a,4,0,2,2,1
"org.andengine.util.FileUtils.getDirectoryListOnExternalStorage(Context,String,FilenameFilter)",3,0,n/a,4,0,3,2,1
"org.andengine.util.FileUtils.isDirectoryExistingOnExternalStorage(Context,String)",6,1,n/a,9,1,2,5,3
"org.andengine.util.FileUtils.isExternalStorageReadable()",3,3,n/a,4,0,0,2,2
"org.andengine.util.FileUtils.isExternalStorageWriteable()",2,3,n/a,3,0,0,1,1
"org.andengine.util.FileUtils.isFileExistingOnExternalStorage(Context,String)",6,0,n/a,9,1,2,5,3
"org.andengine.util.FileUtils.isFileExistingOnExternalStorage(String)",6,0,n/a,9,1,1,5,3
"org.andengine.util.FileUtils.openOnExternalStorage(Context,String)",2,0,n/a,4,0,2,2,1
"org.andengine.util.FileUtils.openOnExternalStorage(String)",2,0,n/a,4,0,1,2,1
"org.andengine.util.IDisposable.AlreadyDisposedException.AlreadyDisposedException()",0,3,n/a,2,0,0,0,1
"org.andengine.util.IDisposable.AlreadyDisposedException.AlreadyDisposedException(String)",1,0,n/a,3,0,1,1,1
"org.andengine.util.IDisposable.AlreadyDisposedException.AlreadyDisposedException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.util.IDisposable.AlreadyDisposedException.AlreadyDisposedException(Throwable)",1,0,n/a,3,0,1,1,1
"org.andengine.util.IDisposable.dispose()",n/a,3,7,n/a,n/a,0,n/a,n/a
"org.andengine.util.IDisposable.isDisposed()",n/a,3,4,n/a,n/a,0,n/a,n/a
"org.andengine.util.IMatcher.matches(T)",n/a,15,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.ProbabilityGenerator.Entry.Entry(float,T...)",0,1,n/a,4,0,2,2,1
"org.andengine.util.ProbabilityGenerator.Entry.getReturnValue()",1,2,n/a,7,1,0,3,2
"org.andengine.util.ProbabilityGenerator.add(float,T...)",2,0,n/a,4,0,2,2,1
"org.andengine.util.ProbabilityGenerator.clear()",1,0,n/a,4,0,0,2,1
"org.andengine.util.ProbabilityGenerator.next()",7,0,n/a,13,2,0,11,3
"org.andengine.util.SAXUtils.appendAttribute(StringBuilder,String,String)",6,0,n/a,3,0,3,1,1
"org.andengine.util.SAXUtils.appendAttribute(StringBuilder,String,boolean)",2,0,n/a,3,0,3,1,1
"org.andengine.util.SAXUtils.appendAttribute(StringBuilder,String,byte)",2,0,n/a,3,0,3,1,1
"org.andengine.util.SAXUtils.appendAttribute(StringBuilder,String,double)",2,0,n/a,3,0,3,1,1
"org.andengine.util.SAXUtils.appendAttribute(StringBuilder,String,float)",2,0,n/a,3,0,3,1,1
"org.andengine.util.SAXUtils.appendAttribute(StringBuilder,String,int)",2,0,n/a,3,0,3,1,1
"org.andengine.util.SAXUtils.appendAttribute(StringBuilder,String,long)",2,0,n/a,3,0,3,1,1
"org.andengine.util.SAXUtils.appendAttribute(StringBuilder,String,short)",2,0,n/a,3,0,3,1,1
"org.andengine.util.SAXUtils.getAttribute(Attributes,String,String)",1,0,n/a,4,0,3,2,2
"org.andengine.util.SAXUtils.getAttributeOrThrow(Attributes,String)",2,17,n/a,8,1,2,4,2
"org.andengine.util.SAXUtils.getBooleanAttribute(Attributes,String,boolean)",2,0,n/a,4,0,3,2,2
"org.andengine.util.SAXUtils.getBooleanAttributeOrThrow(Attributes,String)",2,3,n/a,3,0,2,1,1
"org.andengine.util.SAXUtils.getByteAttribute(Attributes,String,byte)",2,0,n/a,4,0,3,2,2
"org.andengine.util.SAXUtils.getByteAttributeOrThrow(Attributes,String)",2,0,n/a,3,0,2,1,1
"org.andengine.util.SAXUtils.getDoubleAttribute(Attributes,String,double)",2,0,n/a,4,0,3,2,2
"org.andengine.util.SAXUtils.getDoubleAttributeOrThrow(Attributes,String)",2,0,n/a,3,0,2,1,1
"org.andengine.util.SAXUtils.getFloatAttribute(Attributes,String,float)",2,0,n/a,4,0,3,2,2
"org.andengine.util.SAXUtils.getFloatAttributeOrThrow(Attributes,String)",2,0,n/a,3,0,2,1,1
"org.andengine.util.SAXUtils.getIntAttribute(Attributes,String,int)",2,1,n/a,4,0,3,2,2
"org.andengine.util.SAXUtils.getIntAttributeOrThrow(Attributes,String)",2,12,n/a,3,0,2,1,1
"org.andengine.util.SAXUtils.getLongAttribute(Attributes,String,long)",2,0,n/a,4,0,3,2,2
"org.andengine.util.SAXUtils.getLongAttributeOrThrow(Attributes,String)",2,0,n/a,3,0,2,1,1
"org.andengine.util.SAXUtils.getShortAttribute(Attributes,String,short)",2,0,n/a,4,0,3,2,2
"org.andengine.util.SAXUtils.getShortAttributeOrThrow(Attributes,String)",2,0,n/a,3,0,2,1,1
"org.andengine.util.SocketUtils.closeSocket(DatagramSocket)",2,0,n/a,5,1,1,2,3
"org.andengine.util.SocketUtils.closeSocket(ServerSocket)",3,0,n/a,9,2,1,4,4
"org.andengine.util.SocketUtils.closeSocket(Socket)",3,0,n/a,9,2,1,4,4
"org.andengine.util.StreamUtils.close(Closeable)",2,23,n/a,14,2,1,4,3
"org.andengine.util.StreamUtils.copy(InputStream,ByteBuffer)",2,1,n/a,7,1,2,4,2
"org.andengine.util.StreamUtils.copy(InputStream,OutputStream)",1,1,n/a,3,0,2,1,1
"org.andengine.util.StreamUtils.copy(InputStream,OutputStream,int)",7,3,n/a,34,3,3,16,5
"org.andengine.util.StreamUtils.copy(InputStream,byte[])",2,1,n/a,9,1,2,6,2
"org.andengine.util.StreamUtils.copyAndClose(InputStream,OutputStream)",3,3,n/a,11,1,2,6,2
"org.andengine.util.StreamUtils.flushCloseStream(OutputStream)",3,1,n/a,16,2,1,5,3
"org.andengine.util.StreamUtils.flushCloseWriter(Writer)",3,0,n/a,16,2,1,5,3
"org.andengine.util.StreamUtils.readFully(InputStream)",7,2,n/a,14,2,1,9,2
"org.andengine.util.StreamUtils.streamToBytes(InputStream)",1,0,n/a,3,0,1,1,1
"org.andengine.util.StreamUtils.streamToBytes(InputStream,int)",3,4,n/a,5,0,2,3,2
"org.andengine.util.StreamUtils.streamToBytes(InputStream,int,byte[])",1,1,n/a,6,0,3,1,1
"org.andengine.util.StreamUtils.streamToBytes(InputStream,int,byte[],int)",3,2,n/a,26,2,4,12,5
"org.andengine.util.TextUtils.countCharacters(List<CharSequence>)",1,0,n/a,3,0,1,1,1
"org.andengine.util.TextUtils.countCharacters(List<CharSequence>,boolean)",8,1,n/a,20,4,2,18,6
"org.andengine.util.TextUtils.countOccurrences(CharSequence,char)",2,1,n/a,9,1,2,6,2
"org.andengine.util.TextUtils.formatStackTrace(StackTraceElement)",14,0,n/a,12,0,1,1,1
"org.andengine.util.TextUtils.formatStackTrace(StackTraceElement[])",4,0,n/a,11,2,1,9,3
"org.andengine.util.TextUtils.padFront(CharSequence,char,int)",5,0,n/a,13,2,3,10,3
"org.andengine.util.TextUtils.split(CharSequence,char)",2,0,n/a,7,0,2,1,1
"org.andengine.util.TextUtils.split(CharSequence,char,L)",8,2,n/a,20,2,3,13,3
"org.andengine.util.ThreadUtils.dumpCurrentThreadInfo()",3,0,n/a,3,0,0,1,1
"org.andengine.util.ThreadUtils.dumpCurrentThreadInfo(DebugLevel)",3,0,n/a,3,0,1,1,1
"org.andengine.util.ThreadUtils.dumpCurrentThreadInfo(DebugLevel,StackTraceElement)",7,2,n/a,3,0,2,1,1
"org.andengine.util.TimeUtils.formatSeconds(int)",2,0,n/a,3,0,1,1,1
"org.andengine.util.TimeUtils.formatSeconds(int,StringBuilder)",5,1,n/a,11,1,2,8,2
"org.andengine.util.ViewUtils.inflate(Context,int)",2,0,n/a,3,0,2,1,1
"org.andengine.util.ViewUtils.inflate(Context,int,ViewGroup)",2,0,n/a,3,0,3,1,1
"org.andengine.util.adt.array.ArrayUtils.contains(byte[],byte)",0,0,n/a,8,2,2,6,3
"org.andengine.util.adt.array.ArrayUtils.contains(char[],char)",0,0,n/a,8,2,2,6,3
"org.andengine.util.adt.array.ArrayUtils.contains(double[],double)",0,0,n/a,8,2,2,6,3
"org.andengine.util.adt.array.ArrayUtils.contains(float[],float)",0,0,n/a,8,2,2,6,3
"org.andengine.util.adt.array.ArrayUtils.contains(int[],int)",0,0,n/a,8,2,2,6,3
"org.andengine.util.adt.array.ArrayUtils.contains(long[],long)",0,0,n/a,8,2,2,6,3
"org.andengine.util.adt.array.ArrayUtils.contains(short[],short)",0,0,n/a,8,2,2,6,3
"org.andengine.util.adt.array.ArrayUtils.equals(byte[],int,byte[],int,int)",2,2,n/a,16,2,5,12,5
"org.andengine.util.adt.array.ArrayUtils.idealBooleanArraySize(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.idealByteArraySize(int)",0,8,n/a,8,2,1,6,3
"org.andengine.util.adt.array.ArrayUtils.idealCharArraySize(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.idealDoubleArraySize(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.idealFloatArraySize(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.idealIntArraySize(int)",1,3,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.idealLongArraySize(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.idealObjectArraySize(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.idealShortArraySize(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.join(Class<T>,T[]...)",3,0,n/a,39,2,2,26,11
"org.andengine.util.adt.array.ArrayUtils.random(T[])",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.random(byte[])",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.random(double[])",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.random(float[])",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.random(int[])",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.random(long[])",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.random(short[])",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.array.ArrayUtils.reverse(Object[])",0,0,n/a,15,1,1,11,3
"org.andengine.util.adt.array.ArrayUtils.reverse(byte[])",0,0,n/a,15,1,1,11,3
"org.andengine.util.adt.array.ArrayUtils.reverse(double[])",0,0,n/a,15,1,1,11,3
"org.andengine.util.adt.array.ArrayUtils.reverse(float[])",0,2,n/a,15,1,1,11,3
"org.andengine.util.adt.array.ArrayUtils.reverse(int[])",0,1,n/a,15,1,1,11,3
"org.andengine.util.adt.array.ArrayUtils.reverse(long[])",0,0,n/a,15,1,1,11,3
"org.andengine.util.adt.array.ArrayUtils.reverse(short[])",0,0,n/a,15,1,1,11,3
"org.andengine.util.adt.array.ArrayUtils.toByteArray(List<Byte>)",2,0,n/a,7,1,1,6,2
"org.andengine.util.adt.array.ArrayUtils.toCharArray(List<Character>)",2,0,n/a,7,1,1,6,2
"org.andengine.util.adt.array.ArrayUtils.toDoubleArray(List<Double>)",2,0,n/a,7,1,1,6,2
"org.andengine.util.adt.array.ArrayUtils.toFloatArray(List<Float>)",2,0,n/a,7,1,1,6,2
"org.andengine.util.adt.array.ArrayUtils.toIntArray(List<Integer>)",2,0,n/a,7,1,1,6,2
"org.andengine.util.adt.array.ArrayUtils.toLongArray(List<Long>)",2,0,n/a,7,1,1,6,2
"org.andengine.util.adt.array.ArrayUtils.toShortArray(List<Short>)",2,0,n/a,7,1,1,6,2
"org.andengine.util.adt.bit.BitVector.BitVector(byte[])",1,0,n/a,43,2,1,31,11
"org.andengine.util.adt.bit.BitVector.BitVector(int)",1,1,n/a,16,1,1,9,3
"org.andengine.util.adt.bit.BitVector.getBit(int)",2,1,n/a,14,1,1,10,3
"org.andengine.util.adt.bit.BitVector.getBits(int,int)",3,4,n/a,35,1,2,22,8
"org.andengine.util.adt.bit.BitVector.getByte(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.bit.BitVector.getCapacity()",0,0,n/a,3,0,0,1,1
"org.andengine.util.adt.bit.BitVector.getInt(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.bit.BitVector.getLong(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.bit.BitVector.getShort(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.bit.BitVector.toByteArray()",0,0,n/a,50,2,0,43,12
"org.andengine.util.adt.bit.BitVector.toString()",7,0,n/a,13,2,0,10,5
"org.andengine.util.adt.bounds.FloatBounds.FloatBounds(float,float)",1,0,n/a,3,0,2,1,1
"org.andengine.util.adt.bounds.FloatBounds.FloatBounds(float,float,float,float)",1,3,n/a,3,0,4,1,1
"org.andengine.util.adt.bounds.FloatBounds.contains(float,float)",1,0,n/a,3,0,2,1,1
"org.andengine.util.adt.bounds.FloatBounds.getXMax()",0,11,n/a,4,0,0,1,1
"org.andengine.util.adt.bounds.FloatBounds.getXMin()",0,11,n/a,4,0,0,1,1
"org.andengine.util.adt.bounds.FloatBounds.getYMax()",0,11,n/a,4,0,0,1,1
"org.andengine.util.adt.bounds.FloatBounds.getYMin()",0,11,n/a,4,0,0,1,1
"org.andengine.util.adt.bounds.FloatBounds.set(float,float)",1,8,n/a,3,0,2,1,1
"org.andengine.util.adt.bounds.FloatBounds.set(float,float,float,float)",2,9,n/a,12,1,4,8,3
"org.andengine.util.adt.bounds.IFloatBounds.getXMax()",n/a,11,3,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.bounds.IFloatBounds.getXMin()",n/a,11,3,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.bounds.IFloatBounds.getYMax()",n/a,11,3,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.bounds.IFloatBounds.getYMin()",n/a,11,3,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.bounds.IIntBounds.getXMax()",n/a,13,3,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.bounds.IIntBounds.getXMin()",n/a,13,3,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.bounds.IIntBounds.getYMax()",n/a,13,3,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.bounds.IIntBounds.getYMin()",n/a,13,3,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.bounds.IntBounds.IntBounds(int,int)",1,0,n/a,3,0,2,1,1
"org.andengine.util.adt.bounds.IntBounds.IntBounds(int,int,int,int)",1,3,n/a,3,0,4,1,1
"org.andengine.util.adt.bounds.IntBounds.contains(int,int)",1,0,n/a,3,0,2,1,1
"org.andengine.util.adt.bounds.IntBounds.getXMax()",0,13,n/a,4,0,0,1,1
"org.andengine.util.adt.bounds.IntBounds.getXMin()",0,13,n/a,4,0,0,1,1
"org.andengine.util.adt.bounds.IntBounds.getYMax()",0,13,n/a,4,0,0,1,1
"org.andengine.util.adt.bounds.IntBounds.getYMin()",0,13,n/a,4,0,0,1,1
"org.andengine.util.adt.bounds.IntBounds.set(int,int)",1,8,n/a,3,0,2,1,1
"org.andengine.util.adt.bounds.IntBounds.set(int,int,int,int)",2,9,n/a,12,1,4,8,3
"org.andengine.util.adt.cache.IntLRUCache.IntLRUCache(int)",2,1,n/a,5,0,1,3,1
"org.andengine.util.adt.cache.IntLRUCache.IntLRUCacheQueue.add(IntLRUCacheQueueNode)",1,1,n/a,11,1,1,7,2
"org.andengine.util.adt.cache.IntLRUCache.IntLRUCacheQueue.add(int)",2,1,n/a,6,0,1,3,1
"org.andengine.util.adt.cache.IntLRUCache.IntLRUCacheQueue.isEmpty()",0,2,n/a,3,0,0,1,1
"org.andengine.util.adt.cache.IntLRUCache.IntLRUCacheQueue.moveToTail(IntLRUCacheQueueNode)",0,2,n/a,20,2,1,12,3
"org.andengine.util.adt.cache.IntLRUCache.IntLRUCacheQueue.poll()",2,2,n/a,17,1,0,11,3
"org.andengine.util.adt.cache.IntLRUCache.clear()",6,1,n/a,12,2,0,8,3
"org.andengine.util.adt.cache.IntLRUCache.get(int)",2,1,n/a,8,1,1,5,2
"org.andengine.util.adt.cache.IntLRUCache.getCapacity()",0,0,n/a,3,0,0,1,1
"org.andengine.util.adt.cache.IntLRUCache.getSize()",0,1,n/a,3,0,0,1,1
"org.andengine.util.adt.cache.IntLRUCache.isEmpty()",0,1,n/a,3,0,0,1,1
"org.andengine.util.adt.cache.IntLRUCache.put(int,V)",7,1,n/a,21,1,2,15,3
"org.andengine.util.adt.cache.LRUCache.LRUCache(int)",2,1,n/a,5,0,1,3,1
"org.andengine.util.adt.cache.LRUCache.LRUCacheQueue.add(K)",2,1,n/a,6,0,1,3,1
"org.andengine.util.adt.cache.LRUCache.LRUCacheQueue.add(LRUCacheQueueNode<K>)",1,1,n/a,11,1,1,7,2
"org.andengine.util.adt.cache.LRUCache.LRUCacheQueue.isEmpty()",0,2,n/a,3,0,0,1,1
"org.andengine.util.adt.cache.LRUCache.LRUCacheQueue.moveToTail(LRUCacheQueueNode<K>)",0,2,n/a,20,2,1,12,3
"org.andengine.util.adt.cache.LRUCache.LRUCacheQueue.poll()",1,2,n/a,14,1,0,9,2
"org.andengine.util.adt.cache.LRUCache.clear()",4,1,n/a,8,1,0,5,2
"org.andengine.util.adt.cache.LRUCache.get(K)",2,1,n/a,8,1,1,5,2
"org.andengine.util.adt.cache.LRUCache.getCapacity()",0,0,n/a,3,0,0,1,1
"org.andengine.util.adt.cache.LRUCache.getSize()",0,1,n/a,3,0,0,1,1
"org.andengine.util.adt.cache.LRUCache.isEmpty()",0,1,n/a,3,0,0,1,1
"org.andengine.util.adt.cache.LRUCache.put(K,V)",7,1,n/a,21,1,2,15,3
"org.andengine.util.adt.cache.concurrent.SynchronizedIntLRUCache.SynchronizedIntLRUCache(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedIntLRUCache.clear()",1,1,n/a,4,0,0,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedIntLRUCache.get(int)",1,1,n/a,4,0,1,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedIntLRUCache.getSize()",1,1,n/a,4,0,0,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedIntLRUCache.isEmpty()",1,1,n/a,4,0,0,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedIntLRUCache.put(int,V)",1,1,n/a,4,0,2,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedLRUCache.SynchronizedLRUCache(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedLRUCache.clear()",1,1,n/a,4,0,0,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedLRUCache.get(K)",1,1,n/a,4,0,1,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedLRUCache.getSize()",1,1,n/a,4,0,0,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedLRUCache.isEmpty()",1,1,n/a,4,0,0,1,1
"org.andengine.util.adt.cache.concurrent.SynchronizedLRUCache.put(K,V)",1,1,n/a,4,0,2,1,1
"org.andengine.util.adt.data.DataUtils.unsignedByteToInt(byte)",0,0,n/a,3,0,1,1,1
"org.andengine.util.adt.data.operator.ByteOperator.check(byte,byte)",n/a,0,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.data.operator.CharOperator.check(char,char)",n/a,0,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.data.operator.DoubleOperator.check(double,double)",n/a,0,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.data.operator.FloatOperator.check(float,float)",n/a,0,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.data.operator.IntOperator.check(int,int)",n/a,1,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.data.operator.LongOperator.check(long,long)",n/a,0,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.data.operator.ShortOperator.check(short,short)",n/a,0,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.data.operator.StringOperator.check(String,String)",n/a,1,10,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.io.in.AssetInputStreamOpener.AssetInputStreamOpener(AssetManager,String)",0,7,n/a,4,0,2,2,1
"org.andengine.util.adt.io.in.AssetInputStreamOpener.open()",1,2,n/a,4,0,0,1,1
"org.andengine.util.adt.io.in.ByteArrayInputStreamOpener.ByteArrayInputStreamOpener(byte[])",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.io.in.ByteArrayInputStreamOpener.ByteArrayInputStreamOpener(byte[],int,int)",0,1,n/a,5,0,3,3,1
"org.andengine.util.adt.io.in.ByteArrayInputStreamOpener.open()",1,2,n/a,4,0,0,1,1
"org.andengine.util.adt.io.in.IInputStreamOpener.open()",n/a,2,4,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.io.in.ResourceInputStreamOpener.ResourceInputStreamOpener(Resources,int)",0,5,n/a,4,0,2,2,1
"org.andengine.util.adt.io.in.ResourceInputStreamOpener.open()",1,2,n/a,4,0,0,1,1
"org.andengine.util.adt.io.out.ByteBufferOutputStream.ByteBufferOutputStream(int,int)",0,1,n/a,4,0,2,2,1
"org.andengine.util.adt.io.out.ByteBufferOutputStream.close()",0,0,n/a,3,0,0,0,1
"org.andengine.util.adt.io.out.ByteBufferOutputStream.ensureCapacity(int)",1,2,n/a,5,1,1,2,2
"org.andengine.util.adt.io.out.ByteBufferOutputStream.grow(int)",3,1,n/a,18,2,1,12,4
"org.andengine.util.adt.io.out.ByteBufferOutputStream.toByteBuffer()",2,1,n/a,3,0,0,1,1
"org.andengine.util.adt.io.out.ByteBufferOutputStream.write(byte[],int,int)",2,0,n/a,6,0,3,3,1
"org.andengine.util.adt.io.out.ByteBufferOutputStream.write(int)",1,0,n/a,6,0,1,3,1
"org.andengine.util.adt.list.CircularList.CircularList()",1,1,n/a,3,0,0,1,1
"org.andengine.util.adt.list.CircularList.CircularList(int)",0,2,n/a,3,0,1,1,1
"org.andengine.util.adt.list.CircularList.add(T)",2,5,n/a,6,0,1,3,1
"org.andengine.util.adt.list.CircularList.add(int,T)",7,6,n/a,44,2,2,32,13
"org.andengine.util.adt.list.CircularList.clear()",3,5,n/a,17,1,0,9,2
"org.andengine.util.adt.list.CircularList.encodeToInternalIndex(int)",0,7,n/a,7,1,1,4,2
"org.andengine.util.adt.list.CircularList.ensureCapacity()",2,2,n/a,11,1,0,8,2
"org.andengine.util.adt.list.CircularList.get(int)",1,15,n/a,5,0,1,1,1
"org.andengine.util.adt.list.CircularList.indexOf(T)",4,4,n/a,18,3,1,13,6
"org.andengine.util.adt.list.CircularList.isEmpty()",0,6,n/a,4,0,0,1,1
"org.andengine.util.adt.list.CircularList.remove(T)",2,5,n/a,10,1,1,5,2
"org.andengine.util.adt.list.CircularList.remove(int)",6,9,n/a,38,2,1,29,9
"org.andengine.util.adt.list.CircularList.removeFirst()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.CircularList.removeLast()",2,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.CircularList.set(int,T)",1,8,n/a,4,0,2,1,1
"org.andengine.util.adt.list.CircularList.size()",0,8,n/a,4,0,0,1,1
"org.andengine.util.adt.list.FloatArrayList.FloatArrayList()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.list.FloatArrayList.FloatArrayList(int)",0,2,n/a,3,0,1,1,1
"org.andengine.util.adt.list.FloatArrayList.add(float)",1,1,n/a,6,0,1,3,1
"org.andengine.util.adt.list.FloatArrayList.add(int,float)",2,0,n/a,7,0,2,4,1
"org.andengine.util.adt.list.FloatArrayList.clear()",0,1,n/a,4,0,0,1,1
"org.andengine.util.adt.list.FloatArrayList.ensureCapacity(int)",1,2,n/a,10,1,1,6,2
"org.andengine.util.adt.list.FloatArrayList.get(int)",0,4,n/a,4,0,1,1,1
"org.andengine.util.adt.list.FloatArrayList.isEmpty()",0,0,n/a,4,0,0,1,1
"org.andengine.util.adt.list.FloatArrayList.remove(int)",1,0,n/a,10,1,1,6,2
"org.andengine.util.adt.list.FloatArrayList.size()",0,0,n/a,4,0,0,1,1
"org.andengine.util.adt.list.FloatArrayList.toArray()",1,0,n/a,6,0,0,3,1
"org.andengine.util.adt.list.IFloatList.add(float)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IFloatList.add(int,float)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.list.IFloatList.clear()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IFloatList.get(int)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IFloatList.isEmpty()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IFloatList.remove(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IFloatList.size()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IFloatList.toArray()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IIntList.add(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IIntList.add(int,int)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.list.IIntList.clear()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IIntList.get(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IIntList.isEmpty()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IIntList.remove(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IIntList.size()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IIntList.toArray()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IList.add(T)",n/a,4,6,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IList.add(int,T)",n/a,5,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.list.IList.clear()",n/a,5,6,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IList.get(int)",n/a,12,6,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IList.indexOf(T)",n/a,3,6,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IList.isEmpty()",n/a,4,6,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IList.remove(T)",n/a,5,6,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IList.remove(int)",n/a,5,6,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.IList.removeFirst()",n/a,4,6,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IList.removeLast()",n/a,4,6,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IList.set(int,T)",n/a,8,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.list.IList.size()",n/a,6,6,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.ILongList.add(int,long)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.list.ILongList.add(long)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.ILongList.clear()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.ILongList.get(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.ILongList.isEmpty()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.ILongList.remove(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.list.ILongList.size()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.ILongList.toArray()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.list.IntArrayList.IntArrayList()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.list.IntArrayList.IntArrayList(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.adt.list.IntArrayList.add(int)",1,0,n/a,6,0,1,3,1
"org.andengine.util.adt.list.IntArrayList.add(int,int)",2,0,n/a,7,0,2,4,1
"org.andengine.util.adt.list.IntArrayList.clear()",0,0,n/a,4,0,0,1,1
"org.andengine.util.adt.list.IntArrayList.ensureCapacity(int)",1,2,n/a,10,1,1,6,2
"org.andengine.util.adt.list.IntArrayList.get(int)",0,0,n/a,4,0,1,1,1
"org.andengine.util.adt.list.IntArrayList.isEmpty()",0,0,n/a,4,0,0,1,1
"org.andengine.util.adt.list.IntArrayList.remove(int)",1,0,n/a,10,1,1,6,2
"org.andengine.util.adt.list.IntArrayList.size()",0,0,n/a,4,0,0,1,1
"org.andengine.util.adt.list.IntArrayList.toArray()",1,0,n/a,6,0,0,3,1
"org.andengine.util.adt.list.ListUtils.encodeInsertionIndex(int)",0,4,n/a,3,0,1,1,1
"org.andengine.util.adt.list.ListUtils.random(List<T>)",3,0,n/a,3,0,1,1,1
"org.andengine.util.adt.list.ListUtils.swap(IList<T>,int,int)",4,0,n/a,5,0,3,3,1
"org.andengine.util.adt.list.ListUtils.swap(List<T>,int,int)",4,0,n/a,5,0,3,3,1
"org.andengine.util.adt.list.ListUtils.synchronizedQueue(IQueue<T>)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.list.ListUtils.toList(T)",2,0,n/a,5,0,1,3,1
"org.andengine.util.adt.list.ListUtils.toList(T...)",2,0,n/a,8,1,1,7,2
"org.andengine.util.adt.list.LongArrayList.LongArrayList()",1,1,n/a,3,0,0,1,1
"org.andengine.util.adt.list.LongArrayList.LongArrayList(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.adt.list.LongArrayList.add(int,long)",2,0,n/a,7,0,2,4,1
"org.andengine.util.adt.list.LongArrayList.add(long)",1,1,n/a,6,0,1,3,1
"org.andengine.util.adt.list.LongArrayList.clear()",0,1,n/a,4,0,0,1,1
"org.andengine.util.adt.list.LongArrayList.ensureCapacity(int)",1,2,n/a,10,1,1,6,2
"org.andengine.util.adt.list.LongArrayList.get(int)",0,0,n/a,4,0,1,1,1
"org.andengine.util.adt.list.LongArrayList.isEmpty()",0,0,n/a,4,0,0,1,1
"org.andengine.util.adt.list.LongArrayList.remove(int)",1,0,n/a,10,1,1,6,2
"org.andengine.util.adt.list.LongArrayList.size()",0,1,n/a,4,0,0,1,1
"org.andengine.util.adt.list.LongArrayList.toArray()",1,1,n/a,6,0,0,3,1
"org.andengine.util.adt.list.ShiftList.ShiftList()",1,3,n/a,3,0,0,1,1
"org.andengine.util.adt.list.ShiftList.ShiftList(int)",0,2,n/a,3,0,1,1,1
"org.andengine.util.adt.list.ShiftList.add(T)",1,5,n/a,4,0,1,1,1
"org.andengine.util.adt.list.ShiftList.add(int,T)",1,6,n/a,4,0,2,1,1
"org.andengine.util.adt.list.ShiftList.clear()",1,5,n/a,6,0,0,3,1
"org.andengine.util.adt.list.ShiftList.ensureShiftableLeft()",2,1,n/a,29,3,0,17,4
"org.andengine.util.adt.list.ShiftList.ensureShiftableRight()",2,2,n/a,17,2,0,9,3
"org.andengine.util.adt.list.ShiftList.enter(T)",1,5,n/a,6,0,1,3,1
"org.andengine.util.adt.list.ShiftList.enter(int,T)",2,2,n/a,12,1,2,4,2
"org.andengine.util.adt.list.ShiftList.enterShiftingLeft(int,T)",2,1,n/a,14,1,2,7,2
"org.andengine.util.adt.list.ShiftList.enterShiftingRight(int,T,int)",2,1,n/a,15,1,3,8,2
"org.andengine.util.adt.list.ShiftList.get(int)",0,13,n/a,5,0,1,1,1
"org.andengine.util.adt.list.ShiftList.indexOf(T)",1,4,n/a,17,3,1,12,6
"org.andengine.util.adt.list.ShiftList.isEmpty()",0,6,n/a,4,0,0,1,1
"org.andengine.util.adt.list.ShiftList.peek()",0,1,n/a,9,1,0,3,2
"org.andengine.util.adt.list.ShiftList.poll()",0,4,n/a,16,2,0,9,3
"org.andengine.util.adt.list.ShiftList.remove(T)",2,5,n/a,10,1,1,5,2
"org.andengine.util.adt.list.ShiftList.remove(int)",2,9,n/a,26,2,1,15,4
"org.andengine.util.adt.list.ShiftList.removeFirst()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.ShiftList.removeLast()",2,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.ShiftList.set(int,T)",0,8,n/a,4,0,2,1,1
"org.andengine.util.adt.list.ShiftList.shift()",4,1,n/a,18,2,0,11,3
"org.andengine.util.adt.list.ShiftList.size()",0,7,n/a,4,0,0,1,1
"org.andengine.util.adt.list.SmartList.SmartList()",0,4,n/a,2,0,0,0,1
"org.andengine.util.adt.list.SmartList.SmartList(int)",1,6,n/a,3,0,1,1,1
"org.andengine.util.adt.list.SmartList.addFirst(T)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.list.SmartList.addLast(T)",2,1,n/a,3,0,1,1,1
"org.andengine.util.adt.list.SmartList.call(IMatcher<T>,ParameterCallable<T>)",4,1,n/a,8,2,2,6,3
"org.andengine.util.adt.list.SmartList.call(ParameterCallable<T>)",3,1,n/a,6,1,1,5,2
"org.andengine.util.adt.list.SmartList.clear(ParameterCallable<T>)",3,8,n/a,6,1,1,5,2
"org.andengine.util.adt.list.SmartList.get(IMatcher<T>)",3,37,n/a,10,2,1,8,3
"org.andengine.util.adt.list.SmartList.getFirst()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.list.SmartList.getLast()",2,1,n/a,3,0,0,1,1
"org.andengine.util.adt.list.SmartList.indexOf(IMatcher<T>)",3,0,n/a,10,2,1,8,3
"org.andengine.util.adt.list.SmartList.lastIndexOf(IMatcher<T>)",3,0,n/a,9,2,1,7,3
"org.andengine.util.adt.list.SmartList.query(IMatcher<T>)",2,0,n/a,3,0,1,1,1
"org.andengine.util.adt.list.SmartList.query(IMatcher<T>,L)",4,1,n/a,10,2,2,8,3
"org.andengine.util.adt.list.SmartList.queryForSubclass(IMatcher<T>)",2,0,n/a,3,0,1,1,1
"org.andengine.util.adt.list.SmartList.queryForSubclass(IMatcher<T>,L)",4,1,n/a,11,2,2,8,3
"org.andengine.util.adt.list.SmartList.remove(IMatcher<T>)",4,18,n/a,8,2,1,6,3
"org.andengine.util.adt.list.SmartList.remove(IMatcher<T>,ParameterCallable<T>)",5,1,n/a,10,2,2,8,3
"org.andengine.util.adt.list.SmartList.remove(T,ParameterCallable<T>)",2,1,n/a,11,1,2,4,2
"org.andengine.util.adt.list.SmartList.removeAll(IMatcher<T>)",4,4,n/a,10,2,1,8,3
"org.andengine.util.adt.list.SmartList.removeAll(IMatcher<T>,ParameterCallable<T>)",5,1,n/a,15,2,2,9,3
"org.andengine.util.adt.list.SmartList.removeFirst()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.list.SmartList.removeLast()",2,1,n/a,3,0,0,1,1
"org.andengine.util.adt.list.SortedList.SortedList(IList<T>)",0,1,n/a,3,0,1,1,1
"org.andengine.util.adt.list.SortedList.add(T)",4,5,n/a,9,1,1,4,2
"org.andengine.util.adt.list.SortedList.add(int,T)",1,6,n/a,5,0,2,1,1
"org.andengine.util.adt.list.SortedList.binarySearch(T,boolean)",3,3,n/a,9,1,2,5,2
"org.andengine.util.adt.list.SortedList.binarySearch(int,int,T)",3,1,n/a,17,2,3,12,4
"org.andengine.util.adt.list.SortedList.clear()",1,5,n/a,4,0,0,1,1
"org.andengine.util.adt.list.SortedList.get(int)",1,13,n/a,4,0,1,1,1
"org.andengine.util.adt.list.SortedList.indexOf(T)",1,3,n/a,4,0,1,1,1
"org.andengine.util.adt.list.SortedList.isEmpty()",1,6,n/a,4,0,0,1,1
"org.andengine.util.adt.list.SortedList.remove(T)",3,5,n/a,13,1,1,7,3
"org.andengine.util.adt.list.SortedList.remove(int)",1,6,n/a,4,0,1,1,1
"org.andengine.util.adt.list.SortedList.removeFirst()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.SortedList.removeLast()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.SortedList.scanForEqualItem(int,int,int,T,boolean)",7,1,n/a,46,4,5,17,9
"org.andengine.util.adt.list.SortedList.set(int,T)",1,8,n/a,5,0,2,1,1
"org.andengine.util.adt.list.SortedList.size()",1,6,n/a,4,0,0,1,1
"org.andengine.util.adt.list.UniqueList.UniqueList(IList<T>)",0,1,n/a,3,0,1,1,1
"org.andengine.util.adt.list.UniqueList.add(T)",3,5,n/a,7,1,1,3,2
"org.andengine.util.adt.list.UniqueList.add(int,T)",2,6,n/a,8,1,2,3,2
"org.andengine.util.adt.list.UniqueList.clear()",1,5,n/a,4,0,0,1,1
"org.andengine.util.adt.list.UniqueList.get(int)",1,13,n/a,4,0,1,1,1
"org.andengine.util.adt.list.UniqueList.indexOf(T)",1,5,n/a,4,0,1,1,1
"org.andengine.util.adt.list.UniqueList.isEmpty()",1,6,n/a,4,0,0,1,1
"org.andengine.util.adt.list.UniqueList.remove(T)",1,5,n/a,4,0,1,1,1
"org.andengine.util.adt.list.UniqueList.remove(int)",1,6,n/a,4,0,1,1,1
"org.andengine.util.adt.list.UniqueList.removeFirst()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.UniqueList.removeLast()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.UniqueList.set(int,T)",1,8,n/a,5,0,2,1,1
"org.andengine.util.adt.list.UniqueList.size()",1,6,n/a,4,0,0,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.SynchronizedList(IList<T>)",0,0,n/a,3,0,1,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.add(T)",1,4,n/a,4,0,1,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.add(int,T)",1,5,n/a,4,0,2,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.clear()",1,5,n/a,4,0,0,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.get(int)",1,12,n/a,4,0,1,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.indexOf(T)",1,3,n/a,4,0,1,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.isEmpty()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.remove(T)",1,5,n/a,4,0,1,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.remove(int)",1,5,n/a,4,0,1,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.removeFirst()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.removeLast()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.set(int,T)",1,8,n/a,4,0,2,1,1
"org.andengine.util.adt.list.concurrent.SynchronizedList.size()",1,6,n/a,4,0,0,1,1
"org.andengine.util.adt.map.Library.Library()",1,1,n/a,3,0,0,1,1
"org.andengine.util.adt.map.Library.Library(int)",1,2,n/a,3,0,1,1,1
"org.andengine.util.adt.map.Library.clear()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.map.Library.get(int)",1,1,n/a,3,0,1,1,1
"org.andengine.util.adt.map.Library.put(int,T)",4,0,n/a,8,1,2,4,2
"org.andengine.util.adt.map.Library.remove(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.map.LongSparseArray.LongSparseArray()",1,2,n/a,6,0,0,1,1
"org.andengine.util.adt.map.LongSparseArray.LongSparseArray(int)",1,1,n/a,11,0,1,4,1
"org.andengine.util.adt.map.LongSparseArray.append(long,E)",5,0,n/a,27,1,2,17,6
"org.andengine.util.adt.map.LongSparseArray.binarySearch(long[],int,int,long)",0,5,n/a,16,1,4,11,5
"org.andengine.util.adt.map.LongSparseArray.checkIntegrity()",2,0,n/a,11,3,0,9,4
"org.andengine.util.adt.map.LongSparseArray.clear()",0,2,n/a,12,1,0,8,2
"org.andengine.util.adt.map.LongSparseArray.delete(long)",1,2,n/a,12,2,1,5,3
"org.andengine.util.adt.map.LongSparseArray.gc()",0,8,n/a,20,3,0,15,4
"org.andengine.util.adt.map.LongSparseArray.get(long)",1,1,n/a,7,0,1,1,1
"org.andengine.util.adt.map.LongSparseArray.get(long,E)",1,1,n/a,13,1,2,4,3
"org.andengine.util.adt.map.LongSparseArray.getKeys()",1,0,n/a,9,0,0,4,1
"org.andengine.util.adt.map.LongSparseArray.indexOfKey(long)",2,1,n/a,11,1,1,3,2
"org.andengine.util.adt.map.LongSparseArray.indexOfValue(E)",1,0,n/a,17,1,1,8,4
"org.andengine.util.adt.map.LongSparseArray.keyAt(int)",1,2,n/a,11,1,1,3,2
"org.andengine.util.adt.map.LongSparseArray.put(long,E)",8,5,n/a,41,2,2,25,8
"org.andengine.util.adt.map.LongSparseArray.remove(long)",1,1,n/a,6,0,1,1,1
"org.andengine.util.adt.map.LongSparseArray.setValueAt(int,E)",1,0,n/a,11,1,2,3,2
"org.andengine.util.adt.map.LongSparseArray.setValues(long[],E)",1,0,n/a,11,1,2,5,2
"org.andengine.util.adt.map.LongSparseArray.size()",1,2,n/a,10,1,0,3,2
"org.andengine.util.adt.map.LongSparseArray.valueAt(int)",1,2,n/a,12,1,1,3,2
"org.andengine.util.adt.map.MultiKey.MultiKey(K...)",1,0,n/a,4,0,1,2,1
"org.andengine.util.adt.map.MultiKey.equals(Object)",1,0,n/a,11,1,1,6,3
"org.andengine.util.adt.map.MultiKey.getKey(int)",0,0,n/a,3,0,1,1,1
"org.andengine.util.adt.map.MultiKey.getKeys()",0,1,n/a,3,0,0,1,1
"org.andengine.util.adt.map.MultiKey.hash(Object...)",1,0,n/a,9,2,1,5,3
"org.andengine.util.adt.map.MultiKey.hashCode()",0,1,n/a,4,0,0,1,1
"org.andengine.util.adt.map.MultiKey.size()",0,0,n/a,3,0,0,1,1
"org.andengine.util.adt.map.MultiKey.toString()",2,0,n/a,4,0,0,1,1
"org.andengine.util.adt.map.MultiKeyHashMap.get(K...)",10,0,n/a,12,2,1,8,4
"org.andengine.util.adt.map.MultiKeyHashMap.isEqualKey(K[],K[])",1,1,n/a,20,4,2,13,6
"org.andengine.util.adt.map.SparseArrayUtils.toString(LongSparseArray<?>)",11,0,n/a,13,2,1,11,3
"org.andengine.util.adt.map.SparseArrayUtils.toString(SparseArray<?>)",11,1,n/a,13,2,1,11,3
"org.andengine.util.adt.map.SparseArrayUtils.toString(SparseBooleanArray)",11,1,n/a,13,2,1,11,3
"org.andengine.util.adt.map.SparseArrayUtils.toString(SparseIntArray)",11,1,n/a,13,2,1,11,3
"org.andengine.util.adt.pool.EntityDetachRunnablePoolItem.run()",2,0,n/a,7,1,0,3,2
"org.andengine.util.adt.pool.EntityDetachRunnablePoolItem.setCallback(Callback<IEntity>)",0,1,n/a,7,0,1,1,1
"org.andengine.util.adt.pool.EntityDetachRunnablePoolItem.setEntity(IEntity)",0,1,n/a,3,0,1,1,1
"org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler.EntityDetachRunnablePoolUpdateHandler()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler.EntityDetachRunnablePoolUpdateHandler(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler.EntityDetachRunnablePoolUpdateHandler(int,int)",1,0,n/a,3,0,2,1,1
"org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler.EntityDetachRunnablePoolUpdateHandler(int,int,int)",1,0,n/a,3,0,3,1,1
"org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler.onAllocatePoolItem()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler.scheduleDetach(IEntity)",1,0,n/a,6,0,1,1,1
"org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler.scheduleDetach(IEntity,Callback<IEntity>)",4,1,n/a,10,0,2,4,1
"org.andengine.util.adt.pool.GenericPool.GenericPool()",1,7,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.GenericPool.GenericPool(int)",1,2,n/a,3,0,1,1,1
"org.andengine.util.adt.pool.GenericPool.GenericPool(int,int)",1,2,n/a,3,0,2,1,1
"org.andengine.util.adt.pool.GenericPool.GenericPool(int,int,int)",4,2,n/a,14,1,3,9,4
"org.andengine.util.adt.pool.GenericPool.batchAllocatePoolItems(int)",3,2,n/a,10,1,1,8,3
"org.andengine.util.adt.pool.GenericPool.getAvailableItemCount()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.GenericPool.getAvailableItemCountMaximum()",0,0,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.GenericPool.getUnrecycledItemCount()",0,0,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.GenericPool.obtainPoolItem()",13,8,n/a,19,2,0,12,5
"org.andengine.util.adt.pool.GenericPool.onAllocatePoolItem()",n/a,1,11,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.pool.GenericPool.onHandleAllocatePoolItem()",1,3,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.GenericPool.onHandleObtainItem(T)",0,1,n/a,5,0,1,0,1
"org.andengine.util.adt.pool.GenericPool.onHandleRecycleItem(T)",0,2,n/a,5,0,1,0,1
"org.andengine.util.adt.pool.GenericPool.recyclePoolItem(T)",5,9,n/a,13,1,1,8,4
"org.andengine.util.adt.pool.GenericPool.shufflePoolItems()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.MultiPool.obtainPoolItem(int)",2,0,n/a,8,1,1,4,2
"org.andengine.util.adt.pool.MultiPool.recyclePoolItem(int,T)",2,0,n/a,6,1,2,3,2
"org.andengine.util.adt.pool.MultiPool.registerPool(int,GenericPool<T>)",1,0,n/a,3,0,2,1,1
"org.andengine.util.adt.pool.Pool.Pool()",1,1,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.Pool.Pool(int)",1,1,n/a,3,0,1,1,1
"org.andengine.util.adt.pool.Pool.Pool(int,int)",1,1,n/a,3,0,2,1,1
"org.andengine.util.adt.pool.Pool.Pool(int,int,int)",1,1,n/a,3,0,3,1,1
"org.andengine.util.adt.pool.Pool.onHandleAllocatePoolItem()",1,3,n/a,6,0,0,3,1
"org.andengine.util.adt.pool.Pool.onHandleObtainItem(T)",1,1,n/a,5,0,1,2,1
"org.andengine.util.adt.pool.Pool.onHandleRecycleItem(T)",1,2,n/a,5,0,1,2,1
"org.andengine.util.adt.pool.Pool.ownsPoolItem(T)",0,1,n/a,3,0,1,1,1
"org.andengine.util.adt.pool.Pool.recycle(PoolItem)",1,1,n/a,4,0,1,1,1
"org.andengine.util.adt.pool.Pool.recyclePoolItem(T)",6,12,n/a,11,1,1,7,4
"org.andengine.util.adt.pool.PoolItem.getParent()",0,0,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.PoolItem.isFromPool(Pool<? extends PoolItem>)",0,1,n/a,3,0,1,1,1
"org.andengine.util.adt.pool.PoolItem.isRecycled()",0,1,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.PoolItem.onObtain()",0,1,n/a,2,0,0,0,1
"org.andengine.util.adt.pool.PoolItem.onRecycle()",0,2,n/a,2,0,0,0,1
"org.andengine.util.adt.pool.PoolItem.recycle()",2,0,n/a,6,1,0,3,2
"org.andengine.util.adt.pool.PoolUpdateHandler.PoolUpdateHandler()",2,1,n/a,4,2,0,2,1
"org.andengine.util.adt.pool.PoolUpdateHandler.PoolUpdateHandler(int)",2,1,n/a,4,2,1,2,1
"org.andengine.util.adt.pool.PoolUpdateHandler.PoolUpdateHandler(int,int)",2,1,n/a,4,2,2,2,1
"org.andengine.util.adt.pool.PoolUpdateHandler.PoolUpdateHandler(int,int,int)",2,1,n/a,4,2,3,2,1
"org.andengine.util.adt.pool.PoolUpdateHandler.obtainPoolItem()",1,2,n/a,3,0,0,1,1
"org.andengine.util.adt.pool.PoolUpdateHandler.onAllocatePoolItem()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.pool.PoolUpdateHandler.onHandlePoolItem(T)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.pool.PoolUpdateHandler.onUpdate(float)",3,8,n/a,10,1,1,6,2
"org.andengine.util.adt.pool.PoolUpdateHandler.postPoolItem(T)",4,2,n/a,8,1,1,5,3
"org.andengine.util.adt.pool.PoolUpdateHandler.reset()",2,5,n/a,9,1,0,5,2
"org.andengine.util.adt.pool.RunnablePoolUpdateHandler.RunnablePoolUpdateHandler()",0,2,n/a,2,0,0,0,1
"org.andengine.util.adt.pool.RunnablePoolUpdateHandler.RunnablePoolUpdateHandler(int)",1,1,n/a,3,0,1,1,1
"org.andengine.util.adt.pool.RunnablePoolUpdateHandler.RunnablePoolUpdateHandler(int,int)",1,1,n/a,3,0,2,1,1
"org.andengine.util.adt.pool.RunnablePoolUpdateHandler.RunnablePoolUpdateHandler(int,int,int)",1,1,n/a,3,0,3,1,1
"org.andengine.util.adt.pool.RunnablePoolUpdateHandler.onAllocatePoolItem()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.pool.RunnablePoolUpdateHandler.onHandlePoolItem(T)",1,1,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.CircularQueue.CircularQueue()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.queue.CircularQueue.CircularQueue(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.queue.CircularQueue.enter(T)",1,4,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.CircularQueue.enter(int,T)",1,1,n/a,4,0,2,1,1
"org.andengine.util.adt.queue.CircularQueue.peek()",2,1,n/a,8,1,0,3,2
"org.andengine.util.adt.queue.CircularQueue.poll()",2,4,n/a,8,1,0,3,2
"org.andengine.util.adt.queue.IQueue.enter(T)",n/a,4,6,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.queue.IQueue.enter(int,T)",n/a,1,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.queue.IQueue.peek()",n/a,1,6,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.queue.IQueue.poll()",n/a,4,6,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.queue.ShiftQueue.ShiftQueue()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.queue.ShiftQueue.ShiftQueue(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.queue.ShiftQueue.enter(T)",1,5,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.ShiftQueue.enter(int,T)",1,2,n/a,4,0,2,1,1
"org.andengine.util.adt.queue.ShiftQueue.peek()",2,1,n/a,8,1,0,3,2
"org.andengine.util.adt.queue.ShiftQueue.poll()",2,4,n/a,8,1,0,3,2
"org.andengine.util.adt.queue.SortedQueue.SortedQueue(IQueue<T>)",1,1,n/a,3,0,1,1,1
"org.andengine.util.adt.queue.SortedQueue.enter(T)",1,4,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.SortedQueue.enter(int,T)",1,1,n/a,5,0,2,1,1
"org.andengine.util.adt.queue.SortedQueue.peek()",2,1,n/a,8,1,0,3,2
"org.andengine.util.adt.queue.SortedQueue.poll()",2,4,n/a,8,1,0,3,2
"org.andengine.util.adt.queue.UniqueQueue.UniqueQueue(IQueue<T>)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.queue.UniqueQueue.enter(T)",1,4,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.UniqueQueue.enter(int,T)",1,1,n/a,5,0,2,1,1
"org.andengine.util.adt.queue.UniqueQueue.peek()",2,1,n/a,8,1,0,3,2
"org.andengine.util.adt.queue.UniqueQueue.poll()",2,4,n/a,8,1,0,3,2
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.SynchronizedQueue(IQueue<T>)",0,2,n/a,3,0,1,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.add(T)",1,4,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.add(int,T)",1,5,n/a,4,0,2,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.clear()",1,5,n/a,4,0,0,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.enter(T)",1,4,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.enter(int,T)",1,1,n/a,4,0,2,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.get(int)",1,12,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.indexOf(T)",1,3,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.isEmpty()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.peek()",1,1,n/a,4,0,0,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.poll()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.remove(T)",1,5,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.remove(int)",1,5,n/a,4,0,1,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.removeFirst()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.removeLast()",1,4,n/a,4,0,0,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.set(int,T)",1,8,n/a,4,0,2,1,1
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue.size()",1,6,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.ISpatialItem.getBounds()",n/a,8,0,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils.contains(IFloatBounds,IFloatBounds)",9,0,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils.contains(IFloatBounds,float,float)",5,0,n/a,3,0,3,1,1
"org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils.contains(IFloatBounds,float,float,float,float)",5,0,n/a,3,0,5,1,1
"org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils.contains(float,float,float,float,float,float)",0,2,n/a,3,0,6,1,4
"org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils.contains(float,float,float,float,float,float,float,float)",0,7,n/a,3,0,8,1,4
"org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils.intersects(IFloatBounds,IFloatBounds)",9,1,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils.intersects(float,float,float,float,float,float,float,float)",2,3,n/a,5,0,8,1,6
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils.adjacent(IIntBounds,IIntBounds)",9,0,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils.adjacent(int,int,int,int,int,int,int,int)",4,1,n/a,5,0,8,3,4
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils.contains(IIntBounds,IIntBounds)",9,0,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils.contains(IIntBounds,int,int)",5,0,n/a,3,0,3,1,1
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils.contains(IIntBounds,int,int,int,int)",5,0,n/a,3,0,5,1,1
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils.contains(int,int,int,int,int,int)",0,3,n/a,3,0,6,1,4
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils.contains(int,int,int,int,int,int,int,int)",0,7,n/a,3,0,8,1,4
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils.intersects(IIntBounds,IIntBounds)",9,1,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils.intersects(int,int,int,int,int,int,int,int)",2,3,n/a,5,0,8,1,6
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTree(IFloatBounds)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTree(IFloatBounds,int)",1,0,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTree(float,float,float,float)",2,0,n/a,3,0,4,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTree(float,float,float,float,int)",2,0,n/a,3,0,5,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.FloatQuadTreeNode(int,IFloatBounds)",5,1,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.FloatQuadTreeNode(int,float,float,float,float)",3,2,n/a,13,1,5,9,3
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.appendBoundsToString(StringBuilder)",9,2,n/a,13,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.containedBy(IFloatBounds)",5,3,n/a,4,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.contains(BoundsSplit,IFloatBounds)",9,4,n/a,4,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.contains(IFloatBounds)",5,13,n/a,4,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.contains(float,float,float,float)",1,1,n/a,3,0,4,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getHeight()",0,2,n/a,3,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getWidth()",0,2,n/a,3,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getXMax()",0,12,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getXMax(BoundsSplit)",3,2,n/a,15,1,1,12,6
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getXMin()",0,12,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getXMin(BoundsSplit)",3,2,n/a,15,1,1,12,6
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getYMax()",0,12,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getYMax(BoundsSplit)",3,2,n/a,15,1,1,12,6
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getYMin()",0,12,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.getYMin(BoundsSplit)",3,2,n/a,15,1,1,12,6
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.intersects(IFloatBounds)",5,5,n/a,4,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.intersects(IFloatBounds,IFloatBounds)",1,5,n/a,4,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.intersects(float,float,float,float)",1,0,n/a,3,0,4,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode.split(BoundsSplit)",5,4,n/a,8,0,1,5,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.containsAny(float,float)",2,0,n/a,4,0,2,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.containsAny(float,float,IMatcher<T>)",2,0,n/a,4,0,3,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.containsAny(float,float,float,float)",2,0,n/a,4,0,4,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.containsAny(float,float,float,float,IMatcher<T>)",2,0,n/a,4,0,5,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.getRoot()",0,4,n/a,5,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.getXMax()",2,11,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.getXMin()",2,11,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.getYMax()",2,11,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.getYMin()",2,11,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.initRoot(IFloatBounds)",1,1,n/a,4,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.query(float,float)",2,0,n/a,4,0,2,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.query(float,float,IMatcher<T>)",2,0,n/a,4,0,3,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.query(float,float,IMatcher<T>,L)",2,0,n/a,4,0,4,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.query(float,float,L)",2,0,n/a,4,0,3,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.query(float,float,float,float)",2,0,n/a,4,0,4,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.query(float,float,float,float,IMatcher<T>)",2,0,n/a,4,0,5,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.query(float,float,float,float,IMatcher<T>,L)",2,0,n/a,4,0,6,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.query(float,float,float,float,L)",2,0,n/a,4,0,5,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.queryForSubclass(float,float,IMatcher<T>,List<S>)",2,0,n/a,4,0,4,2,1
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.queryForSubclass(float,float,float,float,IMatcher<T>,List<S>)",2,0,n/a,4,0,6,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTree(IIntBounds)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTree(IIntBounds,int)",1,0,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTree(int,int,int,int)",2,0,n/a,3,0,4,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTree(int,int,int,int,int)",2,0,n/a,3,0,5,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.IntQuadTreeNode(int,IIntBounds)",5,1,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.IntQuadTreeNode(int,int,int,int,int)",3,2,n/a,13,1,5,9,3
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.appendBoundsToString(StringBuilder)",9,2,n/a,13,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.containedBy(IIntBounds)",5,3,n/a,4,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.contains(BoundsSplit,IIntBounds)",9,4,n/a,4,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.contains(IIntBounds)",5,13,n/a,4,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.contains(int,int,int,int)",1,1,n/a,3,0,4,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getHeight()",0,3,n/a,3,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getWidth()",0,3,n/a,3,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getXMax()",0,14,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getXMax(BoundsSplit)",6,2,n/a,29,2,1,23,10
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getXMin()",0,14,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getXMin(BoundsSplit)",6,2,n/a,29,2,1,23,10
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getYMax()",0,14,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getYMax(BoundsSplit)",6,2,n/a,29,2,1,23,10
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getYMin()",0,14,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.getYMin(BoundsSplit)",6,2,n/a,29,2,1,23,10
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.intersects(IIntBounds)",5,5,n/a,4,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.intersects(IIntBounds,IIntBounds)",1,5,n/a,4,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.intersects(int,int,int,int)",1,0,n/a,3,0,4,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode.split(BoundsSplit)",8,4,n/a,13,1,1,9,3
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.containsAny(int,int)",2,0,n/a,4,0,2,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.containsAny(int,int,IMatcher<T>)",2,0,n/a,4,0,3,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.containsAny(int,int,int,int)",2,0,n/a,4,0,4,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.containsAny(int,int,int,int,IMatcher<T>)",2,0,n/a,4,0,5,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.getRoot()",0,4,n/a,5,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.getXMax()",2,13,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.getXMin()",2,13,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.getYMax()",2,13,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.getYMin()",2,13,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.initRoot(IIntBounds)",1,1,n/a,4,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.query(int,int)",2,0,n/a,4,0,2,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.query(int,int,IMatcher<T>)",2,0,n/a,4,0,3,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.query(int,int,IMatcher<T>,L)",2,0,n/a,4,0,4,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.query(int,int,L)",2,0,n/a,4,0,3,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.query(int,int,int,int)",2,0,n/a,4,0,4,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.query(int,int,int,int,IMatcher<T>)",2,0,n/a,4,0,5,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.query(int,int,int,int,IMatcher<T>,L)",2,0,n/a,4,0,6,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.query(int,int,int,int,L)",2,0,n/a,4,0,5,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.queryForSubclass(int,int,IMatcher<T>,L)",2,0,n/a,4,0,4,2,1
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.queryForSubclass(int,int,int,int,IMatcher<T>,L)",2,0,n/a,4,0,6,2,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTree(B)",1,4,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTree(B,int)",1,5,n/a,5,0,2,3,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.QuadTreeNode(int)",0,2,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.add(T,B)",26,9,n/a,67,3,2,44,22
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.addItemSafe(T)",2,7,n/a,6,1,1,3,2
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.appendBoundsToString(StringBuilder)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.callItems(ParameterCallable<T>)",7,5,n/a,21,2,1,15,7
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.callNodes(ParameterCallable<QuadTreeNode>)",5,5,n/a,15,1,1,9,5
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.clear()",5,5,n/a,22,1,0,15,6
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.containedBy(B)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.contains(B)",n/a,13,2,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.contains(BoundsSplit,B)",n/a,4,2,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.containsAny(B)",8,2,n/a,24,3,1,17,8
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.containsAny(B,IMatcher<T>)",9,2,n/a,24,3,2,17,9
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.containsAnyChild(B,IMatcher<T>,QuadTreeNode)",2,4,n/a,9,1,3,5,4
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.containsAnyChild(B,QuadTreeNode)",2,4,n/a,9,1,2,5,4
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.getItemCount()",5,5,n/a,21,1,0,13,6
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.getItems()",0,0,n/a,6,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.getItemsAndItemsBelow()",2,0,n/a,3,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.getItemsAndItemsBelow(IMatcher<T>)",2,0,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.getItemsAndItemsBelow(IMatcher<T>,L)",6,6,n/a,22,3,2,13,8
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.getItemsAndItemsBelow(L)",5,1,n/a,21,1,1,11,6
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.getItemsAndItemsBelowForSubclass(IMatcher<T>,L)",8,5,n/a,25,3,2,17,8
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.hasChildren()",0,0,n/a,3,0,0,1,4
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.intersects(B)",n/a,5,2,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.intersects(B,B)",n/a,5,2,n/a,n/a,2,n/a,n/a
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.query(B)",2,0,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.query(B,IMatcher<T>,L)",8,3,n/a,22,3,3,13,9
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.query(B,L)",9,4,n/a,24,3,2,17,8
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.queryChild(B,IMatcher<T>,L,QuadTreeNode)",6,4,n/a,22,1,4,10,5
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.queryChild(B,L,QuadTreeNode)",6,4,n/a,21,1,3,10,5
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.queryChildForSubclass(B,IMatcher<T>,L,QuadTreeNode)",6,4,n/a,22,1,4,10,5
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.queryForSubclass(B,IMatcher<T>,L)",8,3,n/a,23,3,3,13,9
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.remove(T)",2,0,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.remove(T,B)",14,6,n/a,23,2,2,13,11
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.split(BoundsSplit)",n/a,4,2,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.toString()",1,0,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode.toString(int)",54,6,n/a,71,3,1,32,16
"org.andengine.util.adt.spatial.quadtree.QuadTree.add(T)",2,4,n/a,4,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.add(T,B)",6,2,n/a,9,1,2,5,2
"org.andengine.util.adt.spatial.quadtree.QuadTree.addAll(ArrayList<T>)",3,0,n/a,6,1,1,5,2
"org.andengine.util.adt.spatial.quadtree.QuadTree.addAll(Collection<T>)",1,0,n/a,5,1,1,2,2
"org.andengine.util.adt.spatial.quadtree.QuadTree.addAll(T...)",1,0,n/a,5,1,1,2,2
"org.andengine.util.adt.spatial.quadtree.QuadTree.callItems(ParameterCallable<T>)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.callNodes(ParameterCallable<QuadTreeNode>)",1,0,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.clear()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.containsAny(B)",1,4,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.containsAny(B,IMatcher<T>)",1,4,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.getBounds()",0,0,n/a,3,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.getItemCount()",1,1,n/a,4,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.getMaxLevel()",0,0,n/a,3,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.getRoot()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.andengine.util.adt.spatial.quadtree.QuadTree.initRoot(B)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.spatial.quadtree.QuadTree.isEmpty()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.move(T,B)",5,0,n/a,13,1,2,4,2
"org.andengine.util.adt.spatial.quadtree.QuadTree.move(T,B,B)",5,0,n/a,15,1,3,4,2
"org.andengine.util.adt.spatial.quadtree.QuadTree.query(B)",2,4,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.query(B,IMatcher<T>)",2,4,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.query(B,IMatcher<T>,L)",1,1,n/a,3,0,3,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.query(B,L)",1,1,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.queryForSubclass(B,IMatcher<T>,L)",1,4,n/a,10,0,3,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.remove(T)",2,0,n/a,3,0,1,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.remove(T,B)",1,3,n/a,3,0,2,1,1
"org.andengine.util.adt.spatial.quadtree.QuadTree.toString()",25,0,n/a,25,0,0,4,1
"org.andengine.util.adt.transformation.Transformation.Transformation()",0,6,n/a,2,0,0,0,1
"org.andengine.util.adt.transformation.Transformation.postConcat(Transformation)",1,1,n/a,3,0,1,1,1
"org.andengine.util.adt.transformation.Transformation.postConcat(float,float,float,float,float,float)",0,1,n/a,14,0,6,12,1
"org.andengine.util.adt.transformation.Transformation.postRotate(float)",2,6,n/a,17,0,1,15,1
"org.andengine.util.adt.transformation.Transformation.postScale(float,float)",0,6,n/a,8,0,2,6,1
"org.andengine.util.adt.transformation.Transformation.postSkew(float,float)",2,2,n/a,16,0,2,14,1
"org.andengine.util.adt.transformation.Transformation.postTranslate(float,float)",0,32,n/a,4,0,2,2,1
"org.andengine.util.adt.transformation.Transformation.preConcat(Transformation)",1,1,n/a,3,0,1,1,1
"org.andengine.util.adt.transformation.Transformation.preConcat(float,float,float,float,float,float)",0,1,n/a,14,0,6,12,1
"org.andengine.util.adt.transformation.Transformation.preRotate(float)",2,0,n/a,13,0,1,11,1
"org.andengine.util.adt.transformation.Transformation.preScale(float,float)",0,0,n/a,6,0,2,4,1
"org.andengine.util.adt.transformation.Transformation.preSkew(float,float)",2,0,n/a,16,0,2,14,1
"org.andengine.util.adt.transformation.Transformation.preTranslate(float,float)",0,0,n/a,4,0,2,2,1
"org.andengine.util.adt.transformation.Transformation.reset()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.transformation.Transformation.setTo(Transformation)",0,2,n/a,8,0,1,6,1
"org.andengine.util.adt.transformation.Transformation.setToIdentity()",0,10,n/a,8,0,0,6,1
"org.andengine.util.adt.transformation.Transformation.setToRotate(float)",2,0,n/a,12,0,1,10,1
"org.andengine.util.adt.transformation.Transformation.setToScale(float,float)",0,0,n/a,9,0,2,7,1
"org.andengine.util.adt.transformation.Transformation.setToSkew(float,float)",2,0,n/a,9,0,2,7,1
"org.andengine.util.adt.transformation.Transformation.setToTranslate(float,float)",0,0,n/a,9,0,2,7,1
"org.andengine.util.adt.transformation.Transformation.toString()",0,0,n/a,4,0,0,1,1
"org.andengine.util.adt.transformation.Transformation.transform(float[])",0,9,n/a,11,1,1,8,2
"org.andengine.util.adt.transformation.TransformationPool.obtain()",1,0,n/a,3,0,0,1,1
"org.andengine.util.adt.transformation.TransformationPool.recycle(Transformation)",2,0,n/a,4,0,1,2,1
"org.andengine.util.adt.trie.ITrie.add(CharSequence)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.trie.ITrie.add(CharSequence,int,int)",n/a,0,2,n/a,n/a,3,n/a,n/a
"org.andengine.util.adt.trie.ITrie.contains(CharSequence)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.andengine.util.adt.trie.ITrie.contains(CharSequence,int,int)",n/a,0,2,n/a,n/a,3,n/a,n/a
"org.andengine.util.adt.trie.Trie.TrieNode.TrieNode()",1,2,n/a,3,0,0,1,1
"org.andengine.util.adt.trie.Trie.TrieNode.TrieNode(boolean)",0,1,n/a,3,0,1,1,1
"org.andengine.util.adt.trie.Trie.TrieNode.add(CharSequence)",2,1,n/a,8,1,1,4,2
"org.andengine.util.adt.trie.Trie.TrieNode.add(CharSequence,int,int)",6,3,n/a,17,1,3,10,4
"org.andengine.util.adt.trie.Trie.TrieNode.contains(CharSequence)",3,1,n/a,8,1,1,4,2
"org.andengine.util.adt.trie.Trie.TrieNode.contains(CharSequence,int,int)",3,3,n/a,17,2,3,9,4
"org.andengine.util.adt.trie.Trie.add(CharSequence)",1,0,n/a,4,0,1,1,1
"org.andengine.util.adt.trie.Trie.add(CharSequence,int,int)",1,0,n/a,4,0,3,1,1
"org.andengine.util.adt.trie.Trie.contains(CharSequence)",1,0,n/a,4,0,1,1,1
"org.andengine.util.adt.trie.Trie.contains(CharSequence,int,int)",1,0,n/a,4,0,3,1,1
"org.andengine.util.algorithm.Spiral.Spiral(int,int)",1,0,n/a,3,0,2,1,1
"org.andengine.util.algorithm.Spiral.Spiral(int,int,int)",0,1,n/a,12,0,3,8,1
"org.andengine.util.algorithm.Spiral.getCenterX()",0,0,n/a,3,0,0,1,1
"org.andengine.util.algorithm.Spiral.getCenterY()",0,0,n/a,3,0,0,1,1
"org.andengine.util.algorithm.Spiral.getX()",0,0,n/a,3,0,0,1,1
"org.andengine.util.algorithm.Spiral.getY()",0,0,n/a,3,0,0,1,1
"org.andengine.util.algorithm.Spiral.step()",4,0,n/a,16,2,0,8,3
"org.andengine.util.algorithm.collision.BaseCollisionChecker.checkAxisAlignedRectangleCollision(float,float,float,float,float,float,float,float)",0,0,n/a,6,0,8,1,4
"org.andengine.util.algorithm.collision.BaseCollisionChecker.checkAxisAlignedRectangleContains(float,float,float,float,float,float)",0,0,n/a,6,0,6,1,4
"org.andengine.util.algorithm.collision.BaseCollisionChecker.relativeCCW(float,float,float,float,float,float)",0,4,n/a,69,3,6,14,6
"org.andengine.util.algorithm.collision.LineCollisionChecker.checkLineCollision(float,float,float,float,float,float,float,float)",4,3,n/a,4,0,8,1,2
"org.andengine.util.algorithm.collision.LineCollisionChecker.fillVertices(Line,float[])",6,2,n/a,7,0,2,5,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.checkCollision(RectangularShape,Line)",3,2,n/a,5,0,2,3,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.checkCollision(RectangularShape,RectangularShape)",3,1,n/a,5,0,2,3,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.checkContains(Entity,float,float,float,float)",5,0,n/a,4,0,5,2,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.checkContains(RectangularShape,float,float)",2,1,n/a,4,0,3,2,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.checkContains(float,float,float,float,Transformation,float,float)",2,0,n/a,4,0,7,2,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.fillVertices(Camera,float[])",12,3,n/a,11,0,2,9,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.fillVertices(RectangularShape,float[])",4,5,n/a,3,0,2,1,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.fillVertices(float,float,float,float,Transformation,float[])",1,4,n/a,15,0,6,13,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.isVisible(Camera,Line)",3,1,n/a,5,0,2,3,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.isVisible(Camera,RectangularShape)",3,2,n/a,5,0,2,3,1
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker.isVisible(Camera,float,float,float,float,Transformation)",3,1,n/a,5,0,6,3,1
"org.andengine.util.algorithm.collision.ShapeCollisionChecker.checkCollision(float[],int,float[],int)",1,5,n/a,11,0,4,1,1
"org.andengine.util.algorithm.collision.ShapeCollisionChecker.checkCollision(float[],int,int,int,int,float[],int,int,int,int)",8,1,n/a,36,2,10,12,6
"org.andengine.util.algorithm.collision.ShapeCollisionChecker.checkCollisionSub(float[],int,int,int,int,int,float[],int,int,int,int)",14,3,n/a,41,2,11,20,4
"org.andengine.util.algorithm.collision.ShapeCollisionChecker.checkContains(float[],int,float,float)",1,5,n/a,12,0,4,1,1
"org.andengine.util.algorithm.collision.ShapeCollisionChecker.checkContains(float[],int,int,int,int,float,float)",4,2,n/a,29,2,7,13,8
"org.andengine.util.algorithm.collision.TriangleCollisionChecker.checkContains(float,float,float,float,float,float,Transformation,float,float)",2,0,n/a,16,0,9,14,1
"org.andengine.util.algorithm.collision.TriangleCollisionChecker.checkContains(float,float,float,float,float,float,float,float)",0,1,n/a,20,0,8,15,3
"org.andengine.util.algorithm.hull.HullUtils.indexOfLowestVertex(float[],int,int,int)",0,1,n/a,21,2,4,13,3
"org.andengine.util.algorithm.hull.HullUtils.swap(float[],int,int,int)",0,1,n/a,9,1,4,8,2
"org.andengine.util.algorithm.hull.IHullAlgorithm.computeHull(float[],int,int,int,int)",n/a,0,1,n/a,n/a,5,n/a,n/a
"org.andengine.util.algorithm.hull.JarvisMarch.computeHull(float[],int,int,int,int)",1,0,n/a,4,0,5,1,1
"org.andengine.util.algorithm.hull.JarvisMarch.jarvisMarch(float[],int,int,int,int)",10,1,n/a,52,4,5,38,12
"org.andengine.util.algorithm.path.Direction.Direction(int,int)",0,8,n/a,4,0,2,2,1
"org.andengine.util.algorithm.path.Direction.fromDelta(int,int)",1,2,n/a,33,2,2,27,12
"org.andengine.util.algorithm.path.Direction.getDeltaX()",0,1,n/a,3,0,0,1,1
"org.andengine.util.algorithm.path.Direction.getDeltaY()",0,1,n/a,3,0,0,1,1
"org.andengine.util.algorithm.path.Direction.isHorizontal()",0,1,n/a,3,0,0,1,1
"org.andengine.util.algorithm.path.Direction.isVertical()",0,0,n/a,3,0,0,1,1
"org.andengine.util.algorithm.path.Direction.opposite()",1,0,n/a,21,1,0,18,9
"org.andengine.util.algorithm.path.Direction.rotateLeft()",1,0,n/a,21,1,0,18,9
"org.andengine.util.algorithm.path.Direction.rotateRight()",1,1,n/a,21,1,0,18,9
"org.andengine.util.algorithm.path.ICostFunction.getCost(IPathFinderMap<T>,int,int,int,int,T)",n/a,1,0,n/a,n/a,6,n/a,n/a
"org.andengine.util.algorithm.path.IPathFinder.IPathFinderListener.onVisited(T,int,int)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.andengine.util.algorithm.path.IPathFinder.findPath(IPathFinderMap<T>,int,int,int,int,T,int,int,int,int,boolean,IAStarHeuristic<T>,ICostFunction<T>)",n/a,0,1,n/a,n/a,13,n/a,n/a
"org.andengine.util.algorithm.path.IPathFinder.findPath(IPathFinderMap<T>,int,int,int,int,T,int,int,int,int,boolean,IAStarHeuristic<T>,ICostFunction<T>,float)",n/a,0,1,n/a,n/a,14,n/a,n/a
"org.andengine.util.algorithm.path.IPathFinder.findPath(IPathFinderMap<T>,int,int,int,int,T,int,int,int,int,boolean,IAStarHeuristic<T>,ICostFunction<T>,float,IPathFinderListener<T>)",n/a,0,1,n/a,n/a,15,n/a,n/a
"org.andengine.util.algorithm.path.IPathFinderMap.isBlocked(int,int,T)",n/a,3,0,n/a,n/a,3,n/a,n/a
"org.andengine.util.algorithm.path.Path.Path(int)",0,1,n/a,4,0,1,2,1
"org.andengine.util.algorithm.path.Path.contains(int,int)",1,0,n/a,10,2,2,8,4
"org.andengine.util.algorithm.path.Path.getDirectionToNextStep(int)",6,0,n/a,9,1,1,5,2
"org.andengine.util.algorithm.path.Path.getDirectionToPreviousStep(int)",5,0,n/a,9,1,1,5,2
"org.andengine.util.algorithm.path.Path.getFromX()",1,0,n/a,3,0,0,1,1
"org.andengine.util.algorithm.path.Path.getFromY()",1,0,n/a,3,0,0,1,1
"org.andengine.util.algorithm.path.Path.getLength()",0,4,n/a,3,0,0,1,1
"org.andengine.util.algorithm.path.Path.getToX()",2,0,n/a,3,0,0,1,1
"org.andengine.util.algorithm.path.Path.getToY()",2,0,n/a,3,0,0,1,1
"org.andengine.util.algorithm.path.Path.getX(int)",0,6,n/a,3,0,1,1,1
"org.andengine.util.algorithm.path.Path.getY(int)",0,6,n/a,3,0,1,1,1
"org.andengine.util.algorithm.path.Path.set(int,int,int)",0,2,n/a,4,0,3,2,1
"org.andengine.util.algorithm.path.astar.AStarPathFinder.Node.Node(int,int,float)",1,2,n/a,6,0,3,4,1
"org.andengine.util.algorithm.path.astar.AStarPathFinder.Node.calculateID(int,int)",0,3,n/a,3,0,2,1,1
"org.andengine.util.algorithm.path.astar.AStarPathFinder.Node.compareTo(Node)",0,0,n/a,11,1,1,6,3
"org.andengine.util.algorithm.path.astar.AStarPathFinder.Node.equals(Node)",0,1,n/a,3,0,1,1,1
"org.andengine.util.algorithm.path.astar.AStarPathFinder.Node.equals(Object)",3,0,n/a,11,1,1,7,4
"org.andengine.util.algorithm.path.astar.AStarPathFinder.Node.setParent(Node,float)",0,1,n/a,5,0,2,3,1
"org.andengine.util.algorithm.path.astar.AStarPathFinder.Node.toString()",2,0,n/a,4,0,0,1,1
"org.andengine.util.algorithm.path.astar.AStarPathFinder.findPath(IPathFinderMap<T>,int,int,int,int,T,int,int,int,int,boolean,IAStarHeuristic<T>,ICostFunction<T>)",1,0,n/a,4,0,13,1,1
"org.andengine.util.algorithm.path.astar.AStarPathFinder.findPath(IPathFinderMap<T>,int,int,int,int,T,int,int,int,int,boolean,IAStarHeuristic<T>,ICostFunction<T>,float)",1,1,n/a,4,0,14,1,1
"org.andengine.util.algorithm.path.astar.AStarPathFinder.findPath(IPathFinderMap<T>,int,int,int,int,T,int,int,int,int,boolean,IAStarHeuristic<T>,ICostFunction<T>,float,IPathFinderListener<T>)",34,1,n/a,104,5,15,72,25
"org.andengine.util.algorithm.path.astar.EuclideanHeuristic.getExpectedRestCost(IPathFinderMap<T>,T,int,int,int,int)",1,2,n/a,6,0,6,3,1
"org.andengine.util.algorithm.path.astar.IAStarHeuristic.getExpectedRestCost(IPathFinderMap<T>,T,int,int,int,int)",n/a,2,3,n/a,n/a,6,n/a,n/a
"org.andengine.util.algorithm.path.astar.ManhattanHeuristic.getExpectedRestCost(IPathFinderMap<T>,T,int,int,int,int)",2,2,n/a,4,0,6,1,1
"org.andengine.util.algorithm.path.astar.NullHeuristic.getExpectedRestCost(IPathFinderMap<T>,T,int,int,int,int)",0,2,n/a,4,0,6,1,1
"org.andengine.util.algorithm.sort.InsertionSorter.sort(IList<T>,int,int,Comparator<T>)",7,2,n/a,15,3,4,11,5
"org.andengine.util.algorithm.sort.InsertionSorter.sort(List<T>,int,int,Comparator<T>)",7,1,n/a,15,3,4,11,5
"org.andengine.util.algorithm.sort.InsertionSorter.sort(T[],int,int,Comparator<T>)",2,2,n/a,15,3,4,11,5
"org.andengine.util.algorithm.sort.Sorter.sort(IList<T>,Comparator<T>)",2,1,n/a,3,0,2,1,1
"org.andengine.util.algorithm.sort.Sorter.sort(IList<T>,int,int,Comparator<T>)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.andengine.util.algorithm.sort.Sorter.sort(List<T>,Comparator<T>)",2,1,n/a,3,0,2,1,1
"org.andengine.util.algorithm.sort.Sorter.sort(List<T>,int,int,Comparator<T>)",n/a,0,1,n/a,n/a,4,n/a,n/a
"org.andengine.util.algorithm.sort.Sorter.sort(T[],Comparator<T>)",1,1,n/a,3,0,2,1,1
"org.andengine.util.algorithm.sort.Sorter.sort(T[],int,int,Comparator<T>)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.andengine.util.animationpack.AnimationPack.AnimationPack(TexturePackLibrary,AnimationPackTiledTextureRegionLibrary)",0,1,n/a,4,0,2,2,1
"org.andengine.util.animationpack.AnimationPack.getAnimationPackAnimationDataLibrary()",0,0,n/a,3,0,0,1,1
"org.andengine.util.animationpack.AnimationPack.getTexturePackLibrary()",0,0,n/a,3,0,0,1,1
"org.andengine.util.animationpack.AnimationPackLoader.AnimationPackLoader(AssetManager,TextureManager)",0,0,n/a,4,0,2,2,1
"org.andengine.util.animationpack.AnimationPackLoader.load(InputStream,String)",12,1,n/a,20,1,2,12,4
"org.andengine.util.animationpack.AnimationPackLoader.loadFromAsset(String,String)",5,0,n/a,7,1,2,3,2
"org.andengine.util.animationpack.AnimationPackParser.AnimationPackParser(AssetManager,String,TextureManager)",0,1,n/a,5,0,3,3,1
"org.andengine.util.animationpack.AnimationPackParser.endElement(String,String,String)",15,0,n/a,27,1,3,17,7
"org.andengine.util.animationpack.AnimationPackParser.getAnimationPack()",0,1,n/a,3,0,0,1,1
"org.andengine.util.animationpack.AnimationPackParser.startElement(String,String,String,Attributes)",24,0,n/a,34,2,4,26,8
"org.andengine.util.animationpack.AnimationPackTiledTextureRegion.AnimationPackTiledTextureRegion(String,long[],int,ITexture,ITextureRegion...)",2,1,n/a,10,1,5,9,2
"org.andengine.util.animationpack.AnimationPackTiledTextureRegion.getAnimationData()",0,0,n/a,3,0,0,1,1
"org.andengine.util.animationpack.AnimationPackTiledTextureRegion.getAnimationName()",0,1,n/a,3,0,0,1,1
"org.andengine.util.animationpack.AnimationPackTiledTextureRegionLibrary.get(String)",1,0,n/a,3,0,1,1,1
"org.andengine.util.animationpack.AnimationPackTiledTextureRegionLibrary.put(AnimationPackTiledTextureRegion)",2,1,n/a,3,0,1,1,1
"org.andengine.util.animationpack.exception.AnimationPackParseException.AnimationPackParseException()",1,0,n/a,3,0,0,1,1
"org.andengine.util.animationpack.exception.AnimationPackParseException.AnimationPackParseException(Exception)",1,3,n/a,3,0,1,1,1
"org.andengine.util.animationpack.exception.AnimationPackParseException.AnimationPackParseException(String)",1,3,n/a,3,0,1,1,1
"org.andengine.util.animationpack.exception.AnimationPackParseException.AnimationPackParseException(String,Exception)",1,1,n/a,3,0,2,1,1
"org.andengine.util.base64.Base64.Base64()",0,0,n/a,1,0,0,0,1
"org.andengine.util.base64.Base64.Coder.maxOutputSize(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.andengine.util.base64.Base64.Coder.process(byte[],int,int,boolean)",n/a,2,2,n/a,n/a,4,n/a,n/a
"org.andengine.util.base64.Base64.Decoder.Decoder(int,byte[])",0,2,n/a,6,0,2,4,2
"org.andengine.util.base64.Base64.Decoder.maxOutputSize(int)",0,1,n/a,8,0,1,1,1
"org.andengine.util.base64.Base64.Decoder.process(byte[],int,int,boolean)",0,3,n/a,172,3,4,103,33
"org.andengine.util.base64.Base64.Encoder.Encoder(int,byte[])",0,2,n/a,10,0,2,8,3
"org.andengine.util.base64.Base64.Encoder.maxOutputSize(int)",0,1,n/a,8,0,1,1,1
"org.andengine.util.base64.Base64.Encoder.process(byte[],int,int,boolean)",0,3,n/a,132,4,4,84,30
"org.andengine.util.base64.Base64.decode(String,int)",2,0,n/a,18,0,2,1,1
"org.andengine.util.base64.Base64.decode(byte[],int)",1,0,n/a,17,0,2,1,1
"org.andengine.util.base64.Base64.decode(byte[],int,int,int)",4,1,n/a,33,1,4,8,3
"org.andengine.util.base64.Base64.encode(byte[],int)",1,1,n/a,12,0,2,1,1
"org.andengine.util.base64.Base64.encode(byte[],int,int,int)",2,2,n/a,38,2,4,20,9
"org.andengine.util.base64.Base64.encodeToString(byte[],int)",3,0,n/a,17,1,2,3,2
"org.andengine.util.base64.Base64.encodeToString(byte[],int,int,int)",3,0,n/a,20,1,4,3,2
"org.andengine.util.base64.Base64InputStream.Base64InputStream(InputStream,int)",1,0,n/a,11,0,2,1,1
"org.andengine.util.base64.Base64InputStream.Base64InputStream(InputStream,int,boolean)",4,1,n/a,24,1,3,9,2
"org.andengine.util.base64.Base64InputStream.available()",0,0,n/a,4,0,0,1,1
"org.andengine.util.base64.Base64InputStream.close()",1,0,n/a,5,0,0,2,1
"org.andengine.util.base64.Base64InputStream.mark(int)",1,0,n/a,4,0,1,1,1
"org.andengine.util.base64.Base64InputStream.markSupported()",0,0,n/a,4,0,0,1,1
"org.andengine.util.base64.Base64InputStream.read()",1,0,n/a,11,1,0,5,3
"org.andengine.util.base64.Base64InputStream.read(byte[],int,int)",3,0,n/a,13,1,3,8,3
"org.andengine.util.base64.Base64InputStream.refill()",4,3,n/a,23,1,0,12,4
"org.andengine.util.base64.Base64InputStream.reset()",1,0,n/a,4,0,0,1,1
"org.andengine.util.base64.Base64InputStream.skip(long)",2,0,n/a,12,1,1,7,3
"org.andengine.util.call.AsyncCallable.call(Callback<T>,Callback<Exception>)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.andengine.util.call.Callable.call()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.andengine.util.call.Callback.onCallback(T)",n/a,13,6,n/a,n/a,1,n/a,n/a
"org.andengine.util.call.ParameterCallable.call(T)",n/a,8,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.color.Color.Color(Color)",1,1,n/a,3,0,1,1,1
"org.andengine.util.color.Color.Color(float,float,float)",1,0,n/a,3,0,3,1,1
"org.andengine.util.color.Color.Color(float,float,float,float)",1,14,n/a,3,0,4,1,1
"org.andengine.util.color.Color.equals(Color)",0,1,n/a,3,0,1,1,1
"org.andengine.util.color.Color.equals(Object)",3,0,n/a,11,1,1,7,4
"org.andengine.util.color.Color.getABGRPackedFloat()",0,24,n/a,3,0,0,1,1
"org.andengine.util.color.Color.getABGRPackedInt()",0,9,n/a,3,0,0,1,1
"org.andengine.util.color.Color.getARGBPackedInt()",1,22,n/a,6,0,0,1,1
"org.andengine.util.color.Color.getAlpha()",0,5,n/a,3,0,0,1,1
"org.andengine.util.color.Color.getBlue()",0,25,n/a,3,0,0,1,1
"org.andengine.util.color.Color.getGreen()",0,25,n/a,3,0,0,1,1
"org.andengine.util.color.Color.getRed()",0,25,n/a,3,0,0,1,1
"org.andengine.util.color.Color.hashCode()",0,0,n/a,4,0,0,1,1
"org.andengine.util.color.Color.mix(Color,float,Color,float)",1,0,n/a,7,0,4,5,1
"org.andengine.util.color.Color.packABGR()",2,4,n/a,4,0,0,2,1
"org.andengine.util.color.Color.packABGRAlpha()",1,2,n/a,4,0,0,2,1
"org.andengine.util.color.Color.packABGRBlue()",1,2,n/a,4,0,0,2,1
"org.andengine.util.color.Color.packABGRGreen()",1,2,n/a,4,0,0,2,1
"org.andengine.util.color.Color.packABGRRed()",1,2,n/a,4,0,0,2,1
"org.andengine.util.color.Color.reset()",1,1,n/a,3,0,0,1,1
"org.andengine.util.color.Color.set(Color)",0,5,n/a,8,0,1,6,1
"org.andengine.util.color.Color.set(float,float,float)",1,2,n/a,6,0,3,4,1
"org.andengine.util.color.Color.set(float,float,float,float)",1,4,n/a,7,0,4,5,1
"org.andengine.util.color.Color.setAlpha(float)",1,0,n/a,4,0,1,2,1
"org.andengine.util.color.Color.setAlphaChecking(float)",1,1,n/a,8,1,1,5,2
"org.andengine.util.color.Color.setBlue(float)",1,0,n/a,4,0,1,2,1
"org.andengine.util.color.Color.setBlueChecking(float)",1,1,n/a,8,1,1,5,2
"org.andengine.util.color.Color.setChecking(Color)",0,1,n/a,12,1,1,9,2
"org.andengine.util.color.Color.setChecking(float,float,float)",1,1,n/a,10,1,3,7,4
"org.andengine.util.color.Color.setChecking(float,float,float,float)",1,1,n/a,11,1,4,8,5
"org.andengine.util.color.Color.setGreen(float)",1,0,n/a,4,0,1,2,1
"org.andengine.util.color.Color.setGreenChecking(float)",1,1,n/a,8,1,1,5,2
"org.andengine.util.color.Color.setRed(float)",1,0,n/a,4,0,1,2,1
"org.andengine.util.color.Color.setRedChecking(float)",1,1,n/a,8,1,1,5,2
"org.andengine.util.color.Color.toString()",11,0,n/a,14,0,0,1,1
"org.andengine.util.color.ColorPool.onAllocatePoolItem()",1,1,n/a,4,0,0,1,1
"org.andengine.util.color.ColorPool.onHandleRecycleItem(Color)",2,2,n/a,5,0,1,2,1
"org.andengine.util.color.ColorUtils.convertABGRPackedIntToColor(int)",5,0,n/a,7,0,1,5,1
"org.andengine.util.color.ColorUtils.convertARGBPackedIntToColor(int)",5,1,n/a,7,0,1,5,1
"org.andengine.util.color.ColorUtils.convertHSVToARGBPackedInt(float,float,float)",1,1,n/a,11,0,3,4,1
"org.andengine.util.color.ColorUtils.convertHSVToColor(float,float,float)",2,0,n/a,8,0,3,1,1
"org.andengine.util.color.ColorUtils.convertPackedIntToPackedFloat(int)",1,7,n/a,3,0,1,1,1
"org.andengine.util.color.ColorUtils.convertRGBAToABGRPackedFloat(float,float,float,float)",2,4,n/a,3,0,4,1,1
"org.andengine.util.color.ColorUtils.convertRGBAToABGRPackedInt(float,float,float,float)",0,2,n/a,3,0,4,1,1
"org.andengine.util.color.ColorUtils.convertRGBAToARGBPackedFloat(float,float,float,float)",2,0,n/a,3,0,4,1,1
"org.andengine.util.color.ColorUtils.convertRGBAToARGBPackedInt(float,float,float,float)",0,2,n/a,3,0,4,1,1
"org.andengine.util.color.ColorUtils.extractAlphaFromABGRPackedInt(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.color.ColorUtils.extractAlphaFromARGBPackedInt(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.color.ColorUtils.extractBlueFromABGRPackedInt(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.color.ColorUtils.extractBlueFromARGBPackedInt(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.color.ColorUtils.extractGreenFromABGRPackedInt(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.color.ColorUtils.extractGreenFromARGBPackedInt(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.color.ColorUtils.extractRedFromABGRPackedInt(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.color.ColorUtils.extractRedFromARGBPackedInt(int)",0,1,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.DebugLevel.isSameOrLessThan(DebugLevel)",1,5,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.d(String)",1,33,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.d(String,String)",1,4,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.d(String,String,Throwable)",3,5,n/a,9,2,3,4,3
"org.andengine.util.debug.Debug.d(String,Throwable)",1,4,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.dUser(String,String)",2,0,n/a,5,1,2,2,2
"org.andengine.util.debug.Debug.dUser(String,String,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.dUser(String,String,Throwable,String)",2,0,n/a,5,1,4,2,2
"org.andengine.util.debug.Debug.dUser(String,Throwable,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.e(String)",1,4,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.e(String,String)",1,11,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.e(String,String,Throwable)",3,5,n/a,9,2,3,4,3
"org.andengine.util.debug.Debug.e(String,Throwable)",1,11,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.e(Throwable)",1,4,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.eUser(String,String)",2,0,n/a,5,1,2,2,2
"org.andengine.util.debug.Debug.eUser(String,String,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.eUser(String,String,Throwable,String)",2,0,n/a,5,1,4,2,2
"org.andengine.util.debug.Debug.eUser(String,Throwable,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.eUser(Throwable,String)",2,0,n/a,5,1,2,2,2
"org.andengine.util.debug.Debug.getDebugLevel()",0,0,n/a,3,0,0,1,1
"org.andengine.util.debug.Debug.getTag()",0,0,n/a,3,0,0,1,1
"org.andengine.util.debug.Debug.i(String)",1,2,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.i(String,String)",1,4,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.i(String,String,Throwable)",3,5,n/a,9,2,3,4,3
"org.andengine.util.debug.Debug.i(String,Throwable)",1,4,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.iUser(String,String)",2,0,n/a,5,1,2,2,2
"org.andengine.util.debug.Debug.iUser(String,String,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.iUser(String,String,Throwable,String)",2,0,n/a,5,1,4,2,2
"org.andengine.util.debug.Debug.iUser(String,Throwable,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.log(DebugLevel,String)",5,5,n/a,21,1,2,18,7
"org.andengine.util.debug.Debug.log(DebugLevel,String,String)",5,0,n/a,21,1,3,18,7
"org.andengine.util.debug.Debug.log(DebugLevel,String,String,Throwable)",5,0,n/a,21,1,4,18,7
"org.andengine.util.debug.Debug.log(DebugLevel,String,Throwable)",5,0,n/a,21,1,3,18,7
"org.andengine.util.debug.Debug.setDebugLevel(DebugLevel)",1,0,n/a,6,1,1,3,2
"org.andengine.util.debug.Debug.setDebugUser(String)",1,0,n/a,6,1,1,3,2
"org.andengine.util.debug.Debug.setTag(String)",0,0,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.v(String)",1,3,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.v(String,String)",1,4,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.v(String,String,Throwable)",3,5,n/a,9,2,3,4,3
"org.andengine.util.debug.Debug.v(String,Throwable)",1,4,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.vUser(String,String)",2,0,n/a,5,1,2,2,2
"org.andengine.util.debug.Debug.vUser(String,String,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.vUser(String,String,Throwable,String)",2,0,n/a,5,1,4,2,2
"org.andengine.util.debug.Debug.vUser(String,Throwable,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.w(String)",1,9,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.w(String,String)",1,5,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.w(String,String,Throwable)",3,5,n/a,9,2,3,4,3
"org.andengine.util.debug.Debug.w(String,Throwable)",1,5,n/a,3,0,2,1,1
"org.andengine.util.debug.Debug.w(Throwable)",1,9,n/a,3,0,1,1,1
"org.andengine.util.debug.Debug.wUser(String,String)",2,0,n/a,5,1,2,2,2
"org.andengine.util.debug.Debug.wUser(String,String,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.wUser(String,String,Throwable,String)",2,0,n/a,5,1,4,2,2
"org.andengine.util.debug.Debug.wUser(String,Throwable,String)",2,0,n/a,5,1,3,2,2
"org.andengine.util.debug.Debug.wUser(Throwable,String)",2,0,n/a,5,1,2,2,2
"org.andengine.util.debug.DebugTimer.DebugTime.DebugTime(long,String)",1,2,n/a,3,0,2,1,1
"org.andengine.util.debug.DebugTimer.DebugTime.DebugTime(long,String,boolean)",0,3,n/a,5,0,3,3,1
"org.andengine.util.debug.DebugTimer.DebugTime.begin(DebugTime)",2,0,n/a,4,0,1,2,1
"org.andengine.util.debug.DebugTimer.DebugTime.dump(int)",1,1,n/a,3,0,1,1,1
"org.andengine.util.debug.DebugTimer.DebugTime.dump(int,String)",15,1,n/a,22,3,2,17,4
"org.andengine.util.debug.DebugTimer.DebugTime.end(long)",0,2,n/a,3,0,1,1,1
"org.andengine.util.debug.DebugTimer.DebugTime.ensureChildrenAllocated()",1,2,n/a,5,1,0,2,2
"org.andengine.util.debug.DebugTimer.DebugTime.split(String)",6,0,n/a,13,1,1,9,2
"org.andengine.util.debug.DebugTimer.DebugTimer(DebugLevel,String)",1,1,n/a,4,0,2,2,1
"org.andengine.util.debug.DebugTimer.DebugTimer(String)",1,0,n/a,3,0,1,1,1
"org.andengine.util.debug.DebugTimer.begin(String)",5,0,n/a,6,0,1,4,1
"org.andengine.util.debug.DebugTimer.clear()",3,1,n/a,5,0,0,3,1
"org.andengine.util.debug.DebugTimer.dump()",1,0,n/a,3,0,0,1,1
"org.andengine.util.debug.DebugTimer.dump(boolean)",9,1,n/a,12,1,1,8,3
"org.andengine.util.debug.DebugTimer.end()",7,0,n/a,8,1,0,4,2
"org.andengine.util.debug.DebugTimer.init(String)",3,2,n/a,5,0,1,3,1
"org.andengine.util.debug.DebugTimer.split(String)",2,0,n/a,3,0,1,1,1
"org.andengine.util.exception.AndEngineException.AndEngineException()",1,1,n/a,3,0,0,1,1
"org.andengine.util.exception.AndEngineException.AndEngineException(String)",1,1,n/a,3,0,1,1,1
"org.andengine.util.exception.AndEngineException.AndEngineException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.util.exception.AndEngineException.AndEngineException(Throwable)",1,1,n/a,3,0,1,1,1
"org.andengine.util.exception.AndEngineRuntimeException.AndEngineRuntimeException()",1,14,n/a,3,0,0,1,1
"org.andengine.util.exception.AndEngineRuntimeException.AndEngineRuntimeException(String)",1,24,n/a,3,0,1,1,1
"org.andengine.util.exception.AndEngineRuntimeException.AndEngineRuntimeException(String,Throwable)",1,12,n/a,3,0,2,1,1
"org.andengine.util.exception.AndEngineRuntimeException.AndEngineRuntimeException(Throwable)",1,24,n/a,3,0,1,1,1
"org.andengine.util.exception.DeviceNotSupportedException.DeviceNotSupportedException(DeviceNotSupportedCause)",1,0,n/a,4,0,1,2,1
"org.andengine.util.exception.DeviceNotSupportedException.DeviceNotSupportedException(DeviceNotSupportedCause,Throwable)",1,2,n/a,4,0,2,2,1
"org.andengine.util.exception.DeviceNotSupportedException.getDeviceNotSupportedCause()",0,0,n/a,3,0,0,1,1
"org.andengine.util.exception.MethodNotSupportedException.MethodNotSupportedException()",0,4,n/a,2,0,0,0,1
"org.andengine.util.exception.MethodNotSupportedException.MethodNotSupportedException(String)",1,0,n/a,3,0,1,1,1
"org.andengine.util.exception.MethodNotSupportedException.MethodNotSupportedException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.util.exception.MethodNotSupportedException.MethodNotSupportedException(Throwable)",1,0,n/a,3,0,1,1,1
"org.andengine.util.exception.MethodNotYetImplementedException.MethodNotYetImplementedException()",0,1,n/a,2,0,0,0,1
"org.andengine.util.exception.MethodNotYetImplementedException.MethodNotYetImplementedException(String)",1,0,n/a,3,0,1,1,1
"org.andengine.util.exception.MethodNotYetImplementedException.MethodNotYetImplementedException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.util.exception.MethodNotYetImplementedException.MethodNotYetImplementedException(Throwable)",1,0,n/a,3,0,1,1,1
"org.andengine.util.exception.NullBitmapException.NullBitmapException()",0,0,n/a,2,0,0,0,1
"org.andengine.util.exception.NullBitmapException.NullBitmapException(String)",1,0,n/a,3,0,1,1,1
"org.andengine.util.exception.NullBitmapException.NullBitmapException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.andengine.util.exception.NullBitmapException.NullBitmapException(Throwable)",1,0,n/a,3,0,1,1,1
"org.andengine.util.level.IEntityLoader.onLoadEntity(String,Attributes)",n/a,2,0,n/a,n/a,2,n/a,n/a
"org.andengine.util.level.LevelLoader.LevelLoader()",1,0,n/a,3,0,0,1,1
"org.andengine.util.level.LevelLoader.LevelLoader(String)",1,1,n/a,3,0,1,1,1
"org.andengine.util.level.LevelLoader.getAssetBasePath()",0,0,n/a,3,0,0,1,1
"org.andengine.util.level.LevelLoader.getDefaultEntityLoader()",0,0,n/a,3,0,0,1,1
"org.andengine.util.level.LevelLoader.loadLevelFromAsset(AssetManager,String)",2,0,n/a,3,0,2,1,1
"org.andengine.util.level.LevelLoader.loadLevelFromResource(Resources,int)",2,0,n/a,3,0,2,1,1
"org.andengine.util.level.LevelLoader.loadLevelFromStream(InputStream)",13,2,n/a,20,1,1,12,3
"org.andengine.util.level.LevelLoader.onAfterLoadLevel()",0,1,n/a,2,0,0,0,1
"org.andengine.util.level.LevelLoader.onBeforeLoadLevel()",0,1,n/a,2,0,0,0,1
"org.andengine.util.level.LevelLoader.registerEntityLoader(String,IEntityLoader)",1,0,n/a,3,0,2,1,1
"org.andengine.util.level.LevelLoader.registerEntityLoader(String[],IEntityLoader)",1,0,n/a,6,1,2,5,2
"org.andengine.util.level.LevelLoader.setAssetBasePath(String)",3,1,n/a,10,1,1,3,3
"org.andengine.util.level.LevelLoader.setDefaultEntityLoader(IEntityLoader)",0,0,n/a,3,0,1,1,1
"org.andengine.util.level.LevelParser.LevelParser(IEntityLoader,HashMap<String, IEntityLoader>)",0,1,n/a,4,0,2,2,1
"org.andengine.util.level.LevelParser.endElement(String,String,String)",1,0,n/a,4,0,3,1,1
"org.andengine.util.level.LevelParser.startElement(String,String,String,Attributes)",8,0,n/a,18,1,4,12,6
"org.andengine.util.levelstats.LevelStatsDBConnector.LevelStatsDBConnector(Context,String,String)",6,0,n/a,12,1,3,8,2
"org.andengine.util.levelstats.LevelStatsDBConnector.submitAsync(int,boolean,int)",1,0,n/a,3,0,3,1,1
"org.andengine.util.levelstats.LevelStatsDBConnector.submitAsync(int,boolean,int,Callback<Boolean>)",34,1,n/a,40,6,4,25,9
"org.andengine.util.math.MathUtils.arrayAverage(float[])",1,0,n/a,3,0,1,1,1
"org.andengine.util.math.MathUtils.arraySum(float[])",0,1,n/a,8,1,1,7,2
"org.andengine.util.math.MathUtils.arraySumInternal(int[])",0,0,n/a,6,1,1,5,2
"org.andengine.util.math.MathUtils.arraySumInternal(long[])",0,0,n/a,6,1,1,5,2
"org.andengine.util.math.MathUtils.arraySumInternal(long[],long)",0,0,n/a,7,1,2,6,2
"org.andengine.util.math.MathUtils.arraySumInto(long[],long[],long)",0,1,n/a,7,1,3,6,2
"org.andengine.util.math.MathUtils.atan2(float,float)",1,4,n/a,3,0,2,1,1
"org.andengine.util.math.MathUtils.bringToBounds(float,float,float)",2,2,n/a,9,0,3,1,1
"org.andengine.util.math.MathUtils.bringToBounds(int,int,int)",2,4,n/a,9,0,3,1,1
"org.andengine.util.math.MathUtils.cross(float,float,float,float)",0,0,n/a,3,0,4,1,1
"org.andengine.util.math.MathUtils.degToRad(float)",0,1,n/a,3,0,1,1,1
"org.andengine.util.math.MathUtils.distance(float,float,float,float)",1,1,n/a,8,0,4,3,1
"org.andengine.util.math.MathUtils.dot(float,float,float,float)",0,0,n/a,3,0,4,1,1
"org.andengine.util.math.MathUtils.isEven(int)",0,0,n/a,3,0,1,1,1
"org.andengine.util.math.MathUtils.isInBounds(float,float,float)",0,0,n/a,3,0,3,1,2
"org.andengine.util.math.MathUtils.isInBounds(int,int,int)",0,0,n/a,3,0,3,1,2
"org.andengine.util.math.MathUtils.isOdd(int)",0,0,n/a,3,0,1,1,1
"org.andengine.util.math.MathUtils.isPowerOfTwo(int)",0,6,n/a,3,0,1,1,2
"org.andengine.util.math.MathUtils.length(float,float)",1,0,n/a,6,0,2,1,1
"org.andengine.util.math.MathUtils.mix(float,float,float)",0,0,n/a,9,0,3,1,1
"org.andengine.util.math.MathUtils.mix(int,int,float)",1,1,n/a,9,0,3,1,1
"org.andengine.util.math.MathUtils.nextPowerOfTwo(float)",2,0,n/a,3,0,1,1,1
"org.andengine.util.math.MathUtils.nextPowerOfTwo(int)",0,2,n/a,11,1,1,9,3
"org.andengine.util.math.MathUtils.radToDeg(float)",0,1,n/a,3,0,1,1,1
"org.andengine.util.math.MathUtils.random(float,float)",1,5,n/a,3,0,2,1,1
"org.andengine.util.math.MathUtils.random(int,int)",1,7,n/a,8,0,2,1,1
"org.andengine.util.math.MathUtils.randomSign()",1,2,n/a,7,1,0,3,2
"org.andengine.util.math.MathUtils.revertRotateAndScaleAroundCenter(float[],float,float,float,float,float,float,float)",2,0,n/a,4,0,8,2,1
"org.andengine.util.math.MathUtils.revertRotateAroundCenter(float[],float,float,float)",1,6,n/a,3,0,4,1,1
"org.andengine.util.math.MathUtils.revertScaleAroundCenter(float[],float,float,float,float)",1,3,n/a,3,0,5,1,1
"org.andengine.util.math.MathUtils.rotateAndScaleAroundCenter(float[],float,float,float,float,float,float,float)",2,0,n/a,4,0,8,2,1
"org.andengine.util.math.MathUtils.rotateAroundCenter(float[],float,float,float)",3,8,n/a,14,2,4,12,3
"org.andengine.util.math.MathUtils.scaleAroundCenter(float[],float,float,float,float)",0,4,n/a,9,2,5,7,4
"org.andengine.util.math.MathUtils.signum(int)",0,0,n/a,9,1,1,5,3
"org.andengine.util.math.MathUtils.sum(int[])",0,0,n/a,7,1,1,6,2
"org.andengine.util.mime.MIMEType.MIMEType(String)",0,3,n/a,3,0,1,1,1
"org.andengine.util.mime.MIMEType.getTypeString()",0,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.BaseDoubleValueChangeModifier.BaseDoubleValueChangeModifier(BaseDoubleValueChangeModifier<T>)",1,1,n/a,4,0,1,2,1
"org.andengine.util.modifier.BaseDoubleValueChangeModifier.BaseDoubleValueChangeModifier(float,float,float)",1,1,n/a,3,0,3,1,1
"org.andengine.util.modifier.BaseDoubleValueChangeModifier.BaseDoubleValueChangeModifier(float,float,float,IModifierListener<T>)",1,2,n/a,4,0,4,2,1
"org.andengine.util.modifier.BaseDoubleValueChangeModifier.onChangeValue(float,T,float)",1,1,n/a,4,0,3,1,1
"org.andengine.util.modifier.BaseDoubleValueChangeModifier.onChangeValues(float,T,float,float)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.BaseDoubleValueSpanModifier(BaseDoubleValueSpanModifier<T>)",1,2,n/a,5,0,1,3,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.BaseDoubleValueSpanModifier(float,float,float,float,float)",2,1,n/a,3,0,5,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.BaseDoubleValueSpanModifier(float,float,float,float,float,IEaseFunction)",1,1,n/a,3,0,6,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.BaseDoubleValueSpanModifier(float,float,float,float,float,IModifierListener<T>)",2,1,n/a,3,0,6,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.BaseDoubleValueSpanModifier(float,float,float,float,float,IModifierListener<T>,IEaseFunction)",1,5,n/a,5,0,7,3,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.getFromValue()",1,2,n/a,5,0,0,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.getFromValueA()",1,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.getFromValueB()",0,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.getToValue()",1,2,n/a,5,0,0,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.getToValueA()",1,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.getToValueB()",0,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.onSetInitialValue(T,float)",1,1,n/a,4,0,2,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.onSetInitialValues(T,float,float)",n/a,1,4,n/a,n/a,3,n/a,n/a
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.onSetValue(T,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.onSetValues(T,float,float,float)",n/a,1,5,n/a,n/a,4,n/a,n/a
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.reset(float,float,float)",1,2,n/a,5,0,3,1,1
"org.andengine.util.modifier.BaseDoubleValueSpanModifier.reset(float,float,float,float,float)",1,2,n/a,5,0,5,3,1
"org.andengine.util.modifier.BaseDurationModifier.BaseDurationModifier(BaseDurationModifier<T>)",1,3,n/a,3,0,1,1,1
"org.andengine.util.modifier.BaseDurationModifier.BaseDurationModifier(float)",0,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.BaseDurationModifier.BaseDurationModifier(float,IModifierListener<T>)",1,3,n/a,4,0,2,2,1
"org.andengine.util.modifier.BaseDurationModifier.getDuration()",0,6,n/a,4,0,0,1,1
"org.andengine.util.modifier.BaseDurationModifier.getSecondsElapsed()",0,4,n/a,4,0,0,1,1
"org.andengine.util.modifier.BaseDurationModifier.onManagedInitialize(T)",n/a,1,8,n/a,n/a,1,n/a,n/a
"org.andengine.util.modifier.BaseDurationModifier.onManagedUpdate(float,T)",n/a,1,6,n/a,n/a,2,n/a,n/a
"org.andengine.util.modifier.BaseDurationModifier.onUpdate(float,T)",4,4,n/a,25,2,2,16,6
"org.andengine.util.modifier.BaseDurationModifier.reset()",0,7,n/a,5,0,0,2,1
"org.andengine.util.modifier.BaseModifier.BaseModifier()",0,4,n/a,2,0,0,0,1
"org.andengine.util.modifier.BaseModifier.BaseModifier(IModifierListener<T>)",1,5,n/a,3,0,1,1,1
"org.andengine.util.modifier.BaseModifier.addModifierListener(IModifierListener<T>)",1,8,n/a,6,1,1,2,2
"org.andengine.util.modifier.BaseModifier.assertNoNullModifier(IModifier<T>)",2,0,n/a,5,1,1,2,2
"org.andengine.util.modifier.BaseModifier.assertNoNullModifier(IModifier<T>...)",2,0,n/a,8,2,1,6,3
"org.andengine.util.modifier.BaseModifier.deepCopy()",n/a,3,32,n/a,n/a,0,n/a,n/a
"org.andengine.util.modifier.BaseModifier.isAutoUnregisterWhenFinished()",0,1,n/a,4,0,0,1,1
"org.andengine.util.modifier.BaseModifier.isFinished()",0,3,n/a,4,0,0,1,1
"org.andengine.util.modifier.BaseModifier.onModifierFinished(T)",3,5,n/a,7,1,1,6,2
"org.andengine.util.modifier.BaseModifier.onModifierStarted(T)",3,5,n/a,7,1,1,6,2
"org.andengine.util.modifier.BaseModifier.removeModifierListener(IModifierListener<T>)",1,3,n/a,8,1,1,3,2
"org.andengine.util.modifier.BaseModifier.setAutoUnregisterWhenFinished(boolean)",0,2,n/a,4,0,1,1,1
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier.BaseQuadrupelValueSpanModifier(BaseQuadrupelValueSpanModifier<T>)",1,0,n/a,5,0,1,3,1
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier.BaseQuadrupelValueSpanModifier(float,float,float,float,float,float,float,float,float,IEaseFunction)",1,0,n/a,3,0,10,1,1
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier.BaseQuadrupelValueSpanModifier(float,float,float,float,float,float,float,float,float,IModifierListener<T>,IEaseFunction)",1,1,n/a,5,0,11,3,1
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier.onSetInitialValues(T,float,float,float)",1,1,n/a,4,0,4,1,1
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier.onSetInitialValues(T,float,float,float,float)",n/a,1,0,n/a,n/a,5,n/a,n/a
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier.onSetValues(T,float,float,float,float)",1,1,n/a,4,0,5,1,1
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier.onSetValues(T,float,float,float,float,float)",n/a,1,0,n/a,n/a,6,n/a,n/a
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier.reset(float,float,float,float,float,float,float)",1,2,n/a,5,0,7,1,1
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier.reset(float,float,float,float,float,float,float,float,float)",1,0,n/a,5,0,9,3,1
"org.andengine.util.modifier.BaseSingleValueChangeModifier.BaseSingleValueChangeModifier(BaseSingleValueChangeModifier<T>)",1,2,n/a,4,0,1,2,1
"org.andengine.util.modifier.BaseSingleValueChangeModifier.BaseSingleValueChangeModifier(float,float)",1,1,n/a,3,0,2,1,1
"org.andengine.util.modifier.BaseSingleValueChangeModifier.BaseSingleValueChangeModifier(float,float,IModifierListener<T>)",1,3,n/a,4,0,3,2,1
"org.andengine.util.modifier.BaseSingleValueChangeModifier.onChangeValue(float,T,float)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.andengine.util.modifier.BaseSingleValueChangeModifier.onManagedInitialize(T)",0,1,n/a,3,0,1,0,1
"org.andengine.util.modifier.BaseSingleValueChangeModifier.onManagedUpdate(float,T)",1,1,n/a,4,0,2,1,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.BaseSingleValueSpanModifier(BaseSingleValueSpanModifier<T>)",1,2,n/a,6,0,1,4,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.BaseSingleValueSpanModifier(float,float,float)",2,1,n/a,3,0,3,1,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.BaseSingleValueSpanModifier(float,float,float,IEaseFunction)",1,1,n/a,3,0,4,1,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.BaseSingleValueSpanModifier(float,float,float,IModifierListener<T>)",2,1,n/a,3,0,4,1,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.BaseSingleValueSpanModifier(float,float,float,IModifierListener<T>,IEaseFunction)",1,5,n/a,6,0,5,4,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.getFromValue()",0,2,n/a,3,0,0,1,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.getToValue()",0,2,n/a,3,0,0,1,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.onManagedInitialize(T)",1,3,n/a,4,0,1,1,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.onManagedUpdate(float,T)",3,1,n/a,5,0,2,2,1
"org.andengine.util.modifier.BaseSingleValueSpanModifier.onSetInitialValue(T,float)",n/a,1,7,n/a,n/a,2,n/a,n/a
"org.andengine.util.modifier.BaseSingleValueSpanModifier.onSetValue(T,float,float)",n/a,1,7,n/a,n/a,3,n/a,n/a
"org.andengine.util.modifier.BaseSingleValueSpanModifier.reset(float,float,float)",1,2,n/a,6,0,3,4,1
"org.andengine.util.modifier.BaseTripleValueSpanModifier.BaseTripleValueSpanModifier(BaseTripleValueSpanModifier<T>)",1,3,n/a,5,0,1,3,1
"org.andengine.util.modifier.BaseTripleValueSpanModifier.BaseTripleValueSpanModifier(float,float,float,float,float,float,float,IEaseFunction)",1,1,n/a,3,0,8,1,1
"org.andengine.util.modifier.BaseTripleValueSpanModifier.BaseTripleValueSpanModifier(float,float,float,float,float,float,float,IModifierListener<T>,IEaseFunction)",1,7,n/a,5,0,9,3,1
"org.andengine.util.modifier.BaseTripleValueSpanModifier.getFromValueC()",0,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.BaseTripleValueSpanModifier.getToValueC()",0,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.BaseTripleValueSpanModifier.onSetInitialValues(T,float,float)",1,1,n/a,4,0,3,1,1
"org.andengine.util.modifier.BaseTripleValueSpanModifier.onSetInitialValues(T,float,float,float)",n/a,1,3,n/a,n/a,4,n/a,n/a
"org.andengine.util.modifier.BaseTripleValueSpanModifier.onSetValues(T,float,float,float)",1,1,n/a,4,0,4,1,1
"org.andengine.util.modifier.BaseTripleValueSpanModifier.onSetValues(T,float,float,float,float)",n/a,1,3,n/a,n/a,5,n/a,n/a
"org.andengine.util.modifier.BaseTripleValueSpanModifier.reset(float,float,float,float,float)",1,2,n/a,5,0,5,1,1
"org.andengine.util.modifier.BaseTripleValueSpanModifier.reset(float,float,float,float,float,float,float)",1,2,n/a,5,0,7,3,1
"org.andengine.util.modifier.IModifier.IModifierListener.onModifierFinished(IModifier<T>,T)",n/a,1,4,n/a,n/a,2,n/a,n/a
"org.andengine.util.modifier.IModifier.IModifierListener.onModifierStarted(IModifier<T>,T)",n/a,1,4,n/a,n/a,2,n/a,n/a
"org.andengine.util.modifier.IModifier.addModifierListener(IModifierListener<T>)",n/a,7,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.modifier.IModifier.deepCopy()",n/a,3,32,n/a,n/a,0,n/a,n/a
"org.andengine.util.modifier.IModifier.getDuration()",n/a,6,5,n/a,n/a,0,n/a,n/a
"org.andengine.util.modifier.IModifier.getSecondsElapsed()",n/a,0,5,n/a,n/a,0,n/a,n/a
"org.andengine.util.modifier.IModifier.isAutoUnregisterWhenFinished()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.andengine.util.modifier.IModifier.isFinished()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.andengine.util.modifier.IModifier.onUpdate(float,T)",n/a,4,5,n/a,n/a,2,n/a,n/a
"org.andengine.util.modifier.IModifier.removeModifierListener(IModifierListener<T>)",n/a,3,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.modifier.IModifier.reset()",n/a,6,5,n/a,n/a,0,n/a,n/a
"org.andengine.util.modifier.IModifier.setAutoUnregisterWhenFinished(boolean)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.andengine.util.modifier.LoopModifier.ILoopModifierListener.onLoopFinished(LoopModifier<T>,int,int)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.andengine.util.modifier.LoopModifier.ILoopModifierListener.onLoopStarted(LoopModifier<T>,int,int)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.andengine.util.modifier.LoopModifier.LoopModifier(IModifier<T>)",1,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.LoopModifier.LoopModifier(IModifier<T>,int)",1,4,n/a,3,0,2,1,1
"org.andengine.util.modifier.LoopModifier.LoopModifier(IModifier<T>,int,ILoopModifierListener<T>)",1,1,n/a,3,0,3,1,1
"org.andengine.util.modifier.LoopModifier.LoopModifier(IModifier<T>,int,ILoopModifierListener<T>,IModifierListener<T>)",4,6,n/a,10,0,4,8,2
"org.andengine.util.modifier.LoopModifier.LoopModifier(IModifier<T>,int,IModifierListener<T>)",1,2,n/a,3,0,3,1,1
"org.andengine.util.modifier.LoopModifier.LoopModifier(LoopModifier<T>)",2,3,n/a,3,0,1,1,1
"org.andengine.util.modifier.LoopModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.util.modifier.LoopModifier.getDuration()",0,6,n/a,4,0,0,1,1
"org.andengine.util.modifier.LoopModifier.getLoopModifierListener()",0,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.LoopModifier.getSecondsElapsed()",0,0,n/a,4,0,0,1,1
"org.andengine.util.modifier.LoopModifier.onModifierFinished(IModifier<T>,T)",4,1,n/a,20,2,2,12,4
"org.andengine.util.modifier.LoopModifier.onModifierStarted(IModifier<T>,T)",2,1,n/a,10,1,2,5,3
"org.andengine.util.modifier.LoopModifier.onUpdate(float,T)",1,4,n/a,16,2,2,10,4
"org.andengine.util.modifier.LoopModifier.reset()",1,6,n/a,8,0,0,5,1
"org.andengine.util.modifier.LoopModifier.setLoopModifierListener(ILoopModifierListener<T>)",0,0,n/a,3,0,1,1,1
"org.andengine.util.modifier.ModifierList.ModifierList(T)",0,1,n/a,3,0,1,1,1
"org.andengine.util.modifier.ModifierList.ModifierList(T,int)",1,2,n/a,4,0,2,2,1
"org.andengine.util.modifier.ModifierList.add(IModifier<T>)",3,2,n/a,8,1,1,3,2
"org.andengine.util.modifier.ModifierList.getTarget()",0,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.ModifierList.onUpdate(float)",6,9,n/a,13,3,1,9,5
"org.andengine.util.modifier.ModifierList.reset()",3,6,n/a,6,1,0,4,2
"org.andengine.util.modifier.ParallelModifier.ParallelModifier(IModifier<T>...)",1,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.ParallelModifier.ParallelModifier(IModifierListener<T>,IModifier<T>...)",6,3,n/a,12,1,2,9,2
"org.andengine.util.modifier.ParallelModifier.ParallelModifier(ParallelModifier<T>)",3,3,n/a,12,1,1,10,2
"org.andengine.util.modifier.ParallelModifier.deepCopy()",1,3,n/a,4,0,0,1,1
"org.andengine.util.modifier.ParallelModifier.getDuration()",0,6,n/a,4,0,0,1,1
"org.andengine.util.modifier.ParallelModifier.getSecondsElapsed()",0,0,n/a,4,0,0,1,1
"org.andengine.util.modifier.ParallelModifier.onModifierFinished(IModifier<T>,T)",1,1,n/a,6,0,2,3,1
"org.andengine.util.modifier.ParallelModifier.onModifierStarted(IModifier<T>,T)",1,1,n/a,4,0,2,1,1
"org.andengine.util.modifier.ParallelModifier.onUpdate(float,T)",2,4,n/a,21,3,2,16,5
"org.andengine.util.modifier.ParallelModifier.reset()",1,6,n/a,9,1,0,7,2
"org.andengine.util.modifier.SequenceModifier.ISubSequenceModifierListener.onSubSequenceFinished(IModifier<T>,T,int)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.andengine.util.modifier.SequenceModifier.ISubSequenceModifierListener.onSubSequenceStarted(IModifier<T>,T,int)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.andengine.util.modifier.SequenceModifier.SequenceModifier(IModifier<T>...)",1,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.SequenceModifier.SequenceModifier(IModifierListener<T>,IModifier<T>...)",1,2,n/a,3,0,2,1,1
"org.andengine.util.modifier.SequenceModifier.SequenceModifier(ISubSequenceModifierListener<T>,IModifier<T>...)",1,2,n/a,3,0,2,1,1
"org.andengine.util.modifier.SequenceModifier.SequenceModifier(ISubSequenceModifierListener<T>,IModifierListener<T>,IModifier<T>...)",5,6,n/a,11,1,3,8,2
"org.andengine.util.modifier.SequenceModifier.SequenceModifier(SequenceModifier<T>)",2,3,n/a,11,1,1,9,2
"org.andengine.util.modifier.SequenceModifier.deepCopy()",1,4,n/a,4,0,0,1,1
"org.andengine.util.modifier.SequenceModifier.getDuration()",0,7,n/a,4,0,0,1,1
"org.andengine.util.modifier.SequenceModifier.getSecondsElapsed()",0,1,n/a,4,0,0,1,1
"org.andengine.util.modifier.SequenceModifier.getSubSequenceModifierListener()",0,0,n/a,3,0,0,1,1
"org.andengine.util.modifier.SequenceModifier.onModifierFinished(IModifier<T>,T)",4,1,n/a,16,1,2,10,3
"org.andengine.util.modifier.SequenceModifier.onModifierStarted(IModifier<T>,T)",2,1,n/a,9,1,2,4,3
"org.andengine.util.modifier.SequenceModifier.onUpdate(float,T)",1,5,n/a,16,2,2,10,4
"org.andengine.util.modifier.SequenceModifier.reset()",5,7,n/a,16,1,0,12,3
"org.andengine.util.modifier.SequenceModifier.setSubSequenceModifierListener(ISubSequenceModifierListener<T>)",0,0,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseBackIn.EaseBackIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseBackIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseBackIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseBackIn.getValue(float)",0,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseBackInOut.EaseBackInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseBackInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseBackInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseBackOut.EaseBackOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseBackOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseBackOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseBackOut.getValue(float)",0,2,n/a,4,0,1,2,1
"org.andengine.util.modifier.ease.EaseBounceIn.EaseBounceIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseBounceIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseBounceIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseBounceIn.getValue(float)",1,2,n/a,4,0,1,1,1
"org.andengine.util.modifier.ease.EaseBounceInOut.EaseBounceInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseBounceInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseBounceInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseBounceOut.EaseBounceOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseBounceOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseBounceOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseBounceOut.getValue(float)",0,3,n/a,14,1,1,10,4
"org.andengine.util.modifier.ease.EaseCircularIn.EaseCircularIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseCircularIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseCircularIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseCircularIn.getValue(float)",1,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseCircularInOut.EaseCircularInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseCircularInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseCircularInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseCircularOut.EaseCircularOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseCircularOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseCircularOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseCircularOut.getValue(float)",1,2,n/a,4,0,1,2,1
"org.andengine.util.modifier.ease.EaseCubicIn.EaseCubicIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseCubicIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseCubicIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseCubicIn.getValue(float)",0,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseCubicInOut.EaseCubicInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseCubicInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseCubicInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseCubicOut.EaseCubicOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseCubicOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseCubicOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseCubicOut.getValue(float)",0,2,n/a,4,0,1,2,1
"org.andengine.util.modifier.ease.EaseElasticIn.EaseElasticIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseElasticIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseElasticIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseElasticIn.getValue(float,float,float)",2,2,n/a,12,1,3,8,3
"org.andengine.util.modifier.ease.EaseElasticInOut.EaseElasticInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseElasticInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseElasticInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseElasticOut.EaseElasticOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseElasticOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseElasticOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseElasticOut.getValue(float,float,float)",2,2,n/a,11,1,3,7,3
"org.andengine.util.modifier.ease.EaseExponentialIn.EaseExponentialIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseExponentialIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseExponentialIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseExponentialIn.getValue(float)",1,2,n/a,3,0,1,1,2
"org.andengine.util.modifier.ease.EaseExponentialInOut.EaseExponentialInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseExponentialInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseExponentialInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseExponentialOut.EaseExponentialOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseExponentialOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseExponentialOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseExponentialOut.getValue(float)",1,2,n/a,3,0,1,1,2
"org.andengine.util.modifier.ease.EaseLinear.EaseLinear()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseLinear.getInstance()",1,65,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseLinear.getPercentage(float,float)",0,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseQuadIn.EaseQuadIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseQuadIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseQuadIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseQuadIn.getValue(float)",0,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseQuadInOut.EaseQuadInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseQuadInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseQuadInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseQuadOut.EaseQuadOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseQuadOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseQuadOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseQuadOut.getValue(float)",0,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseQuartIn.EaseQuartIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseQuartIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseQuartIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseQuartIn.getValue(float)",0,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseQuartInOut.EaseQuartInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseQuartInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseQuartInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseQuartOut.EaseQuartOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseQuartOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseQuartOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseQuartOut.getValue(float)",0,2,n/a,4,0,1,2,1
"org.andengine.util.modifier.ease.EaseQuintIn.EaseQuintIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseQuintIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseQuintIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseQuintIn.getValue(float)",0,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseQuintInOut.EaseQuintInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseQuintInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseQuintInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseQuintOut.EaseQuintOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseQuintOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseQuintOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseQuintOut.getValue(float)",0,2,n/a,4,0,1,2,1
"org.andengine.util.modifier.ease.EaseSineIn.EaseSineIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseSineIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseSineIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseSineIn.getValue(float)",1,1,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseSineInOut.EaseSineInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseSineInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseSineInOut.getPercentage(float,float)",1,5,n/a,5,0,2,2,1
"org.andengine.util.modifier.ease.EaseSineOut.EaseSineOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseSineOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseSineOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseSineOut.getValue(float)",1,1,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseStrongIn.EaseStrongIn()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseStrongIn.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseStrongIn.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseStrongIn.getValue(float)",0,2,n/a,3,0,1,1,1
"org.andengine.util.modifier.ease.EaseStrongInOut.EaseStrongInOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseStrongInOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseStrongInOut.getPercentage(float,float)",2,5,n/a,9,1,2,4,2
"org.andengine.util.modifier.ease.EaseStrongOut.EaseStrongOut()",0,1,n/a,2,0,0,0,1
"org.andengine.util.modifier.ease.EaseStrongOut.getInstance()",1,0,n/a,6,1,0,3,2
"org.andengine.util.modifier.ease.EaseStrongOut.getPercentage(float,float)",1,5,n/a,4,0,2,1,1
"org.andengine.util.modifier.ease.EaseStrongOut.getValue(float)",0,2,n/a,4,0,1,2,1
"org.andengine.util.modifier.ease.IEaseFunction.getPercentage(float,float)",n/a,5,34,n/a,n/a,2,n/a,n/a
"org.andengine.util.modifier.util.ModifierUtils.getSequenceDurationOfModifier(IModifier<?>[])",1,1,n/a,7,1,1,6,2
"org.andengine.util.preferences.SimplePreferences.getAccessCount(Context,String)",2,0,n/a,3,0,2,1,1
"org.andengine.util.preferences.SimplePreferences.getEditorInstance(Context)",2,1,n/a,6,1,1,3,2
"org.andengine.util.preferences.SimplePreferences.getInstance(Context)",1,5,n/a,6,1,1,3,2
"org.andengine.util.preferences.SimplePreferences.incrementAccessCount(Context,String)",1,0,n/a,3,0,2,1,1
"org.andengine.util.preferences.SimplePreferences.incrementAccessCount(Context,String,int)",5,1,n/a,7,0,3,5,1
"org.andengine.util.progress.IProgressListener.onProgressChanged(int)",n/a,3,3,n/a,n/a,1,n/a,n/a
"org.andengine.util.progress.ProgressCallable.call(IProgressListener)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.andengine.util.progress.ProgressMonitor.ProgressMonitor()",0,0,n/a,2,0,0,0,1
"org.andengine.util.progress.ProgressMonitor.ProgressMonitor(IProgressListener)",1,0,n/a,3,0,1,1,1
"org.andengine.util.progress.ProgressMonitor.addProgressListener(IProgressListener)",1,1,n/a,3,0,1,1,1
"org.andengine.util.progress.ProgressMonitor.onProgressChanged(int)",3,4,n/a,7,1,1,5,2
"org.andengine.util.progress.ProgressMonitor.registerChildProgressMonitor(ProgressMonitor,int,int)",5,0,n/a,5,2,3,5,1
"org.andengine.util.progress.ProgressMonitor.removeProgressListener(IProgressListener)",1,1,n/a,3,0,1,1,1
"org.andengine.util.progress.ProgressMonitor.unregisterChildProgressMonitor(ProgressMonitor)",2,0,n/a,3,0,1,1,1
"org.andengine.util.system.CPUUsage.CPUUsage()",0,0,n/a,2,0,0,0,1
"org.andengine.util.system.CPUUsage.getUsage()",0,0,n/a,6,0,0,1,1
"org.andengine.util.system.CPUUsage.update()",11,0,n/a,20,1,0,15,2
"org.andengine.util.system.SystemUtils.SystemUtilsException.SystemUtilsException()",0,4,n/a,2,0,0,0,1
"org.andengine.util.system.SystemUtils.SystemUtilsException.SystemUtilsException(Throwable)",1,6,n/a,3,0,1,1,1
"org.andengine.util.system.SystemUtils.getApkFilePath(Context)",3,0,n/a,4,0,1,2,1
"org.andengine.util.system.SystemUtils.getCPUBogoMips()",6,0,n/a,12,2,0,6,3
"org.andengine.util.system.SystemUtils.getCPUFrequencyCurrent()",1,0,n/a,7,0,0,1,1
"org.andengine.util.system.SystemUtils.getCPUFrequencyMax()",1,0,n/a,7,0,0,1,1
"org.andengine.util.system.SystemUtils.getCPUFrequencyMaxScaling()",1,0,n/a,7,0,0,1,1
"org.andengine.util.system.SystemUtils.getCPUFrequencyMin()",1,0,n/a,7,0,0,1,1
"org.andengine.util.system.SystemUtils.getCPUFrequencyMinScaling()",1,0,n/a,7,0,0,1,1
"org.andengine.util.system.SystemUtils.getMemoryFree()",6,0,n/a,16,2,0,6,3
"org.andengine.util.system.SystemUtils.getMemoryTotal()",6,0,n/a,16,2,0,6,3
"org.andengine.util.system.SystemUtils.getPackageInfo(Context)",4,2,n/a,8,1,1,4,2
"org.andengine.util.system.SystemUtils.getPackageName(Context)",1,1,n/a,3,0,1,1,1
"org.andengine.util.system.SystemUtils.getPackageVersionCode(Context)",1,0,n/a,3,0,1,1,1
"org.andengine.util.system.SystemUtils.getPackageVersionName(Context)",1,0,n/a,3,0,1,1,1
"org.andengine.util.system.SystemUtils.hasSystemFeature(Context,String)",3,3,n/a,8,1,2,4,3
"org.andengine.util.system.SystemUtils.isAndroidVersion(int,int)",0,2,n/a,7,0,2,1,2
"org.andengine.util.system.SystemUtils.isAndroidVersionOrHigher(int)",0,0,n/a,6,0,1,1,1
"org.andengine.util.system.SystemUtils.isAndroidVersionOrLower(int)",0,4,n/a,6,0,1,1,1
"org.andengine.util.system.SystemUtils.isGoogleTV(Context)",1,0,n/a,3,0,1,1,1
"org.andengine.util.system.SystemUtils.matchSystemFile(String,String,int)",9,3,n/a,18,2,3,11,3
"org.andengine.util.system.SystemUtils.readSystemFileAsInt(String)",8,5,n/a,15,1,1,9,3
"org.andengine.util.texturepack.TexturePack.TexturePack(ITexture,TexturePackTextureRegionLibrary)",0,1,n/a,4,0,2,2,1
"org.andengine.util.texturepack.TexturePack.getTexture()",0,0,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePack.getTexturePackTextureRegionLibrary()",0,1,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePack.loadTexture()",1,1,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePack.unloadTexture()",1,0,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackLibrary.getTexturePackTextureRegion(String)",1,1,n/a,3,0,1,1,1
"org.andengine.util.texturepack.TexturePackLibrary.put(String,TexturePack)",4,1,n/a,4,0,2,2,1
"org.andengine.util.texturepack.TexturePackLoader.TexturePackLoader(AssetManager,TextureManager)",0,1,n/a,4,0,2,2,1
"org.andengine.util.texturepack.TexturePackLoader.load(InputStream,String)",12,1,n/a,20,1,2,12,4
"org.andengine.util.texturepack.TexturePackLoader.loadFromAsset(String,String)",5,1,n/a,7,1,2,3,2
"org.andengine.util.texturepack.TexturePackParser.TexturePackParser(AssetManager,String,TextureManager)",0,1,n/a,5,0,3,3,1
"org.andengine.util.texturepack.TexturePackParser.getTexturePack()",0,1,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackParser.onGetInputStream(String)",1,4,n/a,3,0,1,1,1
"org.andengine.util.texturepack.TexturePackParser.parseMagFilter(Attributes)",4,1,n/a,10,1,1,6,3
"org.andengine.util.texturepack.TexturePackParser.parseMinFilter(Attributes)",8,1,n/a,18,1,1,14,7
"org.andengine.util.texturepack.TexturePackParser.parsePixelFormat(Attributes)",2,1,n/a,3,0,1,1,1
"org.andengine.util.texturepack.TexturePackParser.parsePremultiplyalpha(Attributes)",1,1,n/a,3,0,1,1,1
"org.andengine.util.texturepack.TexturePackParser.parseTexture(Attributes)",33,1,n/a,4,4,1,30,10
"org.andengine.util.texturepack.TexturePackParser.parseTextureOptions(Attributes)",6,1,n/a,8,0,1,6,1
"org.andengine.util.texturepack.TexturePackParser.parseWrap(Attributes,String)",5,2,n/a,12,1,2,8,5
"org.andengine.util.texturepack.TexturePackParser.parseWrapS(Attributes)",1,1,n/a,3,0,1,1,1
"org.andengine.util.texturepack.TexturePackParser.parseWrapT(Attributes)",1,1,n/a,3,0,1,1,1
"org.andengine.util.texturepack.TexturePackParser.startElement(String,String,String,Attributes)",21,0,n/a,26,1,4,20,3
"org.andengine.util.texturepack.TexturePackTextureRegion.TexturePackTextureRegion(ITexture,int,int,int,int,int,String,boolean,boolean,int,int,int,int)",1,1,n/a,10,0,13,8,1
"org.andengine.util.texturepack.TexturePackTextureRegion.getID()",0,3,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackTextureRegion.getSource()",0,3,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackTextureRegion.getSourceHeight()",0,0,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackTextureRegion.getSourceWidth()",0,0,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackTextureRegion.getSourceX()",0,0,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackTextureRegion.getSourceY()",0,0,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackTextureRegion.isTrimmed()",0,0,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary.TexturePackTextureRegionLibrary(int)",2,1,n/a,4,0,1,2,1
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary.get(String)",1,2,n/a,3,0,1,1,1
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary.get(String,boolean)",5,0,n/a,13,2,2,7,3
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary.get(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary.getIDMapping()",0,0,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary.getSourceMapping()",0,1,n/a,3,0,0,1,1
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary.put(TexturePackTextureRegion)",5,1,n/a,5,0,1,3,1
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary.remove(int)",1,0,n/a,3,0,1,1,1
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary.throwOnCollision(TexturePackTextureRegion)",8,1,n/a,7,1,1,4,3
"org.andengine.util.texturepack.exception.TexturePackParseException.TexturePackParseException()",1,0,n/a,3,0,0,1,1
"org.andengine.util.texturepack.exception.TexturePackParseException.TexturePackParseException(Exception)",1,1,n/a,3,0,1,1,1
"org.andengine.util.texturepack.exception.TexturePackParseException.TexturePackParseException(String)",1,1,n/a,3,0,1,1,1
"org.andengine.util.texturepack.exception.TexturePackParseException.TexturePackParseException(String,Exception)",1,1,n/a,3,0,2,1,1

Class,CBO,CSA,CSO,CSOA,Dcy*,DIT,Inner,LCOM,LOC,NCLOC,NOC,NOIC,NOOC,OCavg,Query,RFC,WMC
"org.andengine.AndEngine",4,0,5,5,12,0,0,1,68,38,0,0,0,"1,20",1,9,6
"org.andengine.audio.BaseAudioEntity",5,4,32,36,4,0,1,1,117,89,2,0,0,"1,05",8,21,20
"org.andengine.audio.BaseAudioManager",7,2,10,12,2,0,1,1,62,34,2,0,0,"1,40",2,8,7
"org.andengine.audio.IAudioEntity",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,12,n/a
"org.andengine.audio.IAudioManager",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.andengine.audio.exception.AudioException",2,1,8,9,1,1,0,0,42,15,0,0,0,"1,00",0,8,4
"org.andengine.audio.music.Music",6,5,47,52,9,1,1,2,104,76,0,9,9,"1,00",3,27,15
"org.andengine.audio.music.MusicFactory",4,1,7,8,10,0,0,4,79,48,0,0,0,"1,14",5,9,8
"org.andengine.audio.music.MusicLibrary",2,1,6,7,11,1,0,0,29,2,0,4,0,n/a,0,0,0
"org.andengine.audio.music.MusicManager",5,2,11,13,9,1,1,0,32,4,0,5,0,"1,00",0,1,1
"org.andengine.audio.music.exception.MusicException",2,1,8,9,1,1,0,0,42,15,1,0,0,"1,00",0,8,4
"org.andengine.audio.music.exception.MusicReleasedException",2,1,8,9,2,2,0,0,30,3,0,0,0,n/a,0,0,0
"org.andengine.audio.sound.Sound",5,9,51,60,9,1,1,2,136,108,0,9,9,"1,37",6,32,26
"org.andengine.audio.sound.SoundFactory",3,1,9,10,10,0,0,5,90,59,0,0,0,"1,11",7,12,10
"org.andengine.audio.sound.SoundLibrary",2,1,6,7,11,1,0,0,30,2,0,4,0,n/a,0,0,0
"org.andengine.audio.sound.SoundManager",7,6,17,23,9,1,1,2,73,45,0,4,3,"1,43",2,13,10
"org.andengine.audio.sound.exception.SoundException",3,1,8,9,1,1,0,0,42,15,1,0,0,"1,00",0,8,4
"org.andengine.audio.sound.exception.SoundReleasedException",2,1,8,9,2,2,0,0,30,3,0,0,0,n/a,0,0,0
"org.andengine.engine.Engine",55,31,74,105,213,0,1,6,594,519,4,0,0,"1,56",32,164,114
"org.andengine.engine.Engine.EngineDestroyedException",1,1,0,1,0,0,0,0,24,3,0,0,0,n/a,0,0,0
"org.andengine.engine.Engine.EngineLock",2,3,5,8,0,0,0,1,47,26,0,0,0,"1,40",0,5,7
"org.andengine.engine.Engine.UpdateThread",5,2,4,6,213,0,0,1,49,28,0,0,0,"1,50",0,9,6
"org.andengine.engine.FixedStepEngine",3,30,75,105,214,1,1,1,48,17,0,66,1,"1,50",0,4,3
"org.andengine.engine.LimitedFPSEngine",3,29,75,104,214,1,1,1,51,19,0,66,1,"1,50",0,4,3
"org.andengine.engine.camera.BoundCamera",3,25,95,120,101,1,1,1,149,113,1,65,1,"1,60",9,25,24
"org.andengine.engine.camera.Camera",53,18,81,99,100,0,1,5,458,428,1,0,0,"1,34",31,100,106
"org.andengine.engine.camera.CameraFactory",1,0,2,2,101,0,0,1,39,11,0,0,0,"1,00",2,3,2
"org.andengine.engine.camera.SmoothCamera",3,32,129,161,103,3,1,1,159,129,0,87,3,"1,43",9,28,30
"org.andengine.engine.camera.ZoomCamera",6,26,108,134,102,2,1,1,126,97,1,69,10,"1,69",7,32,22
"org.andengine.engine.camera.hud.HUD",4,53,327,380,100,3,4,0,37,6,1,187,0,"1,00",0,3,1
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl",10,60,348,408,113,5,6,3,67,39,0,193,3,"1,12",2,18,9
"org.andengine.engine.camera.hud.controls.AnalogOnScreenControl.IAnalogOnScreenControlListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl",17,60,339,399,108,4,5,2,147,106,2,187,0,"1,62",5,28,21
"org.andengine.engine.camera.hud.controls.BaseOnScreenControl.IOnScreenControlListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.engine.camera.hud.controls.DigitalOnScreenControl",6,63,345,408,109,5,5,1,97,69,0,195,1,"3,83",2,10,23
"org.andengine.engine.handler.BaseEntityUpdateHandler",4,1,8,9,101,0,1,2,48,20,1,0,0,"1,00",1,6,5
"org.andengine.engine.handler.DrawHandlerList",5,1,27,28,101,1,1,1,42,15,0,21,0,"1,33",0,6,4
"org.andengine.engine.handler.IDrawHandler",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.engine.handler.IUpdateHandler",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.engine.handler.IUpdateHandler.IUpdateHandlerMatcher",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.engine.handler.UpdateHandlerList",5,1,29,30,4,1,1,2,50,22,0,21,0,"1,50",0,8,6
"org.andengine.engine.handler.collision.CollisionHandler",4,3,6,9,105,0,1,2,67,39,0,0,0,"2,50",0,6,10
"org.andengine.engine.handler.collision.ICollisionCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.engine.handler.physics.PhysicsHandler",5,7,28,35,102,1,1,1,126,95,0,3,1,"1,20",6,26,24
"org.andengine.engine.handler.runnable.RunnableHandler",4,1,5,6,1,0,1,1,46,18,0,0,0,"1,33",0,3,4
"org.andengine.engine.handler.timer.ITimerCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.engine.handler.timer.TimerHandler",4,5,13,18,2,0,1,1,93,65,0,0,0,"1,55",4,12,17
"org.andengine.engine.options.AudioOptions",5,2,6,8,12,0,0,2,51,24,0,0,0,"1,00",6,10,6
"org.andengine.engine.options.EngineOptions",19,11,18,29,213,0,0,11,102,71,0,0,0,"1,00",14,18,18
"org.andengine.engine.options.MusicOptions",1,1,2,3,0,0,0,1,37,10,0,0,0,"1,00",2,2,2
"org.andengine.engine.options.RenderOptions",4,2,4,6,0,0,0,2,44,16,0,0,0,"1,00",2,4,4
"org.andengine.engine.options.ScreenOrientation",2,4,0,4,0,n/a,0,0,40,6,n/a,0,0,n/a,0,0,0
"org.andengine.engine.options.SoundOptions",3,2,4,6,10,0,0,2,45,18,0,0,0,"1,00",4,4,4
"org.andengine.engine.options.TouchOptions",2,3,4,7,0,0,0,2,45,18,0,0,0,"1,00",3,4,4
"org.andengine.engine.options.WakeLockOptions",2,5,2,7,0,n/a,0,1,48,13,n/a,0,0,"1,00",1,2,2
"org.andengine.engine.options.resolutionpolicy.BaseResolutionPolicy",5,0,2,2,214,0,1,1,37,9,4,0,0,"2,00",0,1,2
"org.andengine.engine.options.resolutionpolicy.FillResolutionPolicy",2,0,2,2,215,1,1,1,37,9,0,0,0,"1,00",0,3,1
"org.andengine.engine.options.resolutionpolicy.FixedResolutionPolicy",2,2,3,5,215,1,1,1,40,12,0,0,0,"1,00",0,3,2
"org.andengine.engine.options.resolutionpolicy.IResolutionPolicy",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy",2,1,4,5,215,1,1,1,55,27,0,0,0,"1,33",0,5,4
"org.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy",2,2,4,6,215,1,1,1,46,18,0,0,0,"1,00",0,5,3
"org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine",7,30,90,120,214,1,1,3,137,107,0,57,10,"1,35",8,32,23
"org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine",6,29,82,111,214,1,1,1,101,71,0,61,6,"1,33",4,20,12
"org.andengine.entity.Entity",56,40,273,313,100,0,4,7,1.136,1.028,5,0,0,"1,56",72,213,229
"org.andengine.entity.IEntity",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,122,n/a
"org.andengine.entity.IEntityComparator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.IEntityFactory",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.IEntityMatcher",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.IEntityParameterCallable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.TagEntityMatcher",2,1,6,7,101,0,2,1,43,16,0,0,0,"1,00",2,5,4
"org.andengine.entity.ZIndexSorter",5,2,17,19,100,2,0,2,63,35,0,6,0,"1,11",1,14,10
"org.andengine.entity.modifier.AlphaModifier",8,8,55,63,108,4,2,3,57,29,2,16,0,"1,00",1,12,8
"org.andengine.entity.modifier.CardinalSplineMoveModifier",9,9,43,52,109,3,2,4,122,87,1,11,0,"1,10",4,19,11
"org.andengine.entity.modifier.CardinalSplineMoveModifier.CardinalSplineMoveModifierConfig",4,4,7,11,4,0,0,1,65,40,1,0,0,"1,14",5,8,8
"org.andengine.entity.modifier.CatmullRomSplineMoveModifier",4,9,45,54,111,4,2,0,41,14,0,15,0,"1,00",0,8,4
"org.andengine.entity.modifier.CatmullRomSplineMoveModifier.CatmullRomMoveModifierConfig",2,4,8,12,5,1,0,0,27,6,0,6,0,"1,00",0,2,1
"org.andengine.entity.modifier.ColorModifier",6,12,85,97,110,6,2,3,69,41,0,32,0,"1,00",1,19,12
"org.andengine.entity.modifier.CubicBezierCurveMoveModifier",6,14,40,54,107,3,2,2,133,53,0,11,0,"1,00",1,12,7
"org.andengine.entity.modifier.DelayModifier",3,5,39,44,105,3,2,3,49,21,0,11,0,"1,00",1,9,6
"org.andengine.entity.modifier.DoubleValueChangeEntityModifier",5,7,44,51,106,4,2,0,38,11,1,14,0,"1,00",0,6,3
"org.andengine.entity.modifier.DoubleValueSpanEntityModifier",8,10,64,74,108,4,2,0,45,17,3,26,0,"1,00",0,10,5
"org.andengine.entity.modifier.DurationEntityModifier",8,5,33,38,104,2,2,0,39,11,4,11,0,"1,00",0,6,3
"org.andengine.entity.modifier.EntityModifier",5,3,23,26,103,1,2,0,36,8,1,7,0,"1,00",0,4,2
"org.andengine.entity.modifier.EntityModifierList",3,2,33,35,100,2,1,0,37,9,0,25,0,"1,00",0,4,2
"org.andengine.entity.modifier.FadeInModifier",4,8,61,69,109,5,2,1,49,21,0,18,1,"1,00",1,10,6
"org.andengine.entity.modifier.FadeOutModifier",4,8,61,69,109,5,2,1,49,21,0,18,1,"1,00",1,10,6
"org.andengine.entity.modifier.IEntityModifier",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.modifier.IEntityModifier.IEntityModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.modifier.IEntityModifier.IEntityModifierMatcher",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.modifier.JumpModifier",6,13,83,96,110,6,2,2,73,46,0,27,2,"1,00",1,15,11
"org.andengine.entity.modifier.LoopEntityModifier",6,11,45,56,106,2,3,1,52,24,0,15,1,"1,00",1,13,7
"org.andengine.entity.modifier.LoopEntityModifier.ILoopEntityModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.modifier.MoveByModifier",3,7,49,56,107,5,2,2,46,19,0,14,0,"1,00",1,11,5
"org.andengine.entity.modifier.MoveModifier",8,10,72,82,109,5,2,3,57,29,1,26,0,"1,00",1,12,8
"org.andengine.entity.modifier.MoveXModifier",5,8,55,63,108,4,2,3,57,29,0,16,0,"1,00",1,12,8
"org.andengine.entity.modifier.MoveYModifier",5,8,55,63,108,4,2,3,57,29,0,16,0,"1,00",1,12,8
"org.andengine.entity.modifier.ParallelEntityModifier",5,7,37,44,104,2,3,1,43,15,0,13,1,"1,00",1,7,4
"org.andengine.entity.modifier.PathModifier",13,6,41,47,116,2,2,4,144,114,0,6,1,"1,27",7,34,28
"org.andengine.entity.modifier.PathModifier.IPathModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.andengine.entity.modifier.PathModifier.Path",2,5,11,16,1,0,0,2,93,72,0,0,0,"1,27",7,11,14
"org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier",6,12,40,52,107,3,2,2,116,46,0,11,0,"1,00",1,12,7
"org.andengine.entity.modifier.RotationAtModifier",6,10,62,72,109,5,2,2,60,32,0,18,2,"1,00",1,12,7
"org.andengine.entity.modifier.RotationByModifier",3,6,44,50,106,4,2,2,47,19,0,13,0,"1,00",1,10,5
"org.andengine.entity.modifier.RotationModifier",6,8,55,63,108,4,2,3,57,29,1,16,0,"1,00",1,12,8
"org.andengine.entity.modifier.ScaleAtModifier",6,12,87,99,110,6,2,2,72,44,0,28,2,"1,00",1,16,11
"org.andengine.entity.modifier.ScaleModifier",6,10,76,86,109,5,2,3,69,41,1,26,0,"1,00",1,16,12
"org.andengine.entity.modifier.SequenceEntityModifier",6,9,43,52,107,2,3,1,49,21,0,15,1,"1,00",1,11,6
"org.andengine.entity.modifier.SequenceEntityModifier.ISubSequenceShapeModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.modifier.SingleValueChangeEntityModifier",5,6,39,45,105,3,2,0,39,11,1,13,0,"1,00",0,6,3
"org.andengine.entity.modifier.SingleValueSpanEntityModifier",11,8,47,55,107,3,2,0,45,17,6,16,0,"1,00",0,10,5
"org.andengine.entity.modifier.SkewModifier",5,10,72,82,109,5,2,3,56,29,0,26,0,"1,00",1,12,8
"org.andengine.entity.modifier.SkewXModifier",5,8,55,63,108,4,2,3,56,29,0,16,0,"1,00",1,12,8
"org.andengine.entity.modifier.SkewYModifier",5,8,55,63,108,4,2,3,56,29,0,16,0,"1,00",1,12,8
"org.andengine.entity.modifier.TripleValueSpanEntityModifier",6,12,73,85,109,5,2,0,39,11,1,32,0,"1,00",0,6,3
"org.andengine.entity.particle.BatchedPseudoSpriteParticleSystem",11,50,304,354,117,3,4,1,59,30,0,160,1,"1,25",0,18,5
"org.andengine.entity.particle.BatchedSpriteParticleSystem",13,49,304,353,121,3,4,1,58,28,0,160,1,"1,25",0,16,5
"org.andengine.entity.particle.BlendFunctionParticleSystem",9,48,301,349,109,2,4,1,73,46,2,151,2,"1,18",3,16,13
"org.andengine.entity.particle.Particle",31,6,11,17,103,0,0,1,89,60,0,0,0,"1,27",5,18,14
"org.andengine.entity.particle.ParticleSystem",15,46,290,336,108,1,4,1,168,133,2,137,3,"1,71",4,30,29
"org.andengine.entity.particle.SpriteParticleSystem",6,45,293,338,113,2,4,0,43,16,0,153,0,"1,00",0,4,4
"org.andengine.entity.particle.emitter.BaseCircleParticleEmitter",3,4,19,23,3,1,2,1,60,32,2,7,0,"1,00",2,9,8
"org.andengine.entity.particle.emitter.BaseParticleEmitter",8,2,11,13,2,0,2,3,58,30,3,0,0,"1,00",2,8,8
"org.andengine.entity.particle.emitter.BaseRectangleParticleEmitter",3,6,17,23,3,1,2,2,56,28,2,7,0,"1,00",2,7,6
"org.andengine.entity.particle.emitter.CircleOutlineParticleEmitter",5,4,22,26,8,2,2,1,42,14,0,13,0,"1,00",0,5,3
"org.andengine.entity.particle.emitter.CircleParticleEmitter",5,4,22,26,8,2,2,1,42,14,0,13,0,"1,00",0,5,3
"org.andengine.entity.particle.emitter.IParticleEmitter",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.particle.emitter.PointParticleEmitter",2,2,13,15,4,1,2,1,38,10,0,7,0,"1,00",0,3,2
"org.andengine.entity.particle.emitter.RectangleOutlineParticleEmitter",4,6,19,25,8,2,2,1,38,10,0,11,0,"1,00",0,4,2
"org.andengine.entity.particle.emitter.RectangleParticleEmitter",4,6,19,25,8,2,2,1,38,10,0,11,0,"1,00",0,3,2
"org.andengine.entity.particle.initializer.AccelerationParticleInitializer",6,4,22,26,107,2,1,2,77,49,1,4,0,"1,00",4,16,13
"org.andengine.entity.particle.initializer.AlphaParticleInitializer",3,2,8,10,106,1,1,1,40,12,0,2,0,"1,00",0,6,3
"org.andengine.entity.particle.initializer.BaseDoubleValueParticleInitializer",7,4,9,13,106,1,1,1,49,21,3,2,0,"1,33",1,6,4
"org.andengine.entity.particle.initializer.BaseSingleValueParticleInitializer",10,2,5,7,105,0,1,1,48,20,4,0,0,"1,33",1,5,4
"org.andengine.entity.particle.initializer.BaseTripleValueParticleInitializer",5,6,13,19,107,2,1,1,49,21,1,4,0,"1,33",1,6,4
"org.andengine.entity.particle.initializer.BlendFunctionParticleInitializer",3,2,3,5,105,0,1,1,43,12,0,0,0,"1,00",0,4,2
"org.andengine.entity.particle.initializer.ColorParticleInitializer",4,6,18,24,108,3,1,1,46,18,0,6,0,"1,00",0,11,5
"org.andengine.entity.particle.initializer.GravityParticleInitializer",2,4,23,27,108,3,1,0,33,5,0,14,0,"1,00",0,2,1
"org.andengine.entity.particle.initializer.IParticleInitializer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.particle.initializer.RotationParticleInitializer",3,2,12,14,106,1,1,2,54,26,0,2,0,"1,00",2,10,7
"org.andengine.entity.particle.initializer.ScaleParticleInitializer",3,2,8,10,106,1,1,1,39,12,0,2,0,"1,00",0,6,3
"org.andengine.entity.particle.initializer.VelocityParticleInitializer",5,4,22,26,107,2,1,2,77,49,0,4,0,"1,00",4,16,13
"org.andengine.entity.particle.modifier.AlphaParticleModifier",5,6,13,19,109,1,2,2,44,16,0,3,0,"1,00",0,8,4
"org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier",7,8,17,25,109,1,2,2,60,32,2,2,1,"1,00",0,11,6
"org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier",8,6,9,15,108,0,2,1,68,40,3,0,0,"1,20",0,10,6
"org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier",6,10,25,35,110,2,2,2,60,32,1,6,1,"1,00",0,11,6
"org.andengine.entity.particle.modifier.ColorParticleModifier",5,10,29,39,111,3,2,2,44,16,0,11,0,"1,00",0,8,4
"org.andengine.entity.particle.modifier.ExpireParticleInitializer",4,2,8,10,105,0,1,1,57,29,0,0,0,"1,00",2,8,7
"org.andengine.entity.particle.modifier.IParticleModifier",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.particle.modifier.OffCameraExpireParticleModifier",4,1,6,7,106,0,2,2,46,18,0,0,0,"1,25",1,7,5
"org.andengine.entity.particle.modifier.RotationParticleModifier",5,6,13,19,109,1,2,2,44,16,0,3,0,"1,00",0,8,4
"org.andengine.entity.particle.modifier.ScaleParticleModifier",5,8,23,31,110,2,2,2,50,22,0,7,0,"1,00",0,10,6
"org.andengine.entity.primitive.DrawMode",1,8,2,10,0,n/a,0,1,46,16,n/a,0,0,"1,00",1,2,2
"org.andengine.entity.primitive.Line",20,50,337,387,100,2,6,9,209,157,0,144,12,"1,07",13,52,30
"org.andengine.entity.primitive.Mesh",17,46,323,369,104,2,6,3,112,77,0,152,4,"1,14",4,32,16
"org.andengine.entity.primitive.Rectangle",14,48,342,390,103,3,7,1,86,52,0,168,4,"1,00",1,23,9
"org.andengine.entity.primitive.vbo.HighPerformanceLineVertexBufferObject",9,11,53,64,100,2,3,1,49,22,0,23,0,"1,00",0,11,3
"org.andengine.entity.primitive.vbo.HighPerformanceMeshVertexBufferObject",9,12,54,66,104,2,3,2,48,20,0,23,0,"1,33",0,7,4
"org.andengine.entity.primitive.vbo.HighPerformanceRectangleVertexBufferObject",10,11,53,64,103,2,3,1,59,32,0,23,0,"1,00",0,9,3
"org.andengine.entity.primitive.vbo.ILineVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.entity.primitive.vbo.IMeshVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.andengine.entity.primitive.vbo.IRectangleVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.entity.primitive.vbo.LowMemoryLineVertexBufferObject",9,10,52,62,102,2,3,1,49,22,0,23,0,"1,00",0,11,3
"org.andengine.entity.primitive.vbo.LowMemoryRectangleVertexBufferObject",10,10,52,62,105,2,3,1,59,32,0,23,0,"1,00",0,9,3
"org.andengine.entity.scene.CameraScene",10,53,326,379,100,2,4,1,87,56,2,176,3,"1,30",3,22,13
"org.andengine.entity.scene.IOnAreaTouchListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.scene.IOnSceneTouchListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.scene.ITouchArea",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.andengine.entity.scene.ITouchArea.ITouchAreaMatcher",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.scene.Scene",31,53,316,369,100,1,4,2,376,303,1,136,4,"1,88",18,76,81
"org.andengine.entity.scene.background.AutoParallaxBackground",2,7,35,42,103,2,3,1,43,15,0,14,1,"1,00",0,5,3
"org.andengine.entity.scene.background.Background",11,4,27,31,100,0,3,2,119,78,2,0,0,"1,31",2,30,21
"org.andengine.entity.scene.background.EntityBackground",7,4,30,34,101,1,3,1,43,15,1,10,1,"1,00",0,6,3
"org.andengine.entity.scene.background.IBackground",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,8,n/a
"org.andengine.entity.scene.background.ParallaxBackground",5,6,32,38,102,1,3,1,60,32,1,10,1,"1,40",1,7,7
"org.andengine.entity.scene.background.ParallaxBackground.ParallaxEntity",5,2,2,4,101,0,0,1,48,27,0,0,0,"2,00",0,8,4
"org.andengine.entity.scene.background.RepeatingSpriteBackground",14,6,37,43,143,3,3,1,62,28,0,13,0,"1,00",2,15,4
"org.andengine.entity.scene.background.SpriteBackground",3,4,33,37,106,2,3,1,39,11,1,12,0,"1,00",1,5,3
"org.andengine.entity.scene.background.modifier.ColorBackgroundModifier",7,12,82,94,110,5,2,3,69,41,0,32,0,"1,00",1,19,12
"org.andengine.entity.scene.background.modifier.IBackgroundModifier",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.scene.background.modifier.IBackgroundModifier.IBackgroundModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.scene.background.modifier.LoopBackgroundModifier",6,11,45,56,107,2,3,1,52,24,0,15,1,"1,00",1,12,7
"org.andengine.entity.scene.background.modifier.LoopBackgroundModifier.ILoopBackgroundModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.scene.background.modifier.ParallelBackgroundModifier",5,7,37,44,105,2,3,1,43,15,0,13,1,"1,00",1,7,4
"org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier",6,9,43,52,108,2,3,1,49,21,0,15,1,"1,00",1,11,6
"org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier.ISubSequenceBackgroundModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.scene.menu.MenuScene",11,57,348,405,115,3,6,3,155,127,0,181,5,"1,50",5,40,30
"org.andengine.entity.scene.menu.MenuScene.IOnMenuItemClickListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.scene.menu.animator.AlphaMenuAnimator",9,5,22,27,113,1,1,1,95,67,0,2,0,"1,50",0,26,15
"org.andengine.entity.scene.menu.animator.BaseMenuAnimator",9,6,12,18,113,0,1,2,79,51,3,0,0,"1,20",2,13,12
"org.andengine.entity.scene.menu.animator.DirectMenuAnimator",5,3,18,21,114,1,1,2,73,45,0,2,0,"1,67",0,15,10
"org.andengine.entity.scene.menu.animator.IMenuAnimator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.andengine.entity.scene.menu.animator.SlideMenuAnimator",8,3,22,25,117,1,1,1,98,70,0,2,0,"1,50",0,26,15
"org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem",7,54,440,494,115,6,8,3,94,61,0,226,0,"1,00",1,27,15
"org.andengine.entity.scene.menu.item.IMenuItem",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.andengine.entity.scene.menu.item.SpriteMenuItem",7,45,377,422,106,4,8,3,94,61,0,188,0,"1,00",1,27,15
"org.andengine.entity.scene.menu.item.TextMenuItem",8,53,399,452,121,4,8,3,114,81,0,200,0,"1,00",1,37,20
"org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator",24,1,308,309,102,0,8,1,646,616,2,0,0,"1,00",85,306,152
"org.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator",4,3,312,315,103,1,8,2,53,22,0,151,0,"1,00",0,6,4
"org.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator",3,3,312,315,103,1,8,2,53,22,0,151,0,"1,00",0,7,4
"org.andengine.entity.shape.IAreaShape",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.andengine.entity.shape.IShape",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,12,n/a
"org.andengine.entity.shape.RectangularShape",29,40,333,373,100,2,7,4,117,89,3,153,4,"1,12",9,26,19
"org.andengine.entity.shape.Shape",19,38,309,347,100,1,6,6,122,94,4,136,4,"1,21",6,33,23
"org.andengine.entity.sprite.AnimatedSprite",13,54,422,476,113,5,7,1,280,209,1,197,1,"1,37",1,74,56
"org.andengine.entity.sprite.AnimatedSprite.IAnimationListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.andengine.entity.sprite.AnimationData",7,7,55,62,7,0,1,2,228,158,0,0,0,"1,26",9,40,43
"org.andengine.entity.sprite.ButtonSprite",11,50,397,447,114,5,7,1,132,101,0,196,2,"1,88",5,31,30
"org.andengine.entity.sprite.ButtonSprite.OnClickListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.entity.sprite.ButtonSprite.State",1,4,2,6,0,n/a,0,1,36,12,n/a,0,0,"1,00",1,2,2
"org.andengine.entity.sprite.DiamondSprite",7,44,371,415,107,4,7,0,79,38,0,188,0,"1,00",0,17,12
"org.andengine.entity.sprite.IAnimationData",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,21,n/a
"org.andengine.entity.sprite.Sprite",37,53,359,412,104,3,7,1,153,125,6,165,5,"1,12",4,48,29
"org.andengine.entity.sprite.TiledSprite",15,49,381,430,108,4,7,2,108,80,2,180,6,"1,00",5,34,22
"org.andengine.entity.sprite.UncoloredSprite",13,52,372,424,108,4,7,1,81,52,0,186,1,"1,00",0,21,13
"org.andengine.entity.sprite.UniformColorSprite",17,52,373,425,108,4,7,2,86,58,0,183,2,"1,00",0,28,14
"org.andengine.entity.sprite.batch.DynamicSpriteBatch",7,43,392,435,108,3,6,1,76,46,1,210,1,"1,08",1,24,14
"org.andengine.entity.sprite.batch.SpriteBatch",29,54,378,432,107,2,6,4,581,386,1,149,5,"1,20",5,114,83
"org.andengine.entity.sprite.batch.SpriteGroup",11,43,409,452,109,4,6,3,131,88,0,211,1,"1,29",1,36,22
"org.andengine.entity.sprite.batch.vbo.HighPerformanceSpriteBatchVertexBufferObject",7,12,57,69,107,2,3,1,209,172,0,23,0,"1,40",1,12,7
"org.andengine.entity.sprite.batch.vbo.ISpriteBatchVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.andengine.entity.sprite.batch.vbo.LowMemorySpriteBatchVertexBufferObject",7,11,56,67,109,2,3,1,209,172,0,23,0,"1,40",1,12,7
"org.andengine.entity.sprite.vbo.HighPerformanceDiamondSpriteVertexBufferObject",11,11,58,69,106,3,4,1,107,80,0,24,2,"2,33",0,15,7
"org.andengine.entity.sprite.vbo.HighPerformanceSpriteVertexBufferObject",14,11,55,66,104,2,3,1,113,86,3,23,0,"2,00",0,18,8
"org.andengine.entity.sprite.vbo.HighPerformanceTiledSpriteVertexBufferObject",14,11,62,73,108,3,4,1,143,116,0,26,0,"2,75",0,20,11
"org.andengine.entity.sprite.vbo.HighPerformanceUncoloredSpriteVertexBufferObject",11,11,58,69,108,3,4,1,103,76,0,24,2,"2,33",0,15,7
"org.andengine.entity.sprite.vbo.HighPerformanceUniformColorSpriteVertexBufferObject",10,11,55,66,108,2,4,2,107,79,0,23,0,"2,00",0,16,8
"org.andengine.entity.sprite.vbo.IDiamondSpriteVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.sprite.vbo.ISpriteVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.andengine.entity.sprite.vbo.ITiledSpriteVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.andengine.entity.sprite.vbo.IUncoloredSpriteVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.sprite.vbo.IUniformColorSpriteVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.entity.sprite.vbo.LowMemoryDiamondSpriteVertexBufferObject",10,10,57,67,108,3,4,1,107,80,0,24,2,"2,33",0,15,7
"org.andengine.entity.sprite.vbo.LowMemorySpriteVertexBufferObject",14,10,54,64,106,2,3,1,113,86,3,23,0,"2,00",0,18,8
"org.andengine.entity.sprite.vbo.LowMemoryTiledSpriteVertexBufferObject",14,10,61,71,111,3,4,1,143,116,0,26,0,"2,75",0,20,11
"org.andengine.entity.sprite.vbo.LowMemoryUncoloredSpriteVertexBufferObject",10,10,57,67,108,3,4,1,107,80,0,24,2,"2,33",0,15,7
"org.andengine.entity.sprite.vbo.LowMemoryUniformColorSpriteVertexBufferObject",10,10,54,64,110,2,4,2,107,79,0,23,0,"2,00",0,16,8
"org.andengine.entity.text.AutoWrap",4,4,0,4,0,n/a,0,0,36,6,n/a,0,0,n/a,0,0,0
"org.andengine.entity.text.Text",29,63,376,439,119,3,7,1,246,212,2,168,4,"1,09",13,69,47
"org.andengine.entity.text.TextOptions",5,4,13,17,119,0,0,4,75,48,1,0,0,"1,00",4,13,13
"org.andengine.entity.text.TickerText",10,56,387,443,121,4,7,1,91,63,0,192,5,"1,36",4,16,15
"org.andengine.entity.text.TickerText.TickerTextOptions",5,6,25,31,120,1,0,2,62,41,0,8,0,"1,00",2,13,12
"org.andengine.entity.text.exception.OutOfCharactersException",3,1,12,13,2,2,0,0,42,15,0,0,0,"1,00",0,8,4
"org.andengine.entity.text.exception.TextException",2,1,8,9,1,1,0,0,42,15,1,0,0,"1,00",0,8,4
"org.andengine.entity.text.vbo.HighPerformanceTextVertexBufferObject",13,11,53,64,119,2,3,1,126,98,0,23,0,"3,67",0,20,11
"org.andengine.entity.text.vbo.ITextVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.entity.text.vbo.LowMemoryTextVertexBufferObject",13,10,52,62,121,2,3,1,126,98,0,23,0,"3,67",0,20,11
"org.andengine.entity.util.AverageFPSCounter",2,4,9,13,2,1,1,1,48,20,1,2,1,"1,33",0,6,4
"org.andengine.entity.util.FPSCounter",3,2,5,7,1,0,1,1,45,17,1,0,0,"1,00",1,3,3
"org.andengine.entity.util.FPSLogger",5,5,15,20,8,2,1,1,64,36,0,1,2,"1,17",0,11,7
"org.andengine.entity.util.FrameCountCrasher",4,2,5,7,6,0,1,2,54,26,0,0,0,"2,00",0,4,6
"org.andengine.entity.util.FrameCounter",1,1,5,6,1,0,1,1,42,14,0,0,0,"1,00",1,3,3
"org.andengine.entity.util.ScreenCapture",8,37,283,320,104,1,5,3,77,47,0,137,3,"1,00",0,13,8
"org.andengine.entity.util.ScreenCapture.IScreenCaptureCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.entity.util.ScreenGrabber",5,40,279,319,102,1,4,3,88,54,0,137,3,"1,50",1,8,9
"org.andengine.entity.util.ScreenGrabber.IScreenGrabberCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.input.sensor.BaseSensorData",4,3,6,9,1,0,0,2,53,25,2,0,0,"1,00",3,6,6
"org.andengine.input.sensor.SensorDelay",3,5,2,7,0,n/a,0,1,44,13,n/a,0,0,"1,00",1,2,2
"org.andengine.input.sensor.acceleration.AccelerationData",4,4,15,19,3,1,0,1,99,71,0,3,2,"1,00",4,12,13
"org.andengine.input.sensor.acceleration.AccelerationData.IAxisSwap",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.input.sensor.acceleration.AccelerationSensorOptions",3,1,2,3,1,0,0,1,37,9,0,0,0,"1,00",1,2,2
"org.andengine.input.sensor.acceleration.IAccelerationListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.input.sensor.location.ILocationListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.andengine.input.sensor.location.LocationProviderStatus",2,3,0,3,0,n/a,0,0,36,5,n/a,0,0,n/a,0,0,0
"org.andengine.input.sensor.location.LocationSensorOptions",3,5,8,13,1,0,0,3,88,38,0,0,0,"1,00",3,8,8
"org.andengine.input.sensor.orientation.IOrientationListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.input.sensor.orientation.OrientationData",5,7,20,27,3,1,0,6,103,67,0,2,3,"1,21",6,18,17
"org.andengine.input.sensor.orientation.OrientationSensorOptions",3,1,2,3,1,0,0,1,37,9,0,0,0,"1,00",1,2,2
"org.andengine.input.touch.TouchEvent",30,12,16,28,6,0,0,1,103,70,0,0,0,"1,00",11,18,16
"org.andengine.input.touch.TouchEvent.TouchEventPool",2,4,16,20,6,1,0,1,9,6,0,10,0,"1,00",1,1,1
"org.andengine.input.touch.controller.BaseTouchController",8,2,9,11,21,0,2,2,57,29,2,0,0,"1,00",0,12,6
"org.andengine.input.touch.controller.BaseTouchController.TouchEventRunnablePoolItem",5,3,9,12,21,2,0,1,26,17,0,5,1,"1,00",0,7,3
"org.andengine.input.touch.controller.ITouchController",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.input.touch.controller.ITouchEventCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.input.touch.controller.MultiTouch",1,2,2,4,7,0,0,2,44,16,0,0,0,"2,00",2,3,4
"org.andengine.input.touch.controller.MultiTouchController",2,2,13,15,22,1,2,1,68,40,0,4,0,"2,50",1,5,10
"org.andengine.input.touch.controller.SingleTouchController",2,2,11,13,22,1,2,1,36,8,0,4,0,"1,00",0,3,2
"org.andengine.input.touch.detector.BaseDetector",9,1,7,8,101,0,1,2,50,22,5,0,0,"1,25",4,6,5
"org.andengine.input.touch.detector.ClickDetector",4,6,14,20,103,1,1,1,83,54,0,4,0,"1,71",2,13,12
"org.andengine.input.touch.detector.ClickDetector.IClickDetectorListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.input.touch.detector.ContinuousHoldDetector",5,14,29,43,106,2,2,1,117,83,0,12,3,"2,50",1,21,20
"org.andengine.input.touch.detector.HoldDetector",4,14,20,34,103,1,1,1,181,149,1,4,0,"2,62",4,21,34
"org.andengine.input.touch.detector.HoldDetector.IHoldDetectorListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.andengine.input.touch.detector.PinchZoomDetector",4,6,14,20,103,1,1,1,104,70,0,4,0,"2,43",5,12,17
"org.andengine.input.touch.detector.PinchZoomDetector.IPinchZoomDetectorListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.andengine.input.touch.detector.ScrollDetector",4,8,19,27,103,1,1,1,133,105,1,4,0,"2,17",4,19,26
"org.andengine.input.touch.detector.ScrollDetector.IScrollDetectorListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.andengine.input.touch.detector.SurfaceGestureDetector",4,3,17,20,103,1,1,8,52,23,1,4,0,"1,00",7,12,4
"org.andengine.input.touch.detector.SurfaceGestureDetector.InnerOnGestureDetectorListener",1,1,4,5,103,0,0,3,54,33,0,0,0,"2,25",3,10,9
"org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter",1,2,25,27,104,2,1,6,59,32,0,6,0,"1,00",6,10,8
"org.andengine.input.touch.detector.SurfaceScrollDetector",3,7,23,30,104,2,1,2,44,16,0,8,2,"1,00",2,7,4
"org.andengine.opengl.GLES20Fix",3,2,5,7,8,0,0,2,69,41,0,0,0,"2,33",0,7,9
"org.andengine.opengl.exception.GLException",3,2,4,6,0,0,0,2,48,21,1,0,0,"1,25",2,4,5
"org.andengine.opengl.exception.GLFrameBufferException",3,2,5,7,1,1,0,0,36,9,0,1,0,"1,00",0,4,2
"org.andengine.opengl.exception.RenderTextureInitializationException",2,1,8,9,1,1,0,0,42,15,0,0,0,"1,00",0,8,4
"org.andengine.opengl.font.BitmapFont",14,93,32,125,125,0,1,11,380,333,0,0,0,"1,96",16,39,53
"org.andengine.opengl.font.BitmapFont.BitmapFontInfo",4,21,16,37,125,0,0,15,120,99,0,0,0,"1,19",15,21,19
"org.andengine.opengl.font.BitmapFont.BitmapFontOptions",1,3,3,6,0,0,0,2,36,15,0,0,0,"1,00",2,3,3
"org.andengine.opengl.font.BitmapFont.BitmapFontPage",7,2,3,5,125,0,0,2,44,23,0,0,0,"1,67",2,8,5
"org.andengine.opengl.font.Font",14,16,23,39,33,0,1,1,215,173,1,0,0,"1,72",9,35,31
"org.andengine.opengl.font.FontFactory",10,3,30,33,135,0,0,3,130,99,0,0,0,"1,03",28,34,31
"org.andengine.opengl.font.FontLibrary",3,1,9,10,35,1,0,1,45,17,0,4,0,"1,67",0,6,5
"org.andengine.opengl.font.FontManager",8,1,8,9,33,0,0,2,77,49,0,0,0,"2,00",0,8,16
"org.andengine.opengl.font.FontUtils",7,1,11,12,30,0,0,3,350,245,0,0,0,"4,91",11,15,54
"org.andengine.opengl.font.FontUtils.MeasureDirection",1,2,0,2,0,n/a,0,0,28,4,n/a,0,0,n/a,0,0,0
"org.andengine.opengl.font.IFont",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.andengine.opengl.font.Letter",6,14,9,23,0,0,0,2,126,95,0,0,0,"1,67",5,9,15
"org.andengine.opengl.font.StrokeFont",5,18,29,47,34,1,1,1,69,39,0,12,2,"1,17",0,9,7
"org.andengine.opengl.font.exception.FontException",6,1,8,9,1,1,0,0,42,15,1,0,0,"1,00",0,8,4
"org.andengine.opengl.font.exception.LetterNotFoundException",3,1,12,13,2,2,0,0,42,15,0,0,0,"1,00",0,8,4
"org.andengine.opengl.shader.PositionColorShaderProgram",9,10,32,42,27,1,0,2,73,46,0,20,3,"1,20",1,11,6
"org.andengine.opengl.shader.PositionColorTextureCoordinatesShaderProgram",11,11,31,42,27,1,0,2,76,49,0,21,2,"1,25",1,9,5
"org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram",7,14,32,46,29,1,0,2,89,62,0,20,3,"1,20",1,11,6
"org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram",9,11,32,43,27,1,0,2,77,50,0,20,3,"1,20",1,11,6
"org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram",8,13,32,45,28,1,0,2,80,53,0,20,3,"1,20",1,11,6
"org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram",7,12,32,44,27,1,0,2,80,53,0,20,3,"1,20",1,11,6
"org.andengine.opengl.shader.ShaderProgram",35,13,28,41,26,0,0,2,271,228,6,0,0,"1,96",6,37,55
"org.andengine.opengl.shader.ShaderProgramManager",11,1,5,6,33,0,0,1,70,43,0,0,0,"2,20",0,13,11
"org.andengine.opengl.shader.constants.ShaderProgramConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.opengl.shader.exception.ShaderProgramCompileException",2,1,7,8,2,2,0,0,33,6,0,0,0,"1,00",0,2,1
"org.andengine.opengl.shader.exception.ShaderProgramException",5,1,6,7,1,1,0,0,36,9,2,0,0,"1,00",0,4,2
"org.andengine.opengl.shader.exception.ShaderProgramLinkException",8,1,8,9,2,2,0,0,36,9,0,0,0,"1,00",0,4,2
"org.andengine.opengl.shader.source.CriteriaShaderSource",5,1,3,4,23,0,1,1,43,16,0,0,0,"2,00",1,5,4
"org.andengine.opengl.shader.source.CriteriaShaderSource.CriteriaShaderSourceEntry",3,2,4,6,20,0,0,2,45,24,0,0,0,"1,75",2,5,7
"org.andengine.opengl.shader.source.IShaderSource",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.opengl.shader.source.StringShaderSource",3,1,3,4,20,0,1,1,37,10,0,0,0,"1,00",1,2,2
"org.andengine.opengl.texture.DebugTextureStateListener",5,0,4,4,23,0,1,1,41,14,0,0,0,"2,00",0,3,4
"org.andengine.opengl.texture.ITexture",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,21,n/a
"org.andengine.opengl.texture.ITextureStateListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.opengl.texture.PixelFormat",17,12,5,17,0,n/a,0,4,63,32,n/a,0,0,"1,00",4,5,5
"org.andengine.opengl.texture.Texture",13,7,42,49,116,0,1,3,138,105,5,0,0,"1,10",7,32,22
"org.andengine.opengl.texture.TextureManager",30,6,18,24,116,0,0,1,267,207,0,0,0,"3,00",13,31,54
"org.andengine.opengl.texture.TextureOptions",21,14,2,16,0,0,0,1,63,29,0,0,0,"1,00",0,2,2
"org.andengine.opengl.texture.TextureStateAdapter",3,0,4,4,23,0,1,2,35,8,0,0,0,"1,00",0,2,2
"org.andengine.opengl.texture.TextureWarmUpVertexBufferObject",10,18,47,65,109,1,2,4,83,55,0,19,0,"1,00",2,20,5
"org.andengine.opengl.texture.atlas.ITextureAtlas",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,11,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.DebugTextureAtlasStateListener",6,0,8,8,25,0,2,3,22,22,0,0,0,"1,50",0,5,6
"org.andengine.opengl.texture.atlas.ITextureAtlas.ITextureAtlasStateListener.TextureAtlasStateAdapter",4,0,8,8,25,0,2,4,10,10,0,0,0,"1,00",0,4,4
"org.andengine.opengl.texture.atlas.TextureAtlas",9,9,67,76,120,1,2,6,136,98,1,16,3,"1,71",6,25,24
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas",17,10,78,88,124,2,2,2,145,79,0,31,0,"1,73",1,27,19
"org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory",13,1,29,30,140,0,0,11,159,114,0,0,0,"1,07",27,37,31
"org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas",8,2,78,80,131,1,3,0,89,26,0,32,0,"1,00",0,10,8
"org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource",5,6,27,33,8,1,2,2,77,49,0,8,1,"1,00",5,8,6
"org.andengine.opengl.texture.atlas.bitmap.source.EmptyBitmapTextureAtlasSource",3,4,26,30,3,1,2,1,48,20,0,8,1,"1,00",3,6,5
"org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource",5,5,29,34,9,1,2,2,82,53,0,8,1,"1,00",7,12,8
"org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource",3,5,27,32,6,1,2,2,61,33,0,9,0,"1,20",2,7,6
"org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource",3,6,27,33,3,1,2,2,62,32,0,8,1,"1,00",5,7,6
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator",12,7,33,40,7,1,2,4,85,57,1,7,2,"1,20",7,19,12
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator.TextureAtlasSourceDecoratorOptions",14,6,13,19,0,0,0,1,80,59,0,0,0,"1,00",13,13,13
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator",10,8,35,43,9,2,2,2,41,13,5,16,0,"1,50",1,5,3
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator",7,11,53,64,13,4,2,1,58,30,0,17,1,"1,00",1,17,9
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator",7,12,44,56,12,3,2,1,67,39,1,17,0,"1,00",1,11,9
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.FillBitmapTextureAtlasSourceDecorator",5,9,38,47,10,3,2,1,44,16,0,17,0,"1,00",1,4,3
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator",7,11,40,51,11,3,2,1,60,32,0,17,0,"1,00",1,12,5
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator.LinearGradientDirection",1,12,5,17,0,n/a,0,4,56,32,n/a,0,0,"1,00",4,5,5
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.OutlineBitmapTextureAtlasSourceDecorator",5,9,38,47,10,3,2,1,44,16,0,17,0,"1,00",1,4,3
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator",8,12,40,52,15,3,2,1,68,40,0,17,0,"1,40",1,9,7
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator.RadialGradientDirection",1,2,0,2,0,n/a,0,0,28,4,n/a,0,0,n/a,0,0,0
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.ArcBitmapTextureAtlasSourceDecoratorShape",2,8,5,13,2,0,1,2,62,34,0,0,0,"1,25",1,8,5
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.CircleBitmapTextureAtlasSourceDecoratorShape",2,1,4,5,2,0,1,2,48,20,0,0,0,"1,33",1,7,4
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.EllipseBitmapTextureAtlasSourceDecoratorShape",2,2,4,6,2,0,1,2,49,21,0,0,0,"1,33",1,7,4
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.IBitmapTextureAtlasSourceDecoratorShape",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RectangleBitmapTextureAtlasSourceDecoratorShape",2,1,4,5,2,0,1,2,40,19,0,0,0,"1,33",1,7,4
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape",2,5,5,10,2,0,1,2,57,29,0,0,0,"1,25",1,8,5
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas",15,2,70,72,30,0,3,1,189,152,1,0,0,"1,06",12,64,35
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas.TextureAtlasSourceWithWithLocationCallback",5,2,3,5,2,0,0,2,35,14,0,0,0,"1,00",2,3,3
"org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlasTextureRegionFactory",6,0,2,2,36,0,0,2,65,31,0,0,0,"1,50",2,7,6
"org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder",9,4,3,7,31,0,1,1,82,47,0,0,0,"2,33",0,13,7
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Node",3,4,7,11,2,0,0,1,138,115,0,0,0,"3,29",5,14,23
"org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder.Rect",2,4,8,12,0,0,0,2,55,34,0,0,0,"1,00",7,8,8
"org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder.TextureAtlasBuilderException",4,1,1,2,0,0,0,0,27,6,0,0,0,"1,00",0,1,1
"org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource",7,4,19,23,1,0,1,4,76,48,6,0,0,"1,00",5,10,10
"org.andengine.opengl.texture.atlas.source.ITextureAtlasSource",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,9,n/a
"org.andengine.opengl.texture.bitmap.AssetBitmapTexture",6,10,56,66,117,2,1,0,44,17,0,23,0,"1,00",0,11,5
"org.andengine.opengl.texture.bitmap.BitmapTexture",15,10,51,61,116,1,1,3,97,68,2,19,0,"1,44",3,16,13
"org.andengine.opengl.texture.bitmap.BitmapTextureFormat",11,6,4,10,1,n/a,0,3,62,32,n/a,0,0,"2,25",3,4,9
"org.andengine.opengl.texture.bitmap.ResourceBitmapTexture",6,10,56,66,118,2,1,0,44,17,0,23,0,"1,00",0,11,5
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture",8,7,50,57,118,1,1,2,66,36,0,19,0,"1,00",3,16,7
"org.andengine.opengl.texture.compressed.etc1.ETC1Texture.ETC1TextureHeader",2,3,3,6,1,0,0,2,45,24,0,0,0,"1,67",2,3,5
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture",9,9,68,77,128,2,1,1,72,44,1,24,2,"1,00",2,26,10
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZCompressionFormat",3,5,3,8,1,n/a,0,2,57,33,n/a,0,0,"2,67",2,4,8
"org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture.CCZHeader",4,4,6,10,5,0,0,2,58,35,0,0,0,"1,17",5,8,7
"org.andengine.opengl.texture.compressed.pvr.PVRGZTexture",6,8,67,75,126,2,1,1,58,30,1,25,1,"1,00",1,18,9
"org.andengine.opengl.texture.compressed.pvr.PVRTexture",21,17,58,75,125,1,1,2,148,116,3,19,0,"1,53",7,34,23
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureFormat",7,10,6,16,2,n/a,0,4,78,49,n/a,0,0,"2,00",5,7,12
"org.andengine.opengl.texture.compressed.pvr.PVRTexture.PVRTextureHeader",7,5,16,21,7,0,0,2,88,66,0,0,0,"1,06",15,18,17
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy",6,0,4,4,125,0,1,2,40,11,0,0,0,"1,00",1,7,2
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy.GreedyPVRTexturePixelBufferStrategyBufferManager",3,1,3,4,125,0,1,1,33,12,0,0,0,"1,00",1,3,2
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy.IPVRTexturePixelBufferStrategyBufferManager",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy",7,1,5,6,127,0,1,2,59,28,0,0,0,"1,33",1,8,4
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy.SmartPVRTexturePixelBufferStrategyBufferManager",6,3,3,6,126,0,1,1,54,29,0,0,0,"3,00",1,5,6
"org.andengine.opengl.texture.region.BaseTextureRegion",5,1,23,24,23,0,1,2,40,12,2,0,0,"1,00",2,3,2
"org.andengine.opengl.texture.region.ITextureRegion",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,20,n/a
"org.andengine.opengl.texture.region.ITiledTextureRegion",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,24,n/a
"org.andengine.opengl.texture.region.TextureRegion",8,12,47,59,24,1,1,1,182,149,1,1,0,"1,17",12,27,28
"org.andengine.opengl.texture.region.TextureRegionFactory",6,0,10,10,30,0,0,6,64,36,0,0,0,"1,00",10,18,10
"org.andengine.opengl.texture.region.TextureRegionLibrary",4,1,9,10,28,1,0,2,40,12,0,3,1,"1,00",2,5,3
"org.andengine.opengl.texture.region.TiledTextureRegion",12,4,93,97,26,1,2,2,246,213,1,1,0,"1,15",28,68,53
"org.andengine.opengl.texture.render.RenderTexture",11,26,71,97,118,1,1,1,287,184,0,19,0,"1,17",7,54,34
"org.andengine.opengl.util.BufferUtils",6,3,18,21,7,0,0,14,136,95,0,0,0,"1,53",8,20,26
"org.andengine.opengl.util.GLHelper",4,0,14,14,2,0,0,2,187,127,0,0,0,"2,71",14,14,38
"org.andengine.opengl.util.GLMatrixStack",4,7,12,19,4,0,0,1,104,72,0,0,0,"1,17",0,14,14
"org.andengine.opengl.util.GLMatrixStack.GLMatrixStackOverflowException",2,1,5,6,1,1,0,0,26,5,0,0,0,"1,00",0,1,1
"org.andengine.opengl.util.GLMatrixStack.GLMatrixStackUnderflowException",2,1,5,6,1,1,0,0,26,5,0,0,0,"1,00",0,1,1
"org.andengine.opengl.util.GLState",81,29,82,111,18,0,0,11,569,464,0,0,0,"1,44",42,107,118
"org.andengine.opengl.util.VertexUtils",2,0,1,1,0,0,0,1,39,5,0,0,0,"1,00",1,1,1
"org.andengine.opengl.util.criteria.AndroidVersionCodeGLCriteria",3,2,6,8,22,1,1,1,36,9,0,1,0,"1,00",1,3,2
"org.andengine.opengl.util.criteria.BuildModelGLCriteria",3,2,6,8,22,1,1,1,36,9,0,1,0,"1,00",1,3,2
"org.andengine.opengl.util.criteria.GLExtensionsGLCriteria",3,2,6,8,22,1,1,1,36,9,0,1,0,"1,00",1,4,2
"org.andengine.opengl.util.criteria.GLRendererGLCriteria",3,2,6,8,22,1,1,1,36,9,0,1,0,"1,00",1,4,2
"org.andengine.opengl.util.criteria.GLVersionGLCriteria",3,2,6,8,22,1,1,1,36,9,0,1,0,"1,00",1,4,2
"org.andengine.opengl.util.criteria.IGLCriteria",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.opengl.util.criteria.IntGLCriteria",4,2,4,6,21,0,1,1,40,13,1,0,0,"1,00",2,4,2
"org.andengine.opengl.util.criteria.LogicalAndGLCriteria",2,1,3,4,20,0,1,1,42,15,0,0,0,"2,00",1,3,4
"org.andengine.opengl.util.criteria.LogicalOrGLCriteria",2,1,3,4,20,0,1,1,42,15,0,0,0,"2,00",1,3,4
"org.andengine.opengl.util.criteria.StringGLCriteria",7,2,4,6,21,0,1,1,40,13,4,0,0,"1,00",2,4,2
"org.andengine.opengl.vbo.DrawType",41,4,2,6,0,n/a,0,1,42,12,n/a,0,0,"1,00",1,2,2
"org.andengine.opengl.vbo.HighPerformanceVertexBufferObject",17,11,48,59,38,1,2,3,78,44,7,19,0,"1,50",3,9,9
"org.andengine.opengl.vbo.IVertexBufferObject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,18,n/a
"org.andengine.opengl.vbo.LowMemoryVertexBufferObject",13,10,47,57,38,1,2,4,59,22,6,19,0,"1,00",3,7,5
"org.andengine.opengl.vbo.SharedMemoryVertexBufferObject",5,10,51,61,38,1,2,1,89,53,0,20,3,"1,80",2,10,9
"org.andengine.opengl.vbo.VertexBufferObject",30,9,42,51,37,0,2,6,168,129,3,0,0,"1,33",9,33,28
"org.andengine.opengl.vbo.VertexBufferObjectManager",56,2,9,11,30,0,0,2,92,63,0,0,0,"1,89",3,11,17
"org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject",10,8,46,54,37,0,2,7,189,146,1,0,0,"1,24",12,37,31
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute",3,6,8,14,0,0,0,2,64,37,1,0,0,"1,00",6,8,8
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributeFix",3,6,10,16,10,1,0,1,37,9,0,6,1,"1,00",0,4,2
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes",43,2,2,4,2,0,0,1,43,16,0,0,0,"1,50",0,3,3
"org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributesBuilder",16,4,3,7,13,0,0,1,65,37,0,0,0,"2,67",2,7,8
"org.andengine.opengl.view.ConfigChooser",6,23,15,38,2,0,0,1,191,164,0,0,0,"1,67",14,16,25
"org.andengine.opengl.view.ConfigChooser.ConfigChooserMatcher",1,4,1,5,2,n/a,0,1,66,42,n/a,0,0,"2,50",1,1,10
"org.andengine.opengl.view.EngineRenderer",8,5,4,9,213,0,0,1,89,50,0,0,0,"1,75",0,18,7
"org.andengine.opengl.view.IRendererListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.opengl.view.RenderSurfaceView",13,2,6,8,213,0,0,2,70,39,0,0,0,"1,50",1,13,9
"org.andengine.ui.IGameInterface",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,11,n/a
"org.andengine.ui.IGameInterface.OnCreateResourcesCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.ui.IGameInterface.OnCreateSceneCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.ui.IGameInterface.OnPopulateSceneCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.ui.activity.BaseActivity",6,0,7,7,11,0,0,5,118,32,1,0,0,"1,12",0,7,9
"org.andengine.ui.activity.BaseGameActivity",36,7,63,70,226,1,2,1,397,336,4,7,0,"1,72",18,85,81
"org.andengine.ui.activity.LayoutGameActivity",3,7,65,72,227,2,2,1,38,10,1,43,1,"1,00",2,4,1
"org.andengine.ui.activity.LegacyBaseGameActivity",7,7,74,81,227,2,2,7,71,40,0,41,3,"1,00",5,17,7
"org.andengine.ui.activity.SimpleAsyncGameActivity",7,7,68,75,227,2,2,3,98,68,0,44,0,"1,00",1,6,12
"org.andengine.ui.activity.SimpleBaseGameActivity",5,7,67,74,227,2,2,3,47,18,0,44,0,"1,00",1,8,3
"org.andengine.ui.activity.SimpleLayoutGameActivity",5,7,70,77,228,3,2,3,47,18,0,45,0,"1,00",1,8,3
"org.andengine.ui.dialog.GenericInputDialogBuilder",3,8,5,13,4,0,0,1,94,66,1,0,0,"1,50",2,5,9
"org.andengine.ui.dialog.StringInputDialogBuilder",2,8,8,16,5,1,0,1,40,12,0,2,0,"1,00",1,5,3
"org.andengine.util.ActivityUtils",9,0,17,17,10,0,0,17,203,169,0,0,0,"1,26",0,18,34
"org.andengine.util.BetaUtils",1,1,2,3,1,0,0,1,70,42,0,0,0,"1,75",2,3,7
"org.andengine.util.Constants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.DialogUtils",0,0,1,1,0,0,0,1,33,5,0,0,0,"1,00",0,1,1
"org.andengine.util.FileUtils",3,0,22,22,2,0,0,9,165,128,0,0,0,"1,45",14,25,32
"org.andengine.util.HorizontalAlign",9,3,0,3,0,n/a,0,0,36,5,n/a,0,0,n/a,0,0,0
"org.andengine.util.IDisposable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.util.IDisposable.AlreadyDisposedException",5,1,8,9,1,1,0,0,35,14,0,0,0,"1,00",0,7,4
"org.andengine.util.IMatcher",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.ProbabilityGenerator",2,2,3,5,5,0,0,1,53,25,0,0,0,"1,67",1,6,5
"org.andengine.util.ProbabilityGenerator.Entry",3,2,2,4,4,0,0,1,36,15,0,0,0,"1,50",1,2,3
"org.andengine.util.SAXUtils",2,0,24,24,0,0,0,17,115,87,0,0,0,"1,38",16,24,33
"org.andengine.util.SocketUtils",1,0,3,3,3,0,0,3,53,25,0,0,0,"2,00",0,3,6
"org.andengine.util.StreamUtils",17,2,13,15,1,0,0,1,196,133,0,0,0,"2,15",4,13,28
"org.andengine.util.TextUtils",6,3,8,11,1,0,0,5,128,92,0,0,0,"2,50",8,8,20
"org.andengine.util.ThreadUtils",2,1,3,4,3,0,0,1,39,12,0,0,0,"1,00",0,4,3
"org.andengine.util.TimeUtils",1,0,2,2,1,0,1,1,44,16,0,0,0,"1,50",2,2,3
"org.andengine.util.VerticalAlign",0,3,0,3,0,n/a,0,0,36,5,n/a,0,0,n/a,0,0,0
"org.andengine.util.ViewUtils",0,0,2,2,0,0,0,2,36,8,0,0,0,"1,00",2,2,2
"org.andengine.util.adt.DataConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.adt.array.ArrayUtils",8,0,39,39,3,0,0,2,348,313,0,0,0,"2,26",32,40,88
"org.andengine.util.adt.bit.BitVector",2,2,11,13,2,0,0,1,217,181,0,0,0,"4,18",9,11,46
"org.andengine.util.adt.bounds.BoundsSplit",3,4,0,4,0,n/a,0,0,33,3,n/a,0,0,n/a,0,0,0
"org.andengine.util.adt.bounds.BoundsSplit.BoundsSplitException",3,1,4,5,1,1,0,0,24,3,0,0,0,n/a,0,0,0
"org.andengine.util.adt.bounds.FloatBounds",3,4,13,17,3,0,2,1,73,46,0,0,0,"1,22",5,10,11
"org.andengine.util.adt.bounds.IBounds",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.adt.bounds.IFloatBounds",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.andengine.util.adt.bounds.IIntBounds",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.andengine.util.adt.bounds.IntBounds",3,4,13,17,3,0,2,1,73,46,0,0,0,"1,22",5,10,11
"org.andengine.util.adt.cache.IntLRUCache",5,5,7,12,8,0,0,1,99,70,1,0,0,"1,56",5,14,14
"org.andengine.util.adt.cache.IntLRUCache.IntLRUCacheQueue",3,3,5,8,6,0,0,1,94,69,0,0,0,"1,71",4,8,12
"org.andengine.util.adt.cache.IntLRUCache.IntLRUCacheQueueNode",3,3,0,3,0,0,0,0,26,5,0,0,0,n/a,0,0,0
"org.andengine.util.adt.cache.IntLRUCache.IntLRUCacheValueHolder",2,2,0,2,1,0,0,0,25,4,0,0,0,n/a,0,0,0
"org.andengine.util.adt.cache.LRUCache",5,5,7,12,8,0,0,1,95,66,1,0,0,"1,44",5,14,13
"org.andengine.util.adt.cache.LRUCache.LRUCacheQueue",3,3,5,8,6,0,0,1,91,66,0,0,0,"1,57",4,8,11
"org.andengine.util.adt.cache.LRUCache.LRUCacheQueueNode",3,3,0,3,0,0,0,0,26,5,0,0,0,n/a,0,0,0
"org.andengine.util.adt.cache.LRUCache.LRUCacheValueHolder",2,2,0,2,1,0,0,0,25,4,0,0,0,n/a,0,0,0
"org.andengine.util.adt.cache.concurrent.SynchronizedIntLRUCache",1,5,13,18,9,1,0,5,52,25,0,2,5,"1,00",4,12,6
"org.andengine.util.adt.cache.concurrent.SynchronizedLRUCache",1,5,13,18,9,1,0,5,52,25,0,3,5,"1,00",4,12,6
"org.andengine.util.adt.data.DataUtils",0,0,1,1,0,0,0,1,33,5,0,0,0,"1,00",1,1,1
"org.andengine.util.adt.data.operator.ByteOperator",0,6,1,7,0,n/a,0,1,69,39,n/a,0,0,"1,00",1,1,6
"org.andengine.util.adt.data.operator.CharOperator",0,6,1,7,0,n/a,0,1,69,39,n/a,0,0,"1,00",1,1,6
"org.andengine.util.adt.data.operator.DoubleOperator",0,6,1,7,0,n/a,0,1,69,39,n/a,0,0,"1,00",1,1,6
"org.andengine.util.adt.data.operator.FloatOperator",0,6,1,7,0,n/a,0,1,69,39,n/a,0,0,"1,00",1,1,6
"org.andengine.util.adt.data.operator.IntOperator",2,6,1,7,0,n/a,0,1,69,39,n/a,0,0,"1,00",1,1,6
"org.andengine.util.adt.data.operator.LongOperator",0,6,1,7,0,n/a,0,1,69,39,n/a,0,0,"1,00",1,1,6
"org.andengine.util.adt.data.operator.ShortOperator",0,6,1,7,0,n/a,0,1,69,39,n/a,0,0,"1,00",1,1,6
"org.andengine.util.adt.data.operator.StringOperator",5,10,1,11,0,n/a,0,1,93,63,n/a,0,0,"1,00",1,1,10
"org.andengine.util.adt.io.in.AssetInputStreamOpener",4,2,3,5,1,0,1,1,39,12,0,0,0,"1,00",1,2,2
"org.andengine.util.adt.io.in.ByteArrayInputStreamOpener",2,3,4,7,2,0,1,1,44,17,0,0,0,"1,00",1,3,3
"org.andengine.util.adt.io.in.IInputStreamOpener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.adt.io.in.ResourceInputStreamOpener",2,2,3,5,1,0,1,1,39,12,0,0,0,"1,00",1,2,2
"org.andengine.util.adt.io.out.ByteBufferOutputStream",2,3,7,10,1,0,0,2,79,50,0,0,0,"1,57",1,7,11
"org.andengine.util.adt.list.CircularList",3,5,28,33,2,0,1,1,223,185,1,0,0,"2,75",9,16,44
"org.andengine.util.adt.list.FloatArrayList",3,3,19,22,2,0,1,1,95,65,0,0,0,"1,18",5,11,13
"org.andengine.util.adt.list.IFloatList",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,8,n/a
"org.andengine.util.adt.list.IIntList",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,8,n/a
"org.andengine.util.adt.list.IList",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,12,n/a
"org.andengine.util.adt.list.ILongList",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,8,n/a
"org.andengine.util.adt.list.ISortedList",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.adt.list.IUniqueList",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.adt.list.IntArrayList",2,3,19,22,2,0,1,1,95,65,0,0,0,"1,18",5,11,13
"org.andengine.util.adt.list.ListUtils",8,0,7,7,6,0,0,7,62,34,0,0,0,"1,14",5,10,8
"org.andengine.util.adt.list.LongArrayList",3,3,19,22,2,0,1,1,95,65,0,0,0,"1,18",5,11,13
"org.andengine.util.adt.list.ShiftList",5,5,39,44,3,0,2,1,277,219,1,0,0,"1,96",10,23,45
"org.andengine.util.adt.list.SmartList",13,1,23,24,2,0,0,3,184,148,3,0,0,"2,00",16,25,46
"org.andengine.util.adt.list.SortedList",4,2,28,30,8,0,2,1,175,126,1,0,0,"1,88",11,28,30
"org.andengine.util.adt.list.UniqueList",4,1,25,26,8,0,2,1,94,62,1,0,0,"1,15",8,26,15
"org.andengine.util.adt.list.concurrent.SynchronizedList",1,1,25,26,1,0,1,1,81,54,0,0,0,"1,00",8,25,13
"org.andengine.util.adt.map.Library",4,1,6,7,0,0,0,1,55,26,4,0,0,"1,17",1,6,7
"org.andengine.util.adt.map.LongSparseArray",4,5,20,25,4,0,0,1,288,201,0,0,0,"2,55",9,21,51
"org.andengine.util.adt.map.MultiKey",2,2,8,10,1,0,0,2,73,45,0,0,0,"1,50",7,8,12
"org.andengine.util.adt.map.MultiKeyHashMap",2,1,2,3,2,0,0,1,63,35,0,0,0,"4,50",2,4,9
"org.andengine.util.adt.map.SparseArrayUtils",2,0,4,4,5,0,0,0,81,54,0,0,0,"3,00",4,7,12
"org.andengine.util.adt.pool.EntityDetachRunnablePoolItem",4,4,9,13,105,2,0,1,49,17,0,6,0,"1,33",0,5,4
"org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler",5,2,25,27,111,2,1,2,62,27,0,5,0,"1,00",1,15,7
"org.andengine.util.adt.pool.GenericPool",13,4,15,19,4,0,0,1,127,91,8,0,0,"1,79",6,17,25
"org.andengine.util.adt.pool.MultiPool",1,1,3,4,5,0,0,1,48,20,0,0,0,"1,67",1,5,5
"org.andengine.util.adt.pool.Pool",3,4,25,29,6,1,0,2,78,48,4,9,4,"1,30",2,20,13
"org.andengine.util.adt.pool.PoolItem",4,2,6,8,6,0,0,4,53,23,1,0,0,"1,17",3,7,7
"org.andengine.util.adt.pool.PoolUpdateHandler",10,2,12,14,13,0,1,2,98,68,1,0,0,"1,33",2,21,16
"org.andengine.util.adt.pool.RunnablePoolItem",4,2,6,8,7,1,0,0,30,2,2,6,0,n/a,0,0,0
"org.andengine.util.adt.pool.RunnablePoolUpdateHandler",4,2,18,20,15,1,1,2,49,19,2,4,0,"1,00",1,9,5
"org.andengine.util.adt.queue.CircularQueue",2,3,38,41,4,1,2,4,59,32,0,12,0,"1,33",2,13,8
"org.andengine.util.adt.queue.IQueue",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.andengine.util.adt.queue.ISortedQueue",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.adt.queue.IUniqueQueue",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.adt.queue.ShiftQueue",1,3,45,48,4,1,2,4,59,32,0,15,4,"1,33",2,13,8
"org.andengine.util.adt.queue.SortedQueue",4,1,37,38,10,1,4,4,57,30,0,12,0,"1,40",2,11,7
"org.andengine.util.adt.queue.UniqueQueue",3,1,34,35,10,1,4,4,57,30,0,12,0,"1,40",2,11,7
"org.andengine.util.adt.queue.concurrent.SynchronizedQueue",4,1,33,34,2,0,2,1,97,70,0,0,0,"1,00",10,33,17
"org.andengine.util.adt.spatial.ISpatialItem",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils",3,0,7,7,2,0,0,2,52,25,0,0,0,"1,00",7,11,7
"org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils",4,0,9,9,2,0,0,3,60,33,0,0,0,"1,00",9,13,9
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree",6,4,56,60,16,1,2,3,123,96,0,24,0,"1,00",20,39,24
"org.andengine.util.adt.spatial.quadtree.FloatQuadTree.FloatQuadTreeNode",5,10,61,71,14,1,2,2,172,151,0,22,0,"2,05",18,29,43
"org.andengine.util.adt.spatial.quadtree.IntQuadTree",6,4,56,60,16,1,2,3,123,96,0,24,0,"1,00",20,39,24
"org.andengine.util.adt.spatial.quadtree.IntQuadTree.IntQuadTreeNode",6,10,61,71,14,1,2,2,233,212,0,22,0,"2,86",18,29,60
"org.andengine.util.adt.spatial.quadtree.QuadTree",9,5,28,33,11,0,1,5,184,134,2,0,0,"1,23",16,44,32
"org.andengine.util.adt.spatial.quadtree.QuadTree.QuadTreeNode",9,6,36,42,11,0,1,2,578,513,2,0,0,"5,10",29,39,148
"org.andengine.util.adt.transformation.Transformation",11,6,22,28,2,0,0,1,247,201,0,0,0,"1,05",5,22,23
"org.andengine.util.adt.transformation.TransformationPool",2,1,2,3,8,0,0,1,43,15,0,0,0,"1,00",1,6,3
"org.andengine.util.adt.trie.ITrie",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.andengine.util.adt.trie.Trie",2,2,8,10,2,0,1,1,47,20,0,0,0,"1,00",2,9,4
"org.andengine.util.adt.trie.Trie.TrieNode",2,2,10,12,2,0,1,1,81,60,0,0,0,"2,33",2,6,14
"org.andengine.util.algorithm.Spiral",1,8,7,15,1,0,0,3,80,47,0,0,0,"1,29",4,11,9
"org.andengine.util.algorithm.collision.BaseCollisionChecker",2,0,3,3,0,0,0,3,111,33,1,0,0,"2,67",3,3,8
"org.andengine.util.algorithm.collision.LineCollisionChecker",7,1,2,3,100,2,0,2,42,14,0,0,0,"1,00",1,9,2
"org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker",9,4,11,15,100,2,0,1,100,72,0,0,0,"1,00",8,28,11
"org.andengine.util.algorithm.collision.ShapeCollisionChecker",5,0,5,5,100,1,0,1,159,64,2,0,0,"3,00",5,7,15
"org.andengine.util.algorithm.collision.TriangleCollisionChecker",2,2,2,4,4,0,0,1,67,37,0,0,0,"1,00",2,3,2
"org.andengine.util.algorithm.hull.HullUtils",1,0,2,2,0,0,0,2,59,28,0,0,0,"2,50",1,2,5
"org.andengine.util.algorithm.hull.IHullAlgorithm",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.algorithm.hull.JarvisMarch",5,0,3,3,6,0,1,1,91,52,0,0,0,"5,00",2,6,10
"org.andengine.util.algorithm.path.Direction",2,10,9,19,0,n/a,0,3,155,124,n/a,0,0,"4,89",8,9,44
"org.andengine.util.algorithm.path.ICostFunction",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.algorithm.path.IPathFinder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.andengine.util.algorithm.path.IPathFinder.IPathFinderListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.algorithm.path.IPathFinderMap",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.algorithm.path.Path",4,2,12,14,2,0,0,1,89,61,0,0,0,"1,33",10,13,16
"org.andengine.util.algorithm.path.astar.AStarPathFinder",13,0,6,6,25,0,1,1,145,101,0,0,0,"6,67",3,26,20
"org.andengine.util.algorithm.path.astar.AStarPathFinder.Node",1,7,7,14,0,0,0,2,73,52,0,0,0,"1,71",5,7,12
"org.andengine.util.algorithm.path.astar.EuclideanHeuristic",2,0,2,2,2,0,1,1,36,8,0,0,0,"1,00",1,1,1
"org.andengine.util.algorithm.path.astar.IAStarHeuristic",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.algorithm.path.astar.ManhattanHeuristic",2,0,2,2,2,0,1,1,34,6,0,0,0,"1,00",1,1,1
"org.andengine.util.algorithm.path.astar.NullHeuristic",2,0,2,2,2,0,1,1,34,6,0,0,0,"1,00",1,1,1
"org.andengine.util.algorithm.sort.InsertionSorter",3,0,9,9,3,1,0,3,76,47,1,3,0,"4,00",0,5,12
"org.andengine.util.algorithm.sort.Sorter",4,0,6,6,2,0,0,4,43,14,1,0,0,"1,00",0,7,3
"org.andengine.util.animationpack.AnimationPack",4,2,3,5,38,0,0,2,41,14,0,0,0,"1,00",2,3,3
"org.andengine.util.animationpack.AnimationPackLoader",5,2,3,5,150,0,0,1,62,34,0,0,0,"1,00",2,7,3
"org.andengine.util.animationpack.AnimationPackParser",14,23,4,27,149,0,0,1,121,87,0,0,0,"4,25",1,22,17
"org.andengine.util.animationpack.AnimationPackTiledTextureRegion",7,6,94,100,32,2,2,2,47,20,0,43,0,"1,33",2,5,4
"org.andengine.util.animationpack.AnimationPackTiledTextureRegionLibrary",3,1,2,3,33,0,0,1,36,9,0,0,0,"1,00",1,3,2
"org.andengine.util.animationpack.exception.AnimationPackParseException",2,1,4,5,0,0,0,0,42,15,0,0,0,"1,00",0,4,4
"org.andengine.util.base64.Base64",4,6,8,14,4,0,0,2,206,67,0,0,0,"2,12",7,12,17
"org.andengine.util.base64.Base64.Coder",4,2,2,4,0,0,0,2,24,6,2,0,0,n/a,2,2,0
"org.andengine.util.base64.Base64.Decoder",3,9,5,14,4,1,0,2,247,177,0,0,0,"11,67",2,3,35
"org.andengine.util.base64.Base64.Encoder",3,12,5,17,4,1,0,2,185,150,0,0,0,"10,67",2,3,32
"org.andengine.util.base64.Base64InputStream",3,7,11,18,5,0,0,4,128,100,0,0,0,"1,91",5,15,21
"org.andengine.util.call.AsyncCallable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.call.Callable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.call.Callback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.call.ParameterCallable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.color.Color",31,58,35,93,1,0,0,1,284,254,0,0,0,"1,29",18,38,45
"org.andengine.util.color.ColorPool",2,4,17,21,7,1,0,1,38,11,0,10,1,"1,00",1,5,2
"org.andengine.util.color.ColorUtils",4,5,17,22,1,0,0,1,108,69,0,0,0,"1,00",17,18,17
"org.andengine.util.color.constants.ColorConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.debug.Debug",33,3,53,56,2,0,0,1,344,316,0,0,0,"2,09",2,54,111
"org.andengine.util.debug.Debug.DebugLevel",3,7,1,8,0,n/a,0,1,7,7,n/a,0,0,"1,00",1,1,1
"org.andengine.util.debug.DebugTimer",3,4,9,13,4,0,0,1,82,55,0,0,0,"1,33",0,13,12
"org.andengine.util.debug.DebugTimer.DebugTime",2,6,8,14,4,0,0,1,87,66,0,0,0,"1,62",0,9,13
"org.andengine.util.exception.AndEngineException",2,1,4,5,0,0,0,0,42,15,2,0,0,"1,00",0,4,4
"org.andengine.util.exception.AndEngineRuntimeException",20,1,4,5,0,0,0,0,42,15,15,0,0,"1,00",0,4,4
"org.andengine.util.exception.CancelledException",2,1,4,5,1,1,0,0,30,3,0,0,0,n/a,0,0,0
"org.andengine.util.exception.DeviceNotSupportedException",3,2,7,9,2,1,0,1,42,15,0,0,0,"1,00",1,5,3
"org.andengine.util.exception.DeviceNotSupportedException.DeviceNotSupportedCause",2,2,0,2,0,n/a,0,0,28,4,n/a,0,0,n/a,0,0,0
"org.andengine.util.exception.MethodNotSupportedException",3,1,8,9,1,1,0,0,41,14,0,0,0,"1,00",0,7,4
"org.andengine.util.exception.MethodNotYetImplementedException",2,1,8,9,1,1,0,0,41,14,0,0,0,"1,00",0,7,4
"org.andengine.util.exception.NullBitmapException",3,1,8,9,1,1,0,0,41,14,0,0,0,"1,00",0,7,4
"org.andengine.util.level.IEntityLoader",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.level.LevelLoader",5,3,13,16,103,0,0,1,97,64,0,0,0,"1,15",2,15,15
"org.andengine.util.level.LevelParser",4,3,3,6,102,0,0,1,59,31,0,0,0,"2,33",0,9,7
"org.andengine.util.level.constants.LevelConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.levelstats.LevelStatsDBConnector",5,4,3,7,9,0,0,1,93,62,0,0,0,"3,00",0,5,12
"org.andengine.util.math.MathConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.andengine.util.math.MathUtils",30,1,35,36,2,0,0,19,233,170,0,0,0,"1,43",31,35,50
"org.andengine.util.mime.MIMEType",0,4,2,6,0,n/a,0,1,43,12,n/a,0,0,"1,00",1,2,2
"org.andengine.util.modifier.BaseDoubleValueChangeModifier",3,7,40,47,11,3,1,1,46,19,1,13,0,"1,00",0,7,4
"org.andengine.util.modifier.BaseDoubleValueSpanModifier",6,10,58,68,13,3,1,6,94,65,2,13,3,"1,00",6,23,15
"org.andengine.util.modifier.BaseDurationModifier",8,5,29,34,9,1,1,1,83,54,3,7,0,"1,57",3,12,11
"org.andengine.util.modifier.BaseModifier",13,3,22,25,8,0,1,6,94,65,5,0,0,"1,64",4,17,18
"org.andengine.util.modifier.BaseQuadrupelValueSpanModifier",3,14,78,92,15,5,1,2,65,37,0,31,1,"1,00",0,12,7
"org.andengine.util.modifier.BaseSingleValueChangeModifier",4,6,35,41,10,2,1,2,51,22,2,11,0,"1,00",0,8,5
"org.andengine.util.modifier.BaseSingleValueSpanModifier",8,8,41,49,12,2,1,1,77,49,2,11,0,"1,00",2,18,10
"org.andengine.util.modifier.BaseTripleValueSpanModifier",6,12,69,81,14,4,1,2,72,43,3,25,1,"1,00",2,14,9
"org.andengine.util.modifier.IModifier",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,10,n/a
"org.andengine.util.modifier.IModifier.DeepCopyNotSupportedException",18,1,4,5,1,1,0,0,24,3,0,0,0,n/a,0,0,0
"org.andengine.util.modifier.IModifier.IModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.util.modifier.LoopModifier",7,12,37,49,10,1,2,3,137,108,2,7,0,"1,53",5,25,23
"org.andengine.util.modifier.LoopModifier.ILoopModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.util.modifier.ModifierList",6,2,31,33,8,1,1,3,69,41,1,21,0,"1,83",2,13,11
"org.andengine.util.modifier.ParallelModifier",7,7,32,39,9,1,2,4,114,85,2,7,0,"1,60",4,18,16
"org.andengine.util.modifier.SequenceModifier",10,9,36,45,11,1,2,3,142,114,2,7,0,"1,71",5,26,24
"org.andengine.util.modifier.SequenceModifier.ISubSequenceModifierListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.andengine.util.modifier.ease.EaseBackIn",2,2,5,7,1,0,1,2,48,19,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseBackInOut",3,1,4,5,3,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseBackOut",2,1,5,6,1,0,1,2,48,19,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseBounceIn",3,1,5,6,2,0,1,2,48,18,0,0,0,"1,25",3,5,5
"org.andengine.util.modifier.ease.EaseBounceInOut",3,1,4,5,3,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseBounceOut",3,1,5,6,1,0,1,2,58,29,0,0,0,"2,00",3,4,8
"org.andengine.util.modifier.ease.EaseCircularIn",2,1,5,6,1,0,1,2,47,18,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseCircularInOut",3,1,4,5,3,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseCircularOut",2,1,5,6,1,0,1,2,48,19,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseCubicIn",2,1,5,6,1,0,1,2,47,18,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseCubicInOut",3,1,4,5,3,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseCubicOut",2,1,5,6,1,0,1,2,48,19,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseElasticIn",3,1,5,6,2,0,1,2,56,27,0,0,0,"1,75",3,4,7
"org.andengine.util.modifier.ease.EaseElasticInOut",3,1,4,5,4,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseElasticOut",3,1,5,6,2,0,1,2,55,26,0,0,0,"1,75",3,4,7
"org.andengine.util.modifier.ease.EaseExponentialIn",2,1,5,6,1,0,1,2,47,18,0,0,0,"1,50",3,4,6
"org.andengine.util.modifier.ease.EaseExponentialInOut",3,1,4,5,3,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseExponentialOut",2,1,5,6,1,0,1,2,47,18,0,0,0,"1,50",3,4,6
"org.andengine.util.modifier.ease.EaseLinear",31,1,4,5,1,0,1,2,44,15,0,0,0,"1,33",2,3,4
"org.andengine.util.modifier.ease.EaseQuadIn",2,1,5,6,1,0,1,2,47,18,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseQuadInOut",3,1,4,5,3,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseQuadOut",2,1,5,6,1,0,1,2,47,18,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseQuartIn",2,1,5,6,1,0,1,2,47,18,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseQuartInOut",3,1,4,5,3,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseQuartOut",2,1,5,6,1,0,1,2,48,19,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseQuintIn",2,1,5,6,1,0,1,2,47,18,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseQuintInOut",3,1,4,5,3,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseQuintOut",2,1,5,6,1,0,1,2,48,19,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseSineIn",2,1,5,6,2,0,1,2,47,18,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseSineInOut",2,1,4,5,2,0,1,2,45,16,0,0,0,"1,33",2,3,4
"org.andengine.util.modifier.ease.EaseSineOut",2,1,5,6,2,0,1,2,47,18,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseStrongIn",2,1,5,6,1,0,1,2,47,18,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.EaseStrongInOut",3,1,4,5,3,0,1,2,49,20,0,0,0,"1,67",2,5,5
"org.andengine.util.modifier.ease.EaseStrongOut",2,1,5,6,1,0,1,2,48,19,0,0,0,"1,25",3,4,5
"org.andengine.util.modifier.ease.IEaseFunction",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.modifier.util.ModifierUtils",3,0,1,1,5,0,0,1,37,9,0,0,0,"2,00",1,2,2
"org.andengine.util.preferences.SimplePreferences",2,2,5,7,0,0,0,1,57,29,0,0,0,"1,40",5,5,7
"org.andengine.util.progress.IProgressListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.progress.ProgressCallable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.andengine.util.progress.ProgressMonitor",2,2,8,10,4,0,1,1,64,36,0,0,0,"1,12",0,7,9
"org.andengine.util.system.CPUUsage",3,3,3,6,6,0,0,1,60,30,0,0,0,"1,00",1,4,3
"org.andengine.util.system.SystemUtils",10,8,20,28,6,0,0,8,201,135,0,0,0,"1,25",20,24,25
"org.andengine.util.system.SystemUtils.SystemUtilsException",1,1,2,3,0,0,0,0,14,8,0,0,0,"1,00",0,2,2
"org.andengine.util.texturepack.TexturePack",6,2,5,7,27,0,0,2,47,20,0,0,0,"1,00",2,7,5
"org.andengine.util.texturepack.TexturePackLibrary",5,2,2,4,28,0,0,1,38,11,0,0,0,"1,00",1,4,2
"org.andengine.util.texturepack.TexturePackLoader",6,2,3,5,136,0,0,1,62,34,0,0,0,"1,00",2,7,3
"org.andengine.util.texturepack.TexturePackParser",15,45,13,58,135,0,0,1,232,202,0,0,0,"2,06",11,31,35
"org.andengine.util.texturepack.TexturePackTextureRegion",6,18,55,73,25,2,1,7,68,40,0,21,0,"1,00",7,9,8
"org.andengine.util.texturepack.TexturePackTextureRegionLibrary",4,2,9,11,26,0,0,1,75,48,0,0,0,"1,44",5,11,13
"org.andengine.util.texturepack.exception.TexturePackParseException",2,1,4,5,0,0,0,0,42,15,0,0,0,"1,00",0,4,4
"org.andengine.util.time.TimeConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a

Package,C(rec),LOC(rec),METH(rec)
"",742,53.301,5.291
"org",742,53.301,5.291
"org.andengine",742,53.301,5.291
"org.andengine.audio",17,1.034,112
"org.andengine.audio.exception",1,44,4
"org.andengine.audio.music",6,335,27
"org.andengine.audio.music.exception",2,75,4
"org.andengine.audio.sound",6,423,39
"org.andengine.audio.sound.exception",2,75,4
"org.andengine.engine",47,3.741,379
"org.andengine.engine.camera",13,1.357,160
"org.andengine.engine.camera.hud",8,404,30
"org.andengine.engine.camera.hud.controls",7,363,29
"org.andengine.engine.handler",12,583,56
"org.andengine.engine.handler.collision",2,95,5
"org.andengine.engine.handler.physics",1,129,20
"org.andengine.engine.handler.runnable",1,49,3
"org.andengine.engine.handler.timer",2,112,12
"org.andengine.engine.options",14,672,51
"org.andengine.engine.options.resolutionpolicy",6,246,11
"org.andengine.engine.splitscreen",2,253,26
"org.andengine.entity",199,15.686,1.779
"org.andengine.entity.modifier",45,2.432,262
"org.andengine.entity.particle",40,2.108,199
"org.andengine.entity.particle.emitter",9,416,35
"org.andengine.entity.particle.initializer",12,613,60
"org.andengine.entity.particle.modifier",10,537,53
"org.andengine.entity.primitive",12,859,75
"org.andengine.entity.primitive.vbo",8,354,22
"org.andengine.entity.scene",36,3.013,408
"org.andengine.entity.scene.background",16,746,74
"org.andengine.entity.scene.background.modifier",8,275,30
"org.andengine.entity.scene.menu",14,1.685,275
"org.andengine.entity.scene.menu.animator",5,388,38
"org.andengine.entity.scene.menu.item",7,1.121,216
"org.andengine.entity.scene.menu.item.decorator",3,777,163
"org.andengine.entity.shape",4,315,56
"org.andengine.entity.sprite",33,3.956,362
"org.andengine.entity.sprite.batch",6,1.279,114
"org.andengine.entity.sprite.batch.vbo",3,454,14
"org.andengine.entity.sprite.vbo",15,1.310,42
"org.andengine.entity.text",10,923,95
"org.andengine.entity.text.exception",2,87,8
"org.andengine.entity.text.vbo",3,293,8
"org.andengine.entity.util",9,470,37
"org.andengine.input",41,1.952,183
"org.andengine.input.sensor",16,601,57
"org.andengine.input.sensor.acceleration",8,170,18
"org.andengine.input.sensor.location",3,164,13
"org.andengine.input.sensor.orientation",3,166,18
"org.andengine.input.touch",25,1.351,126
"org.andengine.input.touch.controller",8,284,20
"org.andengine.input.touch.detector",15,952,89
"org.andengine.opengl",150,12.030,1.162
"org.andengine.opengl.exception",3,131,10
"org.andengine.opengl.font",15,1.796,147
"org.andengine.opengl.font.exception",2,87,8
"org.andengine.opengl.shader",16,1.177,76
"org.andengine.opengl.shader.constants",1,53,0
"org.andengine.opengl.shader.exception",3,109,5
"org.andengine.opengl.shader.source",4,148,9
"org.andengine.opengl.texture",81,5.850,634
"org.andengine.opengl.texture.atlas",45,2.823,285
"org.andengine.opengl.texture.atlas.bitmap",26,1.795,166
"org.andengine.opengl.texture.atlas.bitmap.source",23,1.365,118
"org.andengine.opengl.texture.atlas.bitmap.source.decorator",17,973,85
"org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape",6,299,18
"org.andengine.opengl.texture.atlas.buildable",12,696,65
"org.andengine.opengl.texture.atlas.buildable.builder",6,333,20
"org.andengine.opengl.texture.atlas.source",2,102,19
"org.andengine.opengl.texture.bitmap",4,282,23
"org.andengine.opengl.texture.compressed",15,966,89
"org.andengine.opengl.texture.compressed.etc1",2,126,11
"org.andengine.opengl.texture.compressed.pvr",13,840,78
"org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy",6,238,12
"org.andengine.opengl.texture.region",7,673,130
"org.andengine.opengl.texture.render",1,304,29
"org.andengine.opengl.util",17,1.514,150
"org.andengine.opengl.util.criteria",10,391,21
"org.andengine.opengl.vbo",12,1.034,108
"org.andengine.opengl.vbo.attribute",4,220,15
"org.andengine.opengl.view",5,454,32
"org.andengine.ui",29,1.088,119
"org.andengine.ui.activity",21,879,95
"org.andengine.ui.dialog",4,149,10
"org.andengine.util",258,17.693,1.552
"org.andengine.util.adt",95,7.469,733
"org.andengine.util.adt.array",1,351,39
"org.andengine.util.adt.bit",1,219,11
"org.andengine.util.adt.bounds",7,262,26
"org.andengine.util.adt.cache",14,595,44
"org.andengine.util.adt.cache.concurrent",2,108,12
"org.andengine.util.adt.data",9,618,61
"org.andengine.util.adt.data.operator",8,584,60
"org.andengine.util.adt.io",5,235,15
"org.andengine.util.adt.io.in",4,152,8
"org.andengine.util.adt.io.out",1,83,7
"org.andengine.util.adt.list",16,1.530,180
"org.andengine.util.adt.list.concurrent",1,83,13
"org.andengine.util.adt.map",5,590,40
"org.andengine.util.adt.pool",13,616,64
"org.andengine.util.adt.queue",8,391,43
"org.andengine.util.adt.queue.concurrent",1,99,17
"org.andengine.util.adt.spatial",9,1.578,171
"org.andengine.util.adt.spatial.bounds",2,116,16
"org.andengine.util.adt.spatial.bounds.util",2,116,16
"org.andengine.util.adt.spatial.quadtree",6,1.445,154
"org.andengine.util.adt.transformation",3,295,25
"org.andengine.util.adt.trie",3,152,14
"org.andengine.util.algorithm",23,1.556,85
"org.andengine.util.algorithm.collision",5,498,23
"org.andengine.util.algorithm.hull",3,180,5
"org.andengine.util.algorithm.path",12,669,41
"org.andengine.util.algorithm.path.astar",6,357,14
"org.andengine.util.algorithm.sort",2,127,9
"org.andengine.util.animationpack",6,389,19
"org.andengine.util.animationpack.exception",1,44,4
"org.andengine.util.base64",5,827,27
"org.andengine.util.call",4,82,4
"org.andengine.util.color",4,451,54
"org.andengine.util.color.constants",1,17,0
"org.andengine.util.debug",4,528,71
"org.andengine.util.exception",8,314,23
"org.andengine.util.level",4,217,17
"org.andengine.util.level.constants",1,21,0
"org.andengine.util.levelstats",2,112,4
"org.andengine.util.math",2,257,35
"org.andengine.util.mime",1,44,2
"org.andengine.util.modifier",54,2.909,269
"org.andengine.util.modifier.ease",35,1.713,125
"org.andengine.util.modifier.util",1,39,1
"org.andengine.util.preferences",1,62,5
"org.andengine.util.progress",4,113,10
"org.andengine.util.system",3,296,25
"org.andengine.util.texturepack",11,613,48
"org.andengine.util.texturepack.exception",1,44,4
"org.andengine.util.time",1,39,0

Project,C,L(J),LOCp,METH
"project",742,53.301,53.301,5.241

