Complexity metrics,Qui, 26 out 2017 17:44:33 BRST
Method,ev(G),iv(G),v(G)
"null.accept(CompletionProposal)",2,11,15
"null.accept(File,String)",1,1,1
"null.createBuffer(IOpenable)",1,1,1
"null.genericTypeArguments()",1,1,1
"null.getClasspathEntries()",1,1,1
"null.getDescription()",1,1,1
"null.getKind()",1,1,1
"null.getPath()",1,1,1
"null.isSuperAccess()",1,1,1
"null.isTypeAccess()",1,1,1
"null.preferenceChange(PreferenceChangeEvent)",1,4,4
"null.setActualReceiverType(ReferenceBinding)",1,1,1
"null.setDepth(int)",1,1,1
"null.setFieldIndex(int)",1,1,1
"null.sourceEnd()",1,1,1
"null.sourceStart()",1,1,1
"null.toString()",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.BufferChangedEvent(IBuffer,int,int,String)",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getBuffer()",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getLength()",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getOffset()",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getText()",1,1,1
"org.eclipse.jdt.core.CheckDebugAttributes.checkClassFile(IClassFileReader)",3,3,4
"org.eclipse.jdt.core.CheckDebugAttributes.execute()",5,10,10
"org.eclipse.jdt.core.CheckDebugAttributes.setFile(String)",1,1,1
"org.eclipse.jdt.core.CheckDebugAttributes.setProperty(String)",1,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.ClasspathContainerInitializer()",1,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.canUpdateClasspathContainer(IPath,IJavaProject)",1,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.getComparisonID(IPath,IJavaProject)",2,2,2
"org.eclipse.jdt.core.ClasspathContainerInitializer.getDescription(IPath,IJavaProject)",1,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.requestClasspathContainerUpdate(IPath,IJavaProject,IClasspathContainer)",1,1,1
"org.eclipse.jdt.core.ClasspathVariableInitializer.ClasspathVariableInitializer()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.CompletionProposal(int,int)",3,1,5
"org.eclipse.jdt.core.CompletionProposal.create(int,int)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.findParameterNames(IProgressMonitor)",2,3,6
"org.eclipse.jdt.core.CompletionProposal.getCompletion()",1,6,6
"org.eclipse.jdt.core.CompletionProposal.getCompletionLocation()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getDeclarationSignature()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getFlags()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getKind()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getName()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getRelevance()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getReplaceEnd()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getReplaceStart()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getSignature()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getTokenEnd()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getTokenStart()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setCompletion(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setDeclarationSignature(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setFlags(int)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setName(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setParameterNames(char[][])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setRelevance(int)",2,1,2
"org.eclipse.jdt.core.CompletionProposal.setReplaceRange(int,int)",2,1,3
"org.eclipse.jdt.core.CompletionProposal.setSignature(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setTokenRange(int,int)",2,1,3
"org.eclipse.jdt.core.CompletionRequestor.CompletionRequestor()",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.beginReporting()",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.completionFailure(IProblem)",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.endReporting()",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.isIgnored(int)",2,1,3
"org.eclipse.jdt.core.CompletionRequestor.setIgnored(int,boolean)",2,1,4
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptAnonymousType(char[],char[],char[][],char[][],char[][],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptClass(char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptError(IProblem)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptField(char[],char[],char[],char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptInterface(char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptKeyword(char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptLabel(char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptLocalVariable(char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptMethod(char[],char[],char[],char[][],char[][],char[][],char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptMethodDeclaration(char[],char[],char[],char[][],char[][],char[][],char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptModifier(char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptPackage(char[],char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptType(char[],char[],char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptVariableName(char[],char[],char[],char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CorrectionEngine.CorrectionEngine(Map)",1,1,1
"org.eclipse.jdt.core.CorrectionEngine.computeCorrections(ICompilationUnit,int,int,int,String[],ICorrectionRequestor)",4,4,13
"org.eclipse.jdt.core.CorrectionEngine.computeCorrections(IMarker,ICompilationUnit,int,ICorrectionRequestor)",2,2,3
"org.eclipse.jdt.core.CorrectionEngine.computeCorrections(IProblem,ICompilationUnit,ICorrectionRequestor)",2,2,2
"org.eclipse.jdt.core.CorrectionEngine.correct(char[])",7,4,9
"org.eclipse.jdt.core.CorrectionEngine.getProblemArguments(IMarker)",1,1,1
"org.eclipse.jdt.core.ElementChangedEvent.ElementChangedEvent(IJavaElementDelta,int)",1,1,1
"org.eclipse.jdt.core.ElementChangedEvent.getDelta()",1,1,1
"org.eclipse.jdt.core.ElementChangedEvent.getType()",1,1,1
"org.eclipse.jdt.core.Flags.Flags()",1,1,1
"org.eclipse.jdt.core.Flags.isAbstract(int)",1,1,1
"org.eclipse.jdt.core.Flags.isAnnotation(int)",1,1,1
"org.eclipse.jdt.core.Flags.isBridge(int)",1,1,1
"org.eclipse.jdt.core.Flags.isDeprecated(int)",1,1,1
"org.eclipse.jdt.core.Flags.isEnum(int)",1,1,1
"org.eclipse.jdt.core.Flags.isFinal(int)",1,1,1
"org.eclipse.jdt.core.Flags.isInterface(int)",1,1,1
"org.eclipse.jdt.core.Flags.isNative(int)",1,1,1
"org.eclipse.jdt.core.Flags.isPrivate(int)",1,1,1
"org.eclipse.jdt.core.Flags.isProtected(int)",1,1,1
"org.eclipse.jdt.core.Flags.isPublic(int)",1,1,1
"org.eclipse.jdt.core.Flags.isStatic(int)",1,1,1
"org.eclipse.jdt.core.Flags.isStrictfp(int)",1,1,1
"org.eclipse.jdt.core.Flags.isSynchronized(int)",1,1,1
"org.eclipse.jdt.core.Flags.isSynthetic(int)",1,1,1
"org.eclipse.jdt.core.Flags.isTransient(int)",1,1,1
"org.eclipse.jdt.core.Flags.isVarargs(int)",1,1,1
"org.eclipse.jdt.core.Flags.isVolatile(int)",1,1,1
"org.eclipse.jdt.core.Flags.toString(int)",2,12,13
"org.eclipse.jdt.core.JDTCompilerAdapter.addExtdirs(Path,Path)",3,6,6
"org.eclipse.jdt.core.JDTCompilerAdapter.execute()",1,3,5
"org.eclipse.jdt.core.JDTCompilerAdapter.setupJavacCommand()",5,45,58
"org.eclipse.jdt.core.JavaConventions.JavaConventions()",1,1,1
"org.eclipse.jdt.core.JavaConventions.isOverlappingRoots(IPath,IPath)",4,6,10
"org.eclipse.jdt.core.JavaConventions.scannedIdentifier(String)",4,1,8
"org.eclipse.jdt.core.JavaConventions.validateClassFileName(String)",6,4,6
"org.eclipse.jdt.core.JavaConventions.validateClasspath(IJavaProject,IClasspathEntry[],IPath)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateClasspathEntry(IJavaProject,IClasspathEntry,boolean)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateCompilationUnitName(String)",7,5,7
"org.eclipse.jdt.core.JavaConventions.validateFieldName(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateIdentifier(String)",2,2,2
"org.eclipse.jdt.core.JavaConventions.validateImportDeclaration(String)",4,5,5
"org.eclipse.jdt.core.JavaConventions.validateJavaTypeName(String)",9,8,10
"org.eclipse.jdt.core.JavaConventions.validateMethodName(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validatePackageName(String)",11,17,20
"org.eclipse.jdt.core.JavaCore.JavaCore()",1,1,1
"org.eclipse.jdt.core.JavaCore.addElementChangedListener(IElementChangedListener)",1,1,1
"org.eclipse.jdt.core.JavaCore.addElementChangedListener(IElementChangedListener,int)",1,1,1
"org.eclipse.jdt.core.JavaCore.addJavaElementMarkerAttributes(Map,IJavaElement)",1,3,4
"org.eclipse.jdt.core.JavaCore.addPreProcessingResourceChangedListener(IResourceChangeListener)",1,1,1
"org.eclipse.jdt.core.JavaCore.configureJavaElementMarker(IMarker,IJavaElement)",1,3,4
"org.eclipse.jdt.core.JavaCore.create(IFile)",1,1,1
"org.eclipse.jdt.core.JavaCore.create(IFolder)",1,1,1
"org.eclipse.jdt.core.JavaCore.create(IProject)",2,1,2
"org.eclipse.jdt.core.JavaCore.create(IResource)",1,1,1
"org.eclipse.jdt.core.JavaCore.create(IWorkspaceRoot)",2,1,2
"org.eclipse.jdt.core.JavaCore.create(String)",1,1,1
"org.eclipse.jdt.core.JavaCore.create(String,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.core.JavaCore.createClassFileFrom(IFile)",1,1,1
"org.eclipse.jdt.core.JavaCore.createCompilationUnitFrom(IFile)",1,1,1
"org.eclipse.jdt.core.JavaCore.createJarPackageFragmentRootFrom(IFile)",1,1,1
"org.eclipse.jdt.core.JavaCore.getClasspathContainer(IPath,IJavaProject)",2,2,2
"org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer(String)",7,9,11
"org.eclipse.jdt.core.JavaCore.getClasspathVariable(String)",5,11,13
"org.eclipse.jdt.core.JavaCore.getClasspathVariableInitializer(String)",7,8,10
"org.eclipse.jdt.core.JavaCore.getClasspathVariableNames()",1,1,1
"org.eclipse.jdt.core.JavaCore.getDefaultOptions()",1,3,3
"org.eclipse.jdt.core.JavaCore.getDefaultPreferences()",1,2,2
"org.eclipse.jdt.core.JavaCore.getEncoding()",2,2,3
"org.eclipse.jdt.core.JavaCore.getInstancePreferences()",1,2,2
"org.eclipse.jdt.core.JavaCore.getJavaCore()",1,1,1
"org.eclipse.jdt.core.JavaCore.getOption(String)",4,5,6
"org.eclipse.jdt.core.JavaCore.getOptions()",1,3,3
"org.eclipse.jdt.core.JavaCore.getPlugin()",1,1,1
"org.eclipse.jdt.core.JavaCore.getResolvedClasspathEntry(IClasspathEntry)",13,11,15
"org.eclipse.jdt.core.JavaCore.getResolvedVariablePath(IPath)",4,2,5
"org.eclipse.jdt.core.JavaCore.getSharedWorkingCopies(IBufferFactory)",1,2,2
"org.eclipse.jdt.core.JavaCore.getUserLibraryNames()",1,1,1
"org.eclipse.jdt.core.JavaCore.getWorkingCopies(WorkingCopyOwner)",2,1,3
"org.eclipse.jdt.core.JavaCore.initializeDefaultPreferences()",1,3,3
"org.eclipse.jdt.core.JavaCore.isReferencedBy(IJavaElement,IMarker)",8,6,10
"org.eclipse.jdt.core.JavaCore.isReferencedBy(IJavaElement,IMarkerDelta)",8,6,10
"org.eclipse.jdt.core.JavaCore.newContainerEntry(IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newContainerEntry(IPath,IPath[],IPath[],boolean)",1,3,3
"org.eclipse.jdt.core.JavaCore.newContainerEntry(IPath,boolean)",1,1,1
"org.eclipse.jdt.core.JavaCore.newLibraryEntry(IPath,IPath,IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newLibraryEntry(IPath,IPath,IPath,IPath[],IPath[],boolean)",1,6,6
"org.eclipse.jdt.core.JavaCore.newLibraryEntry(IPath,IPath,IPath,boolean)",1,1,1
"org.eclipse.jdt.core.JavaCore.newProjectEntry(IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newProjectEntry(IPath,IPath[],IPath[],boolean)",1,2,2
"org.eclipse.jdt.core.JavaCore.newProjectEntry(IPath,boolean)",1,2,2
"org.eclipse.jdt.core.JavaCore.newRegion()",1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[])",1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[],IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[],IPath[],IPath)",1,5,5
"org.eclipse.jdt.core.JavaCore.newVariableEntry(IPath,IPath,IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newVariableEntry(IPath,IPath,IPath,IPath[],IPath[],boolean)",1,3,3
"org.eclipse.jdt.core.JavaCore.newVariableEntry(IPath,IPath,IPath,boolean)",1,1,1
"org.eclipse.jdt.core.JavaCore.removeClasspathVariable(String)",1,1,1
"org.eclipse.jdt.core.JavaCore.removeClasspathVariable(String,IProgressMonitor)",1,1,2
"org.eclipse.jdt.core.JavaCore.removeElementChangedListener(IElementChangedListener)",1,1,1
"org.eclipse.jdt.core.JavaCore.removePreProcessingResourceChangedListener(IResourceChangeListener)",1,1,1
"org.eclipse.jdt.core.JavaCore.run(IWorkspaceRunnable,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.JavaCore.run(IWorkspaceRunnable,ISchedulingRule,IProgressMonitor)",1,2,2
"org.eclipse.jdt.core.JavaCore.setClasspathContainer(IPath,IJavaProject[],IClasspathContainer[],IProgressMonitor)",15,21,31
"org.eclipse.jdt.core.JavaCore.setClasspathVariable(String,IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.setClasspathVariable(String,IPath,IProgressMonitor)",1,2,2
"org.eclipse.jdt.core.JavaCore.setClasspathVariables(String[],IPath[],IProgressMonitor)",1,2,2
"org.eclipse.jdt.core.JavaCore.setOptions(Hashtable)",5,5,8
"org.eclipse.jdt.core.JavaCore.start(BundleContext)",1,6,6
"org.eclipse.jdt.core.JavaCore.startIndexing()",1,1,1
"org.eclipse.jdt.core.JavaCore.stop(BundleContext)",1,1,1
"org.eclipse.jdt.core.JavaModelException.JavaModelException(CoreException)",1,1,1
"org.eclipse.jdt.core.JavaModelException.JavaModelException(IJavaModelStatus)",1,1,1
"org.eclipse.jdt.core.JavaModelException.JavaModelException(Throwable,int)",1,1,1
"org.eclipse.jdt.core.JavaModelException.getException()",2,2,2
"org.eclipse.jdt.core.JavaModelException.getJavaModelStatus()",2,1,2
"org.eclipse.jdt.core.JavaModelException.isDoesNotExist()",1,2,2
"org.eclipse.jdt.core.JavaModelException.printStackTrace(PrintStream)",1,2,2
"org.eclipse.jdt.core.JavaModelException.printStackTrace(PrintWriter)",1,2,2
"org.eclipse.jdt.core.JavaModelException.toString()",1,3,3
"org.eclipse.jdt.core.NamingConventions.NamingConventions()",1,1,1
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithPrefix(char[],boolean)",1,4,4
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithPrefixAndSuffix(char[],boolean,boolean)",1,8,9
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithSuffix(char[],boolean)",1,4,4
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithoutPrefixAndSuffix(char[])",1,2,2
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.getResults()",1,1,1
"org.eclipse.jdt.core.NamingConventions.convertCharsToString(char[][])",1,2,3
"org.eclipse.jdt.core.NamingConventions.convertStringToChars(String[])",1,3,4
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffix(char[],char[][],char[][])",1,13,15
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForArgumentName(IJavaProject,String)",1,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForArgumentName(IJavaProject,char[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForFieldName(IJavaProject,String,int)",1,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForFieldName(IJavaProject,char[],int)",1,1,3
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForLocalVariableName(IJavaProject,String)",1,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForLocalVariableName(IJavaProject,char[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestAccessorName(IJavaProject,char[],int)",1,3,3
"org.eclipse.jdt.core.NamingConventions.suggestArgumentNames(IJavaProject,String,String,int,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestArgumentNames(IJavaProject,char[],char[],int,char[][])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestFieldNames(IJavaProject,String,String,int,int,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestFieldNames(IJavaProject,char[],char[],int,int,char[][])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestGetterName(IJavaProject,String,int,boolean,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestGetterName(IJavaProject,char[],int,boolean,char[][])",3,5,5
"org.eclipse.jdt.core.NamingConventions.suggestLocalVariableNames(IJavaProject,String,String,int,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestLocalVariableNames(IJavaProject,char[],char[],int,char[][])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestNewName(char[],char[][])",2,3,4
"org.eclipse.jdt.core.NamingConventions.suggestSetterName(IJavaProject,String,int,boolean,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestSetterName(IJavaProject,char[],int,boolean,char[][])",3,5,5
"org.eclipse.jdt.core.Signature.Signature()",1,1,1
"org.eclipse.jdt.core.Signature.appendArgumentSimpleNames(char[],int,int,StringBuffer)",2,7,10
"org.eclipse.jdt.core.Signature.appendArrayTypeSignature(char[],int,boolean,StringBuffer)",1,1,1
"org.eclipse.jdt.core.Signature.appendArrayTypeSignature(char[],int,boolean,StringBuffer,boolean)",3,2,4
"org.eclipse.jdt.core.Signature.appendClassTypeSignature(char[],int,boolean,StringBuffer)",7,6,16
"org.eclipse.jdt.core.Signature.appendSimpleName(char[],int,int,StringBuffer)",5,7,16
"org.eclipse.jdt.core.Signature.appendTypeArgumentSignature(char[],int,boolean,StringBuffer)",3,4,6
"org.eclipse.jdt.core.Signature.appendTypeArgumentSignatures(char[],int,boolean,StringBuffer)",6,4,7
"org.eclipse.jdt.core.Signature.appendTypeSignature(char[],int,boolean,StringBuffer)",1,1,1
"org.eclipse.jdt.core.Signature.appendTypeSignature(char[],int,boolean,StringBuffer,boolean)",9,8,19
"org.eclipse.jdt.core.Signature.checkArrayDimension(char[],int,int)",6,2,9
"org.eclipse.jdt.core.Signature.checkName(char[],char[],int,int)",6,3,6
"org.eclipse.jdt.core.Signature.checkNextChar(char[],char,int,int,boolean)",3,1,4
"org.eclipse.jdt.core.Signature.consumeWhitespace(char[],int,int)",3,3,4
"org.eclipse.jdt.core.Signature.createArraySignature(String,int)",1,1,1
"org.eclipse.jdt.core.Signature.createArraySignature(char[],int)",2,1,3
"org.eclipse.jdt.core.Signature.createCharArrayTypeSignature(char[],boolean)",4,1,4
"org.eclipse.jdt.core.Signature.createMethodSignature(String[],String)",1,2,2
"org.eclipse.jdt.core.Signature.createMethodSignature(char[][],char[])",1,2,3
"org.eclipse.jdt.core.Signature.createTypeParameterSignature(String,String[])",1,2,2
"org.eclipse.jdt.core.Signature.createTypeParameterSignature(char[],char[][])",2,3,4
"org.eclipse.jdt.core.Signature.createTypeSignature(String,boolean)",1,2,2
"org.eclipse.jdt.core.Signature.createTypeSignature(char[],boolean)",1,1,1
"org.eclipse.jdt.core.Signature.encodeArrayDimension(char[],int,int,StringBuffer)",1,3,3
"org.eclipse.jdt.core.Signature.encodeQualifiedName(char[],int,int,StringBuffer)",6,7,10
"org.eclipse.jdt.core.Signature.encodeTypeSignature(char[],int,boolean,int,StringBuffer)",16,18,29
"org.eclipse.jdt.core.Signature.getArrayCount(String)",1,1,1
"org.eclipse.jdt.core.Signature.getArrayCount(char[])",1,1,3
"org.eclipse.jdt.core.Signature.getElementType(String)",1,1,1
"org.eclipse.jdt.core.Signature.getElementType(char[])",2,1,2
"org.eclipse.jdt.core.Signature.getParameterCount(String)",1,1,1
"org.eclipse.jdt.core.Signature.getParameterCount(char[])",5,2,6
"org.eclipse.jdt.core.Signature.getParameterTypes(String)",1,1,1
"org.eclipse.jdt.core.Signature.getParameterTypes(char[])",6,2,7
"org.eclipse.jdt.core.Signature.getQualifier(String)",2,1,2
"org.eclipse.jdt.core.Signature.getQualifier(char[])",2,1,3
"org.eclipse.jdt.core.Signature.getReturnType(String)",1,1,1
"org.eclipse.jdt.core.Signature.getReturnType(char[])",2,1,2
"org.eclipse.jdt.core.Signature.getSignatureQualifier(String)",1,2,2
"org.eclipse.jdt.core.Signature.getSignatureQualifier(char[])",8,5,10
"org.eclipse.jdt.core.Signature.getSignatureSimpleName(String)",1,2,2
"org.eclipse.jdt.core.Signature.getSignatureSimpleName(char[])",8,5,10
"org.eclipse.jdt.core.Signature.getSimpleName(String)",6,4,11
"org.eclipse.jdt.core.Signature.getSimpleName(char[])",6,3,11
"org.eclipse.jdt.core.Signature.getSimpleNames(String)",1,1,1
"org.eclipse.jdt.core.Signature.getSimpleNames(char[])",6,4,9
"org.eclipse.jdt.core.Signature.getThrownExceptionTypes(String)",1,1,1
"org.eclipse.jdt.core.Signature.getThrownExceptionTypes(char[])",3,2,4
"org.eclipse.jdt.core.Signature.getTypeArguments(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeArguments(char[])",7,4,11
"org.eclipse.jdt.core.Signature.getTypeErasure(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeErasure(char[])",6,4,9
"org.eclipse.jdt.core.Signature.getTypeParameterBounds(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeParameterBounds(char[])",5,3,6
"org.eclipse.jdt.core.Signature.getTypeParameters(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeParameters(char[])",9,4,11
"org.eclipse.jdt.core.Signature.getTypeSignatureKind(String)",7,2,7
"org.eclipse.jdt.core.Signature.getTypeSignatureKind(char[])",7,2,7
"org.eclipse.jdt.core.Signature.getTypeVariable(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeVariable(char[])",2,1,2
"org.eclipse.jdt.core.Signature.scanArrayTypeSignature(char[],int)",3,1,3
"org.eclipse.jdt.core.Signature.scanBaseTypeSignature(char[],int)",3,1,3
"org.eclipse.jdt.core.Signature.scanClassTypeSignature(char[],int)",6,5,10
"org.eclipse.jdt.core.Signature.scanIdentifier(char[],int)",5,1,10
"org.eclipse.jdt.core.Signature.scanTypeArgumentSignature(char[],int)",4,2,5
"org.eclipse.jdt.core.Signature.scanTypeArgumentSignatures(char[],int)",6,2,6
"org.eclipse.jdt.core.Signature.scanTypeSignature(char[],int)",7,6,7
"org.eclipse.jdt.core.Signature.scanTypeVariableSignature(char[],int)",4,1,4
"org.eclipse.jdt.core.Signature.toCharArray(char[])",2,2,4
"org.eclipse.jdt.core.Signature.toCharArray(char[],char[],char[][],boolean,boolean)",1,1,1
"org.eclipse.jdt.core.Signature.toCharArray(char[],char[],char[][],boolean,boolean,boolean)",2,7,8
"org.eclipse.jdt.core.Signature.toQualifiedName(String[])",1,2,2
"org.eclipse.jdt.core.Signature.toQualifiedName(char[][])",3,2,6
"org.eclipse.jdt.core.Signature.toString(String)",1,1,1
"org.eclipse.jdt.core.Signature.toString(String,String,String[],boolean,boolean)",1,1,1
"org.eclipse.jdt.core.Signature.toString(String,String,String[],boolean,boolean,boolean)",1,4,4
"org.eclipse.jdt.core.ToolFactory.createCodeFormatter()",6,4,7
"org.eclipse.jdt.core.ToolFactory.createCodeFormatter(Map)",1,2,2
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileBytesDisassembler()",1,1,1
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileDisassembler()",1,1,1
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(IClassFile,int)",4,3,5
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(String,String,int)",3,3,8
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(String,int)",1,1,3
"org.eclipse.jdt.core.ToolFactory.createDefaultCodeFormatter(Map)",1,2,2
"org.eclipse.jdt.core.ToolFactory.createScanner(boolean,boolean,boolean,String)",1,1,2
"org.eclipse.jdt.core.ToolFactory.createScanner(boolean,boolean,boolean,boolean)",1,1,2
"org.eclipse.jdt.core.WorkingCopyOwner.createBuffer(ICompilationUnit)",1,1,1
"org.eclipse.jdt.core.WorkingCopyOwner.setPrimaryBufferProvider(WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.append(char[],char)",2,1,2
"org.eclipse.jdt.core.compiler.CharOperation.append(char[],int,char[],int,int)",1,2,2
"org.eclipse.jdt.core.compiler.CharOperation.arrayConcat(char[][],char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.arrayConcat(char[][],char[][])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.charArrayToStringArray(char[][])",3,1,4
"org.eclipse.jdt.core.compiler.CharOperation.charToString(char[])",2,1,2
"org.eclipse.jdt.core.compiler.CharOperation.compareWith(char[],char[])",4,1,4
"org.eclipse.jdt.core.compiler.CharOperation.concat(char,char[],char)",2,1,2
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char,char[],char,char[])",4,4,4
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char[],char)",5,1,5
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char[],char[])",4,4,4
"org.eclipse.jdt.core.compiler.CharOperation.concatWith(char[],char[][],char)",3,4,9
"org.eclipse.jdt.core.compiler.CharOperation.concatWith(char[][],char)",3,3,9
"org.eclipse.jdt.core.compiler.CharOperation.concatWith(char[][],char[],char)",3,4,9
"org.eclipse.jdt.core.compiler.CharOperation.contains(char,char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.contains(char,char[][])",4,1,4
"org.eclipse.jdt.core.compiler.CharOperation.deepCopy(char[][])",1,2,2
"org.eclipse.jdt.core.compiler.CharOperation.endsWith(char[],char[])",4,1,4
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[])",6,1,7
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[],boolean)",7,3,8
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[],int,int)",6,1,7
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[][],char[][])",6,2,7
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[][],char[][],boolean)",7,3,8
"org.eclipse.jdt.core.compiler.CharOperation.fragmentEquals(char[],char[],int,boolean)",7,2,7
"org.eclipse.jdt.core.compiler.CharOperation.hashCode(char[])",1,1,4
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char,char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char,char[],int)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.isWhitespace(char)",3,2,3
"org.eclipse.jdt.core.compiler.CharOperation.lastIndexOf(char,char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.lastIndexOf(char,char[],int)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.lastIndexOf(char,char[],int,int)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.lastSegment(char[],char)",2,1,2
"org.eclipse.jdt.core.compiler.CharOperation.match(char[],char[],boolean)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.match(char[],int,int,char[],int,int,boolean)",11,7,23
"org.eclipse.jdt.core.compiler.CharOperation.occurencesOf(char,char[])",1,1,3
"org.eclipse.jdt.core.compiler.CharOperation.occurencesOf(char,char[],int)",1,1,3
"org.eclipse.jdt.core.compiler.CharOperation.pathMatch(char[],char[],boolean,char)",15,7,49
"org.eclipse.jdt.core.compiler.CharOperation.prefixEquals(char[],char[])",4,1,4
"org.eclipse.jdt.core.compiler.CharOperation.prefixEquals(char[],char[],boolean)",7,2,7
"org.eclipse.jdt.core.compiler.CharOperation.replace(char[],char,char)",1,1,4
"org.eclipse.jdt.core.compiler.CharOperation.replace(char[],char[],char[])",6,5,9
"org.eclipse.jdt.core.compiler.CharOperation.replaceOnCopy(char[],char,char)",2,4,6
"org.eclipse.jdt.core.compiler.CharOperation.splitAndTrimOn(char,char[])",2,3,15
"org.eclipse.jdt.core.compiler.CharOperation.splitOn(char,char[])",2,3,7
"org.eclipse.jdt.core.compiler.CharOperation.splitOn(char,char[],int,int)",2,3,8
"org.eclipse.jdt.core.compiler.CharOperation.subarray(char[],int,int)",4,1,5
"org.eclipse.jdt.core.compiler.CharOperation.subarray(char[][],int,int)",4,1,5
"org.eclipse.jdt.core.compiler.CharOperation.toLowerCase(char[])",2,4,7
"org.eclipse.jdt.core.compiler.CharOperation.toString(char[][])",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.toStrings(char[][])",3,1,4
"org.eclipse.jdt.core.compiler.CharOperation.trim(char[])",3,2,8
"org.eclipse.jdt.core.compiler.InvalidInputException.InvalidInputException()",1,1,1
"org.eclipse.jdt.core.compiler.InvalidInputException.InvalidInputException(String)",1,1,1
"org.eclipse.jdt.core.dom.AST.AST()",1,1,1
"org.eclipse.jdt.core.dom.AST.AST(Map)",1,2,3
"org.eclipse.jdt.core.dom.AST.AST(int)",2,1,3
"org.eclipse.jdt.core.dom.AST.apiLevel()",1,1,1
"org.eclipse.jdt.core.dom.AST.convertCompilationUnit(int,CompilationUnitDeclaration,char[],Map,boolean,WorkingCopyOwner,IProgressMonitor)",1,1,2
"org.eclipse.jdt.core.dom.AST.createInstance(Class)",2,1,6
"org.eclipse.jdt.core.dom.AST.createInstance(int)",1,1,1
"org.eclipse.jdt.core.dom.AST.disableEvents()",1,1,1
"org.eclipse.jdt.core.dom.AST.getBindingResolver()",1,1,1
"org.eclipse.jdt.core.dom.AST.getDefaultNodeFlag()",1,1,1
"org.eclipse.jdt.core.dom.AST.getEventHandler()",1,1,1
"org.eclipse.jdt.core.dom.AST.modificationCount()",1,1,1
"org.eclipse.jdt.core.dom.AST.modifying()",2,1,2
"org.eclipse.jdt.core.dom.AST.newAST(int)",2,1,3
"org.eclipse.jdt.core.dom.AST.newAnnotationTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newAnnotationTypeMemberDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newAnonymousClassDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newArrayAccess()",1,1,1
"org.eclipse.jdt.core.dom.AST.newArrayCreation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newArrayInitializer()",1,1,1
"org.eclipse.jdt.core.dom.AST.newArrayType(Type)",1,1,1
"org.eclipse.jdt.core.dom.AST.newArrayType(Type,int)",3,3,6
"org.eclipse.jdt.core.dom.AST.newAssertStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newAssignment()",1,1,1
"org.eclipse.jdt.core.dom.AST.newBlock()",1,1,1
"org.eclipse.jdt.core.dom.AST.newBlockComment()",1,1,1
"org.eclipse.jdt.core.dom.AST.newBooleanLiteral(boolean)",1,1,1
"org.eclipse.jdt.core.dom.AST.newBreakStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newCastExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newCatchClause()",1,1,1
"org.eclipse.jdt.core.dom.AST.newCharacterLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newClassInstanceCreation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newCompilationUnit()",1,1,1
"org.eclipse.jdt.core.dom.AST.newConditionalExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newConstructorInvocation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newContinueStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newDoStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newEmptyStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newEnhancedForStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newEnumConstantDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newEnumDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newExpressionStatement(Expression)",1,1,1
"org.eclipse.jdt.core.dom.AST.newFieldAccess()",1,1,1
"org.eclipse.jdt.core.dom.AST.newFieldDeclaration(VariableDeclarationFragment)",2,1,2
"org.eclipse.jdt.core.dom.AST.newForStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newIfStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newImportDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newInfixExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newInitializer()",1,1,1
"org.eclipse.jdt.core.dom.AST.newInstanceofExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newJavadoc()",1,1,1
"org.eclipse.jdt.core.dom.AST.newLabeledStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newLineComment()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMarkerAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMemberRef()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMemberValuePair()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMethodDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMethodInvocation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMethodRef()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMethodRefParameter()",1,1,1
"org.eclipse.jdt.core.dom.AST.newModifier(ModifierKeyword)",1,1,1
"org.eclipse.jdt.core.dom.AST.newModifiers(int)",1,13,13
"org.eclipse.jdt.core.dom.AST.newName(String[])",2,2,3
"org.eclipse.jdt.core.dom.AST.newNormalAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newNullLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newNumberLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newNumberLiteral(String)",2,1,2
"org.eclipse.jdt.core.dom.AST.newPackageDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newParameterizedType(Type)",1,1,1
"org.eclipse.jdt.core.dom.AST.newParenthesizedExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newPostfixExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newPrefixExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newPrimitiveType(Code)",1,1,1
"org.eclipse.jdt.core.dom.AST.newQualifiedName(Name,SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.AST.newQualifiedType(Type,SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.AST.newReturnStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSimpleName(String)",2,1,2
"org.eclipse.jdt.core.dom.AST.newSimpleType(Name)",1,1,1
"org.eclipse.jdt.core.dom.AST.newSingleMemberAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSingleVariableDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newStringLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSuperConstructorInvocation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSuperFieldAccess()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSuperMethodInvocation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSwitchCase()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSwitchStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSynchronizedStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTagElement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTextElement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newThisExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newThrowStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTryStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTypeDeclarationStatement(AbstractTypeDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.AST.newTypeDeclarationStatement(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.AST.newTypeLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTypeParameter()",1,1,1
"org.eclipse.jdt.core.dom.AST.newVariableDeclarationExpression(VariableDeclarationFragment)",2,1,2
"org.eclipse.jdt.core.dom.AST.newVariableDeclarationFragment()",1,1,1
"org.eclipse.jdt.core.dom.AST.newVariableDeclarationStatement(VariableDeclarationFragment)",2,1,2
"org.eclipse.jdt.core.dom.AST.newWhileStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newWildcardType()",1,1,1
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(IClassFile,boolean)",2,1,3
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(ICompilationUnit,boolean)",1,1,2
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(char[])",2,1,2
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(char[],String,IJavaProject)",2,1,2
"org.eclipse.jdt.core.dom.AST.postAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.postCloneNodeEvent(ASTNode,ASTNode)",2,2,2
"org.eclipse.jdt.core.dom.AST.postRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.postReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.postValueChangeEvent(ASTNode,SimplePropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.preAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.preCloneNodeEvent(ASTNode)",2,2,2
"org.eclipse.jdt.core.dom.AST.preRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.preReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.preValueChangeEvent(ASTNode,SimplePropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.recordModifications(CompilationUnit)",5,4,5
"org.eclipse.jdt.core.dom.AST.reenableEvents()",1,1,1
"org.eclipse.jdt.core.dom.AST.resolveWellKnownType(String)",2,1,2
"org.eclipse.jdt.core.dom.AST.rewrite(IDocument,Map)",3,1,3
"org.eclipse.jdt.core.dom.AST.setBindingResolver(BindingResolver)",2,1,2
"org.eclipse.jdt.core.dom.AST.setDefaultNodeFlag(int)",1,1,1
"org.eclipse.jdt.core.dom.AST.setEventHandler(NodeEventHandler)",2,1,2
"org.eclipse.jdt.core.dom.AST.setOriginalModificationCount(long)",1,1,1
"org.eclipse.jdt.core.dom.AST.supportedOnlyIn2()",2,1,2
"org.eclipse.jdt.core.dom.AST.unsupportedIn2()",2,1,2
"org.eclipse.jdt.core.dom.ASTConverter.ASTConverter(Map,boolean,IProgressMonitor)",1,2,3
"org.eclipse.jdt.core.dom.ASTConverter.adjustSourcePositionsForParent(Expression)",2,3,7
"org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(TypeDeclaration,AbstractTypeDeclaration)",2,7,20
"org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(TypeDeclaration,AnonymousClassDeclaration)",2,7,20
"org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(TypeDeclaration,EnumDeclaration)",2,6,19
"org.eclipse.jdt.core.dom.ASTConverter.buildCommentsTable(CompilationUnit,int[][])",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(FieldDeclaration[],int,List)",2,4,5
"org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(Statement[],int,List)",1,3,4
"org.eclipse.jdt.core.dom.ASTConverter.checkCanceled()",2,2,3
"org.eclipse.jdt.core.dom.ASTConverter.completeRecord(ArrayType,ASTNode)",1,2,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(AND_AND_Expression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ASTNode[])",1,11,13
"org.eclipse.jdt.core.dom.ASTConverter.convert(AbstractMethodDeclaration)",9,31,39
"org.eclipse.jdt.core.dom.ASTConverter.convert(AllocationExpression)",3,8,10
"org.eclipse.jdt.core.dom.ASTConverter.convert(Annotation)",3,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(AnnotationMethodDeclaration)",2,5,6
"org.eclipse.jdt.core.dom.ASTConverter.convert(Argument)",2,7,9
"org.eclipse.jdt.core.dom.ASTConverter.convert(ArrayAllocationExpression)",1,11,11
"org.eclipse.jdt.core.dom.ASTConverter.convert(ArrayInitializer)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(ArrayReference)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(AssertStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Assignment)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(BinaryExpression)",6,14,39
"org.eclipse.jdt.core.dom.ASTConverter.convert(Block)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(BreakStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CaseStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CastExpression)",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(CharLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ClassLiteralAccess)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CompilationUnitDeclaration,char[])",1,12,12
"org.eclipse.jdt.core.dom.ASTConverter.convert(CompoundAssignment)",2,2,12
"org.eclipse.jdt.core.dom.ASTConverter.convert(ConditionalExpression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ContinueStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(DoubleLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(EqualExpression)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(ExplicitConstructorCall)",3,15,17
"org.eclipse.jdt.core.dom.ASTConverter.convert(Expression)",36,36,36
"org.eclipse.jdt.core.dom.ASTConverter.convert(ExtendedStringLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(FalseLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(FieldDeclaration)",1,7,7
"org.eclipse.jdt.core.dom.ASTConverter.convert(FieldReference)",2,8,8
"org.eclipse.jdt.core.dom.ASTConverter.convert(FloatLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ForStatement)",1,10,10
"org.eclipse.jdt.core.dom.ASTConverter.convert(ForeachStatement)",3,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(IfStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(InstanceOfExpression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(IntLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(IntLiteralMinValue)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Javadoc,BodyDeclaration)",1,9,10
"org.eclipse.jdt.core.dom.ASTConverter.convert(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(LongLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(LongLiteralMinValue)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(MemberValuePair)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(MessageSend)",3,25,28
"org.eclipse.jdt.core.dom.ASTConverter.convert(NameReference)",2,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(NormalAnnotation)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(NullLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(OR_OR_Expression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(PostfixExpression)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(PrefixExpression)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedAllocationExpression)",4,12,14
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedNameReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedSuperReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedThisReference)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Reference)",5,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(ReturnStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(SingleNameReference)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Statement)",29,29,32
"org.eclipse.jdt.core.dom.ASTConverter.convert(StringLiteral)",2,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(StringLiteralConcatenation)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(SwitchStatement)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(ThisReference)",4,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(TrueLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(TryStatement)",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(TypeDeclaration)",8,16,19
"org.eclipse.jdt.core.dom.ASTConverter.convert(TypeParameter)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(TypeReference)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(UnaryExpression)",2,3,6
"org.eclipse.jdt.core.dom.ASTConverter.convert(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convertImport(ImportReference)",2,6,7
"org.eclipse.jdt.core.dom.ASTConverter.convertPackage(CompilationUnitDeclaration)",2,6,7
"org.eclipse.jdt.core.dom.ASTConverter.convertToAnnotationDeclaration(TypeDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToEnumDeclaration(TypeDeclaration)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convertToExpression(Statement)",2,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(FieldDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(Expression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convertToSingleVariableDeclaration(LocalDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToType(NameReference)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationExpression(LocalDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(FieldDeclaration)",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(LocalDeclaration)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(LocalDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convertType(TypeReference)",4,28,36
"org.eclipse.jdt.core.dom.ASTConverter.createComment(int[])",3,3,4
"org.eclipse.jdt.core.dom.ASTConverter.createFakeEmptyStatement(Statement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.createModifier(ModifierKeyword)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.getOperatorFor(int)",20,2,20
"org.eclipse.jdt.core.dom.ASTConverter.getPrimitiveTypeCode(char[])",11,2,51
"org.eclipse.jdt.core.dom.ASTConverter.isPrimitiveType(char[])",18,2,51
"org.eclipse.jdt.core.dom.ASTConverter.lookupForScopes()",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.lookupScope(ASTNode)",8,8,18
"org.eclipse.jdt.core.dom.ASTConverter.recordName(Name,ASTNode)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.recordNodes(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.recordNodes(Javadoc,TagElement)",1,22,27
"org.eclipse.jdt.core.dom.ASTConverter.recordPendingNameScopeResolution(Name)",1,1,2
"org.eclipse.jdt.core.dom.ASTConverter.recordPendingThisExpressionScopeResolution(ThisExpression)",1,1,2
"org.eclipse.jdt.core.dom.ASTConverter.removeLeadingAndTrailingCommentsFromLiteral(ASTNode)",3,3,6
"org.eclipse.jdt.core.dom.ASTConverter.removeTrailingCommentFromExpressionEndingWithAParen(ASTNode)",2,4,6
"org.eclipse.jdt.core.dom.ASTConverter.retrieveClosingAngleBracketPosition(int)",4,2,5
"org.eclipse.jdt.core.dom.ASTConverter.retrieveColonPosition(ASTNode)",3,3,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEllipsisStartPosition(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndBlockPosition(int,int)",4,2,6
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndOfDimensionsPosition(int,int)",3,2,6
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndOfElementTypeNamePosition(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndOfRightParenthesisPosition(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndingSemiColonPosition(int,int)",4,2,11
"org.eclipse.jdt.core.dom.ASTConverter.retrieveExtraDimension(int,int)",3,2,5
"org.eclipse.jdt.core.dom.ASTConverter.retrieveIdentifierAndSetPositions(int,int,Name)",3,3,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveIdentifierEndPosition(int,int)",3,3,4
"org.eclipse.jdt.core.dom.ASTConverter.retrievePositionBeforeNextCommaOrSemiColon(int,int)",4,2,11
"org.eclipse.jdt.core.dom.ASTConverter.retrieveProperRightBracketPosition(int,int)",4,2,5
"org.eclipse.jdt.core.dom.ASTConverter.retrieveRightBrace(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveRightBraceOrSemiColonPosition(int,int)",4,2,5
"org.eclipse.jdt.core.dom.ASTConverter.retrieveRightBracketPosition(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveSemiColonPosition(ASTNode)",4,4,11
"org.eclipse.jdt.core.dom.ASTConverter.retrieveStartBlockPosition(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveStartingCatchPosition(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.setAST(AST)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(AnnotationTypeDeclaration,TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(AnnotationTypeMemberDeclaration,AnnotationMethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(BodyDeclaration,Annotation[])",2,6,18
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(EnumDeclaration,TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(FieldDeclaration,FieldDeclaration)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(Initializer,Initializer)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(MethodDeclaration,AbstractMethodDeclaration)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(SingleVariableDeclaration,Argument)",3,7,21
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(SingleVariableDeclaration,LocalDeclaration)",2,5,18
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(TypeDeclaration,TypeDeclaration)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(VariableDeclarationExpression,LocalDeclaration)",3,7,21
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(VariableDeclarationStatement,LocalDeclaration)",3,7,21
"org.eclipse.jdt.core.dom.ASTConverter.setQualifiedNameNameAndSourceRanges(char[][],long[],ASTNode)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.setQualifiedNameNameAndSourceRanges(char[][],long[],int,int,ASTNode)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForField(FieldDeclaration,Type,int)",1,6,6
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForMethodDeclaration(AnnotationTypeMemberDeclaration,Type,int)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForMethodDeclaration(MethodDeclaration,Type,int)",5,9,13
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForSingleVariableDeclaration(SingleVariableDeclaration,Type,int)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForVariableDeclarationExpression(VariableDeclarationExpression,Type,int)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForVariableDeclarationStatement(VariableDeclarationStatement,Type,int)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.setTypeNameForAnnotation(Annotation,Annotation)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.trimWhiteSpacesAndComments(Expression)",3,3,9
"org.eclipse.jdt.core.dom.ASTConverter.updateInnerPositions(Type,int)",1,3,3
"org.eclipse.jdt.core.dom.ASTMatcher.ASTMatcher()",1,1,1
"org.eclipse.jdt.core.dom.ASTMatcher.ASTMatcher(boolean)",1,1,1
"org.eclipse.jdt.core.dom.ASTMatcher.compareDeprecatedComment(Javadoc,Javadoc)",2,2,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(AnnotationTypeDeclaration,Object)",2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(AnnotationTypeMemberDeclaration,Object)",2,5,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(AnonymousClassDeclaration,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayAccess,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayCreation,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayInitializer,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayType,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(AssertStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(Assignment,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(Block,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(BlockComment,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(BooleanLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(BreakStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(CastExpression,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(CatchClause,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(CharacterLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ClassInstanceCreation,Object)",7,5,9
"org.eclipse.jdt.core.dom.ASTMatcher.match(CompilationUnit,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ConditionalExpression,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ConstructorInvocation,Object)",4,2,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ContinueStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(DoStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(EmptyStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(EnhancedForStatement,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(EnumConstantDeclaration,Object)",2,6,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(EnumDeclaration,Object)",2,6,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(ExpressionStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(FieldAccess,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(FieldDeclaration,Object)",6,5,8
"org.eclipse.jdt.core.dom.ASTMatcher.match(ForStatement,Object)",2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(IfStatement,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ImportDeclaration,Object)",4,3,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(InfixExpression,Object)",5,5,8
"org.eclipse.jdt.core.dom.ASTMatcher.match(Initializer,Object)",6,4,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(InstanceofExpression,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(Javadoc,Object)",3,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(LabeledStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(LineComment,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(MarkerAnnotation,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(MemberRef,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(MemberValuePair,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodDeclaration,Object)",9,9,15
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodInvocation,Object)",4,4,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodRef,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodRefParameter,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(Modifier,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(NormalAnnotation,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(NullLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(NumberLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(PackageDeclaration,Object)",5,2,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(ParameterizedType,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(ParenthesizedExpression,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(PostfixExpression,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(PrefixExpression,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(PrimitiveType,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(QualifiedName,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(QualifiedType,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(ReturnStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SimpleName,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SimpleType,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SingleMemberAnnotation,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(SingleVariableDeclaration,Object)",7,6,10
"org.eclipse.jdt.core.dom.ASTMatcher.match(StringLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperConstructorInvocation,Object)",4,3,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperFieldAccess,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperMethodInvocation,Object)",4,4,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(SwitchCase,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SwitchStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(SynchronizedStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(TagElement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(TextElement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ThisExpression,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ThrowStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(TryStatement,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeDeclaration,Object)",11,6,14
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeDeclarationStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeParameter,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(VariableDeclarationExpression,Object)",6,4,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(VariableDeclarationFragment,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(VariableDeclarationStatement,Object)",6,4,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(WhileStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(WildcardType,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.safeEquals(Object,Object)",3,1,4
"org.eclipse.jdt.core.dom.ASTMatcher.safeSubtreeListMatch(List,List)",4,2,4
"org.eclipse.jdt.core.dom.ASTMatcher.safeSubtreeMatch(Object,Object)",3,1,5
"org.eclipse.jdt.core.dom.ASTNode.ASTNode(AST)",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.hasNext()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.next()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.remove()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.update(int,int)",1,1,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.NodeList(ChildListPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.add(int,Object)",3,1,3
"org.eclipse.jdt.core.dom.ASTNode.NodeList.get(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.listSize()",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.newCursor()",1,1,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.releaseCursor(Cursor)",1,1,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.remove(int)",3,1,3
"org.eclipse.jdt.core.dom.ASTNode.NodeList.set(int,Object)",5,1,5
"org.eclipse.jdt.core.dom.ASTNode.NodeList.size()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.updateCursors(int,int)",2,2,3
"org.eclipse.jdt.core.dom.ASTNode.accept(ASTVisitor)",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTVisitor,ASTNode)",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTVisitor,NodeList)",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.addProperty(StructuralPropertyDescriptor,List)",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.appendDebugString(StringBuffer)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.appendPrintString(StringBuffer)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.checkModifiable()",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.checkNewChild(ASTNode,ASTNode,boolean,Class)",6,3,8
"org.eclipse.jdt.core.dom.ASTNode.clone(AST)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.copySubtree(AST,ASTNode)",4,1,4
"org.eclipse.jdt.core.dom.ASTNode.copySubtrees(AST,List)",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.createPropertyList(Class,List)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.delete()",3,3,4
"org.eclipse.jdt.core.dom.ASTNode.equals(Object)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getAST()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getFlags()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getLength()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getLocationInParent()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getNodeType()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getParent()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getProperty(String)",5,2,5
"org.eclipse.jdt.core.dom.ASTNode.getRoot()",3,2,3
"org.eclipse.jdt.core.dom.ASTNode.getStartPosition()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getStructuralProperty(StructuralPropertyDescriptor)",6,6,6
"org.eclipse.jdt.core.dom.ASTNode.internalGetChildListProperty(ChildListPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.nodeClassForType(int)",84,2,84
"org.eclipse.jdt.core.dom.ASTNode.postLazyInit(ASTNode,ChildPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.postReplaceChild(ASTNode,ASTNode,ChildPropertyDescriptor)",1,3,3
"org.eclipse.jdt.core.dom.ASTNode.postValueChange(SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.preLazyInit()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.preReplaceChild(ASTNode,ASTNode,ChildPropertyDescriptor)",4,6,8
"org.eclipse.jdt.core.dom.ASTNode.preValueChange(SimplePropertyDescriptor)",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.properties()",3,3,4
"org.eclipse.jdt.core.dom.ASTNode.reapPropertyList(List)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.setFlags(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.setNodeType(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.setParent(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.setProperty(String,Object)",8,4,10
"org.eclipse.jdt.core.dom.ASTNode.setSourceRange(int,int)",3,1,5
"org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(StructuralPropertyDescriptor,Object)",8,7,10
"org.eclipse.jdt.core.dom.ASTNode.standardToString()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.stringSize(String)",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.structuralPropertiesForType()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.subtreeBytes()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.subtreeMatch(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2()",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.toString()",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.unsupportedIn2()",2,1,2
"org.eclipse.jdt.core.dom.ASTParser.ASTParser(int)",2,1,3
"org.eclipse.jdt.core.dom.ASTParser.createAST(IProgressMonitor)",2,1,4
"org.eclipse.jdt.core.dom.ASTParser.createASTs(ICompilationUnit[],String[],ASTRequestor,IProgressMonitor)",3,2,3
"org.eclipse.jdt.core.dom.ASTParser.initializeDefaults()",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(IProgressMonitor)",8,9,21
"org.eclipse.jdt.core.dom.ASTParser.internalCreateASTForKind()",5,13,16
"org.eclipse.jdt.core.dom.ASTParser.newParser(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.propagateErrors(ASTNode,IProblem[])",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.rootNodeToCompilationUnit(AST,CompilationUnit,ASTNode,RecordedParsingInformation)",2,8,10
"org.eclipse.jdt.core.dom.ASTParser.setCompilerOptions(Map)",1,2,2
"org.eclipse.jdt.core.dom.ASTParser.setFocalPosition(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setKind(int)",2,1,5
"org.eclipse.jdt.core.dom.ASTParser.setProject(IJavaProject)",1,2,2
"org.eclipse.jdt.core.dom.ASTParser.setResolveBindings(boolean)",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setSource(IClassFile)",1,2,2
"org.eclipse.jdt.core.dom.ASTParser.setSource(ICompilationUnit)",1,2,2
"org.eclipse.jdt.core.dom.ASTParser.setSource(char[])",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setSourceRange(int,int)",2,1,3
"org.eclipse.jdt.core.dom.ASTParser.setUnitName(String)",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setWorkingCopyOwner(WorkingCopyOwner)",1,1,2
"org.eclipse.jdt.core.dom.ASTRequestor.ASTRequestor()",1,1,1
"org.eclipse.jdt.core.dom.ASTRequestor.acceptAST(ICompilationUnit,CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.ASTRequestor.acceptBinding(String,IBinding)",1,1,1
"org.eclipse.jdt.core.dom.ASTRequestor.createBindings(String[])",1,3,3
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.ASTSyntaxErrorPropagator(IProblem[])",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.checkAndTagAsMalformed(ASTNode)",3,5,8
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.ASTVisitor()",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.ASTVisitor(boolean)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AnnotationTypeMemberDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayCreation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AssertStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Assignment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Block)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(BlockComment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(BooleanLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(BreakStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CastExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CatchClause)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ContinueStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EnumConstantDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EnumDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ForStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(IfStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(InfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Javadoc)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(LineComment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MemberValuePair)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodRefParameter)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Modifier)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NullLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NumberLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ParameterizedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PostfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PrefixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PrimitiveType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(QualifiedName)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(QualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ReturnStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SimpleType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SingleVariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(StringLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SwitchCase)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SwitchStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TagElement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TextElement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ThisExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TryStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeParameter)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(VariableDeclarationExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(VariableDeclarationFragment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(WildcardType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.postVisit(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.preVisit(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AnnotationTypeMemberDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayCreation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AssertStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Assignment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Block)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(BlockComment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(BooleanLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(BreakStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CastExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CatchClause)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ContinueStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EnumConstantDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EnumDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ForStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(IfStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(InfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Javadoc)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(LineComment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MemberValuePair)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodRefParameter)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Modifier)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NullLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NumberLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ParameterizedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PostfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PrefixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PrimitiveType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(QualifiedName)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(QualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ReturnStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SimpleType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SingleVariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(StringLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SwitchCase)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SwitchStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TagElement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TextElement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ThisExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TryStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeParameter)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(VariableDeclarationExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(VariableDeclarationFragment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(WildcardType)",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.AbstractTypeDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.bodyDeclarations()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.getBodyDeclarationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.getNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.internalBodyDeclarationPropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.internalNamePropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.isLocalTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.isMemberTypeDeclaration()",1,1,3
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.isPackageMemberTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.Annotation.Annotation(AST)",1,1,1
"org.eclipse.jdt.core.dom.Annotation.getTypeName()",1,3,3
"org.eclipse.jdt.core.dom.Annotation.getTypeNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.internalTypeNamePropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isMarkerAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isModifier()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isNormalAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isSingleMemberAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.setTypeName(Name)",2,1,2
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.AnnotationTypeDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalBodyDeclarationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalResolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.AnnotationTypeMemberDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getDefault()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getType()",1,3,3
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",11,11,11
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.setDefault(Expression)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.treeSize()",1,5,5
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.AnonymousClassDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.bodyDeclarations()",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.ArrayAccess(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ArrayAccess.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.getArray()",1,3,3
"org.eclipse.jdt.core.dom.ArrayAccess.getIndex()",1,3,3
"org.eclipse.jdt.core.dom.ArrayAccess.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.ArrayAccess.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.setArray(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ArrayAccess.setIndex(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ArrayAccess.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.ArrayCreation.ArrayCreation(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ArrayCreation.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.dimensions()",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.getInitializer()",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.getType()",1,3,3
"org.eclipse.jdt.core.dom.ArrayCreation.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.ArrayCreation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.ArrayCreation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.setInitializer(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.setType(ArrayType)",2,1,2
"org.eclipse.jdt.core.dom.ArrayCreation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.ArrayInitializer.ArrayInitializer(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ArrayInitializer.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.expressions()",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.ArrayInitializer.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.ArrayType(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ArrayType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.getComponentType()",1,3,3
"org.eclipse.jdt.core.dom.ArrayType.getDimensions()",1,2,2
"org.eclipse.jdt.core.dom.ArrayType.getElementType()",1,2,2
"org.eclipse.jdt.core.dom.ArrayType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ArrayType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.setComponentType(Type)",2,1,2
"org.eclipse.jdt.core.dom.ArrayType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.AssertStatement.AssertStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.AssertStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.AssertStatement.getMessage()",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.AssertStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.AssertStatement.setMessage(Expression)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.Assignment.Assignment(AST)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.Operator.Operator(String)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.Operator.toOperator(String)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.Operator.toString()",1,1,1
"org.eclipse.jdt.core.dom.Assignment.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.Assignment.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.getLeftHandSide()",1,3,3
"org.eclipse.jdt.core.dom.Assignment.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Assignment.getOperator()",1,1,1
"org.eclipse.jdt.core.dom.Assignment.getRightHandSide()",1,3,3
"org.eclipse.jdt.core.dom.Assignment.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.Assignment.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.Assignment.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Assignment.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.setLeftHandSide(Expression)",2,1,2
"org.eclipse.jdt.core.dom.Assignment.setOperator(Operator)",2,1,2
"org.eclipse.jdt.core.dom.Assignment.setRightHandSide(Expression)",2,1,2
"org.eclipse.jdt.core.dom.Assignment.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(Binding,Binding,boolean)",11,8,13
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(FieldBinding,FieldBinding)",1,4,4
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(MethodBinding,MethodBinding,boolean)",2,12,14
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding,TypeBinding,boolean)",21,32,41
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding[],TypeBinding[])",1,1,1
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding[],TypeBinding[],boolean)",6,4,6
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeVariableBinding[],TypeVariableBinding[])",6,7,9
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(VariableBinding,VariableBinding)",1,3,3
"org.eclipse.jdt.core.dom.BindingKey.BindingKey(String,CompilationUnitResolver)",1,1,1
"org.eclipse.jdt.core.dom.BindingKey.compoundName()",2,4,6
"org.eclipse.jdt.core.dom.BindingKey.getArrayBinding(int,TypeBinding)",3,1,3
"org.eclipse.jdt.core.dom.BindingKey.getBaseTypeBinding(char[])",11,2,11
"org.eclipse.jdt.core.dom.BindingKey.getBinaryBinding()",1,1,1
"org.eclipse.jdt.core.dom.BindingKey.getCompilationUnitDeclaration()",3,1,3
"org.eclipse.jdt.core.dom.BindingKey.getCompilerBinding()",1,4,4
"org.eclipse.jdt.core.dom.BindingKey.getCompilerBinding(CompilationUnitDeclaration)",11,15,18
"org.eclipse.jdt.core.dom.BindingKey.getFieldBinding(FieldBinding[])",4,2,4
"org.eclipse.jdt.core.dom.BindingKey.getGenericTypeBinding(SourceTypeBinding)",4,2,4
"org.eclipse.jdt.core.dom.BindingKey.getKey()",1,1,1
"org.eclipse.jdt.core.dom.BindingKey.getLocalVariableBinding(BlockScope)",7,3,7
"org.eclipse.jdt.core.dom.BindingKey.getMethodBinding(MethodBinding[])",5,5,7
"org.eclipse.jdt.core.dom.BindingKey.getParameterizedGenericMethodBinding(MethodBinding)",3,2,3
"org.eclipse.jdt.core.dom.BindingKey.getParameterizedTypeBinding(ReferenceBinding,ReferenceBinding)",4,6,6
"org.eclipse.jdt.core.dom.BindingKey.getTypeBinding(CompilationUnitDeclaration,TypeDeclaration[],char[])",8,9,11
"org.eclipse.jdt.core.dom.BindingKey.getWildCardBinding(ReferenceBinding,int)",5,2,7
"org.eclipse.jdt.core.dom.BindingKey.reset()",1,1,1
"org.eclipse.jdt.core.dom.BindingKey.toString()",1,1,1
"org.eclipse.jdt.core.dom.BindingKeyScanner.BindingKeyScanner(char[])",1,1,1
"org.eclipse.jdt.core.dom.BindingKeyScanner.getTokenSource()",1,1,1
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtFieldOrMethodStart()",1,1,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtLocalVariableStart()",1,1,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtMemberTypeStart()",1,1,4
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtParametersStart()",1,1,4
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtTypeParameterStart()",1,1,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtTypeStart()",1,2,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtWildCardStart()",1,2,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.nextToken()",10,4,32
"org.eclipse.jdt.core.dom.BindingKeyScanner.skipMethodSignature()",1,1,4
"org.eclipse.jdt.core.dom.BindingKeyScanner.skipParametersEnd()",1,1,3
"org.eclipse.jdt.core.dom.BindingKeyScanner.toString()",2,5,13
"org.eclipse.jdt.core.dom.BindingResolver.BindingResolver()",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.findDeclaringNode(IBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.findDeclaringNode(String)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getCorrespondingNode(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getMethodBinding(MethodBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getPackageBinding(PackageBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getTypeBinding(TypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getVariableBinding(VariableBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.recordScope(ASTNode,BlockScope)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveExpressionType(Expression)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveField(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveField(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveImport(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMember(AnnotationTypeMemberDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveName(Name)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolvePackage(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveReference(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveReference(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(EnumDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(Type)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveTypeParameter(TypeParameter)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveVariable(EnumConstantDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveVariable(VariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveWellKnownType(String)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.store(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.updateKey(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.Block.Block(AST)",1,1,1
"org.eclipse.jdt.core.dom.Block.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.Block.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.Block.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Block.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.Block.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Block.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Block.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.Block.statements()",1,1,1
"org.eclipse.jdt.core.dom.Block.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Block.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.BlockComment(AST)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.BodyDeclaration(AST)",1,2,2
"org.eclipse.jdt.core.dom.BodyDeclaration.getJavadoc()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.getJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.getModifiers()",2,4,4
"org.eclipse.jdt.core.dom.BodyDeclaration.getModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalJavadocPropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalModifiers2PropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalModifiersPropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.modifiers()",1,2,2
"org.eclipse.jdt.core.dom.BodyDeclaration.setJavadoc(Javadoc)",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.setModifiers(int)",1,2,2
"org.eclipse.jdt.core.dom.BooleanLiteral.BooleanLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.booleanValue()",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.BooleanLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.setBooleanValue(boolean)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.BreakStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.BreakStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.getLabel()",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.BreakStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.setLabel(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.CastExpression.CastExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.CastExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.CastExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.getType()",1,3,3
"org.eclipse.jdt.core.dom.CastExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.CastExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.CastExpression.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.CastExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.CatchClause.CatchClause(AST)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.CatchClause.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.getBody()",1,3,3
"org.eclipse.jdt.core.dom.CatchClause.getException()",1,3,3
"org.eclipse.jdt.core.dom.CatchClause.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.CatchClause.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.memSize()",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.setBody(Block)",2,1,2
"org.eclipse.jdt.core.dom.CatchClause.setException(SingleVariableDeclaration)",2,1,2
"org.eclipse.jdt.core.dom.CatchClause.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.CharacterLiteral.CharacterLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.charValue()",25,15,34
"org.eclipse.jdt.core.dom.CharacterLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.getEscapedValue()",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.CharacterLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.setCharValue(char)",2,2,18
"org.eclipse.jdt.core.dom.CharacterLiteral.setEscapedValue(String)",3,2,5
"org.eclipse.jdt.core.dom.CharacterLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor.ChildListPropertyDescriptor(Class,String,Class,boolean)",2,1,2
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor.cycleRisk()",1,1,1
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor.getElementType()",1,1,1
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.ChildPropertyDescriptor(Class,String,Class,boolean,boolean)",2,2,3
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.cycleRisk()",1,1,1
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.getChildType()",1,1,1
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.isMandatory()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.ClassInstanceCreation(AST)",1,1,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ASTVisitor)",1,4,4
"org.eclipse.jdt.core.dom.ClassInstanceCreation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getAnonymousClassDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getName()",1,3,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getType()",1,3,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",9,9,9
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.resolveConstructorBinding()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setAnonymousClassDeclaration(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setName(Name)",2,1,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.treeSize()",1,7,7
"org.eclipse.jdt.core.dom.ClassInstanceCreation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.Comment.Comment(AST)",1,1,1
"org.eclipse.jdt.core.dom.Comment.getAlternateRoot()",1,1,1
"org.eclipse.jdt.core.dom.Comment.isBlockComment()",1,1,1
"org.eclipse.jdt.core.dom.Comment.isDocComment()",1,1,1
"org.eclipse.jdt.core.dom.Comment.isLineComment()",1,1,1
"org.eclipse.jdt.core.dom.Comment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Comment.setAlternateRoot(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.CompilationUnit(AST)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.CompilationUnit.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.findDeclaringNode(IBinding)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.findDeclaringNode(String)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getCommentList()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getCommentMapper()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getExtendedLength(ASTNode)",2,2,2
"org.eclipse.jdt.core.dom.CompilationUnit.getExtendedStartPosition(ASTNode)",2,2,2
"org.eclipse.jdt.core.dom.CompilationUnit.getMessages()",1,4,4
"org.eclipse.jdt.core.dom.CompilationUnit.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getPackage()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getProblems()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.imports()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.initCommentMapper(Scanner)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.CompilationUnit.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.CompilationUnit.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.lineNumber(int)",7,2,8
"org.eclipse.jdt.core.dom.CompilationUnit.memSize()",1,1,3
"org.eclipse.jdt.core.dom.CompilationUnit.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.recordModifications()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.rewrite(IDocument,Map)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.setCommentTable(Comment[])",5,3,7
"org.eclipse.jdt.core.dom.CompilationUnit.setLineEndTable(int[])",2,1,2
"org.eclipse.jdt.core.dom.CompilationUnit.setPackage(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.setProblems(IProblem[])",2,1,2
"org.eclipse.jdt.core.dom.CompilationUnit.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.treeSize()",1,6,6
"org.eclipse.jdt.core.dom.CompilationUnit.types()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.CompilationUnitResolver(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.accept(ISourceType[],PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.beginToCompile(ICompilationUnit[],String[])",2,7,8
"org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitDeclaration,char[],int,Map,boolean,WorkingCopyOwner,BindingTables,IProgressMonitor)",1,1,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.createBinding(String)",4,2,4
"org.eclipse.jdt.core.dom.CompilationUnitResolver.getHandlingPolicy()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.getRequestor()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.handleInternalException(AbortCompilation,CompilationUnitDeclaration)",1,2,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.handleInternalException(Throwable,CompilationUnitDeclaration,CompilationResult)",1,2,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.initializeParser()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.parse(ICompilationUnit,NodeSearcher,Map)",6,7,12
"org.eclipse.jdt.core.dom.CompilationUnitResolver.parse(ICompilationUnit[],ASTRequestor,int,Map,IProgressMonitor)",3,4,5
"org.eclipse.jdt.core.dom.CompilationUnitResolver.removeUnresolvedBindings(CompilationUnitDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.CompilationUnitResolver.removeUnresolvedBindings(TypeDeclaration)",1,3,13
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitDeclaration,ICompilationUnit,NodeSearcher,boolean,boolean,boolean)",1,17,20
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitDeclaration,ICompilationUnit,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit,IJavaProject,NodeSearcher,Map,WorkingCopyOwner,IProgressMonitor)",1,2,4
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit[],String[],ASTRequestor,int,Map,IJavaProject,WorkingCopyOwner,IProgressMonitor)",1,3,5
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit[],String[],ASTRequestor,int,Map,WorkingCopyOwner,IProgressMonitor)",3,12,13
"org.eclipse.jdt.core.dom.ConditionalExpression.ConditionalExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ConditionalExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.getElseExpression()",1,3,3
"org.eclipse.jdt.core.dom.ConditionalExpression.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.ConditionalExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.getThenExpression()",1,3,3
"org.eclipse.jdt.core.dom.ConditionalExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.ConditionalExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.setElseExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ConditionalExpression.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ConditionalExpression.setThenExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ConditionalExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.ConstructorInvocation.ConstructorInvocation(AST)",1,1,2
"org.eclipse.jdt.core.dom.ConstructorInvocation.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.ConstructorInvocation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.ConstructorInvocation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.ConstructorInvocation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.ConstructorInvocation.resolveConstructorBinding()",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.ConstructorInvocation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.ContinueStatement.ContinueStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ContinueStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.getLabel()",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ContinueStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.setLabel(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.DefaultASTVisitor.DefaultASTVisitor()",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayCreation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(AssertStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Assignment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Block)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(BlockComment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(BooleanLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(BreakStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CastExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CatchClause)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ContinueStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ForStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(IfStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(InfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Javadoc)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(LineComment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodRefParameter)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(NullLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(NumberLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PostfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PrefixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PrimitiveType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(QualifiedName)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ReturnStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SimpleType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SingleVariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(StringLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SwitchCase)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SwitchStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TagElement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TextElement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ThisExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TryStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(VariableDeclarationExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(VariableDeclarationFragment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisitNode(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayCreation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(AssertStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Assignment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Block)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(BlockComment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(BooleanLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(BreakStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CastExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CatchClause)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ContinueStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ForStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(IfStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(InfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Javadoc)",2,2,2
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(LineComment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodRefParameter)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(NullLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(NumberLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PostfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PrefixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PrimitiveType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(QualifiedName)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ReturnStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SimpleType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SingleVariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(StringLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SwitchCase)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SwitchStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TagElement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TextElement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ThisExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TryStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(VariableDeclarationExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(VariableDeclarationFragment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visitNode(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.BindingTables.BindingTables()",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.DefaultBindingResolver(CompilationUnitScope,WorkingCopyOwner,BindingTables)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.DefaultBindingResolver(LookupEnvironment,WorkingCopyOwner,BindingTables)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.findDeclaringNode(IBinding)",2,1,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.findDeclaringNode(String)",3,1,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getBinding(Binding)",5,5,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getCorrespondingNode(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getMethodBinding(MethodBinding)",8,6,8
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getPackageBinding(PackageBinding)",3,2,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getTypeBinding(TypeBinding)",8,6,9
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getVariableBinding(VariableBinding)",8,6,8
"org.eclipse.jdt.core.dom.DefaultBindingResolver.recordScope(ASTNode,BlockScope)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(ClassInstanceCreation)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(ConstructorInvocation)",2,2,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(SuperConstructorInvocation)",2,2,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveExpressionType(Expression)",41,36,43
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveField(FieldAccess)",3,3,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveField(SuperFieldAccess)",3,3,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveImport(ImportDeclaration)",8,6,11
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMember(AnnotationTypeMemberDeclaration)",4,4,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(MethodDeclaration)",4,4,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(MethodInvocation)",3,3,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(SuperMethodInvocation)",3,3,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName(Name)",59,57,68
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolvePackage(PackageDeclaration)",4,5,7
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveReference(MemberRef)",4,4,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveReference(MethodRef)",3,3,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(AnonymousClassDeclaration)",4,4,6
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(EnumDeclaration)",4,4,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(Type)",8,12,14
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(TypeDeclaration)",4,4,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveTypeParameter(TypeParameter)",4,4,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveVariable(EnumConstantDeclaration)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveVariable(VariableDeclaration)",5,5,7
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveWellKnownType(String)",12,20,20
"org.eclipse.jdt.core.dom.DefaultBindingResolver.store(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.updateKey(ASTNode,ASTNode)",1,2,2
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.endVisitNode(ASTNode)",1,2,3
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.visit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.visitNode(ASTNode)",1,2,4
"org.eclipse.jdt.core.dom.DefaultCommentMapper.DefaultCommentMapper(Comment[])",1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getComment(int)",4,1,4
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getCommentIndex(int,int,int)",8,6,12
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getExtendedEnd(ASTNode)",1,3,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getExtendedLength(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getExtendedStartPosition(ASTNode)",3,3,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getLeadingComments(ASTNode)",3,3,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getTrailingComments(ASTNode)",3,3,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.hasSameTable(Comment[])",1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.initialize(CompilationUnit,Scanner)",6,4,10
"org.eclipse.jdt.core.dom.DefaultCommentMapper.storeLeadingComments(ASTNode,int)",8,13,26
"org.eclipse.jdt.core.dom.DefaultCommentMapper.storeTrailingComments(ASTNode,int,boolean)",16,12,28
"org.eclipse.jdt.core.dom.DoStatement.DoStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.DoStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.DoStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.DoStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.DoStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.DoStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.DoStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.DocCommentParser.DocCommentParser(AST,Scanner,boolean)",1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.createArgumentReference(char[],int,Object,long[],long)",1,5,8
"org.eclipse.jdt.core.dom.DocCommentParser.createFieldReference(Object)",1,2,3
"org.eclipse.jdt.core.dom.DocCommentParser.createMethodReference(Object,List)",1,4,5
"org.eclipse.jdt.core.dom.DocCommentParser.createTag()",2,6,15
"org.eclipse.jdt.core.dom.DocCommentParser.createTypeReference(int)",3,5,15
"org.eclipse.jdt.core.dom.DocCommentParser.parse(int,int)",1,3,3
"org.eclipse.jdt.core.dom.DocCommentParser.parse(int[])",1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.parseReturn()",1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.parseTag(int)",7,16,31
"org.eclipse.jdt.core.dom.DocCommentParser.pushParamName(boolean)",1,2,3
"org.eclipse.jdt.core.dom.DocCommentParser.pushSeeRef(Object)",2,4,6
"org.eclipse.jdt.core.dom.DocCommentParser.pushText(int,int)",1,5,5
"org.eclipse.jdt.core.dom.DocCommentParser.pushThrowName(Object)",2,2,3
"org.eclipse.jdt.core.dom.DocCommentParser.refreshInlineTagPosition(int)",1,5,5
"org.eclipse.jdt.core.dom.DocCommentParser.setComment(int,int)",1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.toString()",1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.updateDocComment()",1,2,2
"org.eclipse.jdt.core.dom.EmptyStatement.EmptyStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.EnhancedForStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.EnhancedForStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.EnhancedForStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.getParameter()",1,3,3
"org.eclipse.jdt.core.dom.EnhancedForStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.EnhancedForStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.setParameter(SingleVariableDeclaration)",2,1,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.EnumConstantDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.appendDebugString(StringBuffer)",1,7,7
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.arguments()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.bodyDeclarations()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.getAnonymousClassDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",4,4,4
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.obsoleteBodyDeclarations()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.resolveVariable()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.setAnonymousClassDeclaration(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.EnumDeclaration.EnumDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.EnumDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.enumConstants()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalBodyDeclarationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",5,5,5
"org.eclipse.jdt.core.dom.EnumDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.EnumDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalResolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.superInterfaceTypes()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.Expression.Expression(AST)",1,1,1
"org.eclipse.jdt.core.dom.Expression.resolveTypeBinding()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.ExpressionStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ExpressionStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.ExpressionStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ExpressionStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ExpressionStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.FieldAccess.FieldAccess(AST)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.FieldAccess.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.FieldAccess.getName()",1,3,3
"org.eclipse.jdt.core.dom.FieldAccess.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.FieldAccess.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.memSize()",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.resolveFieldBinding()",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.FieldAccess.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.FieldAccess.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.FieldDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.appendDebugString(StringBuffer)",1,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.fragments()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.getType()",1,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.FieldDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.FieldDeclaration.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.FieldDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.ForStatement.ForStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ForStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.ForStatement.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.initializers()",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.ForStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.ForStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.ForStatement.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.ForStatement.updaters()",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.IfStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.IfStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.getElseStatement()",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.IfStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.getThenStatement()",1,3,3
"org.eclipse.jdt.core.dom.IfStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.IfStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.setElseStatement(Statement)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.IfStatement.setThenStatement(Statement)",2,1,2
"org.eclipse.jdt.core.dom.IfStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.ImportDeclaration.ImportDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ImportDeclaration.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.ImportDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.ImportDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",5,5,5
"org.eclipse.jdt.core.dom.ImportDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ImportDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.isOnDemand()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.isStatic()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.ImportDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.setName(Name)",2,1,2
"org.eclipse.jdt.core.dom.ImportDeclaration.setOnDemand(boolean)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.setStatic(boolean)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.InfixExpression.InfixExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.Operator.Operator(String)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.Operator.toOperator(String)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.Operator.toString()",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.InfixExpression.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.InfixExpression.extendedOperands()",1,1,2
"org.eclipse.jdt.core.dom.InfixExpression.getLeftOperand()",1,3,3
"org.eclipse.jdt.core.dom.InfixExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.getOperator()",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.getRightOperand()",1,3,3
"org.eclipse.jdt.core.dom.InfixExpression.hasExtendedOperands()",1,2,2
"org.eclipse.jdt.core.dom.InfixExpression.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.InfixExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.InfixExpression.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.InfixExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.setLeftOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.InfixExpression.setOperator(Operator)",2,1,2
"org.eclipse.jdt.core.dom.InfixExpression.setRightOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.InfixExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.Initializer.Initializer(AST)",1,1,1
"org.eclipse.jdt.core.dom.Initializer.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.Initializer.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.Initializer.getBody()",1,3,3
"org.eclipse.jdt.core.dom.Initializer.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.Initializer.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.Initializer.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.Initializer.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Initializer.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.Initializer.setBody(Block)",2,1,2
"org.eclipse.jdt.core.dom.Initializer.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Initializer.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.InstanceofExpression.InstanceofExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.InstanceofExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.getLeftOperand()",1,3,3
"org.eclipse.jdt.core.dom.InstanceofExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.getRightOperand()",1,3,3
"org.eclipse.jdt.core.dom.InstanceofExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.InstanceofExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.setLeftOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.InstanceofExpression.setRightOperand(Type)",2,1,2
"org.eclipse.jdt.core.dom.InstanceofExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.InternalASTRewrite.InternalASTRewrite(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.getListEvent(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.getNodeEvent(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.getRootNode()",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.markAsMoveOrCopyTarget(ASTNode,ASTNode)",1,4,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.postAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,4,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.postCloneNodeEvent(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.postValueChangeEvent(ASTNode,SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.preAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,4,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.preCloneNodeEvent(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.preRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,4,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.preReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",1,5,5
"org.eclipse.jdt.core.dom.InternalASTRewrite.preValueChangeEvent(ASTNode,SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.rewriteAST(IDocument,Map)",1,2,2
"org.eclipse.jdt.core.dom.InternalASTRewrite.toString()",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.Javadoc(AST)",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.Javadoc.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.Javadoc.getComment()",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.Javadoc.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.Javadoc.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.memSize()",1,2,2
"org.eclipse.jdt.core.dom.Javadoc.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.Javadoc.setComment(String)",6,2,8
"org.eclipse.jdt.core.dom.Javadoc.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.tags()",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.LabeledStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.LabeledStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.LabeledStatement.getLabel()",1,3,3
"org.eclipse.jdt.core.dom.LabeledStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.LabeledStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.LabeledStatement.setLabel(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.LabeledStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.LineComment.LineComment(AST)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.LineComment.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.LineComment.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.MarkerAnnotation(AST)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MarkerAnnotation.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.MarkerAnnotation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.internalTypeNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.MemberRef.MemberRef(AST)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MemberRef.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.getName()",1,3,3
"org.eclipse.jdt.core.dom.MemberRef.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MemberRef.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MemberRef.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.MemberValuePair.MemberValuePair(AST)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MemberValuePair.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.getName()",1,3,3
"org.eclipse.jdt.core.dom.MemberValuePair.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.getValue()",1,3,3
"org.eclipse.jdt.core.dom.MemberValuePair.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MemberValuePair.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MemberValuePair.setValue(Expression)",2,1,2
"org.eclipse.jdt.core.dom.MemberValuePair.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.Message.Message(String,int)",3,1,3
"org.eclipse.jdt.core.dom.Message.Message(String,int,int)",3,1,4
"org.eclipse.jdt.core.dom.Message.getLength()",1,1,1
"org.eclipse.jdt.core.dom.Message.getMessage()",1,1,1
"org.eclipse.jdt.core.dom.Message.getSourcePosition()",1,1,1
"org.eclipse.jdt.core.dom.Message.getStartPosition()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.MethodBinding(BindingResolver,MethodBinding)",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getDeclaringClass()",1,2,2
"org.eclipse.jdt.core.dom.MethodBinding.getErasure()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getExceptionTypes()",2,3,4
"org.eclipse.jdt.core.dom.MethodBinding.getFullyQualifiedName(Type,StringBuffer)",8,11,12
"org.eclipse.jdt.core.dom.MethodBinding.getJavaElement()",6,4,10
"org.eclipse.jdt.core.dom.MethodBinding.getKey()",1,2,2
"org.eclipse.jdt.core.dom.MethodBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getModifiers()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getName()",1,3,3
"org.eclipse.jdt.core.dom.MethodBinding.getParameterTypes()",2,3,4
"org.eclipse.jdt.core.dom.MethodBinding.getReturnType()",1,2,2
"org.eclipse.jdt.core.dom.MethodBinding.getSignature(Type)",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getTypeArguments()",2,5,6
"org.eclipse.jdt.core.dom.MethodBinding.getTypeParameters()",2,4,5
"org.eclipse.jdt.core.dom.MethodBinding.isConstructor()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isDefaultConstructor()",2,1,2
"org.eclipse.jdt.core.dom.MethodBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isEqualTo(IBinding)",4,1,4
"org.eclipse.jdt.core.dom.MethodBinding.isGenericMethod()",2,1,3
"org.eclipse.jdt.core.dom.MethodBinding.isParameterizedMethod()",1,1,2
"org.eclipse.jdt.core.dom.MethodBinding.isRawMethod()",1,1,2
"org.eclipse.jdt.core.dom.MethodBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isVarargs()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.overrides(IMethodBinding)",4,1,4
"org.eclipse.jdt.core.dom.MethodBinding.toString()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.MethodDeclaration(AST)",1,1,2
"org.eclipse.jdt.core.dom.MethodDeclaration.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.appendDebugString(StringBuffer)",1,3,4
"org.eclipse.jdt.core.dom.MethodDeclaration.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.getBody()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getExtraDimensions()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getReturnType()",1,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.getReturnType2()",1,3,5
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",5,5,5
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",11,11,11
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",5,5,5
"org.eclipse.jdt.core.dom.MethodDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.isConstructor()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.isVarargs()",2,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.parameters()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.MethodDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setBody(Block)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setConstructor(boolean)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setExtraDimensions(int)",2,1,2
"org.eclipse.jdt.core.dom.MethodDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MethodDeclaration.setReturnType(Type)",2,1,2
"org.eclipse.jdt.core.dom.MethodDeclaration.setReturnType2(Type)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.thrownExceptions()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.treeSize()",1,7,7
"org.eclipse.jdt.core.dom.MethodDeclaration.typeParameters()",1,2,2
"org.eclipse.jdt.core.dom.MethodInvocation.MethodInvocation(AST)",1,1,2
"org.eclipse.jdt.core.dom.MethodInvocation.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.MethodInvocation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.MethodInvocation.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.getName()",1,3,3
"org.eclipse.jdt.core.dom.MethodInvocation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.MethodInvocation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MethodInvocation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.MethodInvocation.resolveMethodBinding()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MethodInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.treeSize()",1,5,5
"org.eclipse.jdt.core.dom.MethodInvocation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.MethodRef.MethodRef(AST)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MethodRef.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.getName()",1,3,3
"org.eclipse.jdt.core.dom.MethodRef.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.MethodRef.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MethodRef.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.parameters()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MethodRef.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.MethodRefParameter.MethodRefParameter(AST)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MethodRefParameter.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.getName()",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.getType()",1,3,3
"org.eclipse.jdt.core.dom.MethodRefParameter.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MethodRefParameter.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.setName(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.MethodRefParameter.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.Modifier.Modifier(AST)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.ModifierKeyword(String,int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.fromFlagValue(int)",3,2,3
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.toFlagValue()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.toKeyword(String)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.toString()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.getKeyword()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.Modifier.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isAbstract(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isFinal(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isModifier()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isNative(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isPrivate(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isProtected(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isPublic(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isStatic(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isStrictfp(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isSynchronized(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isTransient(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isVolatile(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.setKeyword(ModifierKeyword)",2,1,2
"org.eclipse.jdt.core.dom.Modifier.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.NaiveASTFlattener()",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.getResult()",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.printIndent()",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.printModifiers(List)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.printModifiers(int)",1,12,12
"org.eclipse.jdt.core.dom.NaiveASTFlattener.reset()",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(AnnotationTypeDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(AnnotationTypeMemberDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(AnonymousClassDeclaration)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ArrayAccess)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ArrayCreation)",1,4,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ArrayInitializer)",1,3,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(AssertStatement)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Assignment)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Block)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(BlockComment)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(BooleanLiteral)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(BreakStatement)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(CastExpression)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(CatchClause)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ClassInstanceCreation)",1,10,10
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(CompilationUnit)",1,4,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ConstructorInvocation)",1,7,7
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ContinueStatement)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(EnumConstantDeclaration)",1,6,6
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(EnumDeclaration)",1,9,9
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(FieldDeclaration)",1,6,6
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ForStatement)",1,4,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(IfStatement)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ImportDeclaration)",1,4,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(InfixExpression)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Initializer)",1,4,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Javadoc)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(LineComment)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MemberRef)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MemberValuePair)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MethodDeclaration)",1,17,17
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MethodInvocation)",1,8,8
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MethodRef)",1,4,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MethodRefParameter)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Modifier)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(NormalAnnotation)",1,3,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(NullLiteral)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(NumberLiteral)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(PackageDeclaration)",1,4,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ParameterizedType)",1,3,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(PostfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(PrefixExpression)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(PrimitiveType)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(QualifiedName)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(QualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ReturnStatement)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SimpleType)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SingleVariableDeclaration)",1,7,7
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(StringLiteral)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SuperConstructorInvocation)",1,8,8
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SuperFieldAccess)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SuperMethodInvocation)",1,8,8
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SwitchCase)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SwitchStatement)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TagElement)",1,7,10
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TextElement)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ThisExpression)",1,2,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TryStatement)",1,3,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TypeDeclaration)",1,21,24
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TypeDeclarationStatement)",1,3,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TypeLiteral)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TypeParameter)",1,4,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(VariableDeclarationExpression)",1,5,5
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(VariableDeclarationFragment)",1,3,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(VariableDeclarationStatement)",1,5,5
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(WildcardType)",1,3,3
"org.eclipse.jdt.core.dom.Name.Name(AST)",1,1,1
"org.eclipse.jdt.core.dom.Name.getFullyQualifiedName()",2,2,2
"org.eclipse.jdt.core.dom.Name.isQualifiedName()",1,1,1
"org.eclipse.jdt.core.dom.Name.isSimpleName()",1,1,1
"org.eclipse.jdt.core.dom.Name.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.NodeEventHandler()",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postCloneNodeEvent(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postValueChangeEvent(ASTNode,SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preCloneNodeEvent(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preValueChangeEvent(ASTNode,SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeSearcher.NodeSearcher(int)",1,1,1
"org.eclipse.jdt.core.dom.NodeSearcher.visit(ConstructorDeclaration,ClassScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(FieldDeclaration,MethodScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(Initializer,MethodScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(MethodDeclaration,ClassScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(TypeDeclaration,ClassScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(TypeDeclaration,CompilationUnitScope)",2,1,3
"org.eclipse.jdt.core.dom.NormalAnnotation.NormalAnnotation(AST)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.NormalAnnotation.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.NormalAnnotation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.NormalAnnotation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.internalTypeNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.NormalAnnotation.values()",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.NullLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.NumberLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.getToken()",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.NumberLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.setToken(String)",4,4,9
"org.eclipse.jdt.core.dom.NumberLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.PackageBinding(PackageBinding)",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.computeNameAndComponents()",1,3,4
"org.eclipse.jdt.core.dom.PackageBinding.getJavaElement()",4,1,4
"org.eclipse.jdt.core.dom.PackageBinding.getKey()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.getModifiers()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.getName()",1,2,2
"org.eclipse.jdt.core.dom.PackageBinding.getNameComponents()",1,2,2
"org.eclipse.jdt.core.dom.PackageBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.isEqualTo(IBinding)",4,1,4
"org.eclipse.jdt.core.dom.PackageBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.isUnnamed()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.toString()",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.PackageDeclaration(AST)",1,1,2
"org.eclipse.jdt.core.dom.PackageDeclaration.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.PackageDeclaration.annotations()",1,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.getJavadoc()",1,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.PackageDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.PackageDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.PackageDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.setJavadoc(Javadoc)",1,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.setName(Name)",2,1,2
"org.eclipse.jdt.core.dom.PackageDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.ParameterizedType.ParameterizedType(AST)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ParameterizedType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.getType()",1,3,3
"org.eclipse.jdt.core.dom.ParameterizedType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.ParameterizedType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ParameterizedType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.ParameterizedType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.ParameterizedType.typeArguments()",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.ParenthesizedExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ParenthesizedExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.ParenthesizedExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ParenthesizedExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ParenthesizedExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.PostfixExpression.Operator.Operator(String)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.Operator.toOperator(String)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.Operator.toString()",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.PostfixExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.PostfixExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.getOperand()",1,3,3
"org.eclipse.jdt.core.dom.PostfixExpression.getOperator()",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.PostfixExpression.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.PostfixExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.setOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.PostfixExpression.setOperator(Operator)",2,1,2
"org.eclipse.jdt.core.dom.PostfixExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.PrefixExpression.Operator.Operator(String)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.Operator.toOperator(String)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.Operator.toString()",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.PrefixExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.PrefixExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.getOperand()",1,3,3
"org.eclipse.jdt.core.dom.PrefixExpression.getOperator()",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.PrefixExpression.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.PrefixExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.setOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.PrefixExpression.setOperator(Operator)",2,1,2
"org.eclipse.jdt.core.dom.PrefixExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.PrimitiveType.Code.Code(String)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.Code.toString()",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.PrimitiveType(AST)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.getPrimitiveTypeCode()",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.PrimitiveType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.setPrimitiveTypeCode(Code)",2,1,2
"org.eclipse.jdt.core.dom.PrimitiveType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.toCode(String)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.QualifiedName(AST)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.QualifiedName.appendName(StringBuffer)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.getName()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedName.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.getQualifier()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedName.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.QualifiedName.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.memSize()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.QualifiedName.setQualifier(Name)",2,1,2
"org.eclipse.jdt.core.dom.QualifiedName.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedType.QualifiedType(AST)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.QualifiedType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.getName()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.getQualifier()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.QualifiedType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.QualifiedType.setQualifier(Type)",2,1,2
"org.eclipse.jdt.core.dom.QualifiedType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.ReturnStatement.ReturnStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ReturnStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ReturnStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.SimpleName.SimpleName(AST)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.appendName(StringBuffer)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.getIdentifier()",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.SimpleName.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.isDeclaration()",11,3,12
"org.eclipse.jdt.core.dom.SimpleName.memSize()",1,2,2
"org.eclipse.jdt.core.dom.SimpleName.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.setIdentifier(String)",3,2,5
"org.eclipse.jdt.core.dom.SimpleName.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor.SimplePropertyDescriptor(Class,String,Class,boolean)",2,2,3
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor.getValueType()",1,1,1
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor.isMandatory()",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.SimpleType(AST)",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SimpleType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.getName()",1,3,3
"org.eclipse.jdt.core.dom.SimpleType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.SimpleType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.setName(Name)",2,1,2
"org.eclipse.jdt.core.dom.SimpleType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.SingleMemberAnnotation(AST)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.getValue()",1,3,3
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.internalTypeNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.setValue(Expression)",2,1,2
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.SingleVariableDeclaration(AST)",1,1,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getExtraDimensions()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getInitializer()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getModifiers()",2,4,4
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getType()",1,3,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalExtraDimensionsProperty()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",5,5,5
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalInitializerProperty()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.isVarargs()",1,2,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.modifiers()",1,2,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setExtraDimensions(int)",2,1,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setInitializer(Expression)",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setVarargs(boolean)",1,2,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.treeSize()",1,5,5
"org.eclipse.jdt.core.dom.Statement.Statement(AST)",1,1,1
"org.eclipse.jdt.core.dom.Statement.copyLeadingComment(Statement)",1,1,1
"org.eclipse.jdt.core.dom.Statement.getLeadingComment()",1,1,1
"org.eclipse.jdt.core.dom.Statement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Statement.setLeadingComment(String)",6,3,8
"org.eclipse.jdt.core.dom.StringLiteral.StringLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.getEscapedValue()",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.getLiteralValue()",4,5,7
"org.eclipse.jdt.core.dom.StringLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.StringLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.setEscapedValue(String)",3,2,5
"org.eclipse.jdt.core.dom.StringLiteral.setLiteralValue(String)",3,3,20
"org.eclipse.jdt.core.dom.StringLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.StructuralPropertyDescriptor(Class,String)",2,1,3
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.getId()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.getNodeClass()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.isChildListProperty()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.isChildProperty()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.isSimpleProperty()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.toString()",1,6,6
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.SuperConstructorInvocation(AST)",1,1,2
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.resolveConstructorBinding()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.SuperFieldAccess.SuperFieldAccess(AST)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SuperFieldAccess.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.getName()",1,3,3
"org.eclipse.jdt.core.dom.SuperFieldAccess.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.SuperFieldAccess.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.resolveFieldBinding()",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.SuperFieldAccess.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.SuperMethodInvocation(AST)",1,1,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.getName()",1,3,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.SuperMethodInvocation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.resolveMethodBinding()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.treeSize()",1,5,5
"org.eclipse.jdt.core.dom.SuperMethodInvocation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.SwitchCase.SwitchCase(AST)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SwitchCase.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.SwitchCase.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.SwitchCase.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.isDefault()",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.SwitchStatement.SwitchStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SwitchStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.SwitchStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.SwitchStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.SwitchStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.SwitchStatement.statements()",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.SynchronizedStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.SynchronizedStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.SynchronizedStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.SynchronizedStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.setBody(Block)",2,1,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.TagElement.TagElement(AST)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.TagElement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.fragments()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.getTagName()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.TagElement.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.TagElement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.isNested()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.setTagName(String)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.TextElement.TextElement(AST)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TextElement.getText()",1,1,1
"org.eclipse.jdt.core.dom.TextElement.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.TextElement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.memSize()",1,2,2
"org.eclipse.jdt.core.dom.TextElement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.setText(String)",3,1,3
"org.eclipse.jdt.core.dom.TextElement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.ThisExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ThisExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ThisExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.ThrowStatement.ThrowStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ThrowStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.ThrowStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ThrowStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ThrowStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.TryStatement.TryStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.TryStatement.catchClauses()",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.TryStatement.getFinally()",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.TryStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.TryStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.setBody(Block)",2,1,2
"org.eclipse.jdt.core.dom.TryStatement.setFinally(Block)",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.Type.Type(AST)",1,1,1
"org.eclipse.jdt.core.dom.Type.isArrayType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isParameterizedType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isPrimitiveType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isQualifiedType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isSimpleType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isWildcardType()",1,1,1
"org.eclipse.jdt.core.dom.Type.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.TypeBinding(BindingResolver,TypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getBinaryName()",2,1,2
"org.eclipse.jdt.core.dom.TypeBinding.getBound()",3,3,3
"org.eclipse.jdt.core.dom.TypeBinding.getClassFile(char[])",3,2,4
"org.eclipse.jdt.core.dom.TypeBinding.getCompilationUnit(char[])",5,2,5
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredFields()",2,5,6
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredMethods()",2,7,8
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredModifiers()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredTypes()",2,5,6
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaringClass()",3,3,5
"org.eclipse.jdt.core.dom.TypeBinding.getDimensions()",2,1,2
"org.eclipse.jdt.core.dom.TypeBinding.getElementType()",2,1,2
"org.eclipse.jdt.core.dom.TypeBinding.getErasure()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getInterfaces()",4,5,8
"org.eclipse.jdt.core.dom.TypeBinding.getJavaElement()",12,11,18
"org.eclipse.jdt.core.dom.TypeBinding.getKey()",1,2,2
"org.eclipse.jdt.core.dom.TypeBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getModifiers()",5,4,5
"org.eclipse.jdt.core.dom.TypeBinding.getName()",9,11,16
"org.eclipse.jdt.core.dom.TypeBinding.getPackage()",2,3,3
"org.eclipse.jdt.core.dom.TypeBinding.getPackageFragment(char[],int)",7,5,8
"org.eclipse.jdt.core.dom.TypeBinding.getQualifiedName()",12,16,23
"org.eclipse.jdt.core.dom.TypeBinding.getSuperclass()",3,5,7
"org.eclipse.jdt.core.dom.TypeBinding.getTypeArguments()",3,4,4
"org.eclipse.jdt.core.dom.TypeBinding.getTypeBounds()",3,6,8
"org.eclipse.jdt.core.dom.TypeBinding.getTypeParameters()",3,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isAnonymous()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isArray()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isAssignmentCompatible(ITypeBinding)",2,1,2
"org.eclipse.jdt.core.dom.TypeBinding.isCastCompatible(ITypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isClass()",1,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isDeprecated()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isEnum()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isEqualTo(IBinding)",4,1,4
"org.eclipse.jdt.core.dom.TypeBinding.isFromSource()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isGenericType()",1,1,2
"org.eclipse.jdt.core.dom.TypeBinding.isInterface()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isLocal()",2,5,5
"org.eclipse.jdt.core.dom.TypeBinding.isMember()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isNested()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isNullType()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isParameterizedType()",1,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isPrimitive()",1,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isRawType()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isSubTypeCompatible(ITypeBinding)",4,1,4
"org.eclipse.jdt.core.dom.TypeBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isTopLevel()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isTypeVariable()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isUpperbound()",1,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isWildcardType()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.shouldBeRemoved(MethodBinding)",1,4,4
"org.eclipse.jdt.core.dom.TypeBinding.toString()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.TypeDeclaration(AST)",1,1,3
"org.eclipse.jdt.core.dom.TypeDeclaration.accept0(ASTVisitor)",1,4,4
"org.eclipse.jdt.core.dom.TypeDeclaration.appendDebugString(StringBuffer)",1,3,4
"org.eclipse.jdt.core.dom.TypeDeclaration.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.TypeDeclaration.getFields()",1,3,5
"org.eclipse.jdt.core.dom.TypeDeclaration.getMethods()",1,3,5
"org.eclipse.jdt.core.dom.TypeDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.getSuperclass()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.getSuperclassType()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.getTypes()",1,3,5
"org.eclipse.jdt.core.dom.TypeDeclaration.internalBodyDeclarationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",6,6,6
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",9,9,9
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.TypeDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalResolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.isInterface()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.TypeDeclaration.setInterface(boolean)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.setSuperclass(Name)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.setSuperclassType(Type)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.superInterfaceTypes()",1,2,2
"org.eclipse.jdt.core.dom.TypeDeclaration.superInterfaces()",1,2,2
"org.eclipse.jdt.core.dom.TypeDeclaration.treeSize()",1,9,9
"org.eclipse.jdt.core.dom.TypeDeclaration.typeParameters()",1,2,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.TypeDeclarationStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.getDeclaration()",1,3,3
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.getTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.resolveBinding()",3,3,3
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.setDeclaration(AbstractTypeDeclaration)",2,1,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.setTypeDeclaration(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.TypeLiteral.TypeLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.TypeLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.getType()",1,3,3
"org.eclipse.jdt.core.dom.TypeLiteral.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.TypeLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.TypeLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.TypeParameter.TypeParameter(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.TypeParameter.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.getName()",1,3,3
"org.eclipse.jdt.core.dom.TypeParameter.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.TypeParameter.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.TypeParameter.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.TypeParameter.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.TypeParameter.typeBounds()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.VariableBinding(BindingResolver,VariableBinding)",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.getConstantValue()",12,10,12
"org.eclipse.jdt.core.dom.VariableBinding.getDeclaringClass()",2,3,3
"org.eclipse.jdt.core.dom.VariableBinding.getDeclaringMethod()",6,4,7
"org.eclipse.jdt.core.dom.VariableBinding.getJavaElement()",6,3,7
"org.eclipse.jdt.core.dom.VariableBinding.getKey()",1,2,2
"org.eclipse.jdt.core.dom.VariableBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.getModifiers()",3,2,3
"org.eclipse.jdt.core.dom.VariableBinding.getName()",1,1,2
"org.eclipse.jdt.core.dom.VariableBinding.getType()",1,2,2
"org.eclipse.jdt.core.dom.VariableBinding.getVariableId()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.isDeprecated()",2,2,2
"org.eclipse.jdt.core.dom.VariableBinding.isEqualTo(IBinding)",9,4,9
"org.eclipse.jdt.core.dom.VariableBinding.isField()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.isSynthetic()",2,2,2
"org.eclipse.jdt.core.dom.VariableBinding.toString()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.VariableDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getExtraDimensionsProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getInitializerProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.VariableDeclarationExpression(AST)",1,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.fragments()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.getModifiers()",2,4,4
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.getType()",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.modifiers()",1,2,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.setModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.VariableDeclarationFragment(AST)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.getExtraDimensions()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.getInitializer()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.getName()",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalExtraDimensionsProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalInitializerProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.setExtraDimensions(int)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.setInitializer(Expression)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.VariableDeclarationStatement(AST)",1,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.fragments()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.getModifiers()",2,4,4
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.getType()",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.modifiers()",1,2,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.setModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.WhileStatement.WhileStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.WhileStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.WhileStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.WhileStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.WhileStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.WhileStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.WhileStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.WildcardType.WildcardType(AST)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.WildcardType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.getBound()",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.WildcardType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.WildcardType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.isUpperBound()",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.setBound(Type)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.setBound(Type,boolean)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.setUpperBound(boolean)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.ASTRewrite(AST)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.create(AST)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createCopyTarget(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createGroupNode(ASTNode[])",2,2,4
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createMoveTarget(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createStringPlaceholder(String,int)",3,1,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createTargetNode(ASTNode,boolean)",3,2,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getAST()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getListRewrite(ASTNode,ChildListPropertyDescriptor)",2,1,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getNodeStore()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getRewriteEventStore()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getRootNode()",1,8,14
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.remove(ASTNode,TextEditGroup)",2,2,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.replace(ASTNode,ASTNode,TextEditGroup)",2,2,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.rewriteAST(IDocument,Map)",2,2,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.set(ASTNode,StructuralPropertyDescriptor,Object,TextEditGroup)",2,2,4
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.toString()",1,2,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.track(ASTNode)",2,2,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validateIsInsideAST(ASTNode)",3,1,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validateIsListProperty(StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validatePropertyType(StructuralPropertyDescriptor,Object)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.ListRewrite(ASTRewrite,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.createCopyTarget(ASTNode,ASTNode)",2,2,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.createTargetNode(ASTNode,ASTNode,boolean)",3,2,4
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getASTRewrite()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getEvent()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getOriginalList()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getRewriteStore()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getRewrittenList()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertAfter(ASTNode,ASTNode,TextEditGroup)",3,1,4
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertAt(ASTNode,int,TextEditGroup)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertBefore(ASTNode,ASTNode,TextEditGroup)",3,1,4
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertFirst(ASTNode,TextEditGroup)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertLast(ASTNode,TextEditGroup)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.internalInsertAt(ASTNode,int,boolean,TextEditGroup)",1,3,3
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.isInsertBoundToPreviousByDefault(ASTNode)",1,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.remove(ASTNode,TextEditGroup)",2,2,3
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.replace(ASTNode,ASTNode,TextEditGroup)",2,2,3
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.createAlignmentValue(boolean,int,int)",3,3,9
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getEclipse21Settings()",1,1,1
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getForceWrapping(String)",2,1,3
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getIndentStyle(String)",4,1,5
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getJavaConventionsSettings()",1,1,1
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getWrappingStyle(String)",8,2,9
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.setForceWrapping(String,boolean)",2,1,4
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.setIndentStyle(String,int)",4,3,7
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.setWrappingStyle(String,int)",4,3,10
"org.eclipse.jdt.core.jdom.DOMException.DOMException()",1,1,1
"org.eclipse.jdt.core.jdom.DOMException.DOMException(String)",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.DOMFactory()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createClass()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createCompilationUnit()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createCompilationUnit(String,String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createCompilationUnit(char[],String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createField()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createField(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createImport()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createImport(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createInitializer()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createInitializer(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createInterface()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createMethod()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createMethod(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createPackage()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createPackage(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createType()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createType(String)",2,1,2
"org.eclipse.jdt.core.search.FieldDeclarationMatch.FieldDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.FieldReferenceMatch.FieldReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.FieldReferenceMatch.isReadAccess()",1,1,1
"org.eclipse.jdt.core.search.FieldReferenceMatch.isWriteAccess()",1,1,1
"org.eclipse.jdt.core.search.LocalVariableDeclarationMatch.LocalVariableDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch.LocalVariableReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch.isReadAccess()",1,1,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch.isWriteAccess()",1,1,1
"org.eclipse.jdt.core.search.MethodDeclarationMatch.MethodDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.MethodReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.MethodReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.isConstructor()",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.isSynthetic()",1,1,1
"org.eclipse.jdt.core.search.PackageDeclarationMatch.PackageDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.PackageReferenceMatch.PackageReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.SearchDocument(String,SearchParticipant)",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.addIndexEntry(char[],char[])",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.getParticipant()",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.getPath()",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.removeAllIndexEntries()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.ResultCollectorAdapter(IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.acceptSearchMatch(SearchMatch)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.beginReporting()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.endReporting()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine(ICompilationUnit[])",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine(IWorkingCopy[])",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine(WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchPatternAdapter.SearchPatternAdapter(SearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createHierarchyScope(IType)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createHierarchyScope(IType,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IJavaElement[])",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IJavaElement[],int)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IResource[])",1,2,2
"org.eclipse.jdt.core.search.SearchEngine.createOrSearchPattern(ISearchPattern,ISearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createSearchPattern(IJavaElement,int)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createSearchPattern(String,int,int,boolean)",1,2,4
"org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.getDefaultSearchParticipant()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.search(IWorkspace,IJavaElement,int,IJavaSearchScope,IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.search(IWorkspace,ISearchPattern,IJavaSearchScope,IJavaSearchResultCollector)",2,1,3
"org.eclipse.jdt.core.search.SearchEngine.search(IWorkspace,String,int,int,IJavaSearchScope,IJavaSearchResultCollector)",2,2,5
"org.eclipse.jdt.core.search.SearchEngine.search(SearchPattern,SearchParticipant[],IJavaSearchScope,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(IWorkspace,char[],char[],int,boolean,int,IJavaSearchScope,ITypeNameRequestor,int,IProgressMonitor)",1,1,2
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(char[],char[],int,int,IJavaSearchScope,ITypeNameRequestor,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfAccessedFields(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfAccessedFields(IWorkspace,IJavaElement,IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(IWorkspace,IJavaElement,IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfSentMessages(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfSentMessages(IWorkspace,IJavaElement,IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.SearchMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getAccuracy()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getElement()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getLength()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getOffset()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getParticipant()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getResource()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.isInsideDocComment()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setAccuracy(int)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setElement(Object)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setInsideDocComment(boolean)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setLength(int)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setOffset(int)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setParticipant(SearchParticipant)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setResource(IResource)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.toString()",1,2,3
"org.eclipse.jdt.core.search.SearchParticipant.SearchParticipant()",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.beginSearching()",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.doneSearching()",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.getDescription()",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.scheduleDocumentIndexing(SearchDocument,IPath)",1,2,2
"org.eclipse.jdt.core.search.SearchPattern.SearchPattern(int)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.createAndPattern(SearchPattern,SearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.createConstructorPattern(String,int,int)",13,17,38
"org.eclipse.jdt.core.search.SearchPattern.createFieldPattern(String,int,int)",13,14,37
"org.eclipse.jdt.core.search.SearchPattern.createMethodPattern(String,int,int)",14,23,55
"org.eclipse.jdt.core.search.SearchPattern.createOrPattern(SearchPattern,SearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.createPackagePattern(String,int,int)",4,4,4
"org.eclipse.jdt.core.search.SearchPattern.createPattern(IJavaElement,int)",6,18,40
"org.eclipse.jdt.core.search.SearchPattern.createPattern(String,int,int,int)",7,7,8
"org.eclipse.jdt.core.search.SearchPattern.createTypePattern(String,int,int)",10,9,23
"org.eclipse.jdt.core.search.SearchPattern.createTypePattern(char[],char[],char[][],String,boolean,int)",5,4,5
"org.eclipse.jdt.core.search.SearchPattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.enclosingTypeNames(IType)",5,4,7
"org.eclipse.jdt.core.search.SearchPattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.getIndexKey()",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.getMatchRule()",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.matchesDecodedKey(SearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.matchesName(char[],char[])",6,7,9
"org.eclipse.jdt.core.search.SearchPattern.toString()",1,1,1
"org.eclipse.jdt.core.search.SearchRequestor.beginReporting()",1,1,1
"org.eclipse.jdt.core.search.SearchRequestor.endReporting()",1,1,1
"org.eclipse.jdt.core.search.SearchRequestor.enterParticipant(SearchParticipant)",1,1,1
"org.eclipse.jdt.core.search.SearchRequestor.exitParticipant(SearchParticipant)",1,1,1
"org.eclipse.jdt.core.search.TypeDeclarationMatch.TypeDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.TypeReferenceMatch.TypeReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aaload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aconst_null(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._anewarray(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._areturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._arraylength(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._athrow(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._baload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._bastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._bipush(int,byte)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._breakpoint(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._caload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._castore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._checkcast(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._d2f(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._d2i(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._d2l(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dadd(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._daload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dcmpg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dcmpl(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dconst_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dconst_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ddiv(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dmul(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dneg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._drem(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dreturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dsub(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup2_x1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup2_x2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup_x1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup_x2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._f2d(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._f2i(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._f2l(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fadd(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._faload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fcmpg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fcmpl(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fconst_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fconst_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fconst_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fdiv(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fmul(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fneg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._frem(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._freturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fsub(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._getfield(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._getstatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._goto(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._goto_w(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2b(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2c(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2d(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2f(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2l(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2s(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iadd(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iaload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iand(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_4(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_5(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_m1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._idiv(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_acmpeq(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_acmpne(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpeq(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpge(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpgt(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmple(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmplt(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpne(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifeq(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifge(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifgt(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifle(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iflt(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifne(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifnonnull(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifnull(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iinc(int,int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._impdep1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._impdep2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._imul(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ineg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._instanceof(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokeinterface(int,int,byte,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokespecial(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokestatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokevirtual(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ior(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._irem(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ireturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ishl(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ishr(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._isub(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iushr(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ixor(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._jsr(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._jsr_w(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._l2d(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._l2f(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._l2i(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ladd(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._laload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._land(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lcmp(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lconst_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lconst_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldc(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldc2_w(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldc_w(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldiv(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lmul(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lneg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lookupswitch(int,int,int,int[][])",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lor(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lrem(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lreturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lshl(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lshr(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lsub(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lushr(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lxor(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._monitorenter(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._monitorexit(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._multianewarray(int,int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._new(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._newarray(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._nop(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._pop(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._pop2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._putfield(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._putstatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ret(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._return(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._saload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._sastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._sipush(int,short)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._swap(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._tableswitch(int,int,int,int,int[])",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._wide(int,int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._wide(int,int,int,int)",1,1,1
"org.eclipse.jdt.core.util.ClassFormatException.ClassFormatException(String)",1,1,1
"org.eclipse.jdt.core.util.ClassFormatException.ClassFormatException(int)",1,1,1
"org.eclipse.jdt.core.util.CompilationUnitSorter.CompilationUnitSorter()",1,1,1
"org.eclipse.jdt.core.util.CompilationUnitSorter.sort(ICompilationUnit,int[],Comparator,int,IProgressMonitor)",2,1,3
"org.eclipse.jdt.internal.antadapter.AntAdapterMessages.AntAdapterMessages()",1,1,1
"org.eclipse.jdt.internal.antadapter.AntAdapterMessages.getString(String)",1,1,2
"org.eclipse.jdt.internal.antadapter.AntAdapterMessages.getString(String,String)",1,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.CompletionEngine(SearchableEnvironment,CompletionRequestor,Map,IJavaProject)",1,4,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.acceptClass(char[],char[],int,AccessRestriction)",7,4,12
"org.eclipse.jdt.internal.codeassist.CompletionEngine.acceptInterface(char[],char[],int,AccessRestriction)",7,4,12
"org.eclipse.jdt.internal.codeassist.CompletionEngine.acceptPackage(char[])",2,4,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.addExpectedType(TypeBinding)",2,3,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.addUninterestingBindings(Binding)",2,2,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(ASTNode,ASTNode,Binding,Scope)",3,41,50
"org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(ICompilationUnit,int,int)",7,37,42
"org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(IType,char[],int,char[][],char[][],int[],boolean)",1,14,17
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeBaseRelevance()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeExpectedTypes(ASTNode,ASTNode,Scope)",6,37,50
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeExpectedTypesForAllocationExpression(ReferenceBinding,Expression[],Scope,InvocationSite)",8,6,11
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeExpectedTypesForMessageSend(ReferenceBinding,char[],Expression[],ReferenceBinding,Scope,InvocationSite,boolean)",11,7,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeExpectedTypesForMessageSendForInterface(ReferenceBinding,char[],Expression[],ReferenceBinding,Scope,InvocationSite,boolean)",1,7,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computePrefix(SourceTypeBinding,SourceTypeBinding,boolean)",1,5,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForCaseMatching(char[],char[])",4,2,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForClass()",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForException(char[])",2,3,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForExpectingType(TypeBinding)",6,6,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForExpectingType(char[],char[])",4,4,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForInterestingProposal()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForInterestingProposal(Binding)",4,1,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForInterface()",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForQualification(boolean)",3,1,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForRestrictions(boolean)",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForStatic(boolean,boolean)",2,1,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForStaticOveride(boolean)",1,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeTypes(Expression[],BlockScope)",2,1,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeUninterestingBindings(ASTNode,Scope)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createMethodSignature(char[][],char[][],char[],char[])",1,3,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createNonGenericTypeSignature(char[],char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createProposal(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createTypeSignature(char[],char[])",2,2,7
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findAnonymousType(ReferenceBinding,TypeBinding[],Scope,InvocationSite)",1,4,7
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findClassField(char[],TypeBinding,Scope)",2,5,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findConstructors(ReferenceBinding,TypeBinding[],Scope,InvocationSite,boolean)",10,17,25
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findExplicitConstructors(char[],ReferenceBinding,MethodScope,InvocationSite)",5,11,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFields(char[],FieldBinding[],Scope,ObjectVector,ObjectVector,boolean,ReferenceBinding,InvocationSite,Scope,boolean,boolean)",21,14,29
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFields(char[],ReferenceBinding,Scope,ObjectVector,ObjectVector,boolean,InvocationSite,Scope,boolean,boolean)",2,12,16
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethods(char[],TypeBinding,Scope,InvocationSite,Scope,boolean,boolean)",3,11,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImplicitMessageSends(char[],TypeBinding[],Scope,InvocationSite,Scope)",4,3,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImports(CompletionOnImportReference)",2,2,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImportsOfMemberTypes(char[],ReferenceBinding)",5,8,11
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImportsOfStaticFields(char[],ReferenceBinding)",7,5,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImportsOfStaticMethdods(char[],ReferenceBinding)",9,7,14
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findIntefacesMethods(char[],TypeBinding[],ReferenceBinding,ReferenceBinding[],Scope,ObjectVector,boolean,boolean,boolean,InvocationSite,Scope,boolean,boolean,boolean)",2,9,12
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findKeywords(char[],char[][])",2,7,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findKeywordsForMember(char[],int)",1,1,22
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findLocalMethodDeclarations(char[],MethodBinding[],Scope,ObjectVector,boolean,boolean,ReferenceBinding)",19,23,39
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findLocalMethods(char[],TypeBinding[],MethodBinding[],Scope,ObjectVector,boolean,boolean,ReferenceBinding,InvocationSite,Scope,boolean,boolean,boolean)",29,23,48
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMemberTypes(char[],ReferenceBinding,Scope,SourceTypeBinding,boolean,ObjectVector)",4,11,17
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMemberTypes(char[],ReferenceBinding[],ObjectVector,ReferenceBinding,SourceTypeBinding,boolean)",14,13,21
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMethodParameterNames(MethodBinding,char[][])",6,13,17
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMethods(char[],TypeBinding[],ReferenceBinding,Scope,ObjectVector,boolean,boolean,boolean,InvocationSite,Scope,boolean,boolean,boolean)",2,13,14
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findNestedTypes(char[],SourceTypeBinding,Scope,ObjectVector)",10,8,14
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findPackages(CompletionOnPackageReference)",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypeParameters(char[],Scope)",7,7,14
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypesAndPackages(char[],Scope)",14,25,34
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypesAndSubpackages(char[],PackageBinding)",7,9,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypesFromStaticImports(char[],Scope,ObjectVector)",10,14,18
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariableName(char[],char[],char[],char[],TypeBinding,char[][],int,int,int)",3,6,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariableNames(char[],TypeReference,char[][],int,int)",1,4,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariablesAndMethods(char[],Scope,InvocationSite,Scope)",13,19,29
"org.eclipse.jdt.internal.codeassist.CompletionEngine.getParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.isValidParent(ASTNode,ASTNode,Scope)",8,9,22
"org.eclipse.jdt.internal.codeassist.CompletionEngine.parseSnippeInitializer(char[],int,char[][],char[][],int[],boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.printDebug(CompletionProposal)",2,8,20
"org.eclipse.jdt.internal.codeassist.CompletionEngine.printDebug(IProblem)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.proposeNewMethod(char[],ReferenceBinding)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.reset()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.setSourceRange(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.setSourceRange(int,int,boolean)",1,1,3
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.CompletionRequestorWrapper(ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.accept(CompletionProposal)",2,38,48
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.completionFailure(IProblem)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.getParameterPackages(char[])",1,2,3
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.getParameterTypes(char[])",1,2,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.findMethodParameterNames(char[],char[],char[],char[][],char[][])",3,10,19
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.findMethodParameterNames(char[],char[],char[][])",3,9,19
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getDeclarationPackageName()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getDeclarationTypeName()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getPackageName()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getParameterPackageNames()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getParameterTypeNames()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getTypeName()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setDeclarationPackageName(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setDeclarationTypeName(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setPackageName(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setParameterPackageNames(char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setParameterTypeNames(char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setTypeName(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.SelectionEngine.SelectionEngine(SearchableEnvironment,ISelectionRequestor,Map)",1,3,4
"org.eclipse.jdt.internal.codeassist.SelectionEngine.acceptClass(char[],char[],int,AccessRestriction)",1,4,5
"org.eclipse.jdt.internal.codeassist.SelectionEngine.acceptInterface(char[],char[],int,AccessRestriction)",1,4,5
"org.eclipse.jdt.internal.codeassist.SelectionEngine.acceptPackage(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.SelectionEngine.acceptQualifiedTypes()",1,5,5
"org.eclipse.jdt.internal.codeassist.SelectionEngine.checkSelection(char[],int,int)",14,16,38
"org.eclipse.jdt.internal.codeassist.SelectionEngine.checkTypeArgument(Scanner)",6,5,15
"org.eclipse.jdt.internal.codeassist.SelectionEngine.completeLocalTypes(Binding)",2,7,14
"org.eclipse.jdt.internal.codeassist.SelectionEngine.getParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.SelectionEngine.isLocal(ReferenceBinding)",5,3,5
"org.eclipse.jdt.internal.codeassist.SelectionEngine.select(ICompilationUnit,int,int)",9,26,30
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectDeclaration(CompilationUnitDeclaration)",4,3,6
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectDeclaration(TypeDeclaration,char[],char[])",13,17,26
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectFrom(Binding,CompilationUnitDeclaration,boolean)",6,43,45
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectLocalDeclaration(ASTNode)",12,8,13
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectType(ISourceType,char[],SourceTypeElementInfo[],boolean)",2,15,21
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.CompletionNodeDetector(ASTNode,ASTNode)",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.containsCompletionNode()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(AND_AND_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ASTNode)",1,1,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(AllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayInitializer,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(Assignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(BinaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(CastExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(CompoundAssignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ConditionalExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(EqualExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ExplicitConstructorCall,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(FieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(InstanceOfExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(OR_OR_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ParameterizedQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ParameterizedQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ParameterizedSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ParameterizedSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(PostfixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(PrefixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedSuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(SingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(SingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(SingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(SuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(UnaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.getCompletionNodeParent()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(AND_AND_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ASTNode)",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(AllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayInitializer,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(Assignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(BinaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(CastExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(CompoundAssignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ConditionalExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(EqualExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ExplicitConstructorCall,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(FieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(InstanceOfExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(OR_OR_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ParameterizedQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ParameterizedQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ParameterizedSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ParameterizedSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(PostfixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(PrefixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedSuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(SingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(SingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(SingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(SuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(UnaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound.CompletionNodeFound()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound.CompletionNodeFound(ASTNode,Binding,Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound.CompletionNodeFound(ASTNode,Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName.CompletionOnArgumentName(char[],long,TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName.bind(MethodScope,TypeBinding,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName.print(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassLiteralAccess.CompletionOnClassLiteralAccess(long,TypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassLiteralAccess.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassLiteralAccess.resolveType(BlockScope)",2,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassReference.CompletionOnClassReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExceptionReference.CompletionOnExceptionReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExceptionReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExplicitConstructorCall.CompletionOnExplicitConstructorCall(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExplicitConstructorCall.printStatement(int,StringBuffer)",1,6,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExplicitConstructorCall.resolve(BlockScope)",4,4,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldName.CompletionOnFieldName(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldName.printStatement(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldName.resolve(MethodScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldType.CompletionOnFieldType(TypeReference,boolean)",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldType.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnImportReference.CompletionOnImportReference(char[][],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnImportReference.print(int,StringBuffer,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnInterfaceReference.CompletionOnInterfaceReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnInterfaceReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.CompletionOnKeyword1(char[],long,char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.CompletionOnKeyword1(char[],long,char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.getPossibleKeywords()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.getToken()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2.CompletionOnKeyword2(char[],long,char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2.getPossibleKeywords()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2.getToken()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2.print(int,StringBuffer,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.CompletionOnKeyword3(char[],long,char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.CompletionOnKeyword3(char[],long,char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.getPossibleKeywords()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.getToken()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnLocalName.CompletionOnLocalName(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnLocalName.printStatement(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnLocalName.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberAccess.CompletionOnMemberAccess(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberAccess.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberAccess.resolveType(BlockScope)",2,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSend.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSend.resolveType(BlockScope)",3,5,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodName.CompletionOnMethodName(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodName.print(int,StringBuffer)",1,7,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodName.resolve(ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodReturnType.CompletionOnMethodReturnType(TypeReference,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodReturnType.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodReturnType.resolveStatements()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodTypeParameter.CompletionOnMethodTypeParameter(TypeParameter[],CompilationResult)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodTypeParameter.print(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodTypeParameter.resolveStatements()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnPackageReference.CompletionOnPackageReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnPackageReference.print(int,StringBuffer,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.CompletionOnParameterizedQualifiedTypeReference(char[][],TypeReference[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.CompletionOnParameterizedQualifiedTypeReference(char[][],TypeReference[][],char[],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.isClass()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.isException()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.isInterface()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.printExpression(int,StringBuffer)",2,7,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.resolveType(BlockScope,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedAllocationExpression.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedAllocationExpression.resolveType(BlockScope)",5,5,9
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedClassReference.CompletionOnQualifiedClassReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedClassReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedExceptionReference.CompletionOnQualifiedExceptionReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedExceptionReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedInterfaceReference.CompletionOnQualifiedInterfaceReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedInterfaceReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedNameReference.CompletionOnQualifiedNameReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedNameReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedNameReference.resolveType(BlockScope)",2,4,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.CompletionOnQualifiedTypeReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.copyDims(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.getTypeBinding(Scope)",2,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference.CompletionOnSingleNameReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference.CompletionOnSingleNameReference(char[],long,char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.CompletionOnSingleTypeReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.copyDims(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.getTypeBinding(Scope)",3,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",3,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.CompletionParser(ProblemReporter)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.assistIdentifier()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.attachOrphanCompletionNode()",28,43,64
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.bodyEnd(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.bodyEnd(Initializer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.buildMoreCompletionContext(Expression)",9,23,71
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.buildMoreGenericsCompletionContext(ASTNode)",3,9,13
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkCatchClause()",2,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkClassInstanceCreation()",3,7,9
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkClassLiteralAccess()",4,4,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkInstanceofKeyword()",4,7,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkInvocation()",5,10,26
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkKeyword()",4,16,26
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkMemberAccess()",2,2,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkNameCompletion()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkParemeterizedType()",4,4,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkRecoveredMethod()",5,4,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkRecoveredType()",6,7,9
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.completionIdentifierCheck()",16,9,25
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeArrayCreationExpressionWithInitializer()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeArrayCreationExpressionWithoutInitializer()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeArrayCreationHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAssignment()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAssignmentOperator(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeBinaryExpression(int)",1,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeBinaryExpressionWithName(int)",1,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCaseLabel()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionLL1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionWithGenericsArray()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionWithNameArray()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionWithPrimitiveType()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionWithQualifiedGenericsArray()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassBodyDeclaration()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassBodyopt()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassHeaderExtends()",1,2,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassHeaderName1()",1,4,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassTypeElt()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConditionalExpression(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConditionalExpressionWithName(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConstructorBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConstructorHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConstructorHeaderName()",2,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeDefaultLabel()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeDimWithOrWithOutExpr()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnterAnonymousClassBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnterAnonymousClassBodySimpleName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnterVariable()",5,10,12
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEqualityExpression(int)",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEqualityExpressionWithName(int)",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeExitVariableWithInitialization()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeExplicitConstructorInvocation(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeFieldAccess(boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeForceNoDiet()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeFormalParameter(boolean)",1,4,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInsideCastExpression()",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInsideCastExpressionLL1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInsideCastExpressionWithQualifiedGenerics()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInstanceOfExpression(int)",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInstanceOfExpressionWithName(int)",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInterfaceHeaderExtends()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInterfaceHeaderName1()",1,2,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInterfaceType()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodHeaderExtendedDims()",1,2,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodHeaderName(boolean)",1,12,12
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodHeaderRightParen()",1,6,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodInvocationName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodInvocationPrimary()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodInvocationSuper()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeModifiers()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeNestedMethod()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeOnlyTypeArguments()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeOnlyTypeArgumentsForCastExpression()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumePrimaryNoNewArrayName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumePushPosition()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeReferenceType()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeReferenceType1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeReferenceType2()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeReferenceType3()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeRestoreDiet()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeRightParen()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStatementSwitch()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeToken(int)",12,41,138
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeArgumentReferenceType1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeArgumentReferenceType2()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeArguments()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameter1WithExtends()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameter1WithExtendsAndBounds()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameterWithExtends()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameterWithExtendsAndBounds()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameters()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameters1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeUnaryExpression(int)",1,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeUnaryExpression(int,boolean)",1,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcard1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcard2()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcard3()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcardBounds1Extends()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcardBounds2Extends()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcardBounds3Extends()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcardBoundsExtends()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createAssistImportReference(char[][],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createAssistPackageReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createFieldDeclaration(char[],int,int)",2,3,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createLocalDeclaration(char[],int,int)",2,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createParameterizedQualifiedAssistTypeReference(char[][],TypeReference[][],char[],TypeReference[],long[])",6,3,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createParameterizedSingleAssistTypeReference(TypeReference[],char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createQualifiedAssistNameReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createQualifiedAssistTypeReference(char[][],char[],long[])",5,2,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createSingleAssistNameReference(char[],long)",6,10,22
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createSingleAssistTypeReference(char[],long)",5,2,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.dietParse(ICompilationUnit,CompilationResult,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.flushAssistState()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.getTypeReferenceForGenericType(int,int,int)",9,1,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.getUnspecifiedReferenceOptimized()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.initialize()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.initializeForBlockStatements()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.initializeScanner()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isAfterArrayType()",2,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isEmptyNameCompletion()",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isIndirectlyInsideBlock()",3,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideBlock()",6,2,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideBreakable()",8,3,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideLoop()",7,3,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideReturn()",7,2,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.parse(ICompilationUnit,CompilationResult,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.parseBlockStatements(ConstructorDeclaration,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.prepareForBlockStatements()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.pushCompletionOnMemberAccessOnExpressionStack(boolean)",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.recordCompletionOnReference()",4,2,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.recoveryExitFromVariable()",1,3,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.recoveryTokenCheck()",2,8,12
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.reset()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.resetAfterCompletion()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.resumeAfterRecovery()",4,8,11
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.setAssistIdentifier(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.toString()",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.updateRecoveryState()",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.CompletionScanner(long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.getCurrentIdentifierSource()",4,4,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.getNextCharAsJavaIdentifierPart()",7,13,26
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.getNextToken()",117,94,230
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.scanIdentifierOrKeyword()",2,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.scanNumber(boolean)",2,1,3
"org.eclipse.jdt.internal.codeassist.complete.InvalidCursorLocation.InvalidCursorLocation(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistOptions.AssistOptions()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistOptions.AssistOptions(Map)",2,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistOptions.set(Map)",1,31,34
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.AssistParser(ProblemReporter)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.bodyEnd(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.bodyEnd(Initializer)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.buildInitialRecoveryState()",15,25,35
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeClassBodyDeclaration()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeClassBodyopt()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeClassHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeConstructorBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeConstructorHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnterAnonymousClassBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnterAnonymousClassBodySimpleName()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeExplicitConstructorInvocation(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeForceNoDiet()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeInterfaceHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationName()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationNameWithTypeArguments()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationPrimary()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationPrimaryWithTypeArguments()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationSuper()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationSuperWithTypeArguments()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeNestedMethod()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeOpenBlock()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumePackageDeclarationName()",2,2,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumePackageDeclarationNameWithModifiers()",2,3,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeRestoreDiet()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeSingleStaticImportDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeSingleTypeImportDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeStaticImportOnDemandDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeStaticInitializer()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeStaticOnly()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeToken(int)",5,7,11
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeTypeImportOnDemandDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.flushAssistState()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.flushElementStack()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.getAssistTypeReferenceForGenericType(int,int,int)",3,9,18
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.getTypeReference(int)",2,4,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.getUnspecifiedReferenceOptimized()",2,3,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.goForBlockStatementsOrCatchHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.goForBlockStatementsopt()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.goForCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.goForHeaders()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.identifierSubSet(int)",2,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.indexOfAssistIdentifier()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.indexOfAssistIdentifier(boolean)",5,1,8
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.initialize()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isIndirectlyInsideFieldInitialization()",3,1,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isIndirectlyInsideMethod()",3,1,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isIndirectlyInsideType()",3,1,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isInsideFieldInitialization()",5,2,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isInsideMethod()",5,2,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isInsideType()",5,2,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.lastIndexOfElement(int)",3,1,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(AbstractMethodDeclaration,CompilationUnitDeclaration)",1,3,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(ConstructorDeclaration,CompilationUnitDeclaration)",2,3,7
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(Initializer,TypeDeclaration,CompilationUnitDeclaration)",2,2,6
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(MethodDeclaration,CompilationUnitDeclaration)",5,2,8
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.popElement(int)",3,2,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.popUntilElement(int)",2,1,6
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.prepareForBlockStatements()",1,3,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.prepareForHeaders()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.pushOnElementStack(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.pushOnElementStack(int,int)",2,2,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.recoveryExitFromVariable()",1,3,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.recoveryTokenCheck()",2,12,17
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.reset()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.resumeAfterRecovery()",4,7,11
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementInfo(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementInfo(int,int)",4,1,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementKind(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementKind(int,int)",4,1,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.wrapWithExplicitConstructorCallIfNeeded(ASTNode)",2,5,7
"org.eclipse.jdt.internal.codeassist.impl.Engine.Engine(Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.Engine.accept(IBinaryType,PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.Engine.accept(ICompilationUnit,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.Engine.accept(ISourceType[],PackageBinding,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.Engine.getSignature(Binding)",1,6,6
"org.eclipse.jdt.internal.codeassist.impl.Engine.mustQualifyType(char[],char[])",13,9,14
"org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(CompilationUnitDeclaration,int)",3,3,4
"org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(TypeDeclaration,CompilationUnitDeclaration,int)",14,11,15
"org.eclipse.jdt.internal.codeassist.impl.Engine.reset()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionNodeFound.SelectionNodeFound()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionNodeFound.SelectionNodeFound(Binding)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionNodeFound.SelectionNodeFound(Binding,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.SelectionOnArgumentName(char[],long,TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.bind(MethodScope,TypeBinding,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.print(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnExplicitConstructorCall.SelectionOnExplicitConstructorCall(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnExplicitConstructorCall.printStatement(int,StringBuffer)",1,6,6
"org.eclipse.jdt.internal.codeassist.select.SelectionOnExplicitConstructorCall.resolve(BlockScope)",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldReference.SelectionOnFieldReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldReference.resolveType(BlockScope)",2,6,7
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldType.SelectionOnFieldType(TypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldType.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnImportReference.SelectionOnImportReference(char[][],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnImportReference.print(int,StringBuffer,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLocalName.SelectionOnLocalName(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLocalName.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLocalName.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnMessageSend.findNonDefaultAbstractMethod(MethodBinding)",8,9,10
"org.eclipse.jdt.internal.codeassist.select.SelectionOnMessageSend.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.codeassist.select.SelectionOnMessageSend.resolveType(BlockScope)",3,8,8
"org.eclipse.jdt.internal.codeassist.select.SelectionOnNameOfMemberValuePair.SelectionOnNameOfMemberValuePair(char[],int,int,Expression)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnNameOfMemberValuePair.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnNameOfMemberValuePair.resolveTypeExpecting(BlockScope,TypeBinding)",2,1,2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnPackageReference.SelectionOnPackageReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnPackageReference.print(int,StringBuffer,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedQualifiedTypeReference.SelectionOnParameterizedQualifiedTypeReference(char[][],char[],TypeReference[][],TypeReference[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedQualifiedTypeReference.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedQualifiedTypeReference.resolveType(BlockScope,boolean)",2,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedQualifiedTypeReference.resolveType(ClassScope)",2,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedSingleTypeReference.SelectionOnParameterizedSingleTypeReference(char[],TypeReference[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedSingleTypeReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedSingleTypeReference.resolveType(BlockScope,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedSingleTypeReference.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedAllocationExpression.SelectionOnQualifiedAllocationExpression()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedAllocationExpression.SelectionOnQualifiedAllocationExpression(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedAllocationExpression.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedAllocationExpression.resolveType(BlockScope)",4,4,6
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedNameReference.SelectionOnQualifiedNameReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedNameReference.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedNameReference.resolveType(BlockScope)",6,7,9
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedSuperReference.SelectionOnQualifiedSuperReference(TypeReference,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedSuperReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedSuperReference.resolveType(BlockScope)",2,2,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedTypeReference.SelectionOnQualifiedTypeReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedTypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedTypeReference.getTypeBinding(Scope)",3,2,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedTypeReference.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleNameReference.SelectionOnSingleNameReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleNameReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleNameReference.resolveType(BlockScope)",6,7,9
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.SelectionOnSingleTypeReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.getTypeBinding(Scope)",2,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSuperReference.SelectionOnSuperReference(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSuperReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSuperReference.resolveType(BlockScope)",2,2,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.SelectionParser(ProblemReporter)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.assistIdentifier()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.attachOrphanCompletionNode()",5,5,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.checkRecoveredType()",5,3,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.classInstanceCreation(boolean)",3,4,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeArrayCreationExpressionWithInitializer()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeArrayCreationExpressionWithoutInitializer()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()",3,4,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeClassInstanceCreationExpressionWithTypeArguments()",3,4,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeEnterAnonymousClassBody()",2,4,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeEnterAnonymousClassBodySimpleName()",2,4,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeEnterVariable()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeExitVariableWithInitialization()",1,1,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeFieldAccess(boolean)",2,3,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeFormalParameter(boolean)",1,3,10
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeInstanceOfExpression(int)",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeInstanceOfExpressionWithName(int)",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeLocalVariableDeclarationStatement()",1,1,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeMarkerAnnotation()",2,3,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeMemberValuePair()",2,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeMethodInvocationName()",4,6,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeMethodInvocationPrimary()",4,6,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeNormalAnnotation()",2,4,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeSingleMemberAnnotation()",2,3,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeStaticImportOnDemandDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeTypeImportOnDemandDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createAssistImportReference(char[][],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createAssistPackageReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createLocalDeclaration(char[],int,int)",2,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createParameterizedQualifiedAssistTypeReference(char[][],TypeReference[][],char[],TypeReference[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createParameterizedSingleAssistTypeReference(TypeReference[],char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createQualifiedAssistNameReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createQualifiedAssistTypeReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createSingleAssistNameReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createSingleAssistTypeReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.dietParse(ICompilationUnit,CompilationResult,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.getUnspecifiedReference()",3,5,8
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.getUnspecifiedReferenceOptimized()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.initializeScanner()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.newMessageSend()",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.newMessageSendWithTypeArguments()",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.parse(ICompilationUnit,CompilationResult,int,int)",2,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.resumeAfterRecovery()",5,5,7
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.selectionIdentifierCheck()",2,1,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.setAssistIdentifier(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.toString()",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.updateRecoveryState()",1,2,3
"org.eclipse.jdt.internal.codeassist.select.SelectionScanner.SelectionScanner(long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionScanner.getCurrentIdentifierSource()",3,4,5
"org.eclipse.jdt.internal.codeassist.select.SelectionScanner.scanIdentifierOrKeyword()",2,1,4
"org.eclipse.jdt.internal.compiler.ASTVisitor.acceptProblem(IProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AND_AND_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AnnotationMethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Argument,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayInitializer,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AssertStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Assignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(BinaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Block,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(BreakStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CaseStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CastExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CharLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ClassLiteralAccess,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Clinit,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CompilationUnitDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CompoundAssignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ConditionalExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ContinueStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(DoStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(DoubleLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(EmptyStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(EqualExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ExplicitConstructorCall,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ExtendedStringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FalseLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FloatLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ForStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ForeachStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(IfStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ImportReference,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(InstanceOfExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(IntLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArgumentExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArraySingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocFieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocMessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocReturnStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocSingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LabeledStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LocalDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LongLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MarkerAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MarkerAnnotation,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MemberValuePair,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MemberValuePair,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(NormalAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(NormalAnnotation,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(NullLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(OR_OR_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(PostfixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(PrefixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedSuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ReturnStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleMemberAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleMemberAnnotation,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(StringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(StringLiteralConcatenation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SwitchStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SynchronizedStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ThrowStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TrueLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TryStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeParameter,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeParameter,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(UnaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(WhileStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Wildcard,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Wildcard,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AND_AND_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AnnotationMethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Argument,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayInitializer,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AssertStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Assignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(BinaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Block,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(BreakStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CaseStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CastExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CharLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ClassLiteralAccess,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Clinit,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CompilationUnitDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CompoundAssignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ConditionalExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ContinueStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(DoStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(DoubleLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(EmptyStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(EqualExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ExplicitConstructorCall,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ExtendedStringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FalseLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FloatLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ForStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ForeachStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(IfStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ImportReference,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(InstanceOfExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(IntLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArgumentExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArraySingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocFieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocMessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocReturnStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocSingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LabeledStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LocalDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LongLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MarkerAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MarkerAnnotation,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MemberValuePair,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MemberValuePair,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(NormalAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(NormalAnnotation,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(NullLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(OR_OR_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(PostfixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(PrefixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedSuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ReturnStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleMemberAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleMemberAnnotation,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(StringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(StringLiteralConcatenation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SwitchStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SynchronizedStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ThrowStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TrueLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TryStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeParameter,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeParameter,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(UnaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(WhileStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Wildcard,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Wildcard,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.ClassFile()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.ClassFile(SourceTypeBinding,ClassFile,boolean)",1,5,8
"org.eclipse.jdt.internal.compiler.ClassFile.addAbstractMethod(AbstractMethodDeclaration,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addAttributes()",1,26,28
"org.eclipse.jdt.internal.compiler.ClassFile.addDefaultAbstractMethods()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.addFieldAttributes(FieldBinding,int)",2,18,25
"org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfo(FieldBinding)",1,2,3
"org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfos()",1,5,6
"org.eclipse.jdt.internal.compiler.ClassFile.addInnerClasses(ReferenceBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.ClassFile.addMissingAbstractProblemMethod(MethodDeclaration,MethodBinding,IProblem,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemClinit(IProblem[])",1,7,7
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemConstructor(AbstractMethodDeclaration,MethodBinding,IProblem[])",1,7,7
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemConstructor(AbstractMethodDeclaration,MethodBinding,IProblem[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemMethod(AbstractMethodDeclaration,MethodBinding,IProblem[])",1,11,11
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemMethod(AbstractMethodDeclaration,MethodBinding,IProblem[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSpecialMethods()",2,5,10
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticConstructorAccessMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticEnumValueOfMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticEnumValuesMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticFieldReadAccessMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticFieldWriteAccessMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticMethodAccessMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.buildAllDirectoriesInto(String,String)",7,8,8
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(int)",1,28,39
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForClinit(int)",1,28,34
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForClinit(int,int[],int)",1,8,8
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForMissingAbstractProblemMethod(MethodBinding,int,int[],int)",1,5,5
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForProblemMethod(AbstractMethodDeclaration,MethodBinding,int,int[],int)",1,26,39
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForSyntheticMethod(SyntheticMethodBinding,int,int[])",1,17,21
"org.eclipse.jdt.internal.compiler.ClassFile.completeMethodInfo(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.createProblemType(TypeDeclaration,CompilationResult)",11,20,25
"org.eclipse.jdt.internal.compiler.ClassFile.fileName()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.generateAnnotation(Annotation,int)",2,10,11
"org.eclipse.jdt.internal.compiler.ClassFile.generateCodeAttributeHeader()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateElementValue(Expression,TypeBinding,int)",1,6,7
"org.eclipse.jdt.internal.compiler.ClassFile.generateElementValue(int,Expression,Constant,TypeBinding)",2,5,14
"org.eclipse.jdt.internal.compiler.ClassFile.generateElementValueForNonConstantExpression(Expression,int,TypeBinding)",1,13,16
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoAttribute(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoAttribute(MethodBinding,AnnotationMethodDeclaration)",1,2,3
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoAttribute(MethodBinding,boolean)",1,16,18
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoHeader(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoHeader(MethodBinding,int)",1,2,4
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoHeaderForClinit()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateMissingAbstractMethods(MethodDeclaration[],CompilationResult)",1,7,7
"org.eclipse.jdt.internal.compiler.ClassFile.generateRuntimeAnnotations(Annotation[])",9,11,18
"org.eclipse.jdt.internal.compiler.ClassFile.generateRuntimeAnnotationsForParameters(Argument[])",13,21,26
"org.eclipse.jdt.internal.compiler.ClassFile.getBytes()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.getCompoundName()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.initByteArrays()",1,2,3
"org.eclipse.jdt.internal.compiler.ClassFile.isRuntimeInvisible(Annotation)",3,1,3
"org.eclipse.jdt.internal.compiler.ClassFile.isRuntimeVisible(Annotation)",3,1,3
"org.eclipse.jdt.internal.compiler.ClassFile.outerMostEnclosingClassFile()",1,1,2
"org.eclipse.jdt.internal.compiler.ClassFile.recordEnclosingTypeAttributes(ReferenceBinding)",1,5,5
"org.eclipse.jdt.internal.compiler.ClassFile.recordNestedLocalAttribute(ReferenceBinding)",1,5,5
"org.eclipse.jdt.internal.compiler.ClassFile.recordNestedMemberAttribute(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.resizeContents(int)",1,1,2
"org.eclipse.jdt.internal.compiler.ClassFile.searchLineNumber(int[],int)",6,1,6
"org.eclipse.jdt.internal.compiler.ClassFile.setForMethodInfos()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.writeToDisk(boolean,String,String,byte[])",1,4,5
"org.eclipse.jdt.internal.compiler.CompilationResult.CompilationResult(ICompilationUnit,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.CompilationResult(char[],int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.computePriority(IProblem)",1,4,8
"org.eclipse.jdt.internal.compiler.CompilationResult.getAllProblems()",3,4,12
"org.eclipse.jdt.internal.compiler.CompilationResult.getClassFiles()",1,2,2
"org.eclipse.jdt.internal.compiler.CompilationResult.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.getErrors()",2,3,6
"org.eclipse.jdt.internal.compiler.CompilationResult.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.getProblems()",1,4,5
"org.eclipse.jdt.internal.compiler.CompilationResult.getTasks()",1,3,3
"org.eclipse.jdt.internal.compiler.CompilationResult.hasErrors()",4,3,4
"org.eclipse.jdt.internal.compiler.CompilationResult.hasProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.hasSyntaxError()",4,4,5
"org.eclipse.jdt.internal.compiler.CompilationResult.hasTasks()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.hasWarnings()",4,3,4
"org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(IProblem[],int,int)",2,4,8
"org.eclipse.jdt.internal.compiler.CompilationResult.quickSort(IProblem[],int,int)",2,4,8
"org.eclipse.jdt.internal.compiler.CompilationResult.record(IProblem,ReferenceContext)",2,7,9
"org.eclipse.jdt.internal.compiler.CompilationResult.record(char[],ClassFile)",1,2,3
"org.eclipse.jdt.internal.compiler.CompilationResult.recordTask(IProblem)",1,3,3
"org.eclipse.jdt.internal.compiler.CompilationResult.tagAsAccepted()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.toString()",1,6,6
"org.eclipse.jdt.internal.compiler.Compiler.Compiler(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory)",1,3,3
"org.eclipse.jdt.internal.compiler.Compiler.Compiler(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory,boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.Compiler.accept(IBinaryType,PackageBinding,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.compiler.Compiler.accept(ICompilationUnit,AccessRestriction)",2,5,5
"org.eclipse.jdt.internal.compiler.Compiler.accept(ISourceType[],PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.addCompilationUnit(ICompilationUnit,CompilationUnitDeclaration)",1,2,2
"org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(ICompilationUnit[])",1,4,4
"org.eclipse.jdt.internal.compiler.Compiler.compile(ICompilationUnit[])",1,9,9
"org.eclipse.jdt.internal.compiler.Compiler.handleInternalException(AbortCompilation,CompilationUnitDeclaration)",8,6,18
"org.eclipse.jdt.internal.compiler.Compiler.handleInternalException(Throwable,CompilationUnitDeclaration,CompilationResult)",1,4,8
"org.eclipse.jdt.internal.compiler.Compiler.initializeParser()",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.process(CompilationUnitDeclaration,int)",1,4,5
"org.eclipse.jdt.internal.compiler.Compiler.reset()",1,2,2
"org.eclipse.jdt.internal.compiler.Compiler.resolve(CompilationUnitDeclaration,ICompilationUnit,boolean,boolean,boolean)",1,9,12
"org.eclipse.jdt.internal.compiler.Compiler.resolve(ICompilationUnit,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.ConfigurableOption(String,String,Locale,int)",2,3,13
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getCategory()",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getComponentName()",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getCurrentValueIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getDefaultValueIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getDescription()",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getID()",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getName()",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getOptionName()",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getPossibleValues()",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.setValueIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.toString()",1,5,5
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.exitAfterAllProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.exitOnFirstError()",1,1,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.proceedOnFirstError()",1,1,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.proceedWithAllProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.DocumentElementParser(IDocumentElementRequestor,IProblemFactory,CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.checkComment()",4,3,7
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassBodyDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassDeclaration()",2,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassHeader()",2,4,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassHeaderName1()",1,3,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeConstructorDeclaration()",2,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeConstructorHeader()",2,5,6
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeConstructorHeaderName()",1,2,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeDefaultModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeDiet()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeEnterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeEnterVariable()",1,8,11
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeExitVariableWithInitialization()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeExitVariableWithoutInitialization()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeFieldDeclaration()",2,2,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeFormalParameter(boolean)",1,3,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInterfaceDeclaration()",2,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInterfaceHeader()",2,3,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInterfaceHeaderName1()",1,3,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeLocalVariableDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodDeclaration(boolean)",2,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeader()",2,5,7
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeaderExtendedDims()",1,3,4
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeaderName(boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePackageDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePackageDeclarationNameWithModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePushModifiers()",1,2,4
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePushRealModifiers()",1,2,4
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeSingleStaticImportDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeSingleTypeImportDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeStaticImportOnDemandDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeStaticInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeStaticOnly()",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeTypeImportOnDemandDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.endParse(int)",1,2,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.flushCommentsDefinedPriorTo(int)",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.isLocalDeclaration()",3,1,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseCompilationUnit(ICompilationUnit)",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseConstructor(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseField(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseImport(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseInitializer(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseMethod(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parsePackage(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseType(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.pushOnIntArrayStack(int[])",1,2,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.resetModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.resumeOnSyntaxError()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.returnTypeName(TypeReference)",2,2,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.typeReference(int,int,int)",1,3,6
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.peekDeclaringType()",3,1,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.popDeclaringType()",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.pushDeclaringType(TypeDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.visit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.SourceElementParser(ISourceElementRequestor,IProblemFactory,CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.SourceElementParser(ISourceElementRequestor,IProblemFactory,CompilerOptions,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.acceptJavadocTypeReference(Expression)",1,3,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.addUnknownRef(NameReference)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.checkComment()",1,21,35
"org.eclipse.jdt.internal.compiler.SourceElementParser.classInstanceCreation(boolean)",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.collectAnnotationPositions(Annotation[])",2,1,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeConstructorHeaderName()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeConstructorHeaderNameWithTypeParameters()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeEnumConstantNoClassBody()",1,2,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeEnumConstantWithClassBody()",1,2,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeExitVariableWithInitialization()",1,2,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeExitVariableWithoutInitialization()",1,2,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeFieldAccess(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodHeaderName(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodHeaderNameWithTypeParameters(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationName()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationNameWithTypeArguments()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationPrimary()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationPrimaryWithTypeArguments()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationSuper()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationSuperWithTypeArguments()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeSingleStaticImportDeclarationName()",1,3,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeSingleTypeImportDeclarationName()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeStaticImportOnDemandDeclarationName()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeTypeImportOnDemandDeclarationName()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.convertToMethodDeclaration(ConstructorDeclaration,CompilationResult)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.endParse(int)",3,4,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeParameterInfos(TypeParameter[])",2,5,6
"org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(int)",6,13,16
"org.eclipse.jdt.internal.compiler.SourceElementParser.getUnspecifiedReference()",2,4,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.getUnspecifiedReferenceOptimized()",2,4,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifyAllUnknownReferences()",1,8,8
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(AbstractMethodDeclaration)",9,21,33
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(CompilationUnitDeclaration)",3,12,24
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(FieldDeclaration,TypeDeclaration)",2,9,23
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(ImportReference,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(TypeDeclaration,boolean,TypeDeclaration)",4,19,46
"org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(ICompilationUnit,boolean)",1,3,6
"org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(ICompilationUnit,int,int,boolean)",1,3,6
"org.eclipse.jdt.internal.compiler.SourceElementParser.parseTypeMemberDeclarations(ISourceType,ICompilationUnit,int,int,boolean)",2,2,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.parseTypeMemberDeclarations(char[],int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.quickSort(ASTNode[],int,int)",1,3,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.sourceEnd(TypeDeclaration)",3,1,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.visitIfNeeded(AbstractMethodDeclaration)",1,6,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.visitIfNeeded(FieldDeclaration,TypeDeclaration)",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.visitIfNeeded(Initializer)",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptConstructorReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptFieldReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptImport(int,int,char[],boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptLineSeparatorPositions(int[])",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptMethodReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptPackage(int,int,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptProblem(IProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptTypeReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptUnknownReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptUnknownReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterClass(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterConstructor(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterEnum(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterField(FieldInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterInitializer(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterInterface(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitClass(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitEnum(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitField(int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitInterface(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitMethod(int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.AND_AND_Expression(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,5,5
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateCode(BlockScope,CodeStream,boolean)",5,18,21
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",8,17,25
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ASTNode.ASTNode()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.checkInvocationArgument(BlockScope,Expression,TypeBinding,TypeBinding)",2,7,8
"org.eclipse.jdt.internal.compiler.ast.ASTNode.checkInvocationArguments(BlockScope,Expression,TypeBinding,MethodBinding,Expression[],TypeBinding[],boolean,InvocationSite)",1,21,25
"org.eclipse.jdt.internal.compiler.ast.ASTNode.concreteStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isFieldUseDeprecated(FieldBinding,Scope,boolean)",4,4,8
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isImplicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isMethodUseDeprecated(MethodBinding,Scope)",4,4,7
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isTypeUseDeprecated(TypeBinding,Scope)",5,6,11
"org.eclipse.jdt.internal.compiler.ast.ASTNode.printAnnotations(Annotation[],StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ASTNode.printIndent(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ASTNode.printModifiers(int,StringBuffer)",1,11,11
"org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations(BlockScope,Annotation[],Binding)",4,6,8
"org.eclipse.jdt.internal.compiler.ast.ASTNode.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.sourceStart()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.AbstractMethodDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.abort(int,IProblem)",5,2,5
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.bindArguments()",1,5,7
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.bindThrownExceptions()",1,5,11
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.checkArgumentsSize()",1,3,5
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.compilationResult()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(ClassFile)",2,9,10
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(ClassScope,ClassFile)",3,5,6
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.hasErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isAbstract()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isClinit()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isDefaultConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isInitializationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isNative()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isStatic()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.print(int,StringBuffer)",1,10,10
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.printBody(int,StringBuffer)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.printReturnType(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(ClassScope)",1,1,3
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveJavadoc()",3,4,5
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements()",1,4,4
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.tagAsHavingErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.typeParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.printStatement(int,StringBuffer)",2,7,7
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.checkCapturedLocalInitializationIfNecessary(ReferenceBinding,BlockScope,FlowInfo)",5,8,9
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.enclosingInstance()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.generateCode(BlockScope,CodeStream,boolean)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.printExpression(int,StringBuffer)",1,8,8
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(BlockScope)",8,11,18
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.traverse(ASTVisitor,BlockScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.Annotation.detectStandardAnnotation(Scope,ReferenceBinding,MemberValuePair)",2,14,23
"org.eclipse.jdt.internal.compiler.ast.Annotation.getRetentionPolicy(char[])",6,2,9
"org.eclipse.jdt.internal.compiler.ast.Annotation.getTargetElementType(char[])",11,3,18
"org.eclipse.jdt.internal.compiler.ast.Annotation.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Annotation.resolveType(BlockScope)",21,16,40
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.AnnotationMethodDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.generateCode(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.isMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.print(int,StringBuffer)",1,11,11
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.resolveStatements()",8,9,13
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.traverse(ASTVisitor,ClassScope)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.Argument.Argument(char[],long,TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.bind(MethodScope,TypeBinding,boolean)",3,7,11
"org.eclipse.jdt.internal.compiler.ast.Argument.getKind()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.isVarArgs()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.print(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Argument.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.resolveForCatch(BlockScope)",7,8,10
"org.eclipse.jdt.internal.compiler.ast.Argument.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.ArrayAllocationExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.generateCode(BlockScope,CodeStream,boolean)",2,6,6
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.printExpression(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.resolveType(BlockScope)",1,16,18
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.ArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.analyseCode(BlockScope,FlowContext,FlowInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(BlockScope,CodeStream,boolean)",2,11,17
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.resolveTypeExpecting(BlockScope,TypeBinding)",12,18,22
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.ArrayQualifiedTypeReference(char[][],int,long[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.getParameterizedTypeName()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.getTypeBinding(Scope)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.printExpression(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.ArrayReference(Expression,Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generateCode(BlockScope,CodeStream,boolean)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.resolveType(BlockScope)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.ArrayTypeReference(char[],int,long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.getParameterizedTypeName()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.getTypeBinding(Scope)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.printExpression(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.AssertStatement(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.AssertStatement(Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",2,8,8
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.generateCode(BlockScope,CodeStream)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",6,5,7
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.resolve(BlockScope)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Assignment.Assignment(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.analyseCode(BlockScope,FlowContext,FlowInfo)",2,4,6
"org.eclipse.jdt.internal.compiler.ast.Assignment.checkAssignment(BlockScope,TypeBinding,TypeBinding)",1,11,11
"org.eclipse.jdt.internal.compiler.ast.Assignment.checkAssignmentEffect(BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Assignment.generateCode(BlockScope,CodeStream,boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Assignment.getDirectBinding(Expression)",4,4,5
"org.eclipse.jdt.internal.compiler.ast.Assignment.getLastField(Expression)",6,1,7
"org.eclipse.jdt.internal.compiler.ast.Assignment.nullStatus(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.resolveType(BlockScope)",5,9,11
"org.eclipse.jdt.internal.compiler.ast.Assignment.resolveTypeExpecting(BlockScope,TypeBinding)",2,2,5
"org.eclipse.jdt.internal.compiler.ast.Assignment.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.BinaryExpression(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.computeConstant(BlockScope,int,int)",1,2,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateCode(BlockScope,CodeStream,boolean)",14,106,145
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",3,4,10
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedGreaterThan(BlockScope,CodeStream,Label,Label,boolean)",10,20,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedGreaterThanOrEqual(BlockScope,CodeStream,Label,Label,boolean)",10,20,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLessThan(BlockScope,CodeStream,Label,Label,boolean)",10,20,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLessThanOrEqual(BlockScope,CodeStream,Label,Label,boolean)",10,20,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLogicalAnd(BlockScope,CodeStream,Label,Label,boolean)",4,19,19
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLogicalOr(BlockScope,CodeStream,Label,Label,boolean)",4,19,19
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLogicalXor(BlockScope,CodeStream,Label,Label,boolean)",4,13,13
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedStringConcatenation(BlockScope,CodeStream,int)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedStringConcatenationCreation(BlockScope,CodeStream,int)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.optimizedBooleanConstant()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.optimizedBooleanConstant(int,int,int)",10,8,19
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType(BlockScope)",6,20,38
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Block.Block(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Block.analyseCode(BlockScope,FlowContext,FlowInfo)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.Block.branchChainTo(Label)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Block.generateCode(BlockScope,CodeStream)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.Block.isEmptyBlock()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Block.printBody(int,StringBuffer)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.Block.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Block.resolve(BlockScope)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.Block.resolveUsing(BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.Block.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.BranchStatement.BranchStatement(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BranchStatement.generateCode(BlockScope,CodeStream)",5,4,5
"org.eclipse.jdt.internal.compiler.ast.BranchStatement.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.BreakStatement(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",7,10,11
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.CaseStatement(Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.generateCode(BlockScope,CodeStream)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.resolveCase(BlockScope,TypeBinding,SwitchStatement)",7,9,12
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.CastExpression.CastExpression(Expression,Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkAlternateBinding(BlockScope,Expression,TypeBinding,MethodBinding,Expression[],TypeBinding[],TypeBinding[],InvocationSite)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCast(BlockScope,int,int,Expression,int)",6,4,7
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCasts(BlockScope,Expression,TypeBinding,MethodBinding,Expression[],TypeBinding[],InvocationSite)",8,8,11
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCasts(BlockScope,int,int,Expression,int,boolean,Expression,int,boolean)",12,13,23
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForEnclosingInstanceCast(BlockScope,Expression,TypeBinding,TypeBinding)",6,5,8
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkUnsafeCast(Scope,TypeBinding,TypeBinding,TypeBinding,boolean)",7,13,14
"org.eclipse.jdt.internal.compiler.ast.CastExpression.generateCode(BlockScope,CodeStream,boolean)",2,8,10
"org.eclipse.jdt.internal.compiler.ast.CastExpression.innermostCastedExpression()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.localVariableBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.nullStatus(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.reportIllegalCast(Scope,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.resolveType(BlockScope)",3,6,10
"org.eclipse.jdt.internal.compiler.ast.CastExpression.setExpectedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.tagAsNeedCheckCast()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.tagAsUnnecessaryCast(Scope,TypeBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.usedForGenericMethodReturnTypeInference()",5,1,6
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.CharLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.computeValue()",3,4,13
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.ClassLiteralAccess(int,TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.analyseCode(BlockScope,FlowContext,FlowInfo)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.resolveType(BlockScope)",3,5,6
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Clinit.Clinit(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.analyseCode(ClassScope,InitializationFlowContext,FlowInfo)",2,5,7
"org.eclipse.jdt.internal.compiler.ast.Clinit.generateCode(ClassScope,ClassFile)",2,3,5
"org.eclipse.jdt.internal.compiler.ast.Clinit.generateCode(ClassScope,ClassFile,int)",1,20,20
"org.eclipse.jdt.internal.compiler.ast.Clinit.isClinit()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.isInitializationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.parseStatements(Parser,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.resolve(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.setAssertionSupport(FieldBinding,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Clinit.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.CompilationUnitDeclaration(ProblemReporter,CompilationResult,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.abort(int,IProblem)",4,2,4
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode()",2,3,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.checkUnusedImports()",1,4,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.cleanUp()",1,3,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.cleanUp(TypeDeclaration)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.compilationResult()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.declarationOfType(char[][])",3,2,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode()",2,6,7
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.getMainTypeName()",2,4,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.hasErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.isEmpty()",1,1,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.print(int,StringBuffer)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.propagateInnerEmulationForAllLocalTypes()",1,3,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.record(LocalTypeBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve()",1,7,8
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.tagAsHavingErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(ASTVisitor,CompilationUnitScope)",2,7,9
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.CompoundAssignment(Expression,Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.nullStatus(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.operatorToString()",12,2,12
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.resolveType(BlockScope)",10,20,28
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.restrainUsageToNumericTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.ConditionalExpression(Expression,Expression,Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,19,19
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(BlockScope,CodeStream,boolean)",2,17,20
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",2,16,17
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.optimizedBooleanConstant()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.resolveType(BlockScope)",15,37,53
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.ConstructorDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.analyseCode(ClassScope,InitializationFlowContext,FlowInfo)",2,24,27
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateCode(ClassScope,ClassFile)",3,5,6
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateSyntheticFieldInitializationsIfNecessary(MethodScope,CodeStream,ReferenceBinding)",2,5,8
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.internalGenerateCode(ClassScope,ClassFile)",2,17,22
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isDefaultConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isInitializationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isRecursive(ArrayList)",5,6,9
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",3,2,4
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.printBody(int,StringBuffer)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveJavadoc()",1,3,4
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveStatements()",1,8,10
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.traverse(ASTVisitor,ClassScope)",1,13,13
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.typeParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.ContinueStatement(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",8,11,12
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.DoStatement.DoStatement(Expression,Statement,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.DoStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,9,11
"org.eclipse.jdt.internal.compiler.ast.DoStatement.generateCode(BlockScope,CodeStream)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.DoStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.DoStatement.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.DoStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.DoubleLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.computeConstant()",9,3,14
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.EmptyStatement(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.complainIfUnreachable(FlowInfo,BlockScope,boolean)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.generateCode(BlockScope,CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.EqualExpression(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",10,14,14
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.checkNullComparison(BlockScope,FlowContext,FlowInfo,FlowInfo,FlowInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.checkVariableComparison(BlockScope,FlowContext,FlowInfo,FlowInfo,FlowInfo,LocalVariableBinding,int,Expression)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.computeConstant(TypeBinding,TypeBinding)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateCode(BlockScope,CodeStream,boolean)",2,6,6
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",2,5,5
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateOptimizedBooleanEqual(BlockScope,CodeStream,Label,Label,boolean)",3,7,11
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateOptimizedNonBooleanEqual(BlockScope,CodeStream,Label,Label,boolean)",9,37,45
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.resolveType(BlockScope)",5,19,34
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.ExplicitConstructorCall(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.analyseCode(BlockScope,FlowContext,FlowInfo)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.generateCode(BlockScope,CodeStream)",2,7,9
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.isImplicitSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.printStatement(int,StringBuffer)",1,8,8
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.resolve(BlockScope)",7,19,26
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.traverse(ASTVisitor,BlockScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.Expression.Expression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.checkCastTypesCompatibility(BlockScope,TypeBinding,TypeBinding,Expression)",40,44,53
"org.eclipse.jdt.internal.compiler.ast.Expression.checkNullComparison(BlockScope,FlowContext,FlowInfo,FlowInfo,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.checkNullStatus(BlockScope,FlowContext,FlowInfo,int)",2,3,5
"org.eclipse.jdt.internal.compiler.ast.Expression.checkUnsafeCast(Scope,TypeBinding,TypeBinding,TypeBinding,boolean)",4,7,8
"org.eclipse.jdt.internal.compiler.ast.Expression.computeConversion(Scope,TypeBinding,TypeBinding)",6,7,12
"org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(BlockScope,CodeStream)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(BlockScope,CodeStream,boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.Expression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",2,14,14
"org.eclipse.jdt.internal.compiler.ast.Expression.generateOptimizedStringConcatenation(BlockScope,CodeStream,int)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.Expression.generateOptimizedStringConcatenationCreation(BlockScope,CodeStream,int)",5,5,6
"org.eclipse.jdt.internal.compiler.ast.Expression.getAllInheritedMethods(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.getAllInheritedMethods0(ReferenceBinding,ArrayList)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.Expression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.isConstantValueOfTypeAssignableToType(TypeBinding,TypeBinding)",5,6,8
"org.eclipse.jdt.internal.compiler.ast.Expression.isConstantValueRepresentable(Constant,int,int)",66,58,66
"org.eclipse.jdt.internal.compiler.ast.Expression.isTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.localVariableBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.nullStatus(FlowInfo)",5,2,6
"org.eclipse.jdt.internal.compiler.ast.Expression.optimizedBooleanConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.reportIllegalCast(Scope,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveTypeExpecting(BlockScope,TypeBinding)",5,3,5
"org.eclipse.jdt.internal.compiler.ast.Expression.setExpectedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.tagAsNeedCheckCast()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.tagAsUnnecessaryCast(Scope,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.toTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.traverse(ASTVisitor,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.ExtendedStringLiteral(StringLiteral,CharLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.ExtendedStringLiteral(StringLiteral,StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.extendWith(CharLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.extendWith(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.FalseLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.FieldDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.FieldDeclaration(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.analyseCode(MethodScope,FlowContext,FlowInfo)",5,15,18
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.generateCode(BlockScope,CodeStream)",2,6,7
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.getKind()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.isStatic()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(MethodScope)",1,33,34
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.traverse(ASTVisitor,MethodScope)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.FieldReference.FieldReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",1,15,15
"org.eclipse.jdt.internal.compiler.ast.FieldReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.FieldReference.computeConversion(Scope,TypeBinding,TypeBinding)",2,5,8
"org.eclipse.jdt.internal.compiler.ast.FieldReference.fieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generateCode(BlockScope,CodeStream,boolean)",1,11,12
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",1,6,9
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",1,8,13
"org.eclipse.jdt.internal.compiler.ast.FieldReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.getConstantFor(FieldBinding,Reference,boolean,Scope)",6,3,11
"org.eclipse.jdt.internal.compiler.ast.FieldReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.isTypeAccess()",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FieldReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",7,15,22
"org.eclipse.jdt.internal.compiler.ast.FieldReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.resolveType(BlockScope)",3,8,14
"org.eclipse.jdt.internal.compiler.ast.FieldReference.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.setDepth(int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.FieldReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.FloatLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.computeConstant()",9,3,14
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ForStatement.ForStatement(Statement[],Expression,Statement[],Statement,boolean,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ForStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",3,28,30
"org.eclipse.jdt.internal.compiler.ast.ForStatement.generateCode(BlockScope,CodeStream)",2,19,21
"org.eclipse.jdt.internal.compiler.ast.ForStatement.printStatement(int,StringBuffer)",1,9,9
"org.eclipse.jdt.internal.compiler.ast.ForStatement.resolve(BlockScope)",1,7,8
"org.eclipse.jdt.internal.compiler.ast.ForStatement.traverse(ASTVisitor,BlockScope)",1,8,8
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.ForeachStatement(LocalDeclaration,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",2,10,12
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.generateCode(BlockScope,CodeStream)",7,18,23
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.resolve(BlockScope)",2,20,24
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.IfStatement.IfStatement(Expression,Statement,Statement,int,int)",1,1,3
"org.eclipse.jdt.internal.compiler.ast.IfStatement.IfStatement(Expression,Statement,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.IfStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,10,12
"org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode(BlockScope,CodeStream)",2,14,16
"org.eclipse.jdt.internal.compiler.ast.IfStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.IfStatement.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.ImplicitDocTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.copyDims(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.getTypeName()",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.ImportReference(char[][],long[],boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.getImportName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.print(int,StringBuffer,boolean)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.ImportReference.traverse(ASTVisitor,CompilationUnitScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Initializer.Initializer(Block,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.analyseCode(MethodScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.generateCode(BlockScope,CodeStream)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.Initializer.getKind()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements(Parser,TypeDeclaration,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.printStatement(int,StringBuffer)",2,3,3
"org.eclipse.jdt.internal.compiler.ast.Initializer.resolve(MethodScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.Initializer.traverse(ASTVisitor,MethodScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.InstanceOfExpression(Expression,TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.reportIllegalCast(Scope,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.resolveType(BlockScope)",2,4,6
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.tagAsUnnecessaryCast(Scope,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.IntLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.IntLiteral(char[],int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.IntLiteral(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.computeConstant()",12,7,14
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.mayRepresentMIN_VALUE()",1,1,11
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.printExpression(int,StringBuffer)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.resolveType(BlockScope)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue.IntLiteralMinValue()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Javadoc.Javadoc(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Javadoc.getNodeStartingAt(int)",26,8,28
"org.eclipse.jdt.internal.compiler.ast.Javadoc.print(int,StringBuffer)",1,10,10
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolve(ClassScope)",1,5,10
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolve(MethodScope)",1,29,39
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveParamTags(MethodScope,boolean)",2,14,21
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveReference(Expression,Scope)",3,16,20
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveThrowsTags(MethodScope,boolean)",2,24,41
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveTypeParameterTags(Scope,boolean)",4,20,29
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.JavadocAllocationExpression(long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.internalResolveType(Scope)",5,9,13
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.JavadocArgumentExpression(char[],int,int,TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.internalResolveType(Scope)",6,6,7
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.JavadocArrayQualifiedTypeReference(JavadocQualifiedTypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.reportDeprecatedType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.JavadocArraySingleTypeReference(char[],int,long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.reportDeprecatedType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.JavadocFieldReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.internalResolveType(Scope)",5,13,17
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.JavadocImportReference.JavadocImportReference(char[][],long[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.JavadocMessageSend(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.JavadocMessageSend(char[],long,JavadocArgumentExpression[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.internalResolveType(Scope)",9,15,22
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.JavadocQualifiedTypeReference(char[][],long[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.internalResolveType(Scope,boolean)",3,5,6
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.reportDeprecatedType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.resolveType(BlockScope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.JavadocReturnStatement(int,int,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.resolve(BlockScope)",1,3,6
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.JavadocSingleNameReference(char[],long,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.resolve(BlockScope,boolean)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.JavadocSingleTypeReference(char[],long,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.internalResolveType(Scope)",3,5,6
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.reportDeprecatedType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.resolveType(BlockScope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.LabeledStatement(char[],Statement,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.concreteStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.generateCode(BlockScope,CodeStream)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Literal.Literal(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Literal.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Literal.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Literal.resolveType(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.LocalDeclaration(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.analyseCode(BlockScope,FlowContext,FlowInfo)",3,2,5
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.checkModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.generateCode(BlockScope,CodeStream)",2,12,14
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.getKind()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(BlockScope)",5,24,27
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.LongLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.LongLiteral(char[],int,int,long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.computeConstant()",12,7,17
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.mayRepresentMIN_VALUE()",1,1,20
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.resolveType(BlockScope)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue.LongLiteralMinValue()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral.MagicLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral.isValidJavaStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.MarkerAnnotation(TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.memberValuePairs()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.traverse(ASTVisitor,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.MemberValuePair(char[],int,int,Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.resolveTypeExpecting(BlockScope,TypeBinding)",9,23,30
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.traverse(ASTVisitor,CompilationUnitScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode(BlockScope,FlowContext,FlowInfo)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.MessageSend.computeConversion(Scope,TypeBinding,TypeBinding)",2,9,13
"org.eclipse.jdt.internal.compiler.ast.MessageSend.generateCode(BlockScope,CodeStream,boolean)",2,12,14
"org.eclipse.jdt.internal.compiler.ast.MessageSend.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isTypeAccess()",1,2,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",7,14,15
"org.eclipse.jdt.internal.compiler.ast.MessageSend.nullStatus(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.printExpression(int,StringBuffer)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(BlockScope)",11,32,46
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setDepth(int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setExpectedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(ASTVisitor,BlockScope)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.MethodDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(ClassScope,InitializationFlowContext,FlowInfo)",5,14,20
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.isMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.printReturnType(int,StringBuffer)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements()",2,8,16
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(ASTVisitor,ClassScope)",1,13,13
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.typeParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.NameReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.fieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.isTypeAccess()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.NameReference.isTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.setDepth(int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.NameReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.NormalAnnotation(TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.memberValuePairs()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.printExpression(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.traverse(ASTVisitor,CompilationUnitScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.NullLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.nullStatus(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.NumberLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.NumberLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.isValidJavaStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.OR_OR_Expression(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,5,5
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.generateCode(BlockScope,CodeStream,boolean)",5,18,21
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",8,18,25
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.OperatorExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.classInitialize()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.generateTableTestCase()",43,8,49
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_AND()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_AND_AND()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_DIVIDE()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_EQUAL_EQUAL()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_GREATER()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_GREATER_EQUAL()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_LEFT_SHIFT()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_LESS()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_LESS_EQUAL()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_MINUS()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_MULTIPLY()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_OR()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_OR_OR()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_PLUS()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_REMAINDER()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_RIGHT_SHIFT()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_UNSIGNED_RIGHT_SHIFT()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_XOR()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.nullStatus(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.operatorToString()",24,2,24
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.ParameterizedQualifiedTypeReference(char[][],TypeReference[][],int,long[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.checkBounds(ReferenceBinding,Scope,int)",1,6,7
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.checkBounds(Scope)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.copyDims(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.getParameterizedTypeName()",1,6,7
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.internalResolveType(Scope,boolean)",14,40,47
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.printExpression(int,StringBuffer)",1,9,9
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.resolveType(BlockScope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.ParameterizedSingleTypeReference(char[],TypeReference[],int,long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.checkBounds(Scope)",2,5,7
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.copyDims(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.getParameterizedTypeName()",1,4,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType(Scope,ReferenceBinding,boolean)",13,22,28
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(BlockScope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.traverse(ASTVisitor,ClassScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.PostfixExpression(Expression,Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.operatorToString()",3,2,3
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.restrainUsageToNumericTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.PrefixExpression(Expression,Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.operatorToString()",3,2,3
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.restrainUsageToNumericTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.QualifiedAllocationExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.QualifiedAllocationExpression(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,6,7
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.enclosingInstance()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.generateCode(BlockScope,CodeStream,boolean)",1,8,8
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(BlockScope)",15,34,43
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.traverse(ASTVisitor,BlockScope)",1,9,9
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.QualifiedNameReference(char[][],long[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",2,26,36
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",2,14,19
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.checkFieldAccess(BlockScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.computeConversion(Scope,TypeBinding,TypeBinding)",2,7,12
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateCode(BlockScope,CodeStream,boolean)",1,12,14
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",1,6,7
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",1,8,11
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateReadSequence(BlockScope,CodeStream)",2,20,26
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateReceiver(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getCodegenBinding(int)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getGenericCast(int)",3,1,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getOtherFieldBindings(BlockScope)",8,17,23
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",3,2,5
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.manageSyntheticAccessIfNecessary(BlockScope,FieldBinding,TypeBinding,int,FlowInfo)",7,17,31
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.reportError(BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType(BlockScope)",5,19,20
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setCodegenBinding(int,FieldBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setGenericCast(int,TypeBinding)",1,1,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setSyntheticAccessor(FieldBinding,int,SyntheticMethodBinding)",1,1,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.unboundReferenceErrorName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.QualifiedSuperReference(TypeReference,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.isSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.resolveType(BlockScope)",4,3,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.QualifiedThisReference(TypeReference,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.generateCode(BlockScope,CodeStream,boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.resolveType(BlockScope)",3,5,8
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.QualifiedTypeReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.copyDims(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.findNextTypeBinding(int,Scope,PackageBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(Scope)",7,8,14
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.Reference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.fieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.fieldStore(CodeStream,FieldBinding,MethodBinding,boolean)",1,8,10
"org.eclipse.jdt.internal.compiler.ast.Reference.nullStatus(FlowInfo)",5,2,6
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.ReturnStatement(Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",7,11,20
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateCode(BlockScope,CodeStream)",5,7,10
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateReturnBytecode(CodeStream)",4,4,8
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateStoreSaveValueIfNecessary(CodeStream)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.needValue()",1,1,3
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.prepareSaveValueLocation(TryStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.resolve(BlockScope)",9,11,16
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.SingleMemberAnnotation(TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.memberValuePairs()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.traverse(ASTVisitor,CompilationUnitScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.SingleNameReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",3,19,25
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",2,8,11
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.checkFieldAccess(BlockScope)",3,10,10
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.computeConversion(Scope,TypeBinding,TypeBinding)",2,6,9
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",6,19,31
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCode(BlockScope,CodeStream,boolean)",2,13,15
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCompoundAssignment(BlockScope,CodeStream,MethodBinding,Expression,int,int,boolean)",7,21,29
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",2,15,22
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateReceiver(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.localVariableBinding()",2,2,3
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",3,2,5
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",5,14,18
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.reportError(BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.resolveType(BlockScope)",5,11,12
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.unboundReferenceErrorName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.SingleTypeReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.copyDims(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding(Scope)",4,3,5
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",2,3,3
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.branchChainTo(Label)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.complainIfUnreachable(FlowInfo,BlockScope,boolean)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.Statement.generateArguments(MethodBinding,Expression[],BlockScope,CodeStream)",3,9,10
"org.eclipse.jdt.internal.compiler.ast.Statement.isEmptyBlock()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.isValidJavaStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.resolveCase(BlockScope,TypeBinding,SwitchStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.StringLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.StringLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.extendWith(CharLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.extendWith(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.extendsWith(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.printExpression(int,StringBuffer)",2,3,11
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.StringLiteralConcatenation(StringLiteral,StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.extendsWith(StringLiteral)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.enterAnyExceptionHandler(CodeStream)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.exitAnyExceptionHandler()",2,2,3
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.placeAllAnyExceptionHandlers()",1,2,2
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.reenterExceptionHandlers(SubRoutineStatement[],int,CodeStream)",2,2,4
"org.eclipse.jdt.internal.compiler.ast.SuperReference.SuperReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.implicitSuperConstructorCall()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isImplicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.resolveType(BlockScope)",3,2,3
"org.eclipse.jdt.internal.compiler.ast.SuperReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",2,7,9
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.branchChainTo(Label)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.generateCode(BlockScope,CodeStream)",2,15,21
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.printStatement(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.resolve(BlockScope)",9,13,20
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.SynchronizedStatement(Expression,Block,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.generateCode(BlockScope,CodeStream)",2,6,9
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.generateSubRoutineInvocation(BlockScope,CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.isSubRoutineEscaping()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.resolve(BlockScope)",3,2,5
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ThisReference.ThisReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.checkAccess(MethodScope)",3,3,3
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generateCode(BlockScope,CodeStream,boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.implicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.isImplicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.nullStatus(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.printExpression(int,StringBuffer)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ThisReference.resolveType(BlockScope)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.ThisReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.ThrowStatement(Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.generateCode(BlockScope,CodeStream)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.resolve(BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.TrueLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TryStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",3,10,14
"org.eclipse.jdt.internal.compiler.ast.TryStatement.generateCode(BlockScope,CodeStream)",6,23,38
"org.eclipse.jdt.internal.compiler.ast.TryStatement.generateSubRoutineInvocation(BlockScope,CodeStream)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.TryStatement.isSubRoutineEscaping()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TryStatement.printStatement(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.TryStatement.resolve(BlockScope)",3,14,18
"org.eclipse.jdt.internal.compiler.ast.TryStatement.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.TypeDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.abort(int,IProblem)",5,2,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.addClinit()",1,3,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.addMissingAbstractMethodFor(MethodBinding)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(BlockScope,FlowContext,FlowInfo)",2,2,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(ClassScope)",2,1,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(ClassScope,FlowContext,FlowInfo)",2,2,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(CompilationUnitScope)",2,1,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.checkConstructors(Parser)",1,8,8
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.compilationResult()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.createDefaultConstructor(boolean,boolean)",1,4,7
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.createDefaultConstructorWithBinding(MethodBinding)",1,7,8
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOf(FieldBinding)",4,1,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOf(MemberTypeBinding)",4,1,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOf(MethodBinding)",4,1,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOfType(char[][])",5,3,6
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(BlockScope,CodeStream)",3,2,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(ClassFile)",6,10,13
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(ClassScope,ClassFile)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.hasErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(FlowContext,FlowInfo)",4,17,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.kind()",4,1,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",2,7,9
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.manageEnclosingInstanceAccessIfNecessary(ClassScope,FlowInfo)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.needClassInitMethod()",7,2,7
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethod(Parser,CompilationUnitDeclaration)",3,8,9
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.print(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printBody(int,StringBuffer)",1,10,10
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printHeader(int,StringBuffer)",3,11,16
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve()",6,33,44
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(ClassScope)",1,2,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.tagAsHavingErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(ASTVisitor,BlockScope)",2,16,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(ASTVisitor,ClassScope)",2,16,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(ASTVisitor,CompilationUnitScope)",2,16,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.updateMaxFieldCount()",2,1,3
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.checkBounds(Scope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.generateCode(BlockScope,CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.getKind()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.printStatement(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.resolve(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.traverse(ASTVisitor,ClassScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.TypeReference.TypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.baseTypeReference(int,int)",20,3,20
"org.eclipse.jdt.internal.compiler.ast.TypeReference.checkBounds(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getParameterizedTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.isTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.reportDeprecatedType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType(ClassScope)",3,2,3
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(BlockScope,boolean)",4,4,6
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(ClassScope)",4,4,6
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveTypeArgument(BlockScope,ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveTypeArgument(ClassScope,ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.UnaryExpression(Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.generateCode(BlockScope,CodeStream,boolean)",7,16,26
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",2,4,4
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.optimizedBooleanConstant()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.resolveType(BlockScope)",5,11,24
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.WhileStatement(Expression,Statement,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",3,15,15
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.generateCode(BlockScope,CodeStream)",2,12,13
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Wildcard.Wildcard(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.getParameterizedTypeName()",4,3,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.getTypeName()",4,3,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.internalResolveType(Scope,ReferenceBinding,int)",3,3,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.printExpression(int,StringBuffer)",2,2,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.resolveTypeArgument(BlockScope,ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.resolveTypeArgument(ClassScope,ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Wildcard.traverse(ASTVisitor,ClassScope)",1,3,3
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.ClasspathDirectory(File,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.ClasspathDirectory(File,String,int)",1,1,2
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.directoryList(String)",8,6,12
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.doesFileExist(String,String)",4,2,4
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.findClass(char[],String,String)",7,5,10
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.isPackage(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.ClasspathJar(File)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.ClasspathJar(ZipFile,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.findClass(char[],String,String)",3,1,4
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.isPackage(String)",5,4,5
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.reset()",1,2,4
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.CompilationUnit(char[],String,String)",1,7,7
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.getContents()",2,1,3
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.getPackageName()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.FileFinder.find(File,String,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.FileFinder.find0(File,String,boolean)",3,7,9
"org.eclipse.jdt.internal.compiler.batch.FileSystem.FileSystem(String[],String[],String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.FileSystem.FileSystem(String[],String[],String,int[])",1,9,17
"org.eclipse.jdt.internal.compiler.batch.FileSystem.cleanup()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.FileSystem.convertPathSeparators(String)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.FileSystem.findClass(String,char[])",8,8,11
"org.eclipse.jdt.internal.compiler.batch.FileSystem.findType(char[],char[][])",2,2,2
"org.eclipse.jdt.internal.compiler.batch.FileSystem.findType(char[][])",2,2,2
"org.eclipse.jdt.internal.compiler.batch.FileSystem.getClasspathJar(File)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.FileSystem.isPackage(char[][],char[])",6,6,8
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.Logger(PrintWriter,PrintWriter)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.close()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.flush()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printErr(String)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printOut(char)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printlnErr(String)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printlnOut()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printlnOut(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.setLog(PrintWriter)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Main(PrintWriter,PrintWriter,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Main(PrintWriter,PrintWriter,boolean,Map)",1,3,3
"org.eclipse.jdt.internal.compiler.batch.Main.bind(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.bind(String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.bind(String,String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.bind(String,String[])",6,9,14
"org.eclipse.jdt.internal.compiler.batch.Main.compile(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.compile(String,PrintWriter,PrintWriter)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.compile(String[])",2,11,13
"org.eclipse.jdt.internal.compiler.batch.Main.configure(String[])",134,206,275
"org.eclipse.jdt.internal.compiler.batch.Main.disableWarnings()",4,3,5
"org.eclipse.jdt.internal.compiler.batch.Main.extractDestinationPathFromSourceFile(CompilationResult)",3,3,3
"org.eclipse.jdt.internal.compiler.batch.Main.getBatchRequestor()",1,11,16
"org.eclipse.jdt.internal.compiler.batch.Main.getCompilationUnits()",4,4,6
"org.eclipse.jdt.internal.compiler.batch.Main.getHandlingPolicy()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.getLength(File[][])",1,1,4
"org.eclipse.jdt.internal.compiler.batch.Main.getLibrariesFiles(File[])",2,5,6
"org.eclipse.jdt.internal.compiler.batch.Main.getLibraryAccess()",1,1,2
"org.eclipse.jdt.internal.compiler.batch.Main.getProblemFactory()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.main(String[])",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.outputClassFiles(CompilationResult)",1,12,12
"org.eclipse.jdt.internal.compiler.batch.Main.performCompilation()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.printStats()",1,12,15
"org.eclipse.jdt.internal.compiler.batch.Main.printUsage()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.printVersion()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.relocalize()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.tokenize(String)",1,10,13
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.ClassFileReader(byte[],char[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.ClassFileReader(byte[],char[],boolean)",6,20,42
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.accessFlags()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeAnnotation(int)",9,9,16
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeElementValue(int)",2,3,7
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeElementValueForJavaLangAnnotationRetention(int)",2,3,7
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeElementValueForJavaLangAnnotationTarget(int)",2,4,8
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeStandardAnnotations(int)",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getConstantClassNameAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getConstantPoolOffsets()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getEnclosingTypeName()",2,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getFields()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getGenericSignature()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getInnerSourceName()",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getKind()",3,1,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getMemberTypes()",4,7,11
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getMethods()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getModifiers()",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getSuperclassName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getVersion()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasNonSyntheticFieldChanges(FieldInfo[],FieldInfo[])",11,4,14
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasNonSyntheticMethodChanges(MethodInfo[],MethodInfo[])",11,8,18
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralChanges(byte[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralChanges(byte[],boolean,boolean)",31,22,50
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralFieldChanges(FieldInfo,FieldInfo)",17,11,17
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralMethodChanges(MethodInfo,MethodInfo)",9,3,11
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.initialize()",1,5,6
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isAnonymous()",2,1,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isLocal()",3,1,4
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isMember()",3,1,4
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isNestedType()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(File)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(File,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(String)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(String,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(ZipFile,String)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(ZipFile,String,boolean)",2,2,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.sourceFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.ClassFileStruct(byte[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.ClassFileStruct(byte[],int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.doubleAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.floatAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i1At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i2At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i4At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i8At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.printTypeModifiers(int)",1,7,7
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u1At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u2At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u4At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.utf8At(int,int)",1,2,5
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.utf8At(int,int,boolean)",14,2,21
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.verifyMethodNameAndSignature(char[],char[])",5,3,9
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.ClassFormatException(RuntimeException,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.ClassFormatException(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.ClassFormatException(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getBufferPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getErrorCode()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getException()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.printStackTrace()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.printStackTrace(PrintStream)",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.printStackTrace(PrintWriter)",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.FieldInfo(byte[],int[],int)",2,6,7
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.compareTo(Object)",2,1,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.decodeAnnotation(int)",4,4,5
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.decodeElementValue(int)",2,3,7
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.decodeStandardAnnotations(int)",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getConstant()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getGenericSignature()",2,3,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getModifiers()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getName()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getTypeName()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getWrappedConstantValue()",2,4,12
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.hasConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readConstantAttribute()",3,6,16
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readModifierRelatedAttributes()",2,4,7
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.throwFormatException()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.toString()",1,1,9
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.InnerClassInfo(byte[],int[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getEnclosingTypeName()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getModifiers()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getName()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getSourceName()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.MethodInfo(byte[],int[],int)",2,6,7
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.compareTo(Object)",3,1,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeAnnotation(int)",4,4,5
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeElementValue(int)",2,3,7
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeStandardAnnotations(int)",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getArgumentNames()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getExceptionTypeNames()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getGenericSignature()",2,3,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getMethodDescriptor()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getModifiers()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getSelector()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.isClinit()",1,1,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.isConstructor()",1,1,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.readExceptionAttributes()",1,5,6
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.readModifierRelatedAttributes()",2,4,9
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.toString()",1,2,10
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.CaseLabel(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.branch()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.branchWide()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.isStandardLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.place()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.placeInstruction()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.CharArrayCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.CharArrayCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.containsKey(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.get(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.hashCodeChar(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.put(char[],int)",3,3,4
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.remove(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.returnKeyFor(int)",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.CodeStream(ClassFile,long)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aaload()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aastore()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aconst_null()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addDefinitelyAssignedVariables(Scope,int)",2,6,8
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addLabel(Label)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addVisibleLocalVariable(LocalVariableBinding)",2,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload(int)",1,5,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_0()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_1()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_2()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_3()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.anewarray(TypeBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.areturn()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.arrayAt(int)",2,2,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.arrayAtPut(int,boolean)",2,10,17
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.arraylength()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore(int)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_0()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_3()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.athrow()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.baload()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.bastore()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.bipush(byte)",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.caload()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.castore()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.checkcast(TypeBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.d2f()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.d2i()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.d2l()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dadd()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.daload()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dastore()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dcmpg()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dcmpl()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dconst_0()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dconst_1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ddiv()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.decrStackSize(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload(int)",1,5,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_0()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_1()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_2()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_3()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dmul()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dneg()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.drem()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dreturn()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore(int)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_0()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_3()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dsub()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup2_x1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup2_x2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup_x1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup_x2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.exitUserScope(BlockScope)",2,4,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.f2d()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.f2i()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.f2l()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fadd()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.faload()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fastore()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fcmpg()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fcmpl()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fconst_0()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fconst_1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fconst_2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fdiv()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload(int)",1,5,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_0()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_1()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_2()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_3()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fmul()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fneg()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.frem()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.freturn()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore(int)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_0()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_3()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fsub()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateBoxingConversion(int)",2,2,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateClassLiteralAccessForType(TypeBinding,FieldBinding)",2,7,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateCodeAttributeForProblemMethod(String)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateConstant(Constant,int)",4,5,20
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateFieldAccess(byte,int,char[],char[],char[])",2,3,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateImplicitConversion(int)",3,4,27
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(byte)",3,3,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(char)",4,4,12
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(double)",3,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(float)",4,5,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(int)",4,4,13
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(long)",3,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(short)",3,3,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateOuterAccess(Object[],ASTNode,Binding,Scope)",5,9,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateStringConcatenationAppend(BlockScope,Expression,Expression)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding)",1,6,14
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForEnumValueOf(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForEnumValues(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding)",1,7,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForFieldWriteAccess(SyntheticMethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForMethodAccess(SyntheticMethodBinding)",1,16,19
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticEnclosingInstanceValues(BlockScope,ReferenceBinding,Expression,ASTNode)",2,13,14
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticOuterArgumentValues(BlockScope,ReferenceBinding,ASTNode)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateUnboxingConversion(int)",2,2,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateWideRevertedConditionalBranch(byte,Label)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getContents()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getTYPE(int)",2,11,19
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getfield(FieldBinding)",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getstatic(FieldBinding)",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.goto_(Label)",2,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.goto_w(Label)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2b()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2c()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2d()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2f()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2l()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2s()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iadd()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iaload()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iand()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iastore()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_0()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_3()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_4()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_5()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_m1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.idiv()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_acmpeq(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_acmpne(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpeq(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpge(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpgt(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmple(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmplt(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpne(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifeq(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifge(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifgt(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifle(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iflt(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifne(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifnonnull(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifnull(Label)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iinc(int,int)",1,5,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload(int)",1,5,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_0()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_1()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_2()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_3()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.imul()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.incrStackSize(int)",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.incrementTemp(LocalVariableBinding,int)",2,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.indexOfSameLineEntrySincePC(int,int)",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ineg()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.init(ClassFile)",1,1,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.initializeMaxLocals(MethodBinding)",2,4,17
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.insertionIndex(int[],int,int)",5,1,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.instance_of(TypeBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invoke(int,int,int,char[],char[],char[])",2,5,8
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeClassForName()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeEnumOrdinal(char[])",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangAssertionErrorConstructor(int)",2,3,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangAssertionErrorDefaultConstructor()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangClassDesiredAssertionStatus()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangClassGetComponentType()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangEnumname(TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangErrorConstructor()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangIllegalArgumentExceptionStringConstructor()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaUtilIteratorHasNext()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaUtilIteratorNext()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeNoClassDefFoundErrorStringConstructor()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeObjectGetClass()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationAppendForType(int)",2,4,19
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationDefaultConstructor()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationStringConstructor()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationToString()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringEquals()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringIntern()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringValueOf(int)",2,3,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeSystemArraycopy()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeThrowableGetMessage()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeinterface(MethodBinding)",1,3,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokespecial(MethodBinding)",1,5,20
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokestatic(MethodBinding)",1,3,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokevirtual(MethodBinding)",1,3,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ior()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.irem()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ireturn()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.isDefinitelyAssigned(Scope,int,LocalVariableBinding)",6,1,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ishl()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ishr()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore(int)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_0()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_3()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.isub()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iushr()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ixor()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.jsr(Label)",2,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.jsr_w(Label)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.l2d()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.l2f()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.l2i()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ladd()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.laload()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.land()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lastore()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lcmp()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lconst_0()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lconst_1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(String)",1,18,29
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(TypeBinding)",1,6,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(float)",1,6,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(int)",1,6,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc2_w(double)",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc2_w(long)",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldiv()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload(int)",1,5,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_0()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_1()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_2()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_3()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lmul()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lneg()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.load(LocalVariableBinding)",12,12,39
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.load(TypeBinding,int)",12,12,39
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.loadInt(int)",2,2,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.loadObject(int)",2,2,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lookupswitch(CaseLabel,int[],int[],CaseLabel[])",1,7,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lor()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lrem()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lreturn()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lshl()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lshr()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore(int)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_0()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_1()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_2()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_3()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lsub()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lushr()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lxor()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.monitorenter()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.monitorexit()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.multianewarray(TypeBinding,int)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(ArrayBinding)",2,2,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newJavaLangAssertionError()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newJavaLangError()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newJavaLangIllegalArgumentException()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newNoClassDefFoundError()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newStringContatenation()",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newWrapperFor(int)",2,12,21
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.new_(TypeBinding)",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newarray(int)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.nop()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.pop()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.pop2()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.putfield(FieldBinding)",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.putstatic(FieldBinding)",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.record(LocalVariableBinding)",2,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.recordPositionsFrom(int,int)",4,12,19
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.registerExceptionHandler(ExceptionLabel)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.removeExceptionHandler(ExceptionLabel)",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.removeNotDefinitelyAssignedVariables(Scope,int)",2,6,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.reset(AbstractMethodDeclaration,ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.resetForProblemClinit(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.resizeByteArray()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ret(int)",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.return_()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.saload()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sastore()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sendOperator(int,int)",6,6,37
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sipush(int)",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sort(int[],int,int,int[])",1,6,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.store(LocalVariableBinding,boolean)",7,12,36
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.store(TypeBinding,int)",10,10,34
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.storeInt(int)",2,2,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.storeObject(int)",2,2,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.swap()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.swap(int[],int,int,int[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.tableswitch(CaseLabel,int,int,int[],int[],CaseLabel[])",4,8,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.updateLastRecordedEndPC(int)",2,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.updateLocalVariablesAttribute(int)",1,1,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedShort(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedShort(int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedWord(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedWord(int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeUnsignedShort(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ConstantPool(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.dumpBytes()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.getFromCache(char[],char[],char[])",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.getFromNameAndTypeCache(char[],char[])",2,1,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(FieldBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(MethodBinding)",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(String)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(byte[],char[])",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(char[])",1,8,9
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(char[],byte[])",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(double)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(float)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(int)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(long)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForField(char[],char[])",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForField(char[],char[],char[])",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForFields(int,int,char[],char[])",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForLdc(char[])",5,8,11
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethod(char[],char[])",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethod(char[],char[],char[],boolean)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethods(int,int,char[],char[])",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForType(char[])",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.putInCache(char[],char[],char[],int)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.putInNameAndTypeCache(char[],char[],int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.resetForClinit(int,int)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.resizePoolContents(int)",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.writeU1(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.writeU2(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.DoubleCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.DoubleCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.containsKey(double)",8,4,10
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.get(double)",8,4,10
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.put(double,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.ExceptionLabel(CodeStream,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.isStandardLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.place()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.placeEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.placeStart()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.FieldNameAndTypeCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.FieldNameAndTypeCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.containsKey(FieldBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.equalsForNameAndType(FieldBinding,FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.get(FieldBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.hashCode(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.put(FieldBinding,int)",3,3,4
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.FloatCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.FloatCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.containsKey(float)",8,4,10
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.get(float)",8,4,10
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.put(float,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.IntegerCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.IntegerCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.containsKey(int)",3,1,5
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.get(int)",3,1,5
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.hash(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.put(int,int)",3,2,6
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.rehash()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.Label.Label()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.Label.Label(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.Label.addForwardReference(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.Label.appendForwardReferencesFrom(Label)",2,2,3
"org.eclipse.jdt.internal.compiler.codegen.Label.branch()",3,3,4
"org.eclipse.jdt.internal.compiler.codegen.Label.branchWide()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.Label.hasForwardReferences()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.Label.initialize(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.Label.inlineForwardReferencesFromLabelsTargeting(int)",3,4,4
"org.eclipse.jdt.internal.compiler.codegen.Label.isStandardLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.Label.place()",10,16,30
"org.eclipse.jdt.internal.compiler.codegen.Label.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.LongCache.LongCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.LongCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.LongCache.containsKey(long)",3,1,5
"org.eclipse.jdt.internal.compiler.codegen.LongCache.get(long)",3,1,5
"org.eclipse.jdt.internal.compiler.codegen.LongCache.hash(long)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.put(long,int)",3,2,6
"org.eclipse.jdt.internal.compiler.codegen.LongCache.rehash()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.LongCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.MethodNameAndTypeCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.MethodNameAndTypeCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.containsKey(MethodBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.equalsForNameAndType(MethodBinding,MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.get(MethodBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.hashCode(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.put(MethodBinding,int)",3,3,4
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.ObjectCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.ObjectCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.containsKey(Object)",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.get(Object)",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.hashCode(Object)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.put(Object,int)",3,2,4
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.AccessRestriction(String,char[][],char[][],AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.equals(Object)",15,6,20
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.getExclusionPatterns()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.getInclusionPatterns()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.getMessageTemplate()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.getViolatedRestriction(char[],char[])",3,3,5
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.NameEnvironmentAnswer(IBinaryType,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.NameEnvironmentAnswer(ICompilationUnit,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.NameEnvironmentAnswer(ISourceType[],AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getAccessRestriction()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getBinaryType()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getSourceTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isSourceType()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.ConditionalFlowInfo(FlowInfo,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.addInitializationsFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.addPotentialInitializationsFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.asNegatedCondition()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.copy()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.initsWhenFalse()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.initsWhenTrue()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyAssigned(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyAssigned(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNonNull(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNonNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNull(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isPotentiallyAssigned(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isPotentiallyAssigned(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isReachable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyAssigned(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyAssigned(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNonNull(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNonNull(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNotAssigned(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNotAssigned(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNull(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNull(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.mergedWith(UnconditionalFlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.reachMode()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.setReachMode(int)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.unconditionalInits()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.ExceptionHandlingFlowContext(FlowContext,ASTNode,ReferenceBinding[],BlockScope,UnconditionalFlowInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.complainIfUnusedExceptionHandlers(AbstractMethodDeclaration)",2,4,5
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.complainIfUnusedExceptionHandlers(BlockScope,TryStatement)",1,4,4
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.individualToString()",1,4,4
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.initsOnException(ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.initsOnReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.mergeUnhandledException(TypeBinding)",2,6,8
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.recordHandlingException(ReferenceBinding,UnconditionalFlowInfo,TypeBinding,ASTNode,boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.recordReturnFrom(FlowInfo)",2,2,3
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.FinallyFlowContext(FlowContext,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.complainOnDeferredChecks(FlowInfo,BlockScope)",6,11,14
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.isSubRoutine()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.recordFinalAssignment(VariableBinding,Reference)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.recordNullReference(Expression,int)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.removeFinalAssignmentIfAny(Reference)",3,1,3
"org.eclipse.jdt.internal.compiler.flow.FlowContext.FlowContext(FlowContext,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.breakLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.checkExceptionHandlers(TypeBinding,ASTNode,FlowInfo,BlockScope)",11,14,18
"org.eclipse.jdt.internal.compiler.flow.FlowContext.checkExceptionHandlers(TypeBinding[],ASTNode,FlowInfo,BlockScope)",14,22,33
"org.eclipse.jdt.internal.compiler.flow.FlowContext.continueLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForBreakLabel(char[])",4,3,6
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForContinueLabel(char[])",5,6,9
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForDefaultBreak()",4,3,6
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForDefaultContinue()",4,2,5
"org.eclipse.jdt.internal.compiler.flow.FlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.initsOnBreak()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.initsOnReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isBreakable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isContinuable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isNonReturningContext()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isSubRoutine()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.labelName()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordBreakFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordContinueFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordFinalAssignment(VariableBinding,Reference)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordNullReference(Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordReturnFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordSettingFinal(VariableBinding,Reference,FlowInfo)",4,2,4
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordUsingNullReference(Scope,LocalVariableBinding,Expression,int,FlowInfo)",8,6,9
"org.eclipse.jdt.internal.compiler.flow.FlowContext.removeFinalAssignmentIfAny(Reference)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.subRoutine()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.asNegatedCondition()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.conditional(FlowInfo,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.initial(int)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.mergedOptimizedBranches(FlowInfo,boolean,FlowInfo,boolean,boolean)",1,5,7
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.toString()",2,1,2
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.InitializationFlowContext(FlowContext,ASTNode,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.checkInitializerExceptions(BlockScope,FlowContext,FlowInfo)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.individualToString()",1,2,2
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.recordHandlingException(ReferenceBinding,UnconditionalFlowInfo,TypeBinding,ASTNode,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.InsideSubRoutineFlowContext(FlowContext,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.initsOnReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.isNonReturningContext()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.recordReturnFrom(FlowInfo)",2,2,3
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.subRoutine()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.LabelFlowContext(FlowContext,ASTNode,char[],Label,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.checkLabelValidity(BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.labelName()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.LoopingFlowContext(FlowContext,ASTNode,Label,Label,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.complainOnDeferredChecks(BlockScope,FlowInfo)",6,11,14
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.continueLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.isContinuable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.isContinuedTo()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordContinueFrom(FlowInfo)",2,2,3
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordFinalAssignment(VariableBinding,Reference)",4,3,6
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordNullReference(Expression,int)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.removeFinalAssignmentIfAny(Reference)",3,1,3
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.SwitchFlowContext(FlowContext,ASTNode,Label)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.breakLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.isBreakable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.recordBreakFrom(FlowInfo)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.UnconditionalFlowInfo()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addInitializationsFrom(FlowInfo)",3,5,11
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addPotentialInitializationsFrom(FlowInfo)",3,5,10
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.copy()",2,2,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.discardFieldInitializations()",4,1,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.discardNonFieldInitializations()",4,1,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.discardNullRelatedInitializations()",1,1,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.initsWhenFalse()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.initsWhenTrue()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(FieldBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(LocalVariableBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(int)",4,1,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNonNull(FieldBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNonNull(LocalVariableBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNonNull(int)",4,1,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNull(FieldBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNull(LocalVariableBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNull(int)",4,1,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyAssigned(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyAssigned(LocalVariableBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyAssigned(int)",4,1,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isReachable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyAssigned(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyAssigned(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyAssigned(int)",1,5,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNonNull(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNonNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNonNull(int)",1,1,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNotAssigned(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNotAssigned(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNotAssigned(int)",5,1,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNull(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNull(int)",1,1,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.mergedWith(UnconditionalFlowInfo)",5,5,14
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.numberOfEnclosingFields(ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.reachMode()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.setReachMode(int)",2,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.toString()",2,1,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.unconditionalInits()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.BooleanConstant(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.booleanValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.stringValue()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.ByteConstant(byte)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.stringValue()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.CharConstant(char)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.stringValue()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.CharConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.CompilerOptions()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.CompilerOptions(Map)",2,1,2
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getMap()",1,8,26
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getSeverity(long)",3,1,3
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getSeverityString(long)",3,1,3
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getVisibilityString(int)",5,2,5
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.set(Map)",1,112,142
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.toString()",1,7,29
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.updateSeverity(long,Object)",1,3,4
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.versionFromJdkLevel(long)",6,1,6
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.versionToJdkLevel(Object)",6,5,6
"org.eclipse.jdt.internal.compiler.impl.Constant.booleanValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.castTo(int)",54,44,54
"org.eclipse.jdt.internal.compiler.impl.Constant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperation(Constant,int,int)",17,17,18
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperation(Constant,int,int,Constant,int)",19,19,19
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationAND(Constant,int,Constant,int)",28,28,32
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationAND_AND(Constant,int,Constant,int)",1,2,2
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationDIVIDE(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationEQUAL_EQUAL(Constant,int,Constant,int)",55,55,64
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationGREATER(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationGREATER_EQUAL(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationLEFT_SHIFT(Constant,int,Constant,int)",27,27,31
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationLESS(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationLESS_EQUAL(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationMINUS(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationMULTIPLY(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationOR(Constant,int,Constant,int)",28,28,32
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationOR_OR(Constant,int,Constant,int)",1,2,2
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationPLUS(Constant,int,Constant,int)",78,78,87
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationREMAINDER(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationRIGHT_SHIFT(Constant,int,Constant,int)",27,27,31
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationUNSIGNED_RIGHT_SHIFT(Constant,int,Constant,int)",27,27,31
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationXOR(Constant,int,Constant,int)",28,28,32
"org.eclipse.jdt.internal.compiler.impl.Constant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(String)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(byte)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(char)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(double)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(float)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(int)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(long)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(short)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.toString()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.Constant.typeName()",12,2,12
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.DoubleConstant(double)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.stringValue()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.toString()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.FloatConstant(float)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.stringValue()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.IntConstant(int)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.stringValue()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.IntConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.LongConstant(long)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.stringValue()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.LongConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.ShortConstant(short)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.stringValue()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.StringConstant(String)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.compileTimeEqual(StringConstant)",2,1,2
"org.eclipse.jdt.internal.compiler.impl.StringConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.ArrayBinding(TypeBinding,int,LookupEnvironment)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.collectSubstitutes(TypeBinding,Map)",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.computeUniqueKey()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.constantPoolName()",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.debugName()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.elementsType()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.environment()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.erasure()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.genericTypeSignature()",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.getPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.hashCode()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.isCompatibleWith(TypeBinding)",9,5,9
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.leafComponentType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.qualifiedSourceName()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.readableName()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.shortReadableName()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.sourceName()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.BaseTypeBinding(int,char[],char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.getPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isCompatibleWith(TypeBinding)",17,6,17
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isNarrowing(int,int)",16,2,16
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isWidening(int,int)",17,2,17
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.qualifiedSourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.shortReadableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.sourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.BinaryTypeBinding(PackageBinding,IBinaryType,LookupEnvironment)",1,5,10
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableFields()",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableMethods()",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(IBinaryType,boolean)",1,15,17
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createFields(IBinaryField[],long)",1,7,7
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethod(IBinaryMethod,long)",1,29,40
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethods(IBinaryMethod[],long)",2,9,15
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createTypeVariables(SignatureWrapper,Binding)",4,5,12
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.enclosingType()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.fields()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getExactConstructor(TypeBinding[])",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",10,11,13
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getField(char[],boolean)",3,5,5
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMemberType(char[])",6,5,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMethods(char[])",3,7,9
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getTypeVariable(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.hasMemberTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.initializeTypeVariable(TypeVariableBinding,TypeVariableBinding[],SignatureWrapper)",1,4,7
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.isEquivalentTo(TypeBinding)",5,3,5
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.isGenericType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.kind()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.memberTypes()",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.methods()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(ReferenceBinding,LookupEnvironment,boolean)",5,6,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(TypeBinding,LookupEnvironment,ParameterizedTypeBinding,int)",6,6,9
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypeFor(FieldBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypesFor(MethodBinding)",2,5,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveUnresolvedType(ReferenceBinding,LookupEnvironment,boolean)",2,4,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superInterfaces()",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()",1,22,31
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.typeVariables()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.unResolvedMethods()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.computeUniqueKey()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.isValidBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.shortReadableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(BlockScope,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(BlockScope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(int,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addAnonymousType(TypeDeclaration,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addLocalType(TypeDeclaration)",5,5,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addLocalVariable(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addSubscope(Scope)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.allowBlankFinalFieldAssignment(FieldBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.basicToString(int)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.checkAndSetModifiersForVariable(LocalVariableBinding)",1,3,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.computeLocalVariablePositions(int,int,CodeStream)",1,16,24
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.emulateOuterAccess(LocalVariableBinding)",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.findLocalType(char[])",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.findVariable(char[])",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getBinding(char[][],InvocationSite)",20,18,20
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getBinding(char[][],int,InvocationSite,boolean)",19,17,22
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getEmulationPath(LocalVariableBinding)",6,4,7
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getEmulationPath(ReferenceBinding,boolean,boolean)",22,20,37
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.isDuplicateLocalVariable(char[])",5,3,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.maxShiftedOffset()",1,1,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.propagateInnerEmulation(ReferenceBinding,boolean)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.referenceType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.scopeIndex()",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.startIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.toString(int)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.ClassScope(Scope,TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildAnonymousTypeBinding(SourceTypeBinding,ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFields()",9,13,20
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFieldsAndMethods()",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildLocalType(SourceTypeBinding,PackageBinding)",7,9,9
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildLocalTypeBinding(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildMemberTypes(AccessRestriction)",7,12,12
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildMethods()",4,6,13
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildType(SourceTypeBinding,PackageBinding,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildTypeVariables()",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkAndSetModifiers()",2,38,61
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkAndSetModifiersForField(FieldBinding,FieldDeclaration)",3,10,17
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkForInheritedMemberTypes(SourceTypeBinding)",8,12,19
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkParameterizedTypeBounds()",1,6,6
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectEnumSuperclass()",3,4,4
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectMemberTypes()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperInterfaces()",11,13,16
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass()",9,13,15
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchyWithoutMembers()",2,6,7
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectAnnotationCycle(TypeBinding,TypeBinding,TypeReference)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(SourceTypeBinding,ReferenceBinding,TypeReference)",13,14,20
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(TypeBinding,TypeReference,TypeBinding[])",4,6,11
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.findAmbiguousInterface(ReferenceBinding,ReferenceBinding)",6,8,11
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype(TypeReference)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.problemReporter()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.referenceType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.toString()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.CompilationUnitScope(CompilationUnitDeclaration,LookupEnvironment)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.buildFieldsAndMethods()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.buildTypeBindings(AccessRestriction)",9,16,22
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.checkAndSetImports()",11,13,17
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.computeConstantPoolName(LocalTypeBinding)",4,7,8
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports()",21,27,31
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(char[][],int)",12,11,15
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(char[][],boolean)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleStaticImport(char[][])",7,5,11
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.getDefaultImports()",2,4,5
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.getImport(char[][],boolean,boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordQualifiedReference(char[][])",5,5,6
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordReference(ReferenceBinding,char[])",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordReference(char[][],char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordSimpleReference(char[])",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordSuperTypeReference(TypeBinding)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeConversion(TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReference(TypeBinding)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReferences(TypeBinding[])",3,4,7
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.resolveSingleImport(ImportBinding)",3,3,7
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.storeDependencyInfo()",1,13,13
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.typeToRecord(TypeBinding)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.verifyMethods(MethodVerifier)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding(FieldBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding(FieldDeclaration,TypeBinding,int,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding(char[],TypeBinding,int,ReferenceBinding,Constant)",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.canBeSeenBy(PackageBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.canBeSeenBy(TypeBinding,InvocationSite,Scope)",22,15,29
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.computeUniqueKey()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.genericSignature()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isDefault()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isPrivate()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isPrivateUsed()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isProtected()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isPublic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isTransient()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isViewedAsDeprecated()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isVolatile()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.sourceField()",4,1,5
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.ImportBinding(char[][],boolean,Binding,ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.isStatic()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.readableName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency.InnerEmulationDependency(BlockScope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.LocalTypeBinding(ClassScope,SourceTypeBinding,CaseStatement)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.addInnerEmulationDependent(BlockScope,boolean)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.createArrayType(int)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.readableName()",1,7,7
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.setAsMemberType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.setConstantPoolName(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.shortReadableName()",1,7,7
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.sourceName()",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.toString()",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.updateInnerEmulationDependents()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.LocalVariableBinding(LocalDeclaration,TypeBinding,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.LocalVariableBinding(char[],TypeBinding,int,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.computeUniqueKey()",1,6,6
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.getScopeKey(BlockScope,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.isSecret()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.recordInitializationEndPC(int)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.recordInitializationStartPC(int)",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.toString()",2,5,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.LookupEnvironment(ITypeRequestor,CompilerOptions,ProblemReporter,INameEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(PackageBinding,char[])",4,4,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(char[][])",2,4,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.buildTypeBindings(CompilationUnitDeclaration,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(IBinaryType,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(IBinaryType,boolean,AccessRestriction)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings()",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration)",3,4,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration,boolean)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.computeBoxingType(TypeBinding)",20,2,28
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.computePackageFrom(char[][])",2,5,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createArrayType(TypeBinding,int)",5,3,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(IBinaryType,PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(IBinaryType,PackageBinding,boolean,AccessRestriction)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createPackage(char[][])",5,5,10
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding)",7,8,18
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createRawType(ReferenceBinding,ReferenceBinding)",4,4,6
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createWildcard(ReferenceBinding,int,TypeBinding,int)",6,3,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getAccessRestriction(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getCachedType(char[][])",6,4,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getPackage0(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTopLevelPackage(char[])",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getType(char[][])",12,7,16
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeArgumentsFromSignature(SignatureWrapper,TypeVariableBinding[],ReferenceBinding,ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromConstantPoolName(char[],int,int,boolean)",3,5,6
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromSignature(char[],int,int,boolean,TypeBinding)",3,3,15
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(SignatureWrapper,TypeVariableBinding[],ReferenceBinding)",9,15,16
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromVariantTypeSignature(SignatureWrapper,TypeVariableBinding[],ReferenceBinding,ReferenceBinding,int)",2,2,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.isBoxingCompatibleWith(TypeBinding,TypeBinding)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.isPackage(char[][],char[])",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.methodVerifier()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.reset()",1,1,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.setAccessRestriction(ReferenceBinding,AccessRestriction)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.updateCaches(UnresolvedReferenceBinding,ReferenceBinding)",7,1,7
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.MemberTypeBinding(char[][],ClassScope,SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.checkSyntheticArgsAndFields()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.constantPoolName()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding(MethodBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding(int,TypeBinding[],ReferenceBinding[],ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding(int,char[],TypeBinding,TypeBinding[],ReferenceBinding[],ReferenceBinding)",1,5,11
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areParameterErasuresEqual(MethodBinding)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areParametersCompatibleWith(TypeBinding[])",10,9,13
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areParametersEqual(MethodBinding)",5,1,5
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.canBeSeenBy(InvocationSite,Scope)",6,5,8
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.canBeSeenBy(PackageBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.canBeSeenBy(TypeBinding,InvocationSite,Scope)",22,15,29
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.constantPoolDeclaringClass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.genericSignature()",4,7,10
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getTypeVariable(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.hasSubstitutedParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.hasSubstitutedReturnType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isAbstract()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isBridge()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDefault()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDefaultAbstract()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isFinal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isImplementing()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isMain()",3,7,8
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isNative()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isOverriding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isPrivate()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isPrivateUsed()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isProtected()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isPublic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isRequiredToClearPrivateModifier()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isStrictfp()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isSynchronized()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isVarargs()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isViewedAsDeprecated()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.readableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.setSelector(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.shortReadableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature()",2,12,16
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceEnd()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceMethod()",3,1,4
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceStart()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.tagForClearingPrivateModifier()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.tiebreakMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.toString()",1,10,13
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.typeVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.MethodScope(ClassScope,ReferenceContext,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.basicToString(int)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.checkAndSetModifiersForConstructor(MethodBinding)",1,7,15
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.checkAndSetModifiersForMethod(MethodBinding)",2,14,20
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.computeLocalVariablePositions(int,CodeStream)",3,14,23
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.createMethod(AbstractMethodDeclaration)",1,8,12
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.findField(TypeBinding,char[],InvocationSite,boolean)",8,2,9
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isInsideConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isInsideInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isInsideInitializerOrConstructor()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.problemReporter()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.recordInitializationStates(FlowInfo)",9,3,13
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.referenceMethod()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.referenceType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.MethodVerifier(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areMethodsEqual(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areParametersEqual(MethodBinding,MethodBinding)",5,2,5
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areReturnTypesEqual(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areTypesEqual(TypeBinding,TypeBinding)",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkAbstractMethod(MethodBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkAgainstInheritedMethods(MethodBinding,MethodBinding[],int)",10,16,19
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkExceptions(MethodBinding,MethodBinding)",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkForBridgeMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkInheritedMethods(MethodBinding[],int)",9,15,19
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkMethods()",5,22,31
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkPackagePrivateAbstractMethod(MethodBinding)",8,6,11
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeInheritedMethods()",15,36,42
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeMethods()",1,5,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeSubstituteMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.doesMethodOverride(MethodBinding,MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.errorException()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isAsVisible(MethodBinding,MethodBinding)",6,1,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isInterfaceMethodImplemented(MethodBinding,MethodBinding,ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isSameClassOrSubclassOf(ReferenceBinding,ReferenceBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.mustImplementAbstractMethod(ReferenceBinding)",5,7,9
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.problemReporter(MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.resolvedExceptionTypesFor(MethodBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.runtimeException()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.verify(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.MethodVerifier15(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.areMethodsEqual(MethodBinding,MethodBinding)",6,8,10
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.areReturnTypesEqual(MethodBinding,MethodBinding)",4,5,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.areTypesEqual(TypeBinding,TypeBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkForBridgeMethod(MethodBinding,MethodBinding)",6,10,11
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.computeSubstituteMethod(MethodBinding,MethodBinding)",5,6,10
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.detectNameClash(MethodBinding,MethodBinding,boolean)",2,5,5
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.doParametersClash(MethodBinding,MethodBinding)",5,4,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.doTypeVariablesClash(MethodBinding,MethodBinding)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.doesMethodOverride(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.hasBoundedParameters(ParameterizedTypeBinding)",7,2,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.isInterfaceMethodImplemented(MethodBinding,MethodBinding,ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.NestedTypeBinding(char[][],ClassScope,SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgument(LocalVariableBinding)",4,3,6
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgument(ReferenceBinding)",4,4,7
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgumentAndField(LocalVariableBinding)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgumentAndField(ReferenceBinding)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.computeSyntheticArgumentSlotSizes()",1,3,10
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.enclosingType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.getSyntheticArgument(LocalVariableBinding)",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.getSyntheticArgument(ReferenceBinding,boolean)",9,4,9
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticEnclosingInstanceTypes()",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticEnclosingInstances()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticOuterLocalVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.updateInnerEmulationDependents()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding(char[],LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding(char[][],PackageBinding,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addNotFoundPackage(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addNotFoundType(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addPackage(PackageBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addType(ReferenceBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.computeUniqueKey()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.findPackage(char[])",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getPackage(char[])",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getPackage0(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getType(char[])",5,3,5
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getType0(char[])",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(char[])",9,5,11
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.toString()",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.ParameterizedFieldBinding(ParameterizedTypeBinding,FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.constant()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.isConstantValue()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.setConstant(Constant)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.ParameterizedGenericMethodBinding(MethodBinding,RawTypeBinding,LookupEnvironment)",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.ParameterizedGenericMethodBinding(MethodBinding,TypeBinding[],LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(MethodBinding,TypeBinding[],Scope,InvocationSite)",9,18,23
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeUniqueKey()",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.hasSubstitutedParameters()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.hasSubstitutedReturnType()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.inferFromExpectedType(TypeBinding,Scope)",7,7,11
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.substitute(TypeBinding)",14,13,24
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.tiebreakMethod()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.ParameterizedMethodBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.ParameterizedMethodBinding(ParameterizedTypeBinding,MethodBinding,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.computeUniqueKey()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.hasSubstitutedParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.hasSubstitutedReturnType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.instantiateGetClass(TypeBinding,MethodBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.ParameterizedTypeBinding(ReferenceBinding,TypeBinding[],ReferenceBinding,LookupEnvironment)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.canBeInstantiated()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.collectSubstitutes(TypeBinding,Map)",7,6,13
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.computeId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.createParameterizedMethod(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.debugName()",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.enclosingType()",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.erasure()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.fieldCount()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.fields()",1,2,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.genericTypeSignature()",1,8,8
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getExactConstructor(TypeBinding[])",9,2,11
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",17,10,21
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getField(char[],boolean)",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getMemberType(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getMethods(char[])",5,8,12
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.hasMemberTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.implementsMethod(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initialize(ReferenceBinding,TypeBinding[])",1,3,6
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initializeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isEquivalentTo(TypeBinding)",12,8,18
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isParameterizedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.memberTypes()",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.methods()",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.qualifiedPackageName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.qualifiedSourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.readableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.resolve()",4,7,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.shortReadableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.signature()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.sourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substitute(TypeBinding)",14,12,24
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.superInterfaces()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.superclass()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.syntheticEnclosingInstanceTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.syntheticOuterLocalVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.toString()",1,25,26
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.typeVariables()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[],ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[][],ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[][],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.ProblemFieldBinding(FieldBinding,ReferenceBinding,char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.ProblemFieldBinding(ReferenceBinding,char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.ProblemFieldBinding(ReferenceBinding,char[][],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.ProblemMethodBinding(MethodBinding,char[],TypeBinding[],int)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.ProblemMethodBinding(char[],TypeBinding[],ReferenceBinding,int)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.ProblemMethodBinding(char[],TypeBinding[],int)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding.ProblemPackageBinding(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding.ProblemPackageBinding(char[][],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.ProblemReferenceBinding(char[],ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.ProblemReferenceBinding(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.ProblemReferenceBinding(char[][],ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.ProblemReferenceBinding(char[][],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.shortReadableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.RawTypeBinding(ReferenceBinding,ReferenceBinding,LookupEnvironment)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.createParameterizedMethod(MethodBinding)",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.debugName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.genericTypeSignature()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.initializeArguments()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isEquivalentTo(TypeBinding)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isParameterizedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isRawType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.readableName()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.shortReadableName()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.substitute(TypeBinding)",9,11,17
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.availableFields()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.availableMethods()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeInstantiated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy(PackageBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy(ReferenceBinding,SourceTypeBinding)",20,12,26
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy(Scope)",11,7,13
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.computeId()",13,25,70
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.constantPoolName()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.debugName()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.depth()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.enclosingTypeAt(int)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.fieldCount()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.fields()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.findSuperTypeErasingTo(ReferenceBinding)",8,10,13
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.findSuperTypeErasingTo(int,boolean)",8,10,13
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getExactConstructor(TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getExactMethod(char[],TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getField(char[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getMemberType(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getMethods(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getTypeVariable(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hasMemberTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hasRestrictedAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hashCode()",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.implementsInterface(ReferenceBinding,boolean)",5,9,11
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.implementsMethod(MethodBinding)",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isAbstract()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isAnnotationType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isAnonymousType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isBinaryBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isClass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith(TypeBinding)",8,2,8
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isDefault()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isEnum()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isFinal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isHierarchyBeingConnected()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isInterface()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isPrivate()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isPrivateUsed()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isProtected()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isPublic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isStatic()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isStrictfp()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isSuperclassOf(ReferenceBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isViewedAsDeprecated()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.memberTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.methods()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.needsUncheckedConversion(TypeBinding)",7,5,10
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.qualifiedSourceName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.readableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.shortReadableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.signature()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.sourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.superInterfaces()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.superclass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.syntheticEnclosingInstanceTypes()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.syntheticOuterLocalVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.unResolvedMethods()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.Scope(int,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.boxing(TypeBinding)",11,2,19
"org.eclipse.jdt.internal.compiler.lookup.Scope.boxing(int)",10,2,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.classScope()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.compareTypes(TypeBinding,TypeBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.compareUncheckedException(ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.compilationUnitScope()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(MethodBinding,TypeBinding[],InvocationSite)",12,2,16
"org.eclipse.jdt.internal.compiler.lookup.Scope.connectTypeVariables(TypeParameter[])",14,15,24
"org.eclipse.jdt.internal.compiler.lookup.Scope.convertToRawType(TypeBinding)",3,9,9
"org.eclipse.jdt.internal.compiler.lookup.Scope.createArrayType(TypeBinding,int)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.createParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding)",4,2,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.createTypeVariables(TypeParameter[],Binding)",7,8,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingClassScope()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingMethodScope()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingSourceType()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.environment()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.findDefaultAbstractMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite,ReferenceBinding,MethodBinding,ObjectVector)",10,10,16
"org.eclipse.jdt.internal.compiler.lookup.Scope.findDirectMemberType(char[],ReferenceBinding)",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.findExactMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",4,10,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.findField(TypeBinding,char[],InvocationSite,boolean)",23,17,32
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMemberType(char[],ReferenceBinding)",18,16,28
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",30,36,60
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethodForArray(ArrayBinding,char[],TypeBinding[],InvocationSite)",14,9,17
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethodInSuperInterfaces(ReferenceBinding,char[],ObjectVector,MethodBinding)",1,11,15
"org.eclipse.jdt.internal.compiler.lookup.Scope.findType(char[],PackageBinding,PackageBinding)",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.findVariable(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getBaseType(char[])",12,2,53
"org.eclipse.jdt.internal.compiler.lookup.Scope.getBinding(char[],int,InvocationSite,boolean)",37,37,62
"org.eclipse.jdt.internal.compiler.lookup.Scope.getConstructor(ReferenceBinding,TypeBinding[],InvocationSite)",7,8,16
"org.eclipse.jdt.internal.compiler.lookup.Scope.getCurrentPackage()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getDeclarationModifiers()",7,3,8
"org.eclipse.jdt.internal.compiler.lookup.Scope.getField(TypeBinding,char[],InvocationSite)",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.getImplicitMethod(char[],TypeBinding[],InvocationSite)",31,37,60
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaIoSerializable()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangAnnotationAnnotation()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangAssertionError()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangClass()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangCloneable()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangEnum()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangError()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangIterable()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangObject()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangRuntimeException()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangString()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangThrowable()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaUtilIterator()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getMemberType(char[],ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod(TypeBinding,char[],TypeBinding[],InvocationSite)",10,4,11
"org.eclipse.jdt.internal.compiler.lookup.Scope.getPackage(char[][])",8,4,8
"org.eclipse.jdt.internal.compiler.lookup.Scope.getType(char[])",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getType(char[],PackageBinding)",5,5,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.getType(char[][],int)",16,12,17
"org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(char[],int)",42,32,63
"org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(char[][])",14,18,22
"org.eclipse.jdt.internal.compiler.lookup.Scope.greaterLowerBound(TypeBinding[])",7,5,11
"org.eclipse.jdt.internal.compiler.lookup.Scope.isBoxingCompatibleWith(TypeBinding,TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInField(FieldBinding)",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInMethod(MethodBinding)",5,1,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInSameUnit(ReferenceBinding)",3,1,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInType(ReferenceBinding)",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.isInsideDeprecatedCode()",7,7,12
"org.eclipse.jdt.internal.compiler.lookup.Scope.leastContainingInvocation(TypeBinding,List)",12,7,12
"org.eclipse.jdt.internal.compiler.lookup.Scope.leastContainingTypeArgument(TypeBinding,TypeBinding,ReferenceBinding,int)",19,9,25
"org.eclipse.jdt.internal.compiler.lookup.Scope.lowerUpperBound(TypeBinding[])",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.methodScope()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.minimalErasedCandidate(TypeBinding[],List)",20,24,36
"org.eclipse.jdt.internal.compiler.lookup.Scope.mostSpecificClassMethodBinding(MethodBinding[],int,InvocationSite)",7,3,9
"org.eclipse.jdt.internal.compiler.lookup.Scope.mostSpecificInterfaceMethodBinding(MethodBinding[],int,InvocationSite)",6,3,6
"org.eclipse.jdt.internal.compiler.lookup.Scope.mostSpecificMethodBinding(MethodBinding[],int,TypeBinding[],InvocationSite)",9,9,14
"org.eclipse.jdt.internal.compiler.lookup.Scope.outerMostClassScope()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.outerMostMethodScope()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(MethodBinding,TypeBinding[])",13,14,18
"org.eclipse.jdt.internal.compiler.lookup.Scope.referenceCompilationUnit()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.startIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.substitute(Substitution,ReferenceBinding[])",1,4,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.substitute(Substitution,TypeBinding[])",1,4,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.switchCase()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.unboxing(TypeBinding)",10,2,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.unboxing(int)",10,2,10
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.SignatureWrapper(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.atEnd()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.computeEnd()",2,3,8
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.nextWord()",1,2,6
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.SourceTypeBinding(char[][],PackageBinding,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addDefaultAbstractMethod(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addDefaultAbstractMethods()",4,10,12
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticBridgeMethod(MethodBinding,MethodBinding)",7,8,13
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticEnumMethod(char[])",1,2,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForAssert(BlockScope)",5,6,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForClassLiteral(TypeBinding,BlockScope)",4,5,7
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForEnumValues()",5,6,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForInnerclass(LocalVariableBinding)",5,6,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForInnerclass(ReferenceBinding)",4,5,7
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethod(FieldBinding,boolean)",1,2,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethod(MethodBinding,boolean)",1,2,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.collectSubstitutes(TypeBinding,Map)",7,6,13
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForFieldsAndMethods()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.fields()",3,2,7
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.genericSignature()",4,8,9
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.genericTypeSignature()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getDefaultAbstractMethods()",2,3,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getExactConstructor(TypeBinding[])",9,2,11
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",14,10,18
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getField(char[],boolean)",3,6,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getMethods(char[])",9,12,14
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getSyntheticBridgeMethod(MethodBinding)",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getSyntheticField(LocalVariableBinding)",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getSyntheticField(ReferenceBinding,boolean)",6,4,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedFieldBinding(FieldBinding,ReferenceBinding)",1,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedMethodBinding(MethodBinding,ReferenceBinding)",1,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.hasMemberTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isEquivalentTo(TypeBinding)",12,8,18
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isGenericType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.kind()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.memberTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.methods()",2,16,26
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypeFor(FieldBinding)",7,6,12
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypesFor(MethodBinding)",10,21,32
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.sourceStart()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.superInterfaces()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.superclass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.syntheticFields()",3,7,9
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.syntheticMethods()",2,7,17
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()",1,35,37
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.typeVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.verifyMethods(MethodVerifier)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding.SyntheticArgumentBinding(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding.SyntheticArgumentBinding(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding.SyntheticFieldBinding(char[],TypeBinding,int,ReferenceBinding,Constant,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(FieldBinding,boolean,ReferenceBinding)",10,9,18
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(MethodBinding,MethodBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(MethodBinding,boolean,ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(SourceTypeBinding,char[])",1,3,5
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.initializeConstructorAccessor(MethodBinding)",10,8,15
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.initializeMethodAccessor(MethodBinding,boolean,ReferenceBinding)",10,9,17
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.isConstructorRelated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.canBeInstantiated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.collectSubstitutes(TypeBinding,Map)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.computeUniqueKey()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.debugName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.enclosingType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.erasure()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.genericCast(TypeBinding)",4,2,5
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.genericTypeSignature()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isAnnotationType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isBaseType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isBoundParameterizedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isClass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isEnum()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isEquivalentTo(TypeBinding)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isGenericType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isHierarchyInconsistent()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isInterface()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isLocalType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isMemberType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isNestedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isNumericType()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isParameterizedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isPartOfRawType()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProvablyDistinctFrom(TypeBinding,int)",14,6,15
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isRawType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isReifiable()",7,3,8
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isTypeArgumentContainedBy(TypeBinding)",7,9,12
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isTypeVariable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isUnboundWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.leafComponentType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.needsUncheckedConversion(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.qualifiedPackageName()",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.signature()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.typeVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.wellKnownType(Scope,int)",12,4,12
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.TypeVariableBinding(char[],Binding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.boundCheck(Substitution,TypeBinding)",10,8,16
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.canBeInstantiated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.collectSubstitutes(TypeBinding,Map)",6,2,6
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.computeUniqueKey()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.constantPoolName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.debugName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.erasure()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.findSuperTypeErasingTo(ReferenceBinding)",8,10,13
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.findSuperTypeErasingTo(int,boolean)",7,10,12
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.genericSignature()",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.genericTypeSignature()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isErasureBoundTo(TypeBinding)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isTypeVariable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.resolve(LookupEnvironment)",2,7,8
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.shortReadableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.superInterfaces()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.superclass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.toString()",1,6,9
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.UnresolvedReferenceBinding(char[][],PackageBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.addWrapper(TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.debugName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(LookupEnvironment,boolean)",6,9,10
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.setResolvedType(ReferenceBinding,LookupEnvironment)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.UpdatedMethodBinding.UpdatedMethodBinding(TypeBinding,int,char[],TypeBinding,TypeBinding[],ReferenceBinding[],ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UpdatedMethodBinding.constantPoolDeclaringClass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.VariableBinding(char[],TypeBinding,int,Constant)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.constant()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isBlankFinal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isConstantValue()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isFinal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.setConstant(Constant)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.toString()",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.WildcardBinding(ReferenceBinding,int,TypeBinding,int,LookupEnvironment)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.boundCheck(TypeBinding)",4,4,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.canBeInstantiated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.collectSubstitutes(TypeBinding,Map)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.debugName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.erasure()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.genericTypeSignature()",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.initialize(ReferenceBinding,TypeBinding)",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isSuperclassOf(ReferenceBinding)",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isUnboundWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.readableName()",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.resolve()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.shortReadableName()",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.signature()",4,4,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.sourceName()",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.superInterfaces()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.superclass()",1,5,6
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.toString()",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.typeVariable()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.AbstractCommentParser(Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.commentParse(int,int)",5,31,60
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.consumeToken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.createReturnStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getIndexPosition()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getLineNumber(int)",8,2,8
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getTokenEndPosition()",2,2,2
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseArguments(Object)",23,13,32
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseHref()",13,19,27
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseMember(Object)",4,9,13
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseParam()",16,38,58
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseQualifiedName(boolean)",8,3,15
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseReference()",16,28,38
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseThrows()",2,5,5
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.peekChar()",1,9,12
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushIdentifier(boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushOnAstStack(Object,boolean)",2,4,5
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readChar()",1,9,12
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readToken()",1,4,4
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readTokenAndConsume()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.refreshInlineTagPosition(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.toString()",3,4,8
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.updateLineEnd()",3,3,3
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.verifyEndLine(int)",8,10,14
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.verifySpaceOrEndComment()",8,4,9
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.JavadocParser(Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.checkDeprecation(int,int)",7,18,21
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createArgumentReference(char[],int,Object,long[],long)",1,1,6
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createFieldReference(Object)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createMethodReference(Object,List)",7,3,8
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createReturnStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createTag()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createTypeReference(int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseReturn()",2,3,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseTag(int)",3,18,31
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushParamName(boolean)",6,8,12
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushSeeRef(Object)",3,3,6
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushText(int,int)",6,7,11
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushThrowName(Object)",3,3,6
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.updateDocComment()",3,5,16
"org.eclipse.jdt.internal.compiler.parser.NLSLine.NLSLine()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.add(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.exists(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.NLSLine.get(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.iterator()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.set(int,StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.size()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.Parser(ProblemReporter,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.arrayInitializer(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.asi(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.base_check(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.blockReal()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFile(String,List)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForCompliance(String,int,String[])",1,5,6
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForName(String,String)",1,7,10
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForReadableName(String,char[],char[],String[],String[])",1,6,7
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForTable(String,byte[])",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForTable(String,char[])",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileOfByteFor(String,String,String[])",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileOfIntFor(String,String,String[])",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileOfShortFor(String,String,String[])",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFilesFromLPG(String,String)",1,5,5
"org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState()",13,19,25
"org.eclipse.jdt.internal.compiler.parser.Parser.checkAndSetModifiers(int)",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.checkComment()",1,5,15
"org.eclipse.jdt.internal.compiler.parser.Parser.checkNonExternalizedStringLiteral()",1,4,4
"org.eclipse.jdt.internal.compiler.parser.Parser.checkNonNLSAfterBodyEnd(int)",1,2,5
"org.eclipse.jdt.internal.compiler.parser.Parser.classInstanceCreation(boolean)",1,4,8
"org.eclipse.jdt.internal.compiler.parser.Parser.computeQualifiedGenericsFromRightSide(TypeReference,int)",1,6,10
"org.eclipse.jdt.internal.compiler.parser.Parser.concatExpressionLists()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.concatGenericsLists()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.concatNodeLists()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBound()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBound1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBoundList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBoundList1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAllocationHeader()",3,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationAsModifier()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclaration()",1,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclarationHeader()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclarationHeaderName()",1,5,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeMemberDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeMemberDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArgumentList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayAccess(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayCreationExpressionWithInitializer()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayCreationExpressionWithoutInitializer()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayCreationHeader()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayTypeWithTypeArgumentsName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAssertStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAssignment()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAssignmentOperator(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBinaryExpression(int)",2,8,12
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBinaryExpressionWithName(int)",2,8,12
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBlock()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBlockStatements()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCaseLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionLL1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithGenericsArray()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithNameArray()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithPrimitiveType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithQualifiedGenericsArray()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCatchHeader()",5,1,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCatches()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyDeclaration()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassDeclaration()",6,5,11
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeader()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeaderExtends()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeaderImplements()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeaderName1()",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionQualified()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()",1,5,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionWithTypeArguments()",1,5,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassOrInterface()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassOrInterfaceName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassTypeElt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassTypeList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConditionalExpression(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConditionalExpressionWithName(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorBlockStatements()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorBody()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorDeclaration()",5,7,14
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorHeader()",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorHeaderName()",3,4,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorHeaderNameWithTypeParameters()",3,4,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDefaultLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDefaultModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDiet()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDimWithOrWithOutExpr()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDimWithOrWithOutExprs()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDims()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyAnnotationTypeMemberDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArgumentListopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArrayInitializeropt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyBlockStatementsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyCatchesopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyClassBodyDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyClassMemberDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyDimsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyEnumDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyForInitopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyForUpdateopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyInterfaceMemberDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyInterfaceMemberDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyInternalCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyMemberValueArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyMemberValuePairsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyMethodHeaderDefaultValue()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyStatement()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptySwitchBlock()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyTypeDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnhancedForStatement()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnhancedForStatementHeader(boolean)",1,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterAnonymousClassBody()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterAnonymousClassBodySimpleName()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterVariable()",3,12,14
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumBodyNoConstants()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumBodyWithConstants()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantHeader()",4,7,10
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantHeaderName()",3,3,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantNoClassBody()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantWithClassBody()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstants()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumDeclaration()",5,4,10
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumHeader()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumHeaderName()",1,5,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEqualityExpression(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEqualityExpressionWithName(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitTryBlock()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitVariableWithInitialization()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitVariableWithoutInitialization()",1,3,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExplicitConstructorInvocation(int,int)",2,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExplicitConstructorInvocationWithTypeArguments(int,int)",2,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExpressionStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFieldAccess(boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFieldDeclaration()",1,1,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeForInit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeForceNoDiet()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFormalParameter(boolean)",1,6,9
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFormalParameterList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFormalParameterListopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericTypeArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericTypeNameArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeImportDeclaration()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeImportDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpressionLL1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpressionWithQualifiedGenerics()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInstanceOfExpression(int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInstanceOfExpressionWithName(int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceDeclaration()",1,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceHeader()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceHeaderExtends()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceHeaderName1()",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceMemberDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceMemberDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceTypeList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInternalCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInternalCompilationUnitWithTypes()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInvalidConstructorDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLeftParen()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLocalVariableDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLocalVariableDeclarationStatement()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMarkerAnnotation()",1,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValueArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValueAsName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValuePair()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValuePairs()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValues()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodBody()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodDeclaration(boolean)",1,5,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeader()",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderDefaultValue()",1,4,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderExtendedDims()",1,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderName(boolean)",1,5,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderNameWithTypeParameters(boolean)",1,5,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderRightParen()",3,5,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderThrowsClause()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationName()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationNameWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationPrimary()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationPrimaryWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationSuperWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeModifiers2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNameArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNestedMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNestedType()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNormalAnnotation()",1,4,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOneDimLoop()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOnlySynchronized()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOnlyTypeArguments()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOnlyTypeArgumentsForCastExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOpenBlock()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageDeclarationName()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageDeclarationNameWithModifiers()",1,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePostfixExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArray()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayNameSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayNameThis()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayPrimitiveArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayPrimitiveType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayThis()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayWithName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimitiveArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimitiveType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushLeftBrace()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushModifiersForHeader()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushRealModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeQualifiedName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecoveryMethodHeaderName()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecoveryMethodHeaderNameWithTypeParameters()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReduceImports()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType3()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRestoreDiet()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRightParen()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(int)",2,406,809
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSimpleAssertStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleMemberAnnotation()",1,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleStaticImportDeclarationName()",1,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleTypeImportDeclarationName()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementBreak()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementBreakWithLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementCatch()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementContinue()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementContinueWithLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementDo()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementExpressionList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementFor()",1,4,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementIfNoElse()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementIfWithElse()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementReturn()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementSwitch()",1,3,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementSynchronized()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementThrow()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementTry(boolean)",1,1,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementWhile()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStaticImportOnDemandDeclarationName()",1,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStaticInitializer()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStaticOnly()",1,1,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchBlock()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchBlockStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchBlockStatements()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchLabels()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeToken(int)",2,4,52
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgument()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList3()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentReferenceType1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentReferenceType2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArguments()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeHeaderNameWithTypeParameters()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeImportOnDemandDeclarationName()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameter1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameter1WithExtends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameter1WithExtendsAndBounds()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterHeader()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterList1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterWithExtends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterWithExtendsAndBounds()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameters()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeUnaryExpression(int)",1,5,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeUnaryExpression(int,boolean)",1,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeVariableDeclarators()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeVariableInitializers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard1WithBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard2WithBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard3()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard3WithBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds1Extends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds1Super()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds2Extends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds2Super()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds3Extends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds3Super()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBoundsExtends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBoundsSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardWithBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.containsComment(int,int)",4,1,4
"org.eclipse.jdt.internal.compiler.parser.Parser.convertToMethodDeclaration(ConstructorDeclaration,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.copyDims(TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.createFieldDeclaration(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.createLocalDeclaration(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.currentRecoveryType()",3,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(ICompilationUnit,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.dispatchDeclarationInto(int)",3,6,17
"org.eclipse.jdt.internal.compiler.parser.Parser.dispatchDeclarationIntoEnumDeclaration(int)",3,6,18
"org.eclipse.jdt.internal.compiler.parser.Parser.endParse(int)",1,5,6
"org.eclipse.jdt.internal.compiler.parser.Parser.flushCommentsDefinedPriorTo(int)",5,4,10
"org.eclipse.jdt.internal.compiler.parser.Parser.getFirstToken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.getJavaDocPositions()",2,1,6
"org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(CompilationUnitDeclaration)",4,4,8
"org.eclipse.jdt.internal.compiler.parser.Parser.getNextCharacter(char[],int[])",2,9,11
"org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(int)",1,4,8
"org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(int,int,int)",3,5,9
"org.eclipse.jdt.internal.compiler.parser.Parser.getUnspecifiedReference()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.getUnspecifiedReferenceOptimized()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.goForBlockStatementsOrCatchHeader()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForBlockStatementsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForClassBodyDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForFieldDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForGenericMethodDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForHeaders()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.goForImportDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForMemberValue()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForMethodBody()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForPackageDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForTypeDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreExpressionAssignment()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreInterfaceDeclaration()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreInvalidConstructorDeclaration(boolean)",1,1,6
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreMethodBody()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.in_symbol(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.initTables()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.initialize()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.initializeScanner()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.jumpOverMethodBody()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.markEnclosingMemberWithLocalType()",4,1,8
"org.eclipse.jdt.internal.compiler.parser.Parser.markInitializersWithLocalType(TypeDeclaration)",2,1,5
"org.eclipse.jdt.internal.compiler.parser.Parser.moveRecoveryCheckpoint()",4,2,7
"org.eclipse.jdt.internal.compiler.parser.Parser.nasi(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.newMessageSend()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.newMessageSendWithTypeArguments()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.ntAction(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.optimizedConcatNodeLists()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.original_state(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.parse()",7,18,22
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ConstructorDeclaration,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ConstructorDeclaration,CompilationUnitDeclaration,boolean)",2,4,8
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(FieldDeclaration,TypeDeclaration,CompilationUnitDeclaration,char[])",2,1,4
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ICompilationUnit,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ICompilationUnit,CompilationResult,int,int)",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(Initializer,TypeDeclaration,CompilationUnitDeclaration)",2,2,6
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(MethodDeclaration,CompilationUnitDeclaration)",5,2,8
"org.eclipse.jdt.internal.compiler.parser.Parser.parseClassBodyDeclarations(char[],int,int,CompilationUnitDeclaration)",3,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.parseExpression(char[],int,int,CompilationUnitDeclaration)",2,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.parseMemberValue(char[],int,int,CompilationUnitDeclaration)",2,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.persistLineSeparatorPositions()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.problemReporter()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushIdentifier()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushIdentifier(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnAstLengthStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnAstStack(ASTNode)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnExpressionStack(Expression)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnExpressionStackLengthStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnGenericsIdentifiersLengthStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnGenericsLengthStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnGenericsStack(ASTNode)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnIntStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnRealBlockStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.readByteTable(String)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.readLongTable(String)",5,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.readNameTable(String)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.readReadableNameTable(String)",1,4,7
"org.eclipse.jdt.internal.compiler.parser.Parser.readTable(String)",5,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.recoveryExitFromVariable()",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.recoveryTokenCheck()",2,3,11
"org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrors(boolean,int)",3,2,5
"org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrorsForSkippedMethod(TypeDeclaration[])",1,12,12
"org.eclipse.jdt.internal.compiler.parser.Parser.resetModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.resetStacks()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.resumeAfterRecovery()",3,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.resumeOnSyntaxError()",2,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.tAction(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.toString()",1,2,8
"org.eclipse.jdt.internal.compiler.parser.Parser.updateRecoveryState()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.updateSourceDeclarationParts(int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.updateSourcePosition(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.RecoveredBlock(Block,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(Block,int)",3,3,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(FieldDeclaration,int)",3,6,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(LocalDeclaration,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(LocalDeclaration,int,boolean)",5,2,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(Statement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(Statement,int,boolean)",4,2,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(TypeDeclaration,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(TypeDeclaration,int,boolean)",4,2,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.attach(RecoveredStatement)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.toString(int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateOnClosingBrace(int,int)",4,4,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateOnOpeningBrace(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateStatement()",3,3,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updatedBlock()",3,3,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updatedStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.RecoveredElement(RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.RecoveredElement(RecoveredElement,int,Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(AbstractMethodDeclaration,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(Block,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(FieldDeclaration,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(ImportReference,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(LocalDeclaration,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(Statement,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(TypeDeclaration,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.depth()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.enclosingInitializer()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.enclosingMethod()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.enclosingType()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.parser()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.preserveEnclosingBlocks()",1,1,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.previousAvailableLineEnd(int)",6,1,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.tabString(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.toString(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.topElement()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.type()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateBodyStart(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateFromParserState()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateOnClosingBrace(int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateOnOpeningBrace(int,int)",2,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateSourceEndIfNecessary(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateSourceEndIfNecessary(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.RecoveredField(FieldDeclaration,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.RecoveredField(FieldDeclaration,RecoveredElement,int,Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.add(Statement,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.add(TypeDeclaration,int)",2,4,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.toString(int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateOnClosingBrace(int,int)",5,6,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateOnOpeningBrace(int,int)",3,2,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updatedFieldDeclaration()",1,8,9
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.RecoveredImport(ImportReference,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.toString(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.updatedImportReference()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.RecoveredInitializer(FieldDeclaration,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.RecoveredInitializer(FieldDeclaration,RecoveredElement,int,Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(Block,int)",4,2,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(FieldDeclaration,int)",5,6,9
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(LocalDeclaration,int)",3,2,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(Statement,int)",3,2,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(TypeDeclaration,int)",4,5,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.toString(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updateOnClosingBrace(int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updateOnOpeningBrace(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updateSourceEndIfNecessary(int,int)",1,5,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updatedFieldDeclaration()",1,2,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.RecoveredLocalVariable(LocalDeclaration,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.add(Statement,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.toString(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateOnClosingBrace(int,int)",3,2,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateOnOpeningBrace(int,int)",2,1,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updatedStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.RecoveredMethod(AbstractMethodDeclaration,RecoveredElement,int,Parser)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(Block,int)",4,3,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(FieldDeclaration,int)",5,8,10
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(LocalDeclaration,int)",4,6,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(Statement,int)",4,6,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(TypeDeclaration,int)",6,7,11
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.bodyStartsAtHeaderEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.toString(int)",1,4,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateBodyStart(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateFromParserState()",6,10,25
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateOnClosingBrace(int,int)",3,3,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateOnOpeningBrace(int,int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateSourceEndIfNecessary(int,int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updatedMethodDeclaration()",1,6,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.RecoveredStatement(Statement,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.toString(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updatedStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.RecoveredType(TypeDeclaration,RecoveredElement,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(AbstractMethodDeclaration,int)",3,4,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(Block,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(FieldDeclaration,int)",4,5,10
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(TypeDeclaration,int)",5,6,9
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.bodyEnd()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.bodyStartsAtHeaderEnd()",4,1,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.enclosingType()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.name()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.toString(int)",1,8,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateBodyStart(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateFromParserState()",1,6,18
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateOnClosingBrace(int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateOnOpeningBrace(int,int)",3,4,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updatedStatement()",3,1,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updatedTypeDeclaration()",8,24,39
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.RecoveredUnit(CompilationUnitDeclaration,int,Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(AbstractMethodDeclaration,int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(FieldDeclaration,int)",2,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(ImportReference,int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(TypeDeclaration,int)",4,5,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.toString(int)",1,5,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.updatedCompilationUnitDeclaration()",1,7,10
"org.eclipse.jdt.internal.compiler.parser.Scanner.Scanner()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.Scanner(boolean,boolean,boolean,long,char[][],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.atEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.checkNonExternalizedString()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.checkTaskTag(int,int)",19,15,38
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentIdentifierSource()",9,8,9
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenEndPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenSource()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenSourceString()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenStartPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineEnd(int)",5,1,5
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineEnds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineNumber(int)",7,1,7
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineStart(int)",5,1,5
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextChar()",3,11,15
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextChar(char)",6,11,18
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextChar(char,char)",8,11,20
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsDigit()",6,11,18
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsDigit(int)",6,11,18
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsJavaIdentifierPart()",6,11,18
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextToken()",108,86,211
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextUnicodeChar()",2,10,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.getRawTokenSource()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getRawTokenSourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getSource()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.isDigit(char)",3,2,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.jumpOverMethodBody()",9,62,117
"org.eclipse.jdt.internal.compiler.parser.Scanner.jumpOverUnicodeWhiteSpace()",3,8,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource1()",28,2,28
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource2()",5,1,8
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource3()",5,1,10
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource4()",5,1,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource5()",5,1,14
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource6()",5,1,16
"org.eclipse.jdt.internal.compiler.parser.Scanner.parseTags(NLSLine)",2,6,9
"org.eclipse.jdt.internal.compiler.parser.Scanner.pushLineSeparator()",6,6,14
"org.eclipse.jdt.internal.compiler.parser.Scanner.pushUnicodeLineSeparator()",1,1,5
"org.eclipse.jdt.internal.compiler.parser.Scanner.recordComment(int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.Scanner.resetTo(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanEscapeCharacter()",4,10,24
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanIdentifierOrKeyword()",141,15,328
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanNumber(boolean)",33,36,83
"org.eclipse.jdt.internal.compiler.parser.Scanner.setSource(CompilationResult)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.setSource(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.toString()",3,2,4
"org.eclipse.jdt.internal.compiler.parser.Scanner.toStringAction(int)",104,9,104
"org.eclipse.jdt.internal.compiler.parser.Scanner.unicodeInitializeBuffer(int)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.unicodeStoreAt(int)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.SourceTypeConverter(int,ProblemReporter)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.buildCompilationUnit(ISourceType[],int,ProblemReporter,CompilationResult)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(ISourceType[],CompilationResult)",3,7,8
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(InitializerElementInfo,CompilationResult)",1,3,4
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceField,TypeDeclaration,CompilationResult)",1,7,8
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceMethod,CompilationResult)",1,13,19
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceType,CompilationResult)",1,23,38
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convertAnnotations(JavaElement)",3,2,4
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.createImportReference(char[],int,int,boolean,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.createTypeParameter(char[],char[][],int,int)",1,5,5
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.createTypeReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.decodeType(char[],int,int,int)",15,14,35
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.decodeTypeArguments(char[],int,int,int)",4,2,4
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.getSource()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.parseMemberValue(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.DiagnoseParser(Parser,int,int,int,CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.DiagnoseParser(Parser,int,int,int,int[],int[],int[],CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.PrimaryRepairInfo.PrimaryRepairInfo()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.PrimaryRepairInfo.copy()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.RepairCandidate.RepairCandidate()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.StateInfo.StateInfo(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.checkPrimaryDistance(int[],int,PrimaryRepairInfo)",1,22,51
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.diagnoseParse()",6,19,31
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.errorRecovery(int,boolean)",7,4,9
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.getNtermIndex(int,int,int)",4,4,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.getTermIndex(int[],int,int,int)",4,6,13
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.isBetterSymbol(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.mergeCandidate(int,int)",4,3,4
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.misplacementRecovery(int[],int,int,SecondaryRepairInfo,boolean)",1,2,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.misspell(int,int)",3,3,36
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.parseCheck(int[],int,int,int)",15,17,28
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.primaryDiagnosis(PrimaryRepairInfo)",3,14,16
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.primaryPhase(int)",5,8,25
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reallocateStacks()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportError(int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportError(int,int,int,int,int)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportPrimaryError(int,int,int,int)",2,7,17
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportSecondaryError(int,int,int,int,int)",2,9,17
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.scopeTrial(int[],int,PrimaryRepairInfo)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.scopeTrialCheck(int[],int,PrimaryRepairInfo,int)",11,14,29
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryCheck(int[],int,int,int)",4,2,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryDiagnosis(SecondaryRepairInfo)",2,6,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryPhase(int)",3,14,32
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryRecovery(int[],int,int,SecondaryRepairInfo,boolean)",1,4,18
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.LexStream(int,Scanner,int[],int[],int[],int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.Token.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.afterEol(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.badtoken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.end(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.flags(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.getToken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.isInsideStream(int)",4,1,5
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.kind(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.line(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.name(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.next(int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.previous(int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.readTokenFromScanner()",1,4,8
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.reset(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.start(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.toString()",1,6,7
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.token(int)",5,4,7
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.RangeResult()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.addInterval(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.addInterval(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.compare(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.getRanges()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.quickSort(int[],int[],int[],int,int)",1,4,7
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.computeDietRange(TypeDeclaration[])",2,2,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.computeDietRange0(TypeDeclaration[],RangeResult)",1,11,14
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.containsErrorInSignature(AbstractMethodDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.containsIgnoredBody(AbstractMethodDeclaration)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.getPreviousInterval(int,int,int[],int[])",3,1,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.isInInterval(int,int,int[],int[])",4,1,5
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation(CompilationResult,IProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation(CompilationResult,Throwable)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation(boolean,RuntimeException)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.updateContext(ASTNode,CompilationResult)",3,2,4
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.updateContext(InvocationSite,CompilationResult)",3,2,4
"org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit.AbortCompilationUnit(CompilationResult,IProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortMethod.AbortMethod(CompilationResult,IProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortType.AbortType(CompilationResult,IProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.DefaultProblem(char[],String,int,String[],int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.errorReportSource(char[])",6,4,18
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getID()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getMessage()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getOriginatingFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceLineNumber()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceStart()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.isError()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.isWarning()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setOriginatingFileName(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setSourceEnd(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setSourceLineNumber(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setSourceStart(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.toString()",1,1,4
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.DefaultProblemFactory()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.DefaultProblemFactory(Locale)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.createProblem(char[],int,String[],String[],int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.getLocale()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.getLocalizedMessage(int,String[])",7,7,12
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.keyFromID(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.loadMessageTemplates(Locale)",1,3,5
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.localizedMessage(IProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.ProblemHandler(IErrorHandlingPolicy,CompilerOptions,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.computeSeverity(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.createProblem(char[],int,String[],String[],int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.handle(int,String[],String[],int,int,ReferenceContext,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.handle(int,String[],String[],int,int,int,ReferenceContext,CompilationResult)",6,6,10
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.record(IProblem,CompilationResult,ReferenceContext)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.searchLineNumber(int[],int)",7,1,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.ProblemReporter(IErrorHandlingPolicy,CompilerOptions,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abortDueToInternalError(String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abortDueToInternalError(String,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodCannotBeOverridden(SourceTypeBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodInAbstractClass(SourceTypeBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodMustBeImplemented(SourceTypeBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodNeedingNoBody(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.alreadyDefinedLabel(char[],ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationCannotOverrideMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationCircularity(TypeBinding,TypeBinding,TypeReference)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationFieldNeedConstantInitialization(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationMembersCannotHaveParameters(AnnotationMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationMembersCannotHaveTypeParameters(AnnotationMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeDeclarationCannotHaveConstructor(ConstructorDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeDeclarationCannotHaveSuperclass(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeDeclarationCannotHaveSuperinterfaces(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationValueMustBeClassLiteral(TypeBinding,char[],Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationValueMustBeConstant(TypeBinding,char[],Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.anonymousClassCannotExtendFinalClass(Expression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.argumentTypeCannotBeVoid(SourceTypeBinding,AbstractMethodDeclaration,Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.argumentTypeCannotBeVoidArray(SourceTypeBinding,AbstractMethodDeclaration,Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.arrayConstantsOnlyInArrayInitializers(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.assignmentHasNoEffect(Assignment,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.attemptToReturnNonVoidExpression(ReturnStatement,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.attemptToReturnVoidValue(ReturnStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.boundHasConflictingArguments(ASTNode,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.boundsMustBeAnInterface(ASTNode,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.bytecodeExceeds64KLimit(AbstractMethodDeclaration)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.bytecodeExceeds64KLimit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAllocateVoidArray(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAssignToFinalField(FieldBinding,ASTNode)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAssignToFinalLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAssignToFinalOuterLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotDeclareLocalInterface(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotDefineDimensionsAndInitializer(ArrayAllocationExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotDireclyInvokeAbstractMethod(MessageSend,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotExtendEnum(SourceTypeBinding,TypeReference,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotImportPackage(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotInstantiate(TypeReference,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotInvokeSuperConstructorInEnum(ExplicitConstructorCall,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotReferToNonFinalOuterLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotReturnInInitializer(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotThrowNull(ThrowStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotThrowType(SourceTypeBinding,AbstractMethodDeclaration,TypeReference,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotUseQualifiedEnumConstantInCaseLabel(QualifiedNameReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotUseSuperInCodeSnippet(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotUseSuperInJavaLangObject(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.caseExpressionMustBeConstant(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.classExtendFinalClass(SourceTypeBinding,TypeReference,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.codeSnippetMissingClass(String,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.codeSnippetMissingMethod(String,String,String,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.computeSeverity(int)",48,44,53
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.conditionalArgumentsIncompatibleTypes(ConditionalExpression,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.conflictingImport(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.constantOutOfFormat(NumberLiteral)",4,3,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.constantOutOfRange(Literal,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.corruptedSignature(TypeBinding,char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedField(FieldBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedMethod(MethodBinding,ASTNode)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedType(TypeBinding,ASTNode)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.disallowedTargetForAnnotation(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateAnnotation(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateAnnotationValue(TypeBinding,MemberValuePair)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateCase(CaseStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateDefaultCase(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateEnumSpecialMethod(SourceTypeBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateFieldInType(SourceTypeBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateImport(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateInitializationOfBlankFinalField(FieldBinding,Reference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateInitializationOfFinalLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateMethodInType(SourceTypeBinding,AbstractMethodDeclaration)",4,3,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForField(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForMethod(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForVariable(LocalDeclaration,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateNestedType(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateSuperinterface(SourceTypeBinding,TypeDeclaration,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateTargetInTargetAnnotation(TypeBinding,NameReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateTypeParameterInType(TypeParameter)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateTypes(CompilationUnitDeclaration,TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.emptyControlFlowStatement(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.enumAbstractMethodMustBeImplemented(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.errorNoMethodFor(MessageSend,TypeBinding,TypeBinding[])",1,3,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.errorThisSuperInStatic(ASTNode)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.expressionShouldBeAVariable(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.fieldHiding(FieldDeclaration,Binding)",3,10,12
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.fieldLocation(FieldBinding,ASTNode)",5,1,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.fieldsOrThisBeforeConstructorInvocation(ThisReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.finalMethodCannotBeOverridden(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.finalVariableBound(TypeVariableBinding,TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.finallyMustCompleteNormally(Block)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forbiddenReference(TypeBinding,ASTNode,String)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forwardReference(Reference,int,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forwardTypeVariableReference(ASTNode,TypeVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.genericTypeCannotExtendThrowable(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],String[],int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],String[],int,int,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],String[],int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hiddenCatchBlock(ReferenceBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hidingEnclosingType(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hierarchyCircularity(SourceTypeBinding,ReferenceBinding,TypeReference)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hierarchyHasProblems(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalAbstractModifierCombinationForMethod(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalClassLiteralForTypeVariable(TypeVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalExtendedDimensions(AnnotationMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalExtendedDimensions(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalGenericArray(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalInstanceOfGenericType(TypeBinding,ASTNode)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierCombinationFinalAbstractForClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierCombinationFinalVolatileForField(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationField(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationMember(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationMemberType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForEnum(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForEnumConstant(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForField(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForInterface(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForInterfaceField(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForInterfaceMethod(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForLocalClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForLocalEnum(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMemberClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMemberEnum(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMemberInterface(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMethod(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForVariable(LocalDeclaration,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalPrimitiveOrArrayTypeForEnclosingInstance(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalStaticModifierForMemberType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalUsageOfQualifiedTypeReference(QualifiedTypeReference)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVararg(Argument,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierCombinationForField(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierCombinationForMemberType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierCombinationForMethod(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierForInterfaceMemberType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVoidExpression(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.importProblem(ImportReference,Binding)",3,3,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incompatibleExceptionInThrowsClause(SourceTypeBinding,MethodBinding,MethodBinding,ReferenceBinding)",1,3,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incompatibleReturnType(MethodBinding,MethodBinding)",1,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectArityForParameterizedType(ASTNode,TypeBinding,TypeBinding[])",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectLocationForEmptyDimension(ArrayAllocationExpression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectSwitchType(Expression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.indirectAccessToStaticField(ASTNode,FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.indirectAccessToStaticMethod(ASTNode,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.indirectAccessToStaticType(ASTNode,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodReducesVisibility(SourceTypeBinding,MethodBinding,MethodBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodsHaveIncompatibleReturnTypes(SourceTypeBinding,MethodBinding[],int)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodsHaveNameClash(SourceTypeBinding,MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.initializerMustCompleteNormally(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.innerTypesCannotDeclareStaticInitializers(ReferenceBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.interfaceCannotHaveConstructors(ConstructorDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.interfaceCannotHaveInitializers(SourceTypeBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidAnnotationMemberType(MethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidBreak(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidConstructor(Statement,MethodBinding)",2,5,21
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidContinue(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidEnclosingType(Expression,TypeBinding,ReferenceBinding)",2,3,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidExplicitConstructorCall(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidExpressionAsStatement(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidField(FieldReference,TypeBinding)",2,2,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidField(NameReference,FieldBinding)",2,2,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidField(QualifiedNameReference,FieldBinding,int,TypeBinding)",3,3,10
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidFileNameForPackageAnnotations(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidMethod(MessageSend,MethodBinding)",3,5,17
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidNullToSynchronize(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidOperator(BinaryExpression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidOperator(CompoundAssignment,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidOperator(UnaryExpression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidParameterizedExceptionType(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidParenthesizedExpression(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidType(ASTNode,TypeBinding)",2,2,19
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeForCollection(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeReference(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeToSynchronize(Expression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeVariableAsException(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUnaryExpression(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfAnnotation(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfAnnotationDeclarations(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfEnumDeclarations(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfForeachStatements(LocalDeclaration,Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfStaticImports(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfTypeArguments(TypeReference,TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfTypeParameters(TypeParameter,TypeParameter)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfVarargs(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isClassPathCorrect(char[][],CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isIdentifier(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isKeyword(int)",3,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isLiteral(int)",3,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocAmbiguousMethodReference(int,int,Binding,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedField(FieldBinding,ASTNode,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedMethod(MethodBinding,ASTNode,int)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedType(TypeBinding,ASTNode,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedParamTag(char[],int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedReturnTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedThrowsClassName(TypeReference,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocEmptyReturnTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocErrorNoMethodFor(MessageSend,TypeBinding,TypeBinding[],int)",1,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidConstructor(Statement,MethodBinding,int)",3,2,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidField(int,int,Binding,TypeBinding,int)",2,3,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidMethod(MessageSend,MethodBinding,int)",5,4,10
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidParamTagName(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidParamTypeParameter(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidSeeReferenceArgs(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidSeeUrlReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidThrowsClass(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidThrowsClassName(TypeReference,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidType(ASTNode,TypeBinding,int)",2,3,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidValueReference(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMalformedSeeReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissing(int,int,int)",1,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingHashCharacter(int,int,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingParamName(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingParamTag(char[],int,int,int)",1,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingReference(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingReturnTag(int,int,int)",1,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingThrowsClassName(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingThrowsTag(TypeReference,int)",1,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUndeclaredParamTagName(char[],int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUnexpectedTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUnexpectedText(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUnterminatedInlineTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocVisibility(int,int)",6,2,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocVisibilityArgument(int,int)",2,2,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableCanOnlyBeNull(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableCannotBeNull(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableHiding(LocalDeclaration,Binding,boolean)",4,3,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodMustOverride(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNameClash(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNeedBody(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNeedingNoBody(MethodDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodWithConstructorName(MethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingReturnType(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingSemiColon(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingSerialVersion(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingValueForAnnotationMember(Annotation,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.mustDefineDimensionsOrInitializer(ArrayAllocationExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.mustSpecifyPackage(CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.mustUseAStaticMethod(MessageSend,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nativeMethodsCannotBeStrictfp(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.needImplementation()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.needToEmulateFieldAccess(FieldBinding,ASTNode,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.needToEmulateMethodAccess(MethodBinding,ASTNode)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nestedClassCannotDeclareInterface(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceForArgument(LocalVariableBinding,ASTNode)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceForConstant(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceForLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceInConstantPool(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noSuchEnclosingInstance(TypeBinding,ASTNode,boolean)",1,6,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonExternalizedStringLiteral(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonGenericTypeCannotBeParameterized(ASTNode,TypeBinding,TypeBinding[])",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonStaticAccessToStaticField(ASTNode,FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonStaticAccessToStaticMethod(ASTNode,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notCompatibleTypesError(EqualExpression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notCompatibleTypesError(InstanceOfExpression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notCompatibleTypesErrorInForeach(Expression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.objectCannotBeGeneric(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.objectCannotHaveSuperTypes(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.objectMustBeClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.operatorOnlyValidOnNumericType(CompoundAssignment,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.overridesDeprecatedMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.overridesPackageDefaultMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.packageCollidesWithType(CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.packageIsNotExpectedPackage(CompilationUnitDeclaration)",1,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parameterBoundAsString(TypeVariableBinding,boolean)",1,7,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parameterizedMemberTypeMissingArguments(ASTNode,TypeBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseError(int,int,int,char[],String,String[])",4,7,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorDeleteToken(int,int,int,char[],String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorDeleteTokens(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertAfterToken(int,int,int,char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertBeforeToken(int,int,int,char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertToComplete(int,int,String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertToCompletePhrase(int,int,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertToCompleteScope(int,int,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInvalidToken(int,int,int,char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorMergeTokens(int,int,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorMisplacedConstruct(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorNoSuggestion(int,int,int,char[],String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorNoSuggestionForTokens(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorReplaceToken(int,int,int,char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorReplaceTokens(int,int,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorUnexpectedEnd(int,int)",1,4,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.possibleAccidentalBooleanAssignment(Assignment)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.publicClassMustMatchFileName(CompilationUnitDeclaration,TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.rawMemberTypeCannotBeParameterized(ASTNode,ReferenceBinding,TypeBinding[])",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.recursiveConstructorInvocation(ExplicitConstructorCall)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.redefineArgument(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.redefineLocal(LocalDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.referenceMustBeArrayTypeAt(TypeBinding,ArrayReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.returnTypeCannotBeVoidArray(SourceTypeBinding,MethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.scannerError(Parser,String)",9,11,16
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.shouldReturn(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.signalNoImplicitStringConversionForCharArrayExpression(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticAndInstanceConflict(MethodBinding,MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticFieldAccessToNonStaticVariable(ASTNode,FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticInheritedMethodConflicts(SourceTypeBinding,MethodBinding,MethodBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticMemberOfParameterizedType(ASTNode,ReferenceBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.stringConstantIsExceedingUtf8Limit(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superTypeCannotUseWildcard(SourceTypeBinding,TypeReference,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superclassMustBeAClass(SourceTypeBinding,TypeReference,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superfluousSemicolon(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superinterfaceMustBeAnInterface(SourceTypeBinding,TypeReference,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superinterfacesCollide(ReferenceBinding,TypeDeclaration,ReferenceBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.syntaxError(int,int,int,int,char[],String,String)",1,3,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.task(String,String,String,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyDimensions(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyFields(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyMethods(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeCastError(CastExpression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeCollidesWithPackage(CompilationUnitDeclaration,TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeMismatchError(TypeBinding,TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeMismatchError(TypeBinding,TypeVariableBinding,ReferenceBinding,ASTNode)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typesAsString(boolean,TypeBinding[],boolean)",1,6,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undefinedAnnotationValue(TypeBinding,MemberValuePair)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undefinedLabel(BranchStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undefinedTypeVariableSignature(char[],ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undocumentedEmptyBlock(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unexpectedStaticModifierForField(SourceTypeBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unexpectedStaticModifierForMethod(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unhandledException(TypeBinding,ASTNode)",1,2,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.uninitializedBlankFinalField(FieldBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.uninitializedLocalVariable(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unmatchedBracket(int,ReferenceContext,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryCast(CastExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryCastForArgument(CastExpression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryElse(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryEnclosingInstanceSpecification(Expression,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryInstanceof(InstanceOfExpression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unqualifiedFieldAccess(NameReference,FieldBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unreachableCatchBlock(ReferenceBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unreachableCode(Statement)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unresolvableReference(NameReference,Binding)",1,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeCast(CastExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeRawConversion(Expression,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeRawFieldAssignment(FieldBinding,TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeRawInvocation(ASTNode,MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeReturnTypeOverride(MethodBinding,MethodBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedArgument(LocalDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedDeclaredThrownException(ReferenceBinding,AbstractMethodDeclaration,ASTNode)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedImport(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedLocalVariable(LocalDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateConstructor(ConstructorDeclaration)",3,1,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateField(FieldDeclaration)",4,8,11
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateMethod(AbstractMethodDeclaration)",6,17,22
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateType(TypeDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.useAssertAsAnIdentifier(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.useEnumAsAnIdentifier(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.varargsArgumentNeedCast(MethodBinding,TypeBinding,InvocationSite)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.variableTypeCannotBeVoid(AbstractVariableDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.variableTypeCannotBeVoidArray(AbstractVariableDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.visibilityConflict(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wildcardAssignment(TypeBinding,TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wildcardInvocation(ASTNode,TypeBinding,MethodBinding,TypeBinding[])",3,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wrongSequenceOfExceptionTypesError(TryStatement,TypeBinding,int,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement.ShouldNotImplement(String)",1,1,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.CompoundNameVector()",1,1,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.add(char[][])",1,2,2
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.addAll(char[][][])",1,2,2
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.contains(char[][])",3,2,3
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.elementAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.remove(char[][])",3,3,3
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.removeAll()",1,1,2
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.util.FloatUtil.convertHexFloatingPointLiteralToBits(char[])",14,12,47
"org.eclipse.jdt.internal.compiler.util.FloatUtil.valueOfHexDoubleLiteral(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.FloatUtil.valueOfHexFloatLiteral(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.HashtableOfInt()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.HashtableOfInt(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.containsKey(int)",3,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.get(int)",3,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.put(int,Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.HashtableOfIntValues()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.HashtableOfIntValues(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.containsKey(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.get(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.put(char[],int)",3,4,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.removeKey(char[])",3,4,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.toString()",1,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.HashtableOfLong()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.HashtableOfLong(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.containsKey(long)",3,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.get(long)",3,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.put(long,Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.HashtableOfObject()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.HashtableOfObject(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.containsKey(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.get(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.put(char[],Object)",3,4,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.removeKey(char[])",3,4,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.HashtableOfObjectToInt()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.HashtableOfObjectToInt(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.containsKey(Object)",3,2,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Object)",3,2,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.put(Object,int)",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.removeKey(Object)",3,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.toString()",1,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.HashtableOfPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.HashtableOfPackage(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.containsKey(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.get(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.put(char[],PackageBinding)",3,4,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.HashtableOfType()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.HashtableOfType(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.containsKey(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.get(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.put(char[],ReferenceBinding)",3,4,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.rehash()",1,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.ObjectVector()",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.add(Object)",1,2,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.addAll(ObjectVector)",1,2,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.addAll(Object[])",1,2,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.contains(Object)",3,2,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.containsIdentical(Object)",3,1,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.copyInto(Object[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.copyInto(Object[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.elementAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.find(Object)",3,2,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.remove(Object)",3,3,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.removeAll()",1,1,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.SimpleLookupTable()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.SimpleLookupTable(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.containsKey(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.keyForValue(Object)",4,3,4
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Object,Object)",3,3,5
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Object)",3,4,6
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeValue(Object)",1,4,8
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.SimpleNameVector()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.add(char[])",1,2,2
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.addAll(char[][])",1,2,2
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.contains(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.copyInto(Object[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.elementAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.remove(char[])",3,3,3
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.removeAll()",1,1,2
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.util.Util.bind(String)",1,1,1
"org.eclipse.jdt.internal.compiler.util.Util.bind(String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.util.Util.bind(String,String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.util.Util.bind(String,String[])",2,1,3
"org.eclipse.jdt.internal.compiler.util.Util.bindMessage(String,String[])",6,8,12
"org.eclipse.jdt.internal.compiler.util.Util.bytesToChar(byte[],String)",1,1,1
"org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(File)",1,2,3
"org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(File,String)",1,2,3
"org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsByteArray(InputStream,int)",1,6,8
"org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(InputStream,int,String)",1,9,16
"org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(ZipEntry,ZipFile)",1,2,3
"org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(String)",7,5,10
"org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(String)",4,3,6
"org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(char[])",4,1,6
"org.eclipse.jdt.internal.compiler.util.Util.isExcluded(char[],char[][],char[][],boolean)",8,9,16
"org.eclipse.jdt.internal.compiler.util.Util.isJavaFileName(String)",4,3,6
"org.eclipse.jdt.internal.compiler.util.Util.isJavaFileName(char[])",4,1,6
"org.eclipse.jdt.internal.compiler.util.Util.relocalize()",1,2,2
"org.eclipse.jdt.internal.compiler.util.Util.toBoolean(boolean)",2,1,2
"org.eclipse.jdt.internal.compiler.util.Util.toString(Object[])",2,1,2
"org.eclipse.jdt.internal.compiler.util.Util.toString(Object[],Displayable)",2,3,4
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference.HashableWeakReference(Object,ReferenceQueue)",1,1,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference.equals(Object)",3,1,3
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference.toString()",2,1,2
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.WeakHashSet()",1,1,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.WeakHashSet(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.add(Object)",3,3,4
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.addValue(HashableWeakReference)",4,3,5
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.cleanupGarbageCollectedValues()",4,1,6
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.contains(Object)",1,1,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.get(Object)",3,2,3
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.remove(Object)",3,3,3
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.toString()",1,4,4
"org.eclipse.jdt.internal.core.Assert.Assert()",1,1,1
"org.eclipse.jdt.internal.core.Assert.AssertionFailedException.AssertionFailedException(String)",1,1,1
"org.eclipse.jdt.internal.core.Assert.isLegal(boolean)",1,1,1
"org.eclipse.jdt.internal.core.Assert.isLegal(boolean,String)",2,1,2
"org.eclipse.jdt.internal.core.Assert.isNotNull(Object)",1,1,1
"org.eclipse.jdt.internal.core.Assert.isNotNull(Object,String)",2,1,2
"org.eclipse.jdt.internal.core.Assert.isTrue(boolean)",1,1,1
"org.eclipse.jdt.internal.core.Assert.isTrue(boolean,String)",2,1,2
"org.eclipse.jdt.internal.core.BasicCompilationUnit.BasicCompilationUnit(char[],char[][],String)",1,4,4
"org.eclipse.jdt.internal.core.BasicCompilationUnit.BasicCompilationUnit(char[],char[][],String,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.BasicCompilationUnit(char[],char[][],String,String)",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getContents()",2,1,3
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.initEncoding(IJavaElement)",2,6,7
"org.eclipse.jdt.internal.core.BasicCompilationUnit.toString()",1,1,1
"org.eclipse.jdt.internal.core.BatchOperation.BatchOperation(IWorkspaceRunnable)",1,1,1
"org.eclipse.jdt.internal.core.BatchOperation.executeOperation()",4,4,5
"org.eclipse.jdt.internal.core.BatchOperation.verify()",1,1,1
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.BecomeWorkingCopyOperation(CompilationUnit,IProblemRequestor)",1,1,1
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.executeOperation()",1,3,3
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.BinaryField(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.BinaryField.getConstant()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getTypeSignature()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.toStringInfo(int,StringBuffer,Object)",1,4,4
"org.eclipse.jdt.internal.core.BinaryMember.BinaryMember(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.generateInfos(Object,HashMap,IProgressMonitor)",3,2,4
"org.eclipse.jdt.internal.core.BinaryMember.getNameRange()",2,2,2
"org.eclipse.jdt.internal.core.BinaryMember.getSourceRange()",2,2,2
"org.eclipse.jdt.internal.core.BinaryMember.isBinary()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.rename(String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.setContents(String,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.BinaryMethod(JavaElement,String,String[])",1,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.DecodeParametersNames.enterConstructor(MethodInfo)",1,1,3
"org.eclipse.jdt.internal.core.BinaryMethod.DecodeParametersNames.enterMethod(MethodInfo)",1,1,3
"org.eclipse.jdt.internal.core.BinaryMethod.DecodeParametersNames.getParametersNames()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.BinaryMethod.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getExceptionTypes()",1,6,8
"org.eclipse.jdt.internal.core.BinaryMethod.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getHandleMemento(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.BinaryMethod.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getNumberOfParameters()",1,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.getParameterNames()",1,6,9
"org.eclipse.jdt.internal.core.BinaryMethod.getParameterTypes()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getReturnType()",1,2,2
"org.eclipse.jdt.internal.core.BinaryMethod.getReturnType(IBinaryMethod)",1,2,2
"org.eclipse.jdt.internal.core.BinaryMethod.getSignature()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getTypeParameterSignatures()",2,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.getTypeParameters()",2,2,3
"org.eclipse.jdt.internal.core.BinaryMethod.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.BinaryMethod.isConstructor()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.isMainMethod()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.isSimilar(IMethod)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.readableName()",1,4,5
"org.eclipse.jdt.internal.core.BinaryMethod.toStringInfo(int,StringBuffer,Object)",1,5,5
"org.eclipse.jdt.internal.core.BinaryMethod.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.toStringName(StringBuffer,int)",1,6,7
"org.eclipse.jdt.internal.core.BinaryType.BinaryType(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,WorkingCopyOwner)",2,5,6
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.createField(String,IJavaElement,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.createInitializer(String,IJavaElement,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.createMethod(String,IJavaElement,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.createType(String,IJavaElement,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.findMethods(IMethod)",1,1,2
"org.eclipse.jdt.internal.core.BinaryType.getChildren()",2,5,5
"org.eclipse.jdt.internal.core.BinaryType.getClassFileInfo()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getDeclaringType()",7,6,11
"org.eclipse.jdt.internal.core.BinaryType.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getField(String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getFields()",2,2,2
"org.eclipse.jdt.internal.core.BinaryType.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getFullyQualifiedName()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getFullyQualifiedName(char)",2,2,2
"org.eclipse.jdt.internal.core.BinaryType.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",10,14,23
"org.eclipse.jdt.internal.core.BinaryType.getInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getInitializers()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getMethod(String,String[])",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getMethods()",2,2,2
"org.eclipse.jdt.internal.core.BinaryType.getPackageFragment()",3,3,3
"org.eclipse.jdt.internal.core.BinaryType.getSuperInterfaceNames()",2,1,4
"org.eclipse.jdt.internal.core.BinaryType.getSuperInterfaceTypeSignatures()",2,2,4
"org.eclipse.jdt.internal.core.BinaryType.getSuperclassName()",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.getSuperclassTypeSignature()",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.getType(String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameterNames()",1,2,2
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameterSignatures()",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameters()",2,2,3
"org.eclipse.jdt.internal.core.BinaryType.getTypeQualifiedName()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getTypeQualifiedName(char)",3,3,3
"org.eclipse.jdt.internal.core.BinaryType.getTypes()",2,2,2
"org.eclipse.jdt.internal.core.BinaryType.isAnnotation()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isClass()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isEnum()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isInterface()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isLocal()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isMember()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.loadTypeHierachy(InputStream,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.loadTypeHierachy(InputStream,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(ICompilationUnit[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(IWorkingCopy[],IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(ICompilationUnit[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IJavaProject,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IJavaProject,WorkingCopyOwner,IProgressMonitor)",2,5,6
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IWorkingCopy[],IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.resolveType(String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.resolveType(String,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.sourceFileName(IBinaryType)",6,7,8
"org.eclipse.jdt.internal.core.BinaryType.toStringInfo(int,StringBuffer,Object)",1,5,5
"org.eclipse.jdt.internal.core.BinaryType.toStringName(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.BinaryTypeConverter.buildTypeDeclaration(IType,CompilationUnitDeclaration,CompilationResult)",1,2,3
"org.eclipse.jdt.internal.core.BinaryTypeConverter.convert(IField,IType)",1,1,1
"org.eclipse.jdt.internal.core.BinaryTypeConverter.convert(IMethod,IType,CompilationResult)",1,5,10
"org.eclipse.jdt.internal.core.BinaryTypeConverter.convert(IType,IType,TypeDeclaration,CompilationResult)",3,12,22
"org.eclipse.jdt.internal.core.BinaryTypeConverter.createTypeReference(char[])",5,4,8
"org.eclipse.jdt.internal.core.Buffer.Buffer(IFile,IOpenable,boolean)",1,2,2
"org.eclipse.jdt.internal.core.Buffer.addBufferChangedListener(IBufferChangedListener)",1,2,3
"org.eclipse.jdt.internal.core.Buffer.append(String)",2,1,2
"org.eclipse.jdt.internal.core.Buffer.append(char[])",4,2,5
"org.eclipse.jdt.internal.core.Buffer.close()",2,1,2
"org.eclipse.jdt.internal.core.Buffer.getChar(int)",3,1,3
"org.eclipse.jdt.internal.core.Buffer.getCharacters()",3,1,3
"org.eclipse.jdt.internal.core.Buffer.getContents()",2,1,2
"org.eclipse.jdt.internal.core.Buffer.getLength()",2,1,2
"org.eclipse.jdt.internal.core.Buffer.getOwner()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.getText(int,int)",4,1,4
"org.eclipse.jdt.internal.core.Buffer.getUnderlyingResource()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.hasUnsavedChanges()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.isClosed()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.moveAndResizeGap(int,int)",2,5,5
"org.eclipse.jdt.internal.core.Buffer.notifyChanged(BufferChangedEvent)",1,3,3
"org.eclipse.jdt.internal.core.Buffer.removeBufferChangedListener(IBufferChangedListener)",1,2,3
"org.eclipse.jdt.internal.core.Buffer.replace(int,int,String)",1,2,2
"org.eclipse.jdt.internal.core.Buffer.replace(int,int,char[])",3,5,8
"org.eclipse.jdt.internal.core.Buffer.save(IProgressMonitor,boolean)",4,4,11
"org.eclipse.jdt.internal.core.Buffer.setContents(String)",1,1,1
"org.eclipse.jdt.internal.core.Buffer.setContents(char[])",4,2,5
"org.eclipse.jdt.internal.core.Buffer.setReadOnly(boolean)",1,1,2
"org.eclipse.jdt.internal.core.Buffer.toString()",2,5,8
"org.eclipse.jdt.internal.core.BufferCache.BufferCache(int)",1,1,1
"org.eclipse.jdt.internal.core.BufferCache.BufferCache(int,int)",1,1,1
"org.eclipse.jdt.internal.core.BufferCache.close(LRUCacheEntry)",2,2,2
"org.eclipse.jdt.internal.core.BufferCache.newInstance(int,int)",1,1,1
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.BufferFactoryWrapper(IBufferFactory)",1,1,1
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.create(IBufferFactory)",1,1,1
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.createBuffer(ICompilationUnit)",2,2,2
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.equals(Object)",3,1,3
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.hashCode()",2,1,2
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.toString()",1,1,1
"org.eclipse.jdt.internal.core.BufferManager.addBuffer(IBuffer)",1,3,3
"org.eclipse.jdt.internal.core.BufferManager.createBuffer(IOpenable)",1,1,2
"org.eclipse.jdt.internal.core.BufferManager.getBuffer(IOpenable)",1,1,1
"org.eclipse.jdt.internal.core.BufferManager.getDefaultBufferFactory()",1,1,1
"org.eclipse.jdt.internal.core.BufferManager.getDefaultBufferManager()",1,1,2
"org.eclipse.jdt.internal.core.BufferManager.getOpenBuffers()",1,1,1
"org.eclipse.jdt.internal.core.BufferManager.removeBuffer(IBuffer)",1,3,3
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.CancelableNameEnvironment(JavaProject,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.checkCanceled()",2,4,4
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findPackages(char[],ISearchRequestor)",1,1,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findType(char[],char[][])",1,1,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findType(char[][])",1,1,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findTypes(char[],ISearchRequestor)",1,1,1
"org.eclipse.jdt.internal.core.CancelableProblemFactory.CancelableProblemFactory(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CancelableProblemFactory.createProblem(char[],int,String[],String[],int,int,int,int)",2,2,3
"org.eclipse.jdt.internal.core.ClassFile.ClassFile(PackageFragment,String)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",4,5,5
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,CompletionRequestor,WorkingCopyOwner)",1,2,2
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,ICodeCompletionRequestor)",3,2,4
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.ClassFile.codeSelect(int,int)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeSelect(int,int,WorkingCopyOwner)",2,3,3
"org.eclipse.jdt.internal.core.ClassFile.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.ClassFile.exists()",1,2,2
"org.eclipse.jdt.internal.core.ClassFile.findElement(IJavaElement,int,SourceMapper)",5,5,8
"org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(IFile)",4,6,10
"org.eclipse.jdt.internal.core.ClassFile.getBuffer()",2,2,2
"org.eclipse.jdt.internal.core.ClassFile.getClassFile()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getCorrespondingResource()",2,2,2
"org.eclipse.jdt.internal.core.ClassFile.getElementAt(int)",2,3,3
"org.eclipse.jdt.internal.core.ClassFile.getElementAtConsideringSibling(int)",6,8,12
"org.eclipse.jdt.internal.core.ClassFile.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,2,2
"org.eclipse.jdt.internal.core.ClassFile.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getPath()",2,2,2
"org.eclipse.jdt.internal.core.ClassFile.getResource()",2,2,2
"org.eclipse.jdt.internal.core.ClassFile.getSource()",2,1,2
"org.eclipse.jdt.internal.core.ClassFile.getSourceRange()",3,2,3
"org.eclipse.jdt.internal.core.ClassFile.getTopLevelTypeName()",1,2,2
"org.eclipse.jdt.internal.core.ClassFile.getType()",1,3,3
"org.eclipse.jdt.internal.core.ClassFile.getWorkingCopy(IProgressMonitor,IBufferFactory)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getWorkingCopy(WorkingCopyOwner,IProgressMonitor)",2,5,6
"org.eclipse.jdt.internal.core.ClassFile.hasBuffer()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.isClass()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.isInterface()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.mapSource(SourceMapper)",3,3,4
"org.eclipse.jdt.internal.core.ClassFile.openBuffer(IProgressMonitor,Object)",13,13,17
"org.eclipse.jdt.internal.core.ClassFile.simpleName(char[])",3,2,3
"org.eclipse.jdt.internal.core.ClassFile.translatedName(char[])",2,1,4
"org.eclipse.jdt.internal.core.ClassFile.translatedNames(char[][])",2,2,3
"org.eclipse.jdt.internal.core.ClassFile.unqualifiedName(char[])",4,3,4
"org.eclipse.jdt.internal.core.ClassFile.validateClassFile()",2,2,3
"org.eclipse.jdt.internal.core.ClassFileInfo.ClassFileInfo(ClassFile)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileInfo.generateFieldInfos(IType,IBinaryType,HashMap,ArrayList)",2,2,3
"org.eclipse.jdt.internal.core.ClassFileInfo.generateInnerClassHandles(IType,IBinaryType,ArrayList)",1,3,3
"org.eclipse.jdt.internal.core.ClassFileInfo.generateMethodInfos(IType,IBinaryType,HashMap,ArrayList,ArrayList)",2,6,9
"org.eclipse.jdt.internal.core.ClassFileInfo.generateTypeParameterInfos(BinaryMember,char[],HashMap,ArrayList)",2,3,5
"org.eclipse.jdt.internal.core.ClassFileInfo.getBinaryChildren(HashMap)",1,2,2
"org.eclipse.jdt.internal.core.ClassFileInfo.hasReadBinaryChildren()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileInfo.readBinaryChildren(HashMap,IBinaryType)",1,5,6
"org.eclipse.jdt.internal.core.ClassFileInfo.removeBinaryChildren()",1,6,6
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.becomeWorkingCopy(IProblemRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.close()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,CompletionRequestor,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,ICodeCompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,ICompletionRequestor,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeSelect(int,int)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeSelect(int,int,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.commit(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.commitWorkingCopy(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.createImport(String,IJavaElement,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.createImport(String,IJavaElement,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.createPackageDeclaration(String,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.createType(String,IJavaElement,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.delete(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.destroy()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.discardWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.exists()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.findElements(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.findPrimaryType()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.findSharedWorkingCopy(IBufferFactory)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.findWorkingCopy(WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getAdapter(Class)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getAllTypes()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getAncestor(int)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getBuffer()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getCorrespondingResource()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getElementAt(int)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getHandleIdentifier()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getImport(String)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getImportContainer()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getImports()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getJavaModel()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getJavaProject()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getOpenable()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getOriginal(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getOriginalElement()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getOwner()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPackageDeclaration(String)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPackageDeclarations()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getParent()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPath()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPrimary()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPrimaryElement()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getResource()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getSchedulingRule()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getSharedWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getSource()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getType(String)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getTypes()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getUnderlyingResource()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getWorkingCopy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getWorkingCopy(WorkingCopyOwner,IProblemRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.hasChildren()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.hasResourceChanged()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.hasUnsavedChanges()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isBasedOn(IResource)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isConsistent()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isOpen()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.makeConsistent(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.open(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.reconcile()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.reconcile(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.reconcile(int,boolean,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.rename(String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.restore()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.save(IProgressMonitor,boolean)",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.ClasspathEntry(int,int,IPath,IPath[],IPath[],IPath,IPath,IPath,boolean)",1,1,4
"org.eclipse.jdt.internal.core.ClasspathEntry.combineWith(IClasspathEntry)",3,5,6
"org.eclipse.jdt.internal.core.ClasspathEntry.concatPatterns(IPath[],IPath[])",3,1,3
"org.eclipse.jdt.internal.core.ClasspathEntry.decodePatterns(Element,String)",3,2,4
"org.eclipse.jdt.internal.core.ClasspathEntry.elementDecode(Element,IJavaProject)",10,19,23
"org.eclipse.jdt.internal.core.ClasspathEntry.elementEncode(XMLWriter,IPath,boolean,boolean)",1,14,15
"org.eclipse.jdt.internal.core.ClasspathEntry.encodePatterns(IPath[],String,Map)",1,4,5
"org.eclipse.jdt.internal.core.ClasspathEntry.equalPatterns(IPath[],IPath[])",6,3,7
"org.eclipse.jdt.internal.core.ClasspathEntry.equals(Object)",18,5,18
"org.eclipse.jdt.internal.core.ClasspathEntry.fullExclusionPatternChars()",1,3,3
"org.eclipse.jdt.internal.core.ClasspathEntry.fullInclusionPatternChars()",1,3,3
"org.eclipse.jdt.internal.core.ClasspathEntry.getAccessRestrictionPatterns(IPath[])",3,2,4
"org.eclipse.jdt.internal.core.ClasspathEntry.getContentKind()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getEntryKind()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getExclusionPatterns()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getImportRestriction()",1,4,6
"org.eclipse.jdt.internal.core.ClasspathEntry.getInclusionPatterns()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getOutputLocation()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getPath()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getResolvedEntry()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getSourceAttachmentPath()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getSourceAttachmentRootPath()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.isExported()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.kindFromString(String)",7,1,7
"org.eclipse.jdt.internal.core.ClasspathEntry.kindToString(int)",8,2,8
"org.eclipse.jdt.internal.core.ClasspathEntry.rootID()",2,2,8
"org.eclipse.jdt.internal.core.ClasspathEntry.toString()",3,12,20
"org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspath(IJavaProject,IClasspathEntry[],IPath)",47,55,73
"org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(IJavaProject,IClasspathEntry,boolean,boolean)",35,60,75
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.CommitWorkingCopyOperation(ICompilationUnit,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation()",6,16,24
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.getSchedulingRule()",2,2,2
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.verify()",3,2,4
"org.eclipse.jdt.internal.core.CompilationUnit.CompilationUnit(PackageFragment,String,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.accept(ASTVisitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.becomeWorkingCopy(IProblemRequestor,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",4,13,13
"org.eclipse.jdt.internal.core.CompilationUnit.canBeRemovedFromCache()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.canBufferBeRemovedFromCache(IBuffer)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.close()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.closing(Object)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,CompletionRequestor,WorkingCopyOwner)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,ICodeCompletionRequestor)",3,2,4
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(int,int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(int,int,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.commit(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.createImport(String,IJavaElement,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.createImport(String,IJavaElement,int,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.createPackageDeclaration(String,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.createType(String,IJavaElement,boolean,IProgressMonitor)",1,4,4
"org.eclipse.jdt.internal.core.CompilationUnit.delete(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.destroy()",1,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.discardWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.equalsDOMNode(IDOMNode)",6,5,8
"org.eclipse.jdt.internal.core.CompilationUnit.exists()",2,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.findElements(IJavaElement)",5,7,17
"org.eclipse.jdt.internal.core.CompilationUnit.findPrimaryType()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.findSharedWorkingCopy(IBufferFactory)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.findWorkingCopy(WorkingCopyOwner)",3,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.getAllTypes()",1,4,4
"org.eclipse.jdt.internal.core.CompilationUnit.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getContents()",1,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.getCorrespondingResource()",2,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.getElementAt(int)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,4,4
"org.eclipse.jdt.internal.core.CompilationUnit.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getImport(String)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getImportContainer()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getImports()",3,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getOriginal(IJavaElement)",3,2,4
"org.eclipse.jdt.internal.core.CompilationUnit.getOriginalElement()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.getOwner()",1,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.getPackageDeclaration(String)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPackageDeclarations()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPath()",2,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.getPerWorkingCopyInfo()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPrimary()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPrimaryElement(boolean)",2,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.getResource()",2,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.getSharedWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.getSource()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getType(String)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getTypes()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getUnderlyingResource()",2,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(WorkingCopyOwner,IProblemRequestor,IProgressMonitor)",3,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.hasBuffer()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.hasResourceChanged()",3,1,3
"org.eclipse.jdt.internal.core.CompilationUnit.isBasedOn(IResource)",3,1,3
"org.eclipse.jdt.internal.core.CompilationUnit.isConsistent()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isOpen()",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.isPrimary()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isSourceElement()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isWorkingCopy()",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(boolean,int,IProgressMonitor)",3,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.openBuffer(IProgressMonitor,Object)",5,10,11
"org.eclipse.jdt.internal.core.CompilationUnit.openParent(Object,HashMap,IProgressMonitor)",2,3,4
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile(int,boolean,WorkingCopyOwner,IProgressMonitor)",2,1,5
"org.eclipse.jdt.internal.core.CompilationUnit.rename(String,boolean,IProgressMonitor)",2,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.restore()",3,1,3
"org.eclipse.jdt.internal.core.CompilationUnit.save(IProgressMonitor,boolean)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.toStringInfo(int,StringBuffer,Object)",1,4,4
"org.eclipse.jdt.internal.core.CompilationUnit.updateTimeStamp(CompilationUnit)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.validateCompilationUnit(IResource)",5,3,6
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.addAnnotationPositions(IJavaElement,long[])",2,1,3
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.getSourceLength()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.isOpen()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.setSourceLength(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.CompilationUnitProblemFinder(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.accept(ISourceType[],PackageBinding,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.getHandlingPolicy()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.getRequestor()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.initializeParser()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitDeclaration,ICompilationUnit,char[],Parser,WorkingCopyOwner,IProblemRequestor,boolean,IProgressMonitor)",1,7,12
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(ICompilationUnit,char[],WorkingCopyOwner,IProblemRequestor,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.reportProblems(CompilationUnitDeclaration,IProblemRequestor,IProgressMonitor)",3,4,6
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.CompilationUnitStructureRequestor(ICompilationUnit,CompilationUnitElementInfo,Map)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptImport(int,int,char[],boolean,int)",1,3,4
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptLineSeparatorPositions(int[])",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptPackage(int,int,char[])",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptProblem(IProblem)",1,1,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.convertTypeNamesToSigs(char[][])",3,2,4
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterClass(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterConstructor(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterEnum(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterField(FieldInfo)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterInitializer(int,int)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterInterface(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterMethod(MethodInfo)",1,4,10
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterType(TypeInfo)",1,3,3
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterTypeParameter(TypeParameterInfo)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitClass(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitEnum(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitField(int,int,int)",1,7,7
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitInterface(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitMember(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitMethod(int,int,int)",1,1,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.resolveDuplicates(SourceRefElement)",1,1,2
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.CompilationUnitVisitor(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.accept(ISourceType[],PackageBinding,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.getHandlingPolicy()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.getProblemFactory(ASTVisitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.getRequestor()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.visit(ICompilationUnit,ASTVisitor)",1,4,4
"org.eclipse.jdt.internal.core.CopyElementsOperation.CopyElementsOperation(IJavaElement[],IJavaElement,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.CopyElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.computeSourceForElement(IJavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.getNestedOperation(IJavaElement)",9,9,10
"org.eclipse.jdt.internal.core.CopyElementsOperation.getSourceFor(IJavaElement)",1,2,3
"org.eclipse.jdt.internal.core.CopyElementsOperation.isRenamingMainType(IJavaElement,IJavaElement)",2,5,5
"org.eclipse.jdt.internal.core.CopyElementsOperation.processElement(IJavaElement)",2,10,11
"org.eclipse.jdt.internal.core.CopyElementsOperation.resolveRenameAnchor(IJavaElement)",3,2,3
"org.eclipse.jdt.internal.core.CopyElementsOperation.verify()",3,1,4
"org.eclipse.jdt.internal.core.CopyElementsOperation.verify(IJavaElement)",1,9,9
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.CopyPackageFragmentRootOperation(IPackageFragmentRoot,IPath,int,int,IClasspathEntry)",1,1,1
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.addEntryToClasspath(IClasspathEntry,IWorkspaceRoot)",8,9,10
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.copy(IClasspathEntry)",7,9,9
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.copyResource(IPackageFragmentRoot,IClasspathEntry,IWorkspaceRoot)",8,13,17
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.executeOperation()",1,4,4
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.verify()",11,10,17
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.CopyResourceElementsOperation(IJavaElement[],IJavaElement,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.CopyResourceElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.collectResourcesOfInterest(IPackageFragment)",2,4,9
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.createNeededPackageFragments(IContainer,PackageFragmentRoot,String[],boolean)",1,7,9
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.getDeltaFor(IJavaProject)",1,2,2
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.initializeDOMFactory()",1,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.prepareDeltas(IJavaElement,IJavaElement,boolean)",2,3,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processCompilationUnitResource(ICompilationUnit,PackageFragment)",6,14,27
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processDeltas()",1,2,2
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processElement(IJavaElement)",2,2,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processElements()",1,1,2
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processPackageFragmentResource(PackageFragment,PackageFragmentRoot,String)",22,35,43
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updatePackageStatement(IDOMCompilationUnit,String[])",3,6,7
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateReadOnlyPackageFragmentsForCopy(IContainer,IPackageFragmentRoot,String[])",1,4,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateReadOnlyPackageFragmentsForMove(IContainer,IPackageFragmentRoot,String[],boolean)",1,5,6
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateTypeName(ICompilationUnit,IDOMCompilationUnit,String,String)",1,5,6
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updatedContent(ICompilationUnit,PackageFragment,String)",4,3,5
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.verify()",3,1,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.verify(IJavaElement)",1,14,14
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.CreateCompilationUnitOperation(IPackageFragment,String,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.executeOperation()",4,10,13
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.getSchedulingRule()",2,2,2
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.verify()",4,1,4
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.CreateElementInCUOperation(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.checkCanceled()",1,2,2
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.createAfter(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.createBefore(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.executeOperation()",5,8,12
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.generateNewCompilationUnitDOM(ICompilationUnit)",3,2,4
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.generateResultHandles()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getCreatedElementCharacters()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getMainAmountOfWork()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getSchedulingRule()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.initializeDefaultPosition()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.insertDOMNode(IDOMNode,IDOMNode)",3,4,6
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.setAlteredName(String)",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.setRelativePosition(IJavaElement,int)",1,1,2
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.verify()",4,3,5
"org.eclipse.jdt.internal.core.CreateFieldOperation.CreateFieldOperation(IType,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.generateElementDOM()",5,4,7
"org.eclipse.jdt.internal.core.CreateFieldOperation.generateResultHandle()",1,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.getDOMNodeName()",1,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.initializeDefaultPosition()",1,3,6
"org.eclipse.jdt.internal.core.CreateFieldOperation.verifyNameCollision()",2,2,2
"org.eclipse.jdt.internal.core.CreateImportOperation.CreateImportOperation(String,ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.CreateImportOperation.generateElementDOM()",2,2,2
"org.eclipse.jdt.internal.core.CreateImportOperation.generateResultHandle()",1,1,1
"org.eclipse.jdt.internal.core.CreateImportOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateImportOperation.initializeDefaultPosition()",5,5,6
"org.eclipse.jdt.internal.core.CreateImportOperation.verify()",3,1,3
"org.eclipse.jdt.internal.core.CreateInitializerOperation.CreateInitializerOperation(IType,String)",1,1,1
"org.eclipse.jdt.internal.core.CreateInitializerOperation.generateElementDOM()",5,3,5
"org.eclipse.jdt.internal.core.CreateInitializerOperation.generateResultHandle()",4,5,8
"org.eclipse.jdt.internal.core.CreateInitializerOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateInitializerOperation.initializeDefaultPosition()",1,3,6
"org.eclipse.jdt.internal.core.CreateMethodOperation.CreateMethodOperation(IType,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.computeName()",1,2,2
"org.eclipse.jdt.internal.core.CreateMethodOperation.convertDOMMethodTypesToSignatures()",1,5,5
"org.eclipse.jdt.internal.core.CreateMethodOperation.generateElementDOM()",5,5,7
"org.eclipse.jdt.internal.core.CreateMethodOperation.generateResultHandle()",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.getDOMNodeName()",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.isDOMNodeNull()",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.verifyNameCollision()",3,4,4
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.CreatePackageDeclarationOperation(String,ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.generateElementDOM()",3,4,4
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.generateResultHandle()",1,1,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.initializeDefaultPosition()",3,3,4
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.verify()",3,1,3
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.CreatePackageFragmentOperation(IPackageFragmentRoot,String,boolean)",1,2,2
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.executeOperation()",1,7,7
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.verify()",7,7,10
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.CreateTypeHierarchyOperation(IRegion,IJavaProject,ICompilationUnit[],IType,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.CreateTypeHierarchyOperation(IType,ICompilationUnit[],IJavaProject,boolean)",1,2,2
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.CreateTypeHierarchyOperation(IType,ICompilationUnit[],IJavaSearchScope,boolean)",1,2,2
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.getResult()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.verify()",4,3,7
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.CreateTypeMemberOperation(IJavaElement,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.deprecatedGenerateElementDOM()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.generateNewCompilationUnitDOM(ICompilationUnit)",3,2,5
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.generateSyntaxIncorrectDOM()",1,2,2
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.getType()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.setAlteredName(String)",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.verify()",5,5,8
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.verifyNameCollision()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.CreateTypeOperation(IJavaElement,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.generateElementDOM()",5,4,7
"org.eclipse.jdt.internal.core.CreateTypeOperation.generateResultHandle()",3,3,3
"org.eclipse.jdt.internal.core.CreateTypeOperation.getDOMNodeName()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.getType()",2,1,2
"org.eclipse.jdt.internal.core.CreateTypeOperation.verifyNameCollision()",4,4,5
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner.DefaultWorkingCopyOwner()",1,1,1
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner.createBuffer(ICompilationUnit)",2,2,2
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner.toString()",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.DeleteElementsOperation(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.getSchedulingRule()",3,3,4
"org.eclipse.jdt.internal.core.DeleteElementsOperation.groupElements()",3,5,5
"org.eclipse.jdt.internal.core.DeleteElementsOperation.initDOMFactory()",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.processElement(IJavaElement)",5,7,9
"org.eclipse.jdt.internal.core.DeleteElementsOperation.processElements()",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.replaceElementInBuffer(IBuffer,IJavaElement,String)",1,2,2
"org.eclipse.jdt.internal.core.DeleteElementsOperation.verify(IJavaElement)",1,7,7
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.DeletePackageFragmentRootOperation(IPackageFragmentRoot,int,int)",1,1,1
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.deleteResource(IPackageFragmentRoot,IClasspathEntry)",4,5,7
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.executeOperation()",1,5,5
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.updateProjectClasspath(IPath,IJavaProject)",1,6,7
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.updateReferringProjectClasspaths(IPath,IJavaProject)",3,2,3
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.verify()",5,3,6
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.DeleteResourceElementsOperation(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.deletePackageFragment(IPackageFragment)",2,10,15
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.processElement(IJavaElement)",2,3,6
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.verify(IJavaElement)",1,7,9
"org.eclipse.jdt.internal.core.DeltaProcessingState.ProjectUpdateInfo.updateProjectReferencesIfNecessary()",4,9,11
"org.eclipse.jdt.internal.core.DeltaProcessingState.addElementChangedListener(IElementChangedListener,int)",3,4,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.addPreResourceChangedListener(IResourceChangeListener)",3,3,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.getDeltaProcessor()",2,1,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots()",7,10,18
"org.eclipse.jdt.internal.core.DeltaProcessingState.performClasspathResourceChange(JavaProject,IClasspathEntry[],IClasspathEntry[],IClasspathEntry[],boolean)",2,2,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.recordProjectUpdate(ProjectUpdateInfo)",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeAllProjectUpdates()",2,1,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeElementChangedListener(IElementChangedListener)",3,4,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.removePreResourceChangedListener(IResourceChangeListener)",3,4,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(IResourceChangeEvent)",1,4,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.updateRoots(IPath,IResourceDelta,DeltaProcessor)",4,8,10
"org.eclipse.jdt.internal.core.DeltaProcessor.DeltaProcessor(DeltaProcessingState,JavaModelManager)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.OutputsInfo.OutputsInfo(IPath[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.OutputsInfo.toString()",3,4,8
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.RootInfo(JavaProject,IPath,char[][],char[][],int)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.getPackageFragmentRoot(IResource)",1,4,4
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.isRootOfProject(IPath)",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.toString()",1,9,9
"org.eclipse.jdt.internal.core.DeltaProcessor.addDependentProjects(IPath,HashSet)",2,5,7
"org.eclipse.jdt.internal.core.DeltaProcessor.addForRefresh(IJavaElement)",1,1,2
"org.eclipse.jdt.internal.core.DeltaProcessor.addToParentInfo(Openable)",1,3,4
"org.eclipse.jdt.internal.core.DeltaProcessor.addToRootsToRefreshWithDependents(IJavaProject)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.checkExternalArchiveChanges(IJavaElement[],IProgressMonitor)",4,7,9
"org.eclipse.jdt.internal.core.DeltaProcessor.checkProjectsBeingAddedOrRemoved(IResourceDelta)",3,16,23
"org.eclipse.jdt.internal.core.DeltaProcessor.checkSourceAttachmentChange(IResourceDelta,IResource)",5,5,9
"org.eclipse.jdt.internal.core.DeltaProcessor.close(Openable)",1,1,2
"org.eclipse.jdt.internal.core.DeltaProcessor.contentChanged(Openable)",1,4,6
"org.eclipse.jdt.internal.core.DeltaProcessor.createElement(IResource,int,RootInfo)",7,19,29
"org.eclipse.jdt.internal.core.DeltaProcessor.createExternalArchiveDelta(IProgressMonitor)",12,27,40
"org.eclipse.jdt.internal.core.DeltaProcessor.currentDelta()",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.deleting(IProject)",1,3,5
"org.eclipse.jdt.internal.core.DeltaProcessor.elementAdded(Openable,IResourceDelta,RootInfo)",2,12,14
"org.eclipse.jdt.internal.core.DeltaProcessor.elementRemoved(Openable,IResourceDelta,RootInfo)",4,8,15
"org.eclipse.jdt.internal.core.DeltaProcessor.elementType(IResource,int,int,RootInfo)",11,8,16
"org.eclipse.jdt.internal.core.DeltaProcessor.enclosingRootInfo(IPath,int)",3,3,4
"org.eclipse.jdt.internal.core.DeltaProcessor.fire(IJavaElementDelta,int)",3,6,8
"org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(IJavaElementDelta,IElementChangedListener[],int[],int)",1,4,4
"org.eclipse.jdt.internal.core.DeltaProcessor.fireReconcileDelta(IElementChangedListener[],int[],int)",1,4,4
"org.eclipse.jdt.internal.core.DeltaProcessor.flush()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.getTimeStamp(File)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.isAffectedBy(IResourceDelta)",5,4,8
"org.eclipse.jdt.internal.core.DeltaProcessor.isPrimaryWorkingCopy(IJavaElement,int)",2,3,3
"org.eclipse.jdt.internal.core.DeltaProcessor.isResFilteredFromOutput(OutputsInfo,IResource,int)",7,7,10
"org.eclipse.jdt.internal.core.DeltaProcessor.mergeDeltas(Collection)",4,9,11
"org.eclipse.jdt.internal.core.DeltaProcessor.nonJavaResourcesChanged(Openable,IResourceDelta)",3,5,8
"org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(IJavaElementDelta,int,IElementChangedListener[],int[],int)",1,5,5
"org.eclipse.jdt.internal.core.DeltaProcessor.notifyTypeHierarchies(IElementChangedListener[],int)",3,3,4
"org.eclipse.jdt.internal.core.DeltaProcessor.otherRootsInfo(IPath,int)",2,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.outputsInfo(RootInfo,IResource)",3,7,11
"org.eclipse.jdt.internal.core.DeltaProcessor.popUntilPrefixOf(IPath)",4,8,9
"org.eclipse.jdt.internal.core.DeltaProcessor.processResourceDelta(IResourceDelta)",2,10,13
"org.eclipse.jdt.internal.core.DeltaProcessor.reconcileClasspathFileUpdate(IResourceDelta,JavaProject)",2,6,11
"org.eclipse.jdt.internal.core.DeltaProcessor.refreshPackageFragmentRoots()",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(IJavaElementDelta)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.removeFromParentInfo(Openable)",1,3,4
"org.eclipse.jdt.internal.core.DeltaProcessor.resetProjectCaches()",1,3,3
"org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(IResourceChangeEvent)",3,12,17
"org.eclipse.jdt.internal.core.DeltaProcessor.rootInfo(IPath,int)",2,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.startDeltas()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.stopDeltas()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.traverseDelta(IResourceDelta,int,RootInfo,OutputsInfo)",9,23,41
"org.eclipse.jdt.internal.core.DeltaProcessor.updateClasspathMarkers(IResourceDelta)",2,9,12
"org.eclipse.jdt.internal.core.DeltaProcessor.updateClasspathMarkers(IResourceDelta,HashSet,Map,Map)",3,11,18
"org.eclipse.jdt.internal.core.DeltaProcessor.updateCurrentDeltaAndIndex(IResourceDelta,int,RootInfo)",12,15,22
"org.eclipse.jdt.internal.core.DeltaProcessor.updateIndex(Openable,IResourceDelta)",8,16,35
"org.eclipse.jdt.internal.core.DeltaProcessor.updateJavaModel(IJavaElementDelta)",1,3,3
"org.eclipse.jdt.internal.core.DeltaProcessor.updateRootIndex(PackageFragmentRoot,String[],IResourceDelta)",1,3,3
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.DiscardWorkingCopyOperation(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.executeOperation()",1,4,4
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.ElementCache.ElementCache(int)",1,1,1
"org.eclipse.jdt.internal.core.ElementCache.ElementCache(int,int)",1,1,1
"org.eclipse.jdt.internal.core.ElementCache.close(LRUCacheEntry)",2,3,4
"org.eclipse.jdt.internal.core.ElementCache.ensureSpaceLimit(int,IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.ElementCache.newInstance(int,int)",1,1,1
"org.eclipse.jdt.internal.core.ElementCache.resetSpaceLimit(int,IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.ImportContainer.ImportContainer(CompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.ImportContainer.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",4,4,4
"org.eclipse.jdt.internal.core.ImportContainer.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getImport(String)",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getPrimaryElement(boolean)",2,2,3
"org.eclipse.jdt.internal.core.ImportContainer.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.hasChildren()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.readableName()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.toString(int,StringBuffer)",2,3,5
"org.eclipse.jdt.internal.core.ImportContainer.toStringInfo(int,StringBuffer,Object)",1,2,2
"org.eclipse.jdt.internal.core.ImportDeclaration.ImportDeclaration(ImportContainer,String)",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.ImportDeclaration.equalsDOMNode(IDOMNode)",1,2,2
"org.eclipse.jdt.internal.core.ImportDeclaration.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getHandleMemento(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.ImportDeclaration.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getPrimaryElement(boolean)",2,2,3
"org.eclipse.jdt.internal.core.ImportDeclaration.isOnDemand()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.readableName()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.toStringInfo(int,StringBuffer,Object)",1,2,2
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo.getName()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo.onDemand()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo.setOnDemand(boolean)",1,1,1
"org.eclipse.jdt.internal.core.Initializer.Initializer(JavaElement,int)",2,1,2
"org.eclipse.jdt.internal.core.Initializer.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.Initializer.equalsDOMNode(IDOMNode)",2,2,3
"org.eclipse.jdt.internal.core.Initializer.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.getHandleMemento(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.Initializer.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.getPrimaryElement(boolean)",3,3,4
"org.eclipse.jdt.internal.core.Initializer.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.readableName()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.rename(String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.Initializer.toStringInfo(int,StringBuffer,Object)",1,5,5
"org.eclipse.jdt.internal.core.InternalNamingConventions.acceptName(char[],char[],char[],boolean,boolean,INamingRequestor)",1,4,5
"org.eclipse.jdt.internal.core.InternalNamingConventions.computeBaseTypeNames(char,char[][])",4,2,5
"org.eclipse.jdt.internal.core.InternalNamingConventions.computeNames(char[])",1,6,8
"org.eclipse.jdt.internal.core.InternalNamingConventions.excludeNames(char[],char[],char[],char[][])",1,3,3
"org.eclipse.jdt.internal.core.InternalNamingConventions.getNameScanner(CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.core.InternalNamingConventions.suggestArgumentNames(IJavaProject,char[],char[],int,char[][],INamingRequestor)",1,1,1
"org.eclipse.jdt.internal.core.InternalNamingConventions.suggestFieldNames(IJavaProject,char[],char[],int,int,char[][],INamingRequestor)",1,1,3
"org.eclipse.jdt.internal.core.InternalNamingConventions.suggestLocalVariableNames(IJavaProject,char[],char[],int,char[][],INamingRequestor)",1,1,1
"org.eclipse.jdt.internal.core.InternalNamingConventions.suggestNames(char[],char[],int,char[][],char[][],char[][],Scanner,INamingRequestor)",3,17,24
"org.eclipse.jdt.internal.core.JarEntryFile.JarEntryFile(String,String)",1,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.getContents()",2,2,4
"org.eclipse.jdt.internal.core.JarEntryFile.getFullPath()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.getName()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.toString()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.JarPackageFragment(PackageFragmentRoot,String[])",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.computeChildren(OpenableElementInfo,ArrayList)",1,4,4
"org.eclipse.jdt.internal.core.JarPackageFragment.computeNonJavaResources(String[],JarPackageFragmentInfo,String)",2,6,6
"org.eclipse.jdt.internal.core.JarPackageFragment.containsJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.createCompilationUnit(String,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.generateInfos(Object,HashMap,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.JarPackageFragment.getClassFiles()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getCompilationUnits()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getCorrespondingResource()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getNonJavaResources()",2,2,2
"org.eclipse.jdt.internal.core.JarPackageFragment.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.storedNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentInfo.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.JarPackageFragmentRoot(IPath,JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.JarPackageFragmentRoot(IResource,JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.computeChildren(OpenableElementInfo,Map)",4,6,11
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.determineKind(IResource)",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.equals(Object)",3,2,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getJar()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getKind()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getPackageFragment(String[])",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getPath()",2,2,2
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getResource()",2,3,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getUnderlyingResource()",3,3,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.initPackageFragToTypes(HashtableOfArrayToObject,String,int)",3,3,4
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.isArchive()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.isExternal()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.resourceExists()",2,2,2
"org.eclipse.jdt.internal.core.JarPackageFragmentRootInfo.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.JavaElement(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.close()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.equals(Object)",3,3,4
"org.eclipse.jdt.internal.core.JavaElement.equalsDOMNode(IDOMNode)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.escapeMementoName(StringBuffer,String)",2,3,3
"org.eclipse.jdt.internal.core.JavaElement.exists()",1,1,2
"org.eclipse.jdt.internal.core.JavaElement.findNode(IDOMCompilationUnit)",4,6,13
"org.eclipse.jdt.internal.core.JavaElement.followPath(ArrayList,int,IDOMNode)",5,5,5
"org.eclipse.jdt.internal.core.JavaElement.getAncestor(int)",3,2,3
"org.eclipse.jdt.internal.core.JavaElement.getChildren()",2,2,2
"org.eclipse.jdt.internal.core.JavaElement.getChildrenOfType(int)",1,3,3
"org.eclipse.jdt.internal.core.JavaElement.getClassFile()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getElementInfo(IProgressMonitor)",2,1,2
"org.eclipse.jdt.internal.core.JavaElement.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleFromMemento(MementoTokenizer,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.JavaElement.getHandleIdentifier()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleMemento()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleMemento(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getJavaModel()",3,1,3
"org.eclipse.jdt.internal.core.JavaElement.getJavaProject()",3,1,3
"org.eclipse.jdt.internal.core.JavaElement.getOpenable()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getOpenableParent()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getParent()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getPrimaryElement()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getPrimaryElement(boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getSchedulingRule()",4,5,5
"org.eclipse.jdt.internal.core.JavaElement.getSourceElementAt(int)",9,11,13
"org.eclipse.jdt.internal.core.JavaElement.getSourceMapper()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.hasChildren()",2,2,2
"org.eclipse.jdt.internal.core.JavaElement.hashCode()",2,2,2
"org.eclipse.jdt.internal.core.JavaElement.isAncestorOf(IJavaElement)",1,3,3
"org.eclipse.jdt.internal.core.JavaElement.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.newJavaModelException(IStatus)",2,2,2
"org.eclipse.jdt.internal.core.JavaElement.newNotPresentException()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(Object,IProgressMonitor)",2,6,6
"org.eclipse.jdt.internal.core.JavaElement.readableName()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.tabString(int)",1,2,2
"org.eclipse.jdt.internal.core.JavaElement.toDebugString()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toString()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toString(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.JavaElement.toStringAncestors(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.JavaElement.toStringChildren(int,StringBuffer,Object)",2,2,4
"org.eclipse.jdt.internal.core.JavaElement.toStringInfo(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toStringInfo(int,StringBuffer,Object)",1,2,2
"org.eclipse.jdt.internal.core.JavaElement.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toStringWithAncestors()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.JavaElementDelta(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.addAffectedChild(JavaElementDelta)",13,11,24
"org.eclipse.jdt.internal.core.JavaElementDelta.addResourceDelta(IResourceDelta)",4,3,6
"org.eclipse.jdt.internal.core.JavaElementDelta.added(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.added(IJavaElement,int)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.changed(IJavaElement,int)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.closed(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.contentChanged()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.createDeltaTree(IJavaElement,JavaElementDelta)",1,3,4
"org.eclipse.jdt.internal.core.JavaElementDelta.equalsAndSameParent(IJavaElement,IJavaElement)",1,3,3
"org.eclipse.jdt.internal.core.JavaElementDelta.find(IJavaElement)",4,3,4
"org.eclipse.jdt.internal.core.JavaElementDelta.fineGrained()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getAddedChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getAffectedChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getAncestors(IJavaElement)",4,2,4
"org.eclipse.jdt.internal.core.JavaElementDelta.getChangedChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getChildrenOfType(int)",2,3,4
"org.eclipse.jdt.internal.core.JavaElementDelta.getDeltaFor(IJavaElement)",6,3,6
"org.eclipse.jdt.internal.core.JavaElementDelta.getElement()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getMovedFromElement()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getMovedToElement()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getRemovedChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getResourceDeltas()",2,2,3
"org.eclipse.jdt.internal.core.JavaElementDelta.growAndAddToArray(IJavaElementDelta[],IJavaElementDelta)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.insertDeltaTree(IJavaElement,JavaElementDelta)",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDelta.movedFrom(IJavaElement,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.movedTo(IJavaElement,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.opened(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.removeAffectedChild(JavaElementDelta)",4,4,5
"org.eclipse.jdt.internal.core.JavaElementDelta.removeAndShrinkArray(IJavaElementDelta[],int)",1,3,3
"org.eclipse.jdt.internal.core.JavaElementDelta.removed(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.removed(IJavaElement,int)",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDelta.sourceAttached(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.sourceDetached(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.toDebugString(StringBuffer,int)",1,33,33
"org.eclipse.jdt.internal.core.JavaElementDelta.toDebugString(int)",2,7,10
"org.eclipse.jdt.internal.core.JavaElementDelta.toString()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.JavaElementDeltaBuilder(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.JavaElementDeltaBuilder(IJavaElement,int)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.ListItem.ListItem(IJavaElement,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.added(IJavaElement)",1,3,5
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.buildDeltas()",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.equals(char[][][],char[][][])",6,2,7
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findAdditions(IJavaElement,int)",2,6,9
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findChangesInPositioning(IJavaElement,int)",3,7,9
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findContentChange(JavaElementInfo,JavaElementInfo,IJavaElement)",1,14,18
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findDeletions()",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.getElementInfo(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.getNewPosition(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.getOldPosition(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.initialize()",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.insertPositions(IJavaElement[],boolean)",1,3,5
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.isPositionedCorrectly(IJavaElement)",4,2,4
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.putElementInfo(IJavaElement,JavaElementInfo)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.putNewPosition(IJavaElement,ListItem)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.putOldPosition(IJavaElement,ListItem)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.recordElementInfo(IJavaElement,JavaModel,int)",3,4,6
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.recordNewPositions(IJavaElement,int)",2,4,6
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.removeElementInfo(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.removed(IJavaElement)",1,3,5
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.toString()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.trimDelta(JavaElementDelta)",1,4,4
"org.eclipse.jdt.internal.core.JavaElementInfo.JavaElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementInfo.addChild(IJavaElement)",1,3,3
"org.eclipse.jdt.internal.core.JavaElementInfo.clone()",1,1,2
"org.eclipse.jdt.internal.core.JavaElementInfo.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementInfo.growAndAddToArray(IJavaElement[],IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementInfo.includesChild(IJavaElement)",3,2,3
"org.eclipse.jdt.internal.core.JavaElementInfo.removeAndShrinkArray(IJavaElement[],IJavaElement)",3,3,3
"org.eclipse.jdt.internal.core.JavaElementInfo.removeChild(IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.JavaElementInfo.setChildren(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptField(IField)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptInitializer(IInitializer)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptMemberType(IType)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptMethod(IMethod)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptPackageFragment(IPackageFragment)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptType(IType)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getFields()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getInitializers()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getMemberTypes()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getMethods()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getPackageFragments()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getTypes()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.isCanceled()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementRequestor.reset()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementRequestor.setCanceled(boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.JavaModel()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",1,3,3
"org.eclipse.jdt.internal.core.JavaModel.contains(IResource)",4,3,5
"org.eclipse.jdt.internal.core.JavaModel.copy(IJavaElement[],IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",1,5,5
"org.eclipse.jdt.internal.core.JavaModel.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.delete(IJavaElement[],boolean,IProgressMonitor)",1,5,5
"org.eclipse.jdt.internal.core.JavaModel.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.JavaModel.findJavaProject(IProject)",3,2,4
"org.eclipse.jdt.internal.core.JavaModel.flushExternalFileCache()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,2,2
"org.eclipse.jdt.internal.core.JavaModel.getHandleMemento(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getJavaProject(IResource)",5,4,5
"org.eclipse.jdt.internal.core.JavaModel.getJavaProject(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getJavaProjects()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getOldJavaProjectsList()",1,2,2
"org.eclipse.jdt.internal.core.JavaModel.getPath()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getResource()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getTarget(IContainer,IPath,boolean)",9,8,11
"org.eclipse.jdt.internal.core.JavaModel.getUnderlyingResource()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getWorkspace()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.move(IJavaElement[],IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",1,5,5
"org.eclipse.jdt.internal.core.JavaModel.refreshExternalArchives(IJavaElement[],IProgressMonitor)",1,1,2
"org.eclipse.jdt.internal.core.JavaModel.rename(IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",1,4,5
"org.eclipse.jdt.internal.core.JavaModel.runOperation(MultiOperation,IJavaElement[],IJavaElement[],String[],IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.JavaModel.toStringInfo(int,StringBuffer,Object)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelCache.JavaModelCache()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelCache.ensureSpaceLimit(Map)",2,3,5
"org.eclipse.jdt.internal.core.JavaModelCache.getInfo(IJavaElement)",7,6,7
"org.eclipse.jdt.internal.core.JavaModelCache.peekAtInfo(IJavaElement)",7,6,7
"org.eclipse.jdt.internal.core.JavaModelCache.putInfo(IJavaElement,Object)",2,2,7
"org.eclipse.jdt.internal.core.JavaModelCache.removeInfo(IJavaElement)",2,2,7
"org.eclipse.jdt.internal.core.JavaModelCache.resetSpaceLimit(IJavaElement)",2,2,4
"org.eclipse.jdt.internal.core.JavaModelCache.toStringFillingRation(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelInfo.computeNonJavaResources()",2,3,6
"org.eclipse.jdt.internal.core.JavaModelInfo.getNonJavaResources()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.EclipsePreferencesListener.preferenceChange(PreferenceChangeEvent)",1,5,5
"org.eclipse.jdt.internal.core.JavaModelManager.JavaModelManager()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.PerProjectInfo(IProject)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.toString()",1,6,6
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.updateClasspathInformation(IClasspathEntry[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.PerWorkingCopyInfo(ICompilationUnit,IProblemRequestor)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.acceptProblem(IProblem)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.beginReporting()",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.endReporting()",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.isActive()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.toString()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles()",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.closeZipFile(ZipFile)",3,2,5
"org.eclipse.jdt.internal.core.JavaModelManager.configurePluginDebugOptions()",1,17,17
"org.eclipse.jdt.internal.core.JavaModelManager.conflictsWithOutputLocation(IPath,JavaProject)",6,4,8
"org.eclipse.jdt.internal.core.JavaModelManager.containerClone(IJavaProject)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.containerGet(IJavaProject,IPath)",3,1,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerInitializationInProgress(IJavaProject)",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerPut(IJavaProject,IPath,IClasspathContainer)",2,6,6
"org.eclipse.jdt.internal.core.JavaModelManager.containersReset(String[])",1,6,6
"org.eclipse.jdt.internal.core.JavaModelManager.create(IFile,IJavaProject)",6,6,7
"org.eclipse.jdt.internal.core.JavaModelManager.create(IFolder,IJavaProject)",3,4,6
"org.eclipse.jdt.internal.core.JavaModelManager.create(IResource,IJavaProject)",7,6,7
"org.eclipse.jdt.internal.core.JavaModelManager.createClassFileFrom(IFile,IJavaProject)",2,3,4
"org.eclipse.jdt.internal.core.JavaModelManager.createCompilationUnitFrom(IFile,IJavaProject)",2,4,5
"org.eclipse.jdt.internal.core.JavaModelManager.createJarPackageFragmentRootFrom(IFile,IJavaProject)",4,4,6
"org.eclipse.jdt.internal.core.JavaModelManager.determineIfOnClasspath(IResource,IJavaProject)",8,8,12
"org.eclipse.jdt.internal.core.JavaModelManager.discardPerWorkingCopyInfo(CompilationUnit)",3,7,10
"org.eclipse.jdt.internal.core.JavaModelManager.doneSaving(ISaveContext)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.flushZipFiles()",2,3,5
"org.eclipse.jdt.internal.core.JavaModelManager.getClasspathBeingResolved()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(IPath,IJavaProject)",3,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.getDeltaProcessor()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getElementsOutOfSynchWithBuffers()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getIndexManager()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getInfo(IJavaElement)",3,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.getJavaModel()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getJavaModelManager()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(IProject,IProgressMonitor)",2,4,5
"org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfo(IProject,boolean)",1,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(IProject)",3,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.getPerWorkingCopyInfo(CompilationUnit,boolean,boolean,IProblemRequestor)",1,4,8
"org.eclipse.jdt.internal.core.JavaModelManager.getPreviousSessionContainer(IPath,IJavaProject)",3,6,6
"org.eclipse.jdt.internal.core.JavaModelManager.getPreviousSessionVariable(String)",2,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.getRegisteredContainerIDs()",2,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.getRegisteredVariableNames()",2,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.getSerializationFile(IProject)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.getTemporaryCache()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.getWorkingCopies(WorkingCopyOwner,boolean)",2,4,7
"org.eclipse.jdt.internal.core.JavaModelManager.getZipFile(IPath)",4,8,9
"org.eclipse.jdt.internal.core.JavaModelManager.hasTemporaryCache()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(IJavaProject,IPath)",5,12,14
"org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(IJavaProject,IPath)",4,15,18
"org.eclipse.jdt.internal.core.JavaModelManager.intern(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.isClasspathBeingResolved(IJavaProject)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.loadVariablesAndContainers()",4,12,18
"org.eclipse.jdt.internal.core.JavaModelManager.peekAtInfo(IJavaElement)",3,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.prepareToSave(ISaveContext)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.putInfos(IJavaElement,Map)",1,4,6
"org.eclipse.jdt.internal.core.JavaModelManager.readState(IProject)",5,8,8
"org.eclipse.jdt.internal.core.JavaModelManager.recreatePersistedContainer(String,String,boolean)",1,8,9
"org.eclipse.jdt.internal.core.JavaModelManager.rememberScope(AbstractSearchScope)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.removeInfoAndChildren(JavaElement)",3,7,13
"org.eclipse.jdt.internal.core.JavaModelManager.removePerProjectInfo(JavaProject)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.resetProjectPreferences(JavaProject)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.resetTemporaryCache()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.rollback(ISaveContext)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.saveBuiltState(PerProjectInfo)",2,6,9
"org.eclipse.jdt.internal.core.JavaModelManager.saveState(PerProjectInfo,ISaveContext)",2,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.saving(ISaveContext)",6,10,15
"org.eclipse.jdt.internal.core.JavaModelManager.setBuildOrder(String[])",3,4,11
"org.eclipse.jdt.internal.core.JavaModelManager.setClasspathBeingResolved(IJavaProject,boolean)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.setLastBuiltState(IProject,Object)",1,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.shutdown()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.updateVariableValues(String[],IPath[],IProgressMonitor)",15,23,33
"org.eclipse.jdt.internal.core.JavaModelManager.variableGet(String)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.variableInitializationInProgress()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.variableNames()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.variablePut(String,IPath)",2,4,5
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement,boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[],IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.addAction(IPostAction)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(IJavaElementDelta)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.addReconcileDelta(ICompilationUnit,IJavaElementDelta)",1,3,3
"org.eclipse.jdt.internal.core.JavaModelOperation.beginTask(String,int)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.checkCanceled()",2,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.commonVerify()",4,1,5
"org.eclipse.jdt.internal.core.JavaModelOperation.copyResources(IResource[],IPath)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.createFile(IContainer,String,InputStream,boolean)",1,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.createFolder(IContainer,String,boolean)",1,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.deleteEmptyPackageFragment(IPackageFragment,boolean,IResource)",1,4,7
"org.eclipse.jdt.internal.core.JavaModelOperation.deleteResource(IResource,int)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.deleteResources(IResource[],boolean)",2,1,5
"org.eclipse.jdt.internal.core.JavaModelOperation.done()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.equalsOneOf(IPath,IPath[])",3,2,3
"org.eclipse.jdt.internal.core.JavaModelOperation.executeNestedOperation(JavaModelOperation,int)",5,4,6
"org.eclipse.jdt.internal.core.JavaModelOperation.firstActionWithID(String,int)",3,2,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getAttribute(Object)",3,2,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getCompilationUnitFor(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getCurrentOperationStack()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.getElementToProcess()",2,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getElementsToProcess()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getJavaModel()",2,2,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getNestedFolders(IPackageFragmentRoot)",1,4,5
"org.eclipse.jdt.internal.core.JavaModelOperation.getParentElement()",2,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getParentElements()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getResultElements()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getSchedulingRule()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getSubProgressMonitor(int)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.hasModifiedResource()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.internalWorked(double)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.isCanceled()",2,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.isTopLevelOperation()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.moveResources(IResource[],IPath)",1,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.newJavaElementDelta()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.popOperation()",2,3,3
"org.eclipse.jdt.internal.core.JavaModelOperation.postAction(IPostAction,int)",3,7,11
"org.eclipse.jdt.internal.core.JavaModelOperation.prefixesOneOf(IPath,IPath[])",3,2,3
"org.eclipse.jdt.internal.core.JavaModelOperation.pushOperation(JavaModelOperation)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.removeAllPostAction(String)",2,3,4
"org.eclipse.jdt.internal.core.JavaModelOperation.removeReconcileDelta(ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.run(IProgressMonitor)",1,7,7
"org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(IProgressMonitor)",5,5,7
"org.eclipse.jdt.internal.core.JavaModelOperation.runPostActions()",1,3,3
"org.eclipse.jdt.internal.core.JavaModelOperation.setAttribute(Object,Object)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.setCanceled(boolean)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.setNested(boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.setTaskName(String)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.subTask(String)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.verify()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.worked(int)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(CoreException)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement,IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement,IPath,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,Throwable)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,int,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getBits()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getElements()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getMessage()",40,52,62
"org.eclipse.jdt.internal.core.JavaModelStatus.getPath()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getSeverity()",2,3,4
"org.eclipse.jdt.internal.core.JavaModelStatus.getString()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.isDoesNotExist()",1,1,2
"org.eclipse.jdt.internal.core.JavaModelStatus.isMultiStatus()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.isOK()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.matches(JavaModelStatus,int)",1,1,4
"org.eclipse.jdt.internal.core.JavaModelStatus.matches(int)",4,3,4
"org.eclipse.jdt.internal.core.JavaModelStatus.newMultiStatus(IJavaModelStatus[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.toString()",2,1,2
"org.eclipse.jdt.internal.core.JavaProject.JavaProject()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.JavaProject(IProject,JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.addToBuildSpec(String)",1,2,2
"org.eclipse.jdt.internal.core.JavaProject.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",2,6,6
"org.eclipse.jdt.internal.core.JavaProject.canonicalizedPath(IPath)",8,5,10
"org.eclipse.jdt.internal.core.JavaProject.closing(Object)",1,3,3
"org.eclipse.jdt.internal.core.JavaProject.computeChildren(JavaProjectElementInfo)",4,4,5
"org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(ClasspathEntry,boolean,boolean,HashSet,ObjectVector,Map,Map)",5,11,13
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry)",1,1,2
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry,ObjectVector,HashSet,IClasspathEntry,boolean,boolean,Map)",11,16,26
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry[],ObjectVector,HashSet,IClasspathEntry,boolean,boolean,Map)",1,3,3
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry[],boolean,Map)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.computeSharedPropertyFileName(QualifiedName)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.configure()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.contains(IResource)",7,10,17
"org.eclipse.jdt.internal.core.JavaProject.createClasspathProblemMarker(IJavaModelStatus)",4,6,14
"org.eclipse.jdt.internal.core.JavaProject.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.decodeClasspath(String,boolean,boolean)",4,17,21
"org.eclipse.jdt.internal.core.JavaProject.deconfigure()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.defaultClasspath()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.defaultOutputLocation()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.encodeClasspath(IClasspathEntry[],IPath,boolean)",1,3,4
"org.eclipse.jdt.internal.core.JavaProject.equals(Object)",3,1,3
"org.eclipse.jdt.internal.core.JavaProject.exists()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findElement(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findElement(IPath,WorkingCopyOwner)",9,9,13
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragment(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragment0(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragmentRoot(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragmentRoot0(IPath)",4,3,4
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragmentRoots(IClasspathEntry)",3,3,4
"org.eclipse.jdt.internal.core.JavaProject.findType(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,String,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,WorkingCopyOwner)",5,3,5
"org.eclipse.jdt.internal.core.JavaProject.flushClasspathProblemMarkers(boolean,boolean)",1,10,11
"org.eclipse.jdt.internal.core.JavaProject.forceClasspathReload(IProgressMonitor)",5,13,18
"org.eclipse.jdt.internal.core.JavaProject.getAccessRestrictions(String)",2,2,5
"org.eclipse.jdt.internal.core.JavaProject.getAllPackageFragmentRoots()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getAllPackageFragmentRoots(Map)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getClasspathEntryFor(IPath)",3,2,3
"org.eclipse.jdt.internal.core.JavaProject.getCycleMarker()",4,4,6
"org.eclipse.jdt.internal.core.JavaProject.getEclipsePreferences()",3,2,4
"org.eclipse.jdt.internal.core.JavaProject.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(boolean,boolean,Map,Map)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getFolderPackageFragmentRoot(IPath)",2,2,2
"org.eclipse.jdt.internal.core.JavaProject.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",5,5,7
"org.eclipse.jdt.internal.core.JavaProject.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getJavaCommandIndex(ICommand[])",3,2,3
"org.eclipse.jdt.internal.core.JavaProject.getJavaProjectElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getOption(String,boolean)",3,4,5
"org.eclipse.jdt.internal.core.JavaProject.getOptions(boolean)",2,5,7
"org.eclipse.jdt.internal.core.JavaProject.getOutputLocation()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getOutputLocation(boolean,boolean)",3,2,3
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(IPath)",7,8,9
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(IResource)",6,2,6
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot0(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots(IClasspathEntry)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots(IPath)",1,3,3
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragments()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentsInRoots(IPackageFragmentRoot[])",1,3,4
"org.eclipse.jdt.internal.core.JavaProject.getPath()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPluginWorkingLocation()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPreferences()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getProject()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getRawClasspath()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(boolean,boolean)",4,5,8
"org.eclipse.jdt.internal.core.JavaProject.getRequiredProjectNames()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(IClasspathEntry[],IPath,boolean,boolean,Map)",8,19,29
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(boolean,boolean,boolean)",5,13,17
"org.eclipse.jdt.internal.core.JavaProject.getResource()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getSharedProperty(String)",1,3,3
"org.eclipse.jdt.internal.core.JavaProject.getSourceMapper()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getUnderlyingResource()",2,2,2
"org.eclipse.jdt.internal.core.JavaProject.hasBuildState()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.hasClasspathCycle(IClasspathEntry[])",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.hasCycleMarker()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.hasJavaNature(IProject)",1,1,2
"org.eclipse.jdt.internal.core.JavaProject.hasSource()",3,2,4
"org.eclipse.jdt.internal.core.JavaProject.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.isClasspathEqualsTo(IClasspathEntry[],IPath,IClasspathEntry[])",6,3,8
"org.eclipse.jdt.internal.core.JavaProject.isOnClasspath(IJavaElement)",7,5,10
"org.eclipse.jdt.internal.core.JavaProject.isOnClasspath(IResource)",4,3,6
"org.eclipse.jdt.internal.core.JavaProject.loadPreferences()",3,4,6
"org.eclipse.jdt.internal.core.JavaProject.newEvaluationContext()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newNameLookup(ICompilationUnit[])",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newNameLookup(WorkingCopyOwner)",1,2,2
"org.eclipse.jdt.internal.core.JavaProject.newSearchableNameEnvironment(ICompilationUnit[])",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newSearchableNameEnvironment(WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IRegion,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IRegion,WorkingCopyOwner,IProgressMonitor)",2,2,2
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IType,IRegion,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IType,IRegion,WorkingCopyOwner,IProgressMonitor)",3,3,3
"org.eclipse.jdt.internal.core.JavaProject.projectPrerequisites(IClasspathEntry[])",2,4,4
"org.eclipse.jdt.internal.core.JavaProject.readClasspathFile(boolean,boolean)",2,8,8
"org.eclipse.jdt.internal.core.JavaProject.readOutputLocation()",1,3,4
"org.eclipse.jdt.internal.core.JavaProject.readRawClasspath()",1,3,4
"org.eclipse.jdt.internal.core.JavaProject.removeFromBuildSpec(String)",3,3,3
"org.eclipse.jdt.internal.core.JavaProject.resetCaches()",1,2,2
"org.eclipse.jdt.internal.core.JavaProject.rootID()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.saveClasspath(IClasspathEntry[],IPath)",3,2,5
"org.eclipse.jdt.internal.core.JavaProject.setJavaCommand(IProjectDescription,ICommand)",1,2,2
"org.eclipse.jdt.internal.core.JavaProject.setOption(String,String)",2,3,5
"org.eclipse.jdt.internal.core.JavaProject.setOptions(Map)",4,5,7
"org.eclipse.jdt.internal.core.JavaProject.setOutputLocation(IPath,IProgressMonitor)",3,2,3
"org.eclipse.jdt.internal.core.JavaProject.setProject(IProject)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IPath,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IPath,IProgressMonitor,boolean,IClasspathEntry[],boolean,boolean)",1,3,3
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setSharedProperty(String,String)",1,4,4
"org.eclipse.jdt.internal.core.JavaProject.updateAllCycleMarkers(Map)",5,9,11
"org.eclipse.jdt.internal.core.JavaProject.updateClasspathMarkers(Map,Map)",1,10,13
"org.eclipse.jdt.internal.core.JavaProject.updateCycleParticipants(ArrayList,HashSet,IWorkspaceRoot,HashSet,Map)",1,11,12
"org.eclipse.jdt.internal.core.JavaProject.updatePackageFragmentRoots()",1,3,4
"org.eclipse.jdt.internal.core.JavaProject.updatePreferences(IEclipsePreferences)",1,4,5
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.JavaProjectElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.computeNonJavaResources(JavaProject)",4,15,22
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.getAllPackageFragmentRoots(JavaProject)",1,2,3
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.getAllPackageFragments(JavaProject)",3,5,6
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.getNonJavaResources(JavaProject)",1,2,2
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.isClasspathEntryOrOutputLocation(IPath,IClasspathEntry[],IPath)",5,3,6
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.resetCaches()",1,1,1
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.setNonJavaResources(Object[])",1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.LRUCacheEnumerator(LRUEnumeratorElement)",1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.LRUEnumeratorElement.LRUEnumeratorElement(Object)",1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.hasMoreElements()",1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.nextElement()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.LocalVariable(JavaElement,String,int,int,int,int,String)",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.equals(Object)",2,5,6
"org.eclipse.jdt.internal.core.LocalVariable.exists()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.generateInfos(Object,HashMap,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getCorrespondingResource()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,2,2
"org.eclipse.jdt.internal.core.LocalVariable.getHandleMemento(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.LocalVariable.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getPath()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getResource()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getSource()",3,1,5
"org.eclipse.jdt.internal.core.LocalVariable.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getTypeSignature()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getUnderlyingResource()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.toStringInfo(int,StringBuffer,Object)",1,2,2
"org.eclipse.jdt.internal.core.Member.Member(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.Member.areSimilarMethods(String,String[],String,String[],String[])",5,5,6
"org.eclipse.jdt.internal.core.Member.convertConstant(Constant)",13,11,14
"org.eclipse.jdt.internal.core.Member.equalsDOMNode(IDOMNode)",1,1,1
"org.eclipse.jdt.internal.core.Member.findMethods(IMethod,IMethod[])",2,5,5
"org.eclipse.jdt.internal.core.Member.getClassFile()",1,1,1
"org.eclipse.jdt.internal.core.Member.getDeclaringType()",2,1,2
"org.eclipse.jdt.internal.core.Member.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.Member.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",4,5,12
"org.eclipse.jdt.internal.core.Member.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.Member.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.Member.getOuterMostLocalContext()",4,3,5
"org.eclipse.jdt.internal.core.Member.getType(String,int)",2,2,2
"org.eclipse.jdt.internal.core.Member.isBinary()",1,1,1
"org.eclipse.jdt.internal.core.Member.isMainMethod(IMethod)",4,6,6
"org.eclipse.jdt.internal.core.Member.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.Member.readableName()",2,2,2
"org.eclipse.jdt.internal.core.Member.updateNameRange(int,int)",1,1,2
"org.eclipse.jdt.internal.core.MemberElementInfo.getModifiers()",1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.getNameSourceEnd()",1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.getNameSourceStart()",1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.setFlags(int)",1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.setNameSourceEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.setNameSourceStart(int)",1,1,1
"org.eclipse.jdt.internal.core.ModelUpdater.addToParentInfo(Openable)",1,3,4
"org.eclipse.jdt.internal.core.ModelUpdater.close(Openable)",1,1,2
"org.eclipse.jdt.internal.core.ModelUpdater.elementAdded(Openable)",2,3,4
"org.eclipse.jdt.internal.core.ModelUpdater.elementChanged(Openable)",1,1,1
"org.eclipse.jdt.internal.core.ModelUpdater.elementRemoved(Openable)",2,3,6
"org.eclipse.jdt.internal.core.ModelUpdater.processJavaDelta(IJavaElementDelta)",1,2,2
"org.eclipse.jdt.internal.core.ModelUpdater.removeFromParentInfo(Openable)",1,3,4
"org.eclipse.jdt.internal.core.ModelUpdater.traverseDelta(IJavaElementDelta,IPackageFragmentRoot,IJavaProject)",4,7,13
"org.eclipse.jdt.internal.core.MoveElementsOperation.MoveElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.MoveElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.MoveElementsOperation.isMove()",1,1,1
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.MovePackageFragmentRootOperation(IPackageFragmentRoot,IPath,int,int,IClasspathEntry)",1,1,1
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.executeOperation()",1,8,10
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.moveResource(IPackageFragmentRoot,IClasspathEntry,IWorkspaceRoot)",6,13,16
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.removeEntryFromClasspath(IPath,IJavaProject)",1,6,7
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.renameEntryInClasspath(IPath,IJavaProject)",1,8,9
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.updateReferringProjectClasspaths(IPath,IJavaProject)",3,2,3
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation.MoveResourceElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation.isMove()",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.MultiOperation(IJavaElement[],IJavaElement[],boolean)",1,4,4
"org.eclipse.jdt.internal.core.MultiOperation.MultiOperation(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.error(int,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.executeOperation()",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.getDestinationParent(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.getNewNameFor(IJavaElement)",2,2,2
"org.eclipse.jdt.internal.core.MultiOperation.initializeRenamings()",1,4,5
"org.eclipse.jdt.internal.core.MultiOperation.isMove()",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.isRename()",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.processElements()",3,7,7
"org.eclipse.jdt.internal.core.MultiOperation.setInsertBefore(IJavaElement,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.setRenamings(String[])",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.verifyDestination(IJavaElement,IJavaElement)",2,13,20
"org.eclipse.jdt.internal.core.MultiOperation.verifyRenaming(IJavaElement)",4,2,7
"org.eclipse.jdt.internal.core.MultiOperation.verifySibling(IJavaElement,IJavaElement)",1,4,4
"org.eclipse.jdt.internal.core.NameLookup.NameLookup(IPackageFragmentRoot[],HashtableOfArrayToObject,ICompilationUnit[],Map)",4,10,15
"org.eclipse.jdt.internal.core.NameLookup.acceptType(IType,int,boolean)",6,3,9
"org.eclipse.jdt.internal.core.NameLookup.findAllTypes(String,boolean,int,IJavaElementRequestor)",6,4,7
"org.eclipse.jdt.internal.core.NameLookup.findCompilationUnit(String)",6,7,9
"org.eclipse.jdt.internal.core.NameLookup.findPackageFragment(IPath)",15,10,18
"org.eclipse.jdt.internal.core.NameLookup.findPackageFragments(String,boolean)",4,10,11
"org.eclipse.jdt.internal.core.NameLookup.findSecondaryType(String,IPackageFragment,boolean,int)",4,8,14
"org.eclipse.jdt.internal.core.NameLookup.findType(String,IPackageFragment,boolean,int)",2,1,2
"org.eclipse.jdt.internal.core.NameLookup.findType(String,String,boolean,int)",6,6,8
"org.eclipse.jdt.internal.core.NameLookup.findType(String,boolean,int)",1,2,2
"org.eclipse.jdt.internal.core.NameLookup.getMemberType(IType,String,int)",1,3,3
"org.eclipse.jdt.internal.core.NameLookup.nameMatches(String,ICompilationUnit,boolean)",2,2,2
"org.eclipse.jdt.internal.core.NameLookup.nameMatches(String,IJavaElement,boolean)",2,2,2
"org.eclipse.jdt.internal.core.NameLookup.seekPackageFragments(String,boolean,IJavaElementRequestor)",10,8,11
"org.eclipse.jdt.internal.core.NameLookup.seekTypes(String,IPackageFragment,boolean,int,IJavaElementRequestor)",3,4,7
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInBinaryPackage(String,IPackageFragment,boolean,int,IJavaElementRequestor)",4,11,14
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInSourcePackage(String,IPackageFragment,boolean,int,IJavaElementRequestor)",19,23,32
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInTopLevelType(String,int,IType,IJavaElementRequestor,int)",2,3,4
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInType(String,int,IType,IJavaElementRequestor,int)",4,6,9
"org.eclipse.jdt.internal.core.NamedMember.NamedMember(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.NamedMember.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.Openable.Openable(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.Openable.bufferChanged(BufferChangedEvent)",1,2,2
"org.eclipse.jdt.internal.core.Openable.canBeRemovedFromCache()",1,1,2
"org.eclipse.jdt.internal.core.Openable.canBufferBeRemovedFromCache(IBuffer)",1,1,1
"org.eclipse.jdt.internal.core.Openable.closeBuffer()",2,2,3
"org.eclipse.jdt.internal.core.Openable.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.Openable.codeComplete(ICompilationUnit,ICompilationUnit,int,CompletionRequestor,WorkingCopyOwner)",4,3,6
"org.eclipse.jdt.internal.core.Openable.codeSelect(ICompilationUnit,int,int,WorkingCopyOwner)",3,3,6
"org.eclipse.jdt.internal.core.Openable.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.Openable.exists()",4,4,6
"org.eclipse.jdt.internal.core.Openable.generateInfos(Object,HashMap,IProgressMonitor)",3,6,12
"org.eclipse.jdt.internal.core.Openable.getBuffer()",2,3,3
"org.eclipse.jdt.internal.core.Openable.getBufferFactory()",1,1,1
"org.eclipse.jdt.internal.core.Openable.getBufferManager()",1,1,1
"org.eclipse.jdt.internal.core.Openable.getCorrespondingResource()",1,1,1
"org.eclipse.jdt.internal.core.Openable.getOpenable()",1,1,1
"org.eclipse.jdt.internal.core.Openable.getPackageFragmentRoot()",3,2,3
"org.eclipse.jdt.internal.core.Openable.getUnderlyingResource()",4,3,5
"org.eclipse.jdt.internal.core.Openable.hasBuffer()",1,1,1
"org.eclipse.jdt.internal.core.Openable.hasUnsavedChanges()",7,6,12
"org.eclipse.jdt.internal.core.Openable.isConsistent()",1,1,1
"org.eclipse.jdt.internal.core.Openable.isOpen()",1,1,1
"org.eclipse.jdt.internal.core.Openable.isSourceElement()",1,1,1
"org.eclipse.jdt.internal.core.Openable.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.Openable.makeConsistent(IProgressMonitor)",3,6,7
"org.eclipse.jdt.internal.core.Openable.open(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.Openable.openBuffer(IProgressMonitor,Object)",1,1,1
"org.eclipse.jdt.internal.core.Openable.openParent(Object,HashMap,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.Openable.parentExists()",2,1,2
"org.eclipse.jdt.internal.core.Openable.resourceExists()",2,1,2
"org.eclipse.jdt.internal.core.Openable.save(IProgressMonitor,boolean)",2,2,3
"org.eclipse.jdt.internal.core.OpenableElementInfo.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.OpenableElementInfo.setIsStructureKnown(boolean)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.OverflowingLRUCache(int)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.OverflowingLRUCache(int,int)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.clone()",1,2,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.elements()",2,1,3
"org.eclipse.jdt.internal.core.OverflowingLRUCache.fillingRatio()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.getEntryTable()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.getLoadFactor()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.getOverflow()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.makeSpace(int)",4,2,7
"org.eclipse.jdt.internal.core.OverflowingLRUCache.peek(Object)",2,1,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.printStats()",1,4,6
"org.eclipse.jdt.internal.core.OverflowingLRUCache.privateRemoveEntry(LRUCacheEntry,boolean)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.privateRemoveEntry(LRUCacheEntry,boolean,boolean)",5,4,7
"org.eclipse.jdt.internal.core.OverflowingLRUCache.put(Object,Object)",3,4,4
"org.eclipse.jdt.internal.core.OverflowingLRUCache.remove(Object)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.setLoadFactor(double)",2,2,3
"org.eclipse.jdt.internal.core.OverflowingLRUCache.setSpaceLimit(int)",1,2,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.shrink()",2,2,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.toString()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.updateTimestamp(LRUCacheEntry)",1,3,3
"org.eclipse.jdt.internal.core.PackageDeclaration.PackageDeclaration(CompilationUnit,String)",1,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.PackageDeclaration.equalsDOMNode(IDOMNode)",1,2,2
"org.eclipse.jdt.internal.core.PackageDeclaration.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getPrimaryElement(boolean)",2,2,3
"org.eclipse.jdt.internal.core.PackageDeclaration.toStringInfo(int,StringBuffer,Object)",1,2,2
"org.eclipse.jdt.internal.core.PackageFragment.PackageFragment(PackageFragmentRoot,String[])",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",2,11,12
"org.eclipse.jdt.internal.core.PackageFragment.containsJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,2,4
"org.eclipse.jdt.internal.core.PackageFragment.createCompilationUnit(String,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.delete(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.equals(Object)",3,2,4
"org.eclipse.jdt.internal.core.PackageFragment.getClassFile(String)",2,2,2
"org.eclipse.jdt.internal.core.PackageFragment.getClassFiles()",2,1,2
"org.eclipse.jdt.internal.core.PackageFragment.getCompilationUnit(String)",2,2,2
"org.eclipse.jdt.internal.core.PackageFragment.getCompilationUnits()",2,1,2
"org.eclipse.jdt.internal.core.PackageFragment.getCompilationUnits(WorkingCopyOwner)",2,4,6
"org.eclipse.jdt.internal.core.PackageFragment.getElementName()",2,1,2
"org.eclipse.jdt.internal.core.PackageFragment.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,3,3
"org.eclipse.jdt.internal.core.PackageFragment.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.getKind()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.getNonJavaResources()",2,2,2
"org.eclipse.jdt.internal.core.PackageFragment.getPath()",2,3,3
"org.eclipse.jdt.internal.core.PackageFragment.getResource()",3,4,4
"org.eclipse.jdt.internal.core.PackageFragment.getUnderlyingResource()",5,6,7
"org.eclipse.jdt.internal.core.PackageFragment.hasChildren()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.hasSubpackages()",5,3,5
"org.eclipse.jdt.internal.core.PackageFragment.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.PackageFragment.isDefaultPackage()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,2,4
"org.eclipse.jdt.internal.core.PackageFragment.rename(String,boolean,IProgressMonitor)",2,2,2
"org.eclipse.jdt.internal.core.PackageFragment.toStringChildren(int,StringBuffer,Object)",1,2,2
"org.eclipse.jdt.internal.core.PackageFragment.toStringInfo(int,StringBuffer,Object)",1,4,4
"org.eclipse.jdt.internal.core.PackageFragmentInfo.PackageFragmentInfo()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentInfo.containsJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentInfo.getNonJavaResources(IResource,PackageFragmentRoot)",1,2,3
"org.eclipse.jdt.internal.core.PackageFragmentInfo.setNonJavaResources(Object[])",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.PackageFragmentRoot(IResource,JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.attachSource(IPath,IPath,IProgressMonitor)",3,19,22
"org.eclipse.jdt.internal.core.PackageFragmentRoot.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",3,3,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.computeChildren(OpenableElementInfo,Map)",1,4,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.computeFolderChildren(IContainer,boolean,String[],ArrayList,char[][],char[][])",2,10,14
"org.eclipse.jdt.internal.core.PackageFragmentRoot.copy(IPath,int,int,IClasspathEntry,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.createPackageFragment(String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.createSourceMapper(IPath,IPath)",1,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.delete(int,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.determineKind(IResource)",3,3,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.equals(Object)",3,2,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.exists()",1,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.findSourceAttachmentRecommendation()",19,12,22
"org.eclipse.jdt.internal.core.PackageFragmentRoot.fullExclusionPatternChars()",3,3,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.fullInclusionPatternChars()",3,3,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getElementName()",2,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",3,4,7
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getHandleMemento(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getKind()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPackageFragment(String)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPackageFragment(String[])",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPackageName(IFolder)",1,3,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPath()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getRawClasspathEntry()",1,2,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getResource()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentPath()",4,2,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentProperty()",3,4,6
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentPropertyName()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentRootPath()",4,2,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceMapper()",1,4,7
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getUnderlyingResource()",2,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.hasChildren()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.isArchive()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.isExternal()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.move(IPath,int,int,IClasspathEntry,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.setSourceAttachmentProperty(String)",1,1,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.setSourceMapper(SourceMapper)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.toStringInfo(int,StringBuffer,Object)",1,5,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.validateOnClasspath()",3,3,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.verifyAttachSource(IPath)",4,4,5
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.PackageFragmentRootInfo()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.computeFolderNonJavaResources(JavaProject,IContainer,char[][],char[][])",7,9,15
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.computeNonJavaResources(IJavaProject,IResource,PackageFragmentRoot)",1,3,4
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.getNonJavaResources(IJavaProject,IResource,PackageFragmentRoot)",1,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.getRootKind()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.getSourceMapper()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.isClasspathEntry(IPath,IClasspathEntry[])",3,2,3
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.setNonJavaResources(Object[])",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.setRootKind(int)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.setSourceMapper(SourceMapper)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryField.ParameterizedBinaryField(JavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryField.toStringInfo(int,StringBuffer,Object)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryMethod.ParameterizedBinaryMethod(JavaElement,String,String[],String)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryMethod.toStringInfo(int,StringBuffer,Object)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryType.ParameterizedBinaryType(JavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryType.toStringInfo(int,StringBuffer,Object)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedSourceField.ParameterizedSourceField(JavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedSourceField.toStringInfo(int,StringBuffer,Object)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedSourceMethod.ParameterizedSourceMethod(JavaElement,String,String[],String)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedSourceMethod.toStringInfo(int,StringBuffer,Object)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedSourceType.ParameterizedSourceType(JavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.ParameterizedSourceType.toStringInfo(int,StringBuffer,Object)",1,1,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.ReconcileWorkingCopyOperation(IJavaElement,boolean,int,boolean,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation()",3,13,15
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.verify()",3,1,3
"org.eclipse.jdt.internal.core.Region.Region()",1,1,1
"org.eclipse.jdt.internal.core.Region.add(IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.Region.contains(IJavaElement)",5,3,5
"org.eclipse.jdt.internal.core.Region.getAncestors(IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.Region.getElements()",1,2,2
"org.eclipse.jdt.internal.core.Region.remove(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.Region.removeAllChildren(IJavaElement)",5,5,6
"org.eclipse.jdt.internal.core.Region.toString()",1,3,3
"org.eclipse.jdt.internal.core.RenameElementsOperation.RenameElementsOperation(IJavaElement[],IJavaElement[],String[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.RenameElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.RenameElementsOperation.isRename()",1,1,1
"org.eclipse.jdt.internal.core.RenameElementsOperation.verify()",3,1,4
"org.eclipse.jdt.internal.core.RenameElementsOperation.verify(IJavaElement)",1,9,10
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.RenameResourceElementsOperation(IJavaElement[],IJavaElement[],String[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.isRename()",1,1,1
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.verify(IJavaElement)",1,5,6
"org.eclipse.jdt.internal.core.SearchableEnvironment.SearchableEnvironment(JavaProject,ICompilationUnit[])",1,2,2
"org.eclipse.jdt.internal.core.SearchableEnvironment.SearchableEnvironment(JavaProject,WorkingCopyOwner)",1,2,2
"org.eclipse.jdt.internal.core.SearchableEnvironment.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.find(String,String)",3,11,15
"org.eclipse.jdt.internal.core.SearchableEnvironment.findPackages(char[],ISearchRequestor)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.findType(char[],char[][])",2,2,4
"org.eclipse.jdt.internal.core.SearchableEnvironment.findType(char[][])",4,2,4
"org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(String,ISearchRequestor,int)",1,5,5
"org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(char[],ISearchRequestor)",7,8,14
"org.eclipse.jdt.internal.core.SearchableEnvironment.isPackage(char[][],char[])",5,5,8
"org.eclipse.jdt.internal.core.SearchableEnvironment.isTopLevelPackage(char[])",1,3,3
"org.eclipse.jdt.internal.core.SearchableEnvironment.toStringChar(char[])",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.toStringCharChar(char[][])",1,2,2
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.SearchableEnvironmentRequestor(ISearchRequestor)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.SearchableEnvironmentRequestor(ISearchRequestor,ICompilationUnit,IJavaProject,NameLookup)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptInitializer(IInitializer)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptPackageFragment(IPackageFragment)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptType(IType)",2,8,10
"org.eclipse.jdt.internal.core.SelectionRequestor.SelectionRequestor(NameLookup,Openable)",1,1,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptBinaryMethod(IType,char[],char[][],char[][],String[],char[])",1,4,4
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptClass(char[],char[],boolean,char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptError(IProblem)",1,1,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptField(char[],char[],char[],boolean,char[],int,int)",5,13,14
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptInterface(char[],char[],boolean,char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalField(FieldBinding)",1,8,8
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalMethod(MethodBinding)",1,6,6
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalType(TypeBinding)",1,7,7
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalVariable(LocalVariableBinding)",1,4,4
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptMethod(char[],char[],String,char[],char[][],char[][],String[],boolean,boolean,char[],int,int)",1,6,9
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptMethodDeclaration(IType,char[],int,int)",3,7,8
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptMethodTypeParameter(char[],char[],char[],int,int,char[],boolean,int,int)",3,10,12
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptPackage(char[])",1,4,4
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptSourceMethod(IType,char[],char[][],char[][],char[])",6,13,15
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptType(char[],char[],int,boolean,char[],int,int)",1,6,7
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptTypeParameter(char[],char[],char[],boolean,int,int)",1,6,6
"org.eclipse.jdt.internal.core.SelectionRequestor.addElement(IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.SelectionRequestor.findLocalElement(int)",1,3,5
"org.eclipse.jdt.internal.core.SelectionRequestor.getElements()",1,2,2
"org.eclipse.jdt.internal.core.SelectionRequestor.resolveType(char[],char[],int)",8,16,27
"org.eclipse.jdt.internal.core.SelectionRequestor.resolveTypeByLocation(char[],char[],int,int,int)",11,19,31
"org.eclipse.jdt.internal.core.SetClasspathOperation.SetClasspathOperation(JavaProject,IClasspathEntry[],IClasspathEntry[],IPath,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.SetClasspathOperation.addClasspathDeltas(IPackageFragmentRoot[],int,JavaElementDelta)",1,3,6
"org.eclipse.jdt.internal.core.SetClasspathOperation.classpathContains(IClasspathEntry[],IClasspathEntry)",16,11,21
"org.eclipse.jdt.internal.core.SetClasspathOperation.collectAllSubfolders(IFolder,ArrayList)",1,3,4
"org.eclipse.jdt.internal.core.SetClasspathOperation.determineAffectedPackageFragments(IPath)",1,9,9
"org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation()",2,7,11
"org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDeltas()",13,31,43
"org.eclipse.jdt.internal.core.SetClasspathOperation.getSourceAttachmentDeltaFlag(IPath,IPath)",5,3,5
"org.eclipse.jdt.internal.core.SetClasspathOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.SetClasspathOperation.saveClasspathIfNecessary()",2,4,7
"org.eclipse.jdt.internal.core.SetClasspathOperation.toString()",1,5,5
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects(IPath)",5,5,8
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath()",1,3,3
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateCycleMarkersIfNecessary()",4,2,5
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateOutputLocation()",1,6,6
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateProjectReferencesIfNecessary()",2,1,3
"org.eclipse.jdt.internal.core.SetClasspathOperation.verify()",5,6,7
"org.eclipse.jdt.internal.core.SimpleDelta.added()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.changed(int)",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.getKind()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.modifiers()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.removed()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.superTypes()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.toDebugString(StringBuffer)",2,2,5
"org.eclipse.jdt.internal.core.SimpleDelta.toDebugString(StringBuffer,int)",1,5,5
"org.eclipse.jdt.internal.core.SimpleDelta.toString()",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptField(IField)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptInitializer(IInitializer)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptMemberType(IType)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptMethod(IMethod)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptPackageFragment(IPackageFragment)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptType(IType)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.getType()",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.isCanceled()",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.reset()",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration.SortAbstractMethodDeclaration(int,int,char[],char[][],char[][],char[][])",1,1,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration.decodeSignature()",1,3,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration.generateSource(StringBuffer)",1,3,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration.mapPositions()",1,3,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortClassDeclaration.SortClassDeclaration(int,int,char[],char[],char[][])",1,1,2
"org.eclipse.jdt.internal.core.SortElementBuilder.SortClassDeclaration.convert()",1,6,6
"org.eclipse.jdt.internal.core.SortElementBuilder.SortClassDeclaration.display(StringBuffer,int)",1,4,4
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.SortCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.convert()",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.display(StringBuffer,int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.generateSource(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.mapPositions()",1,3,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortConstructorDeclaration.SortConstructorDeclaration(int,int,char[],char[][],char[][],char[][])",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortConstructorDeclaration.convert()",1,5,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortConstructorDeclaration.display(StringBuffer,int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.SortElement(int,int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.newType(String)",11,11,12
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.occurencesOf(char,String)",2,2,4
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.setParameters(MethodDeclaration,String[],String[])",1,5,7
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.splitOn(char,String)",2,5,7
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElementBuilder(char[],int[],Comparator,CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.SortFieldDeclaration(int,int,char[],char[],int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.convert()",1,4,4
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.display(StringBuffer,int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.generateReduceSource(StringBuffer)",1,3,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.generateSource(StringBuffer)",1,3,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.mapPositions()",1,3,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.mapReducedPositions()",1,3,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.SortInitializer(int,int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.convert()",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.display(StringBuffer,int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.generateSource(StringBuffer)",1,3,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.mapPositions()",1,3,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInterfaceDeclaration.SortInterfaceDeclaration(int,int,char[],char[][])",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInterfaceDeclaration.convert()",1,4,4
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInterfaceDeclaration.display(StringBuffer,int)",1,3,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMethodDeclaration.SortMethodDeclaration(int,int,char[],char[][],char[][],char[][],char[])",1,1,2
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMethodDeclaration.convert()",1,9,9
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMethodDeclaration.display(StringBuffer,int)",1,2,2
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.SortMultipleFieldDeclaration(SortFieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.addField(SortFieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.convert()",1,5,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.display(StringBuffer,int)",1,3,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.generateSource(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.mapPositions()",1,3,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.sort()",1,2,2
"org.eclipse.jdt.internal.core.SortElementBuilder.SortType.SortType(int,int,char[],char[][])",1,1,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortType.generateSource(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortType.mapPositions()",1,3,3
"org.eclipse.jdt.internal.core.SortElementBuilder.acceptLineSeparatorPositions(int[])",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.enterClass(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.enterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.enterConstructor(MethodInfo)",1,2,2
"org.eclipse.jdt.internal.core.SortElementBuilder.enterField(FieldInfo)",1,5,7
"org.eclipse.jdt.internal.core.SortElementBuilder.enterInitializer(int,int)",1,2,2
"org.eclipse.jdt.internal.core.SortElementBuilder.enterInterface(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.enterMethod(MethodInfo)",1,2,2
"org.eclipse.jdt.internal.core.SortElementBuilder.exitClass(int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitField(int,int,int)",2,2,5
"org.eclipse.jdt.internal.core.SortElementBuilder.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitInterface(int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitMethod(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.getSource()",1,2,2
"org.eclipse.jdt.internal.core.SortElementBuilder.mapNextPosition(SortJavaElement,int,int)",3,1,4
"org.eclipse.jdt.internal.core.SortElementBuilder.normalizeSourceEnd(int)",3,2,6
"org.eclipse.jdt.internal.core.SortElementBuilder.normalizeSourceStart(int)",3,2,5
"org.eclipse.jdt.internal.core.SortElementBuilder.pop(int)",1,2,2
"org.eclipse.jdt.internal.core.SortElementBuilder.push(SortElement)",1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.searchLineNumber(int[],int)",6,1,6
"org.eclipse.jdt.internal.core.SortElementBuilder.sort()",1,1,1
"org.eclipse.jdt.internal.core.SortElementsOperation.SortElementsOperation(IJavaElement[],int[],Comparator)",1,1,1
"org.eclipse.jdt.internal.core.SortElementsOperation.executeOperation()",2,2,3
"org.eclipse.jdt.internal.core.SortElementsOperation.getMainAmountOfWork()",1,1,1
"org.eclipse.jdt.internal.core.SortElementsOperation.processElement(ICompilationUnit,int[],char[])",1,3,3
"org.eclipse.jdt.internal.core.SortElementsOperation.verify()",4,2,5
"org.eclipse.jdt.internal.core.SortJavaElement.SortJavaElement(SortElementBuilder)",1,1,1
"org.eclipse.jdt.internal.core.SortJavaElement.addChild(SortElement)",1,3,3
"org.eclipse.jdt.internal.core.SortJavaElement.closeCollections()",1,2,3
"org.eclipse.jdt.internal.core.SortJavaElement.compareTo(Object)",1,1,1
"org.eclipse.jdt.internal.core.SortJavaElement.convertChildren()",1,2,2
"org.eclipse.jdt.internal.core.SortJavaElement.generateSource(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.SortJavaElement.sort()",2,4,4
"org.eclipse.jdt.internal.core.SortJavaElement.tab(int)",1,1,1
"org.eclipse.jdt.internal.core.SortJavaElement.toString()",1,1,1
"org.eclipse.jdt.internal.core.SortJavaElement.toString(int)",1,3,3
"org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo.getDefaultValueSource(char[])",2,1,3
"org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.getReturnTypeName()",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.isConstructor()",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.setReturnType(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceField.SourceField(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.SourceField.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.SourceField.equalsDOMNode(IDOMNode)",1,2,2
"org.eclipse.jdt.internal.core.SourceField.getConstant()",2,12,14
"org.eclipse.jdt.internal.core.SourceField.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.SourceField.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.SourceField.getPrimaryElement(boolean)",3,2,3
"org.eclipse.jdt.internal.core.SourceField.getTypeSignature()",1,1,1
"org.eclipse.jdt.internal.core.SourceField.toStringInfo(int,StringBuffer,Object)",1,4,4
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getInitializationSource()",1,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getName()",1,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getTypeName()",1,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getTypeSignature()",1,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.setTypeName(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.SourceMapper()",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.SourceMapper(IPath,String,Map)",1,2,3
"org.eclipse.jdt.internal.core.SourceMapper.acceptImport(int,int,char[],boolean,int)",1,4,4
"org.eclipse.jdt.internal.core.SourceMapper.acceptLineSeparatorPositions(int[])",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.acceptPackage(int,int,char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.acceptProblem(IProblem)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.close()",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.computeAllRootPaths(IPackageFragmentRoot)",1,31,39
"org.eclipse.jdt.internal.core.SourceMapper.computeRootPath(File,HashSet,boolean)",4,6,8
"org.eclipse.jdt.internal.core.SourceMapper.computeRootPath(IContainer,HashSet,boolean)",7,7,11
"org.eclipse.jdt.internal.core.SourceMapper.convertTypeNamesToSigs(char[][])",3,3,6
"org.eclipse.jdt.internal.core.SourceMapper.enterAbstractMethod(MethodInfo)",1,1,2
"org.eclipse.jdt.internal.core.SourceMapper.enterClass(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterConstructor(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterEnum(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterField(FieldInfo)",1,1,2
"org.eclipse.jdt.internal.core.SourceMapper.enterInitializer(int,int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterInterface(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterType(TypeInfo)",1,4,4
"org.eclipse.jdt.internal.core.SourceMapper.exitAbstractMethod(int)",1,2,2
"org.eclipse.jdt.internal.core.SourceMapper.exitClass(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitEnum(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitField(int,int,int)",1,2,2
"org.eclipse.jdt.internal.core.SourceMapper.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitInterface(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitMethod(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitType(int)",1,2,2
"org.eclipse.jdt.internal.core.SourceMapper.findSource(IType)",3,2,5
"org.eclipse.jdt.internal.core.SourceMapper.findSource(IType,String)",4,9,10
"org.eclipse.jdt.internal.core.SourceMapper.findSource(String)",2,9,12
"org.eclipse.jdt.internal.core.SourceMapper.getImports(BinaryType)",1,3,3
"org.eclipse.jdt.internal.core.SourceMapper.getMethodParameterNames(IMethod)",2,4,5
"org.eclipse.jdt.internal.core.SourceMapper.getNameRange(IJavaElement)",2,5,6
"org.eclipse.jdt.internal.core.SourceMapper.getSourceForRootPath(String,String)",1,2,3
"org.eclipse.jdt.internal.core.SourceMapper.getSourceRange(IJavaElement)",2,5,6
"org.eclipse.jdt.internal.core.SourceMapper.getType(String)",3,4,4
"org.eclipse.jdt.internal.core.SourceMapper.getUnqualifiedMethodHandle(IMethod,boolean)",2,8,12
"org.eclipse.jdt.internal.core.SourceMapper.hasToRetrieveSourceRangesForLocalClass(char[])",5,2,5
"org.eclipse.jdt.internal.core.SourceMapper.mapSource(IType,char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.mapSource(IType,char[],IJavaElement)",3,6,9
"org.eclipse.jdt.internal.core.SourceMapper.readSource(ZipEntry,ZipFile)",2,2,3
"org.eclipse.jdt.internal.core.SourceMapper.setMethodParameterNames(IMethod,char[][])",1,1,2
"org.eclipse.jdt.internal.core.SourceMapper.setSourceRange(IJavaElement,SourceRange,SourceRange)",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.SourceMethod(JavaElement,String,String[])",1,1,2
"org.eclipse.jdt.internal.core.SourceMethod.closing(Object)",1,2,2
"org.eclipse.jdt.internal.core.SourceMethod.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.SourceMethod.equalsDOMNode(IDOMNode)",3,6,7
"org.eclipse.jdt.internal.core.SourceMethod.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getExceptionTypes()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getHandleMemento(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.SourceMethod.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getNumberOfParameters()",1,1,2
"org.eclipse.jdt.internal.core.SourceMethod.getParameterNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getParameterTypes()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getPrimaryElement(boolean)",3,2,3
"org.eclipse.jdt.internal.core.SourceMethod.getReturnType()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getSignature()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getTypeParameterSignatures()",1,4,4
"org.eclipse.jdt.internal.core.SourceMethod.getTypeParameters()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.SourceMethod.isConstructor()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.isMainMethod()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.isSimilar(IMethod)",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.readableName()",1,4,5
"org.eclipse.jdt.internal.core.SourceMethod.signatureEquals(IDOMMethod)",7,4,9
"org.eclipse.jdt.internal.core.SourceMethod.toStringInfo(int,StringBuffer,Object)",1,5,5
"org.eclipse.jdt.internal.core.SourceMethod.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.toStringName(StringBuffer,int)",1,6,7
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getArgumentNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getArgumentTypeNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getExceptionTypeNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getSelector()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getSignature()",1,2,2
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getTypeParameterBounds()",1,2,3
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getTypeParameterNames()",2,2,3
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.setArgumentNames(char[][])",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.setArgumentTypeNames(char[][])",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.setExceptionTypeNames(char[][])",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.getReturnTypeName()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.isConstructor()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.setReturnType(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceRange.SourceRange(int,int)",1,1,1
"org.eclipse.jdt.internal.core.SourceRange.getLength()",1,1,1
"org.eclipse.jdt.internal.core.SourceRange.getOffset()",1,1,1
"org.eclipse.jdt.internal.core.SourceRange.toString()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.SourceRefElement(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,2,4
"org.eclipse.jdt.internal.core.SourceRefElement.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.delete(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.SourceRefElement.generateInfos(Object,HashMap,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.SourceRefElement.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getCorrespondingResource()",2,2,2
"org.eclipse.jdt.internal.core.SourceRefElement.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,2,2
"org.eclipse.jdt.internal.core.SourceRefElement.getHandleMemento(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.SourceRefElement.getHandleUpdatingCountFromMemento(MementoTokenizer,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.SourceRefElement.getOpenableParent()",3,2,3
"org.eclipse.jdt.internal.core.SourceRefElement.getPath()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getResource()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getSource()",3,1,5
"org.eclipse.jdt.internal.core.SourceRefElement.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource()",2,2,2
"org.eclipse.jdt.internal.core.SourceRefElement.hasChildren()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,2,4
"org.eclipse.jdt.internal.core.SourceRefElement.rename(String,boolean,IProgressMonitor)",2,2,2
"org.eclipse.jdt.internal.core.SourceRefElement.toStringName(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.SourceRefElementInfo.getDeclarationSourceEnd()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.getDeclarationSourceStart()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.setSourceRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.setSourceRangeStart(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.SourceType(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.closing(Object)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,WorkingCopyOwner)",2,5,6
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.SourceType.createField(String,IJavaElement,boolean,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.createInitializer(String,IJavaElement,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.createMethod(String,IJavaElement,boolean,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.createType(String,IJavaElement,boolean,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.SourceType.equalsDOMNode(IDOMNode)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.findMethods(IMethod)",1,1,2
"org.eclipse.jdt.internal.core.SourceType.getDeclaringType()",4,4,4
"org.eclipse.jdt.internal.core.SourceType.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getField(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getFields()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getFullyQualifiedName()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getFullyQualifiedName(char)",2,2,2
"org.eclipse.jdt.internal.core.SourceType.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",10,14,23
"org.eclipse.jdt.internal.core.SourceType.getInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getInitializers()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getMethod(String,String[])",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getMethods()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getPackageFragment()",3,3,3
"org.eclipse.jdt.internal.core.SourceType.getPrimaryElement(boolean)",6,5,6
"org.eclipse.jdt.internal.core.SourceType.getSuperInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getSuperInterfaceTypeSignatures()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getSuperclassName()",2,1,2
"org.eclipse.jdt.internal.core.SourceType.getSuperclassTypeSignature()",2,1,2
"org.eclipse.jdt.internal.core.SourceType.getType(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeParameterNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeParameterSignatures()",1,4,4
"org.eclipse.jdt.internal.core.SourceType.getTypeParameters()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeQualifiedName()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeQualifiedName(char)",3,5,6
"org.eclipse.jdt.internal.core.SourceType.getTypes()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isAnnotation()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isClass()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isEnum()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isInterface()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isLocal()",1,1,2
"org.eclipse.jdt.internal.core.SourceType.isMember()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.loadTypeHierachy(InputStream,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.loadTypeHierachy(InputStream,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(ICompilationUnit[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(IWorkingCopy[],IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(ICompilationUnit[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IJavaProject,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IJavaProject,WorkingCopyOwner,IProgressMonitor)",2,5,6
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IWorkingCopy[],IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.resolveType(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.resolveType(String,WorkingCopyOwner)",1,4,4
"org.eclipse.jdt.internal.core.SourceType.toStringInfo(int,StringBuffer,Object)",1,8,8
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getEnclosingType()",2,3,4
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getFieldHandles()",3,2,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getFields()",1,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getHandle()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getImports()",1,4,5
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getInitializers()",3,3,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getInterfaceNames()",2,1,2
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getKind()",4,1,4
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMemberTypeHandles()",3,2,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMemberTypes()",1,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMethodHandles()",3,2,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMethods()",1,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getName()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getSuperclassName()",3,1,4
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getTypeParameterBounds()",1,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getTypeParameterNames()",2,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setHandle(IType)",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setPackageName(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setSourceFileName(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setSuperInterfaceNames(char[][])",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setSuperclassName(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.toString()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.TypeParameter(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.TypeParameter.getBounds()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getDeclaringMember()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.TypeVector()",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.TypeVector(IType)",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.TypeVector(IType[])",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.add(IType)",1,2,2
"org.eclipse.jdt.internal.core.TypeVector.addAll(IType[])",1,2,2
"org.eclipse.jdt.internal.core.TypeVector.contains(IType)",3,2,3
"org.eclipse.jdt.internal.core.TypeVector.copy()",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.elementAt(int)",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.elements()",2,2,3
"org.eclipse.jdt.internal.core.TypeVector.find(IType)",3,1,3
"org.eclipse.jdt.internal.core.TypeVector.remove(IType)",3,3,3
"org.eclipse.jdt.internal.core.TypeVector.removeAll()",1,1,2
"org.eclipse.jdt.internal.core.TypeVector.toString()",1,2,2
"org.eclipse.jdt.internal.core.UserLibrary.UserLibrary(IClasspathEntry[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.UserLibrary.createFromString(Reader)",2,9,9
"org.eclipse.jdt.internal.core.UserLibrary.equals(Object)",5,5,7
"org.eclipse.jdt.internal.core.UserLibrary.getEntries()",1,1,1
"org.eclipse.jdt.internal.core.UserLibrary.hashCode()",1,2,3
"org.eclipse.jdt.internal.core.UserLibrary.isSystemLibrary()",1,1,1
"org.eclipse.jdt.internal.core.UserLibrary.serialize()",1,4,4
"org.eclipse.jdt.internal.core.UserLibrary.toString()",2,2,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.UserLibraryClasspathContainer(String)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getClasspathEntries()",2,2,2
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getDescription()",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getKind()",2,2,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getPath()",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getUserLibrary()",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.canUpdateClasspathContainer(IPath,IJavaProject)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.getComparisonID(IPath,IJavaProject)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.getDescription(IPath,IJavaProject)",2,2,2
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.initialize(IPath,IJavaProject)",1,3,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.isUserLibraryContainer(IPath)",1,3,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.requestClasspathContainerUpdate(IPath,IJavaProject,IClasspathContainer)",1,3,3
"org.eclipse.jdt.internal.core.UserLibraryManager.UserLibraryManager()",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryManager.getLibraryMap()",1,5,7
"org.eclipse.jdt.internal.core.UserLibraryManager.getUserLibrary(String)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryManager.getUserLibraryNames()",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryManager.internalSetUserLibrary(String,UserLibrary,boolean,boolean,IProgressMonitor)",4,5,9
"org.eclipse.jdt.internal.core.UserLibraryManager.rebindClasspathEntries(String,boolean,IProgressMonitor)",5,7,8
"org.eclipse.jdt.internal.core.UserLibraryManager.recreatePersistedUserLibraryEntry(String,String,boolean,boolean)",1,5,5
"org.eclipse.jdt.internal.core.UserLibraryManager.setUserLibraries(String[],UserLibrary[],IProgressMonitor)",1,2,3
"org.eclipse.jdt.internal.core.UserLibraryManager.setUserLibrary(String,UserLibrary,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.XMLWriter.XMLWriter(Writer)",1,1,1
"org.eclipse.jdt.internal.core.XMLWriter.appendEscapedChar(StringBuffer,char)",1,2,2
"org.eclipse.jdt.internal.core.XMLWriter.endTag(String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.XMLWriter.getEscaped(String)",1,2,2
"org.eclipse.jdt.internal.core.XMLWriter.getReplacement(char)",6,2,6
"org.eclipse.jdt.internal.core.XMLWriter.printTabulation()",1,2,2
"org.eclipse.jdt.internal.core.XMLWriter.printTag(String,HashMap,boolean,boolean,boolean)",1,6,6
"org.eclipse.jdt.internal.core.XMLWriter.startTag(String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.AbortIncrementalBuildException.AbortIncrementalBuildException(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.AbstractImageBuilder(JavaBuilder)",1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(CompilationResult)",6,10,13
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.cleanUp()",1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(SourceFile[])",1,10,12
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(SourceFile[],SourceFile[])",2,4,8
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.createFolder(IPath,IContainer)",2,2,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.createProblemFor(IResource,IMember,String,String)",1,5,6
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.finishedWith(String,CompilationResult,char[],ArrayList,ArrayList)",5,4,5
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.internalException(CoreException)",2,1,2
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.isExcludedFromProject(IPath)",5,2,5
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.newCompiler()",1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.storeProblemsFor(SourceFile,IProblem[])",4,4,9
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.storeTasksFor(SourceFile,IProblem[])",2,4,8
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.updateProblemsFor(SourceFile,CompilationResult)",2,1,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.updateTasksFor(SourceFile,CompilationResult)",2,1,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(ClassFile,SourceFile,boolean)",1,2,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFileBytes(byte[],IFile,String,boolean,boolean)",1,5,5
"org.eclipse.jdt.internal.core.builder.AdditionalTypeCollection.AdditionalTypeCollection(char[][],char[][][],char[][])",1,1,1
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.BatchImageBuilder(JavaBuilder)",1,1,1
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.addAllSourceFiles(ArrayList)",7,8,14
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build()",1,5,5
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(boolean)",6,18,25
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack(ClasspathMultiDirectory,boolean)",11,8,16
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyPackages(ClasspathMultiDirectory)",6,4,8
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.findOriginalResource(IPath)",4,3,4
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.BuildNotifier(IProgressMonitor,IProject)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.aboutToCompile(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.begin()",1,2,2
"org.eclipse.jdt.internal.core.builder.BuildNotifier.checkCancel()",2,2,3
"org.eclipse.jdt.internal.core.builder.BuildNotifier.checkCancelWithinCompiler()",2,4,4
"org.eclipse.jdt.internal.core.builder.BuildNotifier.compiled(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.done()",1,2,2
"org.eclipse.jdt.internal.core.builder.BuildNotifier.problemsMessage()",2,15,21
"org.eclipse.jdt.internal.core.builder.BuildNotifier.resetProblemCounters()",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.setCancelling(boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.setProgressPerCompilationUnit(float)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.subTask(String)",2,2,4
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProblemCounts(IMarker[],IProblem[])",13,11,19
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProblemCounts(IProblem[])",1,2,3
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProgress(float)",1,4,4
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProgressDelta(float)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.ClasspathDirectory(IContainer,boolean,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.directoryList(String)",4,7,10
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.doesFileExist(String,String,String)",4,2,4
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.equals(Object)",5,3,6
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.findClass(String,String,String)",9,7,11
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.getProjectRelativePath()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.isExcluded(IResource)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.isOutputFolder()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.isPackage(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.reset()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathJar.ClasspathJar(IFile,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.ClasspathJar(String,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathJar.ClasspathJar(ZipFile,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathJar.PackageCacheEntry.PackageCacheEntry(long,long,SimpleSet)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathJar.cleanup()",1,2,4
"org.eclipse.jdt.internal.core.builder.ClasspathJar.equals(Object)",5,3,6
"org.eclipse.jdt.internal.core.builder.ClasspathJar.findClass(String,String,String)",4,2,5
"org.eclipse.jdt.internal.core.builder.ClasspathJar.findPackageSet(ZipFile)",5,3,7
"org.eclipse.jdt.internal.core.builder.ClasspathJar.getProjectRelativePath()",2,1,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.isPackage(String)",2,4,5
"org.eclipse.jdt.internal.core.builder.ClasspathJar.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forBinaryFolder(IContainer,boolean,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forLibrary(IFile,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forLibrary(String,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forSourceFolder(IContainer,IContainer,char[][],char[][])",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.isOutputFolder()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.reset()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.ClasspathMultiDirectory(IContainer,IContainer,char[][],char[][])",1,1,5
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.equals(Object)",3,4,6
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.isExcluded(IResource)",3,3,4
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.ImageBuilderInternalException(CoreException)",1,1,1
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.getLocalizedMessage()",3,3,4
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.getThrowable()",1,1,1
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.printStackTrace()",1,2,2
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.IncrementalImageBuilder(JavaBuilder)",1,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.addAffectedSourceFiles()",12,11,20
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.addDependentsOf(IPath,boolean)",1,5,6
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(SimpleLookupTable)",9,14,16
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.cleanUp()",1,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findAffectedSourceFiles(IResourceDelta,ClasspathLocation[],IProject)",7,12,12
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findAffectedSourceFiles(IResourceDelta,int,StringSet)",11,17,21
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findSourceFiles(IResourceDelta)",6,12,12
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findSourceFiles(IResourceDelta,ClasspathMultiDirectory,int)",18,40,53
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.finishedWith(String,CompilationResult,char[],ArrayList,ArrayList)",4,5,8
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.removeClassFile(IPath,IContainer)",1,5,5
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.removeSecondaryTypes()",1,6,7
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.resetCollections()",1,2,2
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.updateProblemsFor(SourceFile,CompilationResult)",2,1,3
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.updateTasksFor(SourceFile,CompilationResult)",2,1,3
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileBytes(byte[],IFile,String,boolean,boolean)",3,10,11
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IFile,String,byte[])",5,6,10
"org.eclipse.jdt.internal.core.builder.JavaBuilder.build(int,Map,IProgressMonitor)",2,22,23
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll()",1,2,3
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(SimpleLookupTable)",1,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildFinished()",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildStarting()",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(IProgressMonitor)",2,6,7
"org.eclipse.jdt.internal.core.builder.JavaBuilder.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.clearLastState()",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.filterExtraResource(IResource)",9,7,10
"org.eclipse.jdt.internal.core.builder.JavaBuilder.findDeltas()",8,13,17
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(IProject)",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getProblemsFor(IResource)",2,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getRequiredProjects(boolean)",3,7,12
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getTasksFor(IResource)",2,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.hasClasspathChanged()",10,11,20
"org.eclipse.jdt.internal.core.builder.JavaBuilder.hasStructuralDelta()",7,8,9
"org.eclipse.jdt.internal.core.builder.JavaBuilder.initializeBuilder()",6,8,12
"org.eclipse.jdt.internal.core.builder.JavaBuilder.isClasspathBroken(IClasspathEntry[],IProject)",4,2,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.isWorthBuilding()",6,8,10
"org.eclipse.jdt.internal.core.builder.JavaBuilder.mustPropagateStructuralChanges()",4,5,5
"org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(IProject,DataInputStream)",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.recordNewState(State)",1,4,5
"org.eclipse.jdt.internal.core.builder.JavaBuilder.removeProblemsAndTasksFor(IResource)",1,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.removeProblemsFor(IResource)",1,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.removeTasksFor(IResource)",1,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.toString()",1,2,2
"org.eclipse.jdt.internal.core.builder.JavaBuilder.writeState(Object,DataOutputStream)",1,1,1
"org.eclipse.jdt.internal.core.builder.MissingClassFileException.MissingClassFileException(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.MissingSourceFileException.MissingSourceFileException(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.NameEnvironment(IJavaProject)",1,1,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.NameEnvironment(IWorkspaceRoot,JavaProject,SimpleLookupTable)",1,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.cleanup()",1,3,3
"org.eclipse.jdt.internal.core.builder.NameEnvironment.computeClasspathLocations(IWorkspaceRoot,JavaProject,SimpleLookupTable)",20,31,43
"org.eclipse.jdt.internal.core.builder.NameEnvironment.createFolder(IContainer)",1,2,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.findClass(String,char[])",12,9,15
"org.eclipse.jdt.internal.core.builder.NameEnvironment.findType(char[],char[][])",2,2,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.findType(char[][])",2,2,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.isPackage(String)",3,2,3
"org.eclipse.jdt.internal.core.builder.NameEnvironment.isPackage(char[][],char[])",1,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.setNames(String[],SourceFile[])",1,3,3
"org.eclipse.jdt.internal.core.builder.NameSet.NameSet(int)",1,1,2
"org.eclipse.jdt.internal.core.builder.NameSet.add(char[])",3,3,5
"org.eclipse.jdt.internal.core.builder.NameSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.builder.NameSet.toString()",1,1,3
"org.eclipse.jdt.internal.core.builder.ProblemFactory.ProblemFactory(Locale)",1,1,1
"org.eclipse.jdt.internal.core.builder.ProblemFactory.getProblemFactory(Locale)",1,2,2
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.QualifiedNameSet(int)",1,1,2
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.add(char[][])",4,3,6
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.toString()",1,3,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.ReferenceCollection(char[][][],char[][])",1,1,1
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[])",3,1,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[][])",3,1,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[][][],char[][])",12,18,20
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internQualifiedNames(StringSet)",3,3,5
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internQualifiedNames(char[][][])",9,4,10
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internSimpleNames(StringSet)",3,3,5
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internSimpleNames(char[][],boolean)",9,4,11
"org.eclipse.jdt.internal.core.builder.SourceFile.SourceFile(IFile,ClasspathMultiDirectory)",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.SourceFile(IFile,ClasspathMultiDirectory,boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.equals(Object)",3,2,4
"org.eclipse.jdt.internal.core.builder.SourceFile.extractTypeName()",1,3,3
"org.eclipse.jdt.internal.core.builder.SourceFile.getContents()",1,2,2
"org.eclipse.jdt.internal.core.builder.SourceFile.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.typeLocator()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.State()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.State(JavaBuilder)",1,1,1
"org.eclipse.jdt.internal.core.builder.State.copyFrom(State)",1,6,6
"org.eclipse.jdt.internal.core.builder.State.getDefinedTypeNamesFor(String)",2,1,2
"org.eclipse.jdt.internal.core.builder.State.getStructurallyChangedTypes(State)",3,3,5
"org.eclipse.jdt.internal.core.builder.State.isDuplicateLocator(String,String)",1,2,2
"org.eclipse.jdt.internal.core.builder.State.isKnownPackage(String)",3,9,10
"org.eclipse.jdt.internal.core.builder.State.read(IProject,DataInputStream)",5,24,29
"org.eclipse.jdt.internal.core.builder.State.readNames(DataInputStream)",1,3,3
"org.eclipse.jdt.internal.core.builder.State.readRestriction(DataInputStream)",2,2,2
"org.eclipse.jdt.internal.core.builder.State.record(String,char[][][],char[][],char[],ArrayList)",1,3,3
"org.eclipse.jdt.internal.core.builder.State.recordLocatorForType(String,String)",1,2,2
"org.eclipse.jdt.internal.core.builder.State.recordStructuralDependency(IProject,State)",1,3,3
"org.eclipse.jdt.internal.core.builder.State.removeLocator(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.State.removePackage(IResourceDelta)",2,4,5
"org.eclipse.jdt.internal.core.builder.State.removeQualifiedTypeName(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.State.tagAsNoopBuild()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.tagAsStructurallyChanged()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.wasNoopBuild()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.wasStructurallyChanged(IProject,State)",3,3,4
"org.eclipse.jdt.internal.core.builder.State.wasStructurallyChanged(String)",1,3,3
"org.eclipse.jdt.internal.core.builder.State.write(DataOutputStream)",5,37,41
"org.eclipse.jdt.internal.core.builder.State.writeNames(char[][],DataOutputStream)",1,3,4
"org.eclipse.jdt.internal.core.builder.State.writeRestriction(AccessRestriction,DataOutputStream)",1,2,2
"org.eclipse.jdt.internal.core.builder.StringSet.StringSet(int)",1,1,2
"org.eclipse.jdt.internal.core.builder.StringSet.add(String)",3,3,5
"org.eclipse.jdt.internal.core.builder.StringSet.clear()",1,1,2
"org.eclipse.jdt.internal.core.builder.StringSet.includes(String)",3,2,4
"org.eclipse.jdt.internal.core.builder.StringSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.builder.StringSet.toString()",1,1,3
"org.eclipse.jdt.internal.core.builder.WorkQueue.WorkQueue()",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.add(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.addAll(SourceFile[])",1,2,2
"org.eclipse.jdt.internal.core.builder.WorkQueue.clear()",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.finished(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.isCompiled(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.isWaiting(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ASTRewriteAnalyzer(IDocument,CompilationUnit,TextEdit,RewriteEventStore,NodeInfoStore,Map)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.checkForRangeEnd(ASTNode)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.checkForRangeStart(ASTNode)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getEndOfNode(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getInitialIndent()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getNodeIndent(int)",4,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getOriginalNode(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getSeparatorString(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getStartOfNextNode(int,int)",3,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.initCopyRangeChecks(ASTNode,StructuralPropertyDescriptor)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.insertAfterSeparator(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.rewriteList(ASTNode,StructuralPropertyDescriptor,int,String)",2,20,24
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.rewriteList(ASTNode,StructuralPropertyDescriptor,int,String,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.ParagraphListRewriter(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.containsOnlyWhitespaces(IDocument,int)",1,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.countEmptyLines(ASTNode)",1,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getInitialIndent()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getNewLines(int)",7,7,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getNode(int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getSeparatorString(int)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter.SwitchListRewriter(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter.getNodeIndent(int)",1,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEdit(TextEdit)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEditGroup(TextEditGroup,TextEdit)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.changeNotSupported(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.createIndentString(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePostVisit(ASTNode,Stack)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePreVisit(CopySourceInfo[],Stack)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextCopy(TextEdit,int,int,String,int,TextEditGroup)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextInsert(int,ASTNode,int,boolean,TextEditGroup)",1,11,13
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextInsert(int,String,TextEditGroup)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemove(int,int,TextEditGroup)",2,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit(int,int,ASTNode,TextEditGroup)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextReplace(int,int,String,TextEditGroup)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTNode,StructuralPropertyDescriptor,int)",3,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitList(List,int,boolean)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren(ASTNode)",1,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.findTagNameStart(ASTNode)",1,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getChangeKind(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getCopySourceEdit(CopySourceInfo)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getCurrentLine(String,int)",3,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getDimensions(ArrayType)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getDocument()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getEditGroup(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getEditGroup(RewriteEvent)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getElementType(ArrayType)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getEvent(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedEnd(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedLength(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedOffset(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getIndent(int)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getIndentAtOffset(int)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getLineDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getNewValue(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getOriginalValue(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getPosAfterLeftBrace(int)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getScanner()",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.handleException(Throwable)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.hasChildrenChanges(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isAllOfKind(RewriteEvent[],int)",3,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isChanged(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isCollapsed(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isInsertBoundToPrevious(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.postVisit(ASTNode)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.preVisit(ASTNode)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.replaceOperation(int,String,TextEditGroup)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteBodyNode(ASTNode,StructuralPropertyDescriptor,int,int,int,BlockContext)",6,8,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteExtraDimensions(ASTNode,StructuralPropertyDescriptor,int)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteExtraDimensions(int,int,int,TextEditGroup)",1,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteJavadoc(ASTNode,StructuralPropertyDescriptor)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteMethodBody(MethodDeclaration,int)",5,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteModifiers(ASTNode,StructuralPropertyDescriptor,int)",4,10,22
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteModifiers2(ASTNode,ChildListPropertyDescriptor,int)",4,8,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteNode(ASTNode,StructuralPropertyDescriptor,int,Prefix)",5,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteNodeList(ASTNode,StructuralPropertyDescriptor,int,String,String)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteOperation(ASTNode,StructuralPropertyDescriptor,int)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteOptionalQualifier(ASTNode,StructuralPropertyDescriptor,int)",5,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteOptionalTypeParameters(ASTNode,StructuralPropertyDescriptor,int,String)",5,9,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteParagraphList(ASTNode,StructuralPropertyDescriptor,int,int,int,int)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteRequiredNode(ASTNode,StructuralPropertyDescriptor)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteReturnType(MethodDeclaration,boolean,boolean)",2,5,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AnnotationTypeDeclaration)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AnnotationTypeMemberDeclaration)",2,4,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AnonymousClassDeclaration)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayAccess)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayCreation)",2,15,15
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayInitializer)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayType)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AssertStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Assignment)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Block)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(BooleanLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(BreakStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CastExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CatchClause)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CharacterLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ClassInstanceCreation)",2,9,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CompilationUnit)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ConditionalExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ConstructorInvocation)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ContinueStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(DoStatement)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EmptyStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EnhancedForStatement)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EnumConstantDeclaration)",2,13,13
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EnumDeclaration)",2,9,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ExpressionStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(FieldAccess)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(FieldDeclaration)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ForStatement)",2,7,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(IfStatement)",2,9,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ImportDeclaration)",2,11,11
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(InfixExpression)",2,10,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Initializer)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(InstanceofExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Javadoc)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(LabeledStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MarkerAnnotation)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MemberRef)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MemberValuePair)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodDeclaration)",2,7,12
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodInvocation)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodRef)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodRefParameter)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Modifier)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NormalAnnotation)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NullLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NumberLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PackageDeclaration)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ParameterizedType)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ParenthesizedExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PostfixExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PrefixExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PrimitiveType)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(QualifiedName)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(QualifiedType)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ReturnStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SimpleName)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SimpleType)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SingleMemberAnnotation)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SingleVariableDeclaration)",2,10,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(StringLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperConstructorInvocation)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperFieldAccess)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperMethodInvocation)",2,7,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SwitchCase)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SwitchStatement)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SynchronizedStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TagElement)",3,7,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TextElement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ThisExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ThrowStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TryStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeDeclaration)",3,18,26
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeDeclarationStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeParameter)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(VariableDeclarationExpression)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(VariableDeclarationFragment)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(VariableDeclarationStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(WhileStatement)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(WildcardType)",2,5,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.ASTRewriteFlattener(RewriteEventStore)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.asString(ASTNode,RewriteEventStore)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getAttribute(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getBooleanAttribute(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getChildList(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getChildNode(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getIntAttribute(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getResult()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.printModifiers(int,StringBuffer)",1,12,12
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.reset()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AnnotationTypeDeclaration)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AnnotationTypeMemberDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayAccess)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayCreation)",1,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayType)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AssertStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Assignment)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Block)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(BlockComment)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(BooleanLiteral)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(BreakStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CastExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CatchClause)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ClassInstanceCreation)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CompilationUnit)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ConstructorInvocation)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ContinueStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(DoStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EmptyStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EnumConstantDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EnumDeclaration)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(FieldAccess)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(FieldDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ForStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(IfStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ImportDeclaration)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(InfixExpression)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Initializer)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Javadoc)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(LabeledStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(LineComment)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MemberRef)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MemberValuePair)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodDeclaration)",1,8,8
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodInvocation)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodRef)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodRefParameter)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Modifier)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NullLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NumberLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PackageDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ParameterizedType)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PostfixExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PrefixExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PrimitiveType)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(QualifiedName)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(QualifiedType)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ReturnStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SimpleName)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SimpleType)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SingleVariableDeclaration)",1,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperConstructorInvocation)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperFieldAccess)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperMethodInvocation)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SwitchCase)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SwitchStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TagElement)",1,5,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TextElement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ThisExpression)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ThrowStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TryStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeDeclaration)",1,5,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeDeclarationStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeParameter)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(VariableDeclarationExpression)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(VariableDeclarationFragment)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(VariableDeclarationStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(WildcardType)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visitList(ASTNode,StructuralPropertyDescriptor,String)",1,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visitList(ASTNode,StructuralPropertyDescriptor,String,String,String)",1,4,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ASTRewriteFormatter(NodeInfoStore,RewriteEventStore,Map,String)",1,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefix.BlockFormattingPrefix(String,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefix.getPrefixAndSuffix(int,String,ASTNode,RewriteEventStore)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefixSuffix.BlockFormattingPrefixSuffix(String,String,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefixSuffix.getPrefixAndSuffix(int,String,ASTNode,RewriteEventStore)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ConstPrefix.ConstPrefix(String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ConstPrefix.getPrefix(int,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.ExtendedFlattener(RewriteEventStore)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.addMarker(Object,int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.fixupLength(Object,int)",3,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.getMarkers()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.postVisit(ASTNode)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.preVisit(ASTNode)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.visit(Block)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.FormattingPrefix.FormattingPrefix(String,String,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.FormattingPrefix.getPrefix(int,String)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.createDocument(String,Position[])",4,4,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.createIndentString(int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.evaluateFormatterEdit(String,TextEdit,Position[])",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.formatNode(ASTNode,String,int,String,Map)",6,7,21
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.formatString(int,String,int,String,Map)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getEventStore()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getFormattedResult(ASTNode,int,Collection)",3,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getOptions()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getPlaceholders()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getTabWidth()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.shifEdit(TextEdit,int)",5,6,7
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.Indents()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.changeIndent(String,int,int,String,String)",2,3,5
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.computeIndent(String,int)",4,3,5
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.computeIndentLength(String,int,int)",5,3,7
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.getChangeIndentEdits(String,int,int,String)",2,4,5
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.getIndentString(String,int)",6,5,7
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.isIndentChar(char)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.isLineDelimiterChar(char)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.trimIndent(String,int,int)",7,4,9
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.ListRewriteEvent(List)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.ListRewriteEvent(RewriteEvent[])",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getChangeKind()",4,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getChangeKind(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getEntries()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getIndex(ASTNode,int)",4,4,6
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getNewValue()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getOriginalValue()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.insert(ASTNode,int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.isListRewrite()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.removeEntry(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.replaceEntry(ASTNode,ASTNode)",4,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.revertChange(NodeRewriteEvent)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.setNewValue(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.toString()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.CopyPlaceholderData.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.NodeInfoStore(AST)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.StringPlaceholderData.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.clear()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.createCollapsePlaceholder()",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.getPlaceholderData(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.isCollapsed(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.markAsCopyTarget(ASTNode,CopySourceInfo)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.markAsStringPlaceholder(ASTNode,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.newPlaceholderNode(int)",2,2,7
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.setPlaceholderData(ASTNode,PlaceholderData)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.NodeRewriteEvent(Object,Object)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getChangeKind()",5,1,5
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getNewValue()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getOriginalValue()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.isListRewrite()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.setNewValue(Object)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.toString()",2,2,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.CopySourceInfo(ASTNode,StructuralPropertyDescriptor,ASTNode,ASTNode,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.getEndNode()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.getStartNode()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.toString()",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfoSorter.compare(Object,Object)",3,1,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.EventHolder.EventHolder(ASTNode,StructuralPropertyDescriptor,RewriteEvent)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.EventHolder.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.ParentIterator()",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.hasNext()",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.next()",4,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.remove()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.PropertyLocation(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.getParent()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.getProperty()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.RewriteEventStore()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.accessOriginalValue(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.addEvent(ASTNode,StructuralPropertyDescriptor,RewriteEvent)",3,4,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.assertNoOverlap(CopySourceInfo)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.clear()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.doMarkMovedAsRemoved(CopySourceInfo)",1,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.findEvent(Object,int)",6,4,6
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getChangeKind(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getChangeRootIterator()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getEvent(ASTNode,StructuralPropertyDescriptor)",4,2,7
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getEventEditGroup(RewriteEvent)",2,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getListEvent(ASTNode,StructuralPropertyDescriptor,boolean)",1,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getNewValue(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getNodeCopySources(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getNodeEvent(ASTNode,StructuralPropertyDescriptor,boolean)",1,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getOriginalValue(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getPropertyLocation(Object,int)",7,5,7
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getRangeCopySources(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getTrackedNodeData(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.hasChangedProperties(ASTNode)",4,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.hasRangeCopySources(ASTNode,StructuralPropertyDescriptor)",4,2,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.internalGetCopySources(List,ASTNode)",2,4,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isInsertBoundToPrevious(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isNewNode(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isNodeInEvent(RewriteEvent,Object,int)",3,3,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markAsCopySource(ASTNode,StructuralPropertyDescriptor,ASTNode,boolean)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markAsRangeCopySource(ASTNode,StructuralPropertyDescriptor,ASTNode,ASTNode,boolean)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markAsTracked(ASTNode,TextEditGroup)",2,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markMovedNodesRemoved()",2,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setEventEditGroup(RewriteEvent,TextEditGroup)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setInsertBoundToPrevious(ASTNode)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setNodePropertyMapper(INodePropertyMapper)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setTrackedNodeData(ASTNode,TextEditGroup)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.toString()",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.validateHasChildProperty(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.validateIsListProperty(StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.validateIsNodeProperty(StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier.SourceModifier(int,String,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier.copy()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier.getModifications(String)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.TokenScanner(IDocument)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.TokenScanner(IScanner)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.TokenScanner(IScanner,IDocument)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.createError(int,String,Throwable)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getCurrentEndOffset()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getCurrentLength()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getCurrentStartOffset()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getLineEnd(int)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getLineOfOffset(int)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getNextEndOffset(int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getNextStartOffset(int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getPreviousTokenEndOffset(int,int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getScanner()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenCommentEnd(int,int)",5,3,9
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenCommentStart(int,int)",3,4,13
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenEndOffset(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenStartOffset(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.isComment(int)",1,1,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.isModifier(int)",3,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readNext(boolean)",3,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readNext(int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readNextWithEOF(boolean)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readToToken(int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readToToken(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.setOffset(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition.TrackedNodePosition(TextEditGroup,ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition.getLength()",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition.getStartPosition()",2,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.EvaluationContextWrapper(EvaluationContext,JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.allVariables()",1,1,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.checkBuilderState()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,CompletionRequestor,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,ICodeCompletionRequestor)",3,2,4
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeSelect(String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeSelect(String,int,int,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.deleteVariable(IGlobalVariable)",2,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.evaluateCodeSnippet(String,ICodeSnippetRequestor,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.evaluateCodeSnippet(String,String[],String[],int[],IType,boolean,boolean,ICodeSnippetRequestor,IProgressMonitor)",1,12,12
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.evaluateVariable(IGlobalVariable,ICodeSnippetRequestor,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getBuildNameEnvironment()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getImports()",1,1,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getInfrastructureEvaluationContext()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getInfrastructureEvaluationRequestor(ICodeSnippetRequestor)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getProblemFactory()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getProject()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.handleInstallException(InstallException)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.newVariable(String,String,String)",1,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.setImports(String[])",1,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.setPackageName(String)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.validateImports(ICodeSnippetRequestor)",1,2,2
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.GlobalVariableWrapper(GlobalVariable)",1,1,1
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.getInitializer()",2,1,2
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.getName()",1,1,1
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.getTypeName()",1,1,1
"org.eclipse.jdt.internal.core.eval.RequestorWrapper.RequestorWrapper(ICodeSnippetRequestor)",1,1,1
"org.eclipse.jdt.internal.core.eval.RequestorWrapper.acceptClassFiles(ClassFile[],char[])",1,2,4
"org.eclipse.jdt.internal.core.eval.RequestorWrapper.acceptProblem(IProblem,char[],int)",1,2,3
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.ChangeCollector(TypeHierarchy)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addAffectedChildren(IJavaElementDelta)",2,3,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(ICompilationUnit,IJavaElementDelta)",2,4,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IImportContainer,IJavaElementDelta)",4,7,9
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IImportDeclaration,IJavaElementDelta)",3,6,8
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IMember,IJavaElementDelta)",2,4,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IType,IJavaElementDelta)",2,4,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addTypeAddition(IType,SimpleDelta)",2,9,9
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addTypeChange(IType,int,SimpleDelta)",2,13,14
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addTypeRemoval(IType,SimpleDelta)",2,4,5
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.getAllTypesFromElement(IJavaElement,ArrayList)",2,5,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.getAllTypesFromHierarchy(JavaElement,ArrayList)",2,6,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.hasSuperTypeChange(IType)",5,4,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.hasVisibilityChange(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.needsRefresh()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.toString()",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.HierarchyBinaryType(int,char[],char[],char[],char[][],char)",2,3,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getEnclosingTypeName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getFields()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getGenericSignature()",1,7,8
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getKind()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getMemberTypes()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getMethods()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getModifiers()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getSuperclassName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getTagBits()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isLocal()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isMember()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.recordSuperType(char[],char[],char)",3,5,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.sourceFileName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.toString()",2,8,11
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.HierarchyBuilder(TypeHierarchy)",1,5,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.buildSupertypes()",2,2,4
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.connect(IGenericType,IGenericType,IGenericType[])",3,13,20
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.createCompilationUnitFromPath(Openable,String)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.createInfoFromClassFile(Openable,String)",1,5,5
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.createInfoFromClassFileInJar(Openable)",1,7,7
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.getHandle(IGenericType)",7,6,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.getType()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.lookupBinaryHandle(IBinaryType)",3,3,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.worked(IProgressMonitor,int)",3,3,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.HierarchyResolver(INameEnvironment,Map,HierarchyBuilder,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.HierarchyResolver(LookupEnvironment,HierarchyBuilder)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.MissingType(String)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.getKind()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.getModifiers()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.toString()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(IBinaryType,PackageBinding,AccessRestriction)",1,1,2
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(ICompilationUnit,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(ISourceType[],PackageBinding,AccessRestriction)",1,3,4
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.findSuperClass(IGenericType,ReferenceBinding)",10,8,12
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.findSuperInterfaces(IGenericType,ReferenceBinding)",9,11,19
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.remember(IGenericType,ReferenceBinding)",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.remember(IType,ReferenceBinding)",3,5,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.rememberAllTypes(CompilationUnitDeclaration,ICompilationUnit,boolean)",1,5,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.rememberWithMemberTypes(TypeDeclaration,IType)",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.reportHierarchy(IType,CompilationUnitDeclaration,ReferenceBinding)",4,8,12
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.reset()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(IGenericType)",1,5,7
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(Openable[],HashSet,IProgressMonitor)",7,26,39
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.setEnvironment(LookupEnvironment,HierarchyBuilder)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.setFocusType(char[][])",2,2,4
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.subOrSuperOfFocus(ReferenceBinding)",4,2,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.subTypeOfType(ReferenceBinding,ReferenceBinding)",7,4,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.worked(IProgressMonitor,int)",3,3,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.HierarchyType(IType,int,char[],int,char[],char[][])",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.getKind()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.getModifiers()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.IndexBasedHierarchyBuilder(TypeHierarchy,IJavaSearchScope)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue.add(char[])",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue.retrieve()",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue.toString()",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build(boolean)",1,4,7
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildForProject(JavaProject,ArrayList,ICompilationUnit[],HashSet,IProgressMonitor)",5,10,12
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildFromPotentialSubtypes(String[],HashSet,IProgressMonitor)",5,18,24
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.createCompilationUnitFromPath(Openable,String)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.createInfoFromClassFile(Openable,String)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.createInfoFromClassFileInJar(Openable)",2,3,3
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.determinePossibleSubTypes(HashSet,IProgressMonitor)",1,5,5
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.searchAllPossibleSubTypes(IType,IJavaSearchScope,Map,IPathRequestor,int,IProgressMonitor)",4,9,13
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.RegionBasedHierarchyBuilder(TypeHierarchy)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.build(boolean)",1,2,5
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.createTypeHierarchyBasedOnRegion(ArrayList,IProgressMonitor)",1,4,5
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.determineOpenablesInRegion(IProgressMonitor)",2,6,11
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.injectAllOpenablesForJavaProject(IJavaProject,ArrayList)",2,2,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.injectAllOpenablesForPackageFragment(IPackageFragment,ArrayList)",1,5,6
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.injectAllOpenablesForPackageFragmentRoot(IPackageFragmentRoot,ArrayList)",1,2,3
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.RegionBasedTypeHierarchy(IRegion,IJavaProject,ICompilationUnit[],IType,boolean)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.compute()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.initializeRegions()",1,4,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.isAffectedByOpenable(IJavaElementDelta,IJavaElement)",3,4,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.javaProject()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(IType)",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(IType[])",1,4,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType(IType)",1,8,8
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.TypeHierarchy()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.TypeHierarchy(IType,ICompilationUnit[],IJavaProject,boolean)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.TypeHierarchy(IType,ICompilationUnit[],IJavaSearchScope,boolean)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addAllCheckingDuplicates(ArrayList,IType[])",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addInterface(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addRootClass(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addSubtype(IType,IType)",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addTypeHierarchyChangedListener(ITypeHierarchyChangedListener)",1,3,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.bytesToFlags(byte[])",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.cacheFlags(IType,int)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.cacheSuperInterfaces(IType,IType[])",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.cacheSuperclass(IType,IType)",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.checkCanceled()",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute()",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.contains(IType)",4,1,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.elementChanged(ElementChangedEvent)",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.exists()",2,3,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.fireChange()",2,4,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.flagsToBytes(Integer)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllClasses()",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllInterfaces()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSubtypes(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSubtypesForType(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSubtypesForType0(IType,ArrayList)",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSuperInterfaces(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSuperInterfaces0(IType,ArrayList)",1,4,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSuperclasses(IType)",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSupertypes(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSupertypes0(IType,ArrayList)",1,4,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllTypes()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getCachedFlags(IType)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getExtendingInterfaces(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getExtendingInterfaces0(IType)",3,5,6
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getImplementingClasses(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getImplementingClasses0(IType)",3,4,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getRootClasses()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getRootInterfaces()",1,3,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSubclasses(IType)",3,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSubtypes(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSubtypesForType(IType)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSuperInterfaces(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSuperclass(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSupertypes(IType)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getType()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.growAndAddToArray(IType[],IType)",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.growAndAddToArray(IType[],IType[])",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasFineGrainChanges()",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasSubtypeNamed(String)",4,4,6
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasSupertype(String)",3,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasTypeNamed(String)",3,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.includesTypeOrSupertype(IType)",7,6,10
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.initialize(int)",1,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.initializeRegions()",1,5,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffected(IJavaElementDelta)",6,6,6
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByChildren(IJavaElementDelta)",4,3,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByJavaModel(IJavaElementDelta,IJavaElement)",3,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByJavaProject(IJavaElementDelta,IJavaElement)",7,7,13
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByOpenable(IJavaElementDelta,IJavaElement)",10,15,19
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByPackageFragment(IJavaElementDelta,PackageFragment)",4,4,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByPackageFragmentRoot(IJavaElementDelta,IJavaElement)",11,9,13
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isInterface(IType)",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.javaProject()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.load(IType,InputStream,WorkingCopyOwner)",6,17,22
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.packageRegionContainsSamePackageFragment(PackageFragment)",3,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.readUntil(InputStream,byte)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.readUntil(InputStream,byte,int)",2,4,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(IProgressMonitor)",1,9,11
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.removeTypeHierarchyChangedListener(ITypeHierarchyChangedListener)",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.store(OutputStream,IProgressMonitor)",1,22,27
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.subtypesIncludeSupertypeOf(IType)",4,8,11
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.toString()",1,8,8
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.toString(StringBuffer,IType,int,boolean)",1,4,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.worked(int)",1,2,2
"org.eclipse.jdt.internal.core.index.DiskIndex.DiskIndex(String)",1,1,1
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList.IntList(int[])",1,1,1
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList.add(int)",1,2,3
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList.asArray()",1,1,1
"org.eclipse.jdt.internal.core.index.DiskIndex.addDocumentNames(String,MemoryIndex)",1,12,12
"org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResult(HashtableOfObject,char[],HashtableOfObject,MemoryIndex)",1,6,7
"org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResults(char[][],char[],int,MemoryIndex)",2,10,11
"org.eclipse.jdt.internal.core.index.DiskIndex.computeDocumentNames(String[],int[],SimpleLookupTable,MemoryIndex)",7,15,28
"org.eclipse.jdt.internal.core.index.DiskIndex.copyQueryResults(HashtableOfObject,int)",1,8,8
"org.eclipse.jdt.internal.core.index.DiskIndex.getIndexFile()",2,1,2
"org.eclipse.jdt.internal.core.index.DiskIndex.initialize(boolean)",6,9,9
"org.eclipse.jdt.internal.core.index.DiskIndex.initializeFrom(DiskIndex,File)",3,6,7
"org.eclipse.jdt.internal.core.index.DiskIndex.mergeCategories(DiskIndex,int[],DataOutputStream)",1,6,6
"org.eclipse.jdt.internal.core.index.DiskIndex.mergeCategory(char[],DiskIndex,int[],DataOutputStream)",5,8,12
"org.eclipse.jdt.internal.core.index.DiskIndex.mergeWith(MemoryIndex)",5,14,15
"org.eclipse.jdt.internal.core.index.DiskIndex.readAllDocumentNames()",2,2,4
"org.eclipse.jdt.internal.core.index.DiskIndex.readCategoryTable(char[],boolean)",4,6,11
"org.eclipse.jdt.internal.core.index.DiskIndex.readChunk(String[],DataInputStream,int,int)",1,5,5
"org.eclipse.jdt.internal.core.index.DiskIndex.readDocumentArray(DataInputStream)",2,4,6
"org.eclipse.jdt.internal.core.index.DiskIndex.readDocumentName(int)",1,2,4
"org.eclipse.jdt.internal.core.index.DiskIndex.readDocumentNumbers(Object)",2,1,2
"org.eclipse.jdt.internal.core.index.DiskIndex.readHeaderInfo(RandomAccessFile)",1,3,3
"org.eclipse.jdt.internal.core.index.DiskIndex.startQuery()",1,1,1
"org.eclipse.jdt.internal.core.index.DiskIndex.stopQuery()",1,1,2
"org.eclipse.jdt.internal.core.index.DiskIndex.writeAllDocumentNames(String[],DataOutputStream)",8,4,16
"org.eclipse.jdt.internal.core.index.DiskIndex.writeCategories(DataOutputStream)",1,3,3
"org.eclipse.jdt.internal.core.index.DiskIndex.writeCategoryTable(char[],HashtableOfObject,DataOutputStream)",1,7,7
"org.eclipse.jdt.internal.core.index.DiskIndex.writeDocumentNumbers(int[],DataOutputStream)",4,4,7
"org.eclipse.jdt.internal.core.index.DiskIndex.writeHeaderInfo(DataOutputStream)",1,4,4
"org.eclipse.jdt.internal.core.index.DiskIndex.writeOffsetToHeader(int)",1,2,2
"org.eclipse.jdt.internal.core.index.EntryResult.EntryResult(char[],HashtableOfObject)",1,1,2
"org.eclipse.jdt.internal.core.index.EntryResult.addDocumentName(String)",1,1,2
"org.eclipse.jdt.internal.core.index.EntryResult.addDocumentTable(HashtableOfObject)",2,1,2
"org.eclipse.jdt.internal.core.index.EntryResult.getDocumentNames(Index)",2,4,7
"org.eclipse.jdt.internal.core.index.EntryResult.getWord()",1,1,1
"org.eclipse.jdt.internal.core.index.EntryResult.isEmpty()",1,1,2
"org.eclipse.jdt.internal.core.index.Index.Index(String,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.index.Index.addIndexEntry(char[],char[],InternalSearchDocument)",1,1,1
"org.eclipse.jdt.internal.core.index.Index.convertPath(String)",2,2,3
"org.eclipse.jdt.internal.core.index.Index.getIndexFile()",2,1,2
"org.eclipse.jdt.internal.core.index.Index.hasChanged()",1,1,1
"org.eclipse.jdt.internal.core.index.Index.isMatch(char[],char[],int)",8,7,8
"org.eclipse.jdt.internal.core.index.Index.query(char[][],char[],int)",2,4,7
"org.eclipse.jdt.internal.core.index.Index.queryDocumentNames(String)",2,2,5
"org.eclipse.jdt.internal.core.index.Index.remove(String)",1,1,1
"org.eclipse.jdt.internal.core.index.Index.save()",2,2,3
"org.eclipse.jdt.internal.core.index.Index.startQuery()",1,2,2
"org.eclipse.jdt.internal.core.index.Index.stopQuery()",1,2,2
"org.eclipse.jdt.internal.core.index.Index.toString()",2,1,2
"org.eclipse.jdt.internal.core.index.MemoryIndex.MemoryIndex()",1,1,1
"org.eclipse.jdt.internal.core.index.MemoryIndex.addDocumentNames(String,SimpleSet)",1,7,7
"org.eclipse.jdt.internal.core.index.MemoryIndex.addIndexEntry(char[],char[],InternalSearchDocument)",1,3,3
"org.eclipse.jdt.internal.core.index.MemoryIndex.addQueryResults(char[][],char[],int,HashtableOfObject)",5,16,17
"org.eclipse.jdt.internal.core.index.MemoryIndex.hasChanged()",1,1,1
"org.eclipse.jdt.internal.core.index.MemoryIndex.remove(String)",1,1,1
"org.eclipse.jdt.internal.core.index.MemoryIndex.shouldMerge()",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.AbstractDOMBuilder()",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.acceptLineSeparatorPositions(int[])",1,1,7
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.addChild(IDOMNode)",1,3,4
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.createCompilationUnit(ICompilationUnit)",2,1,2
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.createCompilationUnit(char[],char[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.enterCompilationUnit()",1,2,2
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.exitType(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.getLineStart(int)",3,1,3
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.initializeBuild(char[],boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.CompilationUnit(char[],char[])",1,4,4
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getContents()",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.DOMBuilder()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptImport(int,int,int[],char[],int,boolean,int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptInitializer(int,int,int[],int,int,int,int)",1,1,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptPackage(int,int,int[],char[],int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptProblem(IProblem)",2,1,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.addChild(IDOMNode)",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createCompilationUnit(ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createField(char[])",3,1,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createFields(char[])",2,2,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createImport()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createImport(char[])",2,1,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createInitializer(char[])",2,1,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createMethod(char[])",2,1,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createPackage()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createPackage(char[])",2,1,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createType(char[])",2,2,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterAbstractMethod(int,int[],int,int,char[],int,int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,int,int,char[][],int[],int[],int,boolean)",1,1,8
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterClass(int,int[],int,int,int,char[],int,int,char[],int,int,char[][],int[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterConstructor(int,int[],int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,char[][],int[],int[],int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterField(int,int[],int,int,char[],int,int,int,char[],int,int,int,int)",1,1,6
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterInterface(int,int[],int,int,int,char[],int,int,char[][],int[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterMethod(int,int[],int,int,char[],int,int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,int,int,char[][],int[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterType(int,int[],int,int,int,char[],int,int,char[],int,int,char[][],int[],int[],int,boolean)",1,2,12
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitAbstractMethod(int,int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitClass(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitConstructor(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitField(int,int)",1,4,5
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitInterface(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitMethod(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.getParser(Map)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.initializeBuild(char[],boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.DOMCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.DOMCompilationUnit(char[],int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.appendFragmentedContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.canHaveChildren()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getHeader()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getJavaElement(IJavaElement)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getName()",5,4,7
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.initalizeHeader()",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.isAllowableChild(IDOMNode)",2,2,4
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.normalize(ILineStartFinder)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.setHeader(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.setName(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.DOMField()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.DOMField(char[],int[],String,int[],int,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.DOMField(char[],int[],String,int[],int[],int,int[],int[],String,boolean,int[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.appendMemberBodyContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.appendMemberDeclarationContents(CharArrayBuffer)",1,5,5
"org.eclipse.jdt.internal.core.jdom.DOMField.appendMemberHeaderFragment(CharArrayBuffer)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.appendSimpleContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.becomeDetailed()",4,7,7
"org.eclipse.jdt.internal.core.jdom.DOMField.clone()",2,3,3
"org.eclipse.jdt.internal.core.jdom.DOMField.expand()",1,7,7
"org.eclipse.jdt.internal.core.jdom.DOMField.getDetailedNode()",2,3,3
"org.eclipse.jdt.internal.core.jdom.DOMField.getFirstFieldDeclaration()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.getInitializer()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMField.getJavaElement(IJavaElement)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.getLastFieldDeclaration()",3,4,5
"org.eclipse.jdt.internal.core.jdom.DOMField.getMemberDeclarationStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.getSingleVariableDeclaratorContents()",1,5,5
"org.eclipse.jdt.internal.core.jdom.DOMField.getType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.getTypeContents()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.hasInitializer()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.hasMultipleVariableDeclarators()",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMField.insertSibling(IDOMNode)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.isTypeAltered()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.isVariableDeclarator()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.normalizeEndPosition(ILineStartFinder,DOMNode)",4,5,7
"org.eclipse.jdt.internal.core.jdom.DOMField.normalizeStartPosition(int,ILineStartFinder)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.remove()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setComment(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setFlags(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setHasInitializer(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setInitializer(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setInitializerRange(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setIsVariableDeclarator(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setName(String)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.setType(String)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.setTypeAltered(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.DOMImport()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.DOMImport(char[],int[],String,boolean,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.DOMImport(char[],int[],String,int[],boolean,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.appendFragmentedContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.getContents()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.getJavaElement(IJavaElement)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.isOnDemand()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.setFlags(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.setName(String)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.DOMInitializer()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.DOMInitializer(char[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.DOMInitializer(char[],int[],int[],int,int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.appendMemberBodyContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.appendMemberDeclarationContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.appendSimpleContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getBody()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getJavaElement(IJavaElement)",2,3,4
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getMemberDeclarationStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.isSignatureEqual(IDOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.setBody(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.setName(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.DOMMember()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.DOMMember(char[],int[],String,int[],int[],int,int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendFragmentedContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendMemberHeaderFragment(CharArrayBuffer)",1,6,7
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendString(String[],String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.generateFlags()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.getComment()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMMember.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.getModifiersText()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMMember.hasBody()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.hasComment()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.setComment(String)",2,2,3
"org.eclipse.jdt.internal.core.jdom.DOMMember.setFlags(int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.setHasBody(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.setHasComment(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.setStartPosition(int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.DOMMethod()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.DOMMethod(char[],int[],String,int[],int,boolean,String,String[],String[],String[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.DOMMethod(char[],int[],String,int[],int[],int,int[],boolean,String,int[],String[],String[],int[],String[],int[],int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.addException(String)",2,3,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.addParameter(String,String)",3,5,5
"org.eclipse.jdt.internal.core.jdom.DOMMethod.appendMemberBodyContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.appendMemberDeclarationContents(CharArrayBuffer)",1,10,11
"org.eclipse.jdt.internal.core.jdom.DOMMethod.appendSimpleContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.generateFlags()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getBody()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getConstructorName()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getDefault()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getExceptions()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getJavaElement(IJavaElement)",2,5,5
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getMemberDeclarationStartPosition()",2,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getName()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getParameterNames()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getParameterTypes()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getReturnType()",2,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getReturnTypeContents()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getTypeParameters()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.hasTrailingArrayQualifier()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.isConstructor()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.isReturnTypeAltered()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.isSignatureEqual(IDOMNode)",9,9,17
"org.eclipse.jdt.internal.core.jdom.DOMMethod.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setBody(String)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setBodyRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setConstructor(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setDefault(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setExceptions(String[])",1,4,5
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setName(String)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setParameters(String[],String[])",4,7,9
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setReturnType(String)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setReturnTypeAltered(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setSourceRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setTypeParameters(String[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.toString()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.DOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.DOMNode(char[],int[],String,int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.addChild(IDOMNode)",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.appendContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.appendContentsOfChildren(CharArrayBuffer)",1,7,7
"org.eclipse.jdt.internal.core.jdom.DOMNode.basicAddChild(IDOMNode)",6,7,8
"org.eclipse.jdt.internal.core.jdom.DOMNode.becomeDetailed()",3,4,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.canHaveChildren()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.clone()",1,6,6
"org.eclipse.jdt.internal.core.jdom.DOMNode.cloneSharingDocument(char[],int)",1,5,5
"org.eclipse.jdt.internal.core.jdom.DOMNode.fragment()",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.getCharacters()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getChild(String)",5,3,5
"org.eclipse.jdt.internal.core.jdom.DOMNode.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getContents()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getDocument()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getEndPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getFactory()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getFirstChild()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getInsertionPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getMask(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getName()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getNameContents()",3,3,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.getNextNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getParent()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getParentEndDeclaration()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.getPreviousNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getRoot()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.getStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.insertSibling(IDOMNode)",6,9,10
"org.eclipse.jdt.internal.core.jdom.DOMNode.isAllowableChild(IDOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isContentMergableWith(DOMNode)",1,4,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.isDetailed()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isFragmented()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isNameAltered()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isSignatureEqual(IDOMNode)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.localizeContents()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.normalize(ILineStartFinder)",1,4,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.normalizeEndPosition(ILineStartFinder,DOMNode)",1,3,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.normalizeStartPosition(int,ILineStartFinder)",1,2,5
"org.eclipse.jdt.internal.core.jdom.DOMNode.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.offsetRange(int[],int)",1,1,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.rangeCopy(int[])",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.remove()",1,2,7
"org.eclipse.jdt.internal.core.jdom.DOMNode.setMask(int,boolean)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.setName(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.setNameAltered(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.setSourceRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.setStartPosition(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.shareContents(DOMNode)",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMPackage.DOMPackage()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.DOMPackage(char[],int[],String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.DOMPackage(char[],int[],String,int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.appendFragmentedContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getContents()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getJavaElement(IJavaElement)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.setName(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.DOMType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.DOMType(char[],int[],String,int[],int,String[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.DOMType(char[],int[],String,int[],int[],int,int[],int[],int[],int[],String[],int[],int[],int[],int[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.addSuperInterface(String)",2,3,3
"org.eclipse.jdt.internal.core.jdom.DOMType.appendMemberBodyContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.appendMemberDeclarationContents(CharArrayBuffer)",1,16,16
"org.eclipse.jdt.internal.core.jdom.DOMType.appendSimpleContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.canHaveChildren()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getCloseBodyPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getInsertionPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getJavaElement(IJavaElement)",4,4,4
"org.eclipse.jdt.internal.core.jdom.DOMType.getMemberDeclarationStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getOpenBodyEnd()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getSuperInterfaces()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getSuperclass()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMType.getTypeParameters()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.isAllowableChild(IDOMNode)",2,2,5
"org.eclipse.jdt.internal.core.jdom.DOMType.isAnnotation()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.isClass()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.isEnum()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.normalize(ILineStartFinder)",1,11,20
"org.eclipse.jdt.internal.core.jdom.DOMType.normalizeEndPosition(ILineStartFinder,DOMNode)",1,3,4
"org.eclipse.jdt.internal.core.jdom.DOMType.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setAnnotation(boolean)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMType.setClass(boolean)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMType.setCloseBodyRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setCloseBodyRangeStart(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setEnum(boolean)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMType.setName(String)",2,5,5
"org.eclipse.jdt.internal.core.jdom.DOMType.setOpenBodyRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setOpenBodyRangeStart(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setSuperInterfaces(String[])",2,5,5
"org.eclipse.jdt.internal.core.jdom.DOMType.setSuperclass(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setTypeKeyword(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setTypeParameters(String[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration.SiblingEnumeration(IDOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration.hasMoreElements()",1,1,1
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration.nextElement()",1,2,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.acceptImport(int,int,char[],boolean,int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.acceptPackage(int,int,char[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.acceptProblem(IProblem)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.createCompilationUnit(ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.createCompilationUnit(String,String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterAbstractMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterClass(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterConstructor(MethodInfo)",1,1,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterEnum(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterField(FieldInfo)",1,1,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterInitializer(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterInterface(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterType(TypeInfo)",1,2,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitClass(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitEnum(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitField(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitInterface(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitMember(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitMethod(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitType(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.getParser(Map)",1,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.includesBinaries()",1,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.includesClasspaths()",1,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.setIncludesBinaries(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.setIncludesClasspaths(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.HierarchyScope.HierarchyScope(IType,WorkingCopyOwner)",4,4,4
"org.eclipse.jdt.internal.core.search.HierarchyScope.add(IResource)",1,2,2
"org.eclipse.jdt.internal.core.search.HierarchyScope.buildResourceVector()",5,8,8
"org.eclipse.jdt.internal.core.search.HierarchyScope.computeDependents(IJavaProject,HashSet,HashSet)",2,4,6
"org.eclipse.jdt.internal.core.search.HierarchyScope.computeProjectsAndJars(IType)",5,9,9
"org.eclipse.jdt.internal.core.search.HierarchyScope.encloses(IJavaElement)",8,11,13
"org.eclipse.jdt.internal.core.search.HierarchyScope.encloses(String)",8,7,10
"org.eclipse.jdt.internal.core.search.HierarchyScope.enclosingProjectsAndJars()",2,2,3
"org.eclipse.jdt.internal.core.search.HierarchyScope.initialize()",1,2,2
"org.eclipse.jdt.internal.core.search.HierarchyScope.processDelta(IJavaElementDelta)",2,2,3
"org.eclipse.jdt.internal.core.search.HierarchyScope.refresh()",1,2,2
"org.eclipse.jdt.internal.core.search.HierarchyScope.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.IndexSelector.IndexSelector(IJavaSearchScope,SearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.IndexSelector.canSeeFocus(IJavaElement,boolean,IPath)",15,15,21
"org.eclipse.jdt.internal.core.search.IndexSelector.getIndexLocations()",1,2,2
"org.eclipse.jdt.internal.core.search.IndexSelector.getJavaProject(IPath,IJavaModel)",2,1,2
"org.eclipse.jdt.internal.core.search.IndexSelector.initializeIndexLocations()",3,10,11
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.JavaSearchDocument(IFile,SearchParticipant)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.JavaSearchDocument(String,SearchParticipant)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.JavaSearchDocument(ZipEntry,IPath,byte[],SearchParticipant)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getByteContents()",2,3,5
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getCharContents()",2,3,5
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getEncoding()",2,3,4
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getFile()",1,2,2
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getLocation()",2,2,2
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.beginSearching()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.doneSearching()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.getDescription()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.getDocument(String)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexDocument(SearchDocument,IPath)",1,3,3
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(SearchDocument[],SearchPattern,IJavaSearchScope,SearchRequestor,IProgressMonitor)",3,3,6
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.selectIndexes(SearchPattern,IJavaSearchScope)",1,1,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.JavaSearchScope()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(IJavaElement,IJavaProject)",2,13,20
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(IPath,boolean,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaProject,IPath,int,HashSet,IClasspathEntry)",6,22,29
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaProject,int,HashSet)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.addEnclosingProjectOrJar(IPath)",3,2,3
"org.eclipse.jdt.internal.core.search.JavaSearchScope.encloses(IJavaElement)",5,4,5
"org.eclipse.jdt.internal.core.search.JavaSearchScope.encloses(IPath)",5,5,7
"org.eclipse.jdt.internal.core.search.JavaSearchScope.encloses(String)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.enclosingProjectsAndJars()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.fullPath(IJavaElement)",4,6,6
"org.eclipse.jdt.internal.core.search.JavaSearchScope.fullPath(String)",1,2,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.getAccessRestriction(String)",2,1,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.initialize()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.processDelta(IJavaElementDelta)",6,9,13
"org.eclipse.jdt.internal.core.search.JavaSearchScope.toString()",1,5,5
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.JavaWorkspaceScope()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.encloses(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.encloses(String)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.enclosingProjectsAndJars()",1,2,2
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.equals(Object)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize()",1,2,3
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.processDelta(IJavaElementDelta)",5,6,13
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.PathCollector.acceptIndexMatch(String,SearchPattern,SearchParticipant,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.search.PathCollector.getPaths()",1,2,2
"org.eclipse.jdt.internal.core.search.PatternSearchJob.PatternSearchJob(SearchPattern,SearchParticipant,IJavaSearchScope,IndexQueryRequestor)",1,1,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.belongsTo(String)",1,1,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.cancel()",1,1,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.ensureReadyToRun()",1,2,2
"org.eclipse.jdt.internal.core.search.PatternSearchJob.execute(IProgressMonitor)",5,7,9
"org.eclipse.jdt.internal.core.search.PatternSearchJob.getIndexes(IProgressMonitor)",3,5,7
"org.eclipse.jdt.internal.core.search.PatternSearchJob.search(Index,IProgressMonitor)",4,4,7
"org.eclipse.jdt.internal.core.search.PatternSearchJob.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.SearchBasicEngine()",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.SearchBasicEngine(ICompilationUnit[])",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.SearchBasicEngine(WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createHierarchyScope(IType)",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createHierarchyScope(IType,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createJavaSearchScope(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createJavaSearchScope(IJavaElement[],boolean)",1,1,2
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createJavaSearchScope(IJavaElement[],int)",1,4,5
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createWorkspaceScope()",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.findMatches(SearchPattern,SearchParticipant[],IJavaSearchScope,SearchRequestor,IProgressMonitor)",5,12,18
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getDefaultSearchParticipant()",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getParser()",1,2,2
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getResource(IJavaElement)",3,3,3
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getWorkingCopies()",2,11,16
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getWorkingCopies(IJavaElement)",4,5,6
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.match(char,char[],char[],int,int,char[],char[])",11,7,17
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.search(SearchPattern,SearchParticipant[],IJavaSearchScope,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchAllTypeNames(char[],char[],int,int,IJavaSearchScope,IRestrictedAccessTypeRequestor,int,IProgressMonitor)",6,27,46
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchDeclarations(IJavaElement,SearchRequestor,SearchPattern,IProgressMonitor)",2,3,5
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchDeclarationsOfAccessedFields(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchDeclarationsOfReferencedTypes(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchDeclarationsOfSentMessages(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.SubTypeSearchJob(SearchPattern,SearchParticipant,IJavaSearchScope,IndexQueryRequestor)",1,1,1
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.finished()",1,3,3
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.search(Index,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper.TypeNameRequestorWrapper(ITypeNameRequestor)",1,1,1
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper.acceptClass(char[],char[],char[][],String,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper.acceptInterface(char[],char[],char[][],String,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.AbstractIndexer(SearchDocument)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addClassDeclaration(int,char[],char[],char[][],char[],char[][],char[][])",1,4,4
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addConstructorDeclaration(char[],char[][],char[][])",1,4,5
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addConstructorReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addEnumDeclaration(int,char[],char[],char[][],char[][])",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addFieldDeclaration(char[],char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addFieldReference(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addIndexEntry(char[],char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addInterfaceDeclaration(int,char[],char[],char[][],char[][],char[][])",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addMethodDeclaration(char[],char[][],char[],char[][])",1,5,6
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addMethodReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addNameReference(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addTypeReference(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.erasure(char[])",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex.AddFolderToIndex(IPath,IProject,char[][],char[][],IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex.execute(IProgressMonitor)",10,13,22
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.AddJarFileToIndex(IFile,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.AddJarFileToIndex(IPath,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.equals(Object)",4,4,4
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.execute(IProgressMonitor)",16,32,38
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.hashCode()",3,3,3
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.updatedIndexState()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.BinaryIndexer(SearchDocument)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.addTypeReference(char[])",3,2,4
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.convertToArrayType(char[],int)",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.convertToArrayType(char[][],int,int)",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.decodeFieldType(char[])",23,12,25
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.decodeParameterTypes(char[])",7,14,28
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.decodeReturnType(char[])",24,12,26
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractArgCount(char[])",6,3,9
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractClassName(int[],ClassFileReader,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractClassReference(int[],ClassFileReader,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractName(int[],ClassFileReader,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractReferenceFromConstantPool(byte[],ClassFileReader)",2,5,9
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractType(int[],ClassFileReader,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.indexDocument()",6,14,21
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.replace(char,char,char[])",2,1,4
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.replace(char,char,char[][])",2,2,3
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.IndexAllProject(IProject,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.equals(Object)",2,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.execute(IProgressMonitor)",30,31,56
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.updatedIndexState()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.IndexBinaryFolder(IFolder,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.equals(Object)",2,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.execute(IProgressMonitor)",12,20,30
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.updatedIndexState()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.aboutToUpdateIndex(IPath,Integer)",2,4,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.addBinary(IFile,IPath)",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.addSource(IFile,IPath)",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.cleanUpIndexes()",1,12,12
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.computeIndexLocation(IPath)",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.ensureIndexExists(String,IPath)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndex(IPath,String,boolean,boolean)",8,13,14
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndex(IPath,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndexForUpdate(IPath,boolean,boolean)",2,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndexStates()",2,10,11
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getJavaPluginWorkingLocation()",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexAll(IProject)",2,4,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexDocument(SearchDocument,SearchParticipant,Index,IPath)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexLibrary(IPath,IProject)",6,4,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexSourceFolder(JavaProject,IPath,char[][],char[][])",3,2,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.jobWasCancelled(IPath)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.moveToNextJob()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.notifyIdle(long)",1,2,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.processName()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.readIndexState()",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.rebuildIndex(String,IPath)",3,4,10
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.recreateIndex(IPath)",1,4,5
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.remove(String,IPath)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeIndex(IPath)",1,3,4
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeIndexFamily(IPath)",3,5,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeSourceFolderFromIndex(JavaProject,IPath,char[][],char[][])",3,2,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.reset()",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndex(Index)",6,7,8
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndexes()",3,8,9
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.scheduleDocumentIndexing(SearchDocument,IPath,String,SearchParticipant)",4,3,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.toString()",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.updateIndexState(String,Integer)",4,8,15
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.IndexRequest(IPath,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.belongsTo(String)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.cancel()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.ensureReadyToRun()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.updatedIndexState()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.InternalSearchDocument.addIndexEntry(char[],char[])",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.InternalSearchDocument.getPath()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.InternalSearchDocument.removeAllIndexEntries()",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.enterRead()",1,2,3
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.enterWrite()",1,2,3
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitRead()",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitReadEnterWrite()",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitWrite()",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitWriteEnterRead()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.toString()",1,4,4
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex.RemoveFolderFromIndex(IPath,char[][],char[][],IProject,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex.execute(IProgressMonitor)",4,9,15
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex.RemoveFromIndex(String,IPath,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex.execute(IProgressMonitor)",4,3,6
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex.SaveIndex(IPath,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex.execute(IProgressMonitor)",4,5,8
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.SourceIndexer(SearchDocument)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexDocument()",2,3,6
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.SourceIndexerRequestor(SourceIndexer)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptConstructorReference(char[],int,int)",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptFieldReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptImport(int,int,char[],boolean,int)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptLineSeparatorPositions(int[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptMethodReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptPackage(int,int,char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptProblem(IProblem)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptTypeReference(char[][],int,int)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptUnknownReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptUnknownReference(char[][],int,int)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enclosingTypeNames()",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterClass(TypeInfo)",1,7,8
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterConstructor(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterEnum(TypeInfo)",1,4,4
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterField(FieldInfo)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterInitializer(int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterInterface(TypeInfo)",1,6,6
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitClass(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitEnum(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitField(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitInterface(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitMethod(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.popTypeName()",1,4,4
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.pushTypeName(char[])",1,2,2
"org.eclipse.jdt.internal.core.search.matching.AndPattern.AndPattern(int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.AndPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",8,12,17
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkDeclaringType(IBinaryType,char[],char[],boolean)",3,1,4
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkParameters(char[],char[][],char[][],boolean)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkTypeName(char[],char[],char[],boolean)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.convertClassFileFormat(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.locateMatches(MatchLocator,ClassFile,IBinaryType)",4,16,19
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchBinary(SearchPattern,Object,IBinaryType)",9,8,9
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchConstructor(ConstructorPattern,Object,IBinaryType)",7,2,7
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchField(FieldPattern,Object,IBinaryType)",5,1,5
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchMethod(MethodPattern,Object,IBinaryType)",9,4,13
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchSuperTypeReference(SuperTypeReferencePattern,Object,IBinaryType)",8,5,8
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchTypeDeclaration(TypeDeclarationPattern,Object,IBinaryType)",10,8,12
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.ClasspathSourceDirectory(IContainer)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.directoryList(String)",4,5,9
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.doesFileExist(String,String)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.equals(Object)",3,1,3
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.findClass(String,String,String)",3,2,4
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.getProjectRelativePath()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.isPackage(String)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.reset()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.ConstructorLocator(ConstructorPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(ASTNode,MatchingNodeSet)",5,1,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(ConstructorDeclaration,MatchingNodeSet)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(Expression,MatchingNodeSet)",6,2,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(FieldDeclaration,MatchingNodeSet)",7,3,12
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(TypeDeclaration,MatchingNodeSet)",2,1,3
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchContainer()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchLevelForDeclarations(ConstructorDeclaration)",6,4,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchLevelForReferences(ConstructorDeclaration)",4,1,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.newDeclarationMatch(ASTNode,IJavaElement,int,int,MatchLocator)",2,8,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(ASTNode)",7,7,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(AllocationExpression)",2,2,3
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(Binding)",11,3,12
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(ConstructorDeclaration,boolean)",5,4,8
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(FieldDeclaration)",4,3,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(TypeDeclaration)",4,5,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.ConstructorPattern(boolean,boolean,char[],char[],char[][],char[][],boolean,int)",1,7,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.ConstructorPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.createIndexKey(char[],int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.getIndexCategories()",3,1,4
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.matchesDecodedKey(SearchPattern)",1,2,4
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.mustResolve()",5,1,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.print(StringBuffer)",1,10,11
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.queryIn(Index)",2,5,12
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfAccessedFieldsPattern.DeclarationOfAccessedFieldsPattern(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedMethodsPattern.DeclarationOfReferencedMethodsPattern(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedTypesPattern.DeclarationOfReferencedTypesPattern(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.FieldLocator(FieldPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.match(ASTNode,MatchingNodeSet)",1,6,8
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.match(FieldDeclaration,MatchingNodeSet)",2,6,13
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchContainer()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchField(FieldBinding,boolean)",7,2,12
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReference(Reference,MatchingNodeSet,boolean)",3,3,4
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",5,26,36
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.reportDeclaration(FieldBinding,MatchLocator,SimpleSet)",8,6,11
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevel(ASTNode)",5,5,5
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevel(Binding)",3,1,3
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevel(NameReference)",8,7,10
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevelForType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.FieldPattern(boolean,boolean,boolean,char[],char[],char[],char[],char[],String,int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.FieldPattern(boolean,boolean,boolean,char[],char[],char[],char[],char[],int)",1,5,5
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.createIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.getIndexCategories()",3,1,5
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.getIndexKey()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.matchesDecodedKey(SearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.mustResolve()",3,1,5
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.print(StringBuffer)",1,10,11
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.ImportMatchLocatorParser(ProblemReporter,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeSingleStaticImportDeclarationName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeSingleTypeImportDeclarationName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeStaticImportOnDemandDeclarationName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeTypeImportOnDemandDeclarationName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.acceptMatch(String,SearchPattern,IndexQueryRequestor,SearchParticipant,IJavaSearchScope)",6,4,6
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.currentPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",5,6,9
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.isPolymorphicSearch()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.queryIn(Index)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.JavaSearchNameEnvironment(IJavaProject,ICompilationUnit[])",1,4,6
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.cleanup()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.computeClasspathLocations(IWorkspaceRoot,JavaProject)",1,5,6
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findClass(String,char[])",3,8,9
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findType(char[],char[][])",2,2,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findType(char[][])",2,2,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.isPackage(String)",3,2,3
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.isPackage(char[][],char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.JavaSearchPattern(int,int)",1,1,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.computeSignature(String)",2,10,18
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.getMatchMode()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.isCaseSensitive()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.isParameterized()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.matchesName(char[],char[])",6,7,8
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.print(StringBuffer)",2,4,7
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.LocalVariableLocator(LocalVariablePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.getLocalVariable()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.match(LocalDeclaration,MatchingNodeSet)",1,5,12
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.matchContainer()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.matchLocalVariable(LocalVariableBinding,boolean)",3,2,5
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",1,4,4
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.resolveLevel(ASTNode)",4,4,4
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.resolveLevel(Binding)",3,1,3
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.resolveLevel(NameReference)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern.LocalVariablePattern(boolean,boolean,boolean,LocalVariable,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",6,5,7
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern.print(StringBuffer)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.LocalDeclarationVisitor.LocalDeclarationVisitor(IJavaElement,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.LocalDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,5,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.MatchLocator(SearchPattern,SearchRequestor,IJavaSearchScope,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WorkingCopyDocument.WorkingCopyDocument(ICompilationUnit,SearchParticipant)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WorkingCopyDocument.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WrappedCoreException.WrappedCoreException(CoreException)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.accept(IBinaryType,PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.accept(ICompilationUnit,AccessRestriction)",2,1,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.accept(ISourceType[],PackageBinding,AccessRestriction)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.addWorkingCopies(InternalSearchPattern,SearchDocument[],ICompilationUnit[],SearchParticipant)",1,7,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.basicParser()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.cacheBinaryType(IType,IBinaryType)",3,4,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.classFileReader(IType)",4,5,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.computeSuperTypeNames(IType)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createAndPattern(SearchPattern,SearchPattern)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandle(AbstractMethodDeclaration,IJavaElement)",8,13,20
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandle(FieldDeclaration,TypeDeclaration,IJavaElement)",6,4,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHierarchyResolver(IType,PossibleMatch[])",5,6,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createImportHandle(ImportReference)",3,3,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createTypeHandle(String)",3,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.encloses(IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.findIndexMatches(InternalSearchPattern,Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getBinaryInfo(ClassFile,IResource)",3,4,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getFocusType()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBinding(IMethod)",6,7,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBodies(CompilationUnitDeclaration)",2,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getParticipant()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getProjectOrJar(IJavaElement)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getType(Object,char[])",4,3,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.hasAlreadyDefinedType(CompilationUnitDeclaration)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.initialize(JavaProject,int)",1,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.isPolymorphicSearch(InternalSearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(JavaProject,PossibleMatchSet,int)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(JavaProject,PossibleMatch[],int,int)",7,14,20
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(SearchDocument[])",6,24,29
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locatePackageDeclarations(SearchParticipant)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locatePackageDeclarations(SearchPattern,SearchParticipant)",8,13,18
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.lookupType(ReferenceBinding)",9,3,13
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newDeclarationMatch(IJavaElement,int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",8,2,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newFieldReferenceMatch(IJavaElement,int,int,int,ASTNode)",1,1,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newLocalVariableReferenceMatch(IJavaElement,int,int,int,ASTNode)",1,1,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newMethodReferenceMatch(IJavaElement,int,int,int,boolean,boolean,ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newPackageReferenceMatch(IJavaElement,int,int,int,ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newTypeReferenceMatch(IJavaElement,int,int,int,ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.parseAndBuildBindings(PossibleMatch,boolean)",2,7,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(PossibleMatch,boolean)",4,8,12
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.projectOrJarFocus(InternalSearchPattern)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.purgeMethodStatements(TypeDeclaration,boolean)",1,7,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reduceParseTree(CompilationUnitDeclaration)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.report(SearchMatch)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateFieldReference(QualifiedNameReference,IJavaElement,int[])",2,6,15
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateParameterizedTypeReference(TypeReference,char[],int,TypeReference[],IJavaElement,int)",9,6,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateTypeReference(ASTNode,char[],IJavaElement,int)",5,4,7
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportBinaryMemberDeclaration(IResource,IMember,IBinaryType,int)",1,6,7
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(AbstractMethodDeclaration,IJavaElement,int,boolean,MatchingNodeSet)",6,13,15
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(CompilationUnitDeclaration,boolean)",10,12,17
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(FieldDeclaration,TypeDeclaration,IJavaElement,int,boolean,MatchingNodeSet)",2,12,14
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(TypeDeclaration,IJavaElement,int,MatchingNodeSet,int)",9,37,48
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatchingSuper(TypeReference,IJavaElement,MatchingNodeSet,boolean)",1,11,17
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.resetScannerAfterLastTypeArgumentEnd(TypeReference,Scanner,int)",5,5,11
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.setFocus(InternalSearchPattern,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.typeInHierarchy(ReferenceBinding)",6,3,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.workingCopiesThatCanSeeFocus(ICompilationUnit[],IJavaElement,boolean,SearchParticipant)",2,6,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassAndMethodDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.MatchLocatorParser(ProblemReporter,MatchLocator)",1,1,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.MethodButNoClassDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.checkComment()",1,14,17
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.classInstanceCreation(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeAssignment()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeExplicitConstructorInvocation(int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeExplicitConstructorInvocationWithTypeArguments(int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeFieldAccess(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeLocalVariableDeclaration()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationNameWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationPrimary()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationPrimaryWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationSuper()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationSuperWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumePrimaryNoNewArray()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumePrimaryNoNewArrayWithName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeUnaryExpression(int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.copyDims(TypeReference,int)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.createParser(ProblemReporter,MatchLocator)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getTypeReference(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getUnspecifiedReference()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getUnspecifiedReferenceOptimized()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(CompilationUnitDeclaration)",2,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(TypeDeclaration,CompilationUnitDeclaration)",1,12,12
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addMatch(ASTNode,int)",2,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addPossibleMatch(ASTNode)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addTrustedMatch(ASTNode,boolean)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.hasPossibleNodes(int,int)",5,1,9
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.matchingNodes(int,int)",2,3,7
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.removePossibleMatch(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.removeTrustedMatch(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.toString()",5,3,6
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.MethodLocator(MethodPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.initializePolymorphicSearch(MatchLocator)",1,1,2
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.isVirtualInvoke(MethodBinding,MessageSend)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(MessageSend,MatchingNodeSet)",5,1,8
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(MethodDeclaration,MatchingNodeSet)",8,3,10
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchContainer()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchMethod(MethodBinding)",11,5,14
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",8,13,16
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.reportDeclaration(MethodBinding,MatchLocator,SimpleSet)",7,7,11
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(ASTNode)",3,3,5
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(Binding)",5,3,8
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(MessageSend)",9,7,13
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevelAsSubtype(char[],ReferenceBinding)",8,4,9
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.MethodPattern(boolean,boolean,char[],char[],char[],char[],char[],char[][],char[][],boolean,IType,int)",1,10,10
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.MethodPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.createIndexKey(char[],int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.getIndexCategories()",3,1,4
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.isPolymorphicSearch()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.matchesDecodedKey(SearchPattern)",1,2,4
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.mustResolve()",6,1,8
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.print(StringBuffer)",1,15,16
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.queryIn(Index)",2,5,12
"org.eclipse.jdt.internal.core.search.matching.OrLocator.OrLocator(OrPattern)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.initializePolymorphicSearch(MatchLocator)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(ASTNode,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(ConstructorDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(Expression,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(FieldDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(LocalDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(MessageSend,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(MethodDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(Reference,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(TypeDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(TypeReference,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchContainer()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",4,4,6
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",4,3,5
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",4,4,6
"org.eclipse.jdt.internal.core.search.matching.OrLocator.newDeclarationMatch(ASTNode,IJavaElement,int,int,MatchLocator)",5,4,6
"org.eclipse.jdt.internal.core.search.matching.OrLocator.resolveLevel(ASTNode)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.resolveLevel(Binding)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.setUnitScope(CompilationUnitScope)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrPattern.OrPattern(SearchPattern,SearchPattern)",1,3,8
"org.eclipse.jdt.internal.core.search.matching.OrPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.OrPattern.isPolymorphicSearch()",3,2,3
"org.eclipse.jdt.internal.core.search.matching.OrPattern.toString()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator.PackageDeclarationLocator(PackageDeclarationPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator.matchContainer()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern.PackageDeclarationPattern(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern.print(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern.queryIn(Index)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.PackageReferenceLocator(PackageReferencePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.isDeclaringPackageFragment(IPackageFragment,ReferenceBinding)",5,5,9
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(ASTNode,MatchingNodeSet)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(Reference,MatchingNodeSet)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(TypeReference,MatchingNodeSet)",3,2,3
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchLevel(ImportReference)",2,3,4
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",6,4,6
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchLevelForTokens(char[][])",5,3,7
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",1,3,7
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",3,7,21
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.resolveLevel(ASTNode)",7,7,7
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.resolveLevel(Binding)",10,4,14
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.resolveLevel(QualifiedNameReference)",9,5,14
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.PackageReferencePattern(char[],int)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.PackageReferencePattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.getIndexKey()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.hasNextQuery()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.matchesDecodedKey(SearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.print(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.resetQuery()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.PatternLocator(SearchPattern)",1,1,2
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.getQualifiedPattern(char[],char[])",4,3,4
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.getQualifiedSourceName(TypeBinding)",4,5,6
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.getTypeNameBinding(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.initializePolymorphicSearch(MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(ASTNode,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(ConstructorDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(Expression,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(FieldDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(LocalDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(MessageSend,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(MethodDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(Reference,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(TypeDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(TypeReference,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchContainer()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchLevel(ImportReference)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",2,4,8
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchesName(char[],char[])",6,6,7
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchesTypeReference(char[],TypeReference)",3,2,5
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.newDeclarationMatch(ASTNode,IJavaElement,int,int,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.patternLocator(SearchPattern)",11,2,11
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.qualifiedPattern(char[],char[])",3,3,4
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.qualifiedSourceName(TypeBinding)",3,5,5
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.refineAccuracy(int,ParameterizedTypeBinding,char[][][],MatchLocator)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.refineAccuracy(int,ParameterizedTypeBinding,char[][][],int,MatchLocator)",23,19,39
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevel(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevel(Binding)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevelForType(char[],TypeBinding)",4,2,6
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevelForType(char[],char[],TypeBinding)",2,5,9
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevelForType(char[],char[],char[][][],int,boolean,TypeBinding)",23,27,43
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.setUnitScope(CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.PossibleMatch(MatchLocator,IResource,Openable,SearchDocument)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.cleanUp()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.equals(Object)",3,2,3
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getContents()",4,2,4
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getPackageName()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName()",4,5,5
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getSourceFileName()",2,3,4
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.hashCode()",2,3,3
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.toString()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet.add(PossibleMatch)",3,2,3
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet.getPossibleMatches(IPackageFragmentRoot[])",1,4,4
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet.reset()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.QualifiedTypeDeclarationPattern(char[],char[],char,int)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.QualifiedTypeDeclarationPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.decodeIndexKey(char[])",1,3,3
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.matchesDecodedKey(SearchPattern)",3,3,4
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.print(StringBuffer)",2,4,8
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.SuperTypeNamesCollector(SearchPattern,char[],char[],MatchLocator,IType,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(TypeDeclaration,ClassScope)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(TypeDeclaration,CompilationUnitScope)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.addToResult(char[][])",3,3,4
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.buildBindings(ICompilationUnit,boolean)",1,7,7
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.collect()",5,14,20
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.collectSuperTypeNames(ReferenceBinding)",1,4,4
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.getPathsOfDeclaringType()",2,2,6
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.matches(ReferenceBinding)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.matches(char[][])",5,3,6
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.SuperTypeReferenceLocator(SuperTypeReferencePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.match(TypeReference,MatchingNodeSet)",3,3,6
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.matchContainer()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.resolveLevel(ASTNode)",3,1,3
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.resolveLevel(Binding)",8,3,8
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.SuperTypeReferencePattern(char[],char[],boolean,int)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.SuperTypeReferencePattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.createIndexKey(int,char[],char[],char[][],char[][],char,char[],char)",1,14,22
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.decodeIndexKey(char[])",1,5,7
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.matchesDecodedKey(SearchPattern)",5,2,5
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.print(StringBuffer)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.queryIn(Index)",2,3,5
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.TypeDeclarationLocator(TypeDeclarationPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.match(TypeDeclaration,MatchingNodeSet)",2,3,4
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.resolveLevel(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.resolveLevel(Binding)",7,4,10
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.resolveLevelForType(char[],char[],char[],TypeBinding)",5,4,5
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.TypeDeclarationPattern(char[],char[][],char[],char,int)",1,6,7
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.TypeDeclarationPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.createIndexKey(char[],char[],char[][],char)",1,5,11
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.decodeIndexKey(char[])",1,4,4
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.matchesDecodedKey(SearchPattern)",9,5,11
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.print(StringBuffer)",2,7,11
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.queryIn(Index)",3,9,12
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.TypeReferenceLocator(TypeReferencePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.findElement(IJavaElement,int)",2,3,4
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(ASTNode,MatchingNodeSet)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(Reference,MatchingNodeSet)",7,6,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(TypeReference,MatchingNodeSet)",6,6,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchLevel(ImportReference)",8,5,10
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",6,4,6
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",6,10,18
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",2,6,6
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(ArrayTypeReference,IJavaElement,int,MatchLocator)",6,7,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(QualifiedNameReference,IJavaElement,int,MatchLocator)",5,6,17
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(QualifiedTypeReference,IJavaElement,int,MatchLocator)",7,8,17
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclaration(ASTNode,IJavaElement,MatchLocator,SimpleSet)",10,6,19
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclaration(ReferenceBinding,int,MatchLocator,SimpleSet)",2,7,11
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(ASTNode)",3,3,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(Binding)",5,2,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(NameReference)",11,7,19
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(TypeReference)",2,2,4
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevelForType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevelForTypeOrEnclosingTypes(char[],char[],TypeBinding)",5,3,5
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],String,boolean,int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],int)",1,7,7
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.getIndexKey()",3,1,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.hasNextQuery()",2,1,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchesDecodedKey(SearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.print(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.resetQuery()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.VariableLocator(VariablePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.match(Expression,MatchingNodeSet)",5,6,8
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.match(Reference,MatchingNodeSet)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.matchReference(Reference,MatchingNodeSet,boolean)",9,9,10
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.VariablePattern.VariablePattern(int,boolean,boolean,boolean,char[],int)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.VariablePattern.mustResolve()",1,1,1
"org.eclipse.jdt.internal.core.search.processing.JobManager.activateProcessing()",1,1,1
"org.eclipse.jdt.internal.core.search.processing.JobManager.awaitingJobsCount()",1,1,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.currentJob()",2,1,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.disable()",1,2,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.discardJobs(String)",1,13,15
"org.eclipse.jdt.internal.core.search.processing.JobManager.enable()",1,2,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.isJobWaiting(IJob)",3,2,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.moveToNextJob()",1,1,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.notifyIdle(long)",1,1,1
"org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob(IJob,int,IProgressMonitor)",5,24,32
"org.eclipse.jdt.internal.core.search.processing.JobManager.request(IJob)",1,3,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.reset()",1,3,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.run()",4,14,19
"org.eclipse.jdt.internal.core.search.processing.JobManager.shutdown()",1,3,4
"org.eclipse.jdt.internal.core.search.processing.JobManager.toString()",1,2,3
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.ASTNodeFinder(CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findField(IField)",5,3,5
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findInitializer(IInitializer)",5,1,6
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findMethod(IMethod)",7,6,9
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findType(IType)",13,8,22
"org.eclipse.jdt.internal.core.util.Annotation.Annotation(byte[],IConstantPool,int)",3,4,5
"org.eclipse.jdt.internal.core.util.Annotation.getComponents()",1,1,1
"org.eclipse.jdt.internal.core.util.Annotation.getComponentsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.Annotation.getTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.Annotation.getTypeName()",1,1,1
"org.eclipse.jdt.internal.core.util.Annotation.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.AnnotationComponent(byte[],IConstantPool,int)",3,2,3
"org.eclipse.jdt.internal.core.util.AnnotationComponent.getComponentName()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.getComponentNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.getComponentValue()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.AnnotationComponentValue(byte[],IConstantPool,int)",10,9,17
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getAnnotationComponentValues()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getAnnotationValue()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getAttributeValue()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getClassInfo()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getClassInfoIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getConstantValue()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getConstantValueIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantName()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantTypeName()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantTypeNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getTag()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getValuesNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute.AnnotationDefaultAttribute(byte[],IConstantPool,int)",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute.getMemberValue()",1,1,1
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.AnonymousFileSource(File)",3,2,3
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.allocateAnonymousFile()",1,1,1
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.allocateAnonymousURL(byte[])",1,4,4
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.convertFileToURL(File)",1,1,2
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.fileForName(String)",1,2,2
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.getAnonymousFile()",1,2,3
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.getAnonymousFileName()",1,1,1
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.getAnonymousFileName(long)",1,2,3
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer()",1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer(char[],int)",1,2,3
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer(int)",1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(String)",1,2,2
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(char)",1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(char[])",1,2,2
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(char[],int,int)",6,4,8
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.getContents()",3,3,5
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.toString()",1,1,2
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.ClassFileAttribute(byte[],IConstantPool,int)",2,1,2
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.getAttributeLength()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.getAttributeName()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.getAttributeNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.ClassFileReader(byte[],int)",5,28,44
"org.eclipse.jdt.internal.core.util.ClassFileReader.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getAttributeCount()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getAttributes()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getClassIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getClassName()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getConstantClassNameAt(byte[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getConstantPool()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getFieldInfos()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getFieldsCount()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getInnerClassesAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getInterfaceIndexes()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMagic()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMajorVersion()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMethodInfos()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMethodsCount()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMinorVersion()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getSourceFileAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getSuperclassIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getSuperclassName()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.isClass()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.isInterface()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.doubleAt(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.equals(char[],char[])",6,1,7
"org.eclipse.jdt.internal.core.util.ClassFileStruct.floatAt(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i1At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i2At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i4At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i8At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.u1At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.u2At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.u4At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.utf8At(byte[],int,int,int)",1,2,5
"org.eclipse.jdt.internal.core.util.CodeAttribute.CodeAttribute(byte[],IConstantPool,int)",3,4,9
"org.eclipse.jdt.internal.core.util.CodeAttribute.getAttributes()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getAttributesCount()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getBytecodes()",1,2,2
"org.eclipse.jdt.internal.core.util.CodeAttribute.getCodeLength()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getExceptionTable()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getExceptionTableLength()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getLineNumberAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getLocalVariableAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getMaxLocals()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getMaxStack()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.traverse(IBytecodeVisitor)",21,13,237
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.getRecordedParsingInformation(CompilationResult,CommentRecorderParser)",1,3,3
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseClassBodyDeclarations(char[],Map,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseClassBodyDeclarations(char[],int,int,Map,boolean)",2,2,3
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseCompilationUnit(char[],Map,boolean)",3,5,7
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseExpression(char[],Map,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseExpression(char[],int,int,Map,boolean)",2,2,3
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseStatements(char[],Map,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseStatements(char[],int,int,Map,boolean)",2,2,3
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.CommentRecorderParser(ProblemReporter,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.checkComment()",3,4,14
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeClassHeader()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeEmptyClassMemberDeclaration()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeEmptyTypeDeclaration()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeInterfaceHeader()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.containsComment(int,int)",4,1,5
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.endParse(int)",1,2,2
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.flushCommentsDefinedPriorTo(int)",8,4,11
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.getCommentsPositions()",1,1,2
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.initialize()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.initializeScanner()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.pushOnCommentsStack(int,int)",1,4,8
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.resetModifiers()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderScanner.CommentRecorderScanner(boolean,boolean,boolean,long,char[][],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderScanner.recordComment(int)",1,1,2
"org.eclipse.jdt.internal.core.util.ConstantPool.ConstantPool(byte[],int[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPool.decodeEntry(int)",2,2,11
"org.eclipse.jdt.internal.core.util.ConstantPool.getConstantPoolCount()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPool.getEntryKind(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPool.getUtf8ValueAt(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassInfoName()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassInfoNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassName()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getDoubleValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getFieldDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getFieldName()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getFloatValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getIntegerValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getKind()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getLongValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getMethodDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getMethodName()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeInfoDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeInfoNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getStringIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getStringValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getUtf8Length()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getUtf8Value()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.reset()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassInfoName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassInfoNameIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setDoubleValue(double)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setFieldDescriptor(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setFieldName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setFloatValue(float)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setIntegerValue(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setKind(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setLongValue(long)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setMethodDescriptor(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setMethodName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setNameAndTypeDescriptorIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setNameAndTypeIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setNameAndTypeNameIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setStringIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setStringValue(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setUtf8Length(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setUtf8Value(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute.ConstantValueAttribute(byte[],IConstantPool,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute.getConstantValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute.getConstantValueIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.DefaultBytecodeVisitor(long,StringBuffer,String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aaload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aconst_null(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._anewarray(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._areturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._arraylength(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._athrow(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._baload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._bastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._bipush(int,byte)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._breakpoint(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._caload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._castore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._checkcast(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._d2f(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._d2i(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._d2l(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dadd(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._daload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dcmpg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dcmpl(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dconst_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dconst_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ddiv(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dmul(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dneg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._drem(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dreturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dsub(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup2_x1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup2_x2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup_x1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup_x2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._f2d(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._f2i(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._f2l(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fadd(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._faload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fcmpg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fcmpl(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fconst_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fconst_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fconst_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fdiv(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fmul(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fneg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._frem(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._freturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fsub(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._getfield(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._getstatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._goto(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._goto_w(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2b(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2c(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2d(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2f(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2l(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2s(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iadd(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iaload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iand(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_4(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_5(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_m1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._idiv(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_acmpeq(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_acmpne(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpeq(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpge(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpgt(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmple(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmplt(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpne(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifeq(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifge(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifgt(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifle(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iflt(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifne(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifnonnull(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifnull(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iinc(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._impdep1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._impdep2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._imul(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ineg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._instanceof(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokeinterface(int,int,byte,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokespecial(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokestatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokevirtual(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ior(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._irem(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ireturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ishl(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ishr(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._isub(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iushr(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ixor(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._jsr(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._jsr_w(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._l2d(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._l2f(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._l2i(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ladd(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._laload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._land(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lcmp(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lconst_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lconst_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldc(int,int,IConstantPoolEntry)",2,2,5
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldc2_w(int,int,IConstantPoolEntry)",2,2,3
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldc_w(int,int,IConstantPoolEntry)",2,2,5
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldiv(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lmul(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lneg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lookupswitch(int,int,int,int[][])",1,2,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lor(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lrem(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lreturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lshl(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lshr(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lsub(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lushr(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lxor(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._monitorenter(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._monitorexit(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._multianewarray(int,int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._new(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._newarray(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._nop(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._pop(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._pop2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._putfield(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._putstatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ret(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._return(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._saload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._sastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._sipush(int,short)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._swap(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._tableswitch(int,int,int,int,int[])",1,2,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._wide(int,int,int)",2,2,12
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._wide(int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendDimensions(int)",1,2,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendGetArrayType(int)",2,2,9
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputForConstantClass(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputForConstantDouble(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputForConstantLong(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputForConstantString(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputforConstantFloat(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputforConstantInteger(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.dumpPcNumber(int)",1,3,3
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.returnConstantClassName(IConstantPoolEntry)",2,1,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.returnDeclaringClassName(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.writeExtraTabs(int)",1,2,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.writeNewLine()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.writeTabs()",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForField(StringBuffer,int)",1,18,26
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForInnerClasses(StringBuffer,int)",1,14,20
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForMethod(StringBuffer,int)",1,22,32
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForType(StringBuffer,int)",1,8,11
"org.eclipse.jdt.internal.core.util.Disassembler.decodeStringValue(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeStringValue(char[])",2,3,19
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotation,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotationComponent,StringBuffer,String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotationComponentValue,StringBuffer,String,int)",4,5,18
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotationDefaultAttribute,StringBuffer,String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileAttribute,StringBuffer,String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileReader,IMethodInfo,StringBuffer,String,int,int)",1,35,37
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileReader,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileReader,String,int)",3,39,59
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(ICodeAttribute,StringBuffer,String,int)",1,15,15
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IConstantPool,StringBuffer,String,int)",2,4,14
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IEnclosingMethodAttribute,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IFieldInfo,StringBuffer,String,int,int)",3,22,32
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IInnerClassesAttribute,StringBuffer,String,int)",1,8,8
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeInvisibleAnnotationsAttribute,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeInvisibleParameterAnnotationsAttribute,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeVisibleAnnotationsAttribute,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeVisibleParameterAnnotationsAttribute,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(byte[],String)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(byte[],String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(int,IParameterAnnotation,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotation,StringBuffer,String,int)",1,3,3
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotationComponent,StringBuffer,String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotationComponentValue,StringBuffer,String,int)",4,6,19
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotationDefaultAttribute,StringBuffer,String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IRuntimeInvisibleAnnotationsAttribute,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IRuntimeVisibleAnnotationsAttribute,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleTypeMembers(IClassFileReader,StringBuffer,String,int,int)",1,3,3
"org.eclipse.jdt.internal.core.util.Disassembler.dumpTab(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.getDescription()",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.getEnclosingMethodAttribute(IClassFileReader)",3,2,3
"org.eclipse.jdt.internal.core.util.Disassembler.getEntryFor(int,ILocalVariableTableEntry[])",3,2,3
"org.eclipse.jdt.internal.core.util.Disassembler.getFieldRefNameAndType(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.getLocalVariableTypeAttribute(ICodeAttribute)",3,2,3
"org.eclipse.jdt.internal.core.util.Disassembler.getMethodRefNameAndType(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.getParameterNames(char[],ICodeAttribute,int)",1,7,8
"org.eclipse.jdt.internal.core.util.Disassembler.getSignatureForField(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.isDeprecated(IClassFileReader)",3,2,3
"org.eclipse.jdt.internal.core.util.Disassembler.isSynthetic(IClassFileReader)",4,2,4
"org.eclipse.jdt.internal.core.util.Disassembler.writeNewLine(StringBuffer,String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.EnclosingMethodAttribute(byte[],IConstantPool,int)",6,2,6
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getEnclosingClass()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getEnclosingClassIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodName()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodNameAndTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.ExceptionAttribute(byte[],IConstantPool,int)",3,2,4
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.getExceptionIndexes()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.getExceptionNames()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.getExceptionsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.ExceptionTableEntry(byte[],IConstantPool,int)",3,2,3
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getCatchType()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getCatchTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getEndPC()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getHandlerPC()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getStartPC()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.FieldInfo(byte[],IConstantPool,int)",5,7,13
"org.eclipse.jdt.internal.core.util.FieldInfo.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getAttributeCount()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getAttributes()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getConstantValueAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getName()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.hasConstantValueAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.HandleFactory()",1,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.createElement(ClassScope,ICompilationUnit,HashSet,HashMap)",1,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.createElement(Scope,int,ICompilationUnit,HashSet,HashMap)",9,11,21
"org.eclipse.jdt.internal.core.util.HandleFactory.createOpenable(String,IJavaSearchScope)",7,12,14
"org.eclipse.jdt.internal.core.util.HandleFactory.getJarPkgFragmentRoot(IPath,Object,IJavaProject[])",5,5,6
"org.eclipse.jdt.internal.core.util.HandleFactory.getJarPkgFragmentRoot(String,IJavaSearchScope)",6,8,11
"org.eclipse.jdt.internal.core.util.HandleFactory.getPkgFragmentRoot(String)",5,5,8
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.HashtableOfArrayToObject()",1,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.HashtableOfArrayToObject(int)",1,1,2
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.clone()",1,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.containsKey(Object[])",3,3,4
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.get(Object[])",3,3,4
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.getKey(Object[],int)",3,3,4
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.hashCode(Object[])",1,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.hashCode(Object[],int)",1,2,2
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.put(Object[],Object)",3,4,5
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.rehash()",1,3,3
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.removeKey(Object[])",3,4,4
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.size()",1,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.toString()",1,6,6
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute.InnerClassesAttribute(byte[],IConstantPool,int)",1,1,3
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute.getInnerClassAttributesEntries()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute.getNumberOfClasses()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.InnerClassesAttributeEntry(byte[],IConstantPool,int)",7,4,7
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerClassName()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerClassNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerName()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getOuterClassName()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getOuterClassNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCache()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCache(int)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCacheEntry.LRUCacheEntry(Object,Object,int)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCacheEntry.toString()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.clone()",1,2,2
"org.eclipse.jdt.internal.core.util.LRUCache.flush()",1,2,2
"org.eclipse.jdt.internal.core.util.LRUCache.flush(Object)",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.get(Object)",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.getCurrentSpace()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.getSpaceLimit()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.keys()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.keysAndValues()",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.makeSpace(int)",3,2,5
"org.eclipse.jdt.internal.core.util.LRUCache.newInstance(int)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.privateAdd(Object,Object,int)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.privateAddEntry(LRUCacheEntry,boolean)",1,2,3
"org.eclipse.jdt.internal.core.util.LRUCache.privateNotifyDeletionFromCache(LRUCacheEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.privateRemoveEntry(LRUCacheEntry,boolean)",1,2,4
"org.eclipse.jdt.internal.core.util.LRUCache.put(Object,Object)",3,4,4
"org.eclipse.jdt.internal.core.util.LRUCache.removeKey(Object)",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.setSpaceLimit(int)",1,2,2
"org.eclipse.jdt.internal.core.util.LRUCache.spaceFor(Object)",2,2,2
"org.eclipse.jdt.internal.core.util.LRUCache.toString()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.toStringContents()",1,4,4
"org.eclipse.jdt.internal.core.util.LRUCache.updateTimestamp(LRUCacheEntry)",1,2,2
"org.eclipse.jdt.internal.core.util.LineNumberAttribute.LineNumberAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.LineNumberAttribute.getLineNumberTable()",1,1,1
"org.eclipse.jdt.internal.core.util.LineNumberAttribute.getLineNumberTableLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute.LocalVariableAttribute(byte[],IConstantPool,int)",1,1,3
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute.getLocalVariableTable()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute.getLocalVariableTableLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.LocalVariableTableEntry(byte[],IConstantPool,int)",3,1,3
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getName()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getStartPC()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute.LocalVariableTypeAttribute(byte[],IConstantPool,int)",1,1,3
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute.getLocalVariableTypeTable()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute.getLocalVariableTypeTableLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.LocalVariableTypeTableEntry(byte[],IConstantPool,int)",3,1,3
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getName()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getSignature()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getSignatureIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getStartPC()",1,1,1
"org.eclipse.jdt.internal.core.util.MementoTokenizer.MementoTokenizer(String)",1,1,1
"org.eclipse.jdt.internal.core.util.MementoTokenizer.hasMoreTokens()",1,1,1
"org.eclipse.jdt.internal.core.util.MementoTokenizer.nextToken()",18,5,21
"org.eclipse.jdt.internal.core.util.MethodInfo.MethodInfo(byte[],IConstantPool,int,int)",5,14,22
"org.eclipse.jdt.internal.core.util.MethodInfo.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getAttributeCount()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getAttributes()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getCodeAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getExceptionAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getName()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isAbstract()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isClinit()",1,1,2
"org.eclipse.jdt.internal.core.util.MethodInfo.isConstructor()",1,1,2
"org.eclipse.jdt.internal.core.util.MethodInfo.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isNative()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.ParameterAnnotation(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.getAnnotationsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.PublicScanner()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.PublicScanner(boolean,boolean,boolean,long,char[][],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.atEnd()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.checkNonExternalizedString()",2,1,2
"org.eclipse.jdt.internal.core.util.PublicScanner.checkTaskTag(int,int)",19,15,38
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentIdentifierSource()",9,8,9
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenEndPosition()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenSource()",1,2,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenSourceString()",1,2,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineEnd(int)",5,1,5
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineEnds()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineNumber(int)",7,1,7
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineStart(int)",5,1,5
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextChar()",3,11,15
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextChar(char)",6,11,18
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextChar(char,char)",8,11,20
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsDigit()",6,11,18
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsDigit(int)",6,11,18
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsJavaIdentifierPart()",6,11,18
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextToken()",108,86,211
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextUnicodeChar()",2,10,12
"org.eclipse.jdt.internal.core.util.PublicScanner.getRawTokenSource()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getRawTokenSourceEnd()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getSource()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.isDigit(char)",3,2,3
"org.eclipse.jdt.internal.core.util.PublicScanner.jumpOverMethodBody()",9,62,117
"org.eclipse.jdt.internal.core.util.PublicScanner.jumpOverUnicodeWhiteSpace()",3,8,12
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource1()",28,2,28
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource2()",5,1,8
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource3()",5,1,10
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource4()",5,1,12
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource5()",5,1,14
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource6()",5,1,16
"org.eclipse.jdt.internal.core.util.PublicScanner.parseTags(NLSLine)",2,6,9
"org.eclipse.jdt.internal.core.util.PublicScanner.pushLineSeparator()",6,6,14
"org.eclipse.jdt.internal.core.util.PublicScanner.pushUnicodeLineSeparator()",1,1,5
"org.eclipse.jdt.internal.core.util.PublicScanner.recordComment(int)",2,3,4
"org.eclipse.jdt.internal.core.util.PublicScanner.resetTo(int,int)",1,1,2
"org.eclipse.jdt.internal.core.util.PublicScanner.scanEscapeCharacter()",4,10,24
"org.eclipse.jdt.internal.core.util.PublicScanner.scanIdentifierOrKeyword()",141,15,328
"org.eclipse.jdt.internal.core.util.PublicScanner.scanNumber(boolean)",33,36,83
"org.eclipse.jdt.internal.core.util.PublicScanner.setSource(CompilationResult)",1,1,2
"org.eclipse.jdt.internal.core.util.PublicScanner.setSource(char[])",1,1,2
"org.eclipse.jdt.internal.core.util.PublicScanner.toString()",3,2,4
"org.eclipse.jdt.internal.core.util.PublicScanner.toStringAction(int)",104,9,104
"org.eclipse.jdt.internal.core.util.PublicScanner.unicodeInitializeBuffer(int)",1,2,3
"org.eclipse.jdt.internal.core.util.PublicScanner.unicodeStoreAt(int)",1,2,3
"org.eclipse.jdt.internal.core.util.RecordedParsingInformation.RecordedParsingInformation(IProblem[],int[],int[][])",1,1,2
"org.eclipse.jdt.internal.core.util.RecordedParsingInformation.updateRecordedParsingInformation(CompilationResult)",1,1,2
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptConstructorReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptFieldReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptMethodReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptTypeReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptUnknownReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptUnknownReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute.RuntimeInvisibleAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute.getAnnotationsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute.RuntimeInvisibleParameterAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute.getParameterAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute.getParametersNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute.RuntimeVisibleAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute.getAnnotationsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute.RuntimeVisibleParameterAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute.getParameterAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute.getParametersNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.SignatureAttribute.SignatureAttribute(byte[],IConstantPool,int)",2,1,2
"org.eclipse.jdt.internal.core.util.SignatureAttribute.getSignature()",1,1,1
"org.eclipse.jdt.internal.core.util.SignatureAttribute.getSignatureIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.SimpleDocument(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addDocumentListener(IDocumentListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addDocumentPartitioningListener(IDocumentPartitioningListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPosition(Position)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPosition(String,Position)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPositionCategory(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPositionUpdater(IPositionUpdater)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPrenotifiedDocumentListener(IDocumentListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.computeIndexInCategory(String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.computeNumberOfLines(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.computePartitioning(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.containsPosition(String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.containsPositionCategory(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.get()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.get(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getChar(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getContentType(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getDocumentPartitioner()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLegalContentTypes()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLegalLineDelimiters()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLength()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineDelimiter(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineInformation(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineInformationOfOffset(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineLength(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineOfOffset(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineOffset(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getNumberOfLines()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getNumberOfLines(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPartition(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPositionCategories()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPositionUpdaters()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPositions(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.insertPositionUpdater(IPositionUpdater,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removeDocumentListener(IDocumentListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removeDocumentPartitioningListener(IDocumentPartitioningListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePosition(Position)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePosition(String,Position)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePositionCategory(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePositionUpdater(IPositionUpdater)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePrenotifiedDocumentListener(IDocumentListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.replace(int,int,String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.search(int,String,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.set(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.setDocumentPartitioner(IDocumentPartitioner)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleSet.SimpleSet()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleSet.SimpleSet(int)",1,1,2
"org.eclipse.jdt.internal.core.util.SimpleSet.add(Object)",3,3,5
"org.eclipse.jdt.internal.core.util.SimpleSet.clone()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleSet.includes(Object)",3,2,4
"org.eclipse.jdt.internal.core.util.SimpleSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.util.SimpleSet.remove(Object)",3,4,6
"org.eclipse.jdt.internal.core.util.SimpleSet.toString()",1,3,3
"org.eclipse.jdt.internal.core.util.SimpleWordSet.SimpleWordSet(int)",1,1,2
"org.eclipse.jdt.internal.core.util.SimpleWordSet.add(char[])",3,3,5
"org.eclipse.jdt.internal.core.util.SimpleWordSet.includes(char[])",3,2,4
"org.eclipse.jdt.internal.core.util.SimpleWordSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.util.SourceFileAttribute.SourceFileAttribute(byte[],IConstantPool,int)",2,1,2
"org.eclipse.jdt.internal.core.util.SourceFileAttribute.getSourceFileIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.SourceFileAttribute.getSourceFileName()",1,1,1
"org.eclipse.jdt.internal.core.util.ToStringSorter.compare(String,String)",1,1,1
"org.eclipse.jdt.internal.core.util.ToStringSorter.quickSort(int,int)",1,4,7
"org.eclipse.jdt.internal.core.util.ToStringSorter.sort(Object[],String[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.Util()",1,1,1
"org.eclipse.jdt.internal.core.util.Util.arrayConcat(String[],String)",4,1,4
"org.eclipse.jdt.internal.core.util.Util.bind(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.bind(String,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.bind(String,String,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.bind(String,String[])",7,9,15
"org.eclipse.jdt.internal.core.util.Util.checkTypeSignature(String,int,int,boolean)",8,3,12
"org.eclipse.jdt.internal.core.util.Util.combineHashCodes(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.compare(byte[],byte[])",8,1,8
"org.eclipse.jdt.internal.core.util.Util.compare(char[],char[])",3,1,3
"org.eclipse.jdt.internal.core.util.Util.concat(String,String)",1,1,3
"org.eclipse.jdt.internal.core.util.Util.concat(String,String,String)",1,1,4
"org.eclipse.jdt.internal.core.util.Util.concat(String,char,String)",1,1,3
"org.eclipse.jdt.internal.core.util.Util.concatWith(String[],String,char)",3,4,6
"org.eclipse.jdt.internal.core.util.Util.concatWith(String[],char)",1,3,3
"org.eclipse.jdt.internal.core.util.Util.convertTypeSignature(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.Util.defaultJavaExtension()",1,1,1
"org.eclipse.jdt.internal.core.util.Util.editedString(String,TextEdit)",2,3,4
"org.eclipse.jdt.internal.core.util.Util.endsWithIgnoreCase(String,String)",4,4,6
"org.eclipse.jdt.internal.core.util.Util.equalArrays(Object[],Object[],int)",7,3,8
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNull(Object[],Object[])",8,3,9
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNull(int[],int[])",6,1,7
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNullSortFirst(Comparable[],Comparable[])",6,3,8
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNullSortFirst(String[],String[])",6,3,8
"org.eclipse.jdt.internal.core.util.Util.equalOrNull(Object,Object)",3,1,4
"org.eclipse.jdt.internal.core.util.Util.equalsIgnoreJavaLikeExtension(String,String)",8,4,8
"org.eclipse.jdt.internal.core.util.Util.extractLastName(String)",2,1,2
"org.eclipse.jdt.internal.core.util.Util.extractParameterTypes(char[])",5,4,7
"org.eclipse.jdt.internal.core.util.Util.extractReturnType(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.findFirstClassFile(IFolder)",4,3,5
"org.eclipse.jdt.internal.core.util.Util.findLineSeparator(char[])",5,2,7
"org.eclipse.jdt.internal.core.util.Util.getAttribute(IClassFileReader,char[])",3,2,3
"org.eclipse.jdt.internal.core.util.Util.getAttribute(ICodeAttribute,char[])",3,2,3
"org.eclipse.jdt.internal.core.util.Util.getAttribute(IFieldInfo,char[])",3,2,3
"org.eclipse.jdt.internal.core.util.Util.getAttribute(IMethodInfo,char[])",3,2,3
"org.eclipse.jdt.internal.core.util.Util.getJdkLevel(Object)",6,11,15
"org.eclipse.jdt.internal.core.util.Util.getLineSeparator(char[],char[])",3,2,3
"org.eclipse.jdt.internal.core.util.Util.getParameterCount(char[])",4,4,6
"org.eclipse.jdt.internal.core.util.Util.getProblemArgumentsForMarker(String[])",1,4,4
"org.eclipse.jdt.internal.core.util.Util.getProblemArgumentsFromMarker(String)",4,2,7
"org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(IFile)",1,1,4
"org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray(IFile)",1,1,2
"org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray(IFile,String)",1,1,4
"org.eclipse.jdt.internal.core.util.Util.getTrimmedSimpleNames(String)",1,2,2
"org.eclipse.jdt.internal.core.util.Util.indexOfEnclosingPath(IPath,IPath[],int)",3,3,5
"org.eclipse.jdt.internal.core.util.Util.indexOfJavaLikeExtension(String)",5,3,5
"org.eclipse.jdt.internal.core.util.Util.indexOfMatchingPath(IPath,IPath[],int)",3,2,3
"org.eclipse.jdt.internal.core.util.Util.indexOfNestedPath(IPath,IPath[],int)",4,2,4
"org.eclipse.jdt.internal.core.util.Util.isExcluded(IJavaElement)",4,6,9
"org.eclipse.jdt.internal.core.util.Util.isExcluded(IPath,char[][],char[][],boolean)",2,1,3
"org.eclipse.jdt.internal.core.util.Util.isExcluded(IResource,char[][],char[][])",1,1,1
"org.eclipse.jdt.internal.core.util.Util.isJavaLikeFileName(String)",2,1,2
"org.eclipse.jdt.internal.core.util.Util.isJavaLikeFileName(char[])",6,1,6
"org.eclipse.jdt.internal.core.util.Util.isReadOnly(IResource)",2,1,2
"org.eclipse.jdt.internal.core.util.Util.isValidClassFileName(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidCompilationUnitName(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidFolderNameForPackage(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidMethodSignature(String)",7,2,7
"org.eclipse.jdt.internal.core.util.Util.isValidTypeSignature(String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.localTypeName(String,int,int)",1,2,3
"org.eclipse.jdt.internal.core.util.Util.log(Throwable,String)",1,2,3
"org.eclipse.jdt.internal.core.util.Util.normalizeCRs(String,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.normalizeCRs(char[],char[])",4,6,10
"org.eclipse.jdt.internal.core.util.Util.packageName(IPath)",3,3,4
"org.eclipse.jdt.internal.core.util.Util.prefixLength(String,String)",1,2,3
"org.eclipse.jdt.internal.core.util.Util.prefixLength(char[],char[])",1,1,3
"org.eclipse.jdt.internal.core.util.Util.quickSort(Comparable[],int,int)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(Object[],int,int,Comparer)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(Object[],int,int,int[])",1,3,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(String[],int,int)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(char[][],int,int)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(int[],int,int)",1,3,7
"org.eclipse.jdt.internal.core.util.Util.quickSortReverse(String[],int,int)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.readUTF(DataInput)",7,4,12
"org.eclipse.jdt.internal.core.util.Util.relocalize()",1,2,2
"org.eclipse.jdt.internal.core.util.Util.setReadOnly(IResource,boolean)",2,1,3
"org.eclipse.jdt.internal.core.util.Util.sort(Comparable[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(Object[],Comparer)",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(Object[],int[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(String[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(char[][])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(int[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sortCopy(Comparable[])",1,1,1
"org.eclipse.jdt.internal.core.util.Util.sortCopy(Object[],Comparer)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.sortCopy(String[])",1,1,1
"org.eclipse.jdt.internal.core.util.Util.sortReverseOrder(String[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.splitOn(char,String,int,int)",2,5,8
"org.eclipse.jdt.internal.core.util.Util.startsWithIgnoreCase(String[],String[])",4,2,4
"org.eclipse.jdt.internal.core.util.Util.toCharArrays(String[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.toCompoundChars(String)",2,3,5
"org.eclipse.jdt.internal.core.util.Util.toString(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.Util.toString(char[][])",1,3,3
"org.eclipse.jdt.internal.core.util.Util.toString(char[][],char[])",2,2,3
"org.eclipse.jdt.internal.core.util.Util.typeParameterSignatures(AbstractMethodDeclaration)",2,3,3
"org.eclipse.jdt.internal.core.util.Util.typeSignature(TypeReference)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.validateMethodSignature(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.validateTypeSignature(String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.verbose(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.verbose(String,PrintStream)",1,3,3
"org.eclipse.jdt.internal.core.util.Util.writeUTF(OutputStream,char[])",2,6,12
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.CodeSnippetAllocationExpression(EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.generateCode(BlockScope,CodeStream,boolean)",1,12,12
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",2,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.resolveType(BlockScope)",10,17,25
"org.eclipse.jdt.internal.eval.CodeSnippetClassFile.CodeSnippetClassFile(SourceTypeBinding,ClassFile,boolean)",1,7,11
"org.eclipse.jdt.internal.eval.CodeSnippetClassFile.createProblemType(TypeDeclaration,CompilationResult)",11,20,25
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.CodeSnippetCodeStream(ClassFile)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.checkcast(int)",2,3,10
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulatedAccessForMethod(Scope,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulatedReadAccessForField(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulatedWriteAccessForField(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulationForConstructor(Scope,MethodBinding)",1,7,7
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulationForField(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulationForMethod(Scope,MethodBinding)",1,7,7
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateObjectWrapperForType(TypeBinding)",1,2,3
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.getBaseTypeValue(int)",2,2,9
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeAccessibleObjectSetAccessible()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeArrayNewInstance()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeClassGetDeclaredConstructor()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeClassGetDeclaredField()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeClassGetDeclaredMethod()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeJavaLangReflectConstructorNewInstance()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeJavaLangReflectFieldGetter(int)",2,2,10
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeJavaLangReflectFieldSetter(int)",2,2,10
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeJavaLangReflectMethodInvoke()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.resizeByteArray()",1,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetCompiler.CodeSnippetCompiler(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory,EvaluationContext,int,int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCompiler.initializeParser()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.CodeSnippetEnvironment(INameEnvironment,EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.cleanup()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.findType(char[],char[][])",2,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.findType(char[][])",6,5,7
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.isPackage(char[][],char[])",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.CodeSnippetEvaluator(char[],EvaluationContext,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.addEvaluationResultForCompilationProblem(Map,IProblem,char[])",2,3,6
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getClassName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getCompiler(ICompilerRequestor)",1,6,6
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getMapper()",1,4,5
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getSource()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getWrapperEnvironment()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.CodeSnippetFieldReference(char[],long,EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,6,7
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generateCode(BlockScope,CodeStream,boolean)",1,11,11
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",1,10,11
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",1,12,17
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",2,19,20
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.resolveType(BlockScope)",7,8,11
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.CodeSnippetMessageSend(EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.generateCode(BlockScope,CodeStream,boolean)",2,20,24
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",2,9,12
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.resolveType(BlockScope)",19,24,28
"org.eclipse.jdt.internal.eval.CodeSnippetParser.CodeSnippetParser(ProblemReporter,EvaluationContext,boolean,int,int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.classInstanceCreation(boolean)",1,3,6
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeClassDeclaration()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeClassHeaderName1()",1,3,5
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeEmptyStatement()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeExpressionStatement()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeFieldAccess(boolean)",1,2,3
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeInterfaceHeaderName1()",1,3,5
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeLocalVariableDeclarationStatement()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodDeclaration(boolean)",1,7,11
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodInvocationName()",1,5,5
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodInvocationSuper()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumePrimaryNoNewArrayThis()",1,4,4
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementBreak()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementBreakWithLabel()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementCatch()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementContinue()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementContinueWithLabel()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementDo()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementFor()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementIfNoElse()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementIfWithElse()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementLabel()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementReturn()",1,4,6
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementSwitch()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementSynchronized()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementThrow()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementTry(boolean)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementWhile()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.endParse(int)",7,9,22
"org.eclipse.jdt.internal.eval.CodeSnippetParser.getUnspecifiedReference()",2,3,4
"org.eclipse.jdt.internal.eval.CodeSnippetParser.getUnspecifiedReferenceOptimized()",3,2,4
"org.eclipse.jdt.internal.eval.CodeSnippetParser.ignoreExpressionAssignment()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.isTopLevelType()",1,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.newMessageSend()",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.recordLastStatementIfNeeded()",1,2,3
"org.eclipse.jdt.internal.eval.CodeSnippetParser.reportSyntaxErrors(boolean,int)",1,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.resumeOnSyntaxError()",2,1,5
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.CodeSnippetQualifiedNameReference(char[][],long[],int,int,EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.checkFieldAccess(BlockScope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,5,6
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateCode(BlockScope,CodeStream,boolean)",1,11,11
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",1,10,11
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",1,12,16
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateReadSequence(BlockScope,CodeStream)",2,26,31
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateReceiver(CodeStream)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.getOtherFieldBindings(BlockScope)",13,15,19
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.getReceiverType(BlockScope)",5,2,5
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.manageSyntheticAccessIfNecessary(BlockScope,FieldBinding,TypeBinding,int,FlowInfo)",2,17,23
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.reportError(BlockScope)",10,13,14
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.resolveTypeVisibility(BlockScope)",2,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.CodeSnippetReturnStatement(Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.generateReturnBytecode(CodeStream)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.generateStoreSaveValueIfNecessary(CodeStream)",1,5,7
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.needValue()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.prepareSaveValueLocation(TryStatement)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.resolve(BlockScope)",6,7,7
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.CodeSnippetScope(BlockScope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.CodeSnippetScope(BlockScope,int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.CodeSnippetScope(int,Scope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.canBeSeenByForCodeSnippet(FieldBinding,TypeBinding,InvocationSite,Scope)",20,8,23
"org.eclipse.jdt.internal.eval.CodeSnippetScope.canBeSeenByForCodeSnippet(MethodBinding,TypeBinding,InvocationSite,Scope)",20,8,24
"org.eclipse.jdt.internal.eval.CodeSnippetScope.canBeSeenByForCodeSnippet(ReferenceBinding,ReferenceBinding)",5,7,9
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findExactMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",3,3,4
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findFieldForCodeSnippet(TypeBinding,char[],InvocationSite)",23,15,30
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",15,18,32
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findMethodForArray(ArrayBinding,char[],TypeBinding[],InvocationSite)",8,4,9
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getBinding(char[][],int,InvocationSite,ReferenceBinding)",17,16,20
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getConstructor(ReferenceBinding,TypeBinding[],InvocationSite)",7,4,11
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getFieldForCodeSnippet(TypeBinding,char[],InvocationSite)",2,1,3
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getImplicitMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",13,13,30
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.CodeSnippetSingleNameReference(char[],long,EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",2,6,9
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.checkFieldAccess(BlockScope)",4,5,5
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",6,21,33
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateCode(BlockScope,CodeStream,boolean)",2,15,16
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateCompoundAssignment(BlockScope,CodeStream,MethodBinding,Expression,int,int,boolean)",7,25,32
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",2,21,27
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateReceiver(CodeStream)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.getReceiverType(BlockScope)",5,2,5
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",4,12,14
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.reportError(BlockScope)",10,12,12
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.BinaryMethodSkeleton(char[],char[],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getArgumentNames()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getExceptionTypeNames()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getGenericSignature()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getMethodDescriptor()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getModifiers()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getSelector()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getTagBits()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.isClinit()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.isConstructor()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.CodeSnippetSkeleton()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getEnclosingTypeName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getFields()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getFileName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getGenericSignature()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getKind()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getMemberTypes()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getMethods()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getModifiers()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getSuperclassName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getTagBits()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isLocal()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isMember()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.sourceFileName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.CodeSnippetSuperReference(int,int,EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.CodeSnippetThisReference(int,int,EvaluationContext,boolean)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.checkAccess(MethodScope)",3,3,4
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.resolveType(BlockScope)",4,3,6
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.CodeSnippetToCuMapper(char[],char[],char[][],char[],char[],char[][],char[][],int[],char[])",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.buildCUSource()",1,7,8
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getCUSource()",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getCompletionRequestor(CompletionRequestor)",5,7,11
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getEvaluationType(int)",6,1,10
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getImport(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getSelectionRequestor(ISelectionRequestor)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetTypeDeclaration.CodeSnippetTypeDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetTypeDeclaration.generateCode(ClassFile)",6,10,13
"org.eclipse.jdt.internal.eval.EvaluationContext.EvaluationContext()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.allVariables()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.complete(char[],int,SearchableEnvironment,CompletionRequestor,Map,IJavaProject)",1,1,2
"org.eclipse.jdt.internal.eval.EvaluationContext.deleteVariable(GlobalVariable)",4,3,5
"org.eclipse.jdt.internal.eval.EvaluationContext.deployCodeSnippetClassIfNeeded(IRequestor)",1,2,2
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluate(char[],INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluate(char[],char[][],char[][],int[],char[],boolean,boolean,INameEnvironment,Map,IRequestor,IProblemFactory)",1,6,8
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluateImports(INameEnvironment,IRequestor,IProblemFactory)",2,8,11
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluateVariable(GlobalVariable,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluateVariables(INameEnvironment,Map,IRequestor,IProblemFactory)",4,3,4
"org.eclipse.jdt.internal.eval.EvaluationContext.getCodeSnippetBytes()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getCodeSnippetSource()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getImports()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getPackageName()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getRootCodeSnippetBinary()",1,1,2
"org.eclipse.jdt.internal.eval.EvaluationContext.newVariable(char[],char[],char[])",1,2,2
"org.eclipse.jdt.internal.eval.EvaluationContext.select(char[],int,int,SearchableEnvironment,ISelectionRequestor,Map)",1,1,2
"org.eclipse.jdt.internal.eval.EvaluationContext.setImports(char[][])",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.setPackageName(char[])",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.EvaluationResult(char[],int,IProblem[])",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.EvaluationResult(char[],int,char[],char[])",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.addProblem(IProblem)",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getEvaluationID()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getEvaluationType()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getProblems()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getValue()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getValueDisplayString()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getValueTypeName()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.hasErrors()",4,3,4
"org.eclipse.jdt.internal.eval.EvaluationResult.hasProblems()",1,1,2
"org.eclipse.jdt.internal.eval.EvaluationResult.hasValue()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.hasWarnings()",4,3,4
"org.eclipse.jdt.internal.eval.EvaluationResult.toString()",2,6,10
"org.eclipse.jdt.internal.eval.Evaluator.Evaluator(EvaluationContext,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.Evaluator.evaluationResultsForCompilationProblems(CompilationResult,char[])",1,3,3
"org.eclipse.jdt.internal.eval.Evaluator.getClasses()",2,7,7
"org.eclipse.jdt.internal.eval.Evaluator.getCompiler(ICompilerRequestor)",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.GlobalVariable(char[],char[],char[])",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.getInitializer()",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.getName()",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.getTypeName()",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.toString()",1,2,2
"org.eclipse.jdt.internal.eval.InstallException.InstallException()",1,1,1
"org.eclipse.jdt.internal.eval.InstallException.InstallException(String)",1,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.VariablesEvaluator(EvaluationContext,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.addEvaluationResultForCompilationProblem(Map,IProblem,char[])",4,12,16
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getClassName()",1,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getCompiler(ICompilerRequestor)",1,5,5
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getPackageName()",1,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getSource()",1,10,11
"org.eclipse.jdt.internal.eval.VariablesEvaluator.numberOfCRs(char[])",2,2,6
"org.eclipse.jdt.internal.eval.VariablesInfo.VariablesInfo(char[],char[],ClassFile[],GlobalVariable[],int)",1,1,1
"org.eclipse.jdt.internal.eval.VariablesInfo.indexOf(GlobalVariable)",3,2,3
"org.eclipse.jdt.internal.eval.VariablesInfo.varNamed(char[])",3,2,3
"org.eclipse.jdt.internal.formatter.AbortFormatting.AbortFormatting(String)",1,1,1
"org.eclipse.jdt.internal.formatter.AbortFormatting.AbortFormatting(Throwable)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.BinaryExpressionFragmentBuilder()",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.addRealFragment(ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.addSmallFragment(ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.buildFragments(Expression)",2,2,2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.fragments()",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.operators()",1,2,2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.realFragmentsSize()",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.size()",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(AND_AND_Expression,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(AllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayInitializer,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(Assignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(BinaryExpression,BlockScope)",3,11,19
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(CastExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(CharLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(CompoundAssignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ConditionalExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(DoubleLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(EqualExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ExtendedStringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(FalseLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(FieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(FloatLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(InstanceOfExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(IntLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(LongLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(NullLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(OR_OR_Expression,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(PostfixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(PrefixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(QualifiedAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(QualifiedNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(QualifiedSuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(QualifiedThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(SingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(StringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(StringLiteralConcatenation,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(SuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(TrueLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(UnaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder.CascadingMethodInvocationFragmentBuilder()",1,1,1
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder.fragments()",1,1,1
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder.size()",1,1,1
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder.visit(MessageSend,BlockScope)",3,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.CodeFormatterVisitor(DefaultCodeFormatterOptions,Map,int,int,CodeSnippetParsingUtil)",1,3,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.MultiFieldDeclaration.MultiFieldDeclaration(FieldDeclaration[])",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.acceptProblem(IProblem)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.buildFragments(BinaryExpression,BlockScope)",2,2,11
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.buildFragments(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.checkChunkStart(int)",2,1,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.commentStartsBlock(int,int)",3,3,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.computeMergedMemberDeclarations(ASTNode[])",2,8,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.computeMergedMemberDeclarations(TypeDeclaration)",5,9,28
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.dumpBinaryExpression(BinaryExpression,int,BlockScope)",1,15,16
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.dumpEqualityExpression(BinaryExpression,int,BlockScope)",1,4,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.failedToFormat()",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(AbstractMethodDeclaration,ClassScope,boolean,boolean)",1,6,9
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(FieldDeclaration,ASTVisitor,MethodScope,boolean,boolean)",1,10,11
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(MultiFieldDeclaration,ASTVisitor,MethodScope,boolean,boolean)",1,16,17
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(String,ASTNode[])",2,3,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(String,CompilationUnitDeclaration)",2,4,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(String,ConstructorDeclaration)",2,7,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(String,Expression)",2,3,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(TypeDeclaration)",8,38,49
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(TypeDeclaration,ClassScope,boolean,boolean)",1,5,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatAnonymousTypeDeclaration(TypeDeclaration)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatBlock(Block,BlockScope,String,boolean)",1,10,10
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder,BlockScope)",1,30,32
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatClassBodyDeclarations(ASTNode[])",1,14,17
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatEmptyTypeDeclaration(boolean)",1,3,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatEnumConstantArguments(FieldDeclaration,boolean,boolean,boolean,boolean,boolean,boolean,int)",2,8,10
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatGuardClauseBlock(Block,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatLeftCurlyBrace(int,String)",1,3,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatLocalDeclaration(LocalDeclaration,BlockScope,boolean,boolean)",1,10,10
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatMessageSend(MessageSend,BlockScope,Alignment)",1,19,21
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatMethodArguments(AbstractMethodDeclaration,boolean,boolean,boolean,boolean,boolean,boolean,int)",1,8,9
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatNecessaryEmptyStatement()",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatOpeningBrace(String,boolean)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatStatements(BlockScope,Statement[],boolean)",1,15,27
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatThrowsClause(AbstractMethodDeclaration,boolean,boolean,int)",1,7,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(TypeDeclaration)",1,16,20
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeOpeningBrace(String,boolean,TypeDeclaration)",1,4,10
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeOpeningBraceForEnumConstant(String,boolean,TypeDeclaration)",1,3,9
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.getDimensions()",3,2,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.hasComments()",2,2,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isClosingGenericToken()",4,4,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isGuardClause(Block)",1,4,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isMultipleLocalDeclaration(LocalDeclaration)",2,1,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isNextToken(int)",3,3,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isPartOfMultipleLocalDeclaration()",4,2,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.manageClosingParenthesizedExpression(Expression,int)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.manageOpeningParenthesizedExpression(Expression,int)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(AND_AND_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(AllocationExpression,BlockScope)",1,16,17
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(AnnotationMethodDeclaration,ClassScope)",1,5,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Argument,BlockScope)",1,7,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayAllocationExpression,BlockScope)",1,8,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayInitializer,BlockScope)",1,24,25
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayQualifiedTypeReference,BlockScope)",1,5,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayQualifiedTypeReference,ClassScope)",1,5,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayReference,BlockScope)",1,4,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayTypeReference,BlockScope)",1,7,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayTypeReference,ClassScope)",1,7,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(AssertStatement,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Assignment,BlockScope)",1,4,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(BinaryExpression,BlockScope)",17,17,17
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Block,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(BreakStatement,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CaseStatement,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CastExpression,BlockScope)",1,5,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CharLiteral,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ClassLiteralAccess,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Clinit,ClassScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CompilationUnitDeclaration,CompilationUnitScope)",1,12,12
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CompoundAssignment,BlockScope)",2,5,15
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ConditionalExpression,BlockScope)",1,7,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ConstructorDeclaration,ClassScope)",2,22,22
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ContinueStatement,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(DoStatement,BlockScope)",1,7,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(DoubleLiteral,BlockScope)",1,5,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(EmptyStatement,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(EqualExpression,BlockScope)",2,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ExplicitConstructorCall,BlockScope)",2,16,18
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(FalseLiteral,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(FieldDeclaration,MethodScope)",1,8,13
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(FieldReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(FloatLiteral,BlockScope)",1,5,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ForStatement,BlockScope)",1,18,19
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ForeachStatement,BlockScope)",1,7,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(IfStatement,BlockScope)",1,26,28
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ImportReference,CompilationUnitScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Initializer,MethodScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(InstanceOfExpression,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(IntLiteral,BlockScope)",1,5,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(LabeledStatement,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(LocalDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(LongLiteral,BlockScope)",1,5,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MarkerAnnotation,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MarkerAnnotation,CompilationUnitScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MemberValuePair,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MemberValuePair,ClassScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MemberValuePair,CompilationUnitScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MessageSend,BlockScope)",1,8,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MethodDeclaration,ClassScope)",2,22,22
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(NormalAnnotation,BlockScope)",1,6,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(NormalAnnotation,CompilationUnitScope)",1,6,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(NullLiteral,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(OR_OR_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ParameterizedQualifiedTypeReference,BlockScope)",1,14,14
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ParameterizedQualifiedTypeReference,ClassScope)",1,13,13
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ParameterizedSingleTypeReference,BlockScope)",1,11,11
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ParameterizedSingleTypeReference,ClassScope)",1,11,11
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(PostfixExpression,BlockScope)",1,4,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(PrefixExpression,BlockScope)",1,4,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedAllocationExpression,BlockScope)",1,18,19
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedNameReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedSuperReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedThisReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedTypeReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedTypeReference,ClassScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ReturnStatement,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleMemberAnnotation,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleMemberAnnotation,CompilationUnitScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleNameReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleTypeReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleTypeReference,ClassScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(StringLiteral,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(StringLiteralConcatenation,BlockScope)",1,7,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SuperReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SwitchStatement,BlockScope)",1,30,37
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SynchronizedStatement,BlockScope)",1,2,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ThisReference,BlockScope)",1,4,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ThrowStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TrueLiteral,BlockScope)",1,3,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TryStatement,BlockScope)",1,7,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeParameter,BlockScope)",1,6,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeParameter,ClassScope)",1,6,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(UnaryExpression,BlockScope)",2,5,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(WhileStatement,BlockScope)",1,6,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Wildcard,BlockScope)",2,3,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Wildcard,ClassScope)",2,3,5
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter(DefaultCodeFormatterOptions)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter(DefaultCodeFormatterOptions,Map)",1,3,3
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter(Map)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(int,String,int,int,int,String)",7,8,9
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatClassBodyDeclarations(String,int,String,int,int)",2,1,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(String,int,String,int,int)",1,2,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatExpression(String,int,String,int,int)",2,1,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatStatements(String,int,String,int,int)",2,1,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.getDebugOutput()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.getDefaultCompilerOptions()",1,3,3
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.internalFormatClassBodyDeclarations(String,int,String,ASTNode[],int,int)",1,2,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.internalFormatExpression(String,int,String,Expression,int,int)",1,2,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.internalFormatStatements(String,int,String,ConstructorDeclaration,int,int)",1,2,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.probeFormatting(String,int,String,int,int)",4,4,4
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.DefaultCodeFormatterOptions()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.DefaultCodeFormatterOptions(Map)",2,1,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getAlignment(int)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getDefaultSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getJavaConventionsSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getMap()",1,1,183
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.set(Map)",1,217,307
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.setDefaultSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.setJavaConventionsSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.Location.Location(Scribe,int)",1,1,1
"org.eclipse.jdt.internal.formatter.Location.update(Scribe,int)",1,1,1
"org.eclipse.jdt.internal.formatter.OptimizedReplaceEdit.OptimizedReplaceEdit(int,int,String)",1,1,1
"org.eclipse.jdt.internal.formatter.OptimizedReplaceEdit.toString()",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.Scribe(CodeFormatterVisitor,Map,int,int,CodeSnippetParsingUtil)",1,3,6
"org.eclipse.jdt.internal.formatter.Scribe.addDeleteEdit(int,int)",1,2,2
"org.eclipse.jdt.internal.formatter.Scribe.addInsertEdit(int,String)",1,2,2
"org.eclipse.jdt.internal.formatter.Scribe.addOptimizedReplaceEdit(int,int,String)",5,7,18
"org.eclipse.jdt.internal.formatter.Scribe.addReplaceEdit(int,int,String)",1,2,2
"org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Alignment,int)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.checkNLSTag(int)",1,1,2
"org.eclipse.jdt.internal.formatter.Scribe.consumeNextToken()",1,1,2
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int,boolean)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int,int,boolean)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int,int,int,boolean)",4,6,16
"org.eclipse.jdt.internal.formatter.Scribe.createMemberAlignment(String,int,int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.enterAlignment(Alignment)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.enterMemberAlignment(Alignment)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.exitAlignment(Alignment,boolean)",4,1,5
"org.eclipse.jdt.internal.formatter.Scribe.exitMemberAlignment(Alignment)",4,1,4
"org.eclipse.jdt.internal.formatter.Scribe.getAlignment(String)",2,2,2
"org.eclipse.jdt.internal.formatter.Scribe.getColumnIndentationLevel()",2,1,2
"org.eclipse.jdt.internal.formatter.Scribe.getCommentIndex(int)",6,1,7
"org.eclipse.jdt.internal.formatter.Scribe.getEmptyLines(int)",5,6,8
"org.eclipse.jdt.internal.formatter.Scribe.getIndentationLevel(int)",3,1,3
"org.eclipse.jdt.internal.formatter.Scribe.getLastEdit()",2,1,2
"org.eclipse.jdt.internal.formatter.Scribe.getLineEnd(int)",4,1,4
"org.eclipse.jdt.internal.formatter.Scribe.getMemberAlignment()",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.getNewLine()",3,1,3
"org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(int)",3,1,4
"org.eclipse.jdt.internal.formatter.Scribe.getPreserveEmptyLines(int)",3,3,3
"org.eclipse.jdt.internal.formatter.Scribe.getRootEdit()",1,3,5
"org.eclipse.jdt.internal.formatter.Scribe.handleLineTooLong()",4,4,7
"org.eclipse.jdt.internal.formatter.Scribe.hasNLSTag(int)",5,5,7
"org.eclipse.jdt.internal.formatter.Scribe.indent()",1,1,2
"org.eclipse.jdt.internal.formatter.Scribe.indexOf(char[],char[],int,int)",8,1,11
"org.eclipse.jdt.internal.formatter.Scribe.initializeScanner(char[])",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.isValidEdit(OptimizedReplaceEdit)",12,9,18
"org.eclipse.jdt.internal.formatter.Scribe.preserveEmptyLines(int,int)",1,3,3
"org.eclipse.jdt.internal.formatter.Scribe.print(char[],boolean)",1,4,5
"org.eclipse.jdt.internal.formatter.Scribe.printBlockComment(char[],boolean)",2,12,17
"org.eclipse.jdt.internal.formatter.Scribe.printComment()",4,21,31
"org.eclipse.jdt.internal.formatter.Scribe.printCommentLine(char[])",3,8,11
"org.eclipse.jdt.internal.formatter.Scribe.printEmptyLines(int)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.printEmptyLines(int,int)",5,6,8
"org.eclipse.jdt.internal.formatter.Scribe.printEndOfCompilationUnit()",4,21,33
"org.eclipse.jdt.internal.formatter.Scribe.printIndentationIfNecessary()",1,4,5
"org.eclipse.jdt.internal.formatter.Scribe.printIndentationIfNecessary(StringBuffer)",1,4,5
"org.eclipse.jdt.internal.formatter.Scribe.printModifiers(Annotation[],ASTVisitor)",5,7,20
"org.eclipse.jdt.internal.formatter.Scribe.printNewLine()",3,1,3
"org.eclipse.jdt.internal.formatter.Scribe.printNewLine(int)",3,1,3
"org.eclipse.jdt.internal.formatter.Scribe.printNextToken(int)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.printNextToken(int,boolean)",2,1,3
"org.eclipse.jdt.internal.formatter.Scribe.printNextToken(int[])",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.printNextToken(int[],boolean)",2,4,5
"org.eclipse.jdt.internal.formatter.Scribe.printQualifiedReference(int)",4,3,9
"org.eclipse.jdt.internal.formatter.Scribe.printRule(StringBuffer)",1,4,4
"org.eclipse.jdt.internal.formatter.Scribe.printTrailingComment()",7,10,18
"org.eclipse.jdt.internal.formatter.Scribe.redoAlignment(AlignmentException)",2,1,2
"org.eclipse.jdt.internal.formatter.Scribe.redoMemberAlignment(AlignmentException)",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.reset()",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.resetAt(Location)",1,1,2
"org.eclipse.jdt.internal.formatter.Scribe.resize()",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.setLineSeparatorAndIdentationLevel(DefaultCodeFormatterOptions)",1,1,2
"org.eclipse.jdt.internal.formatter.Scribe.space()",2,1,2
"org.eclipse.jdt.internal.formatter.Scribe.tab(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.formatter.Scribe.toString()",1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.unIndent()",1,1,2
"org.eclipse.jdt.internal.formatter.align.Alignment.Alignment(String,int,int,Scribe,int,int,int)",1,3,7
"org.eclipse.jdt.internal.formatter.align.Alignment.checkChunkStart(int,int,int)",2,3,3
"org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn()",5,2,10
"org.eclipse.jdt.internal.formatter.align.Alignment.couldBreak()",12,2,20
"org.eclipse.jdt.internal.formatter.align.Alignment.getAlignment(String)",3,1,3
"org.eclipse.jdt.internal.formatter.align.Alignment.performFragmentEffect()",3,3,6
"org.eclipse.jdt.internal.formatter.align.Alignment.reset()",1,2,3
"org.eclipse.jdt.internal.formatter.align.Alignment.toFragmentsString(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.formatter.align.Alignment.toString()",1,3,4
"org.eclipse.jdt.internal.formatter.align.Alignment.update()",1,1,3
"org.eclipse.jdt.internal.formatter.align.AlignmentException.AlignmentException(int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.align.AlignmentException.AlignmentException(int,int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.align.AlignmentException.toString()",2,2,3
"org.eclipse.jdt.internal.formatter.old.CodeFormatter.CodeFormatter(Map)",1,2,2
"org.eclipse.jdt.internal.formatter.old.CodeFormatter.format(String,int,int[],String)",6,19,22

Class,OCavg,WMC
"org.eclipse.jdt.core.BufferChangedEvent","1,00",5
"org.eclipse.jdt.core.CheckDebugAttributes","3,25",13
"org.eclipse.jdt.core.ClasspathContainerInitializer","1,20",6
"org.eclipse.jdt.core.ClasspathVariableInitializer","1,00",1
"org.eclipse.jdt.core.CompletionProposal","1,62",39
"org.eclipse.jdt.core.CompletionRequestor","1,50",9
"org.eclipse.jdt.core.CompletionRequestorAdapter","1,00",14
"org.eclipse.jdt.core.CorrectionEngine","5,29",37
"org.eclipse.jdt.core.ElementChangedEvent","1,00",3
"org.eclipse.jdt.core.Flags","1,60",32
"org.eclipse.jdt.core.JDTCompilerAdapter","17,00",51
"org.eclipse.jdt.core.JavaConventions","4,15",54
"org.eclipse.jdt.core.JavaCore","2,75",212
"org.eclipse.jdt.core.JavaModelException","1,67",15
"org.eclipse.jdt.core.NamingConventions","2,09",46
"org.eclipse.jdt.core.NamingConventions.NamingRequestor","3,80",19
"org.eclipse.jdt.core.Signature","4,87",370
"org.eclipse.jdt.core.ToolFactory","2,60",26
"org.eclipse.jdt.core.WorkingCopyOwner","1,00",2
"org.eclipse.jdt.core.compiler.CharOperation","5,35",278
"org.eclipse.jdt.core.compiler.InvalidInputException","1,00",2
"org.eclipse.jdt.core.dom.AST","1,44",181
"org.eclipse.jdt.core.dom.ASTConverter","6,25",981
"org.eclipse.jdt.core.dom.ASTMatcher","2,69",239
"org.eclipse.jdt.core.dom.ASTNode","3,75",199
"org.eclipse.jdt.core.dom.ASTNode.NodeList","2,18",24
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor","1,25",5
"org.eclipse.jdt.core.dom.ASTParser","3,45",69
"org.eclipse.jdt.core.dom.ASTRequestor","1,50",6
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator","1,75",14
"org.eclipse.jdt.core.dom.ASTVisitor","1,00",170
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration","1,23",16
"org.eclipse.jdt.core.dom.Annotation","1,27",14
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration","1,53",26
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration","2,05",43
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration","1,17",14
"org.eclipse.jdt.core.dom.ArrayAccess","1,93",27
"org.eclipse.jdt.core.dom.ArrayCreation","1,69",27
"org.eclipse.jdt.core.dom.ArrayInitializer","1,18",13
"org.eclipse.jdt.core.dom.ArrayType","1,64",23
"org.eclipse.jdt.core.dom.AssertStatement","1,71",24
"org.eclipse.jdt.core.dom.Assignment","1,94",33
"org.eclipse.jdt.core.dom.Assignment.Operator","1,33",4
"org.eclipse.jdt.core.dom.BindingComparator","5,10",51
"org.eclipse.jdt.core.dom.BindingKey","4,84",92
"org.eclipse.jdt.core.dom.BindingKeyScanner","4,31",56
"org.eclipse.jdt.core.dom.BindingResolver","1,00",35
"org.eclipse.jdt.core.dom.Block","1,18",13
"org.eclipse.jdt.core.dom.BlockComment","1,00",9
"org.eclipse.jdt.core.dom.BodyDeclaration","1,50",18
"org.eclipse.jdt.core.dom.BooleanLiteral","1,17",14
"org.eclipse.jdt.core.dom.BreakStatement","1,33",16
"org.eclipse.jdt.core.dom.CastExpression","1,93",27
"org.eclipse.jdt.core.dom.CatchClause","1,93",27
"org.eclipse.jdt.core.dom.CharacterLiteral","4,29",60
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor","1,33",4
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor","1,25",5
"org.eclipse.jdt.core.dom.ClassInstanceCreation","2,36",52
"org.eclipse.jdt.core.dom.Comment","1,00",7
"org.eclipse.jdt.core.dom.CompilationUnit","1,97",59
"org.eclipse.jdt.core.dom.CompilationUnitResolver","3,91",90
"org.eclipse.jdt.core.dom.ConditionalExpression","2,19",35
"org.eclipse.jdt.core.dom.ConstructorInvocation","1,77",23
"org.eclipse.jdt.core.dom.ContinueStatement","1,33",16
"org.eclipse.jdt.core.dom.DefaultASTVisitor","1,01",142
"org.eclipse.jdt.core.dom.DefaultBindingResolver","6,81",252
"org.eclipse.jdt.core.dom.DefaultBindingResolver.BindingTables","1,00",1
"org.eclipse.jdt.core.dom.DefaultCommentMapper","7,17",86
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor","1,67",5
"org.eclipse.jdt.core.dom.DoStatement","1,93",27
"org.eclipse.jdt.core.dom.DocCommentParser","5,78",104
"org.eclipse.jdt.core.dom.EmptyStatement","1,00",8
"org.eclipse.jdt.core.dom.EnhancedForStatement","2,12",36
"org.eclipse.jdt.core.dom.EnumConstantDeclaration","1,96",45
"org.eclipse.jdt.core.dom.EnumDeclaration","1,58",30
"org.eclipse.jdt.core.dom.Expression","1,00",2
"org.eclipse.jdt.core.dom.ExpressionStatement","1,58",19
"org.eclipse.jdt.core.dom.FieldAccess","1,87",28
"org.eclipse.jdt.core.dom.FieldDeclaration","2,11",40
"org.eclipse.jdt.core.dom.ForStatement","1,71",29
"org.eclipse.jdt.core.dom.IfStatement","2,00",32
"org.eclipse.jdt.core.dom.ImportDeclaration","1,72",31
"org.eclipse.jdt.core.dom.InfixExpression","2,05",41
"org.eclipse.jdt.core.dom.InfixExpression.Operator","1,33",4
"org.eclipse.jdt.core.dom.Initializer","2,06",35
"org.eclipse.jdt.core.dom.InstanceofExpression","1,93",27
"org.eclipse.jdt.core.dom.InternalASTRewrite","2,13",32
"org.eclipse.jdt.core.dom.Javadoc","1,93",27
"org.eclipse.jdt.core.dom.LabeledStatement","1,93",27
"org.eclipse.jdt.core.dom.LineComment","1,00",9
"org.eclipse.jdt.core.dom.MarkerAnnotation","1,36",15
"org.eclipse.jdt.core.dom.MemberRef","1,67",25
"org.eclipse.jdt.core.dom.MemberValuePair","1,93",27
"org.eclipse.jdt.core.dom.Message","1,83",11
"org.eclipse.jdt.core.dom.MethodBinding","2,77",72
"org.eclipse.jdt.core.dom.MethodDeclaration","2,38",81
"org.eclipse.jdt.core.dom.MethodInvocation","2,06",37
"org.eclipse.jdt.core.dom.MethodRef","1,65",28
"org.eclipse.jdt.core.dom.MethodRefParameter","1,71",24
"org.eclipse.jdt.core.dom.Modifier","1,12",28
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword","1,60",8
"org.eclipse.jdt.core.dom.NaiveASTFlattener","3,07",273
"org.eclipse.jdt.core.dom.Name","1,20",6
"org.eclipse.jdt.core.dom.NodeEventHandler","1,00",11
"org.eclipse.jdt.core.dom.NodeSearcher","1,86",13
"org.eclipse.jdt.core.dom.NormalAnnotation","1,38",18
"org.eclipse.jdt.core.dom.NullLiteral","1,00",9
"org.eclipse.jdt.core.dom.NumberLiteral","1,67",20
"org.eclipse.jdt.core.dom.PackageBinding","1,77",23
"org.eclipse.jdt.core.dom.PackageDeclaration","2,12",36
"org.eclipse.jdt.core.dom.ParameterizedType","1,57",22
"org.eclipse.jdt.core.dom.ParenthesizedExpression","1,58",19
"org.eclipse.jdt.core.dom.PostfixExpression","1,67",25
"org.eclipse.jdt.core.dom.PostfixExpression.Operator","1,33",4
"org.eclipse.jdt.core.dom.PrefixExpression","1,67",25
"org.eclipse.jdt.core.dom.PrefixExpression.Operator","1,33",4
"org.eclipse.jdt.core.dom.PrimitiveType","1,31",17
"org.eclipse.jdt.core.dom.PrimitiveType.Code","1,00",2
"org.eclipse.jdt.core.dom.QualifiedName","1,87",28
"org.eclipse.jdt.core.dom.QualifiedType","1,93",27
"org.eclipse.jdt.core.dom.ReturnStatement","1,33",16
"org.eclipse.jdt.core.dom.SimpleName","2,14",30
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor","1,33",4
"org.eclipse.jdt.core.dom.SimpleType","1,58",19
"org.eclipse.jdt.core.dom.SingleMemberAnnotation","1,77",23
"org.eclipse.jdt.core.dom.SingleVariableDeclaration","2,21",64
"org.eclipse.jdt.core.dom.Statement","2,20",11
"org.eclipse.jdt.core.dom.StringLiteral","2,93",41
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor","1,86",13
"org.eclipse.jdt.core.dom.SuperConstructorInvocation","1,81",29
"org.eclipse.jdt.core.dom.SuperFieldAccess","1,67",25
"org.eclipse.jdt.core.dom.SuperMethodInvocation","2,06",37
"org.eclipse.jdt.core.dom.SwitchCase","1,46",19
"org.eclipse.jdt.core.dom.SwitchStatement","1,57",22
"org.eclipse.jdt.core.dom.SynchronizedStatement","1,93",27
"org.eclipse.jdt.core.dom.TagElement","1,27",19
"org.eclipse.jdt.core.dom.TextElement","1,42",17
"org.eclipse.jdt.core.dom.ThisExpression","1,33",16
"org.eclipse.jdt.core.dom.ThrowStatement","1,58",19
"org.eclipse.jdt.core.dom.TryStatement","1,69",27
"org.eclipse.jdt.core.dom.Type","1,00",8
"org.eclipse.jdt.core.dom.TypeBinding","3,07",166
"org.eclipse.jdt.core.dom.TypeDeclaration","2,59",83
"org.eclipse.jdt.core.dom.TypeDeclarationStatement","1,80",27
"org.eclipse.jdt.core.dom.TypeLiteral","1,58",19
"org.eclipse.jdt.core.dom.TypeParameter","1,53",23
"org.eclipse.jdt.core.dom.VariableBinding","3,50",56
"org.eclipse.jdt.core.dom.VariableDeclaration","1,00",5
"org.eclipse.jdt.core.dom.VariableDeclarationExpression","2,17",39
"org.eclipse.jdt.core.dom.VariableDeclarationFragment","1,65",33
"org.eclipse.jdt.core.dom.VariableDeclarationStatement","2,17",39
"org.eclipse.jdt.core.dom.WhileStatement","1,93",27
"org.eclipse.jdt.core.dom.WildcardType","1,38",22
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite","2,43",51
"org.eclipse.jdt.core.dom.rewrite.ListRewrite","1,94",33
"org.eclipse.jdt.core.formatter.CodeFormatter",n/a,0
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants","4,78",43
"org.eclipse.jdt.core.jdom.DOMException","1,00",2
"org.eclipse.jdt.core.jdom.DOMFactory","1,44",26
"org.eclipse.jdt.core.search.FieldDeclarationMatch","1,00",1
"org.eclipse.jdt.core.search.FieldReferenceMatch","1,00",3
"org.eclipse.jdt.core.search.LocalVariableDeclarationMatch","1,00",1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch","1,00",3
"org.eclipse.jdt.core.search.MethodDeclarationMatch","1,00",1
"org.eclipse.jdt.core.search.MethodReferenceMatch","1,00",4
"org.eclipse.jdt.core.search.PackageDeclarationMatch","1,00",1
"org.eclipse.jdt.core.search.PackageReferenceMatch","1,00",1
"org.eclipse.jdt.core.search.SearchDocument","1,00",5
"org.eclipse.jdt.core.search.SearchEngine","1,26",34
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter","1,00",4
"org.eclipse.jdt.core.search.SearchEngine.SearchPatternAdapter","1,00",1
"org.eclipse.jdt.core.search.SearchMatch","1,12",18
"org.eclipse.jdt.core.search.SearchParticipant","1,20",6
"org.eclipse.jdt.core.search.SearchPattern","10,58",201
"org.eclipse.jdt.core.search.SearchRequestor","1,00",4
"org.eclipse.jdt.core.search.TypeDeclarationMatch","1,00",1
"org.eclipse.jdt.core.search.TypeReferenceMatch","1,00",1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter","1,00",205
"org.eclipse.jdt.core.util.ClassFileBytesDisassembler",n/a,0
"org.eclipse.jdt.core.util.ClassFormatException","1,00",2
"org.eclipse.jdt.core.util.CompilationUnitSorter","1,50",3
"org.eclipse.jdt.core.util.OpcodeStringValues",n/a,0
"org.eclipse.jdt.internal.antadapter.AntAdapterMessages","1,00",3
"org.eclipse.jdt.internal.codeassist.CompletionEngine","8,78",755
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper","11,20",56
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal","3,29",46
"org.eclipse.jdt.internal.codeassist.SelectionEngine","8,61",198
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector","1,05",85
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound","1,00",3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName","1,50",6
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassLiteralAccess","1,33",4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassReference","1,00",2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExceptionReference","1,00",2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExplicitConstructorCall","4,33",13
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldName","1,67",5
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldType","1,50",3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnImportReference","2,00",4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnInterfaceReference","1,00",2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1","1,00",7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2","1,00",4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3","1,00",6
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnLocalName","1,67",5
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberAccess","1,33",4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSend","5,50",11
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodName","3,00",9
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodReturnType","1,00",3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodTypeParameter","1,33",4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnPackageReference","2,00",4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference","2,12",17
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedAllocationExpression","5,00",10
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedClassReference","1,50",3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedExceptionReference","1,50",3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedInterfaceReference","1,50",3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedNameReference","2,33",7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference","1,40",7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference","1,00",4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference","1,67",10
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser","4,36",606
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner","31,50",189
"org.eclipse.jdt.internal.codeassist.complete.InvalidCursorLocation","1,00",1
"org.eclipse.jdt.internal.codeassist.impl.AssistOptions","12,33",37
"org.eclipse.jdt.internal.codeassist.impl.AssistParser","3,23",236
"org.eclipse.jdt.internal.codeassist.impl.Engine","4,78",43
"org.eclipse.jdt.internal.codeassist.select.SelectionNodeFound","1,00",3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName","1,50",6
"org.eclipse.jdt.internal.codeassist.select.SelectionOnExplicitConstructorCall","3,00",9
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldReference","1,33",4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldType","1,00",2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnImportReference","2,00",4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLocalName","1,33",4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnMessageSend","6,00",18
"org.eclipse.jdt.internal.codeassist.select.SelectionOnNameOfMemberValuePair","1,33",4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnPackageReference","2,00",4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedQualifiedTypeReference","2,50",10
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedSingleTypeReference","1,25",5
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedAllocationExpression","2,00",8
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedNameReference","3,33",10
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedSuperReference","1,33",4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedTypeReference","2,00",8
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleNameReference","2,67",8
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference","1,40",7
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSuperReference","1,33",4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser","3,04",155
"org.eclipse.jdt.internal.codeassist.select.SelectionScanner","2,33",7
"org.eclipse.jdt.internal.compiler.ASTVisitor","1,00",203
"org.eclipse.jdt.internal.compiler.ClassFile","7,27",429
"org.eclipse.jdt.internal.compiler.CompilationResult","4,05",89
"org.eclipse.jdt.internal.compiler.Compiler","3,65",62
"org.eclipse.jdt.internal.compiler.ConfigurableOption","1,58",19
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies","1,00",12
"org.eclipse.jdt.internal.compiler.DocumentElementParser","2,35",134
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.FieldInfo",n/a,0
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.MethodInfo",n/a,0
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.TypeInfo",n/a,0
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.TypeParameterInfo",n/a,0
"org.eclipse.jdt.internal.compiler.SourceElementParser","5,77",277
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor","1,60",8
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter","1,00",27
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression","6,33",38
"org.eclipse.jdt.internal.compiler.ast.ASTNode","4,17",75
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration","2,93",79
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration","1,67",15
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression","4,27",64
"org.eclipse.jdt.internal.compiler.ast.Annotation","16,80",84
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration","4,38",35
"org.eclipse.jdt.internal.compiler.ast.Argument","3,25",26
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression","6,17",37
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer","7,67",46
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference","1,86",13
"org.eclipse.jdt.internal.compiler.ast.ArrayReference","2,70",27
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference","1,86",13
"org.eclipse.jdt.internal.compiler.ast.AssertStatement","3,75",30
"org.eclipse.jdt.internal.compiler.ast.Assignment","2,73",41
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression","16,95",339
"org.eclipse.jdt.internal.compiler.ast.Block","3,00",30
"org.eclipse.jdt.internal.compiler.ast.BranchStatement","2,33",7
"org.eclipse.jdt.internal.compiler.ast.BreakStatement","3,75",15
"org.eclipse.jdt.internal.compiler.ast.CaseStatement","3,00",21
"org.eclipse.jdt.internal.compiler.ast.CastExpression","3,61",101
"org.eclipse.jdt.internal.compiler.ast.CharLiteral","3,17",19
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess","2,17",13
"org.eclipse.jdt.internal.compiler.ast.Clinit","3,00",36
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration","3,47",66
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment","4,33",39
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression","7,75",62
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration","6,13",92
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement","4,00",16
"org.eclipse.jdt.internal.compiler.ast.DoStatement","3,33",20
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral","3,40",17
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement","1,29",9
"org.eclipse.jdt.internal.compiler.ast.EqualExpression","9,58",115
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall","4,53",68
"org.eclipse.jdt.internal.compiler.ast.Expression","5,47",197
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral","1,00",6
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral","1,57",11
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration","5,75",46
"org.eclipse.jdt.internal.compiler.ast.FieldReference","4,29",90
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral","3,40",17
"org.eclipse.jdt.internal.compiler.ast.ForStatement","10,33",62
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement","9,33",56
"org.eclipse.jdt.internal.compiler.ast.IfStatement","4,43",31
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference","1,12",9
"org.eclipse.jdt.internal.compiler.ast.ImportReference","1,83",11
"org.eclipse.jdt.internal.compiler.ast.Initializer","1,67",15
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression","1,50",12
"org.eclipse.jdt.internal.compiler.ast.IntLiteral","2,50",25
"org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue","1,00",2
"org.eclipse.jdt.internal.compiler.ast.Javadoc","17,44",157
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression","3,40",17
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression","2,57",18
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference","1,00",5
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference","1,00",5
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference","3,43",24
"org.eclipse.jdt.internal.compiler.ast.JavadocImportReference","1,00",1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend","4,50",36
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference","1,62",13
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement","2,25",9
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference","1,50",6
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference","1,62",13
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement","2,29",16
"org.eclipse.jdt.internal.compiler.ast.Literal","1,25",5
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration","6,00",42
"org.eclipse.jdt.internal.compiler.ast.LongLiteral","3,12",25
"org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue","1,00",2
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral","1,00",3
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation","1,00",4
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair","6,00",30
"org.eclipse.jdt.internal.compiler.ast.MessageSend","5,87",88
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration","5,75",46
"org.eclipse.jdt.internal.compiler.ast.NameReference","1,12",9
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation","3,00",15
"org.eclipse.jdt.internal.compiler.ast.NullLiteral","1,14",8
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral","1,00",4
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression","6,50",39
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression","3,63",98
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference","5,92",71
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference","4,42",53
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression","1,67",10
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression","1,60",8
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression","7,20",72
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference","7,07",191
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference","1,67",10
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference","2,29",16
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference","2,75",22
"org.eclipse.jdt.internal.compiler.ast.Reference","3,20",16
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement","5,70",57
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation","1,80",9
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference","7,19",151
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference","1,62",13
"org.eclipse.jdt.internal.compiler.ast.Statement","2,43",17
"org.eclipse.jdt.internal.compiler.ast.StringLiteral","2,00",22
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation","1,80",9
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement","2,75",11
"org.eclipse.jdt.internal.compiler.ast.SuperReference","1,25",10
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement","9,50",57
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement","2,50",20
"org.eclipse.jdt.internal.compiler.ast.ThisReference","1,43",20
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement","1,50",9
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral","1,57",11
"org.eclipse.jdt.internal.compiler.ast.TryStatement","11,71",82
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration","6,28",251
"org.eclipse.jdt.internal.compiler.ast.TypeParameter","3,00",21
"org.eclipse.jdt.internal.compiler.ast.TypeReference","2,94",47
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression","7,62",61
"org.eclipse.jdt.internal.compiler.ast.WhileStatement","4,50",27
"org.eclipse.jdt.internal.compiler.ast.Wildcard","2,78",25
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory","3,38",27
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar","2,17",13
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit","2,00",12
"org.eclipse.jdt.internal.compiler.batch.FileFinder","5,00",10
"org.eclipse.jdt.internal.compiler.batch.FileSystem","4,89",44
"org.eclipse.jdt.internal.compiler.batch.Main","11,23",348
"org.eclipse.jdt.internal.compiler.batch.Main.Logger","1,44",13
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader","5,22",235
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct","2,75",44
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException","1,44",13
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo","4,05",85
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo","2,25",18
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo","3,24",68
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel","2,17",13
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache","2,50",30
"org.eclipse.jdt.internal.compiler.codegen.CodeStream","5,05",1.530
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool","3,82",107
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache","3,71",26
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel","1,00",5
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache","2,18",24
"org.eclipse.jdt.internal.compiler.codegen.FloatCache","3,71",26
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache","2,30",23
"org.eclipse.jdt.internal.compiler.codegen.Label","3,83",46
"org.eclipse.jdt.internal.compiler.codegen.LongCache","2,30",23
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache","2,18",24
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache","2,30",23
"org.eclipse.jdt.internal.compiler.env.AccessRestriction","4,14",29
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer","1,00",10
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo","1,00",29
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext","3,56",32
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext","3,71",26
"org.eclipse.jdt.internal.compiler.flow.FlowContext","3,81",103
"org.eclipse.jdt.internal.compiler.flow.FlowInfo","2,00",10
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext","1,75",7
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext","1,33",8
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext","1,50",6
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext","3,40",34
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext","1,20",6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo","3,27",131
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant","1,20",6
"org.eclipse.jdt.internal.compiler.impl.ByteConstant","1,09",12
"org.eclipse.jdt.internal.compiler.impl.CharConstant","1,09",12
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions","20,45",225
"org.eclipse.jdt.internal.compiler.impl.Constant","22,46",921
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant","1,18",13
"org.eclipse.jdt.internal.compiler.impl.FloatConstant","1,09",12
"org.eclipse.jdt.internal.compiler.impl.IntConstant","1,09",12
"org.eclipse.jdt.internal.compiler.impl.LongConstant","1,09",12
"org.eclipse.jdt.internal.compiler.impl.ShortConstant","1,09",12
"org.eclipse.jdt.internal.compiler.impl.StringConstant","1,20",6
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding","2,27",50
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding","5,27",58
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding","6,67",220
"org.eclipse.jdt.internal.compiler.lookup.Binding","1,00",4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope","5,18",145
"org.eclipse.jdt.internal.compiler.lookup.ClassScope","8,89",249
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope","5,70",154
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding","2,48",57
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding","1,20",6
"org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency","1,00",1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding","3,27",36
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding","3,00",27
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment","5,94",202
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding","1,75",7
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding","3,02",163
"org.eclipse.jdt.internal.compiler.lookup.MethodScope","6,07",85
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier","5,78",156
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15","4,50",54
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding","3,69",48
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding","2,17",39
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding","1,20",6
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding","7,56",68
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding","1,43",10
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding","5,00",205
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding","1,00",7
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding","1,00",4
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding","1,75",7
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding","1,00",3
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding","1,00",6
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding","3,17",38
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding","3,81",240
"org.eclipse.jdt.internal.compiler.lookup.Scope","9,56",765
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper","2,80",14
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding","7,48",329
"org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding","1,00",2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding","1,00",1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding","7,71",54
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding","2,30",92
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding","3,86",81
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding","3,00",18
"org.eclipse.jdt.internal.compiler.lookup.UpdatedMethodBinding","1,00",2
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding","1,25",10
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding","3,13",72
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser","11,40",285
"org.eclipse.jdt.internal.compiler.parser.JavadocParser","6,88",110
"org.eclipse.jdt.internal.compiler.parser.NLSLine","1,12",9
"org.eclipse.jdt.internal.compiler.parser.Parser","4,65",1.845
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock","2,78",50
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement","2,00",60
"org.eclipse.jdt.internal.compiler.parser.RecoveredField","2,83",34
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport","1,14",8
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer","3,42",41
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable","1,60",16
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod","4,76",81
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement","1,14",8
"org.eclipse.jdt.internal.compiler.parser.RecoveredType","5,65",113
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit","3,27",36
"org.eclipse.jdt.internal.compiler.parser.Scanner","16,56",795
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter","8,20",123
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser","10,89",294
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.PrimaryRepairInfo","1,00",2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.RepairCandidate","1,00",1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.SecondaryRepairInfo",n/a,0
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.StateInfo","1,00",1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream","2,17",39
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.Token","1,00",1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil","3,83",23
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult","2,33",14
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation","1,67",10
"org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit","1,00",1
"org.eclipse.jdt.internal.compiler.problem.AbortMethod","1,00",1
"org.eclipse.jdt.internal.compiler.problem.AbortType","1,00",1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem","1,94",31
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory","2,50",20
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler","3,14",22
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter","1,93",688
"org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement","1,00",1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector","2,00",16
"org.eclipse.jdt.internal.compiler.util.FloatUtil","15,67",47
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt","2,50",20
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues","2,40",24
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong","2,50",20
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject","2,40",24
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt","2,40",24
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage","2,50",20
"org.eclipse.jdt.internal.compiler.util.HashtableOfType","2,62",21
"org.eclipse.jdt.internal.compiler.util.ObjectVector","1,93",27
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable","3,55",39
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector","1,80",18
"org.eclipse.jdt.internal.compiler.util.Util","4,14",91
"org.eclipse.jdt.internal.compiler.util.WeakHashSet","2,91",32
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference","1,75",7
"org.eclipse.jdt.internal.core.ASTHolderCUInfo",n/a,0
"org.eclipse.jdt.internal.core.Assert","1,43",10
"org.eclipse.jdt.internal.core.Assert.AssertionFailedException","1,00",1
"org.eclipse.jdt.internal.core.BasicCompilationUnit","1,89",17
"org.eclipse.jdt.internal.core.BatchOperation","2,00",6
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation","1,50",6
"org.eclipse.jdt.internal.core.BinaryField","1,38",11
"org.eclipse.jdt.internal.core.BinaryMember","1,50",15
"org.eclipse.jdt.internal.core.BinaryMethod","2,50",60
"org.eclipse.jdt.internal.core.BinaryMethod.DecodeParametersNames","2,33",7
"org.eclipse.jdt.internal.core.BinaryType","2,08",131
"org.eclipse.jdt.internal.core.BinaryTypeConverter","8,00",40
"org.eclipse.jdt.internal.core.Buffer","2,85",77
"org.eclipse.jdt.internal.core.BufferCache","1,25",5
"org.eclipse.jdt.internal.core.BufferFactoryWrapper","1,67",10
"org.eclipse.jdt.internal.core.BufferManager","1,75",14
"org.eclipse.jdt.internal.core.CancelableNameEnvironment","1,33",8
"org.eclipse.jdt.internal.core.CancelableProblemFactory","1,50",3
"org.eclipse.jdt.internal.core.ClassFile","2,25",126
"org.eclipse.jdt.internal.core.ClassFileInfo","3,78",34
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy","1,00",79
"org.eclipse.jdt.internal.core.ClasspathEntry","7,93",238
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation","4,20",21
"org.eclipse.jdt.internal.core.CompilationUnit","1,97",213
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo","1,40",7
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder","2,44",22
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor","2,04",53
"org.eclipse.jdt.internal.core.CompilationUnitVisitor","1,40",14
"org.eclipse.jdt.internal.core.CopyElementsOperation","3,45",38
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation","6,57",46
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation","6,00",120
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation","3,40",17
"org.eclipse.jdt.internal.core.CreateElementInCUOperation","2,38",38
"org.eclipse.jdt.internal.core.CreateFieldOperation","2,14",15
"org.eclipse.jdt.internal.core.CreateImportOperation","2,17",13
"org.eclipse.jdt.internal.core.CreateInitializerOperation","3,20",16
"org.eclipse.jdt.internal.core.CreateMethodOperation","2,44",22
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation","2,17",13
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation","5,67",17
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation","1,71",12
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation","2,12",17
"org.eclipse.jdt.internal.core.CreateTypeOperation","2,71",19
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner","1,33",4
"org.eclipse.jdt.internal.core.DeleteElementsOperation","3,11",28
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation","3,57",25
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation","5,20",26
"org.eclipse.jdt.internal.core.DeltaProcessingState","4,08",53
"org.eclipse.jdt.internal.core.DeltaProcessingState.ProjectUpdateInfo","10,00",10
"org.eclipse.jdt.internal.core.DeltaProcessor","7,09",390
"org.eclipse.jdt.internal.core.DeltaProcessor.OutputsInfo","4,50",9
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo","3,75",15
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation","1,75",7
"org.eclipse.jdt.internal.core.ElementCache","1,67",10
"org.eclipse.jdt.internal.core.ImportContainer","1,75",21
"org.eclipse.jdt.internal.core.ImportDeclaration","1,33",16
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo","1,00",3
"org.eclipse.jdt.internal.core.Initializer","1,67",20
"org.eclipse.jdt.internal.core.InitializerElementInfo",n/a,0
"org.eclipse.jdt.internal.core.InternalNamingConventions","4,67",42
"org.eclipse.jdt.internal.core.JarEntryFile","1,33",8
"org.eclipse.jdt.internal.core.JarPackageFragment","1,69",22
"org.eclipse.jdt.internal.core.JarPackageFragmentInfo","1,00",1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot","2,00",40
"org.eclipse.jdt.internal.core.JarPackageFragmentRootInfo","1,00",1
"org.eclipse.jdt.internal.core.JavaElement","2,02",103
"org.eclipse.jdt.internal.core.JavaElementDelta","3,57",132
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder","3,21",77
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.ListItem","1,00",1
"org.eclipse.jdt.internal.core.JavaElementInfo","1,78",16
"org.eclipse.jdt.internal.core.JavaElementRequestor","1,80",27
"org.eclipse.jdt.internal.core.JavaModel","2,11",59
"org.eclipse.jdt.internal.core.JavaModelCache","4,88",39
"org.eclipse.jdt.internal.core.JavaModelInfo","4,00",8
"org.eclipse.jdt.internal.core.JavaModelManager","4,24",339
"org.eclipse.jdt.internal.core.JavaModelManager.EclipsePreferencesListener","4,00",4
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo","2,67",8
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo","1,43",10
"org.eclipse.jdt.internal.core.JavaModelOperation","2,22",129
"org.eclipse.jdt.internal.core.JavaModelStatus","3,46",90
"org.eclipse.jdt.internal.core.JavaProject","3,38",423
"org.eclipse.jdt.internal.core.JavaProjectElementInfo","3,75",30
"org.eclipse.jdt.internal.core.LRUCacheEnumerator","1,00",3
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.LRUEnumeratorElement","1,00",1
"org.eclipse.jdt.internal.core.LocalVariable","1,27",28
"org.eclipse.jdt.internal.core.Member","3,17",57
"org.eclipse.jdt.internal.core.MemberElementInfo","1,00",6
"org.eclipse.jdt.internal.core.ModelUpdater","3,75",30
"org.eclipse.jdt.internal.core.MoveElementsOperation","1,00",3
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation","5,29",37
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation","1,00",3
"org.eclipse.jdt.internal.core.MultiOperation","3,27",49
"org.eclipse.jdt.internal.core.NameLookup","7,38",155
"org.eclipse.jdt.internal.core.NamedMember","1,00",2
"org.eclipse.jdt.internal.core.Openable","2,48",77
"org.eclipse.jdt.internal.core.OpenableElementInfo","1,00",2
"org.eclipse.jdt.internal.core.OverflowingLRUCache","2,27",50
"org.eclipse.jdt.internal.core.PackageDeclaration","1,38",11
"org.eclipse.jdt.internal.core.PackageFragment","2,53",76
"org.eclipse.jdt.internal.core.PackageFragmentInfo","1,25",5
"org.eclipse.jdt.internal.core.PackageFragmentRoot","2,98",134
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo","2,30",23
"org.eclipse.jdt.internal.core.ParameterizedBinaryField","1,00",2
"org.eclipse.jdt.internal.core.ParameterizedBinaryMethod","1,00",2
"org.eclipse.jdt.internal.core.ParameterizedBinaryType","1,00",2
"org.eclipse.jdt.internal.core.ParameterizedSourceField","1,00",2
"org.eclipse.jdt.internal.core.ParameterizedSourceMethod","1,00",2
"org.eclipse.jdt.internal.core.ParameterizedSourceType","1,00",2
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation","3,80",19
"org.eclipse.jdt.internal.core.Region","2,75",22
"org.eclipse.jdt.internal.core.RenameElementsOperation","2,40",12
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation","1,75",7
"org.eclipse.jdt.internal.core.SearchableEnvironment","2,39",55
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor","2,00",10
"org.eclipse.jdt.internal.core.SelectionRequestor","5,95",131
"org.eclipse.jdt.internal.core.SetClasspathOperation","4,28",124
"org.eclipse.jdt.internal.core.SimpleDelta","1,80",18
"org.eclipse.jdt.internal.core.SingleTypeRequestor","1,00",9
"org.eclipse.jdt.internal.core.SortElementBuilder","2,12",51
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration","4,50",18
"org.eclipse.jdt.internal.core.SortElementBuilder.SortClassDeclaration","4,00",12
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit","1,80",9
"org.eclipse.jdt.internal.core.SortElementBuilder.SortConstructorDeclaration","2,33",7
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement","6,00",30
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration","3,71",26
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer","2,60",13
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInterfaceDeclaration","2,67",8
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMethodDeclaration","4,33",13
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration","2,57",18
"org.eclipse.jdt.internal.core.SortElementBuilder.SortType","3,00",9
"org.eclipse.jdt.internal.core.SortElementsOperation","2,40",12
"org.eclipse.jdt.internal.core.SortJavaElement","1,90",19
"org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo","1,50",3
"org.eclipse.jdt.internal.core.SourceConstructorInfo","1,00",4
"org.eclipse.jdt.internal.core.SourceField","2,89",26
"org.eclipse.jdt.internal.core.SourceFieldElementInfo","1,00",5
"org.eclipse.jdt.internal.core.SourceMapper","3,46",166
"org.eclipse.jdt.internal.core.SourceMethod","2,23",58
"org.eclipse.jdt.internal.core.SourceMethodElementInfo","1,40",14
"org.eclipse.jdt.internal.core.SourceMethodInfo","1,00",4
"org.eclipse.jdt.internal.core.SourceRange","1,00",4
"org.eclipse.jdt.internal.core.SourceRefElement","1,87",43
"org.eclipse.jdt.internal.core.SourceRefElementInfo","1,00",5
"org.eclipse.jdt.internal.core.SourceType","1,93",133
"org.eclipse.jdt.internal.core.SourceTypeElementInfo","2,40",60
"org.eclipse.jdt.internal.core.TypeParameter","1,11",10
"org.eclipse.jdt.internal.core.TypeParameterElementInfo",n/a,0
"org.eclipse.jdt.internal.core.TypeVector","1,92",25
"org.eclipse.jdt.internal.core.UserLibrary","3,12",25
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer","1,33",8
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer","1,83",11
"org.eclipse.jdt.internal.core.UserLibraryManager","3,30",33
"org.eclipse.jdt.internal.core.XMLWriter","2,62",21
"org.eclipse.jdt.internal.core.builder.AbortIncrementalBuildException","1,00",1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder","4,41",75
"org.eclipse.jdt.internal.core.builder.AdditionalTypeCollection","1,00",1
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder","5,08",66
"org.eclipse.jdt.internal.core.builder.BuildNotifier","3,69",59
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory","2,83",34
"org.eclipse.jdt.internal.core.builder.ClasspathJar","2,70",27
"org.eclipse.jdt.internal.core.builder.ClasspathJar.PackageCacheEntry","1,00",1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation","1,00",7
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory","2,50",10
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException","1,75",7
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder","9,22",166
"org.eclipse.jdt.internal.core.builder.JavaBuilder","5,00",135
"org.eclipse.jdt.internal.core.builder.MissingClassFileException","1,00",1
"org.eclipse.jdt.internal.core.builder.MissingSourceFileException","1,00",1
"org.eclipse.jdt.internal.core.builder.NameEnvironment","6,73",74
"org.eclipse.jdt.internal.core.builder.NameSet","3,25",13
"org.eclipse.jdt.internal.core.builder.ProblemFactory","1,50",3
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet","3,50",14
"org.eclipse.jdt.internal.core.builder.ReferenceCollection","7,25",58
"org.eclipse.jdt.internal.core.builder.SourceFile","1,40",14
"org.eclipse.jdt.internal.core.builder.State","5,00",125
"org.eclipse.jdt.internal.core.builder.StringSet","3,17",19
"org.eclipse.jdt.internal.core.builder.WorkQueue","1,12",9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer","3,16",449
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter","3,42",41
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter","2,57",18
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter","2,00",4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener","1,98",188
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter","3,77",49
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefix","1,50",3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefixSuffix","1,50",3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ConstPrefix","1,00",2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener","2,00",14
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.FormattingPrefix","1,50",3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.NodeMarker",n/a,0
"org.eclipse.jdt.internal.core.dom.rewrite.Indents","4,11",37
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent","2,19",35
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore","2,00",18
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.CopyPlaceholderData","1,00",1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.PlaceholderData",n/a,0
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.StringPlaceholderData","1,00",1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent","2,00",16
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEvent",n/a,0
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore","2,51",93
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo","1,75",7
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfoSorter","3,00",3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.EventHolder","1,00",2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator","2,50",10
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation","1,00",3
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier","1,33",4
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner","1,92",48
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition","1,67",5
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper","1,52",61
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper","1,25",5
"org.eclipse.jdt.internal.core.eval.RequestorWrapper","2,33",7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector","5,56",89
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType","2,25",45
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder","5,30",53
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver","5,85",117
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType","1,00",6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType","1,00",5
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder","5,55",61
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue","2,33",7
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder","4,43",31
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy","2,67",24
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy","3,65",274
"org.eclipse.jdt.internal.core.index.DiskIndex","6,93",187
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList","1,67",5
"org.eclipse.jdt.internal.core.index.EntryResult","2,50",15
"org.eclipse.jdt.internal.core.index.Index","2,85",37
"org.eclipse.jdt.internal.core.index.MemoryIndex","3,86",27
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder","2,20",22
"org.eclipse.jdt.internal.core.jdom.CompilationUnit","1,33",8
"org.eclipse.jdt.internal.core.jdom.DOMBuilder","2,38",76
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit","1,62",26
"org.eclipse.jdt.internal.core.jdom.DOMField","1,83",75
"org.eclipse.jdt.internal.core.jdom.DOMImport","1,29",18
"org.eclipse.jdt.internal.core.jdom.DOMInitializer","1,33",24
"org.eclipse.jdt.internal.core.jdom.DOMMember","1,83",33
"org.eclipse.jdt.internal.core.jdom.DOMMethod","2,26",95
"org.eclipse.jdt.internal.core.jdom.DOMNode","2,25",115
"org.eclipse.jdt.internal.core.jdom.DOMPackage","1,27",14
"org.eclipse.jdt.internal.core.jdom.DOMType","2,17",87
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration","1,33",4
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder","1,17",28
"org.eclipse.jdt.internal.core.search.AbstractSearchScope","1,00",4
"org.eclipse.jdt.internal.core.search.HierarchyScope","4,58",55
"org.eclipse.jdt.internal.core.search.IndexQueryRequestor",n/a,0
"org.eclipse.jdt.internal.core.search.IndexSelector","5,40",27
"org.eclipse.jdt.internal.core.search.JavaSearchDocument","1,78",16
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant","1,86",13
"org.eclipse.jdt.internal.core.search.JavaSearchScope","5,18",88
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope","2,44",22
"org.eclipse.jdt.internal.core.search.PathCollector","1,50",3
"org.eclipse.jdt.internal.core.search.PatternSearchJob","3,12",25
"org.eclipse.jdt.internal.core.search.SearchBasicEngine","4,27",128
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob","2,33",7
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper","1,00",3
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer","2,21",31
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex","4,00",20
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex","6,57",46
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer","8,38",134
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject","6,62",53
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder","4,12",33
"org.eclipse.jdt.internal.core.search.indexing.IndexManager","4,24",144
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest","1,00",5
"org.eclipse.jdt.internal.core.search.indexing.InternalSearchDocument","1,67",5
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor","2,14",15
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex","4,33",13
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex","2,00",6
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex","2,33",7
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer","2,00",4
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor","1,77",55
"org.eclipse.jdt.internal.core.search.matching.AndPattern","8,00",16
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator","7,00",77
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory","2,40",24
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator","5,17",93
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern","4,10",41
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfAccessedFieldsPattern","1,00",1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedMethodsPattern","1,00",1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedTypesPattern","1,00",1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator","7,07",99
"org.eclipse.jdt.internal.core.search.matching.FieldPattern","3,00",30
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser","1,00",5
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern","3,20",16
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment","3,50",28
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern","4,33",39
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator","3,00",30
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern","3,67",11
"org.eclipse.jdt.internal.core.search.matching.MatchLocator","5,83",367
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.LocalDeclarationVisitor","4,00",8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WorkingCopyDocument","1,00",2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WrappedCoreException","1,00",1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser","2,29",55
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassAndMethodDeclarationVisitor","1,00",1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor","1,00",5
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.MethodButNoClassDeclarationVisitor","1,00",1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor","1,00",4
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet","3,33",30
"org.eclipse.jdt.internal.core.search.matching.MethodLocator","5,87",88
"org.eclipse.jdt.internal.core.search.matching.MethodPattern","4,64",51
"org.eclipse.jdt.internal.core.search.matching.OrLocator","3,95",79
"org.eclipse.jdt.internal.core.search.matching.OrPattern","3,00",15
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator","1,00",3
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern","1,33",4
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator","6,20",93
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern","1,50",15
"org.eclipse.jdt.internal.core.search.matching.PatternLocator","4,42",159
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch","2,64",29
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet","2,67",8
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern","3,17",19
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector","3,69",48
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor","1,43",10
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator","3,00",21
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern","5,22",47
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator","3,67",22
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern","6,11",55
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator","7,36",162
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern","2,27",25
"org.eclipse.jdt.internal.core.search.matching.VariableLocator","4,20",21
"org.eclipse.jdt.internal.core.search.matching.VariablePattern","1,50",3
"org.eclipse.jdt.internal.core.search.processing.JobManager","4,71",80
"org.eclipse.jdt.internal.core.util.ASTNodeFinder","6,83",41
"org.eclipse.jdt.internal.core.util.Annotation","1,67",10
"org.eclipse.jdt.internal.core.util.AnnotationComponent","1,40",7
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue","2,07",31
"org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute","1,00",2
"org.eclipse.jdt.internal.core.util.AnonymousFileSource","2,00",16
"org.eclipse.jdt.internal.core.util.CharArrayBuffer","2,60",26
"org.eclipse.jdt.internal.core.util.ClassFileAttribute","1,25",5
"org.eclipse.jdt.internal.core.util.ClassFileReader","2,78",64
"org.eclipse.jdt.internal.core.util.ClassFileStruct","1,82",20
"org.eclipse.jdt.internal.core.util.CodeAttribute","20,83",250
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil","2,75",22
"org.eclipse.jdt.internal.core.util.CommentRecorderParser","2,93",41
"org.eclipse.jdt.internal.core.util.CommentRecorderScanner","1,50",3
"org.eclipse.jdt.internal.core.util.ConstantPool","3,00",15
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry","1,00",43
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute","1,00",3
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor","1,17",257
"org.eclipse.jdt.internal.core.util.Disassembler","7,56",340
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute","1,62",13
"org.eclipse.jdt.internal.core.util.ExceptionAttribute","1,75",7
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry","1,33",8
"org.eclipse.jdt.internal.core.util.FieldInfo","1,92",25
"org.eclipse.jdt.internal.core.util.HandleFactory","7,43",52
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject","2,54",33
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute","1,67",5
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry","1,75",14
"org.eclipse.jdt.internal.core.util.LRUCache","1,88",49
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCacheEntry","1,00",2
"org.eclipse.jdt.internal.core.util.LineNumberAttribute","1,67",5
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute","1,67",5
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry","1,25",10
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute","1,67",5
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry","1,25",10
"org.eclipse.jdt.internal.core.util.MementoTokenizer","7,67",23
"org.eclipse.jdt.internal.core.util.MethodInfo","2,12",36
"org.eclipse.jdt.internal.core.util.ParameterAnnotation","1,50",6
"org.eclipse.jdt.internal.core.util.PublicScanner","16,56",795
"org.eclipse.jdt.internal.core.util.RecordedParsingInformation","2,00",4
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter","1,00",7
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute","1,67",5
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute","1,67",5
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute","1,67",5
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute","1,67",5
"org.eclipse.jdt.internal.core.util.SignatureAttribute","1,33",4
"org.eclipse.jdt.internal.core.util.SimpleDocument","1,00",45
"org.eclipse.jdt.internal.core.util.SimpleSet","3,12",25
"org.eclipse.jdt.internal.core.util.SimpleWordSet","3,50",14
"org.eclipse.jdt.internal.core.util.SourceFileAttribute","1,33",4
"org.eclipse.jdt.internal.core.util.ToStringSorter","3,33",10
"org.eclipse.jdt.internal.core.util.Util","3,78",378
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression","7,60",38
"org.eclipse.jdt.internal.eval.CodeSnippetClassFile","16,50",33
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream","2,79",78
"org.eclipse.jdt.internal.eval.CodeSnippetCompiler","1,00",2
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment","2,20",11
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator","2,71",19
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference","8,29",58
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend","13,50",54
"org.eclipse.jdt.internal.eval.CodeSnippetParser","2,50",95
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference","8,77",114
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement","1,69",22
"org.eclipse.jdt.internal.eval.CodeSnippetScope","12,79",179
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference","11,55",127
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton","1,00",18
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton","1,00",10
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference","1,00",8
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference","1,73",19
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper","2,12",36
"org.eclipse.jdt.internal.eval.CodeSnippetTypeDeclaration","6,50",13
"org.eclipse.jdt.internal.eval.EvaluationContext","1,87",58
"org.eclipse.jdt.internal.eval.EvaluationResult","2,07",29
"org.eclipse.jdt.internal.eval.Evaluator","1,89",17
"org.eclipse.jdt.internal.eval.GlobalVariable","1,20",6
"org.eclipse.jdt.internal.eval.InstallException","1,00",2
"org.eclipse.jdt.internal.eval.VariablesEvaluator","4,71",33
"org.eclipse.jdt.internal.eval.VariablesInfo","2,33",7
"org.eclipse.jdt.internal.formatter.AbortFormatting","1,00",2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder","1,50",72
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder","1,50",6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor","6,66",926
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.MultiFieldDeclaration","1,00",1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter","2,33",35
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions","46,56",419
"org.eclipse.jdt.internal.formatter.Location","1,00",2
"org.eclipse.jdt.internal.formatter.OptimizedReplaceEdit","1,00",2
"org.eclipse.jdt.internal.formatter.Scribe","4,95",327
"org.eclipse.jdt.internal.formatter.align.Alignment","5,80",58
"org.eclipse.jdt.internal.formatter.align.AlignmentException","1,67",5
"org.eclipse.jdt.internal.formatter.old.CodeFormatter","11,50",23

Package,v(G)avg,v(G)tot
"org.eclipse.jdt.core","3,57",1.060
"org.eclipse.jdt.core.compiler","5,91",319
"org.eclipse.jdt.core.dom","2,49",6.436
"org.eclipse.jdt.core.dom.rewrite","2,53",96
"org.eclipse.jdt.core.formatter","5,44",49
"org.eclipse.jdt.core.jdom","1,40",28
"org.eclipse.jdt.core.search","3,35",328
"org.eclipse.jdt.core.util","1,01",211
"org.eclipse.jdt.internal.antadapter","1,67",5
"org.eclipse.jdt.internal.codeassist","10,54",1.212
"org.eclipse.jdt.internal.codeassist.complete","4,01",1.295
"org.eclipse.jdt.internal.codeassist.impl","4,15",353
"org.eclipse.jdt.internal.codeassist.select","2,91",323
"org.eclipse.jdt.internal.compiler","3,06",1.377
"org.eclipse.jdt.internal.compiler.ast","5,26",5.194
"org.eclipse.jdt.internal.compiler.batch","7,96",533
"org.eclipse.jdt.internal.compiler.classfmt","4,16",499
"org.eclipse.jdt.internal.compiler.codegen","4,65",2.007
"org.eclipse.jdt.internal.compiler.env","2,41",41
"org.eclipse.jdt.internal.compiler.flow","2,85",416
"org.eclipse.jdt.internal.compiler.impl","8,97",1.247
"org.eclipse.jdt.internal.compiler.lookup","5,44",4.235
"org.eclipse.jdt.internal.compiler.parser","6,57",4.289
"org.eclipse.jdt.internal.compiler.parser.diagnose","7,35",456
"org.eclipse.jdt.internal.compiler.problem","2,16",856
"org.eclipse.jdt.internal.compiler.util","3,26",470
"org.eclipse.jdt.internal.core","3,38",6.782
"org.eclipse.jdt.internal.core.builder","5,08",1.046
"org.eclipse.jdt.internal.core.dom.rewrite","2,91",1.197
"org.eclipse.jdt.internal.core.eval","1,94",64
"org.eclipse.jdt.internal.core.hierarchy","4,52",805
"org.eclipse.jdt.internal.core.index","5,09",285
"org.eclipse.jdt.internal.core.jdom","2,11",687
"org.eclipse.jdt.internal.core.search","4,35",439
"org.eclipse.jdt.internal.core.search.indexing","4,41",622
"org.eclipse.jdt.internal.core.search.matching","4,87",2.187
"org.eclipse.jdt.internal.core.search.processing","6,40",96
"org.eclipse.jdt.internal.core.util","4,12",3.348
"org.eclipse.jdt.internal.eval","4,70",1.217
"org.eclipse.jdt.internal.formatter","6,97",2.006
"org.eclipse.jdt.internal.formatter.align","5,00",65
"org.eclipse.jdt.internal.formatter.old","12,00",24

Module,v(G)avg,v(G)tot
"eclipse_core","3,98",54.205

Project,v(G)avg,v(G)tot
"project","3,98",54.205

