SmellsMetrics,Ter, 12 jun 2018 14:04:25 BRT
Method,CALL,CALLED,IMP,LOC,NBD,NP,STAT,v(G)
"org.apache.commons.codec.BinaryDecoder.decode(byte[])",n/a,1,5,n/a,n/a,1,n/a,n/a
"org.apache.commons.codec.BinaryEncoder.encode(byte[])",n/a,7,5,n/a,n/a,1,n/a,n/a
"org.apache.commons.codec.Decoder.decode(Object)",n/a,4,7,n/a,n/a,1,n/a,n/a
"org.apache.commons.codec.DecoderException.DecoderException()",1,1,n/a,9,0,0,1,1
"org.apache.commons.codec.DecoderException.DecoderException(String)",1,15,n/a,10,0,1,1,1
"org.apache.commons.codec.DecoderException.DecoderException(String,Throwable)",1,9,n/a,18,0,2,1,1
"org.apache.commons.codec.DecoderException.DecoderException(Throwable)",1,1,n/a,13,0,1,1,1
"org.apache.commons.codec.Encoder.encode(Object)",n/a,8,14,n/a,n/a,1,n/a,n/a
"org.apache.commons.codec.EncoderException.EncoderException()",1,1,n/a,9,0,0,1,1
"org.apache.commons.codec.EncoderException.EncoderException(String)",1,14,n/a,10,0,1,1,1
"org.apache.commons.codec.EncoderException.EncoderException(String,Throwable)",1,7,n/a,18,0,2,1,1
"org.apache.commons.codec.EncoderException.EncoderException(Throwable)",1,1,n/a,13,0,1,1,1
"org.apache.commons.codec.StringDecoder.decode(String)",n/a,0,4,n/a,n/a,1,n/a,n/a
"org.apache.commons.codec.StringEncoder.encode(String)",n/a,9,12,n/a,n/a,1,n/a,n/a
"org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator(StringEncoder)",0,3,n/a,9,0,1,1,1
"org.apache.commons.codec.StringEncoderComparator.compare(Object,Object)",3,2,n/a,24,1,2,7,2
"org.apache.commons.codec.binary.Base32.Base32()",1,8,n/a,10,0,0,1,1
"org.apache.commons.codec.binary.Base32.Base32(boolean)",1,5,n/a,10,0,1,1,1
"org.apache.commons.codec.binary.Base32.Base32(int)",1,2,n/a,13,0,1,1,1
"org.apache.commons.codec.binary.Base32.Base32(int,byte[])",1,3,n/a,20,0,2,1,1
"org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean)",6,2,n/a,48,2,3,18,6
"org.apache.commons.codec.binary.Base32.decode(byte[],int,int)",2,5,n/a,93,5,3,56,17
"org.apache.commons.codec.binary.Base32.encode(byte[],int,int)",4,7,n/a,104,4,3,76,16
"org.apache.commons.codec.binary.Base32.isInAlphabet(byte)",0,6,n/a,11,0,1,1,3
"org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream)",1,2,n/a,9,0,1,1,1
"org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean)",2,3,n/a,12,0,2,1,1
"org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean,int,byte[])",2,9,n/a,19,0,4,1,1
"org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream)",1,2,n/a,9,0,1,1,1
"org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean)",2,6,n/a,12,0,2,1,1
"org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean,int,byte[])",2,4,n/a,19,0,4,1,1
"org.apache.commons.codec.binary.Base64.Base64()",1,14,n/a,13,0,0,1,1
"org.apache.commons.codec.binary.Base64.Base64(boolean)",1,5,n/a,18,0,1,1,1
"org.apache.commons.codec.binary.Base64.Base64(int)",1,3,n/a,21,0,1,1,1
"org.apache.commons.codec.binary.Base64.Base64(int,byte[])",1,13,n/a,25,0,2,1,1
"org.apache.commons.codec.binary.Base64.Base64(int,byte[],boolean)",5,5,n/a,51,2,3,15,6
"org.apache.commons.codec.binary.Base64.decode(byte[],int,int)",2,5,n/a,75,5,3,33,13
"org.apache.commons.codec.binary.Base64.decodeBase64(String)",2,21,n/a,11,0,1,1,1
"org.apache.commons.codec.binary.Base64.decodeBase64(byte[])",2,40,n/a,10,0,1,1,1
"org.apache.commons.codec.binary.Base64.decodeInteger(byte[])",2,4,n/a,11,0,1,1,1
"org.apache.commons.codec.binary.Base64.encode(byte[],int,int)",4,5,n/a,82,4,3,46,16
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[])",1,190,n/a,10,0,1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean)",1,5,n/a,14,0,2,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean)",1,3,n/a,17,0,3,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)",5,3,n/a,32,1,4,7,5
"org.apache.commons.codec.binary.Base64.encodeBase64Chunked(byte[])",1,171,n/a,10,0,1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64String(byte[])",2,13,n/a,14,0,1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64URLSafe(byte[])",1,2,n/a,12,0,1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString(byte[])",2,1,n/a,12,0,1,1,1
"org.apache.commons.codec.binary.Base64.encodeInteger(BigInteger)",3,5,n/a,16,1,1,3,2
"org.apache.commons.codec.binary.Base64.isBase64(String)",2,4,n/a,13,0,1,1,1
"org.apache.commons.codec.binary.Base64.isBase64(byte)",0,1,n/a,11,0,1,1,4
"org.apache.commons.codec.binary.Base64.isBase64(byte[])",2,16,n/a,18,2,1,6,4
"org.apache.commons.codec.binary.Base64.isInAlphabet(byte)",0,6,n/a,11,0,1,1,3
"org.apache.commons.codec.binary.Base64.isUrlSafe()",0,2,n/a,9,0,0,1,1
"org.apache.commons.codec.binary.Base64.toIntegerBytes(BigInteger)",6,1,n/a,28,1,1,14,4
"org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream)",1,5,n/a,9,0,1,1,1
"org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean)",2,3,n/a,12,0,2,1,1
"org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean,int,byte[])",2,9,n/a,19,0,4,1,1
"org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream)",1,2,n/a,9,0,1,1,1
"org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean)",2,7,n/a,12,0,2,1,1
"org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean,int,byte[])",2,4,n/a,19,0,4,1,1
"org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int)",0,3,n/a,14,0,4,4,3
"org.apache.commons.codec.binary.BaseNCodec.available()",0,2,n/a,8,0,0,1,2
"org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])",1,8,n/a,20,2,1,6,5
"org.apache.commons.codec.binary.BaseNCodec.decode(Object)",3,7,n/a,19,1,1,5,3
"org.apache.commons.codec.binary.BaseNCodec.decode(String)",2,7,n/a,10,0,1,1,1
"org.apache.commons.codec.binary.BaseNCodec.decode(byte[])",4,5,n/a,18,1,1,8,3
"org.apache.commons.codec.binary.BaseNCodec.decode(byte[],int,int)",n/a,5,3,n/a,n/a,3,n/a,n/a
"org.apache.commons.codec.binary.BaseNCodec.encode(Object)",2,10,n/a,16,1,1,3,2
"org.apache.commons.codec.binary.BaseNCodec.encode(byte[])",4,18,n/a,18,1,1,8,3
"org.apache.commons.codec.binary.BaseNCodec.encode(byte[],int,int)",n/a,5,3,n/a,n/a,3,n/a,n/a
"org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[])",2,3,n/a,10,0,1,1,1
"org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[])",2,4,n/a,10,0,1,1,1
"org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int)",1,8,n/a,10,1,1,2,3
"org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()",0,1,n/a,8,0,0,1,1
"org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])",0,4,n/a,18,1,1,4,2
"org.apache.commons.codec.binary.BaseNCodec.hasData()",0,1,n/a,8,0,0,1,1
"org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(String)",2,2,n/a,12,0,1,1,1
"org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte)",n/a,6,3,n/a,n/a,1,n/a,n/a
"org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)",2,10,n/a,19,2,2,6,6
"org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte)",0,6,n/a,18,1,1,8,3
"org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int)",3,5,n/a,24,2,3,8,4
"org.apache.commons.codec.binary.BaseNCodec.reset()",0,2,n/a,11,0,0,6,1
"org.apache.commons.codec.binary.BaseNCodec.resizeBuffer()",2,1,n/a,12,1,0,7,2
"org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream(InputStream,BaseNCodec,boolean)",1,4,n/a,5,0,3,3,1
"org.apache.commons.codec.binary.BaseNCodecInputStream.markSupported()",0,2,n/a,9,0,0,1,1
"org.apache.commons.codec.binary.BaseNCodecInputStream.read()",2,32,n/a,18,1,0,6,4
"org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)",8,20,n/a,61,4,3,18,11
"org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream(OutputStream,BaseNCodec,boolean)",1,4,n/a,5,0,3,3,1
"org.apache.commons.codec.binary.BaseNCodecOutputStream.close()",4,16,n/a,17,1,0,5,2
"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()",1,4,n/a,10,0,0,1,1
"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)",4,2,n/a,22,2,1,8,4
"org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)",6,13,n/a,35,2,3,11,8
"org.apache.commons.codec.binary.BaseNCodecOutputStream.write(int)",1,8,n/a,13,0,1,2,1
"org.apache.commons.codec.binary.BinaryCodec.decode(Object)",5,9,n/a,25,1,1,9,5
"org.apache.commons.codec.binary.BinaryCodec.decode(byte[])",1,20,n/a,11,0,1,1,1
"org.apache.commons.codec.binary.BinaryCodec.encode(Object)",2,36,n/a,16,1,1,3,2
"org.apache.commons.codec.binary.BinaryCodec.encode(byte[])",1,34,n/a,11,0,1,1,1
"org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])",1,23,n/a,26,3,1,12,5
"org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])",0,24,n/a,26,3,1,12,6
"org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])",0,3,n/a,10,0,1,1,2
"org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])",1,28,n/a,30,3,1,13,5
"org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])",1,29,n/a,29,3,1,13,5
"org.apache.commons.codec.binary.BinaryCodec.toAsciiString(byte[])",2,26,n/a,11,0,1,1,1
"org.apache.commons.codec.binary.BinaryCodec.toByteArray(String)",2,19,n/a,14,1,1,3,2
"org.apache.commons.codec.binary.Hex.Hex()",0,13,n/a,7,0,0,1,1
"org.apache.commons.codec.binary.Hex.Hex(String)",0,4,n/a,10,0,1,1,1
"org.apache.commons.codec.binary.Hex.decode(Object)",4,12,n/a,21,1,1,4,3
"org.apache.commons.codec.binary.Hex.decode(byte[])",6,6,n/a,19,1,1,3,2
"org.apache.commons.codec.binary.Hex.decodeHex(char[])",3,13,n/a,27,1,1,13,3
"org.apache.commons.codec.binary.Hex.encode(Object)",7,13,n/a,26,1,1,5,4
"org.apache.commons.codec.binary.Hex.encode(byte[])",3,11,n/a,20,0,1,1,1
"org.apache.commons.codec.binary.Hex.encodeHex(byte[])",1,9,n/a,12,0,1,1,1
"org.apache.commons.codec.binary.Hex.encodeHex(byte[],boolean)",1,5,n/a,15,0,2,1,2
"org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])",0,1,n/a,22,1,2,8,2
"org.apache.commons.codec.binary.Hex.encodeHexString(byte[])",2,22,n/a,12,0,1,1,1
"org.apache.commons.codec.binary.Hex.getCharsetName()",0,6,n/a,9,0,0,1,1
"org.apache.commons.codec.binary.Hex.toDigit(char,int)",2,2,n/a,18,1,2,4,2
"org.apache.commons.codec.binary.Hex.toString()",1,2,n/a,9,0,0,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1(String)",1,1,n/a,15,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(String,String)",2,15,n/a,29,1,2,5,3
"org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(String)",1,4,n/a,15,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUtf16(String)",1,1,n/a,15,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be(String)",1,1,n/a,15,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le(String)",1,1,n/a,15,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUtf8(String)",1,83,n/a,15,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.newIllegalStateException(String,UnsupportedEncodingException)",1,2,n/a,3,0,2,1,1
"org.apache.commons.codec.binary.StringUtils.newString(byte[],String)",2,8,n/a,29,1,2,5,3
"org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byte[])",1,1,n/a,14,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byte[])",1,21,n/a,14,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUtf16(byte[])",1,1,n/a,14,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUtf16Be(byte[])",1,1,n/a,14,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUtf16Le(byte[])",1,1,n/a,14,0,1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[])",1,26,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.digest(MessageDigest,InputStream)",4,5,n/a,20,1,2,6,2
"org.apache.commons.codec.digest.DigestUtils.getBytesUtf8(String)",1,5,n/a,10,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.getDigest(String)",3,6,n/a,20,1,1,3,2
"org.apache.commons.codec.digest.DigestUtils.getMd5Digest()",1,2,n/a,10,0,0,1,1
"org.apache.commons.codec.digest.DigestUtils.getSha256Digest()",1,2,n/a,13,0,0,1,1
"org.apache.commons.codec.digest.DigestUtils.getSha384Digest()",1,2,n/a,13,0,0,1,1
"org.apache.commons.codec.digest.DigestUtils.getSha512Digest()",1,2,n/a,13,0,0,1,1
"org.apache.commons.codec.digest.DigestUtils.getShaDigest()",1,2,n/a,10,0,0,1,1
"org.apache.commons.codec.digest.DigestUtils.md5(InputStream)",2,1,n/a,13,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5(String)",2,1,n/a,10,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5(byte[])",2,4,n/a,10,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5Hex(InputStream)",2,1,n/a,13,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5Hex(String)",2,7,n/a,10,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5Hex(byte[])",2,3,n/a,10,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha(InputStream)",2,1,n/a,13,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha(String)",2,1,n/a,10,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha(byte[])",2,2,n/a,10,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256(InputStream)",2,1,n/a,16,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256(String)",2,1,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256(byte[])",2,2,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256Hex(InputStream)",2,1,n/a,16,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256Hex(String)",2,2,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256Hex(byte[])",2,2,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384(InputStream)",2,1,n/a,16,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384(String)",2,1,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384(byte[])",2,2,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384Hex(InputStream)",2,1,n/a,16,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384Hex(String)",2,2,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384Hex(byte[])",2,2,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512(InputStream)",2,1,n/a,16,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512(String)",2,1,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512(byte[])",2,2,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512Hex(InputStream)",2,1,n/a,16,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512Hex(String)",2,2,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512Hex(byte[])",2,2,n/a,14,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.shaHex(InputStream)",2,1,n/a,13,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.shaHex(String)",2,2,n/a,10,0,1,1,1
"org.apache.commons.codec.digest.DigestUtils.shaHex(byte[])",2,2,n/a,10,0,1,1,1
"org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone()",1,0,n/a,6,0,0,1,1
"org.apache.commons.codec.language.AbstractCaverphone.encode(Object)",2,8,n/a,17,1,1,3,2
"org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual(String,String)",3,4,n/a,15,0,2,1,1
"org.apache.commons.codec.language.Caverphone1.encode(String)",58,9,n/a,80,1,1,60,3
"org.apache.commons.codec.language.Caverphone2.encode(String)",61,9,n/a,82,1,1,63,3
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(char[])",0,1,n/a,4,0,1,2,1
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(int)",0,1,n/a,4,0,1,2,1
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.copyData(int,int)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.length()",0,2,n/a,3,0,0,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.toString()",2,2,n/a,4,0,0,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.CologneInputBuffer(char[])",1,1,n/a,3,0,1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft(char)",1,1,n/a,4,0,1,2,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.copyData(int,int)",1,1,n/a,6,0,2,3,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextChar()",1,2,n/a,3,0,0,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextPos()",0,2,n/a,3,0,0,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext()",1,1,n/a,5,0,0,3,1
"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.CologneOutputBuffer(int)",1,1,n/a,3,0,1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char)",0,1,n/a,4,0,1,2,1
"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.copyData(int,int)",1,1,n/a,6,0,2,3,1
"org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)",0,9,n/a,11,2,2,4,3
"org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(String)",21,3,n/a,86,4,1,58,37
"org.apache.commons.codec.language.ColognePhonetic.encode(Object)",5,8,n/a,10,1,1,3,2
"org.apache.commons.codec.language.ColognePhonetic.encode(String)",1,10,n/a,3,0,1,1,1
"org.apache.commons.codec.language.ColognePhonetic.isEncodeEqual(String,String)",3,1,n/a,3,0,2,1,1
"org.apache.commons.codec.language.ColognePhonetic.preprocess(String)",3,1,n/a,18,4,1,11,5
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphone()",1,5,n/a,6,0,0,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.DoubleMetaphoneResult(int)",0,1,n/a,3,0,1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String)",2,6,n/a,4,0,1,2,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String,String)",2,6,n/a,4,0,2,2,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char)",2,57,n/a,4,0,1,2,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char,char)",2,17,n/a,4,0,2,2,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(String)",5,2,n/a,8,1,1,4,2
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(char)",2,5,n/a,5,1,1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(String)",5,2,n/a,8,1,1,4,2
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(char)",2,3,n/a,5,1,1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getAlternate()",1,1,n/a,3,0,0,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getPrimary()",1,1,n/a,3,0,0,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.isComplete()",2,1,n/a,4,0,0,1,2
"org.apache.commons.codec.language.DoubleMetaphone.charAt(String,int)",2,41,n/a,11,1,2,3,3
"org.apache.commons.codec.language.DoubleMetaphone.cleanInput(String)",3,1,n/a,13,1,1,6,3
"org.apache.commons.codec.language.DoubleMetaphone.conditionC0(String,int)",6,1,n/a,18,1,2,10,7
"org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(String,int)",3,1,n/a,15,1,2,7,5
"org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(String,int)",7,1,n/a,11,0,2,1,8
"org.apache.commons.codec.language.DoubleMetaphone.conditionL0(String,int)",7,1,n/a,15,1,2,5,6
"org.apache.commons.codec.language.DoubleMetaphone.conditionM0(String,int)",4,1,n/a,11,1,2,3,4
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String)",1,41,n/a,8,0,4,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String)",1,29,n/a,8,0,5,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String,String)",1,16,n/a,9,0,6,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String,String,String)",1,5,n/a,10,0,7,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String,String,String,String)",1,1,n/a,11,0,8,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String,String,String,String,String)",1,1,n/a,11,0,9,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String[])",3,9,n/a,18,3,4,8,5
"org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String)",1,7,n/a,9,0,1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String,boolean)",40,10,n/a,110,2,2,95,37
"org.apache.commons.codec.language.DoubleMetaphone.encode(Object)",2,9,n/a,14,1,1,3,2
"org.apache.commons.codec.language.DoubleMetaphone.encode(String)",1,10,n/a,9,0,1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.getMaxCodeLen()",0,5,n/a,7,0,0,1,1
"org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(DoubleMetaphoneResult,int)",1,1,n/a,10,1,2,3,2
"org.apache.commons.codec.language.DoubleMetaphone.handleC(String,DoubleMetaphoneResult,int)",24,1,n/a,52,2,3,31,17
"org.apache.commons.codec.language.DoubleMetaphone.handleCC(String,DoubleMetaphoneResult,int)",7,1,n/a,24,2,3,8,6
"org.apache.commons.codec.language.DoubleMetaphone.handleCH(String,DoubleMetaphoneResult,int)",10,1,n/a,30,3,3,15,7
"org.apache.commons.codec.language.DoubleMetaphone.handleD(String,DoubleMetaphoneResult,int)",7,1,n/a,25,2,3,12,4
"org.apache.commons.codec.language.DoubleMetaphone.handleG(String,DoubleMetaphoneResult,int,boolean)",33,1,n/a,55,2,4,31,26
"org.apache.commons.codec.language.DoubleMetaphone.handleGH(String,DoubleMetaphoneResult,int)",14,1,n/a,33,2,3,16,16
"org.apache.commons.codec.language.DoubleMetaphone.handleH(String,DoubleMetaphoneResult,int)",5,1,n/a,17,1,3,5,4
"org.apache.commons.codec.language.DoubleMetaphone.handleJ(String,DoubleMetaphoneResult,int,boolean)",20,1,n/a,33,2,4,17,17
"org.apache.commons.codec.language.DoubleMetaphone.handleL(String,DoubleMetaphoneResult,int)",5,1,n/a,19,2,3,8,3
"org.apache.commons.codec.language.DoubleMetaphone.handleP(String,DoubleMetaphoneResult,int)",4,1,n/a,15,1,3,6,3
"org.apache.commons.codec.language.DoubleMetaphone.handleR(String,DoubleMetaphoneResult,int,boolean)",6,1,n/a,16,1,4,4,6
"org.apache.commons.codec.language.DoubleMetaphone.handleS(String,DoubleMetaphoneResult,int,boolean)",22,1,n/a,52,2,4,25,17
"org.apache.commons.codec.language.DoubleMetaphone.handleSC(String,DoubleMetaphoneResult,int)",13,1,n/a,31,3,3,12,8
"org.apache.commons.codec.language.DoubleMetaphone.handleT(String,DoubleMetaphoneResult,int)",13,1,n/a,29,2,3,14,9
"org.apache.commons.codec.language.DoubleMetaphone.handleW(String,DoubleMetaphoneResult,int)",17,1,n/a,38,3,3,16,11
"org.apache.commons.codec.language.DoubleMetaphone.handleX(String,DoubleMetaphoneResult,int)",6,1,n/a,20,2,3,7,6
"org.apache.commons.codec.language.DoubleMetaphone.handleZ(String,DoubleMetaphoneResult,int,boolean)",7,1,n/a,19,2,4,8,7
"org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String)",1,6,n/a,13,0,2,1,1
"org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String,boolean)",3,10,n/a,16,0,3,1,1
"org.apache.commons.codec.language.DoubleMetaphone.isSilentStart(String)",1,1,n/a,15,2,1,6,3
"org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(String)",4,1,n/a,8,0,1,1,4
"org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)",1,10,n/a,6,0,1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen(int)",0,1,n/a,7,0,1,1,1
"org.apache.commons.codec.language.Metaphone.Metaphone()",1,1,n/a,6,0,0,1,1
"org.apache.commons.codec.language.Metaphone.encode(Object)",2,8,n/a,18,1,1,3,2
"org.apache.commons.codec.language.Metaphone.encode(String)",1,9,n/a,9,0,1,1,1
"org.apache.commons.codec.language.Metaphone.getMaxCodeLen()",0,3,n/a,5,0,0,1,1
"org.apache.commons.codec.language.Metaphone.isLastChar(int,int)",0,9,n/a,3,0,2,1,1
"org.apache.commons.codec.language.Metaphone.isMetaphoneEqual(String,String)",3,4,n/a,11,0,2,1,1
"org.apache.commons.codec.language.Metaphone.isNextChar(StringBuffer,int,char)",2,6,n/a,8,1,3,4,3
"org.apache.commons.codec.language.Metaphone.isPreviousChar(StringBuffer,int,char)",2,6,n/a,8,1,3,4,3
"org.apache.commons.codec.language.Metaphone.isVowel(StringBuffer,int)",2,4,n/a,3,0,2,1,1
"org.apache.commons.codec.language.Metaphone.metaphone(String)",100,44,n/a,240,5,1,158,80
"org.apache.commons.codec.language.Metaphone.regionMatch(StringBuffer,int,String)",5,10,n/a,9,1,3,5,3
"org.apache.commons.codec.language.Metaphone.setMaxCodeLen(int)",0,1,n/a,5,0,1,1,1
"org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex()",0,3,n/a,7,0,0,1,1
"org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(String)",1,1,n/a,11,0,1,1,1
"org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(char[])",1,1,n/a,13,0,1,2,1
"org.apache.commons.codec.language.RefinedSoundex.difference(String,String)",1,12,n/a,25,0,2,1,1
"org.apache.commons.codec.language.RefinedSoundex.encode(Object)",2,8,n/a,19,1,1,3,2
"org.apache.commons.codec.language.RefinedSoundex.encode(String)",1,21,n/a,10,0,1,1,1
"org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)",2,2,n/a,15,1,1,3,2
"org.apache.commons.codec.language.RefinedSoundex.soundex(String)",10,5,n/a,30,2,1,19,6
"org.apache.commons.codec.language.Soundex.Soundex()",0,4,n/a,9,0,0,1,1
"org.apache.commons.codec.language.Soundex.Soundex(String)",1,1,n/a,11,0,1,1,1
"org.apache.commons.codec.language.Soundex.Soundex(char[])",1,3,n/a,14,0,1,2,1
"org.apache.commons.codec.language.Soundex.difference(String,String)",1,12,n/a,22,0,2,1,1
"org.apache.commons.codec.language.Soundex.encode(Object)",2,8,n/a,19,1,1,3,2
"org.apache.commons.codec.language.Soundex.encode(String)",1,74,n/a,12,0,1,1,1
"org.apache.commons.codec.language.Soundex.getMappingCode(String,int)",5,2,n/a,29,3,2,9,8
"org.apache.commons.codec.language.Soundex.getSoundexMapping()",0,2,n/a,8,0,0,1,1
"org.apache.commons.codec.language.Soundex.map(char)",3,2,n/a,16,1,1,4,3
"org.apache.commons.codec.language.Soundex.soundex(String)",7,6,n/a,34,3,1,17,8
"org.apache.commons.codec.language.SoundexUtils.clean(String)",8,4,n/a,25,2,1,13,6
"org.apache.commons.codec.language.SoundexUtils.difference(StringEncoder,String,String)",3,4,n/a,29,0,3,1,1
"org.apache.commons.codec.language.SoundexUtils.differenceEncoded(String,String)",5,4,n/a,33,2,2,10,5
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(Object)",2,8,n/a,6,1,1,3,2
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(String)",1,10,n/a,6,1,1,3,2
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.getNameType()",1,1,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.getRuleType()",1,1,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.isConcat()",1,1,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.setConcat(boolean)",3,1,n/a,9,0,1,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.setNameType(NameType)",3,1,n/a,10,0,1,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.setRuleType(RuleType)",3,2,n/a,9,0,1,1,1
"org.apache.commons.codec.language.bm.Lang.Lang(List<LangRule>,Languages)",1,1,n/a,4,0,2,2,1
"org.apache.commons.codec.language.bm.Lang.LangRule.LangRule(Pattern,Set<String>,boolean)",0,1,n/a,5,0,3,3,1
"org.apache.commons.codec.language.bm.Lang.LangRule.matches(String)",2,1,n/a,3,0,1,1,1
"org.apache.commons.codec.language.bm.Lang.guessLanguage(String)",4,1,n/a,15,1,1,4,2
"org.apache.commons.codec.language.bm.Lang.guessLanguages(String)",6,3,n/a,28,3,1,8,4
"org.apache.commons.codec.language.bm.Lang.instance(NameType)",1,3,n/a,10,0,1,1,1
"org.apache.commons.codec.language.bm.Lang.loadFromResource(String,Languages)",23,2,n/a,63,4,2,29,9
"org.apache.commons.codec.language.bm.Languages.Languages(Set<String>)",0,1,n/a,3,0,1,1,1
"org.apache.commons.codec.language.bm.Languages.getLanguages()",0,2,n/a,3,0,0,1,1
"org.apache.commons.codec.language.bm.Languages.instance(NameType)",1,3,n/a,3,0,1,1,1
"org.apache.commons.codec.language.bm.Languages.instance(String)",14,2,n/a,29,3,1,16,7
"org.apache.commons.codec.language.bm.Languages.langResourceName(NameType)",2,1,n/a,3,0,1,1,1
"org.apache.commons.codec.language.bm.NameType.NameType(String)",0,3,n/a,3,0,1,1,1
"org.apache.commons.codec.language.bm.NameType.getName()",0,4,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(NameType,RuleType,boolean)",2,5,n/a,19,1,3,6,2
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.RulesApplication(List<Rule>,Set<String>,String,String,int)",1,2,n/a,10,1,5,7,2
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getI()",0,2,n/a,3,0,0,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getPhonetic()",0,2,n/a,3,0,0,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.invoke()",7,2,n/a,26,2,0,18,7
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.isFound()",0,1,n/a,3,0,0,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(String,List<Rule>,Set<String>,boolean)",25,2,n/a,49,5,4,37,11
"org.apache.commons.codec.language.bm.PhoneticEngine.applyRuleIfCompatible(String,String,Set<String>)",8,1,n/a,34,3,3,20,8
"org.apache.commons.codec.language.bm.PhoneticEngine.encode(String)",2,7,n/a,11,0,1,2,1
"org.apache.commons.codec.language.bm.PhoneticEngine.expand(String)",11,4,n/a,24,3,1,18,6
"org.apache.commons.codec.language.bm.PhoneticEngine.getLang()",0,0,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.getNameType()",0,3,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.getRuleType()",0,3,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()",0,3,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.join(Iterable<String>,String)",10,3,n/a,11,1,2,7,3
"org.apache.commons.codec.language.bm.PhoneticEngine.normalizeLanguageAttributes(String,boolean)",13,4,n/a,23,2,2,14,6
"org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8(String,Set<String>)",46,1,n/a,80,3,2,50,15
"org.apache.commons.codec.language.bm.PhoneticEngine.removeDuplicateAlternates(String)",4,1,n/a,11,2,1,7,3
"org.apache.commons.codec.language.bm.PhoneticEngine.splitOnPipe(String)",6,4,n/a,13,2,1,9,3
"org.apache.commons.codec.language.bm.Rule.Rule(String,String,String,String,Set<String>,String)",2,4,n/a,24,0,6,6,1
"org.apache.commons.codec.language.bm.Rule.getLContext()",0,0,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.Rule.getLanguage()",0,0,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.Rule.getLogical()",0,0,n/a,9,0,0,1,1
"org.apache.commons.codec.language.bm.Rule.getPattern()",0,1,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.Rule.getPhoneme()",0,1,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.Rule.getRContext()",0,0,n/a,8,0,0,1,1
"org.apache.commons.codec.language.bm.Rule.instance(NameType,RuleType,Set<String>)",5,2,n/a,18,1,3,3,2
"org.apache.commons.codec.language.bm.Rule.instance(NameType,RuleType,String)",7,4,n/a,18,1,3,4,2
"org.apache.commons.codec.language.bm.Rule.languageMatches(Set<String>)",7,2,n/a,20,2,1,7,5
"org.apache.commons.codec.language.bm.Rule.mkScanner(NameType,RuleType,String)",7,2,n/a,8,1,3,5,2
"org.apache.commons.codec.language.bm.Rule.mkScanner(String)",5,1,n/a,8,1,1,5,2
"org.apache.commons.codec.language.bm.Rule.parseRules(Scanner)",27,3,n/a,52,5,1,31,10
"org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(String,int)",11,2,n/a,23,1,2,10,5
"org.apache.commons.codec.language.bm.Rule.stripQuotes(String)",5,4,n/a,9,1,1,5,3
"org.apache.commons.codec.language.bm.RuleType.RuleType(String)",0,3,n/a,3,0,1,1,1
"org.apache.commons.codec.language.bm.RuleType.getName()",0,2,n/a,3,0,0,1,1
"org.apache.commons.codec.net.BCodec.BCodec()",1,7,n/a,6,0,0,1,1
"org.apache.commons.codec.net.BCodec.BCodec(String)",1,3,n/a,12,0,1,2,1
"org.apache.commons.codec.net.BCodec.decode(Object)",4,7,n/a,24,1,1,5,3
"org.apache.commons.codec.net.BCodec.decode(String)",3,7,n/a,20,1,1,5,3
"org.apache.commons.codec.net.BCodec.doDecoding(byte[])",1,2,n/a,7,1,1,3,2
"org.apache.commons.codec.net.BCodec.doEncoding(byte[])",1,2,n/a,7,1,1,3,2
"org.apache.commons.codec.net.BCodec.encode(Object)",4,11,n/a,21,1,1,5,3
"org.apache.commons.codec.net.BCodec.encode(String)",2,17,n/a,16,1,1,3,2
"org.apache.commons.codec.net.BCodec.encode(String,String)",3,2,n/a,22,1,2,5,3
"org.apache.commons.codec.net.BCodec.getDefaultCharset()",0,1,n/a,8,0,0,1,1
"org.apache.commons.codec.net.BCodec.getEncoding()",0,2,n/a,4,0,0,1,1
"org.apache.commons.codec.net.QCodec.QCodec()",1,10,n/a,6,0,0,1,1
"org.apache.commons.codec.net.QCodec.QCodec(String)",1,3,n/a,12,0,1,2,1
"org.apache.commons.codec.net.QCodec.decode(Object)",4,7,n/a,24,1,1,5,3
"org.apache.commons.codec.net.QCodec.decode(String)",3,10,n/a,22,1,1,5,3
"org.apache.commons.codec.net.QCodec.doDecoding(byte[])",2,2,n/a,26,3,1,18,7
"org.apache.commons.codec.net.QCodec.doEncoding(byte[])",1,2,n/a,15,3,1,10,5
"org.apache.commons.codec.net.QCodec.encode(Object)",4,11,n/a,21,1,1,5,3
"org.apache.commons.codec.net.QCodec.encode(String)",2,20,n/a,16,1,1,3,2
"org.apache.commons.codec.net.QCodec.encode(String,String)",3,2,n/a,22,1,2,5,3
"org.apache.commons.codec.net.QCodec.getDefaultCharset()",0,1,n/a,8,0,0,1,1
"org.apache.commons.codec.net.QCodec.getEncoding()",0,2,n/a,4,0,0,1,1
"org.apache.commons.codec.net.QCodec.isEncodeBlanks()",0,2,n/a,8,0,0,1,1
"org.apache.commons.codec.net.QCodec.setEncodeBlanks(boolean)",0,4,n/a,9,0,1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec()",1,14,n/a,6,0,0,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(String)",1,3,n/a,10,0,1,2,1
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(Object)",5,8,n/a,24,1,1,7,4
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(String)",4,11,n/a,22,1,1,5,3
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,String)",3,4,n/a,20,1,2,3,2
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(byte[])",1,3,n/a,18,0,1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])",7,4,n/a,36,3,1,15,5
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(Object)",5,12,n/a,23,1,1,7,4
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(String)",4,18,n/a,27,1,1,5,3
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,String)",3,7,n/a,23,1,2,3,2
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(byte[])",1,10,n/a,15,0,1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(BitSet,byte[])",5,3,n/a,35,2,2,13,6
"org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int,ByteArrayOutputStream)",7,1,n/a,15,0,2,5,1
"org.apache.commons.codec.net.QuotedPrintableCodec.getDefaultCharset()",0,4,n/a,8,0,0,1,1
"org.apache.commons.codec.net.RFC1522Codec.decodeText(String)",20,4,n/a,48,1,1,24,8
"org.apache.commons.codec.net.RFC1522Codec.doDecoding(byte[])",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.apache.commons.codec.net.RFC1522Codec.doEncoding(byte[])",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.apache.commons.codec.net.RFC1522Codec.encodeText(String,String)",13,3,n/a,34,1,2,12,2
"org.apache.commons.codec.net.RFC1522Codec.getEncoding()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.apache.commons.codec.net.URLCodec.URLCodec()",1,13,n/a,6,0,0,1,1
"org.apache.commons.codec.net.URLCodec.URLCodec(String)",1,3,n/a,9,0,1,2,1
"org.apache.commons.codec.net.URLCodec.decode(Object)",5,8,n/a,22,1,1,7,4
"org.apache.commons.codec.net.URLCodec.decode(String)",4,11,n/a,21,1,1,5,3
"org.apache.commons.codec.net.URLCodec.decode(String,String)",3,4,n/a,18,1,2,3,2
"org.apache.commons.codec.net.URLCodec.decode(byte[])",1,4,n/a,12,0,1,1,1
"org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])",8,2,n/a,32,3,1,17,6
"org.apache.commons.codec.net.URLCodec.encode(Object)",5,12,n/a,22,1,1,7,4
"org.apache.commons.codec.net.URLCodec.encode(String)",4,17,n/a,20,1,1,5,3
"org.apache.commons.codec.net.URLCodec.encode(String,String)",3,7,n/a,17,1,2,3,2
"org.apache.commons.codec.net.URLCodec.encode(byte[])",1,10,n/a,10,0,1,1,1
"org.apache.commons.codec.net.URLCodec.encodeUrl(BitSet,byte[])",11,2,n/a,37,3,2,19,7
"org.apache.commons.codec.net.URLCodec.getDefaultCharset()",0,4,n/a,8,0,0,1,1
"org.apache.commons.codec.net.Utils.digit16(byte)",2,4,n/a,17,1,1,4,2

Class,CBO,CSA,CSO,CSOA,Dcy*,DIT,Inner,LCOM,LOC,NCLOC,NOC,NOIC,NOOC,OCavg,Query,RFC,WMC
"org.apache.commons.codec.BinaryDecoder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.commons.codec.BinaryEncoder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.commons.codec.CharEncoding",12,6,12,18,0,1,0,0,102,8,0,11,0,n/a,0,0,0
"org.apache.commons.codec.Decoder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.commons.codec.DecoderException",22,6,47,53,0,3,1,0,65,15,0,26,0,"1,00",0,8,4
"org.apache.commons.codec.Encoder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.commons.codec.EncoderException",37,6,47,53,0,3,1,0,66,15,0,26,0,"1,00",0,8,4
"org.apache.commons.codec.StringDecoder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.commons.codec.StringEncoder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.commons.codec.StringEncoderComparator",4,1,23,24,3,1,1,1,47,17,0,18,0,"1,00",1,4,2
"org.apache.commons.codec.binary.Base32",8,26,46,72,10,2,4,1,429,237,0,27,0,"4,88",1,14,39
"org.apache.commons.codec.binary.Base32InputStream",3,4,41,45,12,4,2,0,59,11,0,31,0,"1,00",0,6,3
"org.apache.commons.codec.binary.Base32OutputStream",3,4,36,40,12,4,3,0,59,11,0,24,0,"1,00",0,6,3
"org.apache.commons.codec.binary.Base64",11,25,63,88,10,2,4,3,676,264,0,27,0,"2,40",18,41,60
"org.apache.commons.codec.binary.Base64InputStream",3,4,41,45,12,4,2,0,64,11,0,31,0,"1,00",0,6,3
"org.apache.commons.codec.binary.Base64OutputStream",3,4,36,40,12,4,3,0,64,11,0,24,0,"1,00",0,6,3
"org.apache.commons.codec.binary.BaseNCodec",18,17,39,56,9,1,4,1,380,160,3,11,0,"2,00",17,29,40
"org.apache.commons.codec.binary.BaseNCodecInputStream",6,4,38,42,10,3,2,2,103,52,2,23,3,"3,75",3,12,15
"org.apache.commons.codec.binary.BaseNCodecOutputStream",6,4,33,37,10,3,3,1,112,59,2,13,4,"2,50",0,16,15
"org.apache.commons.codec.binary.BinaryCodec",6,11,27,38,7,1,4,1,251,112,0,11,0,"3,00",11,15,33
"org.apache.commons.codec.binary.Hex",10,4,30,34,9,1,4,1,252,87,0,10,1,"1,50",12,25,21
"org.apache.commons.codec.binary.StringUtils",17,0,27,27,1,1,0,1,247,61,0,11,0,"1,13",15,18,17
"org.apache.commons.codec.digest.DigestUtils",3,1,50,51,10,1,0,1,514,127,0,11,0,"1,03",38,47,39
"org.apache.commons.codec.language.AbstractCaverphone",6,0,17,17,3,1,2,2,51,14,2,11,0,"1,33",2,7,4
"org.apache.commons.codec.language.Caverphone1",2,1,18,19,4,2,2,1,95,66,0,13,0,"2,00",1,5,2
"org.apache.commons.codec.language.Caverphone2",2,1,18,19,4,2,2,1,97,69,0,13,0,"2,00",1,5,2
"org.apache.commons.codec.language.ColognePhonetic",7,1,20,21,7,1,2,1,296,121,0,11,0,"5,67",6,22,34
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer",4,2,17,19,1,1,0,2,20,20,2,10,1,"1,00",3,6,4
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer",3,2,23,25,2,2,0,1,26,26,0,13,0,"1,00",4,8,6
"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer",2,2,20,22,2,2,0,1,15,15,0,13,0,"1,00",1,5,3
"org.apache.commons.codec.language.DoubleMetaphone",6,6,58,64,4,1,2,1,946,706,0,11,0,"4,16",42,65,183
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult",1,3,24,27,4,1,0,1,64,60,0,11,0,"1,33",3,20,16
"org.apache.commons.codec.language.Metaphone",4,4,26,30,4,1,2,1,363,276,0,11,0,"5,92",10,29,71
"org.apache.commons.codec.language.RefinedSoundex",5,4,22,26,5,1,2,2,161,57,0,11,0,"1,88",5,20,15
"org.apache.commons.codec.language.Soundex",6,4,24,28,5,1,2,2,212,76,0,11,0,"2,00",7,19,20
"org.apache.commons.codec.language.SoundexUtils",5,0,15,15,3,1,0,2,96,35,0,11,0,"3,33",3,10,10
"org.apache.commons.codec.language.bm.BeiderMorseEncoder",6,1,22,23,13,1,2,1,83,33,0,11,0,"1,25",5,14,10
"org.apache.commons.codec.language.bm.Lang",8,4,17,21,5,1,0,3,171,82,0,11,0,"3,60",4,40,18
"org.apache.commons.codec.language.bm.Lang.LangRule",1,3,14,17,0,1,0,1,13,13,0,11,0,"1,00",1,4,2
"org.apache.commons.codec.language.bm.Languages",6,3,17,20,2,1,0,4,116,48,0,11,0,"2,40",4,24,12
"org.apache.commons.codec.language.bm.NameType",8,6,27,33,0,n/a,2,1,26,12,n/a,20,0,"1,00",1,2,2
"org.apache.commons.codec.language.bm.PhoneticEngine",9,5,26,31,9,1,0,1,342,256,0,11,0,"4,21",13,64,59
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication",2,6,17,23,9,1,0,1,53,50,0,11,0,"2,00",4,12,10
"org.apache.commons.codec.language.bm.ResourceConstants",3,4,12,16,0,1,0,0,12,6,0,11,0,n/a,0,0,0
"org.apache.commons.codec.language.bm.Rule",9,10,27,37,5,1,0,5,306,168,0,11,0,"2,53",14,61,38
"org.apache.commons.codec.language.bm.RuleType",5,6,27,33,0,n/a,2,1,16,10,n/a,20,0,"1,00",1,2,2
"org.apache.commons.codec.net.BCodec",8,1,32,33,14,2,4,5,172,79,0,13,0,"1,82",9,22,20
"org.apache.commons.codec.net.QCodec",9,5,34,39,15,2,4,4,269,157,0,13,0,"2,54",10,26,33
"org.apache.commons.codec.net.QuotedPrintableCodec",12,5,32,37,13,1,6,1,337,140,0,11,0,"2,43",11,35,34
"org.apache.commons.codec.net.RFC1522Codec",7,3,17,20,4,1,0,1,144,60,3,11,0,"4,50",5,21,9
"org.apache.commons.codec.net.URLCodec",11,4,31,35,12,1,6,1,294,144,0,11,0,"2,77",11,34,36
"org.apache.commons.codec.net.Utils",4,0,13,13,12,1,0,1,26,9,0,11,0,"2,00",1,3,2

Package,C(rec),LOC(rec),METH(rec)
"",52,9.563,401
"org",52,9.563,401
"org.apache",52,9.563,401
"org.apache.commons",52,9.563,401
"org.apache.commons.codec",52,9.563,401
"org.apache.commons.codec.binary",12,2.946,118
"org.apache.commons.codec.digest",1,556,38
"org.apache.commons.codec.language",23,3.944,172
"org.apache.commons.codec.language.bm",10,1.315,58
"org.apache.commons.codec.net",6,1.406,57

Project,C,L(J),LOCp,METH
"project",52,9.364,9.563,401

