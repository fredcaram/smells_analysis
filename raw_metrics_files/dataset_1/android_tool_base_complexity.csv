Complexity metrics,Ter, 24 out 2017 17:17:05 BRST
Method,ev(G),iv(G),v(G)
"com.android.SdkConstants.androidCmdName()",1,1,2
"com.android.SdkConstants.currentPlatform()",4,3,4
"com.android.SdkConstants.currentPlatformName()",4,3,4
"com.android.SdkConstants.ext(String,String)",2,1,2
"com.android.SdkConstants.mkSdCardCmdName()",1,1,2
"com.android.assetstudiolib.ActionBarIconGenerator.ActionBarIconGenerator()",1,1,1
"com.android.assetstudiolib.ActionBarIconGenerator.generate(GraphicGeneratorContext,Options)",1,2,3
"com.android.assetstudiolib.GraphicGenerator.Shape.Shape(String)",1,1,1
"com.android.assetstudiolib.GraphicGenerator.Style.Style(String)",1,1,1
"com.android.assetstudiolib.GraphicGenerator.generate(String,Map<String, Map<String, BufferedImage>>,GraphicGeneratorContext,Options,String)",4,5,8
"com.android.assetstudiolib.GraphicGenerator.getClipartIcon(String)",1,1,1
"com.android.assetstudiolib.GraphicGenerator.getClipartImage(String)",1,1,1
"com.android.assetstudiolib.GraphicGenerator.getClipartNames()",3,6,7
"com.android.assetstudiolib.GraphicGenerator.getIconFolder(Options)",1,1,1
"com.android.assetstudiolib.GraphicGenerator.getIconName(Options,String)",1,1,1
"com.android.assetstudiolib.GraphicGenerator.getIconPath(Options,String)",1,1,1
"com.android.assetstudiolib.GraphicGenerator.getMdpiScaleFactor(Density)",1,1,1
"com.android.assetstudiolib.GraphicGenerator.getStencilImage(String)",1,1,1
"com.android.assetstudiolib.LauncherIconGenerator.generate(GraphicGeneratorContext,Options)",1,7,8
"com.android.assetstudiolib.LauncherIconGenerator.generate(String,Map<String, Map<String, BufferedImage>>,GraphicGeneratorContext,Options,String)",1,3,3
"com.android.assetstudiolib.LauncherIconGenerator.getIconPath(Options,String)",2,1,2
"com.android.assetstudiolib.MenuIconGenerator.MenuIconGenerator()",1,1,1
"com.android.assetstudiolib.MenuIconGenerator.generate(GraphicGeneratorContext,Options)",1,1,1
"com.android.assetstudiolib.NotificationIconGenerator.NotificationIconGenerator()",1,1,1
"com.android.assetstudiolib.NotificationIconGenerator.Version.Version(String)",1,1,1
"com.android.assetstudiolib.NotificationIconGenerator.Version.getDisplayName()",1,1,1
"com.android.assetstudiolib.NotificationIconGenerator.generate(GraphicGeneratorContext,Options)",1,3,5
"com.android.assetstudiolib.NotificationIconGenerator.generate(String,Map<String, Map<String, BufferedImage>>,GraphicGeneratorContext,Options,String)",1,4,4
"com.android.assetstudiolib.NotificationIconGenerator.getIconFolder(Options)",3,1,5
"com.android.assetstudiolib.TabIconGenerator.TabIconGenerator()",1,1,1
"com.android.assetstudiolib.TabIconGenerator.generate(GraphicGeneratorContext,Options)",1,4,4
"com.android.assetstudiolib.TabIconGenerator.generate(String,Map<String, Map<String, BufferedImage>>,GraphicGeneratorContext,Options,String)",1,2,4
"com.android.assetstudiolib.TabIconGenerator.getIconFolder(Options)",2,1,3
"com.android.assetstudiolib.TabIconGenerator.getIconName(Options,String)",2,1,2
"com.android.assetstudiolib.TextRenderUtil.renderTextImage(String,int,Options)",2,3,6
"com.android.assetstudiolib.Util.FillEffect.FillEffect(Paint)",1,1,1
"com.android.assetstudiolib.Util.FillEffect.FillEffect(Paint,double)",1,1,1
"com.android.assetstudiolib.Util.ShadowEffect.ShadowEffect(double,double,double,Color,double,boolean)",1,1,1
"com.android.assetstudiolib.Util.blurredImage(BufferedImage,double)",2,4,6
"com.android.assetstudiolib.Util.drawCenterCrop(Graphics2D,BufferedImage,Rectangle)",1,2,2
"com.android.assetstudiolib.Util.drawCenterInside(Graphics2D,BufferedImage,Rectangle)",1,2,2
"com.android.assetstudiolib.Util.drawEffects(Graphics2D,BufferedImage,int,int,Effect[])",5,7,9
"com.android.assetstudiolib.Util.filledImage(BufferedImage,Paint)",1,1,1
"com.android.assetstudiolib.Util.invertedAlphaImage(BufferedImage)",1,1,1
"com.android.assetstudiolib.Util.newArgbBufferedImage(int,int)",1,1,1
"com.android.assetstudiolib.Util.operatedImage(BufferedImage,BufferedImageOp)",1,1,1
"com.android.assetstudiolib.Util.paddedImage(BufferedImage,int)",2,1,2
"com.android.assetstudiolib.Util.scaleRectangle(Rectangle,float)",1,1,1
"com.android.assetstudiolib.Util.scaledImage(BufferedImage,int,int)",1,1,1
"com.android.assetstudiolib.Util.trimmedImage(BufferedImage)",2,4,6
"com.android.ddmlib.AdbCommandRejectedException.AdbCommandRejectedException(String)",1,1,1
"com.android.ddmlib.AdbCommandRejectedException.AdbCommandRejectedException(String,boolean)",1,1,1
"com.android.ddmlib.AdbCommandRejectedException.isDeviceOffline()",1,1,1
"com.android.ddmlib.AdbCommandRejectedException.wasErrorDuringDeviceSelection()",1,1,1
"com.android.ddmlib.AdbHelper.AdbHelper()",1,1,1
"com.android.ddmlib.AdbHelper.AdbResponse.AdbResponse()",1,1,1
"com.android.ddmlib.AdbHelper.createAdbForwardRequest(String,int)",1,1,2
"com.android.ddmlib.AdbHelper.createForward(InetSocketAddress,Device,String,String)",2,3,3
"com.android.ddmlib.AdbHelper.createJdwpForwardRequest(int)",1,1,1
"com.android.ddmlib.AdbHelper.createPassThroughConnection(InetSocketAddress,Device,int)",2,3,4
"com.android.ddmlib.AdbHelper.executeRemoteCommand(InetSocketAddress,String,IDevice,IShellOutputReceiver,int)",7,9,12
"com.android.ddmlib.AdbHelper.formAdbRequest(String)",1,2,2
"com.android.ddmlib.AdbHelper.getFrameBuffer(InetSocketAddress,Device)",3,3,4
"com.android.ddmlib.AdbHelper.isOkay(byte[])",1,1,4
"com.android.ddmlib.AdbHelper.open(InetSocketAddress,Device,int)",2,3,4
"com.android.ddmlib.AdbHelper.read(SocketChannel,byte[])",1,1,1
"com.android.ddmlib.AdbHelper.read(SocketChannel,byte[],int,int)",5,5,8
"com.android.ddmlib.AdbHelper.readAdbResponse(SocketChannel,boolean)",2,3,5
"com.android.ddmlib.AdbHelper.reboot(String,InetSocketAddress,Device)",1,3,3
"com.android.ddmlib.AdbHelper.removeForward(InetSocketAddress,Device,String,String)",2,3,3
"com.android.ddmlib.AdbHelper.replyToString(byte[])",1,2,2
"com.android.ddmlib.AdbHelper.runEventLogService(InetSocketAddress,Device,LogReceiver)",1,1,1
"com.android.ddmlib.AdbHelper.runLogService(InetSocketAddress,Device,String,LogReceiver)",5,7,10
"com.android.ddmlib.AdbHelper.setDevice(SocketChannel,IDevice)",3,2,3
"com.android.ddmlib.AdbHelper.write(SocketChannel,byte[])",1,1,1
"com.android.ddmlib.AdbHelper.write(SocketChannel,byte[],int,int)",5,5,8
"com.android.ddmlib.AllocationInfo.AllocationInfo(int,String,int,short,StackTraceElement[])",1,1,1
"com.android.ddmlib.AllocationInfo.AllocationSorter.AllocationSorter()",1,1,1
"com.android.ddmlib.AllocationInfo.AllocationSorter.compare(AllocationInfo,AllocationInfo)",2,2,9
"com.android.ddmlib.AllocationInfo.AllocationSorter.compareOptionalString(String,String)",4,3,4
"com.android.ddmlib.AllocationInfo.AllocationSorter.getSortMode()",1,1,1
"com.android.ddmlib.AllocationInfo.AllocationSorter.isDescending()",1,1,1
"com.android.ddmlib.AllocationInfo.AllocationSorter.setSortMode(SortMode)",1,1,2
"com.android.ddmlib.AllocationInfo.compareTo(AllocationInfo)",1,1,1
"com.android.ddmlib.AllocationInfo.filter(String,boolean,Locale)",6,3,7
"com.android.ddmlib.AllocationInfo.getAllocNumber()",1,1,1
"com.android.ddmlib.AllocationInfo.getAllocatedClass()",1,1,1
"com.android.ddmlib.AllocationInfo.getFirstTraceClassName()",2,2,2
"com.android.ddmlib.AllocationInfo.getFirstTraceMethodName()",2,2,2
"com.android.ddmlib.AllocationInfo.getSize()",1,1,1
"com.android.ddmlib.AllocationInfo.getStackTrace()",1,1,1
"com.android.ddmlib.AllocationInfo.getThreadId()",1,1,1
"com.android.ddmlib.AndroidDebugBridge.AndroidDebugBridge()",1,1,1
"com.android.ddmlib.AndroidDebugBridge.AndroidDebugBridge(String)",2,2,3
"com.android.ddmlib.AndroidDebugBridge.addClientChangeListener(IClientChangeListener)",1,2,2
"com.android.ddmlib.AndroidDebugBridge.addDebugBridgeChangeListener(IDebugBridgeChangeListener)",1,4,4
"com.android.ddmlib.AndroidDebugBridge.addDeviceChangeListener(IDeviceChangeListener)",1,2,2
"com.android.ddmlib.AndroidDebugBridge.checkAdbVersion()",7,11,15
"com.android.ddmlib.AndroidDebugBridge.clientChanged(Client,int)",1,3,3
"com.android.ddmlib.AndroidDebugBridge.createBridge()",2,3,5
"com.android.ddmlib.AndroidDebugBridge.createBridge(String,boolean)",3,7,8
"com.android.ddmlib.AndroidDebugBridge.determineAndValidateAdbPort()",3,7,7
"com.android.ddmlib.AndroidDebugBridge.deviceChanged(IDevice,int)",1,3,3
"com.android.ddmlib.AndroidDebugBridge.deviceConnected(IDevice)",1,3,3
"com.android.ddmlib.AndroidDebugBridge.deviceDisconnected(IDevice)",1,3,3
"com.android.ddmlib.AndroidDebugBridge.disconnectBridge()",1,4,4
"com.android.ddmlib.AndroidDebugBridge.getBridge()",1,1,1
"com.android.ddmlib.AndroidDebugBridge.getClientSupport()",1,1,1
"com.android.ddmlib.AndroidDebugBridge.getConnectionAttemptCount()",2,2,2
"com.android.ddmlib.AndroidDebugBridge.getDeviceMonitor()",1,1,1
"com.android.ddmlib.AndroidDebugBridge.getDevices()",2,2,2
"com.android.ddmlib.AndroidDebugBridge.getLock()",1,1,1
"com.android.ddmlib.AndroidDebugBridge.getRestartAttemptCount()",2,2,2
"com.android.ddmlib.AndroidDebugBridge.getSocketAddress()",1,1,1
"com.android.ddmlib.AndroidDebugBridge.grabProcessOutput(Process,ArrayList<String>,ArrayList<String>,boolean)",5,6,10
"com.android.ddmlib.AndroidDebugBridge.hasInitialDeviceList()",2,2,2
"com.android.ddmlib.AndroidDebugBridge.init(boolean)",2,1,2
"com.android.ddmlib.AndroidDebugBridge.initAdbSocketAddr()",1,1,2
"com.android.ddmlib.AndroidDebugBridge.isConnected()",2,3,4
"com.android.ddmlib.AndroidDebugBridge.removeClientChangeListener(IClientChangeListener)",1,1,1
"com.android.ddmlib.AndroidDebugBridge.removeDebugBridgeChangeListener(IDebugBridgeChangeListener)",1,1,1
"com.android.ddmlib.AndroidDebugBridge.removeDeviceChangeListener(IDeviceChangeListener)",1,1,1
"com.android.ddmlib.AndroidDebugBridge.restart()",3,4,5
"com.android.ddmlib.AndroidDebugBridge.scanVersionLine(String)",3,5,6
"com.android.ddmlib.AndroidDebugBridge.setSelectedClient(Client)",1,2,2
"com.android.ddmlib.AndroidDebugBridge.start()",2,3,4
"com.android.ddmlib.AndroidDebugBridge.startAdb()",3,8,8
"com.android.ddmlib.AndroidDebugBridge.stop()",3,1,3
"com.android.ddmlib.AndroidDebugBridge.stopAdb()",3,3,5
"com.android.ddmlib.AndroidDebugBridge.terminate()",1,3,4
"com.android.ddmlib.BadPacketException.BadPacketException()",1,1,1
"com.android.ddmlib.BadPacketException.BadPacketException(String)",1,1,1
"com.android.ddmlib.CanceledException.CanceledException(String)",1,1,1
"com.android.ddmlib.CanceledException.CanceledException(String,Throwable)",1,1,1
"com.android.ddmlib.ChunkHandler.ChunkHandler()",1,1,1
"com.android.ddmlib.ChunkHandler.allocBuffer(int)",1,1,1
"com.android.ddmlib.ChunkHandler.checkDebuggerPortForAppName(Client,String)",1,6,6
"com.android.ddmlib.ChunkHandler.finishChunkPacket(JdwpPacket,int,int)",1,1,1
"com.android.ddmlib.ChunkHandler.getChunkDataBuf(ByteBuffer)",1,1,1
"com.android.ddmlib.ChunkHandler.getString(ByteBuffer,int)",1,2,2
"com.android.ddmlib.ChunkHandler.handleUnknownChunk(Client,int,ByteBuffer,boolean,int)",1,2,2
"com.android.ddmlib.ChunkHandler.name(int)",1,1,1
"com.android.ddmlib.ChunkHandler.putString(ByteBuffer,String)",1,2,2
"com.android.ddmlib.ChunkHandler.type(String)",2,3,3
"com.android.ddmlib.Client.Client(Device,SocketChannel,int)",1,1,1
"com.android.ddmlib.Client.addRequestId(int,ChunkHandler)",1,2,2
"com.android.ddmlib.Client.close(boolean)",1,4,4
"com.android.ddmlib.Client.ddmSeen()",2,3,3
"com.android.ddmlib.Client.dumpHprof()",1,3,3
"com.android.ddmlib.Client.enableAllocationTracker(boolean)",1,2,2
"com.android.ddmlib.Client.executeGarbageCollector()",1,2,2
"com.android.ddmlib.Client.forwardPacketToDebugger(JdwpPacket)",1,2,2
"com.android.ddmlib.Client.getClientData()",1,1,1
"com.android.ddmlib.Client.getDebugger()",1,1,1
"com.android.ddmlib.Client.getDebuggerListenPort()",1,1,1
"com.android.ddmlib.Client.getDevice()",1,1,1
"com.android.ddmlib.Client.getDeviceImpl()",1,1,1
"com.android.ddmlib.Client.getJdwpPacket()",4,7,12
"com.android.ddmlib.Client.isDdmAware()",4,2,4
"com.android.ddmlib.Client.isDebuggerAttached()",1,1,1
"com.android.ddmlib.Client.isHeapUpdateEnabled()",1,1,1
"com.android.ddmlib.Client.isResponseToUs(int)",2,3,3
"com.android.ddmlib.Client.isSelectedClient()",2,2,2
"com.android.ddmlib.Client.isThreadUpdateEnabled()",1,1,1
"com.android.ddmlib.Client.isValid()",1,1,1
"com.android.ddmlib.Client.kill()",1,2,2
"com.android.ddmlib.Client.listenForDebugger(int)",1,1,1
"com.android.ddmlib.Client.packetFailed(JdwpPacket)",1,3,3
"com.android.ddmlib.Client.read()",4,4,5
"com.android.ddmlib.Client.register(Selector)",1,2,2
"com.android.ddmlib.Client.removeRequestId(int)",1,2,2
"com.android.ddmlib.Client.requestAllocationDetails()",1,2,2
"com.android.ddmlib.Client.requestAllocationStatus()",1,2,2
"com.android.ddmlib.Client.requestMethodProfilingStatus()",1,2,2
"com.android.ddmlib.Client.requestNativeHeapInformation()",1,2,2
"com.android.ddmlib.Client.requestThreadStackTrace(int)",1,1,1
"com.android.ddmlib.Client.requestThreadUpdate()",1,1,1
"com.android.ddmlib.Client.sendAndConsume(JdwpPacket)",1,1,1
"com.android.ddmlib.Client.sendAndConsume(JdwpPacket,ChunkHandler)",2,4,4
"com.android.ddmlib.Client.sendHandshake()",2,2,3
"com.android.ddmlib.Client.setAsSelectedClient()",1,2,2
"com.android.ddmlib.Client.setHeapUpdateEnabled(boolean)",1,1,4
"com.android.ddmlib.Client.setThreadUpdateEnabled(boolean)",1,3,3
"com.android.ddmlib.Client.toString()",1,1,1
"com.android.ddmlib.Client.toggleMethodProfiling()",1,5,5
"com.android.ddmlib.Client.update(int)",1,1,1
"com.android.ddmlib.ClientData.ClientData(int)",1,1,1
"com.android.ddmlib.ClientData.HeapData.addHeapData(ByteBuffer)",1,3,3
"com.android.ddmlib.ClientData.HeapData.clearHeapData()",1,1,1
"com.android.ddmlib.ClientData.HeapData.getHeapSegments()",2,1,2
"com.android.ddmlib.ClientData.HeapData.getProcessedHeapData()",1,1,1
"com.android.ddmlib.ClientData.HeapData.getProcessedHeapMap()",1,1,1
"com.android.ddmlib.ClientData.HeapData.isHeapDataComplete()",1,1,1
"com.android.ddmlib.ClientData.HeapData.sealHeapData()",1,1,1
"com.android.ddmlib.ClientData.HeapData.setProcessedHeapData(byte[])",1,1,1
"com.android.ddmlib.ClientData.HeapData.setProcessedHeapMap(Map<Integer, ArrayList<HeapSegmentElement>>)",1,1,1
"com.android.ddmlib.ClientData.addFeature(String)",1,1,1
"com.android.ddmlib.ClientData.addNativeAllocation(NativeAllocationInfo)",1,1,1
"com.android.ddmlib.ClientData.addNativeLibraryMapInfo(long,long,String)",1,1,1
"com.android.ddmlib.ClientData.addThread(int,String)",1,1,1
"com.android.ddmlib.ClientData.clearNativeAllocationInfo()",1,1,1
"com.android.ddmlib.ClientData.clearThreads()",1,1,1
"com.android.ddmlib.ClientData.getAllocationStatus()",1,1,1
"com.android.ddmlib.ClientData.getAllocations()",1,1,1
"com.android.ddmlib.ClientData.getClientDescription()",1,1,1
"com.android.ddmlib.ClientData.getDebuggerConnectionStatus()",1,1,1
"com.android.ddmlib.ClientData.getHprofDumpHandler()",1,1,1
"com.android.ddmlib.ClientData.getMappedNativeLibraries()",1,1,1
"com.android.ddmlib.ClientData.getMethodProfilingHandler()",1,1,1
"com.android.ddmlib.ClientData.getMethodProfilingStatus()",1,1,1
"com.android.ddmlib.ClientData.getNativeAllocationList()",1,1,1
"com.android.ddmlib.ClientData.getNativeHeapData()",1,1,1
"com.android.ddmlib.ClientData.getPendingHprofDump()",1,1,1
"com.android.ddmlib.ClientData.getPendingMethodProfiling()",1,1,1
"com.android.ddmlib.ClientData.getPid()",1,1,1
"com.android.ddmlib.ClientData.getThread(int)",1,1,1
"com.android.ddmlib.ClientData.getThreads()",1,1,1
"com.android.ddmlib.ClientData.getTotalNativeMemory()",1,1,1
"com.android.ddmlib.ClientData.getUserId()",1,1,1
"com.android.ddmlib.ClientData.getVmHeapData()",1,1,1
"com.android.ddmlib.ClientData.getVmHeapIds()",1,1,1
"com.android.ddmlib.ClientData.getVmHeapInfo(int)",1,1,1
"com.android.ddmlib.ClientData.getVmIdentifier()",1,1,1
"com.android.ddmlib.ClientData.hasFeature(String)",1,1,1
"com.android.ddmlib.ClientData.hasPendingHprofDump()",1,1,1
"com.android.ddmlib.ClientData.isDdmAware()",1,1,1
"com.android.ddmlib.ClientData.isDdmAware(boolean)",1,1,1
"com.android.ddmlib.ClientData.isValidUserId()",1,1,1
"com.android.ddmlib.ClientData.removeThread(int)",1,1,1
"com.android.ddmlib.ClientData.setAllocationStatus(AllocationTrackingStatus)",1,1,1
"com.android.ddmlib.ClientData.setAllocations(AllocationInfo[])",1,1,1
"com.android.ddmlib.ClientData.setClientDescription(String)",1,3,4
"com.android.ddmlib.ClientData.setDebuggerConnectionStatus(DebuggerStatus)",1,1,1
"com.android.ddmlib.ClientData.setHeapInfo(int,long,long,long,long)",1,1,1
"com.android.ddmlib.ClientData.setHprofDumpHandler(IHprofDumpHandler)",1,1,1
"com.android.ddmlib.ClientData.setMethodProfilingHandler(IMethodProfilingHandler)",1,1,1
"com.android.ddmlib.ClientData.setMethodProfilingStatus(MethodProfilingStatus)",1,1,1
"com.android.ddmlib.ClientData.setPendingHprofDump(String)",1,1,1
"com.android.ddmlib.ClientData.setPendingMethodProfiling(String)",1,1,1
"com.android.ddmlib.ClientData.setTotalNativeMemory(int)",1,1,1
"com.android.ddmlib.ClientData.setUserId(int)",1,1,1
"com.android.ddmlib.ClientData.setVmIdentifier(String)",1,1,1
"com.android.ddmlib.CollectingOutputReceiver.CollectingOutputReceiver()",1,1,1
"com.android.ddmlib.CollectingOutputReceiver.CollectingOutputReceiver(CountDownLatch)",1,1,1
"com.android.ddmlib.CollectingOutputReceiver.addOutput(byte[],int,int)",1,2,3
"com.android.ddmlib.CollectingOutputReceiver.cancel()",1,1,1
"com.android.ddmlib.CollectingOutputReceiver.flush()",1,2,2
"com.android.ddmlib.CollectingOutputReceiver.getOutput()",1,1,1
"com.android.ddmlib.CollectingOutputReceiver.isCancelled()",1,1,1
"com.android.ddmlib.DdmConstants.currentPlatform()",4,3,4
"com.android.ddmlib.DdmPreferences.DdmPreferences()",1,1,1
"com.android.ddmlib.DdmPreferences.getAdbHostValue()",1,1,1
"com.android.ddmlib.DdmPreferences.getDebugPortBase()",1,1,1
"com.android.ddmlib.DdmPreferences.getInitialHeapUpdate()",1,1,1
"com.android.ddmlib.DdmPreferences.getInitialThreadUpdate()",1,1,1
"com.android.ddmlib.DdmPreferences.getLogLevel()",1,1,1
"com.android.ddmlib.DdmPreferences.getProfilerBufferSizeMb()",1,1,1
"com.android.ddmlib.DdmPreferences.getSelectedDebugPort()",1,1,1
"com.android.ddmlib.DdmPreferences.getTimeOut()",1,1,1
"com.android.ddmlib.DdmPreferences.getUseAdbHost()",1,1,1
"com.android.ddmlib.DdmPreferences.setAdbHostValue(String)",1,1,1
"com.android.ddmlib.DdmPreferences.setDebugPortBase(int)",1,1,1
"com.android.ddmlib.DdmPreferences.setInitialHeapUpdate(boolean)",1,1,1
"com.android.ddmlib.DdmPreferences.setInitialThreadUpdate(boolean)",1,1,1
"com.android.ddmlib.DdmPreferences.setLogLevel(String)",1,1,1
"com.android.ddmlib.DdmPreferences.setProfilerBufferSizeMb(int)",1,1,1
"com.android.ddmlib.DdmPreferences.setSelectedDebugPort(int)",1,2,2
"com.android.ddmlib.DdmPreferences.setTimeOut(int)",1,1,1
"com.android.ddmlib.DdmPreferences.setUseAdbHost(boolean)",1,1,1
"com.android.ddmlib.DebugPortManager.getProvider()",1,1,1
"com.android.ddmlib.DebugPortManager.setProvider(IDebugPortProvider)",1,1,1
"com.android.ddmlib.Debugger.Debugger(Client,int)",1,1,1
"com.android.ddmlib.Debugger.accept()",1,1,1
"com.android.ddmlib.Debugger.accept(ServerSocketChannel)",3,3,3
"com.android.ddmlib.Debugger.close()",1,3,3
"com.android.ddmlib.Debugger.closeData()",1,3,3
"com.android.ddmlib.Debugger.forwardPacketToClient(JdwpPacket)",1,1,1
"com.android.ddmlib.Debugger.getClient()",1,1,1
"com.android.ddmlib.Debugger.getJdwpPacket()",4,5,8
"com.android.ddmlib.Debugger.isDebuggerAttached()",1,1,1
"com.android.ddmlib.Debugger.read()",4,2,4
"com.android.ddmlib.Debugger.registerListener(Selector)",1,1,1
"com.android.ddmlib.Debugger.sendAndConsume(JdwpPacket)",1,2,2
"com.android.ddmlib.Debugger.sendHandshake()",4,2,4
"com.android.ddmlib.Debugger.toString()",1,1,2
"com.android.ddmlib.Device.BatteryReceiver.getBatteryLevel()",2,1,3
"com.android.ddmlib.Device.BatteryReceiver.isCancelled()",1,1,1
"com.android.ddmlib.Device.BatteryReceiver.processNewLines(String[])",1,6,6
"com.android.ddmlib.Device.Device(DeviceMonitor,String,DeviceState)",1,1,1
"com.android.ddmlib.Device.InstallReceiver.InstallReceiver()",1,1,1
"com.android.ddmlib.Device.InstallReceiver.getErrorMessage()",1,1,1
"com.android.ddmlib.Device.InstallReceiver.isCancelled()",1,1,1
"com.android.ddmlib.Device.InstallReceiver.processNewLines(String[])",1,5,5
"com.android.ddmlib.Device.addClient(Client)",1,1,1
"com.android.ddmlib.Device.addProperty(String,String)",1,1,1
"com.android.ddmlib.Device.arePropertiesSet()",1,1,1
"com.android.ddmlib.Device.cleanupStringForDisplay(String)",2,3,4
"com.android.ddmlib.Device.clearClientList()",1,1,1
"com.android.ddmlib.Device.constructName()",3,5,5
"com.android.ddmlib.Device.createForward(int,String,DeviceUnixSocketNamespace)",1,1,1
"com.android.ddmlib.Device.createForward(int,int)",1,1,1
"com.android.ddmlib.Device.executeShellCommand(String,IShellOutputReceiver)",1,1,1
"com.android.ddmlib.Device.executeShellCommand(String,IShellOutputReceiver,int)",1,1,1
"com.android.ddmlib.Device.getAvdName()",1,1,1
"com.android.ddmlib.Device.getBatteryLevel()",1,1,1
"com.android.ddmlib.Device.getBatteryLevel(long)",2,2,3
"com.android.ddmlib.Device.getClient(String)",3,2,3
"com.android.ddmlib.Device.getClientList()",1,1,1
"com.android.ddmlib.Device.getClientMonitoringSocket()",1,1,1
"com.android.ddmlib.Device.getClientName(int)",3,3,3
"com.android.ddmlib.Device.getClients()",1,1,1
"com.android.ddmlib.Device.getFileListingService()",1,1,1
"com.android.ddmlib.Device.getFileName(String)",1,1,1
"com.android.ddmlib.Device.getMonitor()",1,1,1
"com.android.ddmlib.Device.getMountPoint(String)",1,1,1
"com.android.ddmlib.Device.getName()",1,2,2
"com.android.ddmlib.Device.getProperties()",1,1,1
"com.android.ddmlib.Device.getProperty(String)",1,1,1
"com.android.ddmlib.Device.getPropertyCacheOrSync(String)",2,2,2
"com.android.ddmlib.Device.getPropertyCount()",1,1,1
"com.android.ddmlib.Device.getPropertySync(String)",2,1,2
"com.android.ddmlib.Device.getScreenshot()",1,1,1
"com.android.ddmlib.Device.getSerialNumber()",1,1,1
"com.android.ddmlib.Device.getState()",1,1,1
"com.android.ddmlib.Device.getSyncService()",2,1,2
"com.android.ddmlib.Device.hasClient(int)",3,2,3
"com.android.ddmlib.Device.hasClients()",1,1,1
"com.android.ddmlib.Device.installPackage(String,boolean,String...)",1,1,5
"com.android.ddmlib.Device.installRemotePackage(String,boolean,String...)",1,3,7
"com.android.ddmlib.Device.isBootLoader()",1,1,1
"com.android.ddmlib.Device.isEmulator()",1,1,1
"com.android.ddmlib.Device.isOffline()",1,1,1
"com.android.ddmlib.Device.isOnline()",1,1,1
"com.android.ddmlib.Device.pullFile(String,String)",2,6,6
"com.android.ddmlib.Device.pushFile(String,String)",2,6,6
"com.android.ddmlib.Device.reboot(String)",1,1,1
"com.android.ddmlib.Device.removeClient(Client,boolean)",1,2,2
"com.android.ddmlib.Device.removeForward(int,String,DeviceUnixSocketNamespace)",1,1,1
"com.android.ddmlib.Device.removeForward(int,int)",1,1,1
"com.android.ddmlib.Device.removeRemotePackage(String)",1,1,5
"com.android.ddmlib.Device.runEventLogService(LogReceiver)",1,1,1
"com.android.ddmlib.Device.runLogService(String,LogReceiver)",1,1,1
"com.android.ddmlib.Device.setAvdName(String)",2,1,2
"com.android.ddmlib.Device.setClientMonitoringSocket(SocketChannel)",1,1,1
"com.android.ddmlib.Device.setMountingPoint(String,String)",1,1,1
"com.android.ddmlib.Device.setState(DeviceState)",1,1,1
"com.android.ddmlib.Device.syncPackageToDevice(String)",2,6,6
"com.android.ddmlib.Device.toString()",1,1,1
"com.android.ddmlib.Device.uninstallPackage(String)",1,1,5
"com.android.ddmlib.Device.update(Client,int)",1,1,1
"com.android.ddmlib.Device.update(int)",1,1,2
"com.android.ddmlib.DeviceMonitor.DeviceMonitor(AndroidDebugBridge)",1,1,1
"com.android.ddmlib.DeviceMonitor.addClientToDropAndReopen(Client,int)",1,2,2
"com.android.ddmlib.DeviceMonitor.addPortToAvailableList(int)",5,5,5
"com.android.ddmlib.DeviceMonitor.createClient(Device,int,SocketChannel,int,MonitorThread)",1,5,5
"com.android.ddmlib.DeviceMonitor.deviceClientMonitorLoop()",4,12,16
"com.android.ddmlib.DeviceMonitor.deviceMonitorLoop()",1,11,13
"com.android.ddmlib.DeviceMonitor.getConnectionAttemptCount()",1,1,1
"com.android.ddmlib.DeviceMonitor.getDevices()",1,1,1
"com.android.ddmlib.DeviceMonitor.getNextDebuggerPort()",2,3,3
"com.android.ddmlib.DeviceMonitor.getRestartAttemptCount()",1,1,1
"com.android.ddmlib.DeviceMonitor.getServer()",1,1,1
"com.android.ddmlib.DeviceMonitor.handleExpectioninMonitorLoop(Exception)",1,5,6
"com.android.ddmlib.DeviceMonitor.hasInitialDeviceList()",1,1,1
"com.android.ddmlib.DeviceMonitor.isMonitoring()",1,1,1
"com.android.ddmlib.DeviceMonitor.openAdbConnection()",1,1,2
"com.android.ddmlib.DeviceMonitor.openClient(Device,int,int,MonitorThread)",1,5,5
"com.android.ddmlib.DeviceMonitor.processIncomingDeviceData(int)",1,4,4
"com.android.ddmlib.DeviceMonitor.processIncomingJdwpData(Device,SocketChannel,int)",4,10,11
"com.android.ddmlib.DeviceMonitor.queryNewDeviceForInfo(Device)",1,7,7
"com.android.ddmlib.DeviceMonitor.queryNewDeviceForMountingPoint(Device,String)",1,3,3
"com.android.ddmlib.DeviceMonitor.read(SocketChannel,byte[])",3,2,4
"com.android.ddmlib.DeviceMonitor.readLength(SocketChannel,byte[])",2,2,3
"com.android.ddmlib.DeviceMonitor.removeDevice(Device)",1,2,3
"com.android.ddmlib.DeviceMonitor.sendDeviceListMonitoringRequest()",1,3,3
"com.android.ddmlib.DeviceMonitor.sendDeviceMonitoringRequest(SocketChannel,Device)",1,4,4
"com.android.ddmlib.DeviceMonitor.start()",1,1,1
"com.android.ddmlib.DeviceMonitor.startDeviceMonitorThread()",1,1,1
"com.android.ddmlib.DeviceMonitor.startMonitoringDevice(Device)",3,7,10
"com.android.ddmlib.DeviceMonitor.stop()",1,3,4
"com.android.ddmlib.DeviceMonitor.updateDevices(ArrayList<Device>)",4,15,15
"com.android.ddmlib.DeviceMonitor.waitABit()",1,1,2
"com.android.ddmlib.EmulatorConsole.EmulatorConsole(int)",1,1,1
"com.android.ddmlib.EmulatorConsole.GsmMode.GsmMode(String)",1,1,2
"com.android.ddmlib.EmulatorConsole.GsmMode.GsmMode(String[])",1,1,1
"com.android.ddmlib.EmulatorConsole.GsmMode.getEnum(String)",4,3,4
"com.android.ddmlib.EmulatorConsole.GsmMode.getTag()",2,1,2
"com.android.ddmlib.EmulatorConsole.RemoveConsole(int)",1,1,1
"com.android.ddmlib.EmulatorConsole.call(String)",1,1,1
"com.android.ddmlib.EmulatorConsole.cancelCall(String)",1,1,1
"com.android.ddmlib.EmulatorConsole.endsWithOK(int)",2,1,5
"com.android.ddmlib.EmulatorConsole.getAvdName()",4,4,5
"com.android.ddmlib.EmulatorConsole.getConsole(IDevice)",2,5,6
"com.android.ddmlib.EmulatorConsole.getEmulatorPort(String)",3,2,4
"com.android.ddmlib.EmulatorConsole.getGsmStatus()",6,6,6
"com.android.ddmlib.EmulatorConsole.getLatencyIndex(String)",3,1,4
"com.android.ddmlib.EmulatorConsole.getNetworkStatus()",6,6,6
"com.android.ddmlib.EmulatorConsole.getSpeedIndex(String)",3,1,4
"com.android.ddmlib.EmulatorConsole.isValid(String[])",2,2,3
"com.android.ddmlib.EmulatorConsole.kill()",1,2,2
"com.android.ddmlib.EmulatorConsole.lastLineIsKO(int)",6,1,9
"com.android.ddmlib.EmulatorConsole.ping()",2,2,2
"com.android.ddmlib.EmulatorConsole.processCommand(String)",4,4,5
"com.android.ddmlib.EmulatorConsole.readLines()",5,7,11
"com.android.ddmlib.EmulatorConsole.sendCommand(String)",1,2,4
"com.android.ddmlib.EmulatorConsole.sendLocation(double,double,double)",1,1,1
"com.android.ddmlib.EmulatorConsole.sendSms(String,String)",1,1,1
"com.android.ddmlib.EmulatorConsole.setGsmDataMode(GsmMode)",2,1,2
"com.android.ddmlib.EmulatorConsole.setGsmVoiceMode(GsmMode)",2,1,2
"com.android.ddmlib.EmulatorConsole.setNetworkLatency(int)",1,1,1
"com.android.ddmlib.EmulatorConsole.setNetworkSpeed(int)",1,1,1
"com.android.ddmlib.EmulatorConsole.start()",1,1,3
"com.android.ddmlib.FileListingService.FileEntry.FileEntry(FileEntry,String,int,boolean)",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.addChild(FileEntry)",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.checkAppPackageStatus()",1,6,6
"com.android.ddmlib.FileListingService.FileEntry.escape(String)",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.fillPathBuilder(StringBuilder,boolean)",2,3,4
"com.android.ddmlib.FileListingService.FileEntry.fillPathSegments(ArrayList<String>)",2,2,3
"com.android.ddmlib.FileListingService.FileEntry.findChild(String)",3,2,3
"com.android.ddmlib.FileListingService.FileEntry.getCachedChildren()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getDate()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getFullEscapedPath()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getFullPath()",2,1,2
"com.android.ddmlib.FileListingService.FileEntry.getGroup()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getInfo()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getName()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getOwner()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getParent()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getPathSegments()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getPermissions()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getSize()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getSizeValue()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getTime()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.getType()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.isAppFileName()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.isApplicationPackage()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.isDirectory()",1,1,2
"com.android.ddmlib.FileListingService.FileEntry.isRoot()",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.needFetch()",3,1,3
"com.android.ddmlib.FileListingService.FileEntry.setChildren(ArrayList<FileEntry>)",1,1,1
"com.android.ddmlib.FileListingService.FileEntry.setType(int)",1,1,1
"com.android.ddmlib.FileListingService.FileListingService(Device)",1,1,1
"com.android.ddmlib.FileListingService.LsReceiver.LsReceiver(FileEntry,ArrayList<FileEntry>,ArrayList<String>)",1,1,1
"com.android.ddmlib.FileListingService.LsReceiver.finishLinks(IDevice,ArrayList<FileEntry>)",3,4,6
"com.android.ddmlib.FileListingService.LsReceiver.getExistingEntry(String)",4,3,4
"com.android.ddmlib.FileListingService.LsReceiver.isCancelled()",1,1,1
"com.android.ddmlib.FileListingService.LsReceiver.processNewLines(String[])",5,6,17
"com.android.ddmlib.FileListingService.doLs(FileEntry)",1,1,2
"com.android.ddmlib.FileListingService.doLsAndThrow(FileEntry)",1,1,2
"com.android.ddmlib.FileListingService.getChildren(FileEntry,boolean,IListingReceiver)",3,13,14
"com.android.ddmlib.FileListingService.getChildrenSync(FileEntry)",1,1,1
"com.android.ddmlib.FileListingService.getRoot()",2,1,3
"com.android.ddmlib.GetPropReceiver.GetPropReceiver(Device)",1,1,1
"com.android.ddmlib.GetPropReceiver.done()",1,1,1
"com.android.ddmlib.GetPropReceiver.isCancelled()",1,1,1
"com.android.ddmlib.GetPropReceiver.processNewLines(String[])",3,5,6
"com.android.ddmlib.HandleAppName.HandleAppName()",1,1,1
"com.android.ddmlib.HandleAppName.clientDisconnected(Client)",1,1,1
"com.android.ddmlib.HandleAppName.clientReady(Client)",1,1,1
"com.android.ddmlib.HandleAppName.handleAPNM(Client,ByteBuffer)",1,5,5
"com.android.ddmlib.HandleAppName.handleChunk(Client,int,ByteBuffer,boolean,int)",1,2,2
"com.android.ddmlib.HandleAppName.register(MonitorThread)",1,1,1
"com.android.ddmlib.HandleExit.HandleExit()",1,1,1
"com.android.ddmlib.HandleExit.clientDisconnected(Client)",1,1,1
"com.android.ddmlib.HandleExit.clientReady(Client)",1,1,1
"com.android.ddmlib.HandleExit.handleChunk(Client,int,ByteBuffer,boolean,int)",1,1,1
"com.android.ddmlib.HandleExit.register(MonitorThread)",1,1,1
"com.android.ddmlib.HandleExit.sendEXIT(Client,int)",1,1,1
"com.android.ddmlib.HandleHeap.HandleHeap()",1,1,1
"com.android.ddmlib.HandleHeap.clientDisconnected(Client)",1,1,1
"com.android.ddmlib.HandleHeap.clientReady(Client)",1,2,2
"com.android.ddmlib.HandleHeap.descriptorToDot(String)",1,12,14
"com.android.ddmlib.HandleHeap.dumpRecords(AllocationInfo[])",1,4,4
"com.android.ddmlib.HandleHeap.handleChunk(Client,int,ByteBuffer,boolean,int)",1,9,9
"com.android.ddmlib.HandleHeap.handleHPDS(Client,ByteBuffer)",1,2,2
"com.android.ddmlib.HandleHeap.handleHPDU(Client,ByteBuffer)",1,3,3
"com.android.ddmlib.HandleHeap.handleHPEN(Client,ByteBuffer)",1,1,1
"com.android.ddmlib.HandleHeap.handleHPIF(Client,ByteBuffer)",1,3,3
"com.android.ddmlib.HandleHeap.handleHPSG(Client,ByteBuffer)",1,1,1
"com.android.ddmlib.HandleHeap.handleHPST(Client,ByteBuffer)",1,1,1
"com.android.ddmlib.HandleHeap.handleREAL(Client,ByteBuffer)",1,5,5
"com.android.ddmlib.HandleHeap.handleREAQ(Client,ByteBuffer)",1,1,2
"com.android.ddmlib.HandleHeap.readStringTable(ByteBuffer,String[])",1,2,2
"com.android.ddmlib.HandleHeap.register(MonitorThread)",1,1,1
"com.android.ddmlib.HandleHeap.sendHPDS(Client)",1,1,1
"com.android.ddmlib.HandleHeap.sendHPDU(Client,String)",1,1,1
"com.android.ddmlib.HandleHeap.sendHPGC(Client)",1,1,1
"com.android.ddmlib.HandleHeap.sendHPIF(Client,int)",1,1,1
"com.android.ddmlib.HandleHeap.sendHPSG(Client,int,int)",1,1,1
"com.android.ddmlib.HandleHeap.sendREAE(Client,boolean)",1,1,2
"com.android.ddmlib.HandleHeap.sendREAL(Client)",1,1,1
"com.android.ddmlib.HandleHeap.sendREAQ(Client)",1,1,1
"com.android.ddmlib.HandleHello.HandleHello()",1,1,1
"com.android.ddmlib.HandleHello.clientDisconnected(Client)",1,1,1
"com.android.ddmlib.HandleHello.clientReady(Client)",1,1,1
"com.android.ddmlib.HandleHello.handleChunk(Client,int,ByteBuffer,boolean,int)",1,3,3
"com.android.ddmlib.HandleHello.handleFEAT(Client,ByteBuffer)",1,2,2
"com.android.ddmlib.HandleHello.handleHELO(Client,ByteBuffer)",1,6,6
"com.android.ddmlib.HandleHello.register(MonitorThread)",1,1,1
"com.android.ddmlib.HandleHello.sendFEAT(Client)",1,1,1
"com.android.ddmlib.HandleHello.sendHELO(Client,int)",1,1,1
"com.android.ddmlib.HandleHello.sendHelloCommands(Client,int)",1,1,1
"com.android.ddmlib.HandleNativeHeap.HandleNativeHeap()",1,1,1
"com.android.ddmlib.HandleNativeHeap.clientDisconnected(Client)",1,1,1
"com.android.ddmlib.HandleNativeHeap.clientReady(Client)",1,1,1
"com.android.ddmlib.HandleNativeHeap.handleChunk(Client,int,ByteBuffer,boolean,int)",1,5,5
"com.android.ddmlib.HandleNativeHeap.handleNHGT(Client,ByteBuffer)",5,4,6
"com.android.ddmlib.HandleNativeHeap.handleNHSG(Client,ByteBuffer)",2,2,3
"com.android.ddmlib.HandleNativeHeap.parseMaps(ClientData,byte[])",4,9,11
"com.android.ddmlib.HandleNativeHeap.register(MonitorThread)",1,1,1
"com.android.ddmlib.HandleNativeHeap.sendNHGT(Client)",1,1,1
"com.android.ddmlib.HandleProfiling.HandleProfiling()",1,1,1
"com.android.ddmlib.HandleProfiling.clientDisconnected(Client)",1,1,1
"com.android.ddmlib.HandleProfiling.clientReady(Client)",1,1,1
"com.android.ddmlib.HandleProfiling.handleChunk(Client,int,ByteBuffer,boolean,int)",1,5,5
"com.android.ddmlib.HandleProfiling.handleFAIL(Client,ByteBuffer)",1,6,6
"com.android.ddmlib.HandleProfiling.handleMPRE(Client,ByteBuffer)",1,3,3
"com.android.ddmlib.HandleProfiling.handleMPRQ(Client,ByteBuffer)",1,2,2
"com.android.ddmlib.HandleProfiling.handleMPSE(Client,ByteBuffer)",1,2,2
"com.android.ddmlib.HandleProfiling.register(MonitorThread)",1,1,1
"com.android.ddmlib.HandleProfiling.sendMPRE(Client)",1,1,1
"com.android.ddmlib.HandleProfiling.sendMPRQ(Client)",1,1,1
"com.android.ddmlib.HandleProfiling.sendMPRS(Client,String,int,int)",1,1,1
"com.android.ddmlib.HandleProfiling.sendMPSE(Client)",1,1,1
"com.android.ddmlib.HandleProfiling.sendMPSS(Client,int,int)",1,1,1
"com.android.ddmlib.HandleTest.HandleTest()",1,1,1
"com.android.ddmlib.HandleTest.clientDisconnected(Client)",1,1,1
"com.android.ddmlib.HandleTest.clientReady(Client)",1,1,1
"com.android.ddmlib.HandleTest.handleChunk(Client,int,ByteBuffer,boolean,int)",1,2,2
"com.android.ddmlib.HandleTest.handleTEST(Client,ByteBuffer)",1,1,1
"com.android.ddmlib.HandleTest.register(MonitorThread)",1,1,1
"com.android.ddmlib.HandleThread.HandleThread()",1,1,1
"com.android.ddmlib.HandleThread.clientDisconnected(Client)",1,1,1
"com.android.ddmlib.HandleThread.clientReady(Client)",1,2,2
"com.android.ddmlib.HandleThread.handleChunk(Client,int,ByteBuffer,boolean,int)",1,6,6
"com.android.ddmlib.HandleThread.handleSTKL(Client,ByteBuffer)",1,4,4
"com.android.ddmlib.HandleThread.handleTHCR(Client,ByteBuffer)",1,1,1
"com.android.ddmlib.HandleThread.handleTHDE(Client,ByteBuffer)",1,1,1
"com.android.ddmlib.HandleThread.handleTHNM(Client,ByteBuffer)",1,2,2
"com.android.ddmlib.HandleThread.handleTHST(Client,ByteBuffer)",1,6,6
"com.android.ddmlib.HandleThread.register(MonitorThread)",1,1,1
"com.android.ddmlib.HandleThread.requestThreadStackCallRefresh(Client,int)",3,5,5
"com.android.ddmlib.HandleThread.requestThreadUpdate(Client)",3,5,5
"com.android.ddmlib.HandleThread.sendSTKL(Client,int)",2,2,2
"com.android.ddmlib.HandleThread.sendTHEN(Client,boolean)",1,2,2
"com.android.ddmlib.HandleThread.sendTHST(Client)",1,1,1
"com.android.ddmlib.HandleWait.HandleWait()",1,1,1
"com.android.ddmlib.HandleWait.clientDisconnected(Client)",1,1,1
"com.android.ddmlib.HandleWait.clientReady(Client)",1,1,1
"com.android.ddmlib.HandleWait.handleChunk(Client,int,ByteBuffer,boolean,int)",1,2,2
"com.android.ddmlib.HandleWait.handleWAIT(Client,ByteBuffer)",1,1,1
"com.android.ddmlib.HandleWait.register(MonitorThread)",1,1,1
"com.android.ddmlib.HeapSegment.HeapSegment(ByteBuffer)",1,1,1
"com.android.ddmlib.HeapSegment.HeapSegmentElement.HeapSegmentElement()",1,1,1
"com.android.ddmlib.HeapSegment.HeapSegmentElement.HeapSegmentElement(HeapSegment)",1,1,1
"com.android.ddmlib.HeapSegment.HeapSegmentElement.compareTo(HeapSegmentElement)",2,1,3
"com.android.ddmlib.HeapSegment.HeapSegmentElement.getKind()",1,1,1
"com.android.ddmlib.HeapSegment.HeapSegmentElement.getLength()",1,1,1
"com.android.ddmlib.HeapSegment.HeapSegmentElement.getSolidity()",1,1,1
"com.android.ddmlib.HeapSegment.HeapSegmentElement.set(HeapSegment)",3,3,3
"com.android.ddmlib.HeapSegment.HeapSegmentElement.setKind(int)",1,1,1
"com.android.ddmlib.HeapSegment.HeapSegmentElement.setLength(int)",1,1,1
"com.android.ddmlib.HeapSegment.HeapSegmentElement.setSolidity(int)",1,1,1
"com.android.ddmlib.HeapSegment.append(HeapSegment)",2,3,3
"com.android.ddmlib.HeapSegment.canAppend(HeapSegment)",1,5,5
"com.android.ddmlib.HeapSegment.compareTo(HeapSegment)",8,3,14
"com.android.ddmlib.HeapSegment.equals(Object)",2,2,2
"com.android.ddmlib.HeapSegment.getEndAddress()",1,1,1
"com.android.ddmlib.HeapSegment.getLength()",1,1,1
"com.android.ddmlib.HeapSegment.getNextElement(HeapSegmentElement)",2,2,4
"com.android.ddmlib.HeapSegment.getStartAddress()",1,1,1
"com.android.ddmlib.HeapSegment.hashCode()",1,1,1
"com.android.ddmlib.HeapSegment.isValid()",1,1,1
"com.android.ddmlib.HeapSegment.rewindElements()",1,2,2
"com.android.ddmlib.HeapSegment.toString()",1,1,1
"com.android.ddmlib.IDevice.DeviceState.DeviceState(String)",1,1,1
"com.android.ddmlib.IDevice.DeviceState.getState(String)",3,2,3
"com.android.ddmlib.IDevice.DeviceUnixSocketNamespace.DeviceUnixSocketNamespace(String)",1,1,1
"com.android.ddmlib.IDevice.DeviceUnixSocketNamespace.getType()",1,1,1
"com.android.ddmlib.InstallException.InstallException(String,Throwable)",1,1,1
"com.android.ddmlib.InstallException.InstallException(Throwable)",1,1,1
"com.android.ddmlib.InstallException.wasCanceled()",1,2,2
"com.android.ddmlib.JdwpPacket.JdwpPacket(ByteBuffer)",1,1,1
"com.android.ddmlib.JdwpPacket.consume()",1,1,1
"com.android.ddmlib.JdwpPacket.consumeHandshake(ByteBuffer)",1,1,1
"com.android.ddmlib.JdwpPacket.findHandshake(ByteBuffer)",4,2,4
"com.android.ddmlib.JdwpPacket.findPacket(ByteBuffer)",4,1,5
"com.android.ddmlib.JdwpPacket.finishPacket(int)",1,1,1
"com.android.ddmlib.JdwpPacket.getId()",1,1,1
"com.android.ddmlib.JdwpPacket.getLength()",1,1,1
"com.android.ddmlib.JdwpPacket.getNextSerial()",1,1,1
"com.android.ddmlib.JdwpPacket.getPayload()",1,2,2
"com.android.ddmlib.JdwpPacket.isDdmPacket()",1,1,3
"com.android.ddmlib.JdwpPacket.isEmpty()",1,1,1
"com.android.ddmlib.JdwpPacket.isError()",1,2,2
"com.android.ddmlib.JdwpPacket.isReply()",1,1,1
"com.android.ddmlib.JdwpPacket.movePacket(ByteBuffer)",1,1,1
"com.android.ddmlib.JdwpPacket.putHandshake(ByteBuffer)",1,1,1
"com.android.ddmlib.JdwpPacket.writeAndConsume(SocketChannel)",1,2,2
"com.android.ddmlib.Log.Log()",1,1,1
"com.android.ddmlib.Log.LogLevel.LogLevel(int,String,char)",1,1,1
"com.android.ddmlib.Log.LogLevel.getByLetter(char)",3,1,3
"com.android.ddmlib.Log.LogLevel.getByLetterString(String)",2,2,2
"com.android.ddmlib.Log.LogLevel.getByString(String)",3,2,3
"com.android.ddmlib.Log.LogLevel.getPriority()",1,1,1
"com.android.ddmlib.Log.LogLevel.getPriorityLetter()",1,1,1
"com.android.ddmlib.Log.LogLevel.getStringValue()",1,1,1
"com.android.ddmlib.Log.d(String,String)",1,1,1
"com.android.ddmlib.Log.e(String,String)",1,1,1
"com.android.ddmlib.Log.e(String,Throwable)",1,2,2
"com.android.ddmlib.Log.getLogFormatString(LogLevel,String,String)",1,1,1
"com.android.ddmlib.Log.hexDump(String,LogLevel,byte[],int,int)",1,3,8
"com.android.ddmlib.Log.hexDump(byte[])",1,1,1
"com.android.ddmlib.Log.i(String,String)",1,1,1
"com.android.ddmlib.Log.logAndDisplay(LogLevel,String,String)",1,2,2
"com.android.ddmlib.Log.printLog(LogLevel,String,String)",1,1,1
"com.android.ddmlib.Log.println(LogLevel,String,String)",1,3,3
"com.android.ddmlib.Log.setLevel(LogLevel)",1,1,1
"com.android.ddmlib.Log.setLogOutput(ILogOutput)",1,1,1
"com.android.ddmlib.Log.v(String,String)",1,1,1
"com.android.ddmlib.Log.w(String,String)",1,1,1
"com.android.ddmlib.MonitorThread.MonitorThread()",1,1,1
"com.android.ddmlib.MonitorThread.acceptNewDebugger(Debugger,ServerSocketChannel)",2,5,5
"com.android.ddmlib.MonitorThread.addClient(Client)",2,3,4
"com.android.ddmlib.MonitorThread.broadcast(int,Client)",3,4,6
"com.android.ddmlib.MonitorThread.callHandler(Client,JdwpPacket,ChunkHandler)",1,4,4
"com.android.ddmlib.MonitorThread.createInstance()",1,1,1
"com.android.ddmlib.MonitorThread.displayDebugSelectedBindError(int)",1,1,1
"com.android.ddmlib.MonitorThread.dropClient(Client,boolean)",3,1,3
"com.android.ddmlib.MonitorThread.dropClients(Collection<? extends Client>,boolean)",1,2,2
"com.android.ddmlib.MonitorThread.getClients()",1,1,1
"com.android.ddmlib.MonitorThread.getDebugSelectedPort()",1,1,1
"com.android.ddmlib.MonitorThread.getInstance()",1,1,1
"com.android.ddmlib.MonitorThread.getRetryOnBadHandshake()",1,1,1
"com.android.ddmlib.MonitorThread.getSelectedClient()",1,1,1
"com.android.ddmlib.MonitorThread.processClientActivity(SelectionKey)",2,13,14
"com.android.ddmlib.MonitorThread.processDebugSelectedActivity(SelectionKey)",3,4,6
"com.android.ddmlib.MonitorThread.processDebuggerActivity(SelectionKey)",1,4,5
"com.android.ddmlib.MonitorThread.processDebuggerData(SelectionKey)",1,4,4
"com.android.ddmlib.MonitorThread.quit()",1,5,5
"com.android.ddmlib.MonitorThread.registerChunkHandler(int,ChunkHandler)",2,2,3
"com.android.ddmlib.MonitorThread.reopenDebugSelectedPort()",1,4,4
"com.android.ddmlib.MonitorThread.run()",3,13,18
"com.android.ddmlib.MonitorThread.setDebugSelectedPort(int)",3,2,4
"com.android.ddmlib.MonitorThread.setSelectedClient(Client)",2,4,5
"com.android.ddmlib.MonitorThread.wakeup()",1,1,1
"com.android.ddmlib.MultiLineReceiver.addOutput(byte[],int,int)",5,7,9
"com.android.ddmlib.MultiLineReceiver.done()",1,1,1
"com.android.ddmlib.MultiLineReceiver.flush()",1,2,2
"com.android.ddmlib.MultiLineReceiver.setTrimLine(boolean)",1,1,1
"com.android.ddmlib.NativeAllocationInfo.NativeAllocationInfo(int,int)",1,1,1
"com.android.ddmlib.NativeAllocationInfo.addStackCallAddress(long)",1,1,1
"com.android.ddmlib.NativeAllocationInfo.equals(Object)",6,5,8
"com.android.ddmlib.NativeAllocationInfo.getAllocationCount()",1,1,1
"com.android.ddmlib.NativeAllocationInfo.getRelevantStackCallInfo()",5,5,7
"com.android.ddmlib.NativeAllocationInfo.getResolvedStackCall()",2,1,2
"com.android.ddmlib.NativeAllocationInfo.getSize()",1,1,1
"com.android.ddmlib.NativeAllocationInfo.getStackCallAddresses()",1,1,1
"com.android.ddmlib.NativeAllocationInfo.hashCode()",1,1,2
"com.android.ddmlib.NativeAllocationInfo.isRelevantLibrary(String)",3,2,3
"com.android.ddmlib.NativeAllocationInfo.isRelevantMethod(String)",3,2,3
"com.android.ddmlib.NativeAllocationInfo.isStackCallResolved()",1,1,1
"com.android.ddmlib.NativeAllocationInfo.isZygoteChild()",1,1,1
"com.android.ddmlib.NativeAllocationInfo.setResolvedStackCall(List<NativeStackCallInfo>)",1,2,2
"com.android.ddmlib.NativeAllocationInfo.toString()",4,4,5
"com.android.ddmlib.NativeLibraryMapInfo.NativeLibraryMapInfo(long,long,String)",1,1,1
"com.android.ddmlib.NativeLibraryMapInfo.getEndAddress()",1,1,1
"com.android.ddmlib.NativeLibraryMapInfo.getLibraryName()",1,1,1
"com.android.ddmlib.NativeLibraryMapInfo.getStartAddress()",1,1,1
"com.android.ddmlib.NativeLibraryMapInfo.isWithinLibrary(long)",1,1,2
"com.android.ddmlib.NativeStackCallInfo.NativeStackCallInfo(long,String,String,String)",1,2,3
"com.android.ddmlib.NativeStackCallInfo.getAddress()",1,1,1
"com.android.ddmlib.NativeStackCallInfo.getLibraryName()",1,1,1
"com.android.ddmlib.NativeStackCallInfo.getLineNumber()",1,1,1
"com.android.ddmlib.NativeStackCallInfo.getMethodName()",1,1,1
"com.android.ddmlib.NativeStackCallInfo.getSourceFile()",1,1,1
"com.android.ddmlib.NativeStackCallInfo.toString()",1,1,1
"com.android.ddmlib.NullOutputReceiver.addOutput(byte[],int,int)",1,1,1
"com.android.ddmlib.NullOutputReceiver.flush()",1,1,1
"com.android.ddmlib.NullOutputReceiver.getReceiver()",1,1,1
"com.android.ddmlib.NullOutputReceiver.isCancelled()",1,1,1
"com.android.ddmlib.RawImage.getARGB(int)",3,2,4
"com.android.ddmlib.RawImage.getBlueMask()",1,1,1
"com.android.ddmlib.RawImage.getGreenMask()",1,1,1
"com.android.ddmlib.RawImage.getHeaderSize(int)",3,2,3
"com.android.ddmlib.RawImage.getMask(int)",1,1,1
"com.android.ddmlib.RawImage.getMask(int,int)",2,2,2
"com.android.ddmlib.RawImage.getRedMask()",1,1,1
"com.android.ddmlib.RawImage.getRotated()",1,3,3
"com.android.ddmlib.RawImage.readHeader(int,ByteBuffer)",3,3,3
"com.android.ddmlib.SyncException.SyncError.SyncError(String)",1,1,1
"com.android.ddmlib.SyncException.SyncError.getMessage()",1,1,1
"com.android.ddmlib.SyncException.SyncException(SyncError)",1,1,1
"com.android.ddmlib.SyncException.SyncException(SyncError,String)",1,1,1
"com.android.ddmlib.SyncException.SyncException(SyncError,Throwable)",1,1,1
"com.android.ddmlib.SyncException.getErrorCode()",1,1,1
"com.android.ddmlib.SyncException.wasCanceled()",1,1,1
"com.android.ddmlib.SyncService.NullSyncProgresMonitor.advance(int)",1,1,1
"com.android.ddmlib.SyncService.NullSyncProgresMonitor.isCanceled()",1,1,1
"com.android.ddmlib.SyncService.NullSyncProgresMonitor.start(int)",1,1,1
"com.android.ddmlib.SyncService.NullSyncProgresMonitor.startSubTask(String)",1,1,1
"com.android.ddmlib.SyncService.NullSyncProgresMonitor.stop()",1,1,1
"com.android.ddmlib.SyncService.SyncService(InetSocketAddress,Device)",1,1,1
"com.android.ddmlib.SyncService.checkResult(byte[],byte[])",2,1,5
"com.android.ddmlib.SyncService.close()",1,2,3
"com.android.ddmlib.SyncService.createFileReq(byte[],String)",1,1,2
"com.android.ddmlib.SyncService.createFileReq(byte[],byte[])",1,1,1
"com.android.ddmlib.SyncService.createReq(byte[],int)",1,1,1
"com.android.ddmlib.SyncService.createSendFileReq(byte[],byte[],int)",1,1,2
"com.android.ddmlib.SyncService.doPull(FileEntry[],String,FileListingService,ISyncProgressMonitor)",3,4,5
"com.android.ddmlib.SyncService.doPullFile(String,String,ISyncProgressMonitor)",8,7,12
"com.android.ddmlib.SyncService.doPush(File[],String,ISyncProgressMonitor)",3,5,6
"com.android.ddmlib.SyncService.doPushFile(String,String,ISyncProgressMonitor)",6,4,9
"com.android.ddmlib.SyncService.getFileType(int)",8,1,8
"com.android.ddmlib.SyncService.getNullProgressMonitor()",1,1,1
"com.android.ddmlib.SyncService.getTotalLocalFileSize(File[])",4,5,5
"com.android.ddmlib.SyncService.getTotalRemoteFileSize(FileEntry[],FileListingService)",1,4,4
"com.android.ddmlib.SyncService.openSync()",2,6,8
"com.android.ddmlib.SyncService.pull(FileEntry[],String,ISyncProgressMonitor)",3,1,3
"com.android.ddmlib.SyncService.pullFile(FileEntry,String,ISyncProgressMonitor)",1,1,1
"com.android.ddmlib.SyncService.pullFile(String,String,ISyncProgressMonitor)",3,1,3
"com.android.ddmlib.SyncService.push(String[],FileEntry,ISyncProgressMonitor)",2,2,3
"com.android.ddmlib.SyncService.pushFile(String,String,ISyncProgressMonitor)",3,1,3
"com.android.ddmlib.SyncService.readErrorMessage(byte[],int)",3,3,3
"com.android.ddmlib.SyncService.readMode(String)",2,1,2
"com.android.ddmlib.ThreadInfo.ThreadInfo(int,String)",1,1,1
"com.android.ddmlib.ThreadInfo.getStackCallTime()",1,1,1
"com.android.ddmlib.ThreadInfo.getStackTrace()",1,1,1
"com.android.ddmlib.ThreadInfo.getStatus()",1,1,1
"com.android.ddmlib.ThreadInfo.getStime()",1,1,1
"com.android.ddmlib.ThreadInfo.getThreadId()",1,1,1
"com.android.ddmlib.ThreadInfo.getThreadName()",1,1,1
"com.android.ddmlib.ThreadInfo.getTid()",1,1,1
"com.android.ddmlib.ThreadInfo.getUtime()",1,1,1
"com.android.ddmlib.ThreadInfo.isDaemon()",1,1,1
"com.android.ddmlib.ThreadInfo.setStackCall(StackTraceElement[])",1,1,1
"com.android.ddmlib.ThreadInfo.setThreadName(String)",1,1,1
"com.android.ddmlib.ThreadInfo.updateThread(int,int,int,int,boolean)",1,1,1
"com.android.ddmlib.log.EventContainer.CompareMethod.CompareMethod(String,String)",1,1,1
"com.android.ddmlib.log.EventContainer.CompareMethod.testString()",1,1,1
"com.android.ddmlib.log.EventContainer.CompareMethod.toString()",1,1,1
"com.android.ddmlib.log.EventContainer.EventContainer(LogEntry,int,Object)",1,1,1
"com.android.ddmlib.log.EventContainer.EventContainer(int,int,int,int,int,Object)",1,1,1
"com.android.ddmlib.log.EventContainer.EventValueType.EventValueType(int)",1,1,1
"com.android.ddmlib.log.EventContainer.EventValueType.getEventValueType(int)",3,1,3
"com.android.ddmlib.log.EventContainer.EventValueType.getObjectFromStorageString(String)",6,5,7
"com.android.ddmlib.log.EventContainer.EventValueType.getStorageString(Object)",4,4,4
"com.android.ddmlib.log.EventContainer.EventValueType.getValue()",1,1,1
"com.android.ddmlib.log.EventContainer.EventValueType.toString()",1,1,1
"com.android.ddmlib.log.EventContainer.getInt()",2,1,2
"com.android.ddmlib.log.EventContainer.getLong()",2,1,2
"com.android.ddmlib.log.EventContainer.getString()",2,1,2
"com.android.ddmlib.log.EventContainer.getType()",1,1,1
"com.android.ddmlib.log.EventContainer.getType(Object)",7,6,8
"com.android.ddmlib.log.EventContainer.getValue(Object,int,boolean)",5,4,6
"com.android.ddmlib.log.EventContainer.getValue(int)",1,1,1
"com.android.ddmlib.log.EventContainer.getValueAsDouble(Object,int,boolean)",7,6,8
"com.android.ddmlib.log.EventContainer.getValueAsDouble(int)",1,1,1
"com.android.ddmlib.log.EventContainer.getValueAsString(Object,int,boolean)",7,6,8
"com.android.ddmlib.log.EventContainer.getValueAsString(int)",1,1,1
"com.android.ddmlib.log.EventContainer.testValue(int,Object,CompareMethod)",20,13,22
"com.android.ddmlib.log.EventLogParser.EventLogParser()",1,1,1
"com.android.ddmlib.log.EventLogParser.getEventInfoMap()",1,1,1
"com.android.ddmlib.log.EventLogParser.getObjectFromString(String,EventValueType)",4,4,5
"com.android.ddmlib.log.EventLogParser.getTagMap()",1,1,1
"com.android.ddmlib.log.EventLogParser.init(IDevice)",1,2,3
"com.android.ddmlib.log.EventLogParser.init(String)",1,4,6
"com.android.ddmlib.log.EventLogParser.init(String[])",1,2,2
"com.android.ddmlib.log.EventLogParser.parse(LogEntry)",3,3,6
"com.android.ddmlib.log.EventLogParser.parse(String)",7,4,9
"com.android.ddmlib.log.EventLogParser.parseBinaryEvent(byte[],int,ArrayList<Object>)",11,4,15
"com.android.ddmlib.log.EventLogParser.parseTextData(String,int)",8,6,9
"com.android.ddmlib.log.EventLogParser.processDescription(String)",2,5,9
"com.android.ddmlib.log.EventLogParser.processTagLine(String)",1,13,14
"com.android.ddmlib.log.EventLogParser.saveTags(String)",1,6,6
"com.android.ddmlib.log.EventValueDescription.EventValueDescription(String,EventValueType)",1,1,3
"com.android.ddmlib.log.EventValueDescription.EventValueDescription(String,EventValueType,ValueType)",1,1,1
"com.android.ddmlib.log.EventValueDescription.ValueType.ValueType(int)",1,1,1
"com.android.ddmlib.log.EventValueDescription.ValueType.checkType(EventValueType)",2,2,4
"com.android.ddmlib.log.EventValueDescription.ValueType.getValue()",1,1,1
"com.android.ddmlib.log.EventValueDescription.ValueType.getValueType(int)",3,1,3
"com.android.ddmlib.log.EventValueDescription.ValueType.toString()",1,1,1
"com.android.ddmlib.log.EventValueDescription.checkForType(Object)",5,2,5
"com.android.ddmlib.log.EventValueDescription.getEventValueType()",1,1,1
"com.android.ddmlib.log.EventValueDescription.getName()",1,1,1
"com.android.ddmlib.log.EventValueDescription.getObjectFromString(String)",4,4,6
"com.android.ddmlib.log.EventValueDescription.getValueType()",1,1,1
"com.android.ddmlib.log.EventValueDescription.toString()",2,2,2
"com.android.ddmlib.log.GcEventContainer.GcEventContainer(LogEntry,int,Object)",1,1,1
"com.android.ddmlib.log.GcEventContainer.GcEventContainer(int,int,int,int,int,Object)",1,1,1
"com.android.ddmlib.log.GcEventContainer.float12ToInt(int)",1,1,1
"com.android.ddmlib.log.GcEventContainer.getType()",1,1,1
"com.android.ddmlib.log.GcEventContainer.getValue(int)",2,1,3
"com.android.ddmlib.log.GcEventContainer.getValueAsDouble(int)",1,1,1
"com.android.ddmlib.log.GcEventContainer.getValueAsLong(int)",22,2,22
"com.android.ddmlib.log.GcEventContainer.getValueAsString(int)",3,2,4
"com.android.ddmlib.log.GcEventContainer.getValueDescriptions()",1,1,2
"com.android.ddmlib.log.GcEventContainer.init(Object)",1,4,4
"com.android.ddmlib.log.GcEventContainer.parseDvmHeapInfo(long,int)",2,2,6
"com.android.ddmlib.log.GcEventContainer.put64bitsToArray(long,byte[],int)",1,1,1
"com.android.ddmlib.log.GcEventContainer.testValue(int,Object,CompareMethod)",11,8,11
"com.android.ddmlib.log.InvalidTypeException.InvalidTypeException()",1,1,1
"com.android.ddmlib.log.InvalidTypeException.InvalidTypeException(String)",1,1,1
"com.android.ddmlib.log.InvalidTypeException.InvalidTypeException(String,Throwable)",1,1,1
"com.android.ddmlib.log.InvalidTypeException.InvalidTypeException(Throwable)",1,1,1
"com.android.ddmlib.log.InvalidValueTypeException.InvalidValueTypeException()",1,1,1
"com.android.ddmlib.log.InvalidValueTypeException.InvalidValueTypeException(String)",1,1,1
"com.android.ddmlib.log.InvalidValueTypeException.InvalidValueTypeException(String,Throwable)",1,1,1
"com.android.ddmlib.log.InvalidValueTypeException.InvalidValueTypeException(Throwable)",1,1,1
"com.android.ddmlib.log.LogReceiver.LogReceiver(ILogListener)",1,1,1
"com.android.ddmlib.log.LogReceiver.cancel()",1,1,1
"com.android.ddmlib.log.LogReceiver.createEntry(byte[],int)",2,1,2
"com.android.ddmlib.log.LogReceiver.isCancelled()",1,1,1
"com.android.ddmlib.log.LogReceiver.parseNewData(byte[],int,int)",5,8,9
"com.android.ddmlib.testrunner.IRemoteAndroidTestRunner.TestSize.TestSize(String)",1,1,1
"com.android.ddmlib.testrunner.IRemoteAndroidTestRunner.TestSize.getRunnerValue()",1,1,1
"com.android.ddmlib.testrunner.IRemoteAndroidTestRunner.TestSize.getTestSize(String)",3,2,3
"com.android.ddmlib.testrunner.InstrumentationResultParser.InstrumentationResultParser(String,Collection<ITestRunListener>)",1,1,1
"com.android.ddmlib.testrunner.InstrumentationResultParser.InstrumentationResultParser(String,ITestRunListener)",1,1,1
"com.android.ddmlib.testrunner.InstrumentationResultParser.TestResult.isComplete()",1,1,3
"com.android.ddmlib.testrunner.InstrumentationResultParser.TestResult.toString()",2,4,4
"com.android.ddmlib.testrunner.InstrumentationResultParser.cancel()",1,1,1
"com.android.ddmlib.testrunner.InstrumentationResultParser.clearCurrentTestInfo()",1,1,1
"com.android.ddmlib.testrunner.InstrumentationResultParser.done()",1,2,2
"com.android.ddmlib.testrunner.InstrumentationResultParser.getAndResetTestMetrics()",1,1,1
"com.android.ddmlib.testrunner.InstrumentationResultParser.getCurrentTestInfo()",1,1,2
"com.android.ddmlib.testrunner.InstrumentationResultParser.getTrace(TestResult)",2,2,2
"com.android.ddmlib.testrunner.InstrumentationResultParser.handleOutputDone()",1,5,6
"com.android.ddmlib.testrunner.InstrumentationResultParser.handleTestRunFailed(String)",1,7,8
"com.android.ddmlib.testrunner.InstrumentationResultParser.isCancelled()",1,1,1
"com.android.ddmlib.testrunner.InstrumentationResultParser.parse(String)",1,9,9
"com.android.ddmlib.testrunner.InstrumentationResultParser.parseKey(String,int)",1,2,2
"com.android.ddmlib.testrunner.InstrumentationResultParser.parseStatusCode(String)",1,3,3
"com.android.ddmlib.testrunner.InstrumentationResultParser.parseTime(String)",1,3,3
"com.android.ddmlib.testrunner.InstrumentationResultParser.parseValue(String,int)",1,1,1
"com.android.ddmlib.testrunner.InstrumentationResultParser.processNewLines(String[])",1,2,2
"com.android.ddmlib.testrunner.InstrumentationResultParser.reportResult(TestResult)",3,8,12
"com.android.ddmlib.testrunner.InstrumentationResultParser.reportTestRunStarted(TestResult)",1,3,4
"com.android.ddmlib.testrunner.InstrumentationResultParser.submitCurrentKeyValue()",1,12,13
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.RemoteAndroidTestRunner(String,IDevice)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.RemoteAndroidTestRunner(String,String,IDevice)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.addBooleanArg(String,boolean)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.addInstrumentationArg(String,String)",2,1,3
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.cancel()",1,2,2
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.getArgsCommand()",1,2,2
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.getPackageName()",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.getRunnerName()",2,1,2
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.getRunnerPath()",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.removeInstrumentationArg(String)",2,1,2
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.run(Collection<ITestRunListener>)",1,5,6
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.run(ITestRunListener...)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setClassName(String)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setClassNames(String[])",1,3,3
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setCoverage(boolean)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setDebug(boolean)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setLogOnly(boolean)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setMaxtimeToOutputResponse(int)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setMethodName(String,String)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setRunName(String)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setTestPackageName(String)",1,1,1
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner.setTestSize(TestSize)",1,1,1
"com.android.ddmlib.testrunner.TestIdentifier.TestIdentifier(String,String)",2,1,3
"com.android.ddmlib.testrunner.TestIdentifier.equals(Object)",10,3,10
"com.android.ddmlib.testrunner.TestIdentifier.getClassName()",1,1,1
"com.android.ddmlib.testrunner.TestIdentifier.getTestName()",1,1,1
"com.android.ddmlib.testrunner.TestIdentifier.hashCode()",1,3,3
"com.android.ddmlib.testrunner.TestIdentifier.toString()",1,1,1
"com.android.ddmlib.testrunner.TestResult.TestResult()",1,1,1
"com.android.ddmlib.testrunner.TestResult.equal(Object,Object)",1,3,3
"com.android.ddmlib.testrunner.TestResult.equals(Object)",4,3,6
"com.android.ddmlib.testrunner.TestResult.getEndTime()",1,1,1
"com.android.ddmlib.testrunner.TestResult.getMetrics()",1,1,1
"com.android.ddmlib.testrunner.TestResult.getStackTrace()",1,1,1
"com.android.ddmlib.testrunner.TestResult.getStartTime()",1,1,1
"com.android.ddmlib.testrunner.TestResult.getStatus()",1,1,1
"com.android.ddmlib.testrunner.TestResult.hashCode()",1,1,1
"com.android.ddmlib.testrunner.TestResult.setEndTime(long)",1,1,1
"com.android.ddmlib.testrunner.TestResult.setMetrics(Map<String, String>)",1,1,1
"com.android.ddmlib.testrunner.TestResult.setStackTrace(String)",1,1,1
"com.android.ddmlib.testrunner.TestResult.setStatus(TestStatus)",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.TestRunResult()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.TestRunResult(String)",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.addElapsedTime(long)",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.addMetrics(Map<String, String>,boolean)",1,3,3
"com.android.ddmlib.testrunner.TestRunResult.combineValues(String,String)",2,2,4
"com.android.ddmlib.testrunner.TestRunResult.getCompletedTests()",1,3,3
"com.android.ddmlib.testrunner.TestRunResult.getElapsedTime()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getName()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getNumCompleteTests()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getNumErrorTests()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getNumFailedTests()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getNumIncompleteTests()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getNumPassedTests()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getNumTests()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getRunFailureMessage()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getRunMetrics()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.getTestResults()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.hasFailedTests()",1,2,2
"com.android.ddmlib.testrunner.TestRunResult.isRunComplete()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.isRunFailure()",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.reportTestEnded(TestIdentifier,Map<String, String>)",2,3,3
"com.android.ddmlib.testrunner.TestRunResult.reportTestFailure(TestIdentifier,TestStatus,String)",2,4,5
"com.android.ddmlib.testrunner.TestRunResult.reportTestStarted(TestIdentifier)",2,3,6
"com.android.ddmlib.testrunner.TestRunResult.setRunComplete(boolean)",1,1,1
"com.android.ddmlib.testrunner.TestRunResult.setRunFailureError(String)",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.createOutputResultStream(File)",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.generateDocument(File,long)",1,3,4
"com.android.ddmlib.testrunner.XmlTestRunListener.getAbsoluteReportPath()",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.getTimestamp()",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.print(KXmlSerializer,TestIdentifier,TestResult)",1,2,3
"com.android.ddmlib.testrunner.XmlTestRunListener.printTestResults(KXmlSerializer,String,long)",1,2,2
"com.android.ddmlib.testrunner.XmlTestRunListener.sanitize(String)",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.setReportDir(File)",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.testEnded(TestIdentifier,Map<String, String>)",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.testFailed(TestFailure,TestIdentifier,String)",1,2,2
"com.android.ddmlib.testrunner.XmlTestRunListener.testRunEnded(long,Map<String, String>)",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.testRunFailed(String)",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.testRunStarted(String,int)",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.testRunStopped(long)",1,1,1
"com.android.ddmlib.testrunner.XmlTestRunListener.testStarted(TestIdentifier)",1,1,1
"com.android.ddmlib.utils.ArrayHelper.swap32bitFromArray(byte[],int)",1,1,1
"com.android.ddmlib.utils.ArrayHelper.swap32bitsToArray(int,byte[],int)",1,1,1
"com.android.ddmlib.utils.ArrayHelper.swap64bitFromArray(byte[],int)",1,1,1
"com.android.ddmlib.utils.ArrayHelper.swapU16bitFromArray(byte[],int)",1,1,1
"com.android.draw9patch.Application.initUserInterface()",1,5,5
"com.android.draw9patch.Application.main(String...)",1,1,2
"com.android.draw9patch.graphics.GraphicsUtilities.createCompatibleImage(BufferedImage,int,int)",1,1,1
"com.android.draw9patch.graphics.GraphicsUtilities.createCompatibleImage(int,int)",1,1,1
"com.android.draw9patch.graphics.GraphicsUtilities.createTranslucentCompatibleImage(int,int)",1,1,1
"com.android.draw9patch.graphics.GraphicsUtilities.getGraphicsConfiguration()",1,1,1
"com.android.draw9patch.graphics.GraphicsUtilities.getPixels(BufferedImage,int,int,int,int,int[])",5,2,7
"com.android.draw9patch.graphics.GraphicsUtilities.isHeadless()",1,1,1
"com.android.draw9patch.graphics.GraphicsUtilities.loadCompatibleImage(URL)",1,1,1
"com.android.draw9patch.graphics.GraphicsUtilities.toCompatibleImage(BufferedImage)",3,1,3
"com.android.draw9patch.ui.GradientPanel.GradientPanel()",1,1,1
"com.android.draw9patch.ui.GradientPanel.paintComponent(Graphics)",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.ImageEditorPanel(MainFrame,BufferedImage,String)",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.ImageViewer()",1,4,5
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.checkLockedRegion(int,int)",1,3,14
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.corruptHorizontalPatch(Rectangle)",3,2,3
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.corruptPatch(Rectangle)",4,1,4
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.corruptVerticalPatch(Rectangle)",3,2,3
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.enableEraseMode(KeyEvent)",1,3,3
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.findBadPatches()",1,7,7
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.findPatches()",1,4,4
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.getHorizontalRectangles(List<Pair<Integer>>)",1,2,2
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.getPadding(List<Pair<Integer>>)",4,4,4
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.getPatches(int[],boolean[])",1,6,8
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.getPreferredSize()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.getRectangles(List<Pair<Integer>>,List<Pair<Integer>>)",1,3,3
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.getVerticalRectangles(List<Pair<Integer>>)",1,2,2
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.paint(int,int,int)",2,4,14
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.paintComponent(Graphics)",1,9,10
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.paintStripes(Graphics2D,int,int)",1,2,3
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.setLockVisible(boolean)",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.setPatchesVisible(boolean)",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer.setZoom(int)",1,4,4
"com.android.draw9patch.ui.ImageEditorPanel.Pair.Pair(E,E)",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.Pair.toString()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer.StretchView.StretchView()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer.StretchView.getPreferredSize()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer.StretchView.paintComponent(Graphics)",2,8,9
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer.StretchesViewer()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer.computePatches()",1,2,16
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer.paintComponent(Graphics)",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer.setPaddingVisible(boolean)",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer.setScale(float)",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.buildImageViewer()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.buildStatusPanel()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.buildStretchesViewer()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.checkImage()",1,2,2
"com.android.draw9patch.ui.ImageEditorPanel.chooseSaveFile()",4,5,5
"com.android.draw9patch.ui.ImageEditorPanel.convertTo9Patch()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.ensure9Patch()",1,7,15
"com.android.draw9patch.ui.ImageEditorPanel.getImage()",1,1,1
"com.android.draw9patch.ui.ImageEditorPanel.loadSupport()",1,2,2
"com.android.draw9patch.ui.ImageTransferHandler.ImageTransferHandler(MainFrame)",1,1,1
"com.android.draw9patch.ui.ImageTransferHandler.canImport(TransferSupport)",4,4,5
"com.android.draw9patch.ui.ImageTransferHandler.convertPath(String)",1,4,4
"com.android.draw9patch.ui.ImageTransferHandler.importData(JComponent,Transferable)",5,8,9
"com.android.draw9patch.ui.MainFrame.MainFrame(String)",1,3,3
"com.android.draw9patch.ui.MainFrame.OpenTask.OpenTask(File)",1,1,1
"com.android.draw9patch.ui.MainFrame.OpenTask.doInBackground()",1,1,1
"com.android.draw9patch.ui.MainFrame.OpenTask.done()",1,3,3
"com.android.draw9patch.ui.MainFrame.SaveTask.SaveTask(File)",1,1,1
"com.android.draw9patch.ui.MainFrame.SaveTask.doInBackground()",1,2,2
"com.android.draw9patch.ui.MainFrame.buildActions()",1,1,1
"com.android.draw9patch.ui.MainFrame.buildContent()",1,1,1
"com.android.draw9patch.ui.MainFrame.buildMenuBar()",1,1,1
"com.android.draw9patch.ui.MainFrame.open(File)",3,3,3
"com.android.draw9patch.ui.MainFrame.save()",2,1,3
"com.android.draw9patch.ui.MainFrame.showImageEditor(BufferedImage,String)",1,1,1
"com.android.draw9patch.ui.MainFrame.showOpenFilePanel()",1,1,1
"com.android.draw9patch.ui.OpenFilePanel.OpenFilePanel(MainFrame)",1,1,1
"com.android.draw9patch.ui.OpenFilePanel.loadSupportImage()",1,2,2
"com.android.draw9patch.ui.OpenFilePanel.paintComponent(Graphics)",1,1,1
"com.android.draw9patch.ui.PngFileFilter.accept(File)",1,2,2
"com.android.draw9patch.ui.PngFileFilter.getDescription()",1,1,1
"com.android.draw9patch.ui.action.BackgroundAction.executeBackgroundTask(SwingWorker<?, ?>)",1,2,2
"com.android.draw9patch.ui.action.ExitAction.ExitAction(JFrame)",1,1,1
"com.android.draw9patch.ui.action.ExitAction.actionPerformed(ActionEvent)",1,1,1
"com.android.draw9patch.ui.action.OpenAction.OpenAction(MainFrame)",1,1,1
"com.android.draw9patch.ui.action.OpenAction.actionPerformed(ActionEvent)",1,1,1
"com.android.draw9patch.ui.action.SaveAction.SaveAction(MainFrame)",1,1,1
"com.android.draw9patch.ui.action.SaveAction.actionPerformed(ActionEvent)",1,1,1
"com.android.dvlib.DeviceSchema.ValidationHandler.ValidationHandler(File,PrintWriter)",1,1,1
"com.android.dvlib.DeviceSchema.ValidationHandler.characters(char[],int,int)",1,1,1
"com.android.dvlib.DeviceSchema.ValidationHandler.endElement(String,String,String)",6,12,12
"com.android.dvlib.DeviceSchema.ValidationHandler.error(SAXParseException)",1,1,1
"com.android.dvlib.DeviceSchema.ValidationHandler.fatalError(SAXParseException)",1,1,1
"com.android.dvlib.DeviceSchema.ValidationHandler.isValidDevicesFile()",1,1,1
"com.android.dvlib.DeviceSchema.ValidationHandler.startElement(String,String,String,Attributes)",1,7,7
"com.android.dvlib.DeviceSchema.ValidationHandler.validationError(String)",1,1,1
"com.android.dvlib.DeviceSchema.getSchema()",1,1,1
"com.android.dvlib.DeviceSchema.getXsdStream()",1,1,1
"com.android.dvlib.DeviceSchema.validate(InputStream,OutputStream,File)",1,4,4
"com.android.ide.common.api.AbstractViewRule.addContextMenuActions(List<RuleAction>,INode)",1,1,1
"com.android.ide.common.api.AbstractViewRule.addLayoutActions(List<RuleAction>,INode,List<? extends INode>)",1,1,1
"com.android.ide.common.api.AbstractViewRule.getDefaultActionId(INode)",1,1,1
"com.android.ide.common.api.AbstractViewRule.getDisplayName()",1,1,1
"com.android.ide.common.api.AbstractViewRule.getSelectionHint(INode,INode)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onChildInserted(INode,INode,InsertType)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onCreate(INode,INode,InsertType)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onDispose()",1,1,1
"com.android.ide.common.api.AbstractViewRule.onDropEnter(INode,Object,IDragElement[])",1,1,1
"com.android.ide.common.api.AbstractViewRule.onDropLeave(INode,IDragElement[],DropFeedback)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onDropMove(INode,IDragElement[],DropFeedback,Point)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onDropped(INode,IDragElement[],DropFeedback,Point)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onInitialize(String,IClientRulesEngine)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onPaste(INode,Object,IDragElement[])",1,1,1
"com.android.ide.common.api.AbstractViewRule.onRemovingChildren(List<INode>,INode,boolean)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onResizeBegin(INode,INode,SegmentType,SegmentType,Object,Object)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onResizeEnd(DropFeedback,INode,INode,Rect)",1,1,1
"com.android.ide.common.api.AbstractViewRule.onResizeUpdate(DropFeedback,INode,INode,Rect,int)",1,1,1
"com.android.ide.common.api.AbstractViewRule.paintSelectionFeedback(IGraphics,INode,List<? extends INode>,Object)",1,1,1
"com.android.ide.common.api.DropFeedback.DropFeedback(Object,IFeedbackPainter)",1,1,1
"com.android.ide.common.api.IAttributeInfo.Format.asSet()",11,2,11
"com.android.ide.common.api.IAttributeInfo.Format.getResourceType()",8,2,8
"com.android.ide.common.api.IViewMetadata.FillPreference.fillHorizontally(boolean)",1,1,5
"com.android.ide.common.api.IViewMetadata.FillPreference.fillVertically(boolean)",1,1,5
"com.android.ide.common.api.InsertType.isCreate()",1,1,2
"com.android.ide.common.api.Margins.Margins(int,int,int,int)",1,1,1
"com.android.ide.common.api.Margins.toString()",1,1,1
"com.android.ide.common.api.Point.Point(Point)",1,1,1
"com.android.ide.common.api.Point.Point(int,int)",1,1,1
"com.android.ide.common.api.Point.copy()",1,1,1
"com.android.ide.common.api.Point.equals(Object)",2,1,3
"com.android.ide.common.api.Point.hashCode()",1,1,1
"com.android.ide.common.api.Point.offsetBy(int,int)",1,1,1
"com.android.ide.common.api.Point.set(int,int)",1,1,1
"com.android.ide.common.api.Point.toString()",1,1,1
"com.android.ide.common.api.Rect.Rect()",1,1,1
"com.android.ide.common.api.Rect.Rect(Rect)",1,1,1
"com.android.ide.common.api.Rect.Rect(int,int,int,int)",1,1,1
"com.android.ide.common.api.Rect.center()",1,1,1
"com.android.ide.common.api.Rect.centerX()",1,1,1
"com.android.ide.common.api.Rect.centerY()",1,1,1
"com.android.ide.common.api.Rect.contains(Point)",1,2,2
"com.android.ide.common.api.Rect.contains(Rect)",1,5,5
"com.android.ide.common.api.Rect.contains(int,int)",1,5,5
"com.android.ide.common.api.Rect.copy()",1,1,1
"com.android.ide.common.api.Rect.equals(Object)",4,3,8
"com.android.ide.common.api.Rect.getBottomLeft()",1,1,2
"com.android.ide.common.api.Rect.getBottomRight()",1,1,3
"com.android.ide.common.api.Rect.getCenter()",1,1,3
"com.android.ide.common.api.Rect.getTopLeft()",1,1,1
"com.android.ide.common.api.Rect.getTopRight()",1,1,2
"com.android.ide.common.api.Rect.hashCode()",1,1,1
"com.android.ide.common.api.Rect.intersects(Rect)",3,4,6
"com.android.ide.common.api.Rect.isValid()",1,1,2
"com.android.ide.common.api.Rect.moveTo(int,int)",1,1,1
"com.android.ide.common.api.Rect.offsetBy(int,int)",1,1,1
"com.android.ide.common.api.Rect.set(Rect)",1,1,1
"com.android.ide.common.api.Rect.set(int,int,int,int)",1,1,1
"com.android.ide.common.api.Rect.toString()",1,1,1
"com.android.ide.common.api.Rect.x2()",1,1,1
"com.android.ide.common.api.Rect.y2()",1,1,1
"com.android.ide.common.api.ResizePolicy.ResizePolicy(int)",1,1,1
"com.android.ide.common.api.ResizePolicy.bottomAllowed()",1,1,1
"com.android.ide.common.api.ResizePolicy.create(boolean,boolean,boolean,boolean,boolean)",1,1,6
"com.android.ide.common.api.ResizePolicy.full()",1,1,1
"com.android.ide.common.api.ResizePolicy.horizontal()",1,1,1
"com.android.ide.common.api.ResizePolicy.isAspectPreserving()",1,1,1
"com.android.ide.common.api.ResizePolicy.isResizable()",1,1,1
"com.android.ide.common.api.ResizePolicy.leftAllowed()",1,1,1
"com.android.ide.common.api.ResizePolicy.none()",1,1,1
"com.android.ide.common.api.ResizePolicy.rightAllowed()",1,1,1
"com.android.ide.common.api.ResizePolicy.scaled()",1,1,1
"com.android.ide.common.api.ResizePolicy.topAllowed()",1,1,1
"com.android.ide.common.api.ResizePolicy.vertical()",1,1,1
"com.android.ide.common.api.RuleAction.Choices.Choices(String,String,IMenuCallback,List<String>,List<URL>,List<String>,String,int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.Choices.getCurrent()",1,1,1
"com.android.ide.common.api.RuleAction.Choices.getIconUrls()",1,1,1
"com.android.ide.common.api.RuleAction.Choices.getIds()",1,1,1
"com.android.ide.common.api.RuleAction.Choices.getTitles()",1,1,1
"com.android.ide.common.api.RuleAction.Choices.isRadio()",1,1,1
"com.android.ide.common.api.RuleAction.Choices.setRadio(boolean)",1,1,1
"com.android.ide.common.api.RuleAction.DelayedChoices.DelayedChoices(String,String,IMenuCallback,String,ChoiceProvider,int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.DelayedChoices.ensureInitialized()",1,2,2
"com.android.ide.common.api.RuleAction.DelayedChoices.getIconUrls()",1,1,1
"com.android.ide.common.api.RuleAction.DelayedChoices.getIds()",1,1,1
"com.android.ide.common.api.RuleAction.DelayedChoices.getTitles()",1,1,1
"com.android.ide.common.api.RuleAction.NestedAction.NestedAction(String,String,ActionProvider,IMenuCallback,int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.NestedAction.getNestedActions(INode)",1,1,1
"com.android.ide.common.api.RuleAction.RuleAction(String,String,IMenuCallback,int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.Separator.Separator(int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.Toggle.Toggle(String,String,boolean,IMenuCallback,int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.Toggle.equals(Object)",1,1,1
"com.android.ide.common.api.RuleAction.Toggle.hashCode()",1,1,1
"com.android.ide.common.api.RuleAction.Toggle.isChecked()",1,1,1
"com.android.ide.common.api.RuleAction.compareTo(RuleAction)",2,1,2
"com.android.ide.common.api.RuleAction.createAction(String,String,IMenuCallback,URL,int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.createChoices(String,String,IMenuCallback,ChoiceProvider,String,URL,int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.createChoices(String,String,IMenuCallback,List<String>,List<URL>,List<String>,String,URL,int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.createChoices(String,String,IMenuCallback,List<URL>,String,URL,int,boolean,List<Pair<String, String>>)",1,2,2
"com.android.ide.common.api.RuleAction.createChoices(String,String,IMenuCallback,URL,int,boolean,ActionProvider)",1,1,1
"com.android.ide.common.api.RuleAction.createSeparator(int)",1,1,1
"com.android.ide.common.api.RuleAction.createToggle(String,String,boolean,IMenuCallback,URL,int,boolean)",1,1,1
"com.android.ide.common.api.RuleAction.equals(Object)",4,6,8
"com.android.ide.common.api.RuleAction.getCallback()",1,1,1
"com.android.ide.common.api.RuleAction.getIconUrl()",1,1,1
"com.android.ide.common.api.RuleAction.getId()",1,1,1
"com.android.ide.common.api.RuleAction.getSortPriority()",1,1,1
"com.android.ide.common.api.RuleAction.getTitle()",1,1,1
"com.android.ide.common.api.RuleAction.hashCode()",1,3,3
"com.android.ide.common.api.RuleAction.setIconUrl(URL)",1,1,1
"com.android.ide.common.api.RuleAction.supportsMultipleNodes()",1,1,1
"com.android.ide.common.api.RuleAction.toString()",1,1,1
"com.android.ide.common.api.Segment.Segment(int,int,int,INode,String,SegmentType,MarginType)",1,1,1
"com.android.ide.common.api.Segment.toString()",1,2,2
"com.android.ide.common.api.SegmentType.getX(INode,Rect)",4,2,5
"com.android.ide.common.api.SegmentType.getY(INode,Rect)",5,4,8
"com.android.ide.common.api.SegmentType.isHorizontal()",1,1,4
"com.android.ide.common.api.SegmentType.toString()",1,1,1
"com.android.ide.common.rendering.HardwareConfigHelper.HardwareConfigHelper(Device)",1,1,1
"com.android.ide.common.rendering.HardwareConfigHelper.getConfig()",1,1,8
"com.android.ide.common.rendering.HardwareConfigHelper.setMaxRenderSize(int,int)",1,1,1
"com.android.ide.common.rendering.HardwareConfigHelper.setOrientation(ScreenOrientation)",1,1,1
"com.android.ide.common.rendering.HardwareConfigHelper.setOverrideRenderSize(int,int)",1,1,1
"com.android.ide.common.rendering.LayoutLibrary.LayoutLibrary(Bridge,ILayoutBridge,ClassLoader,LoadStatus,String)",1,1,1
"com.android.ide.common.rendering.LayoutLibrary.addExtendedViewInfo(ViewInfo)",1,2,2
"com.android.ide.common.rendering.LayoutLibrary.clearCaches(Object)",1,3,3
"com.android.ide.common.rendering.LayoutLibrary.computeExtendedViewInfo(ViewInfo)",1,3,4
"com.android.ide.common.rendering.LayoutLibrary.convertMap(Map<ResourceType, Map<String, ResourceValue>>)",1,2,2
"com.android.ide.common.rendering.LayoutLibrary.convertToScene(ILayoutResult)",1,3,3
"com.android.ide.common.rendering.LayoutLibrary.convertToViewInfo(ILayoutViewInfo)",1,3,3
"com.android.ide.common.rendering.LayoutLibrary.createLegacySession(SessionParams)",4,4,9
"com.android.ide.common.rendering.LayoutLibrary.createSession(SessionParams)",3,7,7
"com.android.ide.common.rendering.LayoutLibrary.dispose()",2,2,2
"com.android.ide.common.rendering.LayoutLibrary.getApiLevel()",3,3,3
"com.android.ide.common.rendering.LayoutLibrary.getClassLoader()",1,1,1
"com.android.ide.common.rendering.LayoutLibrary.getLegacyApiLevel()",1,1,2
"com.android.ide.common.rendering.LayoutLibrary.getLoadMessage()",1,1,1
"com.android.ide.common.rendering.LayoutLibrary.getRevision()",2,2,2
"com.android.ide.common.rendering.LayoutLibrary.getStatus()",1,1,1
"com.android.ide.common.rendering.LayoutLibrary.getViewBaselineReflection(Object)",2,3,4
"com.android.ide.common.rendering.LayoutLibrary.getViewIndex(Object)",3,2,3
"com.android.ide.common.rendering.LayoutLibrary.getViewIndexReflection(Object)",1,4,4
"com.android.ide.common.rendering.LayoutLibrary.getViewParent(Object)",3,2,3
"com.android.ide.common.rendering.LayoutLibrary.getViewParentWithReflection(Object)",1,3,3
"com.android.ide.common.rendering.LayoutLibrary.init(Map<String, String>,File,Map<String, Map<String, Integer>>,LayoutLog)",3,3,3
"com.android.ide.common.rendering.LayoutLibrary.legacyCleanUp()",1,3,4
"com.android.ide.common.rendering.LayoutLibrary.load(String,ILogger,String)",1,12,15
"com.android.ide.common.rendering.LayoutLibrary.renderDrawable(DrawableParams)",2,2,2
"com.android.ide.common.rendering.LayoutLibrary.supports(Capability)",4,4,4
"com.android.ide.common.rendering.StaticRenderSession.StaticRenderSession(Result,ViewInfo,BufferedImage)",1,1,1
"com.android.ide.common.rendering.StaticRenderSession.getImage()",1,1,1
"com.android.ide.common.rendering.StaticRenderSession.getResult()",1,1,1
"com.android.ide.common.rendering.StaticRenderSession.getRootViews()",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.AdapterBinding(int)",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.addFooter(ResourceReference)",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.addHeader(ResourceReference)",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.addItem(DataBindingItem)",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.getFooterAt(int)",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.getFooterCount()",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.getHeaderAt(int)",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.getHeaderCount()",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.getItemAt(int)",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.getItemCount()",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.getRepeatCount()",1,1,1
"com.android.ide.common.rendering.api.AdapterBinding.iterator()",1,1,1
"com.android.ide.common.rendering.api.AttrResourceValue.AttrResourceValue(ResourceType,String,boolean)",1,1,1
"com.android.ide.common.rendering.api.AttrResourceValue.addValue(String,Integer)",1,1,2
"com.android.ide.common.rendering.api.AttrResourceValue.getAttributeValues()",1,1,1
"com.android.ide.common.rendering.api.Bridge.clearCaches(Object)",1,1,1
"com.android.ide.common.rendering.api.Bridge.createSession(SessionParams)",1,1,1
"com.android.ide.common.rendering.api.Bridge.dispose()",1,1,1
"com.android.ide.common.rendering.api.Bridge.getCapabilities()",1,1,1
"com.android.ide.common.rendering.api.Bridge.getRevision()",1,1,1
"com.android.ide.common.rendering.api.Bridge.getViewBaseline(Object)",1,1,1
"com.android.ide.common.rendering.api.Bridge.getViewIndex(Object)",1,1,1
"com.android.ide.common.rendering.api.Bridge.getViewParent(Object)",1,1,1
"com.android.ide.common.rendering.api.Bridge.init(Map<String, String>,File,Map<String, Map<String, Integer>>,LayoutLog)",1,1,1
"com.android.ide.common.rendering.api.Bridge.renderDrawable(DrawableParams)",1,1,1
"com.android.ide.common.rendering.api.DataBindingItem.DataBindingItem(ResourceReference,int)",1,1,1
"com.android.ide.common.rendering.api.DataBindingItem.DataBindingItem(String)",1,1,1
"com.android.ide.common.rendering.api.DataBindingItem.DataBindingItem(String,boolean)",1,1,1
"com.android.ide.common.rendering.api.DataBindingItem.DataBindingItem(String,boolean,int)",1,1,1
"com.android.ide.common.rendering.api.DataBindingItem.DataBindingItem(String,int)",1,1,1
"com.android.ide.common.rendering.api.DataBindingItem.addChild(DataBindingItem)",1,1,2
"com.android.ide.common.rendering.api.DataBindingItem.getChildren()",2,1,2
"com.android.ide.common.rendering.api.DataBindingItem.getCount()",1,1,1
"com.android.ide.common.rendering.api.DataBindingItem.getViewReference()",1,1,1
"com.android.ide.common.rendering.api.DataBindingItem.iterator()",1,1,1
"com.android.ide.common.rendering.api.DeclareStyleableResourceValue.DeclareStyleableResourceValue(ResourceType,String,boolean)",1,1,1
"com.android.ide.common.rendering.api.DeclareStyleableResourceValue.addValue(AttrResourceValue)",1,1,2
"com.android.ide.common.rendering.api.DeclareStyleableResourceValue.getAllAttributes()",1,1,1
"com.android.ide.common.rendering.api.DeclareStyleableResourceValue.getAttributeValues(String)",3,3,3
"com.android.ide.common.rendering.api.DensityBasedResourceValue.DensityBasedResourceValue(ResourceType,String,String,Density,boolean)",1,1,1
"com.android.ide.common.rendering.api.DensityBasedResourceValue.equals(Object)",7,2,7
"com.android.ide.common.rendering.api.DensityBasedResourceValue.getDensity()",1,1,1
"com.android.ide.common.rendering.api.DensityBasedResourceValue.getResourceDensity()",1,1,1
"com.android.ide.common.rendering.api.DensityBasedResourceValue.hashCode()",1,2,2
"com.android.ide.common.rendering.api.DensityBasedResourceValue.toString()",1,1,1
"com.android.ide.common.rendering.api.DrawableParams.DrawableParams(DrawableParams)",1,1,1
"com.android.ide.common.rendering.api.DrawableParams.DrawableParams(ResourceValue,Object,HardwareConfig,RenderResources,IProjectCallback,int,int,LayoutLog)",1,1,1
"com.android.ide.common.rendering.api.DrawableParams.getDrawable()",1,1,1
"com.android.ide.common.rendering.api.HardwareConfig.HardwareConfig(int,int,Density,float,float,ScreenSize,ScreenOrientation,boolean)",1,1,1
"com.android.ide.common.rendering.api.HardwareConfig.getDensity()",1,1,1
"com.android.ide.common.rendering.api.HardwareConfig.getOrientation()",1,1,1
"com.android.ide.common.rendering.api.HardwareConfig.getScreenHeight()",1,1,1
"com.android.ide.common.rendering.api.HardwareConfig.getScreenSize()",1,1,1
"com.android.ide.common.rendering.api.HardwareConfig.getScreenWidth()",1,1,1
"com.android.ide.common.rendering.api.HardwareConfig.getXdpi()",1,1,1
"com.android.ide.common.rendering.api.HardwareConfig.getYdpi()",1,1,1
"com.android.ide.common.rendering.api.HardwareConfig.hasSoftwareButtons()",1,1,1
"com.android.ide.common.rendering.api.IProjectCallback.ViewAttribute.ViewAttribute(Class<?>)",1,1,1
"com.android.ide.common.rendering.api.IProjectCallback.ViewAttribute.getAttributeClass()",1,1,1
"com.android.ide.common.rendering.api.LayoutLog.error(String,String,Object)",1,1,1
"com.android.ide.common.rendering.api.LayoutLog.error(String,String,Throwable,Object)",1,1,1
"com.android.ide.common.rendering.api.LayoutLog.fidelityWarning(String,String,Throwable,Object)",1,1,1
"com.android.ide.common.rendering.api.LayoutLog.warning(String,String,Object)",1,1,1
"com.android.ide.common.rendering.api.MergeCookie.MergeCookie(Object)",1,1,1
"com.android.ide.common.rendering.api.MergeCookie.getCookie()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.RenderParams(Object,HardwareConfig,RenderResources,IProjectCallback,int,int,LayoutLog)",1,1,1
"com.android.ide.common.rendering.api.RenderParams.RenderParams(RenderParams)",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getAppIcon()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getAppLabel()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getConfigScreenSize()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getDensity()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getHardwareConfig()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getImageFactory()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getLocale()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getLog()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getMinSdkVersion()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getOverrideBgColor()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getProjectCallback()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getProjectKey()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getResources()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getScreenHeight()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getScreenWidth()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getTargetSdkVersion()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getTimeout()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getXdpi()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.getYdpi()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.isBgColorOverridden()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.isForceNoDecor()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.setAppIcon(String)",1,1,1
"com.android.ide.common.rendering.api.RenderParams.setAppLabel(String)",1,1,1
"com.android.ide.common.rendering.api.RenderParams.setForceNoDecor()",1,1,1
"com.android.ide.common.rendering.api.RenderParams.setImageFactory(IImageFactory)",1,1,1
"com.android.ide.common.rendering.api.RenderParams.setLocale(String)",1,1,1
"com.android.ide.common.rendering.api.RenderParams.setOverrideBgColor(int)",1,1,1
"com.android.ide.common.rendering.api.RenderParams.setTimeout(long)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.FrameworkResourceIdProvider.getId(ResourceType,String)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.findItemInStyle(StyleResourceValue,String)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.findItemInStyle(StyleResourceValue,String,boolean)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.findItemInTheme(String)",2,2,2
"com.android.ide.common.rendering.api.RenderResources.findItemInTheme(String,boolean)",2,2,2
"com.android.ide.common.rendering.api.RenderResources.findResValue(String,boolean)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.getCurrentTheme()",1,1,1
"com.android.ide.common.rendering.api.RenderResources.getFrameworkResource(ResourceType,String)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.getProjectResource(ResourceType,String)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.getTheme(String,boolean)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.resolveResValue(ResourceValue)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.resolveValue(ResourceType,String,String,boolean)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.setFrameworkResourceIdProvider(FrameworkResourceIdProvider)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.setLogger(LayoutLog)",1,1,1
"com.android.ide.common.rendering.api.RenderResources.themeIsParentOf(StyleResourceValue,StyleResourceValue)",1,1,1
"com.android.ide.common.rendering.api.RenderSession.animate(Object,String,boolean,IAnimationListener)",1,1,1
"com.android.ide.common.rendering.api.RenderSession.dispose()",1,1,1
"com.android.ide.common.rendering.api.RenderSession.getDefaultProperties(Object)",1,1,1
"com.android.ide.common.rendering.api.RenderSession.getImage()",1,1,1
"com.android.ide.common.rendering.api.RenderSession.getProperty(Object,String)",1,1,1
"com.android.ide.common.rendering.api.RenderSession.getResult()",1,1,1
"com.android.ide.common.rendering.api.RenderSession.getRootViews()",1,1,1
"com.android.ide.common.rendering.api.RenderSession.insertChild(Object,ILayoutPullParser,int,IAnimationListener)",1,1,1
"com.android.ide.common.rendering.api.RenderSession.isAlphaChannelImage()",1,1,1
"com.android.ide.common.rendering.api.RenderSession.moveChild(Object,Object,int,Map<String, String>,IAnimationListener)",1,1,1
"com.android.ide.common.rendering.api.RenderSession.removeChild(Object,IAnimationListener)",1,1,1
"com.android.ide.common.rendering.api.RenderSession.render()",1,1,1
"com.android.ide.common.rendering.api.RenderSession.render(long)",1,1,1
"com.android.ide.common.rendering.api.RenderSession.setProperty(Object,String,String)",1,1,1
"com.android.ide.common.rendering.api.ResourceReference.ResourceReference(String)",1,1,1
"com.android.ide.common.rendering.api.ResourceReference.ResourceReference(String,boolean)",1,1,1
"com.android.ide.common.rendering.api.ResourceReference.equals(Object)",8,2,8
"com.android.ide.common.rendering.api.ResourceReference.getName()",1,1,1
"com.android.ide.common.rendering.api.ResourceReference.hashCode()",1,2,3
"com.android.ide.common.rendering.api.ResourceReference.isFramework()",1,1,1
"com.android.ide.common.rendering.api.ResourceReference.toString()",1,1,1
"com.android.ide.common.rendering.api.ResourceValue.ResourceValue(ResourceType,String,String,boolean)",1,1,1
"com.android.ide.common.rendering.api.ResourceValue.ResourceValue(ResourceType,String,boolean)",1,1,1
"com.android.ide.common.rendering.api.ResourceValue.equals(Object)",10,3,10
"com.android.ide.common.rendering.api.ResourceValue.getResourceType()",1,1,1
"com.android.ide.common.rendering.api.ResourceValue.getType()",1,1,1
"com.android.ide.common.rendering.api.ResourceValue.getValue()",1,1,1
"com.android.ide.common.rendering.api.ResourceValue.hashCode()",1,3,3
"com.android.ide.common.rendering.api.ResourceValue.replaceWith(ResourceValue)",1,1,1
"com.android.ide.common.rendering.api.ResourceValue.setValue(String)",1,1,1
"com.android.ide.common.rendering.api.ResourceValue.toString()",1,1,1
"com.android.ide.common.rendering.api.Result.Result(Result)",1,1,1
"com.android.ide.common.rendering.api.Result.Result(Status)",1,1,1
"com.android.ide.common.rendering.api.Result.Result(Status,String,Throwable)",1,1,1
"com.android.ide.common.rendering.api.Result.Status.createResult()",1,1,2
"com.android.ide.common.rendering.api.Result.Status.createResult(Object)",1,2,2
"com.android.ide.common.rendering.api.Result.Status.createResult(String)",1,1,1
"com.android.ide.common.rendering.api.Result.Status.createResult(String,Throwable)",1,1,1
"com.android.ide.common.rendering.api.Result.getCopyWithData(Object)",1,1,1
"com.android.ide.common.rendering.api.Result.getData()",1,1,1
"com.android.ide.common.rendering.api.Result.getErrorMessage()",1,1,1
"com.android.ide.common.rendering.api.Result.getException()",1,1,1
"com.android.ide.common.rendering.api.Result.getStatus()",1,1,1
"com.android.ide.common.rendering.api.Result.isSuccess()",1,1,1
"com.android.ide.common.rendering.api.SessionParams.RenderingMode.RenderingMode(boolean,boolean)",1,1,1
"com.android.ide.common.rendering.api.SessionParams.RenderingMode.isHorizExpand()",1,1,1
"com.android.ide.common.rendering.api.SessionParams.RenderingMode.isVertExpand()",1,1,1
"com.android.ide.common.rendering.api.SessionParams.SessionParams(ILayoutPullParser,RenderingMode,Object,HardwareConfig,RenderResources,IProjectCallback,int,int,LayoutLog)",1,1,1
"com.android.ide.common.rendering.api.SessionParams.SessionParams(SessionParams)",1,1,2
"com.android.ide.common.rendering.api.SessionParams.addAdapterBinding(ResourceReference,AdapterBinding)",1,1,2
"com.android.ide.common.rendering.api.SessionParams.getAdapterBindings()",2,2,2
"com.android.ide.common.rendering.api.SessionParams.getExtendedViewInfoMode()",1,1,1
"com.android.ide.common.rendering.api.SessionParams.getLayoutDescription()",1,1,1
"com.android.ide.common.rendering.api.SessionParams.getRenderingMode()",1,1,1
"com.android.ide.common.rendering.api.SessionParams.isLayoutOnly()",1,1,1
"com.android.ide.common.rendering.api.SessionParams.setExtendedViewInfoMode(boolean)",1,1,1
"com.android.ide.common.rendering.api.SessionParams.setLayoutOnly()",1,1,1
"com.android.ide.common.rendering.api.StyleResourceValue.StyleResourceValue(ResourceType,String,String,boolean)",1,1,1
"com.android.ide.common.rendering.api.StyleResourceValue.StyleResourceValue(ResourceType,String,boolean)",1,1,1
"com.android.ide.common.rendering.api.StyleResourceValue.addValue(ResourceValue,boolean)",1,1,1
"com.android.ide.common.rendering.api.StyleResourceValue.findItem(String)",1,1,1
"com.android.ide.common.rendering.api.StyleResourceValue.findValue(String)",1,1,1
"com.android.ide.common.rendering.api.StyleResourceValue.findValue(String,boolean)",1,1,1
"com.android.ide.common.rendering.api.StyleResourceValue.getParentStyle()",1,1,1
"com.android.ide.common.rendering.api.StyleResourceValue.replaceWith(ResourceValue)",1,2,2
"com.android.ide.common.rendering.api.ViewInfo.ViewInfo(String,Object,int,int,int,int)",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.ViewInfo(String,Object,int,int,int,int,Object,Object)",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getBaseLine()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getBottom()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getBottomMargin()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getChildren()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getClassName()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getCookie()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getLayoutParamsObject()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getLeft()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getLeftMargin()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getRight()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getRightMargin()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getTop()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getTopMargin()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.getViewObject()",1,1,1
"com.android.ide.common.rendering.api.ViewInfo.setChildren(List<ViewInfo>)",1,2,2
"com.android.ide.common.rendering.api.ViewInfo.setExtendedInfo(int,int,int,int,int)",1,1,1
"com.android.ide.common.rendering.legacy.LegacyCallback.getResourceValue(String,String)",1,1,1
"com.android.ide.common.rendering.legacy.LegacyCallback.resolveResourceValue(int)",2,2,2
"com.android.ide.common.rendering.legacy.LegacyCallback.resolveResourceValue(int[])",1,1,1
"com.android.ide.common.resources.FrameworkResourceItem.FrameworkResourceItem(String)",1,1,1
"com.android.ide.common.resources.FrameworkResourceItem.isEditableDirectly()",1,1,1
"com.android.ide.common.resources.FrameworkResourceItem.toString()",1,1,1
"com.android.ide.common.resources.FrameworkResources.FrameworkResources(IAbstractFolder)",1,1,1
"com.android.ide.common.resources.FrameworkResources.createResourceItem(String)",1,1,1
"com.android.ide.common.resources.FrameworkResources.getResourceItemsOfType(ResourceType)",1,1,1
"com.android.ide.common.resources.FrameworkResources.hasResourcesOfType(ResourceType)",1,1,1
"com.android.ide.common.resources.FrameworkResources.loadPublicResources(ILogger)",11,19,30
"com.android.ide.common.resources.IdGeneratingResourceFile.IdGeneratingResourceFile(IAbstractFile,ResourceFolder,ResourceType)",1,1,1
"com.android.ide.common.resources.IdGeneratingResourceFile.addResourceValue(ResourceValue)",1,1,1
"com.android.ide.common.resources.IdGeneratingResourceFile.dispose(ScanningContext)",1,1,1
"com.android.ide.common.resources.IdGeneratingResourceFile.getFileName(ResourceType)",1,2,2
"com.android.ide.common.resources.IdGeneratingResourceFile.getFileValue(IAbstractFile,ResourceFolder)",1,2,2
"com.android.ide.common.resources.IdGeneratingResourceFile.getResourceTypes()",1,1,1
"com.android.ide.common.resources.IdGeneratingResourceFile.getValue(ResourceType,String)",3,3,5
"com.android.ide.common.resources.IdGeneratingResourceFile.hasResourceValue(ResourceType,String)",2,2,2
"com.android.ide.common.resources.IdGeneratingResourceFile.hasResources(ResourceType)",1,3,3
"com.android.ide.common.resources.IdGeneratingResourceFile.load(ScanningContext)",1,1,1
"com.android.ide.common.resources.IdGeneratingResourceFile.parseFileForIds(ScanningContext)",1,1,3
"com.android.ide.common.resources.IdGeneratingResourceFile.update(ScanningContext)",1,3,3
"com.android.ide.common.resources.IdGeneratingResourceFile.updateResourceItems(ScanningContext)",1,2,2
"com.android.ide.common.resources.IdResourceParser.IdResourceParser(IValueResourceRepository,ScanningContext,boolean)",1,1,1
"com.android.ide.common.resources.IdResourceParser.parse(ResourceType,String,InputStream)",1,4,5
"com.android.ide.common.resources.IdResourceParser.parse(ResourceType,String,KXmlParser)",4,8,9
"com.android.ide.common.resources.InlineResourceItem.InlineResourceItem(String)",1,1,1
"com.android.ide.common.resources.InlineResourceItem.getResourceValue(ResourceType,FolderConfiguration,boolean)",1,2,2
"com.android.ide.common.resources.InlineResourceItem.isDeclaredInline()",1,1,1
"com.android.ide.common.resources.InlineResourceItem.isEditableDirectly()",1,1,1
"com.android.ide.common.resources.InlineResourceItem.toString()",1,1,1
"com.android.ide.common.resources.IntArrayWrapper.IntArrayWrapper(int[])",1,1,1
"com.android.ide.common.resources.IntArrayWrapper.equals(Object)",3,2,3
"com.android.ide.common.resources.IntArrayWrapper.hashCode()",1,1,1
"com.android.ide.common.resources.IntArrayWrapper.set(int[])",1,1,1
"com.android.ide.common.resources.MultiResourceFile.MultiResourceFile(IAbstractFile,ResourceFolder)",1,1,1
"com.android.ide.common.resources.MultiResourceFile.addResourceValue(ResourceValue)",3,3,3
"com.android.ide.common.resources.MultiResourceFile.dispose(ScanningContext)",1,1,1
"com.android.ide.common.resources.MultiResourceFile.getResourceTypes()",1,1,1
"com.android.ide.common.resources.MultiResourceFile.getValue(ResourceType,String)",2,2,2
"com.android.ide.common.resources.MultiResourceFile.hasResourceValue(ResourceType,String)",1,2,2
"com.android.ide.common.resources.MultiResourceFile.hasResources(ResourceType)",1,2,2
"com.android.ide.common.resources.MultiResourceFile.load(ScanningContext)",1,1,1
"com.android.ide.common.resources.MultiResourceFile.parseFile()",1,1,5
"com.android.ide.common.resources.MultiResourceFile.update(ScanningContext)",1,3,4
"com.android.ide.common.resources.MultiResourceFile.updateResourceItems(ScanningContext)",1,5,5
"com.android.ide.common.resources.ResourceFile.ResourceFile(IAbstractFile,ResourceFolder)",1,1,1
"com.android.ide.common.resources.ResourceFile.getConfiguration()",1,1,1
"com.android.ide.common.resources.ResourceFile.getFile()",1,1,1
"com.android.ide.common.resources.ResourceFile.getFolder()",1,1,1
"com.android.ide.common.resources.ResourceFile.getRepository()",1,1,1
"com.android.ide.common.resources.ResourceFile.isFramework()",1,1,1
"com.android.ide.common.resources.ResourceFile.toString()",1,1,1
"com.android.ide.common.resources.ResourceFolder.ResourceFolder(ResourceFolderType,FolderConfiguration,IAbstractFolder,ResourceRepository)",1,1,1
"com.android.ide.common.resources.ResourceFolder.addFile(ResourceFile)",2,8,14
"com.android.ide.common.resources.ResourceFolder.createResourceFile(IAbstractFile)",1,3,4
"com.android.ide.common.resources.ResourceFolder.dispose(ScanningContext)",1,3,3
"com.android.ide.common.resources.ResourceFolder.getConfiguration()",1,1,1
"com.android.ide.common.resources.ResourceFolder.getFile(IAbstractFile,ScanningContext)",4,3,4
"com.android.ide.common.resources.ResourceFolder.getFile(String)",4,4,5
"com.android.ide.common.resources.ResourceFolder.getFolder()",1,1,1
"com.android.ide.common.resources.ResourceFolder.getRepository()",1,1,1
"com.android.ide.common.resources.ResourceFolder.getResourceTypes()",1,5,5
"com.android.ide.common.resources.ResourceFolder.getType()",1,1,1
"com.android.ide.common.resources.ResourceFolder.hasFile(String)",2,2,3
"com.android.ide.common.resources.ResourceFolder.hasResources(ResourceType)",7,4,7
"com.android.ide.common.resources.ResourceFolder.processFile(IAbstractFile,ResourceDeltaKind,ScanningContext)",1,4,4
"com.android.ide.common.resources.ResourceFolder.removeFile(ResourceFile,ScanningContext)",1,1,1
"com.android.ide.common.resources.ResourceFolder.toString()",1,1,1
"com.android.ide.common.resources.ResourceItem.ResourceItem(String)",1,1,1
"com.android.ide.common.resources.ResourceItem.add(ResourceFile)",1,1,1
"com.android.ide.common.resources.ResourceItem.compareTo(ResourceItem)",1,1,1
"com.android.ide.common.resources.ResourceItem.getAlternateCount()",1,2,3
"com.android.ide.common.resources.ResourceItem.getName()",1,1,1
"com.android.ide.common.resources.ResourceItem.getResourceValue(ResourceType,FolderConfiguration,boolean)",2,2,2
"com.android.ide.common.resources.ResourceItem.getSourceFileArray()",1,1,1
"com.android.ide.common.resources.ResourceItem.getSourceFileList()",1,1,1
"com.android.ide.common.resources.ResourceItem.getXmlString(ResourceType,boolean)",2,3,5
"com.android.ide.common.resources.ResourceItem.hasAlternates()",3,2,3
"com.android.ide.common.resources.ResourceItem.hasDefault()",3,2,3
"com.android.ide.common.resources.ResourceItem.hasNoSourceFile()",1,1,1
"com.android.ide.common.resources.ResourceItem.isDeclaredInline()",1,1,1
"com.android.ide.common.resources.ResourceItem.isEditableDirectly()",1,1,1
"com.android.ide.common.resources.ResourceItem.removeFile(ResourceFile)",1,1,1
"com.android.ide.common.resources.ResourceItem.reset()",1,1,1
"com.android.ide.common.resources.ResourceItem.toString()",1,1,1
"com.android.ide.common.resources.ResourceRepository.ResourceRepository(IAbstractFolder,boolean)",1,1,1
"com.android.ide.common.resources.ResourceRepository.add(ResourceFolderType,FolderConfiguration,IAbstractFolder)",4,3,4
"com.android.ide.common.resources.ResourceRepository.clear()",1,1,1
"com.android.ide.common.resources.ResourceRepository.doGetConfiguredResources(FolderConfiguration)",1,2,2
"com.android.ide.common.resources.ResourceRepository.ensureInitialized()",2,7,8
"com.android.ide.common.resources.ResourceRepository.findDeclaredResourceItem(ResourceType,String)",3,3,4
"com.android.ide.common.resources.ResourceRepository.findResourceFile(File)",4,3,4
"com.android.ide.common.resources.ResourceRepository.getAvailableResourceTypes()",1,8,8
"com.android.ide.common.resources.ResourceRepository.getConfiguredResource(ResourceType,FolderConfiguration)",2,3,4
"com.android.ide.common.resources.ResourceRepository.getConfiguredResources(FolderConfiguration)",1,1,1
"com.android.ide.common.resources.ResourceRepository.getFolders(ResourceFolderType)",1,1,1
"com.android.ide.common.resources.ResourceRepository.getLanguages()",1,4,4
"com.android.ide.common.resources.ResourceRepository.getMatchingFile(String,ResourceFolderType,FolderConfiguration)",4,2,4
"com.android.ide.common.resources.ResourceRepository.getMatchingFile(String,ResourceType,FolderConfiguration)",14,12,15
"com.android.ide.common.resources.ResourceRepository.getRegions(String)",1,6,6
"com.android.ide.common.resources.ResourceRepository.getResFolder()",1,1,1
"com.android.ide.common.resources.ResourceRepository.getResourceFolder(IAbstractFolder)",4,3,4
"com.android.ide.common.resources.ResourceRepository.getResourceItem(ResourceType,String)",2,7,31
"com.android.ide.common.resources.ResourceRepository.getResourceItemsOfType(ResourceType)",2,3,3
"com.android.ide.common.resources.ResourceRepository.getSourceFiles(ResourceType,String,FolderConfiguration)",5,5,5
"com.android.ide.common.resources.ResourceRepository.hasResourceItem(ResourceType,String)",3,2,3
"com.android.ide.common.resources.ResourceRepository.hasResourceItem(String)",3,4,6
"com.android.ide.common.resources.ResourceRepository.hasResourcesOfType(ResourceType)",1,2,2
"com.android.ide.common.resources.ResourceRepository.isFrameworkRepository()",1,1,1
"com.android.ide.common.resources.ResourceRepository.loadResources()",1,1,1
"com.android.ide.common.resources.ResourceRepository.parseResource(String)",8,6,11
"com.android.ide.common.resources.ResourceRepository.postUpdateCleanUp()",1,4,4
"com.android.ide.common.resources.ResourceRepository.processFolder(IAbstractFolder)",3,3,3
"com.android.ide.common.resources.ResourceRepository.removeFile(Collection<ResourceType>,ResourceFile)",1,2,2
"com.android.ide.common.resources.ResourceRepository.removeFile(ResourceType,ResourceFile)",1,3,3
"com.android.ide.common.resources.ResourceRepository.removeFolder(ResourceFolderType,IAbstractFolder,ScanningContext)",4,4,4
"com.android.ide.common.resources.ResourceResolver.ResourceResolver(Map<ResourceType, Map<String, ResourceValue>>,Map<ResourceType, Map<String, ResourceValue>>)",1,1,1
"com.android.ide.common.resources.ResourceResolver.computeStyleInheritance(Collection<ResourceValue>,Map<String, ResourceValue>,Map<String, ResourceValue>)",1,6,6
"com.android.ide.common.resources.ResourceResolver.computeStyleMaps(String,boolean)",1,3,3
"com.android.ide.common.resources.ResourceResolver.create(Map<ResourceType, Map<String, ResourceValue>>,Map<ResourceType, Map<String, ResourceValue>>,String,boolean)",1,1,1
"com.android.ide.common.resources.ResourceResolver.findItemInStyle(StyleResourceValue,String)",1,2,2
"com.android.ide.common.resources.ResourceResolver.findItemInStyle(StyleResourceValue,String,boolean)",3,3,4
"com.android.ide.common.resources.ResourceResolver.findResValue(ResourceType,String,boolean)",6,4,9
"com.android.ide.common.resources.ResourceResolver.findResValue(String,boolean)",10,9,18
"com.android.ide.common.resources.ResourceResolver.getCurrentTheme()",1,1,1
"com.android.ide.common.resources.ResourceResolver.getFrameworkResource(ResourceType,String)",1,1,1
"com.android.ide.common.resources.ResourceResolver.getFrameworkResources()",1,1,1
"com.android.ide.common.resources.ResourceResolver.getParentName(String)",2,2,2
"com.android.ide.common.resources.ResourceResolver.getProjectResource(ResourceType,String)",1,1,1
"com.android.ide.common.resources.ResourceResolver.getProjectResources()",1,1,1
"com.android.ide.common.resources.ResourceResolver.getResource(ResourceType,String,Map<ResourceType, Map<String, ResourceValue>>)",3,3,3
"com.android.ide.common.resources.ResourceResolver.getStyle(String,Map<String, ResourceValue>,Map<String, ResourceValue>)",4,7,10
"com.android.ide.common.resources.ResourceResolver.getTheme(String,boolean)",2,2,3
"com.android.ide.common.resources.ResourceResolver.getThemeName()",1,1,1
"com.android.ide.common.resources.ResourceResolver.isProjectTheme()",1,1,1
"com.android.ide.common.resources.ResourceResolver.resolveResValue(ResourceValue)",5,3,6
"com.android.ide.common.resources.ResourceResolver.resolveValue(ResourceType,String,String,boolean)",3,1,3
"com.android.ide.common.resources.ResourceResolver.setFrameworkResourceIdProvider(FrameworkResourceIdProvider)",1,1,1
"com.android.ide.common.resources.ResourceResolver.setLogger(LayoutLog)",1,1,1
"com.android.ide.common.resources.ResourceResolver.themeIsParentOf(StyleResourceValue,StyleResourceValue)",4,2,4
"com.android.ide.common.resources.ScanningContext.ScanningContext(ResourceRepository)",1,1,1
"com.android.ide.common.resources.ScanningContext.addError(String)",1,1,2
"com.android.ide.common.resources.ScanningContext.checkValue(String,String,String)",1,1,1
"com.android.ide.common.resources.ScanningContext.getErrors()",1,1,1
"com.android.ide.common.resources.ScanningContext.getRepository()",1,1,1
"com.android.ide.common.resources.ScanningContext.needsFullAapt()",1,1,1
"com.android.ide.common.resources.ScanningContext.requestFullAapt()",1,1,1
"com.android.ide.common.resources.SingleResourceFile.SingleResourceFile(IAbstractFile,ResourceFolder)",1,2,2
"com.android.ide.common.resources.SingleResourceFile.dispose(ScanningContext)",1,1,1
"com.android.ide.common.resources.SingleResourceFile.getResourceName(ResourceType)",1,2,2
"com.android.ide.common.resources.SingleResourceFile.getResourceTypes()",1,1,1
"com.android.ide.common.resources.SingleResourceFile.getValue(ResourceType,String)",1,1,1
"com.android.ide.common.resources.SingleResourceFile.hasResources(ResourceType)",1,1,1
"com.android.ide.common.resources.SingleResourceFile.load(ScanningContext)",1,1,1
"com.android.ide.common.resources.SingleResourceFile.update(ScanningContext)",1,1,1
"com.android.ide.common.resources.SingleResourceFile.validateAttributes(ScanningContext)",2,4,4
"com.android.ide.common.resources.ValidatingResourceParser.ValidatingResourceParser(ScanningContext,boolean)",1,1,1
"com.android.ide.common.resources.ValidatingResourceParser.parse(String,InputStream)",3,4,7
"com.android.ide.common.resources.ValidatingResourceParser.parse(String,KXmlParser)",7,7,8
"com.android.ide.common.resources.ValueResourceParser.ValueResourceParser(IValueResourceRepository,boolean)",1,1,1
"com.android.ide.common.resources.ValueResourceParser.characters(char[],int,int)",1,3,3
"com.android.ide.common.resources.ValueResourceParser.endElement(String,String,String)",1,3,7
"com.android.ide.common.resources.ValueResourceParser.getType(String,Attributes)",1,2,2
"com.android.ide.common.resources.ValueResourceParser.startElement(String,String,String,Attributes)",2,14,23
"com.android.ide.common.resources.ValueResourceParser.trimXmlWhitespaces(String)",7,12,20
"com.android.ide.common.resources.configuration.CountryCodeQualifier.CountryCodeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.CountryCodeQualifier(int)",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.CountryCodeQualifier.equals(Object)",2,1,2
"com.android.ide.common.resources.configuration.CountryCodeQualifier.getCode()",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.getFolderSegment()",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.getFolderSegment(int)",2,2,4
"com.android.ide.common.resources.configuration.CountryCodeQualifier.getLongDisplayValue()",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.getQualifier(String)",2,2,3
"com.android.ide.common.resources.configuration.CountryCodeQualifier.getShortDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.CountryCodeQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.hashCode()",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.isValid()",1,1,1
"com.android.ide.common.resources.configuration.CountryCodeQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.DensityQualifier.DensityQualifier()",1,1,1
"com.android.ide.common.resources.configuration.DensityQualifier.DensityQualifier(Density)",1,1,1
"com.android.ide.common.resources.configuration.DensityQualifier.checkAndSet(String,FolderConfiguration)",2,4,5
"com.android.ide.common.resources.configuration.DensityQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.DensityQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.DensityQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.DensityQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.DensityQualifier.isBetterMatchThan(ResourceQualifier,ResourceQualifier)",4,3,4
"com.android.ide.common.resources.configuration.DensityQualifier.isMatchFor(ResourceQualifier)",2,1,2
"com.android.ide.common.resources.configuration.DensityQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.DeviceConfigHelper.getFolderConfig(Device)",1,1,1
"com.android.ide.common.resources.configuration.DeviceConfigHelper.getFolderConfig(Device,String)",1,1,1
"com.android.ide.common.resources.configuration.DeviceConfigHelper.getFolderConfig(State)",2,2,3
"com.android.ide.common.resources.configuration.EnumBasedResourceQualifier.equals(Object)",2,2,2
"com.android.ide.common.resources.configuration.EnumBasedResourceQualifier.getFolderSegment()",2,2,2
"com.android.ide.common.resources.configuration.EnumBasedResourceQualifier.getLongDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.EnumBasedResourceQualifier.getShortDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.EnumBasedResourceQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.EnumBasedResourceQualifier.hashCode()",2,2,2
"com.android.ide.common.resources.configuration.EnumBasedResourceQualifier.isValid()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.add(FolderConfiguration)",1,1,3
"com.android.ide.common.resources.configuration.FolderConfiguration.addQualifier(ResourceQualifier)",1,1,22
"com.android.ide.common.resources.configuration.FolderConfiguration.checkRegion()",2,1,3
"com.android.ide.common.resources.configuration.FolderConfiguration.compareTo(FolderConfiguration)",8,5,8
"com.android.ide.common.resources.configuration.FolderConfiguration.createDefault()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.equals(Object)",7,4,7
"com.android.ide.common.resources.configuration.FolderConfiguration.findMatchingConfigurable(List<? extends Configurable>)",7,14,18
"com.android.ide.common.resources.configuration.FolderConfiguration.getConfig(Iterable<String>)",4,5,7
"com.android.ide.common.resources.configuration.FolderConfiguration.getConfig(String[])",4,4,6
"com.android.ide.common.resources.configuration.FolderConfiguration.getCountryCodeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getDensityQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getFolderName(ResourceFolderType)",1,5,5
"com.android.ide.common.resources.configuration.FolderConfiguration.getHighestPriorityQualifier(int)",3,1,3
"com.android.ide.common.resources.configuration.FolderConfiguration.getInvalidQualifier()",3,3,4
"com.android.ide.common.resources.configuration.FolderConfiguration.getKeyboardStateQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getLanguageQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getLayoutDirectionQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getNavigationMethodQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getNavigationStateQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getNetworkCodeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getNightModeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getQualifier(int)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getQualifierCount()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getQualifiers()",1,1,5
"com.android.ide.common.resources.configuration.FolderConfiguration.getRegionQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getScreenDimensionQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getScreenHeightQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getScreenOrientationQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getScreenRatioQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getScreenSizeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getScreenWidthQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getSmallestScreenWidthQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getTextInputMethodQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getTouchTypeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getUiModeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.getVersionQualifier()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.hashCode()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.isDefault()",3,1,3
"com.android.ide.common.resources.configuration.FolderConfiguration.isMatchFor(FolderConfiguration)",4,4,6
"com.android.ide.common.resources.configuration.FolderConfiguration.removeQualifier(ResourceQualifier)",3,1,3
"com.android.ide.common.resources.configuration.FolderConfiguration.reset()",1,1,2
"com.android.ide.common.resources.configuration.FolderConfiguration.set(FolderConfiguration)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.set(FolderConfiguration,boolean)",1,5,6
"com.android.ide.common.resources.configuration.FolderConfiguration.setCountryCodeQualifier(CountryCodeQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setDensityQualifier(DensityQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setKeyboardStateQualifier(KeyboardStateQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setLanguageQualifier(LanguageQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setLayoutDirectionQualifier(LayoutDirectionQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setNavigationMethodQualifier(NavigationMethodQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setNavigationStateQualifier(NavigationStateQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setNetworkCodeQualifier(NetworkCodeQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setNightModeQualifier(NightModeQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setRegionQualifier(RegionQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setScreenDimensionQualifier(ScreenDimensionQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setScreenHeightQualifier(ScreenHeightQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setScreenOrientationQualifier(ScreenOrientationQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setScreenRatioQualifier(ScreenRatioQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setScreenSizeQualifier(ScreenSizeQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setScreenWidthQualifier(ScreenWidthQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setSmallestScreenWidthQualifier(SmallestScreenWidthQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setTextInputMethodQualifier(TextInputMethodQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setTouchTypeQualifier(TouchScreenQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setUiModeQualifier(UiModeQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.setVersionQualifier(VersionQualifier)",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.substract(FolderConfiguration)",1,3,4
"com.android.ide.common.resources.configuration.FolderConfiguration.toDisplayString()",2,10,12
"com.android.ide.common.resources.configuration.FolderConfiguration.toString()",1,1,1
"com.android.ide.common.resources.configuration.FolderConfiguration.updateScreenWidthAndHeight()",4,3,9
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.KeyboardStateQualifier()",1,1,1
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.KeyboardStateQualifier(KeyboardState)",1,1,1
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.isBetterMatchThan(ResourceQualifier,ResourceQualifier)",4,1,5
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.isMatchFor(ResourceQualifier)",3,1,4
"com.android.ide.common.resources.configuration.KeyboardStateQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.LanguageQualifier.LanguageQualifier()",1,1,1
"com.android.ide.common.resources.configuration.LanguageQualifier.LanguageQualifier(String)",1,1,1
"com.android.ide.common.resources.configuration.LanguageQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.LanguageQualifier.equals(Object)",3,2,3
"com.android.ide.common.resources.configuration.LanguageQualifier.getFolderSegment()",2,2,2
"com.android.ide.common.resources.configuration.LanguageQualifier.getFolderSegment(String)",2,1,2
"com.android.ide.common.resources.configuration.LanguageQualifier.getLongDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.LanguageQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.LanguageQualifier.getQualifier(String)",2,1,2
"com.android.ide.common.resources.configuration.LanguageQualifier.getShortDisplayValue()",2,1,2
"com.android.ide.common.resources.configuration.LanguageQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.LanguageQualifier.getValue()",2,1,2
"com.android.ide.common.resources.configuration.LanguageQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.LanguageQualifier.hashCode()",2,2,2
"com.android.ide.common.resources.configuration.LanguageQualifier.isValid()",1,1,1
"com.android.ide.common.resources.configuration.LanguageQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.LayoutDirectionQualifier.LayoutDirectionQualifier()",1,1,1
"com.android.ide.common.resources.configuration.LayoutDirectionQualifier.LayoutDirectionQualifier(LayoutDirection)",1,1,1
"com.android.ide.common.resources.configuration.LayoutDirectionQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.LayoutDirectionQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.LayoutDirectionQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.LayoutDirectionQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.LayoutDirectionQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.LayoutDirectionQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.NavigationMethodQualifier.NavigationMethodQualifier()",1,1,1
"com.android.ide.common.resources.configuration.NavigationMethodQualifier.NavigationMethodQualifier(Navigation)",1,1,1
"com.android.ide.common.resources.configuration.NavigationMethodQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.NavigationMethodQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.NavigationMethodQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.NavigationMethodQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.NavigationMethodQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.NavigationMethodQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.NavigationStateQualifier.NavigationStateQualifier()",1,1,1
"com.android.ide.common.resources.configuration.NavigationStateQualifier.NavigationStateQualifier(NavigationState)",1,1,1
"com.android.ide.common.resources.configuration.NavigationStateQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.NavigationStateQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.NavigationStateQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.NavigationStateQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.NavigationStateQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.NavigationStateQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.NetworkCodeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.NetworkCodeQualifier(int)",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.checkAndSet(String,FolderConfiguration)",2,2,3
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.equals(Object)",2,1,2
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.getCode()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.getFolderSegment()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.getFolderSegment(int)",2,2,4
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.getLongDisplayValue()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.getQualifier(String)",2,2,3
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.getShortDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.hashCode()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.isValid()",1,1,1
"com.android.ide.common.resources.configuration.NetworkCodeQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.NightModeQualifier.NightModeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.NightModeQualifier.NightModeQualifier(NightMode)",1,1,1
"com.android.ide.common.resources.configuration.NightModeQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.NightModeQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.NightModeQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.NightModeQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.NightModeQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.NightModeQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.RegionQualifier.RegionQualifier()",1,1,1
"com.android.ide.common.resources.configuration.RegionQualifier.RegionQualifier(String)",1,1,1
"com.android.ide.common.resources.configuration.RegionQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.RegionQualifier.equals(Object)",3,2,3
"com.android.ide.common.resources.configuration.RegionQualifier.getFolderSegment()",1,1,1
"com.android.ide.common.resources.configuration.RegionQualifier.getFolderSegment(String)",3,2,3
"com.android.ide.common.resources.configuration.RegionQualifier.getLongDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.RegionQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.RegionQualifier.getQualifier(String)",2,2,2
"com.android.ide.common.resources.configuration.RegionQualifier.getShortDisplayValue()",2,1,2
"com.android.ide.common.resources.configuration.RegionQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.RegionQualifier.getValue()",2,1,2
"com.android.ide.common.resources.configuration.RegionQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.RegionQualifier.hashCode()",2,2,2
"com.android.ide.common.resources.configuration.RegionQualifier.isValid()",1,1,1
"com.android.ide.common.resources.configuration.RegionQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.ResourceQualifier.compareTo(ResourceQualifier)",1,1,1
"com.android.ide.common.resources.configuration.ResourceQualifier.deprecated()",1,1,1
"com.android.ide.common.resources.configuration.ResourceQualifier.isBetterMatchThan(ResourceQualifier,ResourceQualifier)",1,1,1
"com.android.ide.common.resources.configuration.ResourceQualifier.isMatchFor(ResourceQualifier)",1,1,1
"com.android.ide.common.resources.configuration.ResourceQualifier.toString()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.ScreenDimensionQualifier()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.ScreenDimensionQualifier(int,int)",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.checkAndSet(String,FolderConfiguration)",3,3,3
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.deprecated()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.equals(Object)",2,1,3
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.getFolderSegment()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.getLongDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.getQualifier(String,String)",1,1,3
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.getShortDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.getValue1()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.getValue2()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.hashCode()",1,1,1
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.isValid()",1,1,2
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.ScreenHeightQualifier()",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.ScreenHeightQualifier(int)",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.checkAndSet(String,FolderConfiguration)",3,3,3
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.equals(Object)",5,1,5
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.getFolderSegment()",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.getLongDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.getQualifier(String)",1,1,2
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.getShortDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.hashCode()",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.isBetterMatchThan(ResourceQualifier,ResourceQualifier)",4,1,4
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.isMatchFor(ResourceQualifier)",2,1,2
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.isValid()",1,1,1
"com.android.ide.common.resources.configuration.ScreenHeightQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.ScreenOrientationQualifier.ScreenOrientationQualifier()",1,1,1
"com.android.ide.common.resources.configuration.ScreenOrientationQualifier.ScreenOrientationQualifier(ScreenOrientation)",1,1,1
"com.android.ide.common.resources.configuration.ScreenOrientationQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.ScreenOrientationQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenOrientationQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenOrientationQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenOrientationQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenOrientationQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.ScreenRatioQualifier.ScreenRatioQualifier()",1,1,1
"com.android.ide.common.resources.configuration.ScreenRatioQualifier.ScreenRatioQualifier(ScreenRatio)",1,1,1
"com.android.ide.common.resources.configuration.ScreenRatioQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.ScreenRatioQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenRatioQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenRatioQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenRatioQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenRatioQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.ScreenSizeQualifier.ScreenSizeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.ScreenSizeQualifier.ScreenSizeQualifier(ScreenSize)",1,1,1
"com.android.ide.common.resources.configuration.ScreenSizeQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.ScreenSizeQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenSizeQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenSizeQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenSizeQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenSizeQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.ScreenWidthQualifier()",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.ScreenWidthQualifier(int)",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.checkAndSet(String,FolderConfiguration)",3,3,3
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.equals(Object)",5,1,5
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.getFolderSegment()",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.getLongDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.getQualifier(String)",1,1,2
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.getShortDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.hashCode()",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.isBetterMatchThan(ResourceQualifier,ResourceQualifier)",4,1,4
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.isMatchFor(ResourceQualifier)",2,1,2
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.isValid()",1,1,1
"com.android.ide.common.resources.configuration.ScreenWidthQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.SmallestScreenWidthQualifier()",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.SmallestScreenWidthQualifier(int)",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.checkAndSet(String,FolderConfiguration)",3,3,3
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.equals(Object)",5,1,5
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.getFolderSegment()",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.getLongDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.getQualifier(String)",1,1,2
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.getShortDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.hashCode()",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.isBetterMatchThan(ResourceQualifier,ResourceQualifier)",4,1,4
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.isMatchFor(ResourceQualifier)",2,1,2
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.isValid()",1,1,1
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.TextInputMethodQualifier.TextInputMethodQualifier()",1,1,1
"com.android.ide.common.resources.configuration.TextInputMethodQualifier.TextInputMethodQualifier(Keyboard)",1,1,1
"com.android.ide.common.resources.configuration.TextInputMethodQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.TextInputMethodQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.TextInputMethodQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.TextInputMethodQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.TextInputMethodQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.TextInputMethodQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.TouchScreenQualifier.TouchScreenQualifier()",1,1,1
"com.android.ide.common.resources.configuration.TouchScreenQualifier.TouchScreenQualifier(TouchScreen)",1,1,1
"com.android.ide.common.resources.configuration.TouchScreenQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.TouchScreenQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.TouchScreenQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.TouchScreenQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.TouchScreenQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.TouchScreenQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.UiModeQualifier.UiModeQualifier()",1,1,1
"com.android.ide.common.resources.configuration.UiModeQualifier.UiModeQualifier(UiMode)",1,1,1
"com.android.ide.common.resources.configuration.UiModeQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.UiModeQualifier.getEnumValue()",1,1,1
"com.android.ide.common.resources.configuration.UiModeQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.UiModeQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.UiModeQualifier.getValue()",1,1,1
"com.android.ide.common.resources.configuration.UiModeQualifier.isBetterMatchThan(ResourceQualifier,ResourceQualifier)",5,1,5
"com.android.ide.common.resources.configuration.UiModeQualifier.isMatchFor(ResourceQualifier)",2,1,2
"com.android.ide.common.resources.configuration.UiModeQualifier.since()",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.VersionQualifier()",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.VersionQualifier(int)",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.checkAndSet(String,FolderConfiguration)",2,2,2
"com.android.ide.common.resources.configuration.VersionQualifier.equals(Object)",2,1,2
"com.android.ide.common.resources.configuration.VersionQualifier.getFolderSegment()",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.getFolderSegment(int)",2,2,2
"com.android.ide.common.resources.configuration.VersionQualifier.getLongDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.VersionQualifier.getName()",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.getQualifier(String)",2,2,3
"com.android.ide.common.resources.configuration.VersionQualifier.getShortDisplayValue()",2,2,2
"com.android.ide.common.resources.configuration.VersionQualifier.getShortName()",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.getVersion()",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.hasFakeValue()",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.hashCode()",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.isBetterMatchThan(ResourceQualifier,ResourceQualifier)",4,1,4
"com.android.ide.common.resources.configuration.VersionQualifier.isMatchFor(ResourceQualifier)",2,1,2
"com.android.ide.common.resources.configuration.VersionQualifier.isValid()",1,1,1
"com.android.ide.common.resources.configuration.VersionQualifier.since()",1,1,1
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.ManifestHandler(IAbstractFile,ManifestData,ManifestErrorHandler)",1,1,1
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.endElement(String,String,String)",3,6,11
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.error(SAXParseException)",1,2,2
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.fatalError(SAXParseException)",1,2,2
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.getAttributeBooleanValue(Attributes,String,boolean)",4,8,8
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.getAttributeValue(Attributes,String,boolean)",3,7,7
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.processActivityNode(Attributes)",1,5,5
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.processInstrumentationNode(Attributes)",1,3,3
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.processNode(Attributes,String)",1,4,4
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.processSupportsScreensNode(Attributes)",1,1,1
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.processUsesConfiguration(Attributes)",1,1,1
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.setDocumentLocator(Locator)",1,1,1
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.startElement(String,String,String,Attributes)",3,30,40
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler.warning(SAXParseException)",1,2,2
"com.android.ide.common.xml.AndroidManifestParser.parse(IAbstractFile)",1,1,1
"com.android.ide.common.xml.AndroidManifestParser.parse(IAbstractFile,boolean,ManifestErrorHandler)",2,2,3
"com.android.ide.common.xml.AndroidManifestParser.parse(IAbstractFolder)",2,1,2
"com.android.ide.common.xml.AndroidManifestParser.parse(InputStream)",2,2,2
"com.android.ide.common.xml.ManifestData.Activity.Activity(String,boolean)",1,1,1
"com.android.ide.common.xml.ManifestData.Activity.getName()",1,1,1
"com.android.ide.common.xml.ManifestData.Activity.hasAction()",1,1,1
"com.android.ide.common.xml.ManifestData.Activity.isExported()",1,1,1
"com.android.ide.common.xml.ManifestData.Activity.isHomeActivity()",1,1,2
"com.android.ide.common.xml.ManifestData.Activity.resetIntentFilter()",1,1,2
"com.android.ide.common.xml.ManifestData.Activity.setHasAction(boolean)",1,1,1
"com.android.ide.common.xml.ManifestData.Activity.setHasLauncherCategory(boolean)",1,1,1
"com.android.ide.common.xml.ManifestData.Activity.setHasMainAction(boolean)",1,1,1
"com.android.ide.common.xml.ManifestData.Instrumentation.Instrumentation(String,String)",1,1,1
"com.android.ide.common.xml.ManifestData.Instrumentation.getName()",1,1,1
"com.android.ide.common.xml.ManifestData.Instrumentation.getTargetPackage()",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.SupportsScreens()",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.SupportsScreens(String)",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.compareScreenSizesWith(SupportsScreens)",6,1,6
"com.android.ide.common.xml.ManifestData.SupportsScreens.equals(Object)",2,1,6
"com.android.ide.common.xml.ManifestData.SupportsScreens.getAnyDensity()",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.getConstantBoolean(Boolean)",3,2,3
"com.android.ide.common.xml.ManifestData.SupportsScreens.getDefaultValues(int)",1,1,2
"com.android.ide.common.xml.ManifestData.SupportsScreens.getEncodedValues()",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.getLargeScreens()",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.getNormalScreens()",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.getResizeable()",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.getSmallScreens()",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.hasSameScreenSupportAs(SupportsScreens)",1,1,3
"com.android.ide.common.xml.ManifestData.SupportsScreens.hasStrictlyDifferentScreenSupportAs(SupportsScreens)",1,1,6
"com.android.ide.common.xml.ManifestData.SupportsScreens.hashCode()",1,6,6
"com.android.ide.common.xml.ManifestData.SupportsScreens.overlapWith(SupportsScreens)",4,1,13
"com.android.ide.common.xml.ManifestData.SupportsScreens.resolveSupportsScreensValues(int)",1,1,6
"com.android.ide.common.xml.ManifestData.SupportsScreens.setAnyDensity(Boolean)",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.setLargeScreens(Boolean)",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.setNormalScreens(Boolean)",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.setResizeable(Boolean)",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.setSmallScreens(Boolean)",1,1,1
"com.android.ide.common.xml.ManifestData.SupportsScreens.toString()",1,7,7
"com.android.ide.common.xml.ManifestData.UsesConfiguration.getReqFiveWayNav()",1,1,1
"com.android.ide.common.xml.ManifestData.UsesConfiguration.getReqHardKeyboard()",1,1,1
"com.android.ide.common.xml.ManifestData.UsesConfiguration.getReqKeyboardType()",1,1,1
"com.android.ide.common.xml.ManifestData.UsesConfiguration.getReqNavigation()",1,1,1
"com.android.ide.common.xml.ManifestData.UsesConfiguration.getReqTouchScreen()",1,1,1
"com.android.ide.common.xml.ManifestData.UsesFeature.getGlEsVersion()",1,1,1
"com.android.ide.common.xml.ManifestData.UsesFeature.getName()",1,1,1
"com.android.ide.common.xml.ManifestData.UsesFeature.getRequired()",1,1,1
"com.android.ide.common.xml.ManifestData.UsesLibrary.getName()",1,1,1
"com.android.ide.common.xml.ManifestData.UsesLibrary.getRequired()",1,1,1
"com.android.ide.common.xml.ManifestData.addProcessName(String)",1,2,3
"com.android.ide.common.xml.ManifestData.getActivities()",1,1,1
"com.android.ide.common.xml.ManifestData.getDebuggable()",1,1,1
"com.android.ide.common.xml.ManifestData.getGlEsVersion()",3,1,3
"com.android.ide.common.xml.ManifestData.getInstrumentations()",1,1,1
"com.android.ide.common.xml.ManifestData.getLauncherActivity()",1,1,1
"com.android.ide.common.xml.ManifestData.getMinSdkVersion()",1,1,1
"com.android.ide.common.xml.ManifestData.getMinSdkVersionString()",1,1,1
"com.android.ide.common.xml.ManifestData.getPackage()",1,1,1
"com.android.ide.common.xml.ManifestData.getProcesses()",2,2,2
"com.android.ide.common.xml.ManifestData.getSupportsScreensFromManifest()",1,1,1
"com.android.ide.common.xml.ManifestData.getSupportsScreensValues()",1,3,3
"com.android.ide.common.xml.ManifestData.getTargetSdkVersion()",2,2,2
"com.android.ide.common.xml.ManifestData.getUsesConfiguration()",1,1,1
"com.android.ide.common.xml.ManifestData.getUsesFeatures()",1,1,1
"com.android.ide.common.xml.ManifestData.getUsesLibraries()",1,1,1
"com.android.ide.common.xml.ManifestData.getVersionCode()",1,1,1
"com.android.ide.common.xml.ManifestData.setMinSdkVersionString(String)",1,2,3
"com.android.ide.common.xml.ManifestData.setTargetSdkVersionString(String)",1,2,3
"com.android.io.FileWrapper.FileWrapper(File)",1,1,1
"com.android.io.FileWrapper.FileWrapper(File,String)",1,1,1
"com.android.io.FileWrapper.FileWrapper(String)",1,1,1
"com.android.io.FileWrapper.FileWrapper(String,String)",1,1,1
"com.android.io.FileWrapper.FileWrapper(URI)",1,1,1
"com.android.io.FileWrapper.exists()",1,1,1
"com.android.io.FileWrapper.getContents()",1,1,2
"com.android.io.FileWrapper.getModificationStamp()",1,1,1
"com.android.io.FileWrapper.getOsLocation()",1,1,1
"com.android.io.FileWrapper.getOutputStream()",1,1,2
"com.android.io.FileWrapper.getParentFolder()",2,1,2
"com.android.io.FileWrapper.getPreferredWriteMode()",1,1,1
"com.android.io.FileWrapper.setContents(InputStream)",2,3,5
"com.android.io.FolderWrapper.FolderWrapper(File)",1,1,1
"com.android.io.FolderWrapper.FolderWrapper(File,String)",1,1,1
"com.android.io.FolderWrapper.FolderWrapper(String)",1,1,1
"com.android.io.FolderWrapper.FolderWrapper(String,String)",1,1,1
"com.android.io.FolderWrapper.FolderWrapper(URI)",1,1,1
"com.android.io.FolderWrapper.exists()",1,1,1
"com.android.io.FolderWrapper.getFile(String)",1,1,1
"com.android.io.FolderWrapper.getFolder(String)",1,1,1
"com.android.io.FolderWrapper.getOsLocation()",1,1,1
"com.android.io.FolderWrapper.getParentFolder()",2,1,2
"com.android.io.FolderWrapper.hasFile(String)",1,1,1
"com.android.io.FolderWrapper.list(FilenameFilter)",2,4,5
"com.android.io.FolderWrapper.listMembers()",1,4,6
"com.android.io.StreamException.StreamException(Exception,IAbstractFile)",1,1,1
"com.android.io.StreamException.StreamException(Exception,IAbstractFile,Error)",1,1,1
"com.android.io.StreamException.getError()",1,1,1
"com.android.io.StreamException.getFile()",1,1,1
"com.android.layoutlib.api.IDensityBasedResourceValue.Density.Density(int)",1,1,1
"com.android.layoutlib.api.IDensityBasedResourceValue.Density.getEnum(int)",3,1,3
"com.android.layoutlib.api.IDensityBasedResourceValue.Density.getValue()",1,1,1
"com.android.manifmerger.ArgvParser.ArgvParser(ILogger)",1,1,1
"com.android.manifmerger.ArgvParser.acceptLackOfVerb()",1,1,1
"com.android.manifmerger.ArgvParser.getParamLibs()",2,2,2
"com.android.manifmerger.ArgvParser.getParamMain()",1,1,1
"com.android.manifmerger.ArgvParser.getParamOut()",1,1,1
"com.android.manifmerger.IMergerLog.FileAndLine.FileAndLine(String,int)",1,1,1
"com.android.manifmerger.IMergerLog.FileAndLine.getFileName()",1,1,1
"com.android.manifmerger.IMergerLog.FileAndLine.getLine()",1,1,1
"com.android.manifmerger.IMergerLog.FileAndLine.toString()",2,2,5
"com.android.manifmerger.Main.createLogger()",1,1,1
"com.android.manifmerger.Main.main(String[])",1,1,1
"com.android.manifmerger.Main.run(String[])",1,1,3
"com.android.manifmerger.Main.setLogger(ILogger)",1,1,1
"com.android.manifmerger.ManifestMerger.ManifestMerger(IMergerLog,ICallback)",1,1,1
"com.android.manifmerger.ManifestMerger.changePrefix(Node,String,String)",1,4,4
"com.android.manifmerger.ManifestMerger.checkApplication(Document)",5,5,9
"com.android.manifmerger.ManifestMerger.checkGlEsVersion(Document)",3,15,20
"com.android.manifmerger.ManifestMerger.checkSdkVersion(Document)",2,6,13
"com.android.manifmerger.ManifestMerger.cleanupToolsAttributes(Document)",1,1,1
"com.android.manifmerger.ManifestMerger.cleanupToolsAttributes(Node)",7,15,16
"com.android.manifmerger.ManifestMerger.compareElements(Node,Node,boolean,StringBuilder,String)",2,3,3
"com.android.manifmerger.ManifestMerger.doNotMergeCheckEqual(String,Document)",5,4,6
"com.android.manifmerger.ManifestMerger.expandFqcns(Document)",4,12,14
"com.android.manifmerger.ManifestMerger.extractFqcns(Document)",4,11,13
"com.android.manifmerger.ManifestMerger.extractSdkVersionAttribute(Document,Element,Element,String,AtomicInteger,AtomicInteger,AtomicBoolean,AtomicBoolean)",1,13,15
"com.android.manifmerger.ManifestMerger.findElements(Document,String)",1,1,1
"com.android.manifmerger.ManifestMerger.findElements(Document,String,String,String)",1,7,7
"com.android.manifmerger.ManifestMerger.findFirstElement(Document,String)",2,3,4
"com.android.manifmerger.ManifestMerger.getAttributeValue(Element,String)",1,2,2
"com.android.manifmerger.ManifestMerger.hasOverrideOrRemoveTag(Node)",2,4,5
"com.android.manifmerger.ManifestMerger.insertAtEndOf(Element,Node,Node)",6,8,10
"com.android.manifmerger.ManifestMerger.mergeAdjustRequired(String,String,String,Document,String)",11,26,29
"com.android.manifmerger.ManifestMerger.mergeLibDoc(Document)",1,3,3
"com.android.manifmerger.ManifestMerger.mergeNewOrEqual(String,String,Document,boolean)",7,9,10
"com.android.manifmerger.ManifestMerger.process(Document,Document...)",1,2,3
"com.android.manifmerger.ManifestMerger.process(Document,File[],Map<String, String>)",1,4,5
"com.android.manifmerger.ManifestMerger.process(File,File,File[],Map<String, String>)",2,1,3
"com.android.manifmerger.ManifestMerger.selectPreviousSiblings(Node)",5,4,6
"com.android.manifmerger.ManifestMerger.setExtractPackagePrefix(boolean)",1,1,1
"com.android.manifmerger.ManifestMerger.xmlFileAndLine(Node)",1,1,1
"com.android.manifmerger.MergerLog.mergerLogOverrideLocation(IMergerLog,String,String...)",1,4,5
"com.android.manifmerger.MergerLog.wrapSdkLog(ILogger)",3,3,7
"com.android.manifmerger.MergerXmlUtils.decorateDocument(Document,String)",1,1,1
"com.android.manifmerger.MergerXmlUtils.diffGetPrefix(String)",1,2,3
"com.android.manifmerger.MergerXmlUtils.diffReplaceNs(String,Map<String, String>)",1,4,4
"com.android.manifmerger.MergerXmlUtils.dump(Node,boolean)",1,1,1
"com.android.manifmerger.MergerXmlUtils.dump(Node,int,boolean,boolean,String)",9,13,23
"com.android.manifmerger.MergerXmlUtils.extractLineNumber(Node)",3,3,3
"com.android.manifmerger.MergerXmlUtils.extractXmlFilename(Node)",4,5,6
"com.android.manifmerger.MergerXmlUtils.findLineNumbers(Node,int)",1,5,6
"com.android.manifmerger.MergerXmlUtils.getAttrComparator()",2,3,7
"com.android.manifmerger.MergerXmlUtils.injectAttributes(Document,Map<String, String>,IMergerLog)",10,17,22
"com.android.manifmerger.MergerXmlUtils.parseDocument(File,IMergerLog)",1,3,3
"com.android.manifmerger.MergerXmlUtils.parseDocument(String,IMergerLog,FileAndLine)",1,2,2
"com.android.manifmerger.MergerXmlUtils.printAttributes(StringBuilder,Node,Map<String, String>,String)",1,6,6
"com.android.manifmerger.MergerXmlUtils.printChildren(StringBuilder,Node,boolean,Map<String, String>,String)",5,8,10
"com.android.manifmerger.MergerXmlUtils.printElement(Node,Map<String, String>,String)",1,3,3
"com.android.manifmerger.MergerXmlUtils.printXmlDiff(StringBuilder,String,String,Map<String, String>,Map<String, String>,String)",15,21,26
"com.android.manifmerger.MergerXmlUtils.printXmlFile(Document,File,IMergerLog)",1,2,2
"com.android.manifmerger.MergerXmlUtils.printXmlString(Document,IMergerLog)",1,2,2
"com.android.manifmerger.MergerXmlUtils.sortedAttributeList(NamedNodeMap)",1,5,5
"com.android.manifmerger.MergerXmlUtils.xmlFileAndLine(Node)",1,1,1
"com.android.ninepatch.GraphicsUtilities.createCompatibleImage(BufferedImage,int,int)",1,1,1
"com.android.ninepatch.GraphicsUtilities.createCompatibleImage(int,int)",1,1,1
"com.android.ninepatch.GraphicsUtilities.createTranslucentCompatibleImage(int,int)",1,1,1
"com.android.ninepatch.GraphicsUtilities.getGraphicsConfiguration()",1,1,1
"com.android.ninepatch.GraphicsUtilities.getPixels(BufferedImage,int,int,int,int,int[])",5,2,7
"com.android.ninepatch.GraphicsUtilities.isHeadless()",1,1,1
"com.android.ninepatch.GraphicsUtilities.loadCompatibleImage(InputStream)",1,1,1
"com.android.ninepatch.GraphicsUtilities.loadCompatibleImage(URL)",1,1,1
"com.android.ninepatch.GraphicsUtilities.toCompatibleImage(BufferedImage)",3,1,3
"com.android.ninepatch.NinePatch.NinePatch(BufferedImage)",1,1,1
"com.android.ninepatch.NinePatch.convertTo9Patch(BufferedImage)",1,1,1
"com.android.ninepatch.NinePatch.draw(Graphics2D,int,int,int,int)",1,1,1
"com.android.ninepatch.NinePatch.ensure9Patch(BufferedImage)",1,7,11
"com.android.ninepatch.NinePatch.extractBitmapContent(BufferedImage)",1,1,1
"com.android.ninepatch.NinePatch.getChunk()",1,1,1
"com.android.ninepatch.NinePatch.getHeight()",1,1,1
"com.android.ninepatch.NinePatch.getImage()",1,1,1
"com.android.ninepatch.NinePatch.getPadding(int[])",1,1,1
"com.android.ninepatch.NinePatch.getWidth()",1,1,1
"com.android.ninepatch.NinePatch.load(BufferedImage,boolean,boolean)",3,3,3
"com.android.ninepatch.NinePatch.load(InputStream,boolean,boolean)",1,1,2
"com.android.ninepatch.NinePatch.load(URL,boolean)",1,1,2
"com.android.ninepatch.NinePatchChunk.Pair.Pair(E,E)",1,1,1
"com.android.ninepatch.NinePatchChunk.Pair.toString()",1,1,1
"com.android.ninepatch.NinePatchChunk.computePatches(int,int)",1,2,16
"com.android.ninepatch.NinePatchChunk.create(BufferedImage)",1,1,1
"com.android.ninepatch.NinePatchChunk.draw(BufferedImage,Graphics2D,int,int,int,int)",3,7,10
"com.android.ninepatch.NinePatchChunk.draw(BufferedImage,Graphics2D,int,int,int,int,int,int)",1,2,4
"com.android.ninepatch.NinePatchChunk.findPatches(BufferedImage)",1,4,4
"com.android.ninepatch.NinePatchChunk.getHorizontalRectangles(int,List<Pair<Integer>>)",1,2,2
"com.android.ninepatch.NinePatchChunk.getPadding()",1,1,1
"com.android.ninepatch.NinePatchChunk.getPadding(List<Pair<Integer>>)",4,4,4
"com.android.ninepatch.NinePatchChunk.getPadding(int[])",1,1,1
"com.android.ninepatch.NinePatchChunk.getPatches(int[],boolean[])",1,6,8
"com.android.ninepatch.NinePatchChunk.getRectangles(List<Pair<Integer>>,List<Pair<Integer>>)",1,3,3
"com.android.ninepatch.NinePatchChunk.getVerticalRectangles(int,List<Pair<Integer>>)",1,2,2
"com.android.prefs.AndroidLocation.AndroidLocationException.AndroidLocationException(String)",1,1,1
"com.android.prefs.AndroidLocation.findValidPath(String...)",4,4,5
"com.android.prefs.AndroidLocation.getFolder()",5,5,7
"com.android.prefs.AndroidLocation.resetFolder()",1,1,1
"com.android.resources.Density.Density(String,String,int,int)",1,1,1
"com.android.resources.Density.getByIndex(int)",3,1,3
"com.android.resources.Density.getDpiValue()",1,1,1
"com.android.resources.Density.getEnum(String)",3,2,3
"com.android.resources.Density.getEnum(int)",3,1,3
"com.android.resources.Density.getIndex(Density)",3,1,3
"com.android.resources.Density.getLegacyValue()",2,2,2
"com.android.resources.Density.getLongDisplayValue()",1,1,1
"com.android.resources.Density.getResourceValue()",1,1,1
"com.android.resources.Density.getShortDisplayValue()",1,1,1
"com.android.resources.Density.isFakeValue()",1,1,1
"com.android.resources.Density.isValidValueForDevice()",1,1,1
"com.android.resources.Density.since()",1,1,1
"com.android.resources.FolderTypeRelationship.add(ResourceType,ResourceFolderType)",1,5,5
"com.android.resources.FolderTypeRelationship.getRelatedFolders(ResourceType)",2,1,2
"com.android.resources.FolderTypeRelationship.getRelatedResourceTypes(ResourceFolderType)",2,1,2
"com.android.resources.FolderTypeRelationship.makeSafe()",1,5,5
"com.android.resources.FolderTypeRelationship.match(ResourceType,ResourceFolderType)",2,2,2
"com.android.resources.Keyboard.Keyboard(String,String,String,String)",1,1,1
"com.android.resources.Keyboard.getByIndex(int)",3,1,3
"com.android.resources.Keyboard.getEnum(String)",3,4,5
"com.android.resources.Keyboard.getIndex(Keyboard)",3,1,3
"com.android.resources.Keyboard.getLongDisplayValue()",1,1,1
"com.android.resources.Keyboard.getResourceValue()",1,1,1
"com.android.resources.Keyboard.getShortDisplayValue()",1,1,1
"com.android.resources.Keyboard.isFakeValue()",1,1,1
"com.android.resources.Keyboard.isValidValueForDevice()",1,1,1
"com.android.resources.KeyboardState.KeyboardState(String,String,String)",1,1,1
"com.android.resources.KeyboardState.getByIndex(int)",3,1,3
"com.android.resources.KeyboardState.getEnum(String)",3,2,3
"com.android.resources.KeyboardState.getIndex(KeyboardState)",3,1,3
"com.android.resources.KeyboardState.getLongDisplayValue()",1,1,1
"com.android.resources.KeyboardState.getResourceValue()",1,1,1
"com.android.resources.KeyboardState.getShortDisplayValue()",1,1,1
"com.android.resources.KeyboardState.isFakeValue()",1,1,1
"com.android.resources.KeyboardState.isValidValueForDevice()",1,1,1
"com.android.resources.LayoutDirection.LayoutDirection(String,String,String)",1,1,1
"com.android.resources.LayoutDirection.getByIndex(int)",3,1,3
"com.android.resources.LayoutDirection.getEnum(String)",3,2,3
"com.android.resources.LayoutDirection.getIndex(LayoutDirection)",3,1,3
"com.android.resources.LayoutDirection.getLongDisplayValue()",1,1,1
"com.android.resources.LayoutDirection.getResourceValue()",1,1,1
"com.android.resources.LayoutDirection.getShortDisplayValue()",1,1,1
"com.android.resources.LayoutDirection.isFakeValue()",1,1,1
"com.android.resources.LayoutDirection.isValidValueForDevice()",1,1,1
"com.android.resources.Navigation.Navigation(String,String,String)",1,1,1
"com.android.resources.Navigation.getByIndex(int)",3,1,3
"com.android.resources.Navigation.getEnum(String)",3,2,3
"com.android.resources.Navigation.getIndex(Navigation)",3,1,3
"com.android.resources.Navigation.getLongDisplayValue()",1,1,1
"com.android.resources.Navigation.getResourceValue()",1,1,1
"com.android.resources.Navigation.getShortDisplayValue()",1,1,1
"com.android.resources.Navigation.isFakeValue()",1,1,1
"com.android.resources.Navigation.isValidValueForDevice()",1,1,1
"com.android.resources.NavigationState.NavigationState(String,String,String)",1,1,1
"com.android.resources.NavigationState.getByIndex(int)",3,1,3
"com.android.resources.NavigationState.getEnum(String)",3,2,3
"com.android.resources.NavigationState.getIndex(NavigationState)",3,1,3
"com.android.resources.NavigationState.getLongDisplayValue()",1,1,1
"com.android.resources.NavigationState.getResourceValue()",1,1,1
"com.android.resources.NavigationState.getShortDisplayValue()",1,1,1
"com.android.resources.NavigationState.isFakeValue()",1,1,1
"com.android.resources.NavigationState.isValidValueForDevice()",1,1,1
"com.android.resources.NightMode.NightMode(String,String,String)",1,1,1
"com.android.resources.NightMode.getByIndex(int)",3,1,3
"com.android.resources.NightMode.getEnum(String)",3,2,3
"com.android.resources.NightMode.getIndex(NightMode)",3,1,3
"com.android.resources.NightMode.getLongDisplayValue()",1,1,1
"com.android.resources.NightMode.getResourceValue()",1,1,1
"com.android.resources.NightMode.getShortDisplayValue()",1,1,1
"com.android.resources.NightMode.isFakeValue()",1,1,1
"com.android.resources.NightMode.isValidValueForDevice()",1,1,1
"com.android.resources.ResourceFolderType.ResourceFolderType(String)",1,1,1
"com.android.resources.ResourceFolderType.getFolderType(String)",1,1,1
"com.android.resources.ResourceFolderType.getName()",1,1,1
"com.android.resources.ResourceFolderType.getTypeByName(String)",3,2,3
"com.android.resources.ResourceType.ResourceType(String,String,String...)",1,1,1
"com.android.resources.ResourceType.getDisplayName()",1,1,1
"com.android.resources.ResourceType.getEnum(String)",6,5,6
"com.android.resources.ResourceType.getName()",1,1,1
"com.android.resources.ResourceType.getNames()",1,2,2
"com.android.resources.ResourceType.toString()",1,1,1
"com.android.resources.ScreenOrientation.ScreenOrientation(String,String,String)",1,1,1
"com.android.resources.ScreenOrientation.getByIndex(int)",3,1,3
"com.android.resources.ScreenOrientation.getEnum(String)",3,2,3
"com.android.resources.ScreenOrientation.getIndex(ScreenOrientation)",3,1,3
"com.android.resources.ScreenOrientation.getLongDisplayValue()",1,1,1
"com.android.resources.ScreenOrientation.getResourceValue()",1,1,1
"com.android.resources.ScreenOrientation.getShortDisplayValue()",1,1,1
"com.android.resources.ScreenOrientation.isFakeValue()",1,1,1
"com.android.resources.ScreenOrientation.isValidValueForDevice()",1,1,1
"com.android.resources.ScreenRatio.ScreenRatio(String,String,String)",1,1,1
"com.android.resources.ScreenRatio.getByIndex(int)",3,1,3
"com.android.resources.ScreenRatio.getEnum(String)",3,2,3
"com.android.resources.ScreenRatio.getIndex(ScreenRatio)",3,1,3
"com.android.resources.ScreenRatio.getLongDisplayValue()",1,1,1
"com.android.resources.ScreenRatio.getResourceValue()",1,1,1
"com.android.resources.ScreenRatio.getShortDisplayValue()",1,1,1
"com.android.resources.ScreenRatio.isFakeValue()",1,1,1
"com.android.resources.ScreenRatio.isValidValueForDevice()",1,1,1
"com.android.resources.ScreenSize.ScreenSize(String,String,String)",1,1,1
"com.android.resources.ScreenSize.getByIndex(int)",3,1,3
"com.android.resources.ScreenSize.getEnum(String)",3,2,3
"com.android.resources.ScreenSize.getIndex(ScreenSize)",3,1,3
"com.android.resources.ScreenSize.getLongDisplayValue()",1,1,1
"com.android.resources.ScreenSize.getResourceValue()",1,1,1
"com.android.resources.ScreenSize.getShortDisplayValue()",1,1,1
"com.android.resources.ScreenSize.isFakeValue()",1,1,1
"com.android.resources.ScreenSize.isValidValueForDevice()",1,1,1
"com.android.resources.TouchScreen.TouchScreen(String,String,String)",1,1,1
"com.android.resources.TouchScreen.getByIndex(int)",3,1,3
"com.android.resources.TouchScreen.getEnum(String)",3,2,3
"com.android.resources.TouchScreen.getIndex(TouchScreen)",3,1,3
"com.android.resources.TouchScreen.getLongDisplayValue()",1,1,1
"com.android.resources.TouchScreen.getResourceValue()",1,1,1
"com.android.resources.TouchScreen.getShortDisplayValue()",1,1,1
"com.android.resources.TouchScreen.isFakeValue()",1,1,1
"com.android.resources.TouchScreen.isValidValueForDevice()",1,1,1
"com.android.resources.UiMode.UiMode(String,String)",1,1,1
"com.android.resources.UiMode.getByIndex(int)",3,1,3
"com.android.resources.UiMode.getEnum(String)",3,2,3
"com.android.resources.UiMode.getIndex(UiMode)",3,1,3
"com.android.resources.UiMode.getLongDisplayValue()",1,1,1
"com.android.resources.UiMode.getResourceValue()",1,1,1
"com.android.resources.UiMode.getShortDisplayValue()",1,1,1
"com.android.resources.UiMode.isFakeValue()",1,1,1
"com.android.resources.UiMode.isValidValueForDevice()",1,1,1
"com.android.sdklib.AddOnTarget.AddOnTarget(String,String,String,int,String,ISystemImage[],Map<String, String[]>,boolean,boolean,PlatformTarget)",1,3,5
"com.android.sdklib.AddOnTarget.OptionalLibrary.OptionalLibrary(String,String,String,String)",1,1,1
"com.android.sdklib.AddOnTarget.OptionalLibrary.getDescription()",1,1,1
"com.android.sdklib.AddOnTarget.OptionalLibrary.getJarName()",1,1,1
"com.android.sdklib.AddOnTarget.OptionalLibrary.getJarPath()",1,1,1
"com.android.sdklib.AddOnTarget.OptionalLibrary.getName()",1,1,1
"com.android.sdklib.AddOnTarget.canRunOn(IAndroidTarget)",4,3,6
"com.android.sdklib.AddOnTarget.compareTo(IAndroidTarget)",5,4,5
"com.android.sdklib.AddOnTarget.equals(Object)",2,4,4
"com.android.sdklib.AddOnTarget.getClasspathName()",1,1,1
"com.android.sdklib.AddOnTarget.getDefaultSkin()",1,1,1
"com.android.sdklib.AddOnTarget.getDescription()",1,1,1
"com.android.sdklib.AddOnTarget.getFullName()",1,1,1
"com.android.sdklib.AddOnTarget.getLocation()",1,1,1
"com.android.sdklib.AddOnTarget.getName()",1,1,1
"com.android.sdklib.AddOnTarget.getOptionalLibraries()",1,1,1
"com.android.sdklib.AddOnTarget.getParent()",1,1,1
"com.android.sdklib.AddOnTarget.getPath(int)",12,4,14
"com.android.sdklib.AddOnTarget.getPlatformLibraries()",1,1,1
"com.android.sdklib.AddOnTarget.getProperties()",1,1,1
"com.android.sdklib.AddOnTarget.getProperty(String)",1,1,1
"com.android.sdklib.AddOnTarget.getProperty(String,Boolean)",1,1,1
"com.android.sdklib.AddOnTarget.getProperty(String,Integer)",1,1,1
"com.android.sdklib.AddOnTarget.getRevision()",1,1,1
"com.android.sdklib.AddOnTarget.getShortClasspathName()",1,1,1
"com.android.sdklib.AddOnTarget.getSkins()",1,1,1
"com.android.sdklib.AddOnTarget.getSystemImage(String)",3,2,3
"com.android.sdklib.AddOnTarget.getSystemImages()",1,1,1
"com.android.sdklib.AddOnTarget.getUsbVendorId()",1,1,1
"com.android.sdklib.AddOnTarget.getVendor()",1,1,1
"com.android.sdklib.AddOnTarget.getVersion()",1,1,1
"com.android.sdklib.AddOnTarget.getVersionName()",1,1,1
"com.android.sdklib.AddOnTarget.hasRenderingLibrary()",1,1,2
"com.android.sdklib.AddOnTarget.hashCode()",1,1,1
"com.android.sdklib.AddOnTarget.hashString()",1,1,1
"com.android.sdklib.AddOnTarget.isPlatform()",1,1,1
"com.android.sdklib.AddOnTarget.setSkins(String[],String)",1,1,1
"com.android.sdklib.AddOnTarget.setUsbVendorId(int)",2,1,2
"com.android.sdklib.AddOnTarget.toString()",1,1,1
"com.android.sdklib.AndroidVersion.AndroidVersion(Properties)",2,2,3
"com.android.sdklib.AndroidVersion.AndroidVersion(Properties,int,String)",1,2,2
"com.android.sdklib.AndroidVersion.AndroidVersion(int,String)",1,1,1
"com.android.sdklib.AndroidVersion.AndroidVersionException.AndroidVersionException(String,Throwable)",1,1,1
"com.android.sdklib.AndroidVersion.canRun(AndroidVersion)",2,2,2
"com.android.sdklib.AndroidVersion.compareTo(AndroidVersion)",1,1,1
"com.android.sdklib.AndroidVersion.compareTo(int,String)",6,4,6
"com.android.sdklib.AndroidVersion.equals(Object)",5,6,8
"com.android.sdklib.AndroidVersion.equals(int)",1,1,2
"com.android.sdklib.AndroidVersion.getApiLevel()",1,1,1
"com.android.sdklib.AndroidVersion.getApiString()",2,1,2
"com.android.sdklib.AndroidVersion.getCodename()",1,1,1
"com.android.sdklib.AndroidVersion.hashCode()",2,2,2
"com.android.sdklib.AndroidVersion.isGreaterOrEqualThan(int)",1,1,1
"com.android.sdklib.AndroidVersion.isPreview()",1,1,1
"com.android.sdklib.AndroidVersion.sanitizeCodename(String)",1,3,4
"com.android.sdklib.AndroidVersion.saveProperties(Properties)",1,2,2
"com.android.sdklib.AndroidVersion.toString()",1,2,2
"com.android.sdklib.PlatformTarget.PlatformTarget(String,String,AndroidVersion,String,int,LayoutlibVersion,ISystemImage[],Map<String, String>)",1,2,4
"com.android.sdklib.PlatformTarget.canRunOn(IAndroidTarget)",3,2,3
"com.android.sdklib.PlatformTarget.compareTo(IAndroidTarget)",4,2,4
"com.android.sdklib.PlatformTarget.equals(Object)",2,2,2
"com.android.sdklib.PlatformTarget.getClasspathName()",1,1,1
"com.android.sdklib.PlatformTarget.getDefaultSkin()",4,1,4
"com.android.sdklib.PlatformTarget.getDescription()",1,1,1
"com.android.sdklib.PlatformTarget.getFullName()",1,1,1
"com.android.sdklib.PlatformTarget.getLayoutlibVersion()",1,1,1
"com.android.sdklib.PlatformTarget.getLocation()",1,1,1
"com.android.sdklib.PlatformTarget.getName()",1,1,1
"com.android.sdklib.PlatformTarget.getOptionalLibraries()",1,1,1
"com.android.sdklib.PlatformTarget.getParent()",1,1,1
"com.android.sdklib.PlatformTarget.getPath(int)",1,1,1
"com.android.sdklib.PlatformTarget.getPlatformLibraries()",1,1,1
"com.android.sdklib.PlatformTarget.getProperties()",1,1,1
"com.android.sdklib.PlatformTarget.getProperty(String)",1,1,1
"com.android.sdklib.PlatformTarget.getProperty(String,Boolean)",2,2,2
"com.android.sdklib.PlatformTarget.getProperty(String,Integer)",2,2,3
"com.android.sdklib.PlatformTarget.getRevision()",1,1,1
"com.android.sdklib.PlatformTarget.getShortClasspathName()",1,1,1
"com.android.sdklib.PlatformTarget.getSkins()",1,1,1
"com.android.sdklib.PlatformTarget.getSystemImage(String)",3,2,3
"com.android.sdklib.PlatformTarget.getSystemImages()",1,1,1
"com.android.sdklib.PlatformTarget.getUsbVendorId()",1,1,1
"com.android.sdklib.PlatformTarget.getVendor()",1,1,1
"com.android.sdklib.PlatformTarget.getVersion()",1,1,1
"com.android.sdklib.PlatformTarget.getVersionName()",1,1,1
"com.android.sdklib.PlatformTarget.hasRenderingLibrary()",1,1,1
"com.android.sdklib.PlatformTarget.hashCode()",1,1,1
"com.android.sdklib.PlatformTarget.hashString()",1,1,1
"com.android.sdklib.PlatformTarget.isPlatform()",1,1,1
"com.android.sdklib.PlatformTarget.setSamplesPath(String)",1,1,1
"com.android.sdklib.PlatformTarget.setSkins(String[])",1,1,1
"com.android.sdklib.PlatformTarget.toString()",1,1,1
"com.android.sdklib.SdkManager.DirInfo.DirInfo(File)",1,2,2
"com.android.sdklib.SdkManager.DirInfo.getFileChecksum(File)",1,3,5
"com.android.sdklib.SdkManager.DirInfo.hasChanged()",7,2,7
"com.android.sdklib.SdkManager.DirInfo.toString()",1,2,2
"com.android.sdklib.SdkManager.LayoutlibVersion.LayoutlibVersion(int,int)",1,1,1
"com.android.sdklib.SdkManager.LayoutlibVersion.compareTo(LayoutlibVersion)",1,1,4
"com.android.sdklib.SdkManager.LayoutlibVersion.getApi()",1,1,1
"com.android.sdklib.SdkManager.LayoutlibVersion.getRevision()",1,1,1
"com.android.sdklib.SdkManager.SdkManager(String)",1,1,1
"com.android.sdklib.SdkManager.addonManifestWarning(String)",1,1,1
"com.android.sdklib.SdkManager.checkPlatformContent(File,ILogger)",3,3,3
"com.android.sdklib.SdkManager.convertId(String)",3,4,5
"com.android.sdklib.SdkManager.createManager(String,ILogger)",1,2,2
"com.android.sdklib.SdkManager.getAddonSystemImages(File)",1,9,10
"com.android.sdklib.SdkManager.getExtraSamples()",4,8,8
"com.android.sdklib.SdkManager.getExtrasVersions()",1,4,4
"com.android.sdklib.SdkManager.getLocation()",1,1,1
"com.android.sdklib.SdkManager.getMaxLayoutlibVersion()",1,5,6
"com.android.sdklib.SdkManager.getPlatformSystemImages(String,File,AndroidVersion)",6,18,21
"com.android.sdklib.SdkManager.getPlatformToolsVersion()",3,4,4
"com.android.sdklib.SdkManager.getSamplesVersion(File,ILogger)",1,5,5
"com.android.sdklib.SdkManager.getTargetFromHashString(String)",4,3,4
"com.android.sdklib.SdkManager.getTargets()",1,1,1
"com.android.sdklib.SdkManager.hasChanged()",12,20,22
"com.android.sdklib.SdkManager.initializeSamplePaths(ILogger)",7,8,8
"com.android.sdklib.SdkManager.loadAddOns(String,ArrayList<IAndroidTarget>,Map<File, DirInfo>,ILogger)",4,8,8
"com.android.sdklib.SdkManager.loadAddon(File,IAndroidTarget[],ILogger)",4,18,19
"com.android.sdklib.SdkManager.loadPlatform(String,File,ILogger)",5,13,18
"com.android.sdklib.SdkManager.loadPlatforms(String,ArrayList<IAndroidTarget>,Map<File, DirInfo>,ILogger)",4,7,7
"com.android.sdklib.SdkManager.parseAddonProperties(File,IAndroidTarget[],ILogger)",11,13,14
"com.android.sdklib.SdkManager.parseSkinFolder(String)",2,5,5
"com.android.sdklib.SdkManager.reloadSdk(ILogger)",1,1,1
"com.android.sdklib.SdkManager.setTargets(IAndroidTarget[])",1,1,1
"com.android.sdklib.SdkManager.updateAdb()",1,5,5
"com.android.sdklib.SystemImage.SystemImage(File,LocationType,String)",1,1,1
"com.android.sdklib.SystemImage.SystemImage(SdkManager,IAndroidTarget,LocationType,String)",3,2,6
"com.android.sdklib.SystemImage.compareTo(ISystemImage)",1,1,1
"com.android.sdklib.SystemImage.getAbiType()",1,1,1
"com.android.sdklib.SystemImage.getCanonicalFolder(String,AndroidVersion,String)",2,2,2
"com.android.sdklib.SystemImage.getLocation()",1,1,1
"com.android.sdklib.SystemImage.getLocationType()",1,1,1
"com.android.sdklib.SystemImage.toString()",1,1,1
"com.android.sdklib.build.ApkBuilder.ApkBuilder(File,File,File,PrivateKey,X509Certificate,PrintStream)",1,1,1
"com.android.sdklib.build.ApkBuilder.ApkBuilder(File,File,File,String,PrintStream)",1,2,2
"com.android.sdklib.build.ApkBuilder.ApkBuilder(String,String,String,PrivateKey,X509Certificate,PrintStream)",1,1,2
"com.android.sdklib.build.ApkBuilder.ApkBuilder(String,String,String,String,PrintStream)",1,1,2
"com.android.sdklib.build.ApkBuilder.FileEntry.FileEntry(File,String)",1,1,1
"com.android.sdklib.build.ApkBuilder.JarStatusImpl.JarStatusImpl(List<String>,boolean)",1,1,1
"com.android.sdklib.build.ApkBuilder.JarStatusImpl.getNativeLibs()",1,1,1
"com.android.sdklib.build.ApkBuilder.JarStatusImpl.hasNativeLibsConflicts()",1,1,1
"com.android.sdklib.build.ApkBuilder.JavaAndNativeResourceFilter.checkEntry(String)",6,7,10
"com.android.sdklib.build.ApkBuilder.JavaAndNativeResourceFilter.getNativeLibs()",1,1,1
"com.android.sdklib.build.ApkBuilder.JavaAndNativeResourceFilter.getNativeLibsConflict()",1,1,1
"com.android.sdklib.build.ApkBuilder.JavaAndNativeResourceFilter.reset(File)",1,1,1
"com.android.sdklib.build.ApkBuilder.NullZipFilter.checkEntry(String)",2,2,2
"com.android.sdklib.build.ApkBuilder.NullZipFilter.reset(File)",1,1,1
"com.android.sdklib.build.ApkBuilder.SigningInfo.SigningInfo(PrivateKey,X509Certificate)",2,1,3
"com.android.sdklib.build.ApkBuilder.addFile(File,String)",2,3,4
"com.android.sdklib.build.ApkBuilder.addNativeLibraries(File)",10,13,15
"com.android.sdklib.build.ApkBuilder.addNativeLibraries(List<FileEntry>)",3,3,4
"com.android.sdklib.build.ApkBuilder.addResourcesFromJar(File)",2,3,4
"com.android.sdklib.build.ApkBuilder.addSourceFolder(File)",2,1,2
"com.android.sdklib.build.ApkBuilder.addSourceFolder(IArchiveBuilder,File)",3,3,6
"com.android.sdklib.build.ApkBuilder.addZipFile(File)",2,3,4
"com.android.sdklib.build.ApkBuilder.checkFileForDuplicate(String)",1,1,1
"com.android.sdklib.build.ApkBuilder.checkFileForPackaging(String)",1,1,2
"com.android.sdklib.build.ApkBuilder.checkFileForPackaging(String,String)",2,14,15
"com.android.sdklib.build.ApkBuilder.checkFolderForPackaging(String)",1,5,5
"com.android.sdklib.build.ApkBuilder.checkInputFile(File)",4,2,4
"com.android.sdklib.build.ApkBuilder.checkOutputFile(File)",5,3,6
"com.android.sdklib.build.ApkBuilder.doAddFile(File,String)",2,1,2
"com.android.sdklib.build.ApkBuilder.getDebugKey(String,PrintStream)",5,8,12
"com.android.sdklib.build.ApkBuilder.getDebugKeystore()",1,2,2
"com.android.sdklib.build.ApkBuilder.getNativeFiles(File,boolean)",3,12,13
"com.android.sdklib.build.ApkBuilder.init(File,File,File,PrivateKey,X509Certificate,PrintStream)",1,7,7
"com.android.sdklib.build.ApkBuilder.processFileForResource(IArchiveBuilder,File,String)",1,7,7
"com.android.sdklib.build.ApkBuilder.sealApk()",2,1,3
"com.android.sdklib.build.ApkBuilder.setDebugMode(boolean)",1,1,1
"com.android.sdklib.build.ApkBuilder.verbosePrintln(String,Object...)",1,2,2
"com.android.sdklib.build.ApkBuilderMain.ApkBuilderMain()",1,1,1
"com.android.sdklib.build.ApkBuilderMain.main(String[])",1,31,32
"com.android.sdklib.build.ApkBuilderMain.printAndExit(String...)",1,2,2
"com.android.sdklib.build.ApkBuilderMain.printUsageAndQuit()",1,1,1
"com.android.sdklib.build.ApkCreationException.ApkCreationException(String,Object...)",1,1,1
"com.android.sdklib.build.ApkCreationException.ApkCreationException(Throwable)",1,1,1
"com.android.sdklib.build.ApkCreationException.ApkCreationException(Throwable,String,Object...)",1,1,1
"com.android.sdklib.build.DuplicateFileException.DuplicateFileException(String,File,File)",1,1,1
"com.android.sdklib.build.DuplicateFileException.getArchivePath()",1,1,1
"com.android.sdklib.build.DuplicateFileException.getFile1()",1,1,1
"com.android.sdklib.build.DuplicateFileException.getFile2()",1,1,1
"com.android.sdklib.build.DuplicateFileException.getMessage()",1,1,1
"com.android.sdklib.build.JarListSanitizer.DifferentLibException.DifferentLibException(String,String[])",1,1,1
"com.android.sdklib.build.JarListSanitizer.DifferentLibException.getDetails()",1,1,1
"com.android.sdklib.build.JarListSanitizer.JarEntity.JarEntity(File)",1,1,1
"com.android.sdklib.build.JarListSanitizer.JarEntity.JarEntity(String,long,long,String)",1,1,1
"com.android.sdklib.build.JarListSanitizer.JarEntity.checkValidity()",2,2,2
"com.android.sdklib.build.JarListSanitizer.JarEntity.getFile()",1,1,1
"com.android.sdklib.build.JarListSanitizer.JarEntity.getLastModified()",1,1,1
"com.android.sdklib.build.JarListSanitizer.JarEntity.getLength()",1,1,1
"com.android.sdklib.build.JarListSanitizer.JarEntity.getSha1()",1,2,2
"com.android.sdklib.build.JarListSanitizer.JarEntity.hasSha1()",1,1,1
"com.android.sdklib.build.JarListSanitizer.JarListSanitizer(File)",1,1,1
"com.android.sdklib.build.JarListSanitizer.JarListSanitizer(File,PrintStream)",1,1,1
"com.android.sdklib.build.JarListSanitizer.Sha1Exception.Sha1Exception(File,Throwable)",1,1,1
"com.android.sdklib.build.JarListSanitizer.Sha1Exception.getJarFile()",1,1,1
"com.android.sdklib.build.JarListSanitizer.byteArray2Hex(byte[])",1,2,2
"com.android.sdklib.build.JarListSanitizer.checkEntities(String,List<JarEntity>)",4,4,5
"com.android.sdklib.build.JarListSanitizer.checkSupportLibs(Map<String, List<JarEntity>>,List<File>)",1,2,3
"com.android.sdklib.build.JarListSanitizer.getCachedJarList()",4,4,10
"com.android.sdklib.build.JarListSanitizer.getEntityDetails(String,List<JarEntity>)",1,2,2
"com.android.sdklib.build.JarListSanitizer.getSha1(File)",3,4,6
"com.android.sdklib.build.JarListSanitizer.sanitize(Collection<File>)",1,10,10
"com.android.sdklib.build.JarListSanitizer.writeJarList(Map<String, List<JarEntity>>)",1,8,10
"com.android.sdklib.build.SealedApkException.SealedApkException(String,Object...)",1,1,1
"com.android.sdklib.build.SealedApkException.SealedApkException(Throwable)",1,1,1
"com.android.sdklib.build.SealedApkException.SealedApkException(Throwable,String,Object...)",1,1,1
"com.android.sdklib.devices.Abi.Abi(String)",1,1,1
"com.android.sdklib.devices.Abi.getEnum(String)",3,2,3
"com.android.sdklib.devices.Abi.toString()",1,1,1
"com.android.sdklib.devices.BluetoothProfile.BluetoothProfile(String)",1,1,1
"com.android.sdklib.devices.BluetoothProfile.getEnum(String)",3,2,3
"com.android.sdklib.devices.BluetoothProfile.toString()",1,1,1
"com.android.sdklib.devices.ButtonType.ButtonType(String,String)",1,1,1
"com.android.sdklib.devices.ButtonType.getDescription()",1,1,1
"com.android.sdklib.devices.ButtonType.getEnum(String)",3,2,3
"com.android.sdklib.devices.ButtonType.toString()",1,1,1
"com.android.sdklib.devices.Camera.Camera()",1,1,1
"com.android.sdklib.devices.Camera.Camera(CameraLocation,boolean,boolean)",1,1,1
"com.android.sdklib.devices.Camera.deepCopy()",1,1,1
"com.android.sdklib.devices.Camera.equals(Object)",3,3,5
"com.android.sdklib.devices.Camera.getLocation()",1,1,1
"com.android.sdklib.devices.Camera.hasAutofocus()",1,1,1
"com.android.sdklib.devices.Camera.hasFlash()",1,1,1
"com.android.sdklib.devices.Camera.hashCode()",1,1,3
"com.android.sdklib.devices.Camera.setAutofocus(boolean)",1,1,1
"com.android.sdklib.devices.Camera.setFlash(boolean)",1,1,1
"com.android.sdklib.devices.Camera.setLocation(CameraLocation)",1,1,1
"com.android.sdklib.devices.CameraLocation.CameraLocation(String)",1,1,1
"com.android.sdklib.devices.CameraLocation.getEnum(String)",3,2,3
"com.android.sdklib.devices.CameraLocation.toString()",1,1,1
"com.android.sdklib.devices.Device.Builder.Builder()",1,1,1
"com.android.sdklib.devices.Device.Builder.Builder(Device)",1,3,3
"com.android.sdklib.devices.Device.Builder.addAllSoftware(Collection<? extends Software>)",1,1,1
"com.android.sdklib.devices.Device.Builder.addAllState(Collection<? extends State>)",1,1,1
"com.android.sdklib.devices.Device.Builder.addSoftware(Software)",1,1,1
"com.android.sdklib.devices.Device.Builder.addState(State)",1,1,1
"com.android.sdklib.devices.Device.Builder.build()",5,4,6
"com.android.sdklib.devices.Device.Builder.generateBuildException(String)",1,1,3
"com.android.sdklib.devices.Device.Builder.removeState(String)",3,4,4
"com.android.sdklib.devices.Device.Builder.setManufacturer(String)",1,1,1
"com.android.sdklib.devices.Device.Builder.setMeta(Meta)",1,1,1
"com.android.sdklib.devices.Device.Builder.setName(String)",1,1,1
"com.android.sdklib.devices.Device.Device(Builder)",1,1,1
"com.android.sdklib.devices.Device.equals(Object)",3,6,8
"com.android.sdklib.devices.Device.getAllSoftware()",1,1,1
"com.android.sdklib.devices.Device.getAllStates()",1,1,1
"com.android.sdklib.devices.Device.getDefaultHardware()",1,1,1
"com.android.sdklib.devices.Device.getDefaultState()",1,1,1
"com.android.sdklib.devices.Device.getManufacturer()",1,1,1
"com.android.sdklib.devices.Device.getMeta()",1,1,1
"com.android.sdklib.devices.Device.getName()",1,1,1
"com.android.sdklib.devices.Device.getSoftware(int)",3,3,4
"com.android.sdklib.devices.Device.getState(String)",3,2,3
"com.android.sdklib.devices.Device.hashCode()",1,3,3
"com.android.sdklib.devices.Device.toString()",1,1,1
"com.android.sdklib.devices.DeviceManager.DeviceManager(String,ILogger)",1,1,1
"com.android.sdklib.devices.DeviceManager.addUserDevice(Device)",1,4,4
"com.android.sdklib.devices.DeviceManager.createInstance(String,ILogger)",1,1,1
"com.android.sdklib.devices.DeviceManager.getBooleanVal(boolean)",2,1,2
"com.android.sdklib.devices.DeviceManager.getDevice(String,String)",5,5,6
"com.android.sdklib.devices.DeviceManager.getDeviceStatus(String,String,int)",2,2,3
"com.android.sdklib.devices.DeviceManager.getDevices(int)",1,4,7
"com.android.sdklib.devices.DeviceManager.getExtraDirs(File)",1,8,8
"com.android.sdklib.devices.DeviceManager.getHardwareProperties(Device)",1,3,3
"com.android.sdklib.devices.DeviceManager.getHardwareProperties(State)",1,1,1
"com.android.sdklib.devices.DeviceManager.initDefaultDevices()",2,4,4
"com.android.sdklib.devices.DeviceManager.initDevicesLists()",1,2,2
"com.android.sdklib.devices.DeviceManager.initUserDevices()",3,10,11
"com.android.sdklib.devices.DeviceManager.initVendorDevices()",3,6,6
"com.android.sdklib.devices.DeviceManager.isDevicesExtra(File)",3,2,4
"com.android.sdklib.devices.DeviceManager.loadDevices(File)",1,5,5
"com.android.sdklib.devices.DeviceManager.notifyListeners()",1,2,2
"com.android.sdklib.devices.DeviceManager.registerListener(DevicesChangedListener)",1,3,3
"com.android.sdklib.devices.DeviceManager.removeUserDevice(Device)",4,6,6
"com.android.sdklib.devices.DeviceManager.replaceUserDevice(Device)",1,2,2
"com.android.sdklib.devices.DeviceManager.saveUserDevices()",3,8,9
"com.android.sdklib.devices.DeviceManager.unregisterListener(DevicesChangedListener)",1,1,1
"com.android.sdklib.devices.DeviceParser.DeviceHandler.DeviceHandler(File)",1,1,1
"com.android.sdklib.devices.DeviceParser.DeviceHandler.characters(char[],int,int)",1,1,1
"com.android.sdklib.devices.DeviceParser.DeviceHandler.endElement(String,String,String)",1,72,72
"com.android.sdklib.devices.DeviceParser.DeviceHandler.error(SAXParseException)",1,1,1
"com.android.sdklib.devices.DeviceParser.DeviceHandler.getBool(StringBuilder)",1,2,2
"com.android.sdklib.devices.DeviceParser.DeviceHandler.getDevices()",1,1,1
"com.android.sdklib.devices.DeviceParser.DeviceHandler.getDouble(StringBuilder)",1,1,1
"com.android.sdklib.devices.DeviceParser.DeviceHandler.getInteger(StringBuilder)",1,1,1
"com.android.sdklib.devices.DeviceParser.DeviceHandler.getString(StringBuilder)",1,1,1
"com.android.sdklib.devices.DeviceParser.DeviceHandler.getStringList(StringBuilder)",1,4,4
"com.android.sdklib.devices.DeviceParser.DeviceHandler.startElement(String,String,String,Attributes)",1,14,14
"com.android.sdklib.devices.DeviceParser.getParser()",1,1,1
"com.android.sdklib.devices.DeviceParser.parse(File)",1,1,1
"com.android.sdklib.devices.DeviceParser.parse(InputStream)",1,1,1
"com.android.sdklib.devices.DeviceWriter.addElement(Document,Element,String,Collection<? extends Object>)",1,2,2
"com.android.sdklib.devices.DeviceWriter.addElement(Document,Element,String,String)",1,1,1
"com.android.sdklib.devices.DeviceWriter.addStorageElement(Document,Element,String,Collection<Storage>)",1,4,4
"com.android.sdklib.devices.DeviceWriter.generateHardwareNode(Hardware,Document)",1,3,3
"com.android.sdklib.devices.DeviceWriter.generateMetaNode(Meta,Document)",1,6,6
"com.android.sdklib.devices.DeviceWriter.generateSoftwareNode(Software,Document)",1,3,3
"com.android.sdklib.devices.DeviceWriter.generateStateNode(State,Document,Hardware)",1,4,4
"com.android.sdklib.devices.DeviceWriter.writeToXml(OutputStream,Collection<Device>)",1,4,4
"com.android.sdklib.devices.Hardware.addAllCameras(Collection<Camera>)",1,1,1
"com.android.sdklib.devices.Hardware.addAllInternalStorage(Collection<Storage>)",1,1,1
"com.android.sdklib.devices.Hardware.addAllNetworks(Collection<Network>)",1,1,1
"com.android.sdklib.devices.Hardware.addAllRemovableStorage(Collection<Storage>)",1,1,1
"com.android.sdklib.devices.Hardware.addAllSensors(Collection<Sensor>)",1,1,1
"com.android.sdklib.devices.Hardware.addAllSupportedAbis(Collection<Abi>)",1,1,1
"com.android.sdklib.devices.Hardware.addAllSupportedUiModes(Collection<UiMode>)",1,1,1
"com.android.sdklib.devices.Hardware.addCamera(Camera)",1,1,1
"com.android.sdklib.devices.Hardware.addInternalStorage(Storage)",1,1,1
"com.android.sdklib.devices.Hardware.addNetwork(Network)",1,1,1
"com.android.sdklib.devices.Hardware.addRemovableStorage(Storage)",1,1,1
"com.android.sdklib.devices.Hardware.addSensor(Sensor)",1,1,1
"com.android.sdklib.devices.Hardware.addSupportedAbi(Abi)",1,1,1
"com.android.sdklib.devices.Hardware.addSupportedUiMode(UiMode)",1,1,1
"com.android.sdklib.devices.Hardware.deepCopy()",1,4,4
"com.android.sdklib.devices.Hardware.equals(Object)",3,16,18
"com.android.sdklib.devices.Hardware.getButtonType()",1,1,1
"com.android.sdklib.devices.Hardware.getCamera(CameraLocation)",3,2,3
"com.android.sdklib.devices.Hardware.getCamera(int)",1,1,1
"com.android.sdklib.devices.Hardware.getCameras()",1,1,1
"com.android.sdklib.devices.Hardware.getChargeType()",1,1,1
"com.android.sdklib.devices.Hardware.getCpu()",1,1,1
"com.android.sdklib.devices.Hardware.getGpu()",1,1,1
"com.android.sdklib.devices.Hardware.getInternalStorage()",1,1,1
"com.android.sdklib.devices.Hardware.getKeyboard()",1,1,1
"com.android.sdklib.devices.Hardware.getNav()",1,1,1
"com.android.sdklib.devices.Hardware.getNetworking()",1,1,1
"com.android.sdklib.devices.Hardware.getRam()",1,1,1
"com.android.sdklib.devices.Hardware.getRemovableStorage()",1,1,1
"com.android.sdklib.devices.Hardware.getScreen()",1,1,1
"com.android.sdklib.devices.Hardware.getSensors()",1,1,1
"com.android.sdklib.devices.Hardware.getSupportedAbis()",1,1,1
"com.android.sdklib.devices.Hardware.getSupportedUiModes()",1,1,1
"com.android.sdklib.devices.Hardware.hasMic()",1,1,1
"com.android.sdklib.devices.Hardware.hashCode()",1,5,8
"com.android.sdklib.devices.Hardware.setButtonType(ButtonType)",1,1,1
"com.android.sdklib.devices.Hardware.setChargeType(PowerType)",1,1,1
"com.android.sdklib.devices.Hardware.setCpu(String)",1,1,1
"com.android.sdklib.devices.Hardware.setGpu(String)",1,1,1
"com.android.sdklib.devices.Hardware.setHasMic(boolean)",1,1,1
"com.android.sdklib.devices.Hardware.setKeyboard(Keyboard)",1,1,1
"com.android.sdklib.devices.Hardware.setNav(Navigation)",1,1,1
"com.android.sdklib.devices.Hardware.setRam(Storage)",1,1,1
"com.android.sdklib.devices.Hardware.setScreen(Screen)",1,1,1
"com.android.sdklib.devices.Meta.equals(Object)",13,16,23
"com.android.sdklib.devices.Meta.getFrame()",1,1,1
"com.android.sdklib.devices.Meta.getFrameOffsetLandscape()",1,1,1
"com.android.sdklib.devices.Meta.getFrameOffsetPortrait()",1,1,1
"com.android.sdklib.devices.Meta.getIconSixteen()",1,1,1
"com.android.sdklib.devices.Meta.getIconSixtyFour()",1,1,1
"com.android.sdklib.devices.Meta.hasFrame()",2,2,3
"com.android.sdklib.devices.Meta.hasIconSixteen()",2,2,3
"com.android.sdklib.devices.Meta.hasIconSixtyFour()",2,2,3
"com.android.sdklib.devices.Meta.hashCode()",1,4,6
"com.android.sdklib.devices.Meta.setFrame(File)",1,1,1
"com.android.sdklib.devices.Meta.setFrameOffsetLandscape(Point)",1,1,1
"com.android.sdklib.devices.Meta.setFrameOffsetPortrait(Point)",1,1,1
"com.android.sdklib.devices.Meta.setIconSixteen(File)",1,1,1
"com.android.sdklib.devices.Meta.setIconSixtyFour(File)",1,1,1
"com.android.sdklib.devices.Multitouch.Multitouch(String)",1,1,1
"com.android.sdklib.devices.Multitouch.getEnum(String)",3,2,3
"com.android.sdklib.devices.Multitouch.toString()",1,1,1
"com.android.sdklib.devices.Network.Network(String)",1,1,1
"com.android.sdklib.devices.Network.getEnum(String)",3,2,3
"com.android.sdklib.devices.Network.toString()",1,1,1
"com.android.sdklib.devices.PowerType.PowerType(String)",1,1,1
"com.android.sdklib.devices.PowerType.getEnum(String)",3,2,3
"com.android.sdklib.devices.PowerType.toString()",1,1,1
"com.android.sdklib.devices.Screen.deepCopy()",1,1,1
"com.android.sdklib.devices.Screen.equals(Object)",3,1,13
"com.android.sdklib.devices.Screen.getDiagonalLength()",1,1,1
"com.android.sdklib.devices.Screen.getMechanism()",1,1,1
"com.android.sdklib.devices.Screen.getMultitouch()",1,1,1
"com.android.sdklib.devices.Screen.getPixelDensity()",1,1,1
"com.android.sdklib.devices.Screen.getRatio()",1,1,1
"com.android.sdklib.devices.Screen.getScreenType()",1,1,1
"com.android.sdklib.devices.Screen.getSize()",1,1,1
"com.android.sdklib.devices.Screen.getXDimension()",1,1,1
"com.android.sdklib.devices.Screen.getXdpi()",1,1,1
"com.android.sdklib.devices.Screen.getYDimension()",1,1,1
"com.android.sdklib.devices.Screen.getYdpi()",1,1,1
"com.android.sdklib.devices.Screen.hashCode()",1,1,1
"com.android.sdklib.devices.Screen.setDiagonalLength(double)",1,1,1
"com.android.sdklib.devices.Screen.setMechanism(TouchScreen)",1,1,1
"com.android.sdklib.devices.Screen.setMultitouch(Multitouch)",1,1,1
"com.android.sdklib.devices.Screen.setPixelDensity(Density)",1,1,1
"com.android.sdklib.devices.Screen.setRatio(ScreenRatio)",1,1,1
"com.android.sdklib.devices.Screen.setScreenType(ScreenType)",1,1,1
"com.android.sdklib.devices.Screen.setSize(ScreenSize)",1,1,1
"com.android.sdklib.devices.Screen.setXDimension(int)",1,1,1
"com.android.sdklib.devices.Screen.setXdpi(double)",1,1,1
"com.android.sdklib.devices.Screen.setYDimension(int)",1,1,1
"com.android.sdklib.devices.Screen.setYdpi(double)",1,1,1
"com.android.sdklib.devices.ScreenType.ScreenType(String)",1,1,1
"com.android.sdklib.devices.ScreenType.getEnum(String)",3,2,3
"com.android.sdklib.devices.ScreenType.toString()",1,1,1
"com.android.sdklib.devices.Sensor.Sensor(String)",1,1,1
"com.android.sdklib.devices.Sensor.getEnum(String)",3,2,3
"com.android.sdklib.devices.Sensor.toString()",1,1,1
"com.android.sdklib.devices.Software.addAllBluetoothProfiles(Collection<BluetoothProfile>)",1,1,1
"com.android.sdklib.devices.Software.addAllGlExtensions(Collection<String>)",1,1,1
"com.android.sdklib.devices.Software.addBluetoothProfile(BluetoothProfile)",1,1,1
"com.android.sdklib.devices.Software.addGlExtension(String)",1,1,1
"com.android.sdklib.devices.Software.deepCopy()",1,1,1
"com.android.sdklib.devices.Software.equals(Object)",3,7,9
"com.android.sdklib.devices.Software.getBluetoothProfiles()",1,1,1
"com.android.sdklib.devices.Software.getGlExtensions()",1,1,1
"com.android.sdklib.devices.Software.getGlVersion()",1,1,1
"com.android.sdklib.devices.Software.getMaxSdkLevel()",1,1,1
"com.android.sdklib.devices.Software.getMinSdkLevel()",1,1,1
"com.android.sdklib.devices.Software.hasLiveWallpaperSupport()",1,1,1
"com.android.sdklib.devices.Software.hasStatusBar()",1,1,1
"com.android.sdklib.devices.Software.hashCode()",1,5,7
"com.android.sdklib.devices.Software.setGlVersion(String)",1,1,1
"com.android.sdklib.devices.Software.setLiveWallpaperSupport(boolean)",1,1,1
"com.android.sdklib.devices.Software.setMaxSdkLevel(int)",1,1,1
"com.android.sdklib.devices.Software.setMinSdkLevel(int)",1,1,1
"com.android.sdklib.devices.Software.setStatusBar(boolean)",1,1,1
"com.android.sdklib.devices.State.deepCopy()",1,1,1
"com.android.sdklib.devices.State.equals(Object)",3,7,9
"com.android.sdklib.devices.State.getDescription()",1,1,1
"com.android.sdklib.devices.State.getHardware()",1,1,1
"com.android.sdklib.devices.State.getKeyState()",1,1,1
"com.android.sdklib.devices.State.getName()",1,1,1
"com.android.sdklib.devices.State.getNavState()",1,1,1
"com.android.sdklib.devices.State.getOrientation()",1,1,1
"com.android.sdklib.devices.State.hashCode()",1,3,4
"com.android.sdklib.devices.State.isDefaultState()",1,1,1
"com.android.sdklib.devices.State.setDefaultState(boolean)",1,1,1
"com.android.sdklib.devices.State.setDescription(String)",1,1,1
"com.android.sdklib.devices.State.setHardware(Hardware)",1,1,1
"com.android.sdklib.devices.State.setKeyState(KeyboardState)",1,1,1
"com.android.sdklib.devices.State.setName(String)",1,1,1
"com.android.sdklib.devices.State.setNavState(NavigationState)",1,1,1
"com.android.sdklib.devices.State.setOrientation(ScreenOrientation)",1,1,1
"com.android.sdklib.devices.State.toString()",1,1,1
"com.android.sdklib.devices.Storage.Storage(long)",1,1,1
"com.android.sdklib.devices.Storage.Storage(long,Unit)",1,1,1
"com.android.sdklib.devices.Storage.Unit.Unit(String,long)",1,1,1
"com.android.sdklib.devices.Storage.Unit.getEnum(String)",3,2,3
"com.android.sdklib.devices.Storage.Unit.getNumberOfBytes()",1,1,1
"com.android.sdklib.devices.Storage.Unit.toString()",1,1,1
"com.android.sdklib.devices.Storage.deepCopy()",1,1,1
"com.android.sdklib.devices.Storage.equals(Object)",4,1,4
"com.android.sdklib.devices.Storage.getApproriateUnits()",3,2,3
"com.android.sdklib.devices.Storage.getSize()",1,1,1
"com.android.sdklib.devices.Storage.getSizeAsUnit(Unit)",1,1,1
"com.android.sdklib.devices.Storage.hashCode()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.AvdInfo(String,File,String,String,IAndroidTarget,String,Map<String, String>)",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.AvdInfo(String,File,String,String,IAndroidTarget,String,Map<String, String>,AvdStatus)",1,2,2
"com.android.sdklib.internal.avd.AvdInfo.compareTo(AvdInfo)",5,2,8
"com.android.sdklib.internal.avd.AvdInfo.getAbiType()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getConfigFile()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getConfigFile(String)",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getCpuArch()",2,1,2
"com.android.sdklib.internal.avd.AvdInfo.getDataFolderPath()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getDefaultAvdFolder(AvdManager,String)",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getDefaultIniFile(AvdManager,String)",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getDeviceManufacturer()",2,2,3
"com.android.sdklib.internal.avd.AvdInfo.getDeviceName()",2,2,3
"com.android.sdklib.internal.avd.AvdInfo.getErrorMessage()",10,10,10
"com.android.sdklib.internal.avd.AvdInfo.getIniFile()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getName()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getPrettyAbiType(String)",1,4,5
"com.android.sdklib.internal.avd.AvdInfo.getProperties()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getStatus()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getTarget()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.getTargetHash()",1,1,1
"com.android.sdklib.internal.avd.AvdInfo.isRunning()",1,1,1
"com.android.sdklib.internal.avd.AvdManager.AvdManager(SdkManager,ILogger)",1,1,1
"com.android.sdklib.internal.avd.AvdManager.InvalidTargetPathException.InvalidTargetPathException(String)",1,1,1
"com.android.sdklib.internal.avd.AvdManager.buildAvdFilesList()",4,4,4
"com.android.sdklib.internal.avd.AvdManager.buildAvdList(ArrayList<AvdInfo>,ILogger)",1,4,4
"com.android.sdklib.internal.avd.AvdManager.copyImageFile(File,File)",1,2,2
"com.android.sdklib.internal.avd.AvdManager.createAvd(File,String,IAndroidTarget,String,String,String,Map<String, String>,boolean,boolean,boolean,ILogger)",25,61,65
"com.android.sdklib.internal.avd.AvdManager.createAvdIniFile(AvdInfo)",1,1,1
"com.android.sdklib.internal.avd.AvdManager.createAvdIniFile(String,File,IAndroidTarget,boolean)",1,6,6
"com.android.sdklib.internal.avd.AvdManager.createSdCard(String,String,String,ILogger)",2,5,7
"com.android.sdklib.internal.avd.AvdManager.deleteAvd(AvdInfo,ILogger)",2,11,11
"com.android.sdklib.internal.avd.AvdManager.deleteContentOf(File)",6,4,6
"com.android.sdklib.internal.avd.AvdManager.getAllAvds()",1,1,1
"com.android.sdklib.internal.avd.AvdManager.getAvd(String,boolean)",6,8,10
"com.android.sdklib.internal.avd.AvdManager.getBaseAvdFolder()",1,1,1
"com.android.sdklib.internal.avd.AvdManager.getBrokenAvds()",1,4,4
"com.android.sdklib.internal.avd.AvdManager.getImageRelativePath(IAndroidTarget,String)",5,4,7
"com.android.sdklib.internal.avd.AvdManager.getInstance(SdkManager,ILogger)",2,1,2
"com.android.sdklib.internal.avd.AvdManager.getSdkManager()",1,1,1
"com.android.sdklib.internal.avd.AvdManager.getSkinPath(String,IAndroidTarget)",1,3,3
"com.android.sdklib.internal.avd.AvdManager.getSkinRelativePath(String,IAndroidTarget,ILogger)",4,4,5
"com.android.sdklib.internal.avd.AvdManager.getValidAvds()",1,4,4
"com.android.sdklib.internal.avd.AvdManager.isAvdNameConflicting(String)",6,8,9
"com.android.sdklib.internal.avd.AvdManager.moveAvd(AvdInfo,String,String,ILogger)",5,7,7
"com.android.sdklib.internal.avd.AvdManager.parseAvdInfo(File,ILogger)",1,15,29
"com.android.sdklib.internal.avd.AvdManager.parseIniFile(IAbstractFile,ILogger)",1,1,1
"com.android.sdklib.internal.avd.AvdManager.parseIniFileImpl(IAbstractFile,ILogger,Charset)",5,14,16
"com.android.sdklib.internal.avd.AvdManager.parseSdcardSize(String,String[])",3,5,10
"com.android.sdklib.internal.avd.AvdManager.reloadAvds(ILogger)",1,1,1
"com.android.sdklib.internal.avd.AvdManager.removeAvd(AvdInfo)",2,1,2
"com.android.sdklib.internal.avd.AvdManager.replaceAvd(AvdInfo,AvdInfo)",1,1,1
"com.android.sdklib.internal.avd.AvdManager.setImagePathProperties(IAndroidTarget,String,Map<String, String>,ILogger)",1,5,5
"com.android.sdklib.internal.avd.AvdManager.updateAvd(AvdInfo,ILogger)",1,5,5
"com.android.sdklib.internal.avd.AvdManager.updateAvd(AvdInfo,Map<String, String>,AvdStatus,ILogger)",1,1,1
"com.android.sdklib.internal.avd.AvdManager.updateAvd(String,ILogger)",4,3,4
"com.android.sdklib.internal.avd.AvdManager.writeIniFile(File,Map<String, String>)",1,2,2
"com.android.sdklib.internal.avd.HardwareProperties.HardwareProperty.HardwareProperty()",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.HardwareProperty.getAbstract()",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.HardwareProperty.getDefault()",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.HardwareProperty.getDescription()",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.HardwareProperty.getEnum()",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.HardwareProperty.getName()",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.HardwareProperty.getType()",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.HardwareProperty.isValidForUi()",1,2,2
"com.android.sdklib.internal.avd.HardwareProperties.HardwarePropertyType.HardwarePropertyType(String,boolean)",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.HardwarePropertyType.getEnum(String,boolean)",3,3,4
"com.android.sdklib.internal.avd.HardwareProperties.HardwarePropertyType.getName()",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.HardwarePropertyType.isEnum()",1,1,1
"com.android.sdklib.internal.avd.HardwareProperties.getBooleanValueIndex(String)",3,2,3
"com.android.sdklib.internal.avd.HardwareProperties.parseHardwareDefinitions(File,ILogger)",5,17,21
"com.android.sdklib.internal.build.BuildConfigGenerator.BuildConfigGenerator(String,String,boolean)",1,1,1
"com.android.sdklib.internal.build.BuildConfigGenerator.generate()",1,2,2
"com.android.sdklib.internal.build.BuildConfigGenerator.getBuildConfigFile()",1,1,1
"com.android.sdklib.internal.build.BuildConfigGenerator.getFolderPath()",1,1,1
"com.android.sdklib.internal.build.BuildConfigGenerator.readEmbeddedTextFile(String)",2,3,3
"com.android.sdklib.internal.build.BuildConfigGenerator.replaceParameters(String,Map<String, String>)",1,3,3
"com.android.sdklib.internal.build.BuildConfigGenerator.writeFile(File,String)",1,3,3
"com.android.sdklib.internal.build.DebugKeyProvider.DebugKeyProvider(String,String,IKeyGenOutput)",1,3,3
"com.android.sdklib.internal.build.DebugKeyProvider.KeytoolException.KeytoolException(String)",1,1,1
"com.android.sdklib.internal.build.DebugKeyProvider.KeytoolException.KeytoolException(String,String,String)",1,1,1
"com.android.sdklib.internal.build.DebugKeyProvider.KeytoolException.getCommandLine()",1,1,1
"com.android.sdklib.internal.build.DebugKeyProvider.KeytoolException.getJavaHome()",1,1,1
"com.android.sdklib.internal.build.DebugKeyProvider.createNewStore(String,String,IKeyGenOutput)",1,2,2
"com.android.sdklib.internal.build.DebugKeyProvider.getCertificate()",2,2,2
"com.android.sdklib.internal.build.DebugKeyProvider.getDebugKey()",2,2,2
"com.android.sdklib.internal.build.DebugKeyProvider.getDefaultKeyStoreOsPath()",2,1,2
"com.android.sdklib.internal.build.DebugKeyProvider.loadKeyEntry(String,String)",1,3,5
"com.android.sdklib.internal.build.KeystoreHelper.createNewStore(String,String,String,String,String,String,int,IKeyGenOutput)",2,12,15
"com.android.sdklib.internal.build.SignedJarBuilder.IZipEntryFilter.ZipAbortException.ZipAbortException()",1,1,1
"com.android.sdklib.internal.build.SignedJarBuilder.IZipEntryFilter.ZipAbortException.ZipAbortException(String,Object...)",1,1,1
"com.android.sdklib.internal.build.SignedJarBuilder.IZipEntryFilter.ZipAbortException.ZipAbortException(Throwable)",1,1,1
"com.android.sdklib.internal.build.SignedJarBuilder.IZipEntryFilter.ZipAbortException.ZipAbortException(Throwable,String,Object...)",1,1,1
"com.android.sdklib.internal.build.SignedJarBuilder.SignatureOutputStream.SignatureOutputStream(OutputStream,Signature)",1,1,1
"com.android.sdklib.internal.build.SignedJarBuilder.SignatureOutputStream.size()",1,1,1
"com.android.sdklib.internal.build.SignedJarBuilder.SignatureOutputStream.write(byte[],int,int)",1,1,2
"com.android.sdklib.internal.build.SignedJarBuilder.SignatureOutputStream.write(int)",1,1,2
"com.android.sdklib.internal.build.SignedJarBuilder.SignedJarBuilder(OutputStream,PrivateKey,X509Certificate)",1,2,3
"com.android.sdklib.internal.build.SignedJarBuilder.cleanUp()",1,2,3
"com.android.sdklib.internal.build.SignedJarBuilder.close()",1,2,2
"com.android.sdklib.internal.build.SignedJarBuilder.writeEntry(InputStream,JarEntry)",1,5,5
"com.android.sdklib.internal.build.SignedJarBuilder.writeFile(File,String)",1,1,1
"com.android.sdklib.internal.build.SignedJarBuilder.writeSignatureBlock(Signature,X509Certificate,PrivateKey)",1,1,1
"com.android.sdklib.internal.build.SignedJarBuilder.writeSignatureFile(SignatureOutputStream)",1,4,4
"com.android.sdklib.internal.build.SignedJarBuilder.writeZip(InputStream,IZipEntryFilter)",4,4,7
"com.android.sdklib.internal.build.SymbolLoader.SymbolEntry.SymbolEntry(String,String,String)",1,1,1
"com.android.sdklib.internal.build.SymbolLoader.SymbolEntry.getName()",1,1,1
"com.android.sdklib.internal.build.SymbolLoader.SymbolEntry.getType()",1,1,1
"com.android.sdklib.internal.build.SymbolLoader.SymbolEntry.getValue()",1,1,1
"com.android.sdklib.internal.build.SymbolLoader.SymbolLoader(File)",1,1,1
"com.android.sdklib.internal.build.SymbolLoader.getSymbols()",1,1,1
"com.android.sdklib.internal.build.SymbolLoader.load()",1,3,3
"com.android.sdklib.internal.build.SymbolWriter.SymbolWriter(String,String,SymbolLoader,SymbolLoader)",1,1,1
"com.android.sdklib.internal.build.SymbolWriter.write()",1,4,5
"com.android.sdklib.internal.project.ProjectCreator.ProjectCreateException.ProjectCreateException(String)",1,1,1
"com.android.sdklib.internal.project.ProjectCreator.ProjectCreateException.ProjectCreateException(String,Object...)",1,1,1
"com.android.sdklib.internal.project.ProjectCreator.ProjectCreateException.ProjectCreateException(Throwable,String,Object...)",1,2,2
"com.android.sdklib.internal.project.ProjectCreator.ProjectCreator(SdkManager,String,OutputLevel,ILogger)",1,1,1
"com.android.sdklib.internal.project.ProjectCreator.checkFileContainsRegexp(File,String)",3,3,6
"com.android.sdklib.internal.project.ProjectCreator.checkNewProjectLocation(String)",3,4,9
"com.android.sdklib.internal.project.ProjectCreator.checkProjectFolder(String,String)",3,3,3
"com.android.sdklib.internal.project.ProjectCreator.combinePackageActivityNames(String,String)",3,1,3
"com.android.sdklib.internal.project.ProjectCreator.createDirs(File,String)",6,4,7
"com.android.sdklib.internal.project.ProjectCreator.createProject(String,String,String,String,IAndroidTarget,boolean,String)",2,16,19
"com.android.sdklib.internal.project.ProjectCreator.extractPackageFromManifest(File,Map<String, String>)",2,10,11
"com.android.sdklib.internal.project.ProjectCreator.installBinaryFile(File,File)",1,5,8
"com.android.sdklib.internal.project.ProjectCreator.installFullPathTemplate(String,File,Map<String, String>)",1,5,6
"com.android.sdklib.internal.project.ProjectCreator.installIcon(String,String,File,String)",2,2,2
"com.android.sdklib.internal.project.ProjectCreator.installIcons(File,IAndroidTarget)",1,1,1
"com.android.sdklib.internal.project.ProjectCreator.installTargetTemplate(String,File,Map<String, String>,IAndroidTarget)",1,1,1
"com.android.sdklib.internal.project.ProjectCreator.installTemplate(String,File,Map<String, String>)",1,1,1
"com.android.sdklib.internal.project.ProjectCreator.println(String,Object...)",1,2,3
"com.android.sdklib.internal.project.ProjectCreator.stripString(String,char)",2,3,7
"com.android.sdklib.internal.project.ProjectCreator.updateProject(String,IAndroidTarget,String,String)",14,39,46
"com.android.sdklib.internal.project.ProjectCreator.updateTestProject(String,String,SdkManager)",9,13,16
"com.android.sdklib.internal.project.ProjectProperties.ProjectProperties(IAbstractFolder,Map<String, String>,PropertyType)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.PropertyType.PropertyType(String,String,String[],String[])",1,3,3
"com.android.sdklib.internal.project.ProjectProperties.PropertyType.getFilename()",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.PropertyType.getHeader()",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.PropertyType.getOrderedTypes()",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.PropertyType.isKnownProperty(String)",3,3,4
"com.android.sdklib.internal.project.ProjectProperties.PropertyType.isRemovedProperty(String)",3,3,4
"com.android.sdklib.internal.project.ProjectProperties.create(IAbstractFolder,PropertyType)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.create(String,PropertyType)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.createEmpty(IAbstractFolder,PropertyType)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.createEmpty(String,PropertyType)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.debugPrint()",1,2,2
"com.android.sdklib.internal.project.ProjectProperties.delete(IAbstractFolder,PropertyType)",3,3,3
"com.android.sdklib.internal.project.ProjectProperties.delete(String,PropertyType)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.escape(String)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.getFile()",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.getProperty(String)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.getType()",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.keySet()",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.load(IAbstractFolder,PropertyType)",4,3,4
"com.android.sdklib.internal.project.ProjectProperties.load(String,PropertyType)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.makeWorkingCopy()",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.makeWorkingCopy(PropertyType)",1,1,1
"com.android.sdklib.internal.project.ProjectProperties.parsePropertyFile(IAbstractFile,ILogger)",4,10,11
"com.android.sdklib.internal.project.ProjectProperties.reload()",1,4,4
"com.android.sdklib.internal.project.ProjectProperties.unescape(String)",1,1,1
"com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy.ProjectPropertiesWorkingCopy(IAbstractFolder,Map<String, String>,PropertyType)",1,1,1
"com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy.makeReadOnlyCopy()",1,1,1
"com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy.merge(PropertyType)",1,8,8
"com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy.removeProperty(String)",1,1,1
"com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy.save()",1,15,16
"com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy.setProperty(String,String)",1,1,1
"com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy.writeValue(OutputStreamWriter,String,String,boolean)",1,3,3
"com.android.sdklib.internal.repository.AdbWrapper.AdbWrapper(String,ITaskMonitor)",1,1,2
"com.android.sdklib.internal.repository.AdbWrapper.display(String,Object...)",1,1,1
"com.android.sdklib.internal.repository.AdbWrapper.displayError(String,Object...)",1,1,1
"com.android.sdklib.internal.repository.AdbWrapper.startAdb()",3,5,5
"com.android.sdklib.internal.repository.AdbWrapper.stopAdb()",3,3,6
"com.android.sdklib.internal.repository.AddonsListFetcher.Site.Site(String,String,SiteType)",1,1,1
"com.android.sdklib.internal.repository.AddonsListFetcher.Site.getType()",1,1,1
"com.android.sdklib.internal.repository.AddonsListFetcher.Site.getUiName()",1,1,1
"com.android.sdklib.internal.repository.AddonsListFetcher.Site.getUrl()",1,1,1
"com.android.sdklib.internal.repository.AddonsListFetcher.Site.toString()",1,1,1
"com.android.sdklib.internal.repository.AddonsListFetcher.closeStream(InputStream)",1,3,4
"com.android.sdklib.internal.repository.AddonsListFetcher.fetch(String,DownloadCache,ITaskMonitor)",10,24,27
"com.android.sdklib.internal.repository.AddonsListFetcher.fetchXmlUrl(String,DownloadCache,ITaskMonitor,Exception[])",1,2,4
"com.android.sdklib.internal.repository.AddonsListFetcher.getDocument(InputStream,ITaskMonitor)",1,4,4
"com.android.sdklib.internal.repository.AddonsListFetcher.getFirstChild(Node,String,String)",4,5,6
"com.android.sdklib.internal.repository.AddonsListFetcher.getValidator(int)",2,2,3
"com.android.sdklib.internal.repository.AddonsListFetcher.getXmlSchemaVersion(InputStream)",9,9,14
"com.android.sdklib.internal.repository.AddonsListFetcher.parseAddonsList(Document,String,String,ITaskMonitor)",5,14,19
"com.android.sdklib.internal.repository.AddonsListFetcher.validateXml(InputStream,String,int,String[],Boolean[])",3,4,5
"com.android.sdklib.internal.repository.CanceledByUserException.CanceledByUserException(String)",1,1,1
"com.android.sdklib.internal.repository.DownloadCache.DownloadCache(Strategy)",1,1,3
"com.android.sdklib.internal.repository.DownloadCache.clearCache()",1,7,7
"com.android.sdklib.internal.repository.DownloadCache.clearOldCache()",1,9,9
"com.android.sdklib.internal.repository.DownloadCache.downloadAndCache(String,ITaskMonitor,File,File,Header[],AtomicInteger)",2,11,20
"com.android.sdklib.internal.repository.DownloadCache.getCacheFilename(String)",1,3,3
"com.android.sdklib.internal.repository.DownloadCache.getCacheRoot()",1,1,1
"com.android.sdklib.internal.repository.DownloadCache.getCurrentSize()",1,7,7
"com.android.sdklib.internal.repository.DownloadCache.getInfoFilename(String)",1,1,1
"com.android.sdklib.internal.repository.DownloadCache.getStrategy()",1,1,1
"com.android.sdklib.internal.repository.DownloadCache.initCacheRoot()",1,2,3
"com.android.sdklib.internal.repository.DownloadCache.openCachedUrl(String,ITaskMonitor)",12,24,38
"com.android.sdklib.internal.repository.DownloadCache.openDirectUrl(String,Header[],ITaskMonitor)",1,2,2
"com.android.sdklib.internal.repository.DownloadCache.openDirectUrl(String,ITaskMonitor)",1,2,2
"com.android.sdklib.internal.repository.DownloadCache.readCachedFile(File)",2,4,7
"com.android.sdklib.internal.repository.DownloadCache.readInfo(File)",2,3,5
"com.android.sdklib.internal.repository.DownloadCache.saveInfo(String,HttpResponse,File)",1,4,4
"com.android.sdklib.internal.repository.LocalSdkParser.LocalSdkParser()",1,1,1
"com.android.sdklib.internal.repository.LocalSdkParser.clearPackages()",1,1,1
"com.android.sdklib.internal.repository.LocalSdkParser.getPackages()",1,1,1
"com.android.sdklib.internal.repository.LocalSdkParser.parseProperties(File)",3,4,6
"com.android.sdklib.internal.repository.LocalSdkParser.parseSdk(String,SdkManager,ITaskMonitor)",1,1,1
"com.android.sdklib.internal.repository.LocalSdkParser.parseSdk(String,SdkManager,int,ITaskMonitor)",1,28,28
"com.android.sdklib.internal.repository.LocalSdkParser.scanDoc(File,ILogger)",2,3,3
"com.android.sdklib.internal.repository.LocalSdkParser.scanExtras(SdkManager,HashSet<File>,ArrayList<Package>,ILogger)",2,3,4
"com.android.sdklib.internal.repository.LocalSdkParser.scanExtrasDirectory(String,HashSet<File>,ArrayList<Package>,ILogger)",2,6,7
"com.android.sdklib.internal.repository.LocalSdkParser.scanMissingAddons(SdkManager,HashSet<File>,ArrayList<Package>,ILogger)",2,5,6
"com.android.sdklib.internal.repository.LocalSdkParser.scanMissingSamples(SdkManager,HashSet<File>,ArrayList<Package>,ILogger)",2,6,7
"com.android.sdklib.internal.repository.LocalSdkParser.scanMissingSystemImages(SdkManager,HashSet<File>,ArrayList<Package>,ILogger)",2,10,12
"com.android.sdklib.internal.repository.LocalSdkParser.scanPlatformTools(File,ILogger)",2,2,3
"com.android.sdklib.internal.repository.LocalSdkParser.scanSources(SdkManager,HashSet<File>,ArrayList<Package>,ILogger)",2,6,8
"com.android.sdklib.internal.repository.LocalSdkParser.scanTools(File,ILogger)",2,7,11
"com.android.sdklib.internal.repository.NullTaskMonitor.NullTaskMonitor(ILogger)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.createSubMonitor(int)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.displayLoginCredentialsPrompt(String,String)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.displayPrompt(String,String)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.error(Throwable,String,Object...)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.getProgress()",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.getProgressMax()",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.incProgress(int)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.info(String,Object...)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.isCancelRequested()",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.log(String,Object...)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.logError(String,Object...)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.logVerbose(String,Object...)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.setDescription(String,Object...)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.setProgressMax(int)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.verbose(String,Object...)",1,1,1
"com.android.sdklib.internal.repository.NullTaskMonitor.warning(String,Object...)",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStat.PlatformStat(PlatformStatBase,float)",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStat.PlatformStat(int,String,String,float,float)",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStat.getAccumShare()",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStat.toString()",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStatBase.PlatformStatBase(int,String,String,float)",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStatBase.getApiLevel()",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStatBase.getCodeName()",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStatBase.getShare()",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStatBase.getVersionName()",1,1,1
"com.android.sdklib.internal.repository.SdkStats.PlatformStatBase.toString()",1,1,1
"com.android.sdklib.internal.repository.SdkStats.SdkStats()",1,1,1
"com.android.sdklib.internal.repository.SdkStats.closeStream(InputStream)",1,3,4
"com.android.sdklib.internal.repository.SdkStats.fetchXmlUrl(String,DownloadCache,ITaskMonitor,Exception[])",1,2,4
"com.android.sdklib.internal.repository.SdkStats.getDocument(InputStream,ITaskMonitor)",1,4,4
"com.android.sdklib.internal.repository.SdkStats.getFirstChild(Node,String,String)",4,5,6
"com.android.sdklib.internal.repository.SdkStats.getStats()",1,1,1
"com.android.sdklib.internal.repository.SdkStats.getValidator(int)",2,3,5
"com.android.sdklib.internal.repository.SdkStats.getXmlSchemaVersion(InputStream)",9,9,14
"com.android.sdklib.internal.repository.SdkStats.load(DownloadCache,boolean,ITaskMonitor)",5,15,16
"com.android.sdklib.internal.repository.SdkStats.parseStatsDocument(Document,String,ITaskMonitor)",10,14,23
"com.android.sdklib.internal.repository.SdkStats.validateXml(InputStream,String,int,String[],Boolean[])",3,4,5
"com.android.sdklib.internal.repository.UrlOpener.UrlOpener()",1,1,1
"com.android.sdklib.internal.repository.UrlOpener.openUrl(String,boolean,ITaskMonitor,Header[])",2,13,20
"com.android.sdklib.internal.repository.UrlOpener.openWithHttpClient(String,ITaskMonitor,Header[])",8,23,26
"com.android.sdklib.internal.repository.UrlOpener.openWithUrl(String,Header[])",1,7,10
"com.android.sdklib.internal.repository.UrlOpener.toByteArrayInputStream(InputStream)",1,3,3
"com.android.sdklib.internal.repository.UserCredentials.UserCredentials(String,String,String,String)",1,1,1
"com.android.sdklib.internal.repository.UserCredentials.getDomain()",1,1,1
"com.android.sdklib.internal.repository.UserCredentials.getPassword()",1,1,1
"com.android.sdklib.internal.repository.UserCredentials.getUserName()",1,1,1
"com.android.sdklib.internal.repository.UserCredentials.getWorkstation()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.Arch.Arch(String)",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.Arch.getCurrentArch()",4,7,8
"com.android.sdklib.internal.repository.archives.Archive.Arch.getUiName()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.Arch.getXmlName()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.Arch.isCompatible()",2,1,2
"com.android.sdklib.internal.repository.archives.Archive.Archive(Package,Os,Arch,String,long,String)",1,2,2
"com.android.sdklib.internal.repository.archives.Archive.Archive(Package,Properties,Os,Arch,String)",1,3,3
"com.android.sdklib.internal.repository.archives.Archive.ChecksumType.ChecksumType(String)",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.ChecksumType.getMessageDigest()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.Os.Os(String)",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.Os.getCurrentOs()",4,3,4
"com.android.sdklib.internal.repository.archives.Archive.Os.getUiName()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.Os.getXmlName()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.Os.isCompatible()",2,1,2
"com.android.sdklib.internal.repository.archives.Archive.compareTo(Archive)",2,2,3
"com.android.sdklib.internal.repository.archives.Archive.deleteLocal()",1,2,2
"com.android.sdklib.internal.repository.archives.Archive.equals(Object)",24,7,24
"com.android.sdklib.internal.repository.archives.Archive.getArch()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getChecksum()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getChecksumType()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getLocalOsPath()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getLongDescription()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getOs()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getOsDescription()",1,4,6
"com.android.sdklib.internal.repository.archives.Archive.getParentPackage()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getSha1Description()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getShortDescription()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getSize()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.getSizeDescription()",1,4,4
"com.android.sdklib.internal.repository.archives.Archive.getUrl()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.hashCode()",1,7,8
"com.android.sdklib.internal.repository.archives.Archive.isCompatible()",1,2,2
"com.android.sdklib.internal.repository.archives.Archive.isLocal()",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.saveProperties(Properties)",1,1,1
"com.android.sdklib.internal.repository.archives.Archive.toString()",2,1,2
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.ArchiveInstaller()",1,1,1
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.ArchiveInstaller(IFileOp)",1,1,1
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.downloadFile(Archive,String,DownloadCache,ITaskMonitor,boolean)",9,13,14
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.fetchUrl(Archive,Header[],File,File,String,String,DownloadCache,ITaskMonitor)",8,22,34
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.fileChecksum(MessageDigest,File,ITaskMonitor)",1,6,7
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.generateSourceProperties(Archive,File)",1,2,2
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.getDigestChecksum(MessageDigest)",1,2,2
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.getFileOp()",1,1,1
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.getNewTempFolder(String,String,String)",5,4,6
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.getTempFolder(String)",1,1,1
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.install(ArchiveReplacement,String,boolean,SdkManager,DownloadCache,ITaskMonitor)",5,8,8
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.moveFolder(File,File)",3,2,4
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.preparePartialDownload(Archive,File,File)",4,9,11
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.restoreFolder(File,File)",4,12,16
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.unarchive(ArchiveReplacement,String,File,SdkManager,ITaskMonitor)",12,20,23
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.unzipFolder(ArchiveReplacement,File,File,ITaskMonitor)",9,19,21
"com.android.sdklib.internal.repository.archives.ArchiveInstaller.windowsDestDirLocked(String,File,ITaskMonitor)",1,9,9
"com.android.sdklib.internal.repository.archives.ArchiveReplacement.ArchiveReplacement(Archive,Archive)",1,1,1
"com.android.sdklib.internal.repository.archives.ArchiveReplacement.getLongDescription()",3,3,3
"com.android.sdklib.internal.repository.archives.ArchiveReplacement.getNewArchive()",1,1,1
"com.android.sdklib.internal.repository.archives.ArchiveReplacement.getReplaced()",1,1,1
"com.android.sdklib.internal.repository.archives.ArchiveReplacement.getShortDescription()",3,3,3
"com.android.sdklib.internal.repository.archives.ArchiveReplacement.toString()",3,3,3
"com.android.sdklib.internal.repository.packages.AddonPackage.AddonPackage(IAndroidTarget,Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.AddonPackage(SdkSource,IAndroidTarget,Properties)",1,5,10
"com.android.sdklib.internal.repository.packages.AddonPackage.AddonPackage(SdkSource,Node,String,Map<String, String>)",1,3,7
"com.android.sdklib.internal.repository.packages.AddonPackage.Lib.Lib(String,String)",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.Lib.equals(Object)",10,3,10
"com.android.sdklib.internal.repository.packages.AddonPackage.Lib.getDescription()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.Lib.getName()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.Lib.hashCode()",1,3,3
"com.android.sdklib.internal.repository.packages.AddonPackage.comparisonKey()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.create(IAndroidTarget,Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.createBroken(String,Properties,Map<String, String>,String)",1,1,2
"com.android.sdklib.internal.repository.packages.AddonPackage.encodeAddonName()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.equals(Object)",17,5,17
"com.android.sdklib.internal.repository.packages.AddonPackage.getAndroidVersion()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.getDisplayName()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.getDisplayVendor()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.getExactApiLevel()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.getInstallFolder(String,SdkManager)",6,10,11
"com.android.sdklib.internal.repository.packages.AddonPackage.getLayoutlibVersion()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.getLibs()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.getListDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.AddonPackage.getLongDescription()",1,2,4
"com.android.sdklib.internal.repository.packages.AddonPackage.getNameId()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.getShortDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.AddonPackage.getVendorId()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.hashCode()",1,5,5
"com.android.sdklib.internal.repository.packages.AddonPackage.installId()",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.parseLib(Node)",1,1,1
"com.android.sdklib.internal.repository.packages.AddonPackage.parseLibs(Node)",1,6,6
"com.android.sdklib.internal.repository.packages.AddonPackage.sameItemAs(Package)",4,4,5
"com.android.sdklib.internal.repository.packages.AddonPackage.sanitizeDisplayToNameId(String)",1,3,3
"com.android.sdklib.internal.repository.packages.AddonPackage.saveProperties(Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.BrokenPackage(Properties,String,String,int,int,String)",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.getExactApiLevel()",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.getInstallFolder(String,SdkManager)",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.getListDescription()",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.getLongDescription()",3,3,5
"com.android.sdklib.internal.repository.packages.BrokenPackage.getMinApiLevel()",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.getShortDescription()",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.installId()",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.postInstallHook(Archive,ITaskMonitor,File)",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.preInstallHook(Archive,ITaskMonitor,String,File)",1,1,1
"com.android.sdklib.internal.repository.packages.BrokenPackage.sameItemAs(Package)",2,4,4
"com.android.sdklib.internal.repository.packages.BrokenPackage.saveProperties(Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.DocPackage.DocPackage(SdkSource,Node,String,Map<String, String>)",1,1,2
"com.android.sdklib.internal.repository.packages.DocPackage.DocPackage(SdkSource,Properties,int,String,int,String,String,String,Os,Arch,String)",1,1,1
"com.android.sdklib.internal.repository.packages.DocPackage.canBeUpdatedBy(Package)",5,3,6
"com.android.sdklib.internal.repository.packages.DocPackage.create(SdkSource,Properties,int,String,int,String,String,String,Os,Arch,String)",1,1,1
"com.android.sdklib.internal.repository.packages.DocPackage.equals(Object)",7,2,7
"com.android.sdklib.internal.repository.packages.DocPackage.getAndroidVersion()",1,1,1
"com.android.sdklib.internal.repository.packages.DocPackage.getInstallFolder(String,SdkManager)",1,1,1
"com.android.sdklib.internal.repository.packages.DocPackage.getListDescription()",2,2,4
"com.android.sdklib.internal.repository.packages.DocPackage.getLongDescription()",1,4,5
"com.android.sdklib.internal.repository.packages.DocPackage.getShortDescription()",2,2,4
"com.android.sdklib.internal.repository.packages.DocPackage.hashCode()",1,2,2
"com.android.sdklib.internal.repository.packages.DocPackage.installId()",1,1,1
"com.android.sdklib.internal.repository.packages.DocPackage.sameItemAs(Package)",2,2,2
"com.android.sdklib.internal.repository.packages.DocPackage.saveProperties(Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.ExtraPackage.ExtraPackage(SdkSource,Node,String,Map<String, String>)",1,3,5
"com.android.sdklib.internal.repository.packages.ExtraPackage.ExtraPackage(SdkSource,Properties,String,String,int,String,String,String,Os,Arch,String)",1,9,11
"com.android.sdklib.internal.repository.packages.ExtraPackage.comparisonKey()",1,1,1
"com.android.sdklib.internal.repository.packages.ExtraPackage.create(SdkSource,Properties,String,String,int,String,String,String,Os,Arch,String)",1,1,1
"com.android.sdklib.internal.repository.packages.ExtraPackage.equals(Object)",12,3,12
"com.android.sdklib.internal.repository.packages.ExtraPackage.getDisplayName()",1,1,1
"com.android.sdklib.internal.repository.packages.ExtraPackage.getInstallFolder(String,SdkManager)",4,4,5
"com.android.sdklib.internal.repository.packages.ExtraPackage.getInstallSubFolder(String)",1,3,5
"com.android.sdklib.internal.repository.packages.ExtraPackage.getListDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.ExtraPackage.getLocalArchivePath()",3,3,4
"com.android.sdklib.internal.repository.packages.ExtraPackage.getLongDescription()",1,5,7
"com.android.sdklib.internal.repository.packages.ExtraPackage.getMinApiLevel()",1,1,1
"com.android.sdklib.internal.repository.packages.ExtraPackage.getOldPaths()",2,2,3
"com.android.sdklib.internal.repository.packages.ExtraPackage.getPath()",1,3,3
"com.android.sdklib.internal.repository.packages.ExtraPackage.getPrettyName()",1,11,14
"com.android.sdklib.internal.repository.packages.ExtraPackage.getProjectFiles()",1,1,1
"com.android.sdklib.internal.repository.packages.ExtraPackage.getShortDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.ExtraPackage.getVendorDisplay()",1,1,1
"com.android.sdklib.internal.repository.packages.ExtraPackage.getVendorId()",1,1,1
"com.android.sdklib.internal.repository.packages.ExtraPackage.hashCode()",1,3,3
"com.android.sdklib.internal.repository.packages.ExtraPackage.installId()",1,1,1
"com.android.sdklib.internal.repository.packages.ExtraPackage.parseProjectFiles(Node)",1,8,8
"com.android.sdklib.internal.repository.packages.ExtraPackage.sameItemAs(Package)",6,4,8
"com.android.sdklib.internal.repository.packages.ExtraPackage.sameVendorAndPath(String,String,String,String)",7,13,21
"com.android.sdklib.internal.repository.packages.ExtraPackage.sanitizeLegacyVendor(String)",2,4,4
"com.android.sdklib.internal.repository.packages.ExtraPackage.saveProperties(Properties)",1,7,7
"com.android.sdklib.internal.repository.packages.FullRevision.FullRevision(int)",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevision.FullRevision(int,int,int)",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevision.FullRevision(int,int,int,int)",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevision.compareTo(FullRevision)",4,1,6
"com.android.sdklib.internal.repository.packages.FullRevision.equals(Object)",8,1,8
"com.android.sdklib.internal.repository.packages.FullRevision.getMajor()",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevision.getMicro()",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevision.getMinor()",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevision.getPreview()",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevision.hashCode()",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevision.isPreview()",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevision.parseRevision(String)",3,6,8
"com.android.sdklib.internal.repository.packages.FullRevision.toIntArray(boolean)",1,1,3
"com.android.sdklib.internal.repository.packages.FullRevision.toShortString()",1,4,5
"com.android.sdklib.internal.repository.packages.FullRevision.toString()",1,2,2
"com.android.sdklib.internal.repository.packages.FullRevisionPackage.FullRevisionPackage(SdkSource,Node,String,Map<String, String>)",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevisionPackage.FullRevisionPackage(SdkSource,Properties,int,String,String,String,Os,Arch,String)",1,2,4
"com.android.sdklib.internal.repository.packages.FullRevisionPackage.canBeUpdatedBy(Package)",5,2,6
"com.android.sdklib.internal.repository.packages.FullRevisionPackage.equals(Object)",7,2,7
"com.android.sdklib.internal.repository.packages.FullRevisionPackage.getRevision()",1,1,1
"com.android.sdklib.internal.repository.packages.FullRevisionPackage.hashCode()",1,2,2
"com.android.sdklib.internal.repository.packages.FullRevisionPackage.saveProperties(Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.LayoutlibVersionMixin.LayoutlibVersionMixin(Node)",1,2,2
"com.android.sdklib.internal.repository.packages.LayoutlibVersionMixin.LayoutlibVersionMixin(Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.LayoutlibVersionMixin.equals(Object)",7,2,7
"com.android.sdklib.internal.repository.packages.LayoutlibVersionMixin.getLayoutlibVersion()",1,1,1
"com.android.sdklib.internal.repository.packages.LayoutlibVersionMixin.hashCode()",1,2,2
"com.android.sdklib.internal.repository.packages.LayoutlibVersionMixin.saveProperties(Properties)",1,2,2
"com.android.sdklib.internal.repository.packages.MajorRevision.MajorRevision(int)",1,1,1
"com.android.sdklib.internal.repository.packages.MajorRevision.parseRevision(String)",2,1,2
"com.android.sdklib.internal.repository.packages.MajorRevision.toString()",1,1,1
"com.android.sdklib.internal.repository.packages.MajorRevisionPackage.MajorRevisionPackage(SdkSource,Node,String,Map<String, String>)",1,1,1
"com.android.sdklib.internal.repository.packages.MajorRevisionPackage.MajorRevisionPackage(SdkSource,Properties,int,String,String,String,Os,Arch,String)",1,2,4
"com.android.sdklib.internal.repository.packages.MajorRevisionPackage.canBeUpdatedBy(Package)",4,1,4
"com.android.sdklib.internal.repository.packages.MajorRevisionPackage.getRevision()",1,1,1
"com.android.sdklib.internal.repository.packages.MajorRevisionPackage.saveProperties(Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.MinToolsPackage.MinToolsPackage(SdkSource,Node,String,Map<String, String>)",1,1,1
"com.android.sdklib.internal.repository.packages.MinToolsPackage.MinToolsPackage(SdkSource,Properties,int,String,String,String,Os,Arch,String)",1,2,3
"com.android.sdklib.internal.repository.packages.MinToolsPackage.equals(Object)",7,2,7
"com.android.sdklib.internal.repository.packages.MinToolsPackage.getMinToolsRevision()",1,1,1
"com.android.sdklib.internal.repository.packages.MinToolsPackage.hashCode()",1,2,2
"com.android.sdklib.internal.repository.packages.MinToolsPackage.saveProperties(Properties)",1,2,2
"com.android.sdklib.internal.repository.packages.Package.Package(SdkSource,Node,String,Map<String, String>)",1,1,1
"com.android.sdklib.internal.repository.packages.Package.Package(SdkSource,Properties,int,String,String,String,Os,Arch,String)",1,4,9
"com.android.sdklib.internal.repository.packages.Package.compareTo(Package)",1,1,1
"com.android.sdklib.internal.repository.packages.Package.comparisonKey()",1,10,11
"com.android.sdklib.internal.repository.packages.Package.equals(Object)",12,3,12
"com.android.sdklib.internal.repository.packages.Package.getArchives()",1,1,1
"com.android.sdklib.internal.repository.packages.Package.getDescUrl()",1,1,1
"com.android.sdklib.internal.repository.packages.Package.getDescription()",1,1,1
"com.android.sdklib.internal.repository.packages.Package.getLicense()",1,1,1
"com.android.sdklib.internal.repository.packages.Package.getLongDescription()",1,9,10
"com.android.sdklib.internal.repository.packages.Package.getParentSource()",1,1,1
"com.android.sdklib.internal.repository.packages.Package.getProperty(Properties,String,String)",2,1,2
"com.android.sdklib.internal.repository.packages.Package.getPropertyInt(Properties,String,int)",2,3,4
"com.android.sdklib.internal.repository.packages.Package.getReleaseNote()",1,1,1
"com.android.sdklib.internal.repository.packages.Package.getReleaseNoteUrl()",1,1,1
"com.android.sdklib.internal.repository.packages.Package.hasArchive(Archive)",3,1,3
"com.android.sdklib.internal.repository.packages.Package.hasCompatibleArchive()",3,2,3
"com.android.sdklib.internal.repository.packages.Package.hashCode()",1,3,3
"com.android.sdklib.internal.repository.packages.Package.initializeArchives(Properties,Os,Arch,String)",1,1,1
"com.android.sdklib.internal.repository.packages.Package.isLocal()",1,2,2
"com.android.sdklib.internal.repository.packages.Package.isObsolete()",1,1,1
"com.android.sdklib.internal.repository.packages.Package.parseArchive(Node)",1,1,1
"com.android.sdklib.internal.repository.packages.Package.parseArchives(Node)",1,6,6
"com.android.sdklib.internal.repository.packages.Package.parseLicense(Node,Map<String, String>)",3,3,3
"com.android.sdklib.internal.repository.packages.Package.postInstallHook(Archive,ITaskMonitor,File)",1,1,1
"com.android.sdklib.internal.repository.packages.Package.postUnzipFileHook(Archive,ITaskMonitor,IFileOp,File,ZipArchiveEntry)",1,4,5
"com.android.sdklib.internal.repository.packages.Package.preInstallHook(Archive,ITaskMonitor,String,File)",1,1,1
"com.android.sdklib.internal.repository.packages.Package.saveProperties(Properties)",1,13,13
"com.android.sdklib.internal.repository.packages.Package.toString()",2,1,2
"com.android.sdklib.internal.repository.packages.PackageParserUtils.findChildElement(Node,String)",5,6,7
"com.android.sdklib.internal.repository.packages.PackageParserUtils.getEnumAttribute(Node,String,Object[],Object)",4,3,4
"com.android.sdklib.internal.repository.packages.PackageParserUtils.getOptionalXmlString(Node,String)",1,2,2
"com.android.sdklib.internal.repository.packages.PackageParserUtils.getXmlInt(Node,String,int)",1,1,2
"com.android.sdklib.internal.repository.packages.PackageParserUtils.getXmlLong(Node,String,long)",1,1,2
"com.android.sdklib.internal.repository.packages.PackageParserUtils.getXmlString(Node,String)",1,2,2
"com.android.sdklib.internal.repository.packages.PackageParserUtils.parseFullRevisionElement(Node)",1,3,4
"com.android.sdklib.internal.repository.packages.PlatformPackage.PlatformPackage(IAndroidTarget,Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformPackage.PlatformPackage(SdkSource,IAndroidTarget,Properties)",1,2,2
"com.android.sdklib.internal.repository.packages.PlatformPackage.PlatformPackage(SdkSource,Node,String,Map<String, String>)",1,1,2
"com.android.sdklib.internal.repository.packages.PlatformPackage.create(IAndroidTarget,Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformPackage.equals(Object)",13,4,13
"com.android.sdklib.internal.repository.packages.PlatformPackage.getAndroidVersion()",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformPackage.getIncludedAbi()",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformPackage.getInstallFolder(String,SdkManager)",3,4,4
"com.android.sdklib.internal.repository.packages.PlatformPackage.getLayoutlibVersion()",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformPackage.getListDescription()",1,2,4
"com.android.sdklib.internal.repository.packages.PlatformPackage.getLongDescription()",1,4,5
"com.android.sdklib.internal.repository.packages.PlatformPackage.getShortDescription()",1,2,4
"com.android.sdklib.internal.repository.packages.PlatformPackage.getVersionName()",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformPackage.hashCode()",1,4,4
"com.android.sdklib.internal.repository.packages.PlatformPackage.installId()",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformPackage.sameItemAs(Package)",2,2,2
"com.android.sdklib.internal.repository.packages.PlatformPackage.saveProperties(Properties)",1,3,3
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.PlatformToolPackage(SdkSource,Node,String,Map<String, String>)",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.PlatformToolPackage(SdkSource,Properties,int,String,String,String,Os,Arch,String)",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.create(SdkSource,Properties,int,String,String,String,Os,Arch,String)",2,6,9
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.getInstallFolder(String,SdkManager)",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.getListDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.getLongDescription()",1,4,5
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.getShortDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.installId()",2,1,2
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.preInstallHook(Archive,ITaskMonitor,String,File)",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.sameItemAs(Package)",1,1,1
"com.android.sdklib.internal.repository.packages.PlatformToolPackage.sameItemAs(Package,boolean)",3,3,3
"com.android.sdklib.internal.repository.packages.SamplePackage.SamplePackage(IAndroidTarget,Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.SamplePackage.SamplePackage(SdkSource,Node,String,Map<String, String>)",1,1,2
"com.android.sdklib.internal.repository.packages.SamplePackage.SamplePackage(String,Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.SamplePackage.computeContentHash(File)",2,2,3
"com.android.sdklib.internal.repository.packages.SamplePackage.create(IAndroidTarget,Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.SamplePackage.create(String,Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.SamplePackage.getAndroidVersion()",1,1,1
"com.android.sdklib.internal.repository.packages.SamplePackage.getDigestHexString(MessageDigest)",1,2,2
"com.android.sdklib.internal.repository.packages.SamplePackage.getInstallFolder(String,SdkManager)",5,6,7
"com.android.sdklib.internal.repository.packages.SamplePackage.getListDescription()",1,1,3
"com.android.sdklib.internal.repository.packages.SamplePackage.getLongDescription()",1,4,5
"com.android.sdklib.internal.repository.packages.SamplePackage.getMinApiLevel()",1,1,1
"com.android.sdklib.internal.repository.packages.SamplePackage.getShortDescription()",1,1,3
"com.android.sdklib.internal.repository.packages.SamplePackage.hashDirectoryContent(File,MessageDigest)",5,6,10
"com.android.sdklib.internal.repository.packages.SamplePackage.installId()",1,1,1
"com.android.sdklib.internal.repository.packages.SamplePackage.postInstallHook(Archive,ITaskMonitor,File)",1,2,2
"com.android.sdklib.internal.repository.packages.SamplePackage.postUnzipFileHook(Archive,ITaskMonitor,IFileOp,File,ZipArchiveEntry)",1,3,3
"com.android.sdklib.internal.repository.packages.SamplePackage.preInstallHook(Archive,ITaskMonitor,String,File)",4,6,6
"com.android.sdklib.internal.repository.packages.SamplePackage.readContentHash(File)",2,3,5
"com.android.sdklib.internal.repository.packages.SamplePackage.sameItemAs(Package)",2,2,2
"com.android.sdklib.internal.repository.packages.SamplePackage.saveContentHash(File,String)",1,3,5
"com.android.sdklib.internal.repository.packages.SamplePackage.saveProperties(Properties)",1,2,2
"com.android.sdklib.internal.repository.packages.SourcePackage.SourcePackage(AndroidVersion,int,Properties,String)",1,1,1
"com.android.sdklib.internal.repository.packages.SourcePackage.SourcePackage(SdkSource,AndroidVersion,int,Properties,String)",1,1,1
"com.android.sdklib.internal.repository.packages.SourcePackage.SourcePackage(SdkSource,Node,String,Map<String, String>)",1,1,2
"com.android.sdklib.internal.repository.packages.SourcePackage.create(File,Properties)",2,8,9
"com.android.sdklib.internal.repository.packages.SourcePackage.equals(Object)",7,2,7
"com.android.sdklib.internal.repository.packages.SourcePackage.getAndroidVersion()",1,1,1
"com.android.sdklib.internal.repository.packages.SourcePackage.getInstallFolder(String,SdkManager)",1,1,1
"com.android.sdklib.internal.repository.packages.SourcePackage.getListDescription()",2,2,4
"com.android.sdklib.internal.repository.packages.SourcePackage.getLongDescription()",1,4,5
"com.android.sdklib.internal.repository.packages.SourcePackage.getShortDescription()",2,2,4
"com.android.sdklib.internal.repository.packages.SourcePackage.hashCode()",1,2,2
"com.android.sdklib.internal.repository.packages.SourcePackage.installId()",1,1,1
"com.android.sdklib.internal.repository.packages.SourcePackage.postUnzipFileHook(Archive,ITaskMonitor,IFileOp,File,ZipArchiveEntry)",1,3,3
"com.android.sdklib.internal.repository.packages.SourcePackage.sameItemAs(Package)",2,2,2
"com.android.sdklib.internal.repository.packages.SourcePackage.saveProperties(Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.SystemImagePackage.SystemImagePackage(AndroidVersion,int,String,Properties,String)",1,1,1
"com.android.sdklib.internal.repository.packages.SystemImagePackage.SystemImagePackage(SdkSource,AndroidVersion,int,String,Properties,String)",1,2,3
"com.android.sdklib.internal.repository.packages.SystemImagePackage.SystemImagePackage(SdkSource,Node,String,Map<String, String>)",1,1,2
"com.android.sdklib.internal.repository.packages.SystemImagePackage.comparisonKey()",1,1,1
"com.android.sdklib.internal.repository.packages.SystemImagePackage.createBroken(File,Properties)",1,9,10
"com.android.sdklib.internal.repository.packages.SystemImagePackage.equals(Object)",10,3,10
"com.android.sdklib.internal.repository.packages.SystemImagePackage.getAbi()",1,1,1
"com.android.sdklib.internal.repository.packages.SystemImagePackage.getAbiDisplayName()",1,1,1
"com.android.sdklib.internal.repository.packages.SystemImagePackage.getAbiDisplayNameInternal(String)",1,1,1
"com.android.sdklib.internal.repository.packages.SystemImagePackage.getAndroidVersion()",1,1,1
"com.android.sdklib.internal.repository.packages.SystemImagePackage.getInstallFolder(String,SdkManager)",1,1,1
"com.android.sdklib.internal.repository.packages.SystemImagePackage.getListDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.SystemImagePackage.getLongDescription()",1,4,5
"com.android.sdklib.internal.repository.packages.SystemImagePackage.getShortDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.SystemImagePackage.hashCode()",1,3,3
"com.android.sdklib.internal.repository.packages.SystemImagePackage.installId()",1,1,1
"com.android.sdklib.internal.repository.packages.SystemImagePackage.sameItemAs(Package)",2,3,3
"com.android.sdklib.internal.repository.packages.SystemImagePackage.saveProperties(Properties)",1,1,1
"com.android.sdklib.internal.repository.packages.ToolPackage.ToolPackage(SdkSource,Node,String,Map<String, String>)",3,4,5
"com.android.sdklib.internal.repository.packages.ToolPackage.ToolPackage(SdkSource,Properties,int,String,String,String,Os,Arch,String)",1,2,3
"com.android.sdklib.internal.repository.packages.ToolPackage.create(SdkSource,Properties,int,String,String,String,Os,Arch,String)",1,1,1
"com.android.sdklib.internal.repository.packages.ToolPackage.equals(Object)",7,2,7
"com.android.sdklib.internal.repository.packages.ToolPackage.getInstallFolder(String,SdkManager)",1,1,1
"com.android.sdklib.internal.repository.packages.ToolPackage.getListDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.ToolPackage.getLongDescription()",1,4,5
"com.android.sdklib.internal.repository.packages.ToolPackage.getMinPlatformToolsRevision()",1,1,1
"com.android.sdklib.internal.repository.packages.ToolPackage.getShortDescription()",1,1,2
"com.android.sdklib.internal.repository.packages.ToolPackage.hashCode()",1,2,2
"com.android.sdklib.internal.repository.packages.ToolPackage.installId()",2,1,2
"com.android.sdklib.internal.repository.packages.ToolPackage.postInstallHook(Archive,ITaskMonitor,File)",5,5,9
"com.android.sdklib.internal.repository.packages.ToolPackage.sameItemAs(Package)",1,1,1
"com.android.sdklib.internal.repository.packages.ToolPackage.sameItemAs(Package,boolean)",3,3,3
"com.android.sdklib.internal.repository.packages.ToolPackage.saveProperties(Properties)",1,2,2
"com.android.sdklib.internal.repository.sources.SdkAddonSource.SdkAddonSource(String,String)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.findAlternateToolsXml(InputStream)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.getDefaultXmlFileUrls()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.getNsLatestVersion()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.getNsPattern()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.getNsUri()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.getRootElementName()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.getSchemaUri(int)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.getXsdStream(int)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.isAddonSource()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkAddonSource.isSysImgSource()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.SdkRepoSource(String,String)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.duplicateNode(Element,Element,String,String)",1,10,10
"com.android.sdklib.internal.repository.sources.SdkRepoSource.findAlternateToolsXml(InputStream)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.findAlternateToolsXml(InputStream,ErrorHandler)",24,29,53
"com.android.sdklib.internal.repository.sources.SdkRepoSource.findChild(Node,Node,String,String)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.findChild(Node,Node,String,String[])",5,5,8
"com.android.sdklib.internal.repository.sources.SdkRepoSource.getDefaultXmlFileUrls()",1,3,3
"com.android.sdklib.internal.repository.sources.SdkRepoSource.getNsLatestVersion()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.getNsPattern()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.getNsUri()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.getRootElementName()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.getSchemaUri(int)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.getXsdStream(int)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.isAddonSource()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkRepoSource.isSysImgSource()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSource.SdkSource(String,String)",1,3,5
"com.android.sdklib.internal.repository.sources.SdkSource.clearPackages()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSource.closeStream(InputStream)",1,3,4
"com.android.sdklib.internal.repository.sources.SdkSource.compareTo(SdkSource)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSource.equals(Object)",2,2,2
"com.android.sdklib.internal.repository.sources.SdkSource.fetchXmlUrl(String,DownloadCache,ITaskMonitor,Exception[])",1,2,4
"com.android.sdklib.internal.repository.sources.SdkSource.getDocument(InputStream,ITaskMonitor)",1,4,4
"com.android.sdklib.internal.repository.sources.SdkSource.getFetchError()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSource.getFirstChild(Node,String,String)",4,5,6
"com.android.sdklib.internal.repository.sources.SdkSource.getLongDescription()",1,1,2
"com.android.sdklib.internal.repository.sources.SdkSource.getPackages()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSource.getShortDescription()",2,3,4
"com.android.sdklib.internal.repository.sources.SdkSource.getUiName()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSource.getUrl()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSource.getValidator(int)",2,2,3
"com.android.sdklib.internal.repository.sources.SdkSource.getXmlSchemaVersion(InputStream)",9,9,14
"com.android.sdklib.internal.repository.sources.SdkSource.hashCode()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSource.isEnabled()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSource.load(DownloadCache,ITaskMonitor,boolean)",15,34,52
"com.android.sdklib.internal.repository.sources.SdkSource.parsePackages(Document,String,ITaskMonitor)",2,21,22
"com.android.sdklib.internal.repository.sources.SdkSource.setDefaultDescription()",1,2,3
"com.android.sdklib.internal.repository.sources.SdkSource.setEnabled(boolean)",1,2,3
"com.android.sdklib.internal.repository.sources.SdkSource.setPackages(Package[])",1,2,2
"com.android.sdklib.internal.repository.sources.SdkSource.toString()",2,1,2
"com.android.sdklib.internal.repository.sources.SdkSource.validateXml(InputStream,String,int,String[],Boolean[])",3,4,5
"com.android.sdklib.internal.repository.sources.SdkSourceCategory.SdkSourceCategory(String,boolean)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSourceCategory.getAlwaysDisplay()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSourceCategory.getLongDescription()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSourceCategory.getShortDescription()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSourceCategory.getUiName()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSourceProperties.SdkSourceProperties()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSourceProperties.clear()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSourceProperties.getProperty(String,String,String)",1,2,2
"com.android.sdklib.internal.repository.sources.SdkSourceProperties.loadLocked()",1,4,4
"com.android.sdklib.internal.repository.sources.SdkSourceProperties.loadProperties()",2,3,6
"com.android.sdklib.internal.repository.sources.SdkSourceProperties.save()",1,3,3
"com.android.sdklib.internal.repository.sources.SdkSourceProperties.saveLocked()",1,2,5
"com.android.sdklib.internal.repository.sources.SdkSourceProperties.setProperty(String,String,String)",1,6,6
"com.android.sdklib.internal.repository.sources.SdkSourceProperties.toString()",1,2,2
"com.android.sdklib.internal.repository.sources.SdkSources.SdkSources()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSources.add(SdkSourceCategory,SdkSource)",1,2,2
"com.android.sdklib.internal.repository.sources.SdkSources.addChangeListener(Runnable)",1,3,4
"com.android.sdklib.internal.repository.sources.SdkSources.clearAllPackages()",1,3,3
"com.android.sdklib.internal.repository.sources.SdkSources.getAllSources()",1,2,4
"com.android.sdklib.internal.repository.sources.SdkSources.getCategories()",1,5,5
"com.android.sdklib.internal.repository.sources.SdkSources.getCategory(SdkSource)",4,4,4
"com.android.sdklib.internal.repository.sources.SdkSources.getSources(SdkSourceCategory)",2,2,2
"com.android.sdklib.internal.repository.sources.SdkSources.hasSourceUrl(SdkSource)",4,3,4
"com.android.sdklib.internal.repository.sources.SdkSources.hasSourceUrl(SdkSourceCategory,SdkSource)",4,3,4
"com.android.sdklib.internal.repository.sources.SdkSources.loadUserAddons(ILogger)",1,9,11
"com.android.sdklib.internal.repository.sources.SdkSources.notifyChangeListeners()",2,3,4
"com.android.sdklib.internal.repository.sources.SdkSources.remove(SdkSource)",1,4,4
"com.android.sdklib.internal.repository.sources.SdkSources.removeAll(SdkSourceCategory)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSources.removeChangeListener(Runnable)",1,2,3
"com.android.sdklib.internal.repository.sources.SdkSources.saveUserAddons(ILogger)",1,5,6
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.SdkSysImgSource(String,String)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.findAlternateToolsXml(InputStream)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.getDefaultXmlFileUrls()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.getNsLatestVersion()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.getNsPattern()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.getNsUri()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.getRootElementName()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.getSchemaUri(int)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.getXsdStream(int)",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.isAddonSource()",1,1,1
"com.android.sdklib.internal.repository.sources.SdkSysImgSource.isSysImgSource()",1,1,1
"com.android.sdklib.io.FileOp.append(File,String...)",1,1,2
"com.android.sdklib.io.FileOp.append(String,String...)",1,1,1
"com.android.sdklib.io.FileOp.copyFile(File,File)",1,4,6
"com.android.sdklib.io.FileOp.delete(File)",1,1,1
"com.android.sdklib.io.FileOp.deleteFileOrFolder(File)",6,8,11
"com.android.sdklib.io.FileOp.exists(File)",1,1,1
"com.android.sdklib.io.FileOp.isDirectory(File)",1,1,1
"com.android.sdklib.io.FileOp.isFile(File)",1,1,1
"com.android.sdklib.io.FileOp.isSameFile(File,File)",7,5,11
"com.android.sdklib.io.FileOp.length(File)",1,1,1
"com.android.sdklib.io.FileOp.listFiles(File)",1,1,1
"com.android.sdklib.io.FileOp.loadProperties(File)",1,1,2
"com.android.sdklib.io.FileOp.mkdirs(File)",1,1,1
"com.android.sdklib.io.FileOp.newFileOutputStream(File)",1,1,1
"com.android.sdklib.io.FileOp.renameTo(File,File)",1,1,1
"com.android.sdklib.io.FileOp.saveProperties(File,Properties,String)",1,1,2
"com.android.sdklib.io.FileOp.setExecutablePermission(File)",2,2,5
"com.android.sdklib.io.FileOp.setReadOnly(File)",1,1,1
"com.android.sdklib.io.NonClosingInputStream.NonClosingInputStream(InputStream)",1,1,1
"com.android.sdklib.io.NonClosingInputStream.close()",2,2,4
"com.android.sdklib.io.NonClosingInputStream.getCloseBehavior()",1,1,1
"com.android.sdklib.io.NonClosingInputStream.setCloseBehavior(CloseBehavior)",1,1,1
"com.android.sdklib.repository.RepoConstants.getXsdStream(String,int)",1,2,4
"com.android.sdklib.repository.SdkAddonConstants.getSchemaUri(int)",1,1,1
"com.android.sdklib.repository.SdkAddonConstants.getXsdStream(int)",1,1,1
"com.android.sdklib.repository.SdkAddonsListConstants.getDefaultName(int)",1,1,1
"com.android.sdklib.repository.SdkAddonsListConstants.getSchemaUri(int)",1,1,1
"com.android.sdklib.repository.SdkAddonsListConstants.getXsdStream(int)",1,1,1
"com.android.sdklib.repository.SdkRepoConstants.getSchemaUri(int)",1,1,1
"com.android.sdklib.repository.SdkRepoConstants.getXsdStream(int)",1,1,1
"com.android.sdklib.repository.SdkStatsConstants.getSchemaUri(int)",1,1,1
"com.android.sdklib.repository.SdkStatsConstants.getXsdStream(int)",1,1,1
"com.android.sdklib.repository.SdkSysImgConstants.getSchemaUri(int)",1,1,1
"com.android.sdklib.repository.SdkSysImgConstants.getXsdStream(int)",1,1,1
"com.android.sdklib.util.ArrayUtils.ArrayUtils()",1,1,1
"com.android.sdklib.util.ArrayUtils.contains(T[],T)",5,4,6
"com.android.sdklib.util.ArrayUtils.emptyArray(Class<T>)",2,3,4
"com.android.sdklib.util.ArrayUtils.equals(byte[],byte[],int)",5,1,8
"com.android.sdklib.util.ArrayUtils.idealBooleanArraySize(int)",1,1,1
"com.android.sdklib.util.ArrayUtils.idealByteArraySize(int)",3,1,3
"com.android.sdklib.util.ArrayUtils.idealCharArraySize(int)",1,1,1
"com.android.sdklib.util.ArrayUtils.idealFloatArraySize(int)",1,1,1
"com.android.sdklib.util.ArrayUtils.idealIntArraySize(int)",1,1,1
"com.android.sdklib.util.ArrayUtils.idealLongArraySize(int)",1,1,1
"com.android.sdklib.util.ArrayUtils.idealObjectArraySize(int)",1,1,1
"com.android.sdklib.util.ArrayUtils.idealShortArraySize(int)",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.Arg(Mode,boolean,String,String,String,String,String,Object)",1,1,2
"com.android.sdklib.util.CommandLineParser.Arg.getCurrentValue()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.getDefaultValue()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.getDescription()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.getDirectObject()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.getLongArg()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.getMode()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.getShortArg()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.getVerb()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.isInCommandLine()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.isMandatory()",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.setCurrentValue(Object)",1,1,1
"com.android.sdklib.util.CommandLineParser.Arg.setInCommandLine(boolean)",1,1,1
"com.android.sdklib.util.CommandLineParser.CommandLineParser(ILogger,String[][])",1,1,1
"com.android.sdklib.util.CommandLineParser.acceptLackOfVerb()",1,1,1
"com.android.sdklib.util.CommandLineParser.define(Mode,boolean,String,String,String,String,String,Object)",1,2,4
"com.android.sdklib.util.CommandLineParser.exit()",1,1,1
"com.android.sdklib.util.CommandLineParser.findLongArg(String,String,String)",1,1,3
"com.android.sdklib.util.CommandLineParser.findShortArg(String,String,String)",4,4,7
"com.android.sdklib.util.CommandLineParser.getDirectObject()",1,1,1
"com.android.sdklib.util.CommandLineParser.getValue(String,String,String)",7,10,11
"com.android.sdklib.util.CommandLineParser.getVerb()",1,1,1
"com.android.sdklib.util.CommandLineParser.isHelpRequested()",1,1,1
"com.android.sdklib.util.CommandLineParser.isSilent()",1,1,1
"com.android.sdklib.util.CommandLineParser.isVerbose()",1,1,1
"com.android.sdklib.util.CommandLineParser.listOptions(String,String)",1,16,19
"com.android.sdklib.util.CommandLineParser.parseArgs(String[])",33,41,51
"com.android.sdklib.util.CommandLineParser.printHelpAndExit(String,Object...)",1,1,1
"com.android.sdklib.util.CommandLineParser.printHelpAndExitForAction(String,String,String,Object...)",1,13,16
"com.android.sdklib.util.CommandLineParser.setValue(String,String,String,Object)",1,1,1
"com.android.sdklib.util.CommandLineParser.stderr(String,Object...)",1,1,1
"com.android.sdklib.util.CommandLineParser.stdout(String,Object...)",1,1,1
"com.android.sdklib.util.FormatUtils.byteSizeToString(long)",1,4,4
"com.android.sdklib.util.GrabProcessOutput.grabProcessOutput(Process,Wait,IProcessOutput)",6,6,13
"com.android.sdklib.util.LineUtil.reflowLine(String)",8,10,28
"com.android.sdklib.util.LineUtil.reformatLine(String,Object...)",1,1,1
"com.android.sdklib.util.SparseArray.SparseArray()",1,1,1
"com.android.sdklib.util.SparseArray.SparseArray(int)",1,1,1
"com.android.sdklib.util.SparseArray.append(int,E)",2,4,6
"com.android.sdklib.util.SparseArray.binarySearch(int[],int,int,int)",3,1,5
"com.android.sdklib.util.SparseArray.clear()",1,1,2
"com.android.sdklib.util.SparseArray.delete(int)",1,1,3
"com.android.sdklib.util.SparseArray.gc()",1,1,4
"com.android.sdklib.util.SparseArray.get(int)",1,1,1
"com.android.sdklib.util.SparseArray.get(int,E)",2,1,3
"com.android.sdklib.util.SparseArray.getUnmodifiable()",1,1,1
"com.android.sdklib.util.SparseArray.indexOfKey(int)",1,2,2
"com.android.sdklib.util.SparseArray.indexOfValue(E)",3,2,4
"com.android.sdklib.util.SparseArray.keyAt(int)",1,2,2
"com.android.sdklib.util.SparseArray.put(int,E)",3,5,8
"com.android.sdklib.util.SparseArray.remove(int)",1,1,1
"com.android.sdklib.util.SparseArray.setValueAt(int,E)",1,2,2
"com.android.sdklib.util.SparseArray.size()",1,2,2
"com.android.sdklib.util.SparseArray.valueAt(int)",1,2,2
"com.android.sdklib.util.SparseIntArray.SparseIntArray()",1,1,1
"com.android.sdklib.util.SparseIntArray.SparseIntArray(int)",1,1,1
"com.android.sdklib.util.SparseIntArray.append(int,int)",2,3,4
"com.android.sdklib.util.SparseIntArray.binarySearch(int[],int,int,int)",3,1,5
"com.android.sdklib.util.SparseIntArray.clear()",1,1,1
"com.android.sdklib.util.SparseIntArray.delete(int)",1,2,2
"com.android.sdklib.util.SparseIntArray.get(int)",1,1,1
"com.android.sdklib.util.SparseIntArray.get(int,int)",2,1,2
"com.android.sdklib.util.SparseIntArray.indexOfKey(int)",1,1,1
"com.android.sdklib.util.SparseIntArray.indexOfValue(int)",3,1,3
"com.android.sdklib.util.SparseIntArray.keyAt(int)",1,1,1
"com.android.sdklib.util.SparseIntArray.put(int,int)",1,4,4
"com.android.sdklib.util.SparseIntArray.removeAt(int)",1,1,1
"com.android.sdklib.util.SparseIntArray.size()",1,1,1
"com.android.sdklib.util.SparseIntArray.valueAt(int)",1,1,1
"com.android.sdkstats.DdmsPreferenceStore.DdmsPreferenceStore()",1,1,1
"com.android.sdkstats.DdmsPreferenceStore.generateNewPingId()",1,1,2
"com.android.sdkstats.DdmsPreferenceStore.getLastSdkPath()",1,2,2
"com.android.sdkstats.DdmsPreferenceStore.getPingId()",1,2,2
"com.android.sdkstats.DdmsPreferenceStore.getPingTime(String)",1,2,2
"com.android.sdkstats.DdmsPreferenceStore.getPreferenceStore()",3,5,9
"com.android.sdkstats.DdmsPreferenceStore.hasPingId()",1,2,2
"com.android.sdkstats.DdmsPreferenceStore.isAdtUsed()",2,2,3
"com.android.sdkstats.DdmsPreferenceStore.isPingOptIn()",1,2,2
"com.android.sdkstats.DdmsPreferenceStore.save()",1,1,2
"com.android.sdkstats.DdmsPreferenceStore.setAdtUsed(boolean)",1,1,2
"com.android.sdkstats.DdmsPreferenceStore.setLastSdkPath(String)",1,1,2
"com.android.sdkstats.DdmsPreferenceStore.setPingOptIn(boolean)",1,1,2
"com.android.sdkstats.DdmsPreferenceStore.setPingTime(String,long)",1,1,2
"com.android.sdkstats.SdkStatsPermissionDialog.SdkStatsPermissionDialog(Shell)",1,1,1
"com.android.sdkstats.SdkStatsPermissionDialog.createButtonsForButtonBar(Composite)",1,1,1
"com.android.sdkstats.SdkStatsPermissionDialog.createDialogArea(Composite)",1,2,2
"com.android.sdkstats.SdkStatsPermissionDialog.getPingUserPreference()",1,1,1
"com.android.sdkstats.SdkStatsPermissionDialog.openUrl(String)",3,3,6
"com.android.sdkstats.SdkStatsService.SdkStatsService()",1,1,1
"com.android.sdkstats.SdkStatsService.actuallySendPing(URL)",2,4,4
"com.android.sdkstats.SdkStatsService.askUserPermissionForPing(Shell)",1,1,1
"com.android.sdkstats.SdkStatsService.checkUserPermissionForPing(Shell)",1,2,2
"com.android.sdkstats.SdkStatsService.createPingUrl(String,String,long,Map<String, String>)",1,4,4
"com.android.sdkstats.SdkStatsService.doPing(String,String,Map<String, String>)",3,2,4
"com.android.sdkstats.SdkStatsService.getJvmArch()",1,1,1
"com.android.sdkstats.SdkStatsService.getJvmInfo()",1,1,1
"com.android.sdkstats.SdkStatsService.getJvmVersion()",3,4,5
"com.android.sdkstats.SdkStatsService.getOsArch()",5,6,8
"com.android.sdkstats.SdkStatsService.getOsName()",2,6,9
"com.android.sdkstats.SdkStatsService.getOsVersion()",3,4,4
"com.android.sdkstats.SdkStatsService.getSystemEnv(String)",1,1,1
"com.android.sdkstats.SdkStatsService.getSystemProperty(String)",1,1,1
"com.android.sdkstats.SdkStatsService.normalizeAppName(String)",2,1,2
"com.android.sdkstats.SdkStatsService.normalizeVersion(String)",2,9,11
"com.android.sdkstats.SdkStatsService.ping(String,String)",1,1,1
"com.android.sdkstats.SdkStatsService.ping(String[])",2,7,8
"com.android.sdkstats.SdkStatsService.sanitizeGlArg(String)",1,3,4
"com.android.sdkstats.SdkStatsService.sanitizeOsArch(String)",5,7,11
"com.android.tools.lint.HtmlReporter.HtmlReporter(Main,File)",1,1,1
"com.android.tools.lint.HtmlReporter.addImage(String,Location)",2,13,13
"com.android.tools.lint.HtmlReporter.appendCodeBlock(String,int,int)",4,8,10
"com.android.tools.lint.HtmlReporter.appendEscapedText(String)",1,6,6
"com.android.tools.lint.HtmlReporter.computeMissingIssues(List<Warning>)",8,11,11
"com.android.tools.lint.HtmlReporter.getDpiRank(String)",5,4,5
"com.android.tools.lint.HtmlReporter.getErrorIconUrl()",1,1,1
"com.android.tools.lint.HtmlReporter.getWarningIconUrl()",1,1,1
"com.android.tools.lint.HtmlReporter.setStripPrefix(String)",1,1,1
"com.android.tools.lint.HtmlReporter.stripPath(String)",2,4,5
"com.android.tools.lint.HtmlReporter.write(int,int,List<Warning>)",1,36,38
"com.android.tools.lint.HtmlReporter.writeIssueMetadata(Issue,Severity,String)",1,10,11
"com.android.tools.lint.HtmlReporter.writeLocation(File,String,int)",1,4,4
"com.android.tools.lint.HtmlReporter.writeMissingIssues(Map<Issue, String>)",1,2,2
"com.android.tools.lint.HtmlReporter.writeOverview(List<List<Warning>>,int)",4,7,11
"com.android.tools.lint.HtmlReporter.writeStyleSheet()",1,4,4
"com.android.tools.lint.HtmlReporter.writeSuppressInfo()",1,1,1
"com.android.tools.lint.LintCliXmlParser.LocationHandle.LocationHandle(File,Node)",1,1,1
"com.android.tools.lint.LintCliXmlParser.LocationHandle.getClientData()",1,1,1
"com.android.tools.lint.LintCliXmlParser.LocationHandle.resolve()",2,2,2
"com.android.tools.lint.LintCliXmlParser.LocationHandle.setClientData(Object)",1,1,1
"com.android.tools.lint.LintCliXmlParser.OffsetPosition.OffsetPosition(int,int,int)",1,1,1
"com.android.tools.lint.LintCliXmlParser.OffsetPosition.getColumn()",1,1,1
"com.android.tools.lint.LintCliXmlParser.OffsetPosition.getEnd()",1,1,1
"com.android.tools.lint.LintCliXmlParser.OffsetPosition.getLine()",1,1,1
"com.android.tools.lint.LintCliXmlParser.OffsetPosition.getOffset()",1,1,1
"com.android.tools.lint.LintCliXmlParser.OffsetPosition.setEnd(Position)",1,1,1
"com.android.tools.lint.LintCliXmlParser.OffsetPosition.toString()",1,1,1
"com.android.tools.lint.LintCliXmlParser.createLocationHandle(XmlContext,Node)",1,1,1
"com.android.tools.lint.LintCliXmlParser.createPosition(int,int,int)",1,1,1
"com.android.tools.lint.LintCliXmlParser.dispose(XmlContext,Document)",1,1,1
"com.android.tools.lint.LintCliXmlParser.getLocation(XmlContext,Node)",2,2,2
"com.android.tools.lint.LintCliXmlParser.getLocation(XmlContext,Node,int,int)",2,2,2
"com.android.tools.lint.LintCliXmlParser.parseXml(XmlContext)",2,7,7
"com.android.tools.lint.LombokParser.LocationHandle.LocationHandle(File,Node)",1,1,1
"com.android.tools.lint.LombokParser.LocationHandle.getClientData()",1,1,1
"com.android.tools.lint.LombokParser.LocationHandle.resolve()",1,1,1
"com.android.tools.lint.LombokParser.LocationHandle.setClientData(Object)",1,1,1
"com.android.tools.lint.LombokParser.createLocationHandle(JavaContext,Node)",1,1,1
"com.android.tools.lint.LombokParser.dispose(JavaContext,Node)",1,1,1
"com.android.tools.lint.LombokParser.getLocation(JavaContext,Node)",1,1,1
"com.android.tools.lint.LombokParser.parseJava(JavaContext)",4,3,6
"com.android.tools.lint.Main.CliConfiguration.CliConfiguration(Configuration,Project)",1,1,1
"com.android.tools.lint.Main.CliConfiguration.CliConfiguration(File)",1,1,1
"com.android.tools.lint.Main.CliConfiguration.computeSeverity(Issue)",4,5,10
"com.android.tools.lint.Main.CliConfiguration.getDefaultSeverity(Issue)",2,2,2
"com.android.tools.lint.Main.CliConfiguration.getSeverity(Issue)",1,1,5
"com.android.tools.lint.Main.Main()",1,1,1
"com.android.tools.lint.Main.ProgressPrinter.update(LintDriver,EventType,Context)",2,7,10
"com.android.tools.lint.Main.describeIssue(Issue)",1,5,5
"com.android.tools.lint.Main.displayValidIds(IssueRegistry,PrintStream)",1,3,3
"com.android.tools.lint.Main.getClassPath(Project)",2,6,9
"com.android.tools.lint.Main.getCleanPath(File)",7,14,15
"com.android.tools.lint.Main.getConfiguration()",1,1,1
"com.android.tools.lint.Main.getConfiguration(Project)",1,1,1
"com.android.tools.lint.Main.getContents(File)",1,2,2
"com.android.tools.lint.Main.getDisplayPath(Project,File)",1,6,7
"com.android.tools.lint.Main.getDomParser()",1,1,1
"com.android.tools.lint.Main.getDriver()",1,1,1
"com.android.tools.lint.Main.getInArgumentPath(String)",1,4,5
"com.android.tools.lint.Main.getJavaParser()",1,1,1
"com.android.tools.lint.Main.getLine(String,int)",2,2,2
"com.android.tools.lint.Main.getLineOfOffset(String,int)",1,3,3
"com.android.tools.lint.Main.getLineOffset(String,int)",3,2,3
"com.android.tools.lint.Main.getLintWorkDir()",2,4,5
"com.android.tools.lint.Main.getOutArgumentPath(String)",1,3,4
"com.android.tools.lint.Main.getRegistry()",1,1,1
"com.android.tools.lint.Main.getRevision()",3,4,6
"com.android.tools.lint.Main.getSuppressHelp()",1,1,1
"com.android.tools.lint.Main.isAllEnabled()",1,1,1
"com.android.tools.lint.Main.isCheckingSpecificIssues()",1,1,1
"com.android.tools.lint.Main.isSuppressed(Issue)",1,1,1
"com.android.tools.lint.Main.listIssue(PrintStream,Issue)",1,1,1
"com.android.tools.lint.Main.log(Severity,Throwable,String,Object...)",1,4,4
"com.android.tools.lint.Main.main(String[])",1,1,1
"com.android.tools.lint.Main.printHelpTopicSuppress()",1,1,1
"com.android.tools.lint.Main.printUsage(PrintStream)",1,1,1
"com.android.tools.lint.Main.printUsage(PrintStream,String[])",1,5,5
"com.android.tools.lint.Main.printVersion()",1,2,2
"com.android.tools.lint.Main.readFile(File)",1,1,2
"com.android.tools.lint.Main.report(Context,Issue,Severity,Location,String,Object)",10,16,21
"com.android.tools.lint.Main.run(String[])",15,127,135
"com.android.tools.lint.Main.showIssues(IssueRegistry)",3,4,6
"com.android.tools.lint.Main.wrap(String)",1,1,1
"com.android.tools.lint.Main.wrap(String,int,String)",1,1,1
"com.android.tools.lint.Main.wrapArg(String)",1,1,1
"com.android.tools.lint.MultiProjectHtmlReporter.MultiProjectHtmlReporter(Main,File)",1,1,1
"com.android.tools.lint.MultiProjectHtmlReporter.ProjectEntry.ProjectEntry(String,int,int,String)",1,1,1
"com.android.tools.lint.MultiProjectHtmlReporter.ProjectEntry.compareTo(ProjectEntry)",3,1,3
"com.android.tools.lint.MultiProjectHtmlReporter.write(int,int,List<Warning>)",7,12,17
"com.android.tools.lint.MultiProjectHtmlReporter.writeOverview(int,int,List<ProjectEntry>)",2,6,7
"com.android.tools.lint.Reporter.Reporter(Main,File)",1,1,1
"com.android.tools.lint.Reporter.addLocalResources(URL)",2,2,3
"com.android.tools.lint.Reporter.computeResourceDir()",1,3,4
"com.android.tools.lint.Reporter.encodeUrl(String)",1,2,2
"com.android.tools.lint.Reporter.getRelativeResourceUrl(File)",7,7,11
"com.android.tools.lint.Reporter.getResourceDir()",1,2,4
"com.android.tools.lint.Reporter.getTitle()",1,1,1
"com.android.tools.lint.Reporter.getUrl(File)",6,6,8
"com.android.tools.lint.Reporter.isSimpleFormat()",1,1,1
"com.android.tools.lint.Reporter.setBundleResources(boolean)",1,1,1
"com.android.tools.lint.Reporter.setSimpleFormat(boolean)",1,1,1
"com.android.tools.lint.Reporter.setTitle(String)",1,1,1
"com.android.tools.lint.Reporter.setUrlMap(Map<String, String>)",1,1,1
"com.android.tools.lint.TextReporter.TextReporter(Main,Writer,boolean)",1,1,1
"com.android.tools.lint.TextReporter.write(int,int,List<Warning>)",1,26,27
"com.android.tools.lint.Warning.Warning(Issue,String,Severity,Project,Object)",1,1,1
"com.android.tools.lint.Warning.compareTo(Warning)",8,3,10
"com.android.tools.lint.XmlReporter.XmlReporter(Main,File)",1,1,1
"com.android.tools.lint.XmlReporter.indent(Writer,int)",1,2,2
"com.android.tools.lint.XmlReporter.write(int,int,List<Warning>)",1,17,17
"com.android.tools.lint.XmlReporter.writeAttribute(Writer,int,String,String)",2,3,7
"com.android.tools.lint.checks.AccessibilityDetector.AccessibilityDetector()",1,1,1
"com.android.tools.lint.checks.AccessibilityDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.AccessibilityDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.AccessibilityDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.AccessibilityDetector.visitAttribute(XmlContext,Attr)",1,2,2
"com.android.tools.lint.checks.AccessibilityDetector.visitElement(XmlContext,Element)",3,4,5
"com.android.tools.lint.checks.AlwaysShowActionDetector.AlwaysShowActionDetector()",1,1,1
"com.android.tools.lint.checks.AlwaysShowActionDetector.FieldAccessChecker.FieldAccessChecker(JavaContext)",1,1,1
"com.android.tools.lint.checks.AlwaysShowActionDetector.FieldAccessChecker.visitSelect(Select)",4,5,7
"com.android.tools.lint.checks.AlwaysShowActionDetector.afterCheckFile(Context)",10,15,16
"com.android.tools.lint.checks.AlwaysShowActionDetector.afterCheckProject(Context)",1,3,4
"com.android.tools.lint.checks.AlwaysShowActionDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.AlwaysShowActionDetector.beforeCheckFile(Context)",1,1,1
"com.android.tools.lint.checks.AlwaysShowActionDetector.createJavaVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.AlwaysShowActionDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.AlwaysShowActionDetector.getApplicableNodeTypes()",1,1,1
"com.android.tools.lint.checks.AlwaysShowActionDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.AlwaysShowActionDetector.visitAttribute(XmlContext,Attr)",2,1,3
"com.android.tools.lint.checks.AnnotationDetector.AnnotationChecker.AnnotationChecker(JavaContext)",1,1,1
"com.android.tools.lint.checks.AnnotationDetector.AnnotationChecker.checkId(Annotation,String)",6,4,9
"com.android.tools.lint.checks.AnnotationDetector.AnnotationChecker.visitAnnotation(Annotation)",13,12,14
"com.android.tools.lint.checks.AnnotationDetector.AnnotationDetector()",1,1,1
"com.android.tools.lint.checks.AnnotationDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.AnnotationDetector.createJavaVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.AnnotationDetector.getApplicableNodeTypes()",1,1,1
"com.android.tools.lint.checks.AnnotationDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.Api.Api(Map<String, ApiClass>)",1,1,1
"com.android.tools.lint.checks.Api.getClass(String)",1,1,1
"com.android.tools.lint.checks.Api.getClasses()",1,1,1
"com.android.tools.lint.checks.Api.parseApi(File)",1,5,6
"com.android.tools.lint.checks.ApiClass.ApiClass(String,int)",1,1,1
"com.android.tools.lint.checks.ApiClass.addAllFields(Api,Set<String>)",1,6,6
"com.android.tools.lint.checks.ApiClass.addAllMethods(Api,Set<String>,boolean)",1,9,9
"com.android.tools.lint.checks.ApiClass.addField(String,int)",1,3,3
"com.android.tools.lint.checks.ApiClass.addInterface(String,int)",1,1,1
"com.android.tools.lint.checks.ApiClass.addMethod(String,int)",1,4,4
"com.android.tools.lint.checks.ApiClass.addSuperClass(String,int)",1,1,1
"com.android.tools.lint.checks.ApiClass.addToArray(List<Pair<String, Integer>>,String,int)",3,2,3
"com.android.tools.lint.checks.ApiClass.getAllFields(Api)",1,1,1
"com.android.tools.lint.checks.ApiClass.getAllMethods(Api)",1,1,1
"com.android.tools.lint.checks.ApiClass.getField(String,Api)",1,9,12
"com.android.tools.lint.checks.ApiClass.getMethod(String,Api)",3,10,13
"com.android.tools.lint.checks.ApiClass.getName()",1,1,1
"com.android.tools.lint.checks.ApiClass.getPackage()",2,2,2
"com.android.tools.lint.checks.ApiClass.getSince()",1,1,1
"com.android.tools.lint.checks.ApiClass.toString()",1,1,1
"com.android.tools.lint.checks.ApiDetector.ApiDetector()",1,1,1
"com.android.tools.lint.checks.ApiDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.ApiDetector.beforeCheckProject(Context)",1,1,1
"com.android.tools.lint.checks.ApiDetector.checkClass(ClassContext,ClassNode)",18,49,60
"com.android.tools.lint.checks.ApiDetector.checkSimpleDateFormat(ClassContext,MethodNode,MethodInsnNode,int)",8,11,14
"com.android.tools.lint.checks.ApiDetector.checkSwitchBlock(ClassContext,ClassNode,FieldInsnNode,MethodNode,String,String,int,int)",11,12,22
"com.android.tools.lint.checks.ApiDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.ApiDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.ApiDetector.getClassMinSdk(ClassContext,ClassNode)",9,7,10
"com.android.tools.lint.checks.ApiDetector.getLocalMinSdk(Element)",7,8,11
"com.android.tools.lint.checks.ApiDetector.getLocalMinSdk(List)",8,8,8
"com.android.tools.lint.checks.ApiDetector.getMinSdk(Context)",1,2,2
"com.android.tools.lint.checks.ApiDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ApiDetector.methodDefinedLocally(ClassNode,String,String)",3,3,4
"com.android.tools.lint.checks.ApiDetector.report(ClassContext,String,AbstractInsnNode,MethodNode,String,String,SearchHints)",1,9,9
"com.android.tools.lint.checks.ApiDetector.visitAttribute(XmlContext,Attr)",7,7,10
"com.android.tools.lint.checks.ApiDetector.visitElement(XmlContext,Element)",8,17,21
"com.android.tools.lint.checks.ApiLookup.ApiLookup(LintClient,File,File,Api)",1,2,2
"com.android.tools.lint.checks.ApiLookup.compare(byte[],int,byte,String,int)",3,2,3
"com.android.tools.lint.checks.ApiLookup.comparePackage(String,String,int)",5,2,5
"com.android.tools.lint.checks.ApiLookup.createCache(LintClient,File,File)",2,5,5
"com.android.tools.lint.checks.ApiLookup.dispose()",1,1,1
"com.android.tools.lint.checks.ApiLookup.dumpEntry(int)",4,3,4
"com.android.tools.lint.checks.ApiLookup.findClass(String)",5,3,6
"com.android.tools.lint.checks.ApiLookup.findMember(int,String,String)",11,10,12
"com.android.tools.lint.checks.ApiLookup.get(LintClient)",3,6,6
"com.android.tools.lint.checks.ApiLookup.get(LintClient,File)",7,8,10
"com.android.tools.lint.checks.ApiLookup.getCacheFileName(String)",1,2,2
"com.android.tools.lint.checks.ApiLookup.getCallVersion(String,String,String)",5,4,6
"com.android.tools.lint.checks.ApiLookup.getClassVersion(String)",5,4,7
"com.android.tools.lint.checks.ApiLookup.getFieldVersion(String,String)",5,4,6
"com.android.tools.lint.checks.ApiLookup.isRelevantClass(String)",1,1,1
"com.android.tools.lint.checks.ApiLookup.isValidJavaPackage(String)",6,3,7
"com.android.tools.lint.checks.ApiLookup.readData()",5,10,10
"com.android.tools.lint.checks.ApiLookup.writeDatabase(File,Api)",5,19,23
"com.android.tools.lint.checks.ApiParser.ApiParser()",1,1,1
"com.android.tools.lint.checks.ApiParser.addClass(String,int)",1,2,2
"com.android.tools.lint.checks.ApiParser.getClasses()",1,1,1
"com.android.tools.lint.checks.ApiParser.getSince(Attributes)",1,2,2
"com.android.tools.lint.checks.ApiParser.startElement(String,String,String,Attributes)",1,8,9
"com.android.tools.lint.checks.ArraySizeDetector.ArraySizeDetector()",1,1,1
"com.android.tools.lint.checks.ArraySizeDetector.afterCheckProject(Context)",13,11,17
"com.android.tools.lint.checks.ArraySizeDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.ArraySizeDetector.beforeCheckProject(Context)",1,2,2
"com.android.tools.lint.checks.ArraySizeDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.ArraySizeDetector.visitElement(XmlContext,Element)",6,6,8
"com.android.tools.lint.checks.BuiltinIssueRegistry.BuiltinIssueRegistry()",1,1,1
"com.android.tools.lint.checks.BuiltinIssueRegistry.addCustomIssues(List<Issue>)",1,11,13
"com.android.tools.lint.checks.BuiltinIssueRegistry.addIssuesFromJar(File,List<Issue>)",1,7,8
"com.android.tools.lint.checks.BuiltinIssueRegistry.getIssues()",1,1,1
"com.android.tools.lint.checks.BuiltinIssueRegistry.getIssuesWithFixes()",1,2,2
"com.android.tools.lint.checks.BuiltinIssueRegistry.hasAutoFix(String,Issue)",1,1,1
"com.android.tools.lint.checks.BuiltinIssueRegistry.log(Throwable)",1,1,1
"com.android.tools.lint.checks.BuiltinIssueRegistry.reset()",1,1,1
"com.android.tools.lint.checks.ButtonDetector.ButtonDetector()",1,1,1
"com.android.tools.lint.checks.ButtonDetector.afterCheckProject(Context)",1,2,3
"com.android.tools.lint.checks.ButtonDetector.appliesTo(ResourceFolderType)",1,1,2
"com.android.tools.lint.checks.ButtonDetector.describeButtons(List<String>)",1,3,3
"com.android.tools.lint.checks.ButtonDetector.foundResource(XmlContext,String,Element)",7,6,9
"com.android.tools.lint.checks.ButtonDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.ButtonDetector.getLabel(String)",1,6,9
"com.android.tools.lint.checks.ButtonDetector.getLabelList(List<Element>)",1,3,4
"com.android.tools.lint.checks.ButtonDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ButtonDetector.isButtonId(Element,String)",3,3,3
"com.android.tools.lint.checks.ButtonDetector.isEnglishResource(XmlContext)",4,3,4
"com.android.tools.lint.checks.ButtonDetector.isInButtonBar(Element)",9,6,11
"com.android.tools.lint.checks.ButtonDetector.isTrue(Element,String)",1,1,1
"com.android.tools.lint.checks.ButtonDetector.isWrongCancelPosition(Element)",1,1,1
"com.android.tools.lint.checks.ButtonDetector.isWrongOkPosition(Element)",1,1,1
"com.android.tools.lint.checks.ButtonDetector.isWrongPosition(Element,boolean)",16,12,21
"com.android.tools.lint.checks.ButtonDetector.parentDefinesSelectableItem(Element)",3,3,4
"com.android.tools.lint.checks.ButtonDetector.report(XmlContext,Element,boolean)",10,12,18
"com.android.tools.lint.checks.ButtonDetector.reportCancelPosition(XmlContext,Element)",1,1,1
"com.android.tools.lint.checks.ButtonDetector.reportOkPosition(XmlContext,Element)",1,1,1
"com.android.tools.lint.checks.ButtonDetector.sortButtons(List<String>)",1,6,6
"com.android.tools.lint.checks.ButtonDetector.stripLabel(String)",1,5,5
"com.android.tools.lint.checks.ButtonDetector.swap(List<String>,int,int)",1,2,2
"com.android.tools.lint.checks.ButtonDetector.visitElement(XmlContext,Element)",7,42,44
"com.android.tools.lint.checks.ChildCountDetector.ChildCountDetector()",1,1,1
"com.android.tools.lint.checks.ChildCountDetector.getAccurateChildCount(Element)",1,3,4
"com.android.tools.lint.checks.ChildCountDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.ChildCountDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ChildCountDetector.visitElement(XmlContext,Element)",1,7,7
"com.android.tools.lint.checks.ColorUsageDetector.ColorUsageDetector()",1,1,1
"com.android.tools.lint.checks.ColorUsageDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.ColorUsageDetector.appliesToResourceRefs()",1,1,1
"com.android.tools.lint.checks.ColorUsageDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ColorUsageDetector.visitResourceReference(JavaContext,AstVisitor,Node,String,String,boolean)",1,6,6
"com.android.tools.lint.checks.CommentDetector.CommentChecker.CommentChecker(JavaContext)",1,1,1
"com.android.tools.lint.checks.CommentDetector.CommentChecker.visitComment(Comment)",1,1,1
"com.android.tools.lint.checks.CommentDetector.CommentDetector()",1,1,1
"com.android.tools.lint.checks.CommentDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.CommentDetector.checkComment(Context,String,int,int,int)",1,8,9
"com.android.tools.lint.checks.CommentDetector.createJavaVisitor(JavaContext)",3,7,10
"com.android.tools.lint.checks.CommentDetector.getApplicableNodeTypes()",2,2,2
"com.android.tools.lint.checks.CommentDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ControlFlowGraph.Node.Node(AbstractInsnNode)",1,1,1
"com.android.tools.lint.checks.ControlFlowGraph.Node.addExceptionPath(Node)",1,2,2
"com.android.tools.lint.checks.ControlFlowGraph.Node.addSuccessor(Node)",1,2,2
"com.android.tools.lint.checks.ControlFlowGraph.Node.toString(boolean)",1,15,17
"com.android.tools.lint.checks.ControlFlowGraph.add(AbstractInsnNode,AbstractInsnNode)",1,1,1
"com.android.tools.lint.checks.ControlFlowGraph.create(ControlFlowGraph,ClassNode,MethodNode)",1,1,2
"com.android.tools.lint.checks.ControlFlowGraph.exception(AbstractInsnNode,AbstractInsnNode)",1,1,1
"com.android.tools.lint.checks.ControlFlowGraph.exception(AbstractInsnNode,TryCatchBlockNode)",1,4,5
"com.android.tools.lint.checks.ControlFlowGraph.getId(Object)",1,3,3
"com.android.tools.lint.checks.ControlFlowGraph.getNode(AbstractInsnNode)",1,2,2
"com.android.tools.lint.checks.ControlFlowGraph.toString()",1,1,1
"com.android.tools.lint.checks.ControlFlowGraph.toString(Node)",3,6,6
"com.android.tools.lint.checks.CutPasteDetector.CutPasteDetector()",1,1,1
"com.android.tools.lint.checks.CutPasteDetector.ReachableVisitor.ReachableVisitor(MethodInvocation,MethodInvocation)",1,1,1
"com.android.tools.lint.checks.CutPasteDetector.ReachableVisitor.isReachable()",1,1,1
"com.android.tools.lint.checks.CutPasteDetector.ReachableVisitor.visitIf(If)",1,4,4
"com.android.tools.lint.checks.CutPasteDetector.ReachableVisitor.visitMethodInvocation(MethodInvocation)",1,1,3
"com.android.tools.lint.checks.CutPasteDetector.ReachableVisitor.visitNode(Node)",1,1,1
"com.android.tools.lint.checks.CutPasteDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.CutPasteDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.CutPasteDetector.getLhs(MethodInvocation)",5,6,7
"com.android.tools.lint.checks.CutPasteDetector.isReachableFrom(Node,MethodInvocation,MethodInvocation)",1,1,1
"com.android.tools.lint.checks.CutPasteDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",10,8,12
"com.android.tools.lint.checks.DeprecationDetector.DeprecationDetector()",1,1,1
"com.android.tools.lint.checks.DeprecationDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.DeprecationDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.DeprecationDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.DeprecationDetector.visitAttribute(XmlContext,Attr)",3,10,13
"com.android.tools.lint.checks.DeprecationDetector.visitElement(XmlContext,Element)",1,1,1
"com.android.tools.lint.checks.DetectMissingPrefix.DetectMissingPrefix()",1,1,1
"com.android.tools.lint.checks.DetectMissingPrefix.appliesTo(ResourceFolderType)",1,1,7
"com.android.tools.lint.checks.DetectMissingPrefix.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.DetectMissingPrefix.getSpeed()",1,1,1
"com.android.tools.lint.checks.DetectMissingPrefix.isCustomView(Element)",2,2,3
"com.android.tools.lint.checks.DetectMissingPrefix.visitAttribute(XmlContext,Attr)",6,11,15
"com.android.tools.lint.checks.DosLineEndingDetector.DosLineEndingDetector()",1,1,1
"com.android.tools.lint.checks.DosLineEndingDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.DosLineEndingDetector.visitDocument(XmlContext,Document)",7,6,11
"com.android.tools.lint.checks.DuplicateIdDetector.DuplicateIdDetector()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.IncludeGraph.IncludeGraph(Context)",7,17,17
"com.android.tools.lint.checks.DuplicateIdDetector.IncludeGraph.check()",1,3,3
"com.android.tools.lint.checks.DuplicateIdDetector.IncludeGraph.findId(Layout,String,Deque<Layout>,Map<Layout, Occurrence>,Set<Layout>)",1,8,8
"com.android.tools.lint.checks.DuplicateIdDetector.IncludeGraph.getIds(Layout,Deque<Layout>,Set<Layout>)",9,12,14
"com.android.tools.lint.checks.DuplicateIdDetector.IncludeGraph.isCompatible(Layout,Layout)",3,1,3
"com.android.tools.lint.checks.DuplicateIdDetector.IncludeGraph.isPortrait(String[])",4,3,4
"com.android.tools.lint.checks.DuplicateIdDetector.Layout.Layout(File,Set<String>)",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.Layout.getDisplayName()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.Layout.getFile()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.Layout.getIds()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.Layout.getIncludes()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.Layout.getLayoutName()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.Layout.include(Layout)",1,1,3
"com.android.tools.lint.checks.DuplicateIdDetector.Layout.isIncluded()",1,2,2
"com.android.tools.lint.checks.DuplicateIdDetector.Layout.toString()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.Occurrence.Occurrence(File,String,String)",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.Occurrence.compareTo(Occurrence)",2,1,2
"com.android.tools.lint.checks.DuplicateIdDetector.Occurrence.toString()",1,1,2
"com.android.tools.lint.checks.DuplicateIdDetector.afterCheckFile(Context)",1,2,2
"com.android.tools.lint.checks.DuplicateIdDetector.afterCheckProject(Context)",7,12,13
"com.android.tools.lint.checks.DuplicateIdDetector.appliesTo(ResourceFolderType)",1,1,2
"com.android.tools.lint.checks.DuplicateIdDetector.beforeCheckFile(Context)",1,1,2
"com.android.tools.lint.checks.DuplicateIdDetector.beforeCheckProject(Context)",1,1,2
"com.android.tools.lint.checks.DuplicateIdDetector.findIdAttribute(Node,String)",5,4,6
"com.android.tools.lint.checks.DuplicateIdDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.DuplicateIdDetector.visitAttribute(XmlContext,Attr)",11,13,16
"com.android.tools.lint.checks.DuplicateIdDetector.visitElement(XmlContext,Element)",4,11,12
"com.android.tools.lint.checks.DuplicateResourceDetector.DuplicateResourceDetector()",1,1,1
"com.android.tools.lint.checks.DuplicateResourceDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.DuplicateResourceDetector.beforeCheckFile(Context)",1,2,2
"com.android.tools.lint.checks.DuplicateResourceDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.DuplicateResourceDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.DuplicateResourceDetector.visitAttribute(XmlContext,Attr)",4,8,11
"com.android.tools.lint.checks.ExtraTextDetector.ExtraTextDetector()",1,1,1
"com.android.tools.lint.checks.ExtraTextDetector.appliesTo(ResourceFolderType)",1,1,6
"com.android.tools.lint.checks.ExtraTextDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ExtraTextDetector.visitDocument(XmlContext,Document)",1,1,1
"com.android.tools.lint.checks.ExtraTextDetector.visitNode(XmlContext,Node)",4,9,14
"com.android.tools.lint.checks.FieldGetterDetector.Entry.Entry(String,MethodInsnNode,MethodNode)",1,1,1
"com.android.tools.lint.checks.FieldGetterDetector.FieldGetterDetector()",1,1,1
"com.android.tools.lint.checks.FieldGetterDetector.afterCheckFile(Context)",1,7,8
"com.android.tools.lint.checks.FieldGetterDetector.checkInstruction(ClassContext,ClassNode,MethodNode,AbstractInsnNode)",6,9,15
"com.android.tools.lint.checks.FieldGetterDetector.checkMethods(ClassNode,Set<String>)",8,7,13
"com.android.tools.lint.checks.FieldGetterDetector.getApplicableAsmNodeTypes()",1,1,1
"com.android.tools.lint.checks.FieldGetterDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.FragmentDetector.FragmentDetector()",1,1,1
"com.android.tools.lint.checks.FragmentDetector.checkClass(ClassContext,ClassNode)",7,14,16
"com.android.tools.lint.checks.FragmentDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.GridLayoutDetector.GridLayoutDetector()",1,1,1
"com.android.tools.lint.checks.GridLayoutDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.GridLayoutDetector.getInt(Element,String,int)",2,3,4
"com.android.tools.lint.checks.GridLayoutDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.GridLayoutDetector.visitElement(XmlContext,Element)",1,7,8
"com.android.tools.lint.checks.HandlerDetector.HandlerDetector()",1,1,1
"com.android.tools.lint.checks.HandlerDetector.checkClass(ClassContext,ClassNode)",2,3,4
"com.android.tools.lint.checks.HandlerDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.HardcodedDebugModeDetector.HardcodedDebugModeDetector()",1,1,1
"com.android.tools.lint.checks.HardcodedDebugModeDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.HardcodedDebugModeDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.HardcodedDebugModeDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.HardcodedDebugModeDetector.visitAttribute(XmlContext,Attr)",1,2,2
"com.android.tools.lint.checks.HardcodedValuesDetector.HardcodedValuesDetector()",1,1,1
"com.android.tools.lint.checks.HardcodedValuesDetector.appliesTo(ResourceFolderType)",1,1,2
"com.android.tools.lint.checks.HardcodedValuesDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.HardcodedValuesDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.HardcodedValuesDetector.visitAttribute(XmlContext,Attr)",3,4,5
"com.android.tools.lint.checks.IconDetector.IconDetector()",1,1,1
"com.android.tools.lint.checks.IconDetector.MenuFinder.visitSelect(Select)",1,8,8
"com.android.tools.lint.checks.IconDetector.NotificationFinder.visitConstructorInvocation(ConstructorInvocation)",4,14,15
"com.android.tools.lint.checks.IconDetector.NotificationFinder.visitMethodDeclaration(MethodDeclaration)",1,2,2
"com.android.tools.lint.checks.IconDetector.SetIconFinder.visitMethodInvocation(MethodInvocation)",1,4,4
"com.android.tools.lint.checks.IconDetector.afterCheckLibraryProject(Context)",2,1,2
"com.android.tools.lint.checks.IconDetector.afterCheckProject(Context)",1,1,1
"com.android.tools.lint.checks.IconDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.IconDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.IconDetector.beforeCheckProject(Context)",1,1,1
"com.android.tools.lint.checks.IconDetector.checkColor(Context,File,boolean)",21,25,38
"com.android.tools.lint.checks.IconDetector.checkDensities(Context,File,Map<File, Set<String>>,Map<File, Set<String>>)",6,42,50
"com.android.tools.lint.checks.IconDetector.checkDipSizes(Context,Map<File, Dimension>)",14,17,24
"com.android.tools.lint.checks.IconDetector.checkDrawableDir(Context,File,File[],Map<File, Dimension>,Map<File, Long>)",1,40,42
"com.android.tools.lint.checks.IconDetector.checkDuplicates(Context,Map<File, Dimension>,Map<File, Long>)",11,31,39
"com.android.tools.lint.checks.IconDetector.checkExpectedSizes(Context,File,File[])",2,12,14
"com.android.tools.lint.checks.IconDetector.checkExtension(Context,File)",6,8,10
"com.android.tools.lint.checks.IconDetector.checkLauncherShape(Context,File)",5,4,6
"com.android.tools.lint.checks.IconDetector.checkResourceFolder(Context,Project)",1,21,23
"com.android.tools.lint.checks.IconDetector.checkSize(Context,String,File,int,int,boolean)",6,11,16
"com.android.tools.lint.checks.IconDetector.createJavaVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.IconDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.IconDetector.getApplicableNodeTypes()",1,1,1
"com.android.tools.lint.checks.IconDetector.getBaseName(String)",1,2,2
"com.android.tools.lint.checks.IconDetector.getImage(File)",3,2,3
"com.android.tools.lint.checks.IconDetector.getMdpiScalingFactor(String)",5,4,5
"com.android.tools.lint.checks.IconDetector.getSize(File)",4,5,6
"com.android.tools.lint.checks.IconDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.IconDetector.handleSelect(Select)",2,3,3
"com.android.tools.lint.checks.IconDetector.isActionBarIcon(Context,String,File)",3,3,5
"com.android.tools.lint.checks.IconDetector.isActionBarIcon(String)",2,2,3
"com.android.tools.lint.checks.IconDetector.isAndroid23(Context,int)",3,1,5
"com.android.tools.lint.checks.IconDetector.isAndroid30(Context,int)",1,2,2
"com.android.tools.lint.checks.IconDetector.isDrawableFile(String)",1,5,5
"com.android.tools.lint.checks.IconDetector.isLauncherIcon(String)",2,2,3
"com.android.tools.lint.checks.IconDetector.isNoDpiFolder(File)",1,1,1
"com.android.tools.lint.checks.IconDetector.isNotificationIcon(String)",2,2,3
"com.android.tools.lint.checks.IconDetector.nameDifferences(Set<String>,Set<String>)",2,8,8
"com.android.tools.lint.checks.IconDetector.nameIntersection(Set<String>,Set<String>)",2,8,8
"com.android.tools.lint.checks.IconDetector.visitElement(XmlContext,Element)",1,6,6
"com.android.tools.lint.checks.InefficientWeightDetector.InefficientWeightDetector()",1,1,1
"com.android.tools.lint.checks.InefficientWeightDetector.checkWrong0Dp(XmlContext,Element,List<Element>)",7,10,19
"com.android.tools.lint.checks.InefficientWeightDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.InefficientWeightDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.InefficientWeightDetector.visitElement(XmlContext,Element)",1,21,26
"com.android.tools.lint.checks.InvalidPackageDetector.Candidate.Candidate(String,String,File)",1,1,1
"com.android.tools.lint.checks.InvalidPackageDetector.InvalidPackageDetector()",1,1,1
"com.android.tools.lint.checks.InvalidPackageDetector.afterCheckProject(Context)",4,2,4
"com.android.tools.lint.checks.InvalidPackageDetector.beforeCheckProject(Context)",1,1,1
"com.android.tools.lint.checks.InvalidPackageDetector.checkClass(ClassContext,ClassNode)",3,24,27
"com.android.tools.lint.checks.InvalidPackageDetector.getPackageName(String)",1,2,2
"com.android.tools.lint.checks.InvalidPackageDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.InvalidPackageDetector.isInvalidPackage(String)",2,3,3
"com.android.tools.lint.checks.InvalidPackageDetector.record(ClassContext,MethodNode,AbstractInsnNode,String)",2,2,3
"com.android.tools.lint.checks.InvalidPackageDetector.shouldSkip(File)",2,1,2
"com.android.tools.lint.checks.JavaPerformanceDetector.AssignmentTracker.AssignmentTracker(Collection<String>)",1,1,1
"com.android.tools.lint.checks.JavaPerformanceDetector.AssignmentTracker.visitBinaryExpression(BinaryExpression)",1,4,5
"com.android.tools.lint.checks.JavaPerformanceDetector.JavaPerformanceDetector()",1,1,1
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.PerformanceVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.addReferencedVariables(Collection<String>,Expression)",1,6,6
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.checkHashMap(ConstructorInvocation,TypeReference)",1,8,8
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.checkSparseArray(ConstructorInvocation,TypeReference)",1,7,7
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.isBlockedAllocationMethod(MethodDeclaration)",1,4,4
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.isLayoutMethod(MethodDeclaration)",6,5,7
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.isLazilyInitialized(Node)",6,6,6
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.isOnDrawMethod(MethodDeclaration)",4,4,5
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.isOnLayoutMethod(MethodDeclaration)",8,6,10
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.isOnMeasureMethod(MethodDeclaration)",3,5,5
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.reportAllocation(Node)",1,1,1
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.visitConstructorInvocation(ConstructorInvocation)",4,21,22
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.visitMethodDeclaration(MethodDeclaration)",1,1,1
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor.visitMethodInvocation(MethodInvocation)",1,14,14
"com.android.tools.lint.checks.JavaPerformanceDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.JavaPerformanceDetector.createJavaVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.JavaPerformanceDetector.getApplicableNodeTypes()",1,1,1
"com.android.tools.lint.checks.JavaPerformanceDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.LabelForDetector.LabelForDetector()",1,1,1
"com.android.tools.lint.checks.LabelForDetector.afterCheckFile(Context)",4,10,11
"com.android.tools.lint.checks.LabelForDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.LabelForDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.LabelForDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.LabelForDetector.visitAttribute(XmlContext,Attr)",1,2,2
"com.android.tools.lint.checks.LabelForDetector.visitElement(XmlContext,Element)",2,1,3
"com.android.tools.lint.checks.LocaleDetector.LocaleDetector()",1,1,1
"com.android.tools.lint.checks.LocaleDetector.StringValue.StringValue(int,String)",1,1,1
"com.android.tools.lint.checks.LocaleDetector.StringValue.getSize()",1,1,1
"com.android.tools.lint.checks.LocaleDetector.StringValue.getString()",1,1,1
"com.android.tools.lint.checks.LocaleDetector.checkCall(ClassContext,ClassNode,MethodNode,MethodInsnNode)",9,11,17
"com.android.tools.lint.checks.LocaleDetector.getApplicableCallNames()",1,1,1
"com.android.tools.lint.checks.LocaleDetector.getApplicableCallOwners()",1,1,1
"com.android.tools.lint.checks.LocaleDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ManifestOrderDetector.ManifestOrderDetector()",1,1,1
"com.android.tools.lint.checks.ManifestOrderDetector.afterCheckFile(Context)",1,3,3
"com.android.tools.lint.checks.ManifestOrderDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.ManifestOrderDetector.beforeCheckFile(Context)",1,1,1
"com.android.tools.lint.checks.ManifestOrderDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.ManifestOrderDetector.getPackage(Element)",2,2,2
"com.android.tools.lint.checks.ManifestOrderDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ManifestOrderDetector.visitElement(XmlContext,Element)",13,42,43
"com.android.tools.lint.checks.MathDetector.MathDetector()",1,1,1
"com.android.tools.lint.checks.MathDetector.checkCall(ClassContext,ClassNode,MethodNode,MethodInsnNode)",1,3,3
"com.android.tools.lint.checks.MathDetector.getApplicableCallNames()",1,1,1
"com.android.tools.lint.checks.MathDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector.MergeRootFrameLayoutDetector()",1,1,1
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector.afterCheckProject(Context)",6,5,7
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector.appliesTo(Context,File)",1,2,2
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector.visitElement(XmlContext,Element)",4,10,12
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",1,5,5
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector.whiteListLayout(String)",1,1,2
"com.android.tools.lint.checks.MissingClassDetector.MissingClassDetector()",1,1,1
"com.android.tools.lint.checks.MissingClassDetector.afterCheckProject(Context)",6,8,10
"com.android.tools.lint.checks.MissingClassDetector.checkClass(ClassContext,ClassNode)",4,11,12
"com.android.tools.lint.checks.MissingClassDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.MissingClassDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.MissingClassDetector.visitElement(XmlContext,Element)",9,9,15
"com.android.tools.lint.checks.MissingIdDetector.MissingIdDetector()",1,1,1
"com.android.tools.lint.checks.MissingIdDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.MissingIdDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.MissingIdDetector.visitElement(XmlContext,Element)",1,3,3
"com.android.tools.lint.checks.NamespaceDetector.NamespaceDetector()",1,1,1
"com.android.tools.lint.checks.NamespaceDetector.checkCustomNamespace(XmlContext,Element)",1,7,7
"com.android.tools.lint.checks.NamespaceDetector.checkElement(XmlContext,Node)",1,6,6
"com.android.tools.lint.checks.NamespaceDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.NamespaceDetector.visitDocument(XmlContext,Document)",10,20,23
"com.android.tools.lint.checks.NestedScrollingWidgetDetector.NestedScrollingWidgetDetector()",1,1,1
"com.android.tools.lint.checks.NestedScrollingWidgetDetector.beforeCheckFile(Context)",1,1,1
"com.android.tools.lint.checks.NestedScrollingWidgetDetector.findOuterScrollingWidget(Node,boolean)",4,4,5
"com.android.tools.lint.checks.NestedScrollingWidgetDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.NestedScrollingWidgetDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.NestedScrollingWidgetDetector.isVerticalScroll(Element)",2,5,5
"com.android.tools.lint.checks.NestedScrollingWidgetDetector.visitElement(XmlContext,Element)",1,3,6
"com.android.tools.lint.checks.NestedScrollingWidgetDetector.visitElementAfter(XmlContext,Element)",1,1,2
"com.android.tools.lint.checks.NonInternationalizedSmsDetector.NonInternationalizedSmsDetector()",1,1,1
"com.android.tools.lint.checks.NonInternationalizedSmsDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.NonInternationalizedSmsDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.NonInternationalizedSmsDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",2,5,6
"com.android.tools.lint.checks.ObsoleteLayoutParamsDetector.ObsoleteLayoutParamsDetector()",1,1,1
"com.android.tools.lint.checks.ObsoleteLayoutParamsDetector.afterCheckProject(Context)",11,11,16
"com.android.tools.lint.checks.ObsoleteLayoutParamsDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.ObsoleteLayoutParamsDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.ObsoleteLayoutParamsDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ObsoleteLayoutParamsDetector.isValidParamForParent(Context,String,String,String)",5,4,6
"com.android.tools.lint.checks.ObsoleteLayoutParamsDetector.visitAttribute(XmlContext,Attr)",8,12,14
"com.android.tools.lint.checks.ObsoleteLayoutParamsDetector.visitElement(XmlContext,Element)",5,6,8
"com.android.tools.lint.checks.OnClickDetector.OnClickDetector()",1,1,1
"com.android.tools.lint.checks.OnClickDetector.afterCheckProject(Context)",5,8,9
"com.android.tools.lint.checks.OnClickDetector.checkClass(ClassContext,ClassNode)",9,9,11
"com.android.tools.lint.checks.OnClickDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.OnClickDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.OnClickDetector.recordSimilar(String,ClassNode,MethodNode)",1,2,3
"com.android.tools.lint.checks.OnClickDetector.visitAttribute(XmlContext,Attr)",5,7,9
"com.android.tools.lint.checks.OverdrawDetector.OverdrawDetector()",1,1,1
"com.android.tools.lint.checks.OverdrawDetector.OverdrawVisitor.visitClassDeclaration(ClassDeclaration)",2,7,8
"com.android.tools.lint.checks.OverdrawDetector.OverdrawVisitor.visitMethodInvocation(MethodInvocation)",1,5,6
"com.android.tools.lint.checks.OverdrawDetector.OverdrawVisitor.visitSelect(Select)",1,6,7
"com.android.tools.lint.checks.OverdrawDetector.afterCheckProject(Context)",5,7,8
"com.android.tools.lint.checks.OverdrawDetector.appliesTo(Context,File)",1,2,2
"com.android.tools.lint.checks.OverdrawDetector.appliesTo(ResourceFolderType)",1,3,3
"com.android.tools.lint.checks.OverdrawDetector.beforeCheckFile(Context)",1,3,4
"com.android.tools.lint.checks.OverdrawDetector.createJavaVisitor(JavaContext)",2,1,2
"com.android.tools.lint.checks.OverdrawDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.OverdrawDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.OverdrawDetector.getApplicableNodeTypes()",1,1,1
"com.android.tools.lint.checks.OverdrawDetector.getDrawableResource(File)",1,2,2
"com.android.tools.lint.checks.OverdrawDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.OverdrawDetector.getTheme(Context,String)",7,5,9
"com.android.tools.lint.checks.OverdrawDetector.isBlankTheme(String)",4,14,16
"com.android.tools.lint.checks.OverdrawDetector.scanActivity(Context,Element)",1,6,9
"com.android.tools.lint.checks.OverdrawDetector.scanBitmap(Context,Element)",1,4,4
"com.android.tools.lint.checks.OverdrawDetector.scanTheme(Element)",4,14,17
"com.android.tools.lint.checks.OverdrawDetector.visitAttribute(XmlContext,Attr)",7,4,10
"com.android.tools.lint.checks.OverdrawDetector.visitElement(XmlContext,Element)",1,6,6
"com.android.tools.lint.checks.OverrideDetector.OverrideDetector()",1,1,1
"com.android.tools.lint.checks.OverrideDetector.afterCheckProject(Context)",1,23,23
"com.android.tools.lint.checks.OverrideDetector.checkClass(ClassContext,ClassNode)",10,8,12
"com.android.tools.lint.checks.OverrideDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.PrivateKeyDetector.PrivateKeyDetector()",1,1,1
"com.android.tools.lint.checks.PrivateKeyDetector.afterCheckProject(Context)",2,2,3
"com.android.tools.lint.checks.PrivateKeyDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.PrivateKeyDetector.checkFolder(Context,File)",1,6,6
"com.android.tools.lint.checks.PrivateKeyDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.PrivateKeyDetector.isPrivateKeyFile(File)",2,5,7
"com.android.tools.lint.checks.PrivateResourceDetector.PrivateResourceDetector()",1,1,1
"com.android.tools.lint.checks.PrivateResourceDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.PrivateResourceDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.PrivateResourceDetector.visitAttribute(XmlContext,Attr)",1,2,2
"com.android.tools.lint.checks.ProguardDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.ProguardDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ProguardDetector.run(Context)",9,8,12
"com.android.tools.lint.checks.PxUsageDetector.PxUsageDetector()",1,1,1
"com.android.tools.lint.checks.PxUsageDetector.appliesTo(ResourceFolderType)",1,1,2
"com.android.tools.lint.checks.PxUsageDetector.checkStyleItem(XmlContext,Element,Node)",3,29,30
"com.android.tools.lint.checks.PxUsageDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.PxUsageDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.PxUsageDetector.getSize(String)",1,1,1
"com.android.tools.lint.checks.PxUsageDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.PxUsageDetector.visitAttribute(XmlContext,Attr)",6,19,23
"com.android.tools.lint.checks.PxUsageDetector.visitElement(XmlContext,Element)",6,5,7
"com.android.tools.lint.checks.RecycleDetector.RecycleDetector()",1,1,1
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.RecycleTracker(ClassContext,MethodNode,MethodInsnNode,String)",1,1,1
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.binaryOperation(AbstractInsnNode,Value,Value)",1,1,3
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.copyOperation(AbstractInsnNode,Value)",1,1,1
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.isEscaped()",1,1,1
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.isRecycled()",1,1,1
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.merge(Value,Value)",3,1,5
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.naryOperation(AbstractInsnNode,List)",11,20,25
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.newOperation(AbstractInsnNode)",1,1,1
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.newValue(Type)",2,2,3
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.returnOperation(AbstractInsnNode,Value,Value)",1,1,3
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.setAnalyzer(ResourceAnalyzer)",1,1,1
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.ternaryOperation(AbstractInsnNode,Value,Value,Value)",3,1,7
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker.unaryOperation(AbstractInsnNode,Value)",1,1,1
"com.android.tools.lint.checks.RecycleDetector.ResourceAnalyzer.ResourceAnalyzer(Interpreter)",1,1,1
"com.android.tools.lint.checks.RecycleDetector.ResourceAnalyzer.getCurrentFrame()",1,1,1
"com.android.tools.lint.checks.RecycleDetector.ResourceAnalyzer.init(String,MethodNode)",1,1,1
"com.android.tools.lint.checks.RecycleDetector.ResourceAnalyzer.newFrame(int,int)",1,1,1
"com.android.tools.lint.checks.RecycleDetector.afterCheckProject(Context)",1,3,12
"com.android.tools.lint.checks.RecycleDetector.checkCall(ClassContext,ClassNode,MethodNode,MethodInsnNode)",1,33,43
"com.android.tools.lint.checks.RecycleDetector.checkMethodFlow(ClassContext,ClassNode,MethodNode,MethodInsnNode,String)",2,4,4
"com.android.tools.lint.checks.RecycleDetector.getApplicableCallNames()",1,1,1
"com.android.tools.lint.checks.RecycleDetector.getErrorMessage(String)",1,1,1
"com.android.tools.lint.checks.RegistrationDetector.RegistrationDetector()",1,1,1
"com.android.tools.lint.checks.RegistrationDetector.checkClass(ClassContext,ClassNode)",4,9,11
"com.android.tools.lint.checks.RegistrationDetector.classToTag(String)",3,2,3
"com.android.tools.lint.checks.RegistrationDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.RegistrationDetector.getFqcn(Element)",3,2,3
"com.android.tools.lint.checks.RegistrationDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.RegistrationDetector.report(ClassContext,ClassNode,String)",4,6,6
"com.android.tools.lint.checks.RegistrationDetector.tagToClass(String)",3,2,3
"com.android.tools.lint.checks.RegistrationDetector.visitElement(XmlContext,Element)",1,4,4
"com.android.tools.lint.checks.RequiredAttributeDetector.RequiredAttributeDetector()",1,1,1
"com.android.tools.lint.checks.RequiredAttributeDetector.afterCheckProject(Context)",1,2,2
"com.android.tools.lint.checks.RequiredAttributeDetector.appliesTo(ResourceFolderType)",1,1,2
"com.android.tools.lint.checks.RequiredAttributeDetector.checkSizeSetInTheme()",4,2,4
"com.android.tools.lint.checks.RequiredAttributeDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.RequiredAttributeDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.RequiredAttributeDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.RequiredAttributeDetector.hasLayoutVariations(File)",8,2,8
"com.android.tools.lint.checks.RequiredAttributeDetector.isFrameworkSizeStyle(String)",3,2,4
"com.android.tools.lint.checks.RequiredAttributeDetector.isHeightStyle(String)",1,1,1
"com.android.tools.lint.checks.RequiredAttributeDetector.isRootElement(Node)",1,1,1
"com.android.tools.lint.checks.RequiredAttributeDetector.isSizeStyle(String,Set<String>)",3,1,3
"com.android.tools.lint.checks.RequiredAttributeDetector.isSizeStyle(String,Set<String>,int)",7,5,8
"com.android.tools.lint.checks.RequiredAttributeDetector.isTheme(String,Map<String, Boolean>,int)",8,7,9
"com.android.tools.lint.checks.RequiredAttributeDetector.isWidthStyle(String)",1,1,1
"com.android.tools.lint.checks.RequiredAttributeDetector.recordIncludeHeight(String,boolean)",1,4,4
"com.android.tools.lint.checks.RequiredAttributeDetector.recordIncludeWidth(String,boolean)",1,4,4
"com.android.tools.lint.checks.RequiredAttributeDetector.stripStylePrefix(String)",1,3,3
"com.android.tools.lint.checks.RequiredAttributeDetector.visitElement(XmlContext,Element)",12,43,61
"com.android.tools.lint.checks.RequiredAttributeDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",8,15,17
"com.android.tools.lint.checks.ScrollViewChildDetector.ScrollViewChildDetector()",1,1,1
"com.android.tools.lint.checks.ScrollViewChildDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.ScrollViewChildDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ScrollViewChildDetector.visitElement(XmlContext,Element)",3,4,6
"com.android.tools.lint.checks.SdCardDetector.SdCardDetector()",1,1,1
"com.android.tools.lint.checks.SdCardDetector.StringChecker.StringChecker(JavaContext)",1,1,1
"com.android.tools.lint.checks.SdCardDetector.StringChecker.visitStringLiteral(StringLiteral)",3,8,11
"com.android.tools.lint.checks.SdCardDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.SdCardDetector.createJavaVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.SdCardDetector.getApplicableNodeTypes()",1,1,1
"com.android.tools.lint.checks.SdCardDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.SecureRandomDetector.SecureRandomDetector()",1,1,1
"com.android.tools.lint.checks.SecureRandomDetector.checkCall(ClassContext,ClassNode,MethodNode,MethodInsnNode)",2,11,14
"com.android.tools.lint.checks.SecureRandomDetector.checkValidSetSeed(ClassContext,MethodInsnNode)",2,5,8
"com.android.tools.lint.checks.SecureRandomDetector.getApplicableCallNames()",1,1,1
"com.android.tools.lint.checks.SecurityDetector.IdentifierVisitor.IdentifierVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.SecurityDetector.IdentifierVisitor.visitIdentifier(Identifier)",1,3,3
"com.android.tools.lint.checks.SecurityDetector.SecurityDetector()",1,1,1
"com.android.tools.lint.checks.SecurityDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.SecurityDetector.checkActivity(XmlContext,Element)",1,4,4
"com.android.tools.lint.checks.SecurityDetector.checkGrantPermission(XmlContext,Element)",1,7,7
"com.android.tools.lint.checks.SecurityDetector.checkProvider(XmlContext,Element)",7,12,13
"com.android.tools.lint.checks.SecurityDetector.checkReceiver(XmlContext,Element)",1,4,4
"com.android.tools.lint.checks.SecurityDetector.checkService(XmlContext,Element)",1,3,3
"com.android.tools.lint.checks.SecurityDetector.createJavaVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.SecurityDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.SecurityDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.SecurityDetector.getExported(Element)",4,4,5
"com.android.tools.lint.checks.SecurityDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.SecurityDetector.isLauncher(Element)",5,5,5
"com.android.tools.lint.checks.SecurityDetector.isStandardReceiver(Element)",5,5,5
"com.android.tools.lint.checks.SecurityDetector.isUnprotectedByPermission(Element)",3,6,6
"com.android.tools.lint.checks.SecurityDetector.visitElement(XmlContext,Element)",1,6,6
"com.android.tools.lint.checks.SecurityDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",1,2,2
"com.android.tools.lint.checks.SetJavaScriptEnabledDetector.SetJavaScriptEnabledDetector()",1,1,1
"com.android.tools.lint.checks.SetJavaScriptEnabledDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.SetJavaScriptEnabledDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",1,3,3
"com.android.tools.lint.checks.SharedPrefsDetector.CommitFinder.CommitFinder(MethodInvocation,boolean)",1,1,1
"com.android.tools.lint.checks.SharedPrefsDetector.CommitFinder.isCommitCalled()",1,1,1
"com.android.tools.lint.checks.SharedPrefsDetector.CommitFinder.visitMethodInvocation(MethodInvocation)",1,6,7
"com.android.tools.lint.checks.SharedPrefsDetector.CommitFinder.visitReturn(Return)",1,1,2
"com.android.tools.lint.checks.SharedPrefsDetector.SharedPrefsDetector()",1,1,1
"com.android.tools.lint.checks.SharedPrefsDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.SharedPrefsDetector.findSurroundingTypeBody(Node)",3,2,3
"com.android.tools.lint.checks.SharedPrefsDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.SharedPrefsDetector.getFieldType(NormalTypeBody,String)",3,3,3
"com.android.tools.lint.checks.SharedPrefsDetector.getLhs(Node)",4,2,5
"com.android.tools.lint.checks.SharedPrefsDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",9,7,12
"com.android.tools.lint.checks.StateListDetector.StateListDetector()",1,1,1
"com.android.tools.lint.checks.StateListDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.StateListDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.StateListDetector.visitDocument(XmlContext,Document)",8,12,13
"com.android.tools.lint.checks.StringFormatDetector.StringFormatDetector()",1,1,1
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.StringTracker(Node,Node,int)",1,1,1
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.getArgument(int)",5,2,5
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.getArgumentType(int)",3,2,3
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.getFormatStringName()",1,1,1
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.getTargetArgument()",4,6,6
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.getType(Expression)",9,3,9
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.visitConstructorInvocation(ConstructorInvocation)",3,3,3
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.visitMethodInvocation(MethodInvocation)",3,3,3
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.visitNode(Node)",2,1,2
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.visitVariableDefinitionEntry(VariableDefinitionEntry)",1,3,3
"com.android.tools.lint.checks.StringFormatDetector.StringTracker.visitVariableReference(VariableReference)",4,6,8
"com.android.tools.lint.checks.StringFormatDetector.afterCheckProject(Context)",1,5,6
"com.android.tools.lint.checks.StringFormatDetector.appliesTo(Context,File)",2,1,2
"com.android.tools.lint.checks.StringFormatDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.StringFormatDetector.checkArity(Context,String,List<Pair<Handle, String>>)",9,8,11
"com.android.tools.lint.checks.StringFormatDetector.checkFormatCall(JavaContext,MethodInvocation)",1,2,2
"com.android.tools.lint.checks.StringFormatDetector.checkStringFormatCall(JavaContext,Node,MethodInvocation)",14,13,22
"com.android.tools.lint.checks.StringFormatDetector.checkTextNode(XmlContext,Element,String)",8,13,18
"com.android.tools.lint.checks.StringFormatDetector.checkTypes(Context,Formatter,boolean,boolean,String,List<Pair<Handle, String>>)",16,15,24
"com.android.tools.lint.checks.StringFormatDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.StringFormatDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.StringFormatDetector.getConversionClass(char)",10,2,10
"com.android.tools.lint.checks.StringFormatDetector.getFormatArgumentCount(String,Set<Integer>)",5,7,10
"com.android.tools.lint.checks.StringFormatDetector.getFormatArgumentType(String,int)",5,6,8
"com.android.tools.lint.checks.StringFormatDetector.getParentMethod(Node)",1,2,4
"com.android.tools.lint.checks.StringFormatDetector.getResourceArg(Node,Node,int)",1,1,2
"com.android.tools.lint.checks.StringFormatDetector.getResourceForFirstArg(Node,Node)",1,1,2
"com.android.tools.lint.checks.StringFormatDetector.isIncompatible(char,char)",1,1,3
"com.android.tools.lint.checks.StringFormatDetector.isLocaleSpecific(String)",7,6,9
"com.android.tools.lint.checks.StringFormatDetector.refineLocation(Context,Location,String,int,int)",5,7,9
"com.android.tools.lint.checks.StringFormatDetector.strip(String)",3,2,5
"com.android.tools.lint.checks.StringFormatDetector.visitElement(XmlContext,Element)",1,4,4
"com.android.tools.lint.checks.StringFormatDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",2,6,7
"com.android.tools.lint.checks.StyleCycleDetector.StyleCycleDetector()",1,1,1
"com.android.tools.lint.checks.StyleCycleDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.StyleCycleDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.StyleCycleDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.StyleCycleDetector.visitElement(XmlContext,Element)",1,7,7
"com.android.tools.lint.checks.SystemPermissionsDetector.SystemPermissionsDetector()",1,1,1
"com.android.tools.lint.checks.SystemPermissionsDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.SystemPermissionsDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.SystemPermissionsDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.SystemPermissionsDetector.visitElement(XmlContext,Element)",1,3,3
"com.android.tools.lint.checks.TextFieldDetector.TextFieldDetector()",1,1,1
"com.android.tools.lint.checks.TextFieldDetector.containsWord(String,String)",1,1,1
"com.android.tools.lint.checks.TextFieldDetector.containsWord(String,String,boolean,boolean)",1,1,1
"com.android.tools.lint.checks.TextFieldDetector.endsWith(String,String,boolean,boolean)",2,2,2
"com.android.tools.lint.checks.TextFieldDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.TextFieldDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.TextFieldDetector.indexOfWord(String,String,boolean,boolean)",11,10,19
"com.android.tools.lint.checks.TextFieldDetector.reportMismatch(XmlContext,Attr,Attr,String)",1,2,2
"com.android.tools.lint.checks.TextFieldDetector.visitElement(XmlContext,Element)",12,29,34
"com.android.tools.lint.checks.TextViewDetector.TextViewDetector()",1,1,1
"com.android.tools.lint.checks.TextViewDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.TextViewDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.TextViewDetector.visitElement(XmlContext,Element)",4,30,31
"com.android.tools.lint.checks.TitleDetector.TitleDetector()",1,1,1
"com.android.tools.lint.checks.TitleDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.TitleDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.TitleDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.TitleDetector.visitElement(XmlContext,Element)",4,1,4
"com.android.tools.lint.checks.ToastDetector.ShowFinder.ShowFinder(MethodInvocation)",1,1,1
"com.android.tools.lint.checks.ToastDetector.ShowFinder.isShowCalled()",1,1,1
"com.android.tools.lint.checks.ToastDetector.ShowFinder.visitMethodInvocation(MethodInvocation)",1,4,5
"com.android.tools.lint.checks.ToastDetector.ShowFinder.visitReturn(Return)",1,1,2
"com.android.tools.lint.checks.ToastDetector.ToastDetector()",1,1,1
"com.android.tools.lint.checks.ToastDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.ToastDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.ToastDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",4,5,8
"com.android.tools.lint.checks.TooManyViewsDetector.TooManyViewsDetector()",1,1,1
"com.android.tools.lint.checks.TooManyViewsDetector.beforeCheckFile(Context)",1,1,1
"com.android.tools.lint.checks.TooManyViewsDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.TooManyViewsDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.TooManyViewsDetector.visitElement(XmlContext,Element)",1,3,4
"com.android.tools.lint.checks.TooManyViewsDetector.visitElementAfter(XmlContext,Element)",1,1,1
"com.android.tools.lint.checks.TranslationDetector.TranslationDetector()",1,1,1
"com.android.tools.lint.checks.TranslationDetector.afterCheckFile(Context)",1,8,8
"com.android.tools.lint.checks.TranslationDetector.afterCheckProject(Context)",1,3,4
"com.android.tools.lint.checks.TranslationDetector.allItemsAreReferences(Element)",6,7,8
"com.android.tools.lint.checks.TranslationDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.TranslationDetector.beforeCheckFile(Context)",1,1,3
"com.android.tools.lint.checks.TranslationDetector.beforeCheckProject(Context)",1,1,2
"com.android.tools.lint.checks.TranslationDetector.checkTranslations(Context)",18,28,41
"com.android.tools.lint.checks.TranslationDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.TranslationDetector.getLanguage(String)",3,6,8
"com.android.tools.lint.checks.TranslationDetector.reportMap(Context,Issue,Map<String, Location>)",1,3,3
"com.android.tools.lint.checks.TranslationDetector.visitElement(XmlContext,Element)",12,18,22
"com.android.tools.lint.checks.TypoDetector.TypoDetector()",1,1,1
"com.android.tools.lint.checks.TypoDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.TypoDetector.beforeCheckFile(Context)",1,8,9
"com.android.tools.lint.checks.TypoDetector.check(XmlContext,Node,String)",10,10,12
"com.android.tools.lint.checks.TypoDetector.check(XmlContext,Node,byte[],int,int,String,int)",9,7,18
"com.android.tools.lint.checks.TypoDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.TypoDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.TypoDetector.getSuggestions(String)",3,3,4
"com.android.tools.lint.checks.TypoDetector.getTypo(String)",2,2,2
"com.android.tools.lint.checks.TypoDetector.initLocale(String)",5,5,14
"com.android.tools.lint.checks.TypoDetector.reportTypo(XmlContext,Node,String,int,List<String>)",4,6,9
"com.android.tools.lint.checks.TypoDetector.visit(XmlContext,Node)",1,3,3
"com.android.tools.lint.checks.TypoDetector.visitElement(XmlContext,Element)",2,1,2
"com.android.tools.lint.checks.TypoLookup.TypoLookup()",1,1,1
"com.android.tools.lint.checks.TypoLookup.TypoLookup(LintClient,File,File)",1,2,2
"com.android.tools.lint.checks.TypoLookup.compare(byte[],int,byte,CharSequence,int,int)",13,9,15
"com.android.tools.lint.checks.TypoLookup.compare(byte[],int,byte,byte[],int,int)",13,7,16
"com.android.tools.lint.checks.TypoLookup.computeSuggestions(int,int,String)",1,4,5
"com.android.tools.lint.checks.TypoLookup.createCache(LintClient,File,File)",1,5,5
"com.android.tools.lint.checks.TypoLookup.dumpEntry(int)",2,1,3
"com.android.tools.lint.checks.TypoLookup.get(LintClient,File)",7,8,10
"com.android.tools.lint.checks.TypoLookup.get(LintClient,String,String)",5,10,11
"com.android.tools.lint.checks.TypoLookup.getTypos(CharSequence,int,int)",13,11,18
"com.android.tools.lint.checks.TypoLookup.getTypos(byte[],int,int)",10,10,16
"com.android.tools.lint.checks.TypoLookup.isLetter(byte)",1,2,2
"com.android.tools.lint.checks.TypoLookup.isSpace(byte)",1,1,1
"com.android.tools.lint.checks.TypoLookup.isUpperCase(byte)",1,1,1
"com.android.tools.lint.checks.TypoLookup.readData()",5,9,9
"com.android.tools.lint.checks.TypoLookup.toLowerCase(byte)",1,1,1
"com.android.tools.lint.checks.TypoLookup.writeDatabase(File,List<String>)",4,9,10
"com.android.tools.lint.checks.TypographyDetector.ReplaceEdit.ReplaceEdit(int,int,String)",1,1,1
"com.android.tools.lint.checks.TypographyDetector.TypographyDetector()",1,1,1
"com.android.tools.lint.checks.TypographyDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.TypographyDetector.beforeCheckProject(Context)",1,1,1
"com.android.tools.lint.checks.TypographyDetector.checkText(XmlContext,Node,Node,String)",9,44,45
"com.android.tools.lint.checks.TypographyDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.TypographyDetector.getEdits(String,String,Node)",1,23,23
"com.android.tools.lint.checks.TypographyDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.TypographyDetector.visitElement(XmlContext,Element)",1,7,7
"com.android.tools.lint.checks.UnusedResourceDetector.UnusedResourceDetector()",1,1,1
"com.android.tools.lint.checks.UnusedResourceDetector.UnusedResourceVisitor.visitClassDeclaration(ClassDeclaration)",2,12,12
"com.android.tools.lint.checks.UnusedResourceDetector.afterCheckProject(Context)",11,29,32
"com.android.tools.lint.checks.UnusedResourceDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.checks.UnusedResourceDetector.appliesToResourceRefs()",1,1,1
"com.android.tools.lint.checks.UnusedResourceDetector.beforeCheckFile(Context)",9,15,16
"com.android.tools.lint.checks.UnusedResourceDetector.beforeCheckProject(Context)",1,1,2
"com.android.tools.lint.checks.UnusedResourceDetector.checkChildRefs(Element)",1,7,7
"com.android.tools.lint.checks.UnusedResourceDetector.createJavaVisitor(JavaContext)",2,1,2
"com.android.tools.lint.checks.UnusedResourceDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.UnusedResourceDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.UnusedResourceDetector.getApplicableNodeTypes()",1,1,1
"com.android.tools.lint.checks.UnusedResourceDetector.getIssue(String)",1,1,2
"com.android.tools.lint.checks.UnusedResourceDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.UnusedResourceDetector.recordLocation(String,Location)",1,2,2
"com.android.tools.lint.checks.UnusedResourceDetector.run(Context)",1,1,1
"com.android.tools.lint.checks.UnusedResourceDetector.visitAttribute(XmlContext,Attr)",6,14,14
"com.android.tools.lint.checks.UnusedResourceDetector.visitElement(XmlContext,Element)",8,16,17
"com.android.tools.lint.checks.UnusedResourceDetector.visitResourceReference(JavaContext,AstVisitor,Node,String,String,boolean)",1,2,3
"com.android.tools.lint.checks.UseCompoundDrawableDetector.UseCompoundDrawableDetector()",1,1,1
"com.android.tools.lint.checks.UseCompoundDrawableDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.UseCompoundDrawableDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.UseCompoundDrawableDetector.visitElement(XmlContext,Element)",5,10,12
"com.android.tools.lint.checks.UselessViewDetector.UselessViewDetector()",1,1,1
"com.android.tools.lint.checks.UselessViewDetector.checkUselessLeaf(XmlContext,Element)",5,1,5
"com.android.tools.lint.checks.UselessViewDetector.checkUselessMiddleLayout(XmlContext,Element)",6,3,12
"com.android.tools.lint.checks.UselessViewDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.UselessViewDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.UselessViewDetector.visitElement(XmlContext,Element)",1,2,2
"com.android.tools.lint.checks.Utf8Detector.Utf8Detector()",1,1,1
"com.android.tools.lint.checks.Utf8Detector.getSpeed()",1,1,1
"com.android.tools.lint.checks.Utf8Detector.visitDocument(XmlContext,Document)",6,13,17
"com.android.tools.lint.checks.ViewConstructorDetector.ViewConstructorDetector()",1,1,1
"com.android.tools.lint.checks.ViewConstructorDetector.checkClass(ClassContext,ClassNode)",2,3,4
"com.android.tools.lint.checks.ViewConstructorDetector.checkConstructors(ClassContext,ClassNode)",4,5,7
"com.android.tools.lint.checks.ViewConstructorDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ViewConstructorDetector.isViewClass(ClassContext,ClassNode)",3,9,10
"com.android.tools.lint.checks.ViewTagDetector.ViewTagDetector()",1,1,1
"com.android.tools.lint.checks.ViewTagDetector.checkCall(ClassContext,ClassNode,MethodNode,MethodInsnNode)",11,12,17
"com.android.tools.lint.checks.ViewTagDetector.getApplicableCallNames()",1,1,1
"com.android.tools.lint.checks.ViewTagDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ViewTypeDetector.appliesTo(Context,File)",2,1,2
"com.android.tools.lint.checks.ViewTypeDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.checks.ViewTypeDetector.checkCompatible(JavaContext,String,String,List<String>,Cast)",4,7,10
"com.android.tools.lint.checks.ViewTypeDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.ViewTypeDetector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.checks.ViewTypeDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.ViewTypeDetector.visitAttribute(XmlContext,Attr)",1,10,10
"com.android.tools.lint.checks.ViewTypeDetector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",1,7,7
"com.android.tools.lint.checks.WakelockDetector.MyGraph.add(AbstractInsnNode,AbstractInsnNode)",11,15,16
"com.android.tools.lint.checks.WakelockDetector.WakelockDetector()",1,1,1
"com.android.tools.lint.checks.WakelockDetector.afterCheckProject(Context)",1,4,4
"com.android.tools.lint.checks.WakelockDetector.checkCall(ClassContext,ClassNode,MethodNode,MethodInsnNode)",3,7,8
"com.android.tools.lint.checks.WakelockDetector.checkFlow(ClassContext,ClassNode,MethodNode,MethodInsnNode)",5,7,10
"com.android.tools.lint.checks.WakelockDetector.dfs(Node)",19,27,39
"com.android.tools.lint.checks.WakelockDetector.getApplicableCallNames()",1,1,1
"com.android.tools.lint.checks.WrongIdDetector.WrongIdDetector()",1,1,1
"com.android.tools.lint.checks.WrongIdDetector.afterCheckFile(Context)",6,10,13
"com.android.tools.lint.checks.WrongIdDetector.afterCheckProject(Context)",1,10,13
"com.android.tools.lint.checks.WrongIdDetector.appliesTo(ResourceFolderType)",1,1,2
"com.android.tools.lint.checks.WrongIdDetector.beforeCheckFile(Context)",1,1,1
"com.android.tools.lint.checks.WrongIdDetector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.checks.WrongIdDetector.getApplicableElements()",1,1,1
"com.android.tools.lint.checks.WrongIdDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.WrongIdDetector.getSpellingSuggestions(String,Collection<String>)",7,7,10
"com.android.tools.lint.checks.WrongIdDetector.idDefined(Set<String>,String)",2,4,5
"com.android.tools.lint.checks.WrongIdDetector.report(Context,Issue,Handle,String)",3,2,3
"com.android.tools.lint.checks.WrongIdDetector.visitAttribute(XmlContext,Attr)",1,2,2
"com.android.tools.lint.checks.WrongIdDetector.visitElement(XmlContext,Element)",1,5,6
"com.android.tools.lint.checks.WrongImportDetector.ImportVisitor.ImportVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.WrongImportDetector.ImportVisitor.visitImportDeclaration(ImportDeclaration)",1,2,2
"com.android.tools.lint.checks.WrongImportDetector.WrongImportDetector()",1,1,1
"com.android.tools.lint.checks.WrongImportDetector.createJavaVisitor(JavaContext)",1,1,1
"com.android.tools.lint.checks.WrongImportDetector.getApplicableNodeTypes()",1,1,1
"com.android.tools.lint.checks.WrongImportDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.WrongLocationDetector.WrongLocationDetector()",1,1,1
"com.android.tools.lint.checks.WrongLocationDetector.getSpeed()",1,1,1
"com.android.tools.lint.checks.WrongLocationDetector.visitDocument(XmlContext,Document)",1,3,3
"com.android.tools.lint.client.api.AsmVisitor.AsmVisitor(LintClient,List<? extends Detector>)",5,12,15
"com.android.tools.lint.client.api.AsmVisitor.runClassDetectors(ClassContext)",1,17,19
"com.android.tools.lint.client.api.Configuration.finishBulkEditing()",1,1,1
"com.android.tools.lint.client.api.Configuration.getSeverity(Issue)",1,1,1
"com.android.tools.lint.client.api.Configuration.isEnabled(Issue)",1,1,1
"com.android.tools.lint.client.api.Configuration.isIgnored(Context,Issue,Location,String,Object)",1,1,1
"com.android.tools.lint.client.api.Configuration.startBulkEditing()",1,1,1
"com.android.tools.lint.client.api.DefaultConfiguration.DefaultConfiguration(LintClient,Project,Configuration)",1,1,1
"com.android.tools.lint.client.api.DefaultConfiguration.DefaultConfiguration(LintClient,Project,Configuration,File)",1,1,1
"com.android.tools.lint.client.api.DefaultConfiguration.create(LintClient,File)",1,1,1
"com.android.tools.lint.client.api.DefaultConfiguration.create(LintClient,Project,Configuration)",1,1,1
"com.android.tools.lint.client.api.DefaultConfiguration.ensureInitialized()",1,2,2
"com.android.tools.lint.client.api.DefaultConfiguration.finishBulkEditing()",1,1,1
"com.android.tools.lint.client.api.DefaultConfiguration.formatError(String,Object...)",1,2,3
"com.android.tools.lint.client.api.DefaultConfiguration.getDefaultSeverity(Issue)",2,1,2
"com.android.tools.lint.client.api.DefaultConfiguration.getSeverity(Issue)",3,2,3
"com.android.tools.lint.client.api.DefaultConfiguration.ignore(Context,Issue,Location,String,Object)",1,2,2
"com.android.tools.lint.client.api.DefaultConfiguration.ignore(Issue,File)",1,4,4
"com.android.tools.lint.client.api.DefaultConfiguration.isIgnored(Context,Issue,Location,String,Object)",5,4,6
"com.android.tools.lint.client.api.DefaultConfiguration.readConfig()",9,15,16
"com.android.tools.lint.client.api.DefaultConfiguration.setSeverity(Issue,Severity)",1,3,3
"com.android.tools.lint.client.api.DefaultConfiguration.startBulkEditing()",1,1,1
"com.android.tools.lint.client.api.DefaultConfiguration.writeAttribute(Writer,String,String)",1,1,1
"com.android.tools.lint.client.api.DefaultConfiguration.writeConfig()",1,15,15
"com.android.tools.lint.client.api.DefaultSdkInfo.getParentViewClass(String)",3,4,6
"com.android.tools.lint.client.api.DefaultSdkInfo.getParentViewName(String)",1,1,1
"com.android.tools.lint.client.api.DefaultSdkInfo.getRawType(String)",1,3,3
"com.android.tools.lint.client.api.DefaultSdkInfo.implementsInterface(String,String)",1,1,1
"com.android.tools.lint.client.api.DefaultSdkInfo.isLayout(String)",2,1,2
"com.android.tools.lint.client.api.DefaultSdkInfo.isSubViewOf(String,String)",6,4,8
"com.android.tools.lint.client.api.IssueRegistry.createDetectors(LintClient,Configuration,EnumSet<Scope>,Map<Scope, List<Detector>>)",5,12,13
"com.android.tools.lint.client.api.IssueRegistry.getCategories()",1,3,3
"com.android.tools.lint.client.api.IssueRegistry.getIssue(String)",1,3,3
"com.android.tools.lint.client.api.IssueRegistry.getIssuesForScope(EnumSet<Scope>)",1,5,8
"com.android.tools.lint.client.api.IssueRegistry.isCategoryName(String)",3,3,4
"com.android.tools.lint.client.api.IssueRegistry.isIssueId(String)",1,1,1
"com.android.tools.lint.client.api.IssueRegistry.reset()",1,1,1
"com.android.tools.lint.client.api.JavaVisitor.DelegatingJavaVisitor.DelegatingJavaVisitor(JavaContext)",1,1,1
"com.android.tools.lint.client.api.JavaVisitor.DelegatingJavaVisitor.visitMethodInvocation(MethodInvocation)",1,4,4
"com.android.tools.lint.client.api.JavaVisitor.DelegatingJavaVisitor.visitSelect(Select)",5,11,11
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.endVisit(Node)",1,1,1
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitAlternateConstructorInvocation(AlternateConstructorInvocation)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitAnnotation(Annotation)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitAnnotationDeclaration(AnnotationDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitAnnotationElement(AnnotationElement)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitAnnotationMethodDeclaration(AnnotationMethodDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitAnnotationValueArray(AnnotationValueArray)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitArrayAccess(ArrayAccess)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitArrayCreation(ArrayCreation)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitArrayDimension(ArrayDimension)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitArrayInitializer(ArrayInitializer)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitAssert(Assert)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitBinaryExpression(BinaryExpression)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitBlock(Block)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitBooleanLiteral(BooleanLiteral)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitBreak(Break)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitCase(Case)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitCast(Cast)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitCatch(Catch)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitCharLiteral(CharLiteral)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitClassDeclaration(ClassDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitClassLiteral(ClassLiteral)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitComment(Comment)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitCompilationUnit(CompilationUnit)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitConstructorDeclaration(ConstructorDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitConstructorInvocation(ConstructorInvocation)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitContinue(Continue)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitDefault(Default)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitDoWhile(DoWhile)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitEmptyDeclaration(EmptyDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitEmptyStatement(EmptyStatement)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitEnumConstant(EnumConstant)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitEnumDeclaration(EnumDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitEnumTypeBody(EnumTypeBody)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitExpressionStatement(ExpressionStatement)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitFloatingPointLiteral(FloatingPointLiteral)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitFor(For)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitForEach(ForEach)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitIdentifier(Identifier)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitIf(If)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitImportDeclaration(ImportDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitInlineIfExpression(InlineIfExpression)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitInstanceInitializer(InstanceInitializer)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitInstanceOf(InstanceOf)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitIntegralLiteral(IntegralLiteral)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitInterfaceDeclaration(InterfaceDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitKeywordModifier(KeywordModifier)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitLabelledStatement(LabelledStatement)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitMethodDeclaration(MethodDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitMethodInvocation(MethodInvocation)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitModifiers(Modifiers)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitNormalTypeBody(NormalTypeBody)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitNullLiteral(NullLiteral)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitPackageDeclaration(PackageDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitParseArtefact(Node)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitReturn(Return)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitSelect(Select)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitStaticInitializer(StaticInitializer)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitStringLiteral(StringLiteral)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitSuper(Super)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitSuperConstructorInvocation(SuperConstructorInvocation)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitSwitch(Switch)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitSynchronized(Synchronized)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitThis(This)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitThrow(Throw)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitTry(Try)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitTypeReference(TypeReference)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitTypeReferencePart(TypeReferencePart)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitTypeVariable(TypeVariable)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitUnaryExpression(UnaryExpression)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitVariableDeclaration(VariableDeclaration)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitVariableDefinition(VariableDefinition)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitVariableDefinitionEntry(VariableDefinitionEntry)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitVariableReference(VariableReference)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor.visitWhile(While)",1,3,3
"com.android.tools.lint.client.api.JavaVisitor.JavaVisitor(IJavaParser,List<Detector>)",1,13,13
"com.android.tools.lint.client.api.JavaVisitor.VisitingDetector.VisitingDetector(Detector,JavaScanner)",1,1,1
"com.android.tools.lint.client.api.JavaVisitor.VisitingDetector.getDetector()",1,1,1
"com.android.tools.lint.client.api.JavaVisitor.VisitingDetector.getJavaScanner()",1,1,1
"com.android.tools.lint.client.api.JavaVisitor.VisitingDetector.getVisitor()",1,2,3
"com.android.tools.lint.client.api.JavaVisitor.VisitingDetector.setContext(JavaContext)",1,1,1
"com.android.tools.lint.client.api.JavaVisitor.visitFile(JavaContext,File)",2,9,10
"com.android.tools.lint.client.api.LintClient.ClassPathInfo.ClassPathInfo(List<File>,List<File>,List<File>)",1,1,1
"com.android.tools.lint.client.api.LintClient.ClassPathInfo.getClassFolders()",1,1,1
"com.android.tools.lint.client.api.LintClient.ClassPathInfo.getLibraries()",1,1,1
"com.android.tools.lint.client.api.LintClient.ClassPathInfo.getSourceFolders()",1,1,1
"com.android.tools.lint.client.api.LintClient.createProject(File,File)",1,1,1
"com.android.tools.lint.client.api.LintClient.findResource(String)",3,1,3
"com.android.tools.lint.client.api.LintClient.getCacheDir(boolean)",3,3,4
"com.android.tools.lint.client.api.LintClient.getClassPath(Project)",1,25,26
"com.android.tools.lint.client.api.LintClient.getConfiguration(Project)",1,1,1
"com.android.tools.lint.client.api.LintClient.getHighestKnownApiLevel()",1,4,5
"com.android.tools.lint.client.api.LintClient.getJavaClassFolders(Project)",1,1,1
"com.android.tools.lint.client.api.LintClient.getJavaLibraries(Project)",1,1,1
"com.android.tools.lint.client.api.LintClient.getJavaSourceFolders(Project)",1,1,1
"com.android.tools.lint.client.api.LintClient.getLintBinDir()",2,4,5
"com.android.tools.lint.client.api.LintClient.getProject(File,File)",2,1,4
"com.android.tools.lint.client.api.LintClient.getProjectName(Project)",1,1,1
"com.android.tools.lint.client.api.LintClient.getResourceFolder(Project)",2,1,2
"com.android.tools.lint.client.api.LintClient.getSdkHome()",4,3,5
"com.android.tools.lint.client.api.LintClient.getSdkInfo(Project)",1,1,1
"com.android.tools.lint.client.api.LintClient.getSuperClass(Project,String)",1,1,1
"com.android.tools.lint.client.api.LintClient.getTargets()",1,3,3
"com.android.tools.lint.client.api.LintClient.isSubclassOf(Project,String,String)",1,1,1
"com.android.tools.lint.client.api.LintClient.log(Throwable,String,Object...)",1,1,1
"com.android.tools.lint.client.api.LintClient.readBytes(File)",1,1,1
"com.android.tools.lint.client.api.LintClient.replaceDetector(Class<? extends Detector>)",1,1,1
"com.android.tools.lint.client.api.LintDriver.ClassEntry.ClassEntry(File,File,File,byte[])",1,1,1
"com.android.tools.lint.client.api.LintDriver.ClassEntry.compareTo(ClassEntry)",5,2,8
"com.android.tools.lint.client.api.LintDriver.ClassEntry.path()",2,2,2
"com.android.tools.lint.client.api.LintDriver.ClassEntry.toString()",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.LintClientWrapper(LintClient)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.findResource(String)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getCacheDir(boolean)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getClassPath(Project)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getConfiguration(Project)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getDomParser()",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getHighestKnownApiLevel()",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getJavaClassFolders(Project)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getJavaLibraries(Project)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getJavaParser()",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getJavaSourceFolders(Project)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getProject(File,File)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getProjectName(Project)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getResourceFolder(Project)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getSdkHome()",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getSdkInfo(Project)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getSuperClass(Project,String)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.getTargets()",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.isSubclassOf(Project,String,String)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.log(Severity,Throwable,String,Object...)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.log(Throwable,String,Object...)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.readBytes(File)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.readFile(File)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.replaceDetector(Class<? extends Detector>)",1,1,1
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper.report(Context,Issue,Severity,Location,String,Object)",5,3,7
"com.android.tools.lint.client.api.LintDriver.LintDriver(IssueRegistry,LintClient)",1,1,1
"com.android.tools.lint.client.api.LintDriver.SuperclassVisitor.SuperclassVisitor(Map<String, String>)",1,1,1
"com.android.tools.lint.client.api.LintDriver.SuperclassVisitor.visit(int,int,String,String,String,String[])",1,2,2
"com.android.tools.lint.client.api.LintDriver.addClassFiles(File,List<File>)",1,6,7
"com.android.tools.lint.client.api.LintDriver.addLintListener(LintListener)",1,1,2
"com.android.tools.lint.client.api.LintDriver.addProjects(File,Map<File, Project>,File)",2,5,6
"com.android.tools.lint.client.api.LintDriver.addSuperClasses(SuperclassVisitor,List<ClassEntry>)",1,3,3
"com.android.tools.lint.client.api.LintDriver.analyze(List<File>,EnumSet<Scope>)",9,15,19
"com.android.tools.lint.client.api.LintDriver.cancel()",1,1,1
"com.android.tools.lint.client.api.LintDriver.checkClasses(Project,Project)",3,5,6
"com.android.tools.lint.client.api.LintDriver.checkIndividualClassFiles(Project,Project,List<File>)",8,10,11
"com.android.tools.lint.client.api.LintDriver.checkIndividualJavaFiles(Project,Project,List<Detector>,List<File>)",5,5,6
"com.android.tools.lint.client.api.LintDriver.checkIndividualResources(Project,Project,List<ResourceXmlDetector>,List<File>)",5,10,10
"com.android.tools.lint.client.api.LintDriver.checkJava(Project,Project,List<File>,List<Detector>)",5,5,6
"com.android.tools.lint.client.api.LintDriver.checkProGuard(Project,Project)",5,12,14
"com.android.tools.lint.client.api.LintDriver.checkProject(Project)",12,8,13
"com.android.tools.lint.client.api.LintDriver.checkResFolder(Project,Project,File,List<ResourceXmlDetector>)",4,3,5
"com.android.tools.lint.client.api.LintDriver.checkResourceFolder(Project,Project,File,ResourceFolderType,List<ResourceXmlDetector>)",6,5,7
"com.android.tools.lint.client.api.LintDriver.computeDetectors(Project)",1,1,1
"com.android.tools.lint.client.api.LintDriver.computeProjects(List<File>)",14,25,29
"com.android.tools.lint.client.api.LintDriver.computeRepeatingDetectors(List<Detector>,Project)",5,10,11
"com.android.tools.lint.client.api.LintDriver.findClasses(List<ClassEntry>,List<File>)",10,12,15
"com.android.tools.lint.client.api.LintDriver.findField(ClassNode,String,String)",5,4,5
"com.android.tools.lint.client.api.LintDriver.findProjectFor(File)",5,3,5
"com.android.tools.lint.client.api.LintDriver.fireEvent(EventType,Context)",1,3,3
"com.android.tools.lint.client.api.LintDriver.gatherJavaFiles(File,List<File>)",1,6,6
"com.android.tools.lint.client.api.LintDriver.getClient()",1,1,1
"com.android.tools.lint.client.api.LintDriver.getOuterClassNode(ClassNode)",5,5,6
"com.android.tools.lint.client.api.LintDriver.getPhase()",1,1,1
"com.android.tools.lint.client.api.LintDriver.getProjects()",2,2,2
"com.android.tools.lint.client.api.LintDriver.getRegistry()",1,1,1
"com.android.tools.lint.client.api.LintDriver.getScope()",1,1,1
"com.android.tools.lint.client.api.LintDriver.getSuperClass(String)",4,3,6
"com.android.tools.lint.client.api.LintDriver.getSuperMap(List<ClassEntry>,List<ClassEntry>)",1,1,1
"com.android.tools.lint.client.api.LintDriver.getVisitor(ResourceFolderType,List<ResourceXmlDetector>)",4,5,8
"com.android.tools.lint.client.api.LintDriver.hasParserErrors()",1,1,1
"com.android.tools.lint.client.api.LintDriver.isAbbreviating()",1,1,1
"com.android.tools.lint.client.api.LintDriver.isSubclassOf(ClassNode,String)",6,4,6
"com.android.tools.lint.client.api.LintDriver.isSuppressed(Issue,ClassNode)",2,2,2
"com.android.tools.lint.client.api.LintDriver.isSuppressed(Issue,ClassNode,MethodNode,AbstractInsnNode)",5,7,8
"com.android.tools.lint.client.api.LintDriver.isSuppressed(Issue,FieldNode)",2,2,2
"com.android.tools.lint.client.api.LintDriver.isSuppressed(Issue,List<AnnotationNode>)",12,14,16
"com.android.tools.lint.client.api.LintDriver.isSuppressed(Issue,Modifiers)",15,14,20
"com.android.tools.lint.client.api.LintDriver.isSuppressed(Issue,Node)",8,11,13
"com.android.tools.lint.client.api.LintDriver.registerProjectFile(Map<File, Project>,File,File,File)",1,1,1
"com.android.tools.lint.client.api.LintDriver.removeLintListener(LintListener)",1,1,2
"com.android.tools.lint.client.api.LintDriver.requestRepeat(Detector,EnumSet<Scope>)",1,3,4
"com.android.tools.lint.client.api.LintDriver.runClassDetectors(Scope,List<ClassEntry>,Project,Project)",8,14,17
"com.android.tools.lint.client.api.LintDriver.runExtraPhases(Project)",6,3,8
"com.android.tools.lint.client.api.LintDriver.runFileDetectors(Project,Project)",4,29,32
"com.android.tools.lint.client.api.LintDriver.setAbbreviating(boolean)",1,1,1
"com.android.tools.lint.client.api.LintDriver.setHasParserErrors(boolean)",1,1,1
"com.android.tools.lint.client.api.LintDriver.union(List<Detector>,List<Detector>)",3,5,5
"com.android.tools.lint.client.api.LintDriver.validateScopeList()",1,2,14
"com.android.tools.lint.client.api.SdkInfo.isLayout(String)",1,1,1
"com.android.tools.lint.client.api.SdkInfo.isSubViewOf(String,String)",4,2,4
"com.android.tools.lint.client.api.XmlVisitor.XmlVisitor(IDomParser,List<? extends Detector>)",1,16,16
"com.android.tools.lint.client.api.XmlVisitor.visitElement(XmlContext,Element)",1,19,19
"com.android.tools.lint.client.api.XmlVisitor.visitFile(XmlContext,File)",4,10,12
"com.android.tools.lint.detector.api.Category.Category(Category,String,int)",1,1,1
"com.android.tools.lint.detector.api.Category.compareTo(Category)",4,1,4
"com.android.tools.lint.detector.api.Category.create(Category,String,int)",1,1,1
"com.android.tools.lint.detector.api.Category.create(String,int)",1,1,1
"com.android.tools.lint.detector.api.Category.getFullName()",2,2,2
"com.android.tools.lint.detector.api.Category.getName()",1,1,1
"com.android.tools.lint.detector.api.Category.getParent()",1,1,1
"com.android.tools.lint.detector.api.ClassContext.ClassContext(LintDriver,Project,Project,File,File,File,byte[],ClassNode,boolean,String)",1,1,1
"com.android.tools.lint.detector.api.ClassContext.createSignature(String,String,String)",1,8,9
"com.android.tools.lint.detector.api.ClassContext.findLineNumber(AbstractInsnNode)",5,3,5
"com.android.tools.lint.detector.api.ClassContext.findLineNumber(ClassNode)",3,4,4
"com.android.tools.lint.detector.api.ClassContext.findLineNumber(MethodNode)",2,3,3
"com.android.tools.lint.detector.api.ClassContext.getBytecode()",1,1,1
"com.android.tools.lint.detector.api.ClassContext.getClassNode()",1,1,1
"com.android.tools.lint.detector.api.ClassContext.getFirstRealMethod(ClassNode)",5,4,5
"com.android.tools.lint.detector.api.ClassContext.getFqcn(String)",1,1,1
"com.android.tools.lint.detector.api.ClassContext.getInternalName(String)",1,4,4
"com.android.tools.lint.detector.api.ClassContext.getJarFile()",1,1,1
"com.android.tools.lint.detector.api.ClassContext.getLocation(AbstractInsnNode)",1,5,5
"com.android.tools.lint.detector.api.ClassContext.getLocation(ClassNode)",1,3,4
"com.android.tools.lint.detector.api.ClassContext.getLocation(MethodNode,ClassNode)",1,3,3
"com.android.tools.lint.detector.api.ClassContext.getLocationForLine(int,String,String,SearchHints)",3,3,3
"com.android.tools.lint.detector.api.ClassContext.getSourceContents()",1,3,4
"com.android.tools.lint.detector.api.ClassContext.getSourceContents(boolean)",2,2,2
"com.android.tools.lint.detector.api.ClassContext.getSourceFile()",9,11,14
"com.android.tools.lint.detector.api.ClassContext.getTypeString(Type)",1,2,2
"com.android.tools.lint.detector.api.ClassContext.isAnonymousClass(String)",3,3,4
"com.android.tools.lint.detector.api.ClassContext.isFromClassLibrary()",1,1,1
"com.android.tools.lint.detector.api.ClassContext.report(Issue,FieldNode,Location,String,Object)",2,2,3
"com.android.tools.lint.detector.api.ClassContext.report(Issue,Location,String,Object)",9,8,11
"com.android.tools.lint.detector.api.ClassContext.report(Issue,MethodNode,AbstractInsnNode,Location,String,Object)",2,2,3
"com.android.tools.lint.detector.api.Context.Context(LintDriver,Project,Project,File)",1,1,1
"com.android.tools.lint.detector.api.Context.getClient()",1,1,1
"com.android.tools.lint.detector.api.Context.getConfiguration()",1,1,1
"com.android.tools.lint.detector.api.Context.getContents()",1,2,2
"com.android.tools.lint.detector.api.Context.getDriver()",1,1,1
"com.android.tools.lint.detector.api.Context.getFolderVersion()",1,1,1
"com.android.tools.lint.detector.api.Context.getFolderVersion(File)",4,3,4
"com.android.tools.lint.detector.api.Context.getMainProject()",1,1,2
"com.android.tools.lint.detector.api.Context.getPhase()",1,1,1
"com.android.tools.lint.detector.api.Context.getProject()",1,1,1
"com.android.tools.lint.detector.api.Context.getProperty(String)",2,1,2
"com.android.tools.lint.detector.api.Context.getScope()",1,1,1
"com.android.tools.lint.detector.api.Context.getSdkInfo()",1,1,1
"com.android.tools.lint.detector.api.Context.isEnabled(Issue)",1,1,1
"com.android.tools.lint.detector.api.Context.log(Throwable,String,Object...)",1,1,1
"com.android.tools.lint.detector.api.Context.report(Issue,Location,String,Object)",3,5,7
"com.android.tools.lint.detector.api.Context.requestRepeat(Detector,EnumSet<Scope>)",1,1,1
"com.android.tools.lint.detector.api.Context.setProperty(String,Object)",1,3,4
"com.android.tools.lint.detector.api.DefaultPosition.DefaultPosition(int,int,int)",1,1,1
"com.android.tools.lint.detector.api.DefaultPosition.getColumn()",1,1,1
"com.android.tools.lint.detector.api.DefaultPosition.getLine()",1,1,1
"com.android.tools.lint.detector.api.DefaultPosition.getOffset()",1,1,1
"com.android.tools.lint.detector.api.Detector.afterCheckFile(Context)",1,1,1
"com.android.tools.lint.detector.api.Detector.afterCheckLibraryProject(Context)",1,1,1
"com.android.tools.lint.detector.api.Detector.afterCheckProject(Context)",1,1,1
"com.android.tools.lint.detector.api.Detector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.detector.api.Detector.appliesToResourceRefs()",1,1,1
"com.android.tools.lint.detector.api.Detector.beforeCheckFile(Context)",1,1,1
"com.android.tools.lint.detector.api.Detector.beforeCheckLibraryProject(Context)",1,1,1
"com.android.tools.lint.detector.api.Detector.beforeCheckProject(Context)",1,1,1
"com.android.tools.lint.detector.api.Detector.checkCall(ClassContext,ClassNode,MethodNode,MethodInsnNode)",1,1,1
"com.android.tools.lint.detector.api.Detector.checkClass(ClassContext,ClassNode)",1,1,1
"com.android.tools.lint.detector.api.Detector.checkInstruction(ClassContext,ClassNode,MethodNode,AbstractInsnNode)",1,1,1
"com.android.tools.lint.detector.api.Detector.createJavaVisitor(JavaContext)",1,1,1
"com.android.tools.lint.detector.api.Detector.getApplicableAsmNodeTypes()",1,1,1
"com.android.tools.lint.detector.api.Detector.getApplicableAttributes()",1,1,1
"com.android.tools.lint.detector.api.Detector.getApplicableCallNames()",1,1,1
"com.android.tools.lint.detector.api.Detector.getApplicableCallOwners()",1,1,1
"com.android.tools.lint.detector.api.Detector.getApplicableElements()",1,1,1
"com.android.tools.lint.detector.api.Detector.getApplicableMethodNames()",1,1,1
"com.android.tools.lint.detector.api.Detector.getApplicableNodeTypes()",1,1,1
"com.android.tools.lint.detector.api.Detector.getSpeed()",1,1,1
"com.android.tools.lint.detector.api.Detector.run(Context)",1,1,1
"com.android.tools.lint.detector.api.Detector.visitAttribute(XmlContext,Attr)",1,1,1
"com.android.tools.lint.detector.api.Detector.visitDocument(XmlContext,Document)",1,1,1
"com.android.tools.lint.detector.api.Detector.visitElement(XmlContext,Element)",1,1,1
"com.android.tools.lint.detector.api.Detector.visitElementAfter(XmlContext,Element)",1,1,1
"com.android.tools.lint.detector.api.Detector.visitMethod(JavaContext,AstVisitor,MethodInvocation)",1,1,1
"com.android.tools.lint.detector.api.Detector.visitResourceReference(JavaContext,AstVisitor,Node,String,String,boolean)",1,1,1
"com.android.tools.lint.detector.api.Issue.Issue(String,String,String,Category,int,Severity,Class<? extends Detector>,EnumSet<Scope>)",1,1,1
"com.android.tools.lint.detector.api.Issue.addAnalysisScope(EnumSet<Scope>)",1,1,2
"com.android.tools.lint.detector.api.Issue.appendEscapedText(StringBuilder,String,boolean,int,int)",1,8,8
"com.android.tools.lint.detector.api.Issue.compareTo(Issue)",1,1,1
"com.android.tools.lint.detector.api.Issue.convertMarkup(String,boolean)",6,20,27
"com.android.tools.lint.detector.api.Issue.create(String,String,String,Category,int,Severity,Class<? extends Detector>,EnumSet<Scope>)",1,1,1
"com.android.tools.lint.detector.api.Issue.getAnalysisScopes()",1,1,1
"com.android.tools.lint.detector.api.Issue.getCategory()",1,1,1
"com.android.tools.lint.detector.api.Issue.getDefaultSeverity()",1,1,1
"com.android.tools.lint.detector.api.Issue.getDescription()",1,1,1
"com.android.tools.lint.detector.api.Issue.getDetectorClass()",1,1,1
"com.android.tools.lint.detector.api.Issue.getExplanation()",1,1,1
"com.android.tools.lint.detector.api.Issue.getExplanationAsHtml()",1,1,1
"com.android.tools.lint.detector.api.Issue.getExplanationAsSimpleText()",1,1,1
"com.android.tools.lint.detector.api.Issue.getId()",1,1,1
"com.android.tools.lint.detector.api.Issue.getMoreInfo()",1,1,1
"com.android.tools.lint.detector.api.Issue.getPriority()",1,1,1
"com.android.tools.lint.detector.api.Issue.getScope()",1,1,1
"com.android.tools.lint.detector.api.Issue.isAdequate(EnumSet<Scope>)",6,3,7
"com.android.tools.lint.detector.api.Issue.isEnabledByDefault()",1,1,1
"com.android.tools.lint.detector.api.Issue.setAnalysisScopes(List<EnumSet<Scope>>)",1,1,1
"com.android.tools.lint.detector.api.Issue.setEnabledByDefault(boolean)",1,1,1
"com.android.tools.lint.detector.api.Issue.setMoreInfo(String)",1,1,1
"com.android.tools.lint.detector.api.Issue.toString()",1,1,1
"com.android.tools.lint.detector.api.JavaContext.JavaContext(LintDriver,Project,Project,File)",1,1,1
"com.android.tools.lint.detector.api.JavaContext.findSurroundingMethod(Node)",3,2,4
"com.android.tools.lint.detector.api.JavaContext.getLocation(Node)",2,2,2
"com.android.tools.lint.detector.api.JavaContext.report(Issue,Location,String,Object)",2,1,2
"com.android.tools.lint.detector.api.JavaContext.report(Issue,Node,Location,String,Object)",2,2,3
"com.android.tools.lint.detector.api.LayoutDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.detector.api.LayoutDetector.hasPadding(Element)",1,5,5
"com.android.tools.lint.detector.api.LayoutDetector.isFillParent(Element,String)",1,2,2
"com.android.tools.lint.detector.api.LayoutDetector.isHeightFillParent(Element)",1,1,1
"com.android.tools.lint.detector.api.LayoutDetector.isWidthFillParent(Element)",1,1,1
"com.android.tools.lint.detector.api.LintUtils.LintUtils()",1,1,1
"com.android.tools.lint.detector.api.LintUtils.assertionsEnabled()",1,1,1
"com.android.tools.lint.detector.api.LintUtils.editDistance(String,String)",1,4,6
"com.android.tools.lint.detector.api.LintUtils.endsWith(String,String)",1,1,1
"com.android.tools.lint.detector.api.LintUtils.formatList(List<String>,int)",3,4,6
"com.android.tools.lint.detector.api.LintUtils.getBaseName(String)",2,2,2
"com.android.tools.lint.detector.api.LintUtils.getBuildCode(int)",18,2,18
"com.android.tools.lint.detector.api.LintUtils.getChildCount(Node)",1,2,3
"com.android.tools.lint.detector.api.LintUtils.getChildren(Node)",1,3,3
"com.android.tools.lint.detector.api.LintUtils.getCommonParent(File,File)",7,6,7
"com.android.tools.lint.detector.api.LintUtils.getCommonParent(List<File>)",6,5,6
"com.android.tools.lint.detector.api.LintUtils.getEncodedString(LintClient,File)",2,2,2
"com.android.tools.lint.detector.api.LintUtils.getEncodedString(byte[])",5,1,30
"com.android.tools.lint.detector.api.LintUtils.getLayoutName(File)",1,2,2
"com.android.tools.lint.detector.api.LintUtils.getLocaleAndRegion(String)",6,6,15
"com.android.tools.lint.detector.api.LintUtils.getNextInstruction(AbstractInsnNode)",4,3,6
"com.android.tools.lint.detector.api.LintUtils.getNextOpcode(AbstractInsnNode)",2,2,2
"com.android.tools.lint.detector.api.LintUtils.getPrevInstruction(AbstractInsnNode)",4,3,6
"com.android.tools.lint.detector.api.LintUtils.getPrevOpcode(AbstractInsnNode)",2,2,2
"com.android.tools.lint.detector.api.LintUtils.idReferencesMatch(String,String)",4,6,6
"com.android.tools.lint.detector.api.LintUtils.isFileBasedResourceType(ResourceType)",4,1,4
"com.android.tools.lint.detector.api.LintUtils.isImported(Node,String)",5,6,7
"com.android.tools.lint.detector.api.LintUtils.isProjectDir(File)",5,4,6
"com.android.tools.lint.detector.api.LintUtils.isRootElement(Element)",1,1,1
"com.android.tools.lint.detector.api.LintUtils.isStaticInnerClass(ClassNode)",3,3,4
"com.android.tools.lint.detector.api.LintUtils.isXmlFile(File)",1,1,1
"com.android.tools.lint.detector.api.LintUtils.splitPath(String)",4,8,8
"com.android.tools.lint.detector.api.LintUtils.startsWith(String,String,int)",1,1,1
"com.android.tools.lint.detector.api.LintUtils.stripIdPrefix(String)",4,4,4
"com.android.tools.lint.detector.api.Location.DefaultLocationHandle.DefaultLocationHandle(Context,int,int)",1,1,1
"com.android.tools.lint.detector.api.Location.DefaultLocationHandle.getClientData()",1,1,1
"com.android.tools.lint.detector.api.Location.DefaultLocationHandle.resolve()",1,1,1
"com.android.tools.lint.detector.api.Location.DefaultLocationHandle.setClientData(Object)",1,1,1
"com.android.tools.lint.detector.api.Location.Location(File,Position,Position)",1,1,1
"com.android.tools.lint.detector.api.Location.SearchHints.SearchHints(SearchDirection)",1,1,1
"com.android.tools.lint.detector.api.Location.SearchHints.create(SearchDirection)",1,1,1
"com.android.tools.lint.detector.api.Location.SearchHints.isConstructor()",1,1,1
"com.android.tools.lint.detector.api.Location.SearchHints.isJavaSymbol()",1,1,1
"com.android.tools.lint.detector.api.Location.SearchHints.isWholeWord()",1,1,1
"com.android.tools.lint.detector.api.Location.SearchHints.matchConstructor()",1,1,1
"com.android.tools.lint.detector.api.Location.SearchHints.matchJavaSymbol()",1,1,1
"com.android.tools.lint.detector.api.Location.SearchHints.matchWholeWord()",1,1,1
"com.android.tools.lint.detector.api.Location.adjustLine(String,int,int,int)",3,2,3
"com.android.tools.lint.detector.api.Location.countLines(String,int,int)",1,2,3
"com.android.tools.lint.detector.api.Location.create(File)",1,1,1
"com.android.tools.lint.detector.api.Location.create(File,Position,Position)",1,1,1
"com.android.tools.lint.detector.api.Location.create(File,String,int)",1,1,1
"com.android.tools.lint.detector.api.Location.create(File,String,int,String,String,SearchHints)",9,19,22
"com.android.tools.lint.detector.api.Location.create(File,String,int,int)",5,2,10
"com.android.tools.lint.detector.api.Location.findNextMatch(String,int,String,SearchHints)",5,8,9
"com.android.tools.lint.detector.api.Location.findPreviousMatch(String,int,String,SearchHints)",4,4,4
"com.android.tools.lint.detector.api.Location.getClientData()",1,1,1
"com.android.tools.lint.detector.api.Location.getEnd()",1,1,1
"com.android.tools.lint.detector.api.Location.getFile()",1,1,1
"com.android.tools.lint.detector.api.Location.getMessage()",1,1,1
"com.android.tools.lint.detector.api.Location.getSecondary()",1,1,1
"com.android.tools.lint.detector.api.Location.getStart()",1,1,1
"com.android.tools.lint.detector.api.Location.isMatch(String,int,String,SearchHints)",11,12,17
"com.android.tools.lint.detector.api.Location.reverse(Location)",1,2,2
"com.android.tools.lint.detector.api.Location.setClientData(Object)",1,1,1
"com.android.tools.lint.detector.api.Location.setMessage(String)",1,1,1
"com.android.tools.lint.detector.api.Location.setSecondary(Location)",1,1,1
"com.android.tools.lint.detector.api.Location.toString()",1,1,1
"com.android.tools.lint.detector.api.Project.Project(LintClient,File,File)",8,14,17
"com.android.tools.lint.detector.api.Project.addFile(File)",1,1,2
"com.android.tools.lint.detector.api.Project.addLibraryProjects(Collection<Project>)",1,2,2
"com.android.tools.lint.detector.api.Project.create(LintClient,File,File)",1,1,1
"com.android.tools.lint.detector.api.Project.equals(Object)",7,2,7
"com.android.tools.lint.detector.api.Project.extractAospMinSdkVersion()",4,8,8
"com.android.tools.lint.detector.api.Project.findCurrentAospVersion()",3,5,8
"com.android.tools.lint.detector.api.Project.getAllLibraries()",3,2,3
"com.android.tools.lint.detector.api.Project.getAospHostOut()",1,1,1
"com.android.tools.lint.detector.api.Project.getAospJavaClassPath()",1,5,5
"com.android.tools.lint.detector.api.Project.getAospJavaSourcePath()",1,5,5
"com.android.tools.lint.detector.api.Project.getAospProductOut()",1,1,1
"com.android.tools.lint.detector.api.Project.getAospTop()",1,1,1
"com.android.tools.lint.detector.api.Project.getBuildSdk()",1,1,1
"com.android.tools.lint.detector.api.Project.getConfiguration()",1,2,2
"com.android.tools.lint.detector.api.Project.getDir()",1,1,1
"com.android.tools.lint.detector.api.Project.getDirectLibraries()",1,1,1
"com.android.tools.lint.detector.api.Project.getDisplayPath(File)",2,3,4
"com.android.tools.lint.detector.api.Project.getIntermediateDirs()",1,4,4
"com.android.tools.lint.detector.api.Project.getJavaClassFolders()",8,8,8
"com.android.tools.lint.detector.api.Project.getJavaLibraries()",1,2,2
"com.android.tools.lint.detector.api.Project.getJavaSourceFolders()",5,5,5
"com.android.tools.lint.detector.api.Project.getManifestFile()",2,1,2
"com.android.tools.lint.detector.api.Project.getMinSdk()",1,1,1
"com.android.tools.lint.detector.api.Project.getName()",1,2,2
"com.android.tools.lint.detector.api.Project.getPackage()",1,1,1
"com.android.tools.lint.detector.api.Project.getProguardPath()",1,1,1
"com.android.tools.lint.detector.api.Project.getReferenceDir()",1,1,1
"com.android.tools.lint.detector.api.Project.getRelativePath(File)",2,3,4
"com.android.tools.lint.detector.api.Project.getReportIssues()",1,1,1
"com.android.tools.lint.detector.api.Project.getResourceFolder()",1,3,4
"com.android.tools.lint.detector.api.Project.getSdkInfo()",1,2,2
"com.android.tools.lint.detector.api.Project.getSubset()",1,1,1
"com.android.tools.lint.detector.api.Project.getTargetSdk()",1,1,1
"com.android.tools.lint.detector.api.Project.hashCode()",1,2,2
"com.android.tools.lint.detector.api.Project.isAospBuildEnvironment()",1,2,2
"com.android.tools.lint.detector.api.Project.isAospFrameworksProject(File)",4,3,6
"com.android.tools.lint.detector.api.Project.isLibrary()",1,1,1
"com.android.tools.lint.detector.api.Project.isMergingManifests()",1,1,1
"com.android.tools.lint.detector.api.Project.readManifest(Document)",2,7,11
"com.android.tools.lint.detector.api.Project.setMergingManifests(boolean)",1,1,1
"com.android.tools.lint.detector.api.Project.setName(String)",1,1,1
"com.android.tools.lint.detector.api.Project.setReportIssues(boolean)",1,1,1
"com.android.tools.lint.detector.api.Project.toString()",1,1,1
"com.android.tools.lint.detector.api.ResourceXmlDetector.appliesTo(Context,File)",1,1,1
"com.android.tools.lint.detector.api.ResourceXmlDetector.appliesTo(ResourceFolderType)",1,1,1
"com.android.tools.lint.detector.api.ResourceXmlDetector.run(Context)",1,1,1
"com.android.tools.lint.detector.api.Scope.checkSingleFile(EnumSet<Scope>)",2,8,8
"com.android.tools.lint.detector.api.Scope.intersect(EnumSet<Scope>,EnumSet<Scope>)",1,1,1
"com.android.tools.lint.detector.api.Severity.Severity(String)",1,1,1
"com.android.tools.lint.detector.api.Severity.getDescription()",1,1,1
"com.android.tools.lint.detector.api.Speed.Speed(String)",1,1,1
"com.android.tools.lint.detector.api.Speed.getDisplayName()",1,1,1
"com.android.tools.lint.detector.api.XmlContext.XmlContext(LintDriver,Project,Project,File,ResourceFolderType)",1,1,1
"com.android.tools.lint.detector.api.XmlContext.getLocation(Node)",2,2,2
"com.android.tools.lint.detector.api.XmlContext.getLocation(Node,int,int)",2,2,2
"com.android.tools.lint.detector.api.XmlContext.getResourceFolderType()",1,1,1
"com.android.tools.lint.detector.api.XmlContext.report(Issue,Location,String,Object)",2,2,3
"com.android.tools.lint.detector.api.XmlContext.report(Issue,Node,Location,String,Object)",2,2,3
"com.android.util.Pair.Pair(S,T)",1,1,1
"com.android.util.Pair.equals(Object)",10,3,10
"com.android.util.Pair.getFirst()",1,1,1
"com.android.util.Pair.getSecond()",1,1,1
"com.android.util.Pair.hashCode()",1,3,3
"com.android.util.Pair.of(S,T)",1,1,1
"com.android.util.Pair.toString()",1,1,1
"com.android.utils.NullLogger.error(Throwable,String,Object...)",1,1,1
"com.android.utils.NullLogger.getLogger()",1,1,1
"com.android.utils.NullLogger.info(String,Object...)",1,1,1
"com.android.utils.NullLogger.verbose(String,Object...)",1,1,1
"com.android.utils.NullLogger.warning(String,Object...)",1,1,1
"com.android.utils.Pair.Pair(S,T)",1,1,1
"com.android.utils.Pair.equals(Object)",10,3,10
"com.android.utils.Pair.getFirst()",1,1,1
"com.android.utils.Pair.getSecond()",1,1,1
"com.android.utils.Pair.hashCode()",1,3,3
"com.android.utils.Pair.of(S,T)",1,1,1
"com.android.utils.Pair.toString()",1,1,1
"com.android.utils.PositionXmlParser.DefaultPosition.DefaultPosition(int,int,int)",1,1,1
"com.android.utils.PositionXmlParser.DefaultPosition.getColumn()",1,1,1
"com.android.utils.PositionXmlParser.DefaultPosition.getEnd()",1,1,1
"com.android.utils.PositionXmlParser.DefaultPosition.getLine()",1,1,1
"com.android.utils.PositionXmlParser.DefaultPosition.getOffset()",1,1,1
"com.android.utils.PositionXmlParser.DefaultPosition.setEnd(Position)",1,1,1
"com.android.utils.PositionXmlParser.DomBuilder.DomBuilder(String)",1,1,1
"com.android.utils.PositionXmlParser.DomBuilder.characters(char[],int,int)",1,1,1
"com.android.utils.PositionXmlParser.DomBuilder.endElement(String,String,String)",1,2,2
"com.android.utils.PositionXmlParser.DomBuilder.flushText()",1,3,3
"com.android.utils.PositionXmlParser.DomBuilder.getCurrentPosition()",1,3,8
"com.android.utils.PositionXmlParser.DomBuilder.getDocument()",1,1,1
"com.android.utils.PositionXmlParser.DomBuilder.setDocumentLocator(Locator)",1,1,1
"com.android.utils.PositionXmlParser.DomBuilder.startElement(String,String,String,Attributes)",5,8,11
"com.android.utils.PositionXmlParser.createPosition(int,int,int)",1,1,1
"com.android.utils.PositionXmlParser.getPosition(Node)",1,1,1
"com.android.utils.PositionXmlParser.getPosition(Node,int,int)",14,18,29
"com.android.utils.PositionXmlParser.getXmlString(byte[])",8,11,46
"com.android.utils.PositionXmlParser.parse(InputStream)",3,2,3
"com.android.utils.PositionXmlParser.parse(String)",1,1,1
"com.android.utils.PositionXmlParser.parse(String,InputSource,boolean)",2,4,4
"com.android.utils.PositionXmlParser.parse(byte[])",1,1,1
"com.android.utils.SdkUtils.endsWith(CharSequence,CharSequence)",1,1,1
"com.android.utils.SdkUtils.endsWith(CharSequence,int,CharSequence)",4,2,4
"com.android.utils.SdkUtils.endsWithIgnoreCase(String,String)",1,1,1
"com.android.utils.SdkUtils.getLineSeparator()",1,2,2
"com.android.utils.SdkUtils.hasUpperCaseCharacter(String)",3,2,3
"com.android.utils.SdkUtils.startsWith(String,int,String)",1,1,1
"com.android.utils.SdkUtils.startsWithIgnoreCase(String,String)",1,1,1
"com.android.utils.SdkUtils.stripWhitespace(String)",1,3,3
"com.android.utils.SdkUtils.wrap(String,int,String)",1,5,8
"com.android.utils.StdLogger.Level.Level(int)",1,1,1
"com.android.utils.StdLogger.StdLogger(Level)",2,1,2
"com.android.utils.StdLogger.error(Throwable,String,Object...)",1,3,3
"com.android.utils.StdLogger.getLevel()",1,1,1
"com.android.utils.StdLogger.info(String,Object...)",2,1,2
"com.android.utils.StdLogger.printMessage(String,PrintStream)",1,5,5
"com.android.utils.StdLogger.verbose(String,Object...)",2,1,2
"com.android.utils.StdLogger.warning(String,Object...)",2,1,2
"com.android.utils.XmlUtils.append(StringBuilder,Node,int,boolean)",2,24,24
"com.android.utils.XmlUtils.appendXmlAttributeValue(StringBuilder,String)",1,6,6
"com.android.utils.XmlUtils.appendXmlTextValue(StringBuilder,String)",1,4,4
"com.android.utils.XmlUtils.indent(StringBuilder,int)",1,2,2
"com.android.utils.XmlUtils.lookupNamespacePrefix(Node,String)",1,1,2
"com.android.utils.XmlUtils.lookupNamespacePrefix(Node,String,String,boolean)",9,12,19
"com.android.utils.XmlUtils.lookupNamespacePrefix(Node,String,boolean)",1,1,2
"com.android.utils.XmlUtils.toXml(Node,boolean)",1,1,1
"com.android.utils.XmlUtils.toXmlAttributeValue(String)",3,3,6
"com.android.utils.XmlUtils.toXmlTextValue(String)",3,3,4
"com.android.xml.AndroidManifest.combinePackageAndClassName(String,String)",5,3,8
"com.android.xml.AndroidManifest.extractActivityName(String,String)",4,5,7
"com.android.xml.AndroidManifest.getApplicationIcon(IAbstractFile)",1,1,1
"com.android.xml.AndroidManifest.getApplicationLabel(IAbstractFile)",1,1,1
"com.android.xml.AndroidManifest.getDebuggable(IAbstractFile)",1,1,1
"com.android.xml.AndroidManifest.getManifest(IAbstractFolder)",2,1,2
"com.android.xml.AndroidManifest.getMinSdkVersion(IAbstractFile)",1,2,3
"com.android.xml.AndroidManifest.getPackage(IAbstractFile)",1,1,1
"com.android.xml.AndroidManifest.getPackage(IAbstractFolder)",2,2,2
"com.android.xml.AndroidManifest.getTargetSdkVersion(IAbstractFile)",1,2,3
"com.android.xml.AndroidManifest.getVersionCode(IAbstractFile)",1,1,2
"com.android.xml.AndroidManifest.hasVersionCode(IAbstractFile)",3,2,3
"com.android.xml.AndroidXPathFactory.AndroidNamespaceContext.AndroidNamespaceContext(String)",1,1,1
"com.android.xml.AndroidXPathFactory.AndroidNamespaceContext.getDefault()",1,1,1
"com.android.xml.AndroidXPathFactory.AndroidNamespaceContext.getNamespaceURI(String)",3,2,3
"com.android.xml.AndroidXPathFactory.AndroidNamespaceContext.getPrefix(String)",2,1,2
"com.android.xml.AndroidXPathFactory.AndroidNamespaceContext.getPrefixes(String)",2,2,2
"com.android.xml.AndroidXPathFactory.newXPath()",1,1,1
"com.android.xml.AndroidXPathFactory.newXPath(String)",1,1,1
"null.action(RuleAction,List<? extends INode>,String,Boolean)",1,1,1
"null.compare(FileEntry,FileEntry)",2,2,3
"null.compare(ResourceFile,ResourceFile)",1,1,1
"null.needsExtra()",1,1,1
"null.process(Arg,String)",5,8,9

Class,OCavg,WMC
"com.android.SdkConstants","2,80",14
"com.android.annotations.VisibleForTesting.Visibility",n/a,0
"com.android.assetstudiolib.ActionBarIconGenerator","2,00",4
"com.android.assetstudiolib.ActionBarIconGenerator.ActionBarOptions",n/a,0
"com.android.assetstudiolib.ActionBarIconGenerator.Theme",n/a,0
"com.android.assetstudiolib.GraphicGenerator","1,90",19
"com.android.assetstudiolib.GraphicGenerator.Options",n/a,0
"com.android.assetstudiolib.GraphicGenerator.Shape","1,00",1
"com.android.assetstudiolib.GraphicGenerator.Style","1,00",1
"com.android.assetstudiolib.LauncherIconGenerator","4,33",13
"com.android.assetstudiolib.LauncherIconGenerator.LauncherOptions",n/a,0
"com.android.assetstudiolib.MenuIconGenerator","1,00",2
"com.android.assetstudiolib.NotificationIconGenerator","3,25",13
"com.android.assetstudiolib.NotificationIconGenerator.NotificationOptions",n/a,0
"com.android.assetstudiolib.NotificationIconGenerator.Version","1,00",2
"com.android.assetstudiolib.TabIconGenerator","2,60",13
"com.android.assetstudiolib.TabIconGenerator.TabOptions",n/a,0
"com.android.assetstudiolib.TextRenderUtil","5,00",5
"com.android.assetstudiolib.TextRenderUtil.Options",n/a,0
"com.android.assetstudiolib.Util","2,67",32
"com.android.assetstudiolib.Util.Effect",n/a,0
"com.android.assetstudiolib.Util.FillEffect","1,00",2
"com.android.assetstudiolib.Util.ShadowEffect","1,00",1
"com.android.ddmlib.AdbCommandRejectedException","1,00",4
"com.android.ddmlib.AdbHelper","2,95",62
"com.android.ddmlib.AdbHelper.AdbResponse","1,00",1
"com.android.ddmlib.AllocationInfo","1,80",18
"com.android.ddmlib.AllocationInfo.AllocationSorter","3,00",18
"com.android.ddmlib.AllocationInfo.SortMode",n/a,0
"com.android.ddmlib.AndroidDebugBridge","2,52",101
"com.android.ddmlib.BadPacketException","1,00",2
"com.android.ddmlib.CanceledException","1,00",2
"com.android.ddmlib.ChunkHandler","1,90",19
"com.android.ddmlib.Client","1,95",82
"com.android.ddmlib.ClientData","1,04",49
"com.android.ddmlib.ClientData.AllocationTrackingStatus",n/a,0
"com.android.ddmlib.ClientData.DebuggerStatus",n/a,0
"com.android.ddmlib.ClientData.HeapData","1,22",11
"com.android.ddmlib.ClientData.MethodProfilingStatus",n/a,0
"com.android.ddmlib.CollectingOutputReceiver","1,29",9
"com.android.ddmlib.DdmConstants","6,00",6
"com.android.ddmlib.DdmPreferences","1,05",20
"com.android.ddmlib.DebugPortManager","1,00",2
"com.android.ddmlib.Debugger","2,36",33
"com.android.ddmlib.Device","1,49",88
"com.android.ddmlib.Device.BatteryReceiver","2,33",7
"com.android.ddmlib.Device.InstallReceiver","2,00",8
"com.android.ddmlib.DeviceMonitor","3,11",109
"com.android.ddmlib.EmulatorConsole","2,73",71
"com.android.ddmlib.EmulatorConsole.GsmMode","2,25",9
"com.android.ddmlib.EmulatorConsole.GsmStatus",n/a,0
"com.android.ddmlib.EmulatorConsole.NetworkStatus",n/a,0
"com.android.ddmlib.FileListingService","2,44",22
"com.android.ddmlib.FileListingService.FileEntry","1,40",42
"com.android.ddmlib.FileListingService.LsReceiver","4,43",31
"com.android.ddmlib.GetPropReceiver","2,00",8
"com.android.ddmlib.HandleAppName","1,67",10
"com.android.ddmlib.HandleExit","1,00",6
"com.android.ddmlib.HandleHeap","2,42",58
"com.android.ddmlib.HandleHello","1,70",17
"com.android.ddmlib.HandleNativeHeap","2,89",26
"com.android.ddmlib.HandleProfiling","1,86",26
"com.android.ddmlib.HandleTest","1,17",7
"com.android.ddmlib.HandleThread","2,24",38
"com.android.ddmlib.HandleWait","1,17",7
"com.android.ddmlib.HeapSegment","2,38",31
"com.android.ddmlib.HeapSegment.HeapSegmentElement","1,40",14
"com.android.ddmlib.IDevice.DeviceState","2,00",4
"com.android.ddmlib.IDevice.DeviceUnixSocketNamespace","1,00",2
"com.android.ddmlib.InstallException","1,00",3
"com.android.ddmlib.JdwpPacket","1,53",26
"com.android.ddmlib.Log","1,73",26
"com.android.ddmlib.Log.Config",n/a,0
"com.android.ddmlib.Log.LogLevel","1,71",12
"com.android.ddmlib.MonitorThread","3,00",75
"com.android.ddmlib.MultiLineReceiver","3,00",12
"com.android.ddmlib.NativeAllocationInfo","2,33",35
"com.android.ddmlib.NativeLibraryMapInfo","1,00",5
"com.android.ddmlib.NativeStackCallInfo","1,14",8
"com.android.ddmlib.NullOutputReceiver","1,00",4
"com.android.ddmlib.RawImage","2,11",19
"com.android.ddmlib.ShellCommandUnresponsiveException",n/a,0
"com.android.ddmlib.SyncException","1,00",5
"com.android.ddmlib.SyncException.SyncError","1,00",2
"com.android.ddmlib.SyncService","3,35",77
"com.android.ddmlib.SyncService.NullSyncProgresMonitor","1,00",5
"com.android.ddmlib.ThreadInfo","1,00",13
"com.android.ddmlib.TimeoutException",n/a,0
"com.android.ddmlib.log.EventContainer","4,21",59
"com.android.ddmlib.log.EventContainer.CompareMethod","1,00",3
"com.android.ddmlib.log.EventContainer.EventValueType","2,67",16
"com.android.ddmlib.log.EventLogParser","4,62",74
"com.android.ddmlib.log.EventValueDescription","2,12",17
"com.android.ddmlib.log.EventValueDescription.ValueType","1,60",8
"com.android.ddmlib.log.GcEventContainer","4,23",55
"com.android.ddmlib.log.InvalidTypeException","1,00",4
"com.android.ddmlib.log.InvalidValueTypeException","1,00",4
"com.android.ddmlib.log.LogReceiver","2,60",13
"com.android.ddmlib.log.LogReceiver.LogEntry",n/a,0
"com.android.ddmlib.testrunner.IRemoteAndroidTestRunner.TestSize","1,67",5
"com.android.ddmlib.testrunner.ITestRunListener.TestFailure",n/a,0
"com.android.ddmlib.testrunner.InstrumentationResultParser","3,30",66
"com.android.ddmlib.testrunner.InstrumentationResultParser.Prefixes",n/a,0
"com.android.ddmlib.testrunner.InstrumentationResultParser.StatusCodes",n/a,0
"com.android.ddmlib.testrunner.InstrumentationResultParser.StatusKeys",n/a,0
"com.android.ddmlib.testrunner.InstrumentationResultParser.TestResult","2,50",5
"com.android.ddmlib.testrunner.RemoteAndroidTestRunner","1,36",30
"com.android.ddmlib.testrunner.TestIdentifier","3,00",18
"com.android.ddmlib.testrunner.TestResult","1,23",16
"com.android.ddmlib.testrunner.TestResult.TestStatus",n/a,0
"com.android.ddmlib.testrunner.TestRunResult","1,64",41
"com.android.ddmlib.testrunner.XmlTestRunListener","1,33",20
"com.android.ddmlib.utils.ArrayHelper","1,00",4
"com.android.draw9patch.Application","1,33",4
"com.android.draw9patch.graphics.GraphicsUtilities","1,75",14
"com.android.draw9patch.ui.GradientPanel","1,00",2
"com.android.draw9patch.ui.ImageEditorPanel","1,73",26
"com.android.draw9patch.ui.ImageEditorPanel.ImageViewer","3,00",84
"com.android.draw9patch.ui.ImageEditorPanel.Pair","1,00",2
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer","4,00",20
"com.android.draw9patch.ui.ImageEditorPanel.StretchesViewer.StretchView","3,67",11
"com.android.draw9patch.ui.ImageTransferHandler","3,50",14
"com.android.draw9patch.ui.MainFrame","1,62",13
"com.android.draw9patch.ui.MainFrame.OpenTask","1,00",3
"com.android.draw9patch.ui.MainFrame.SaveTask","1,00",2
"com.android.draw9patch.ui.OpenFilePanel","1,00",3
"com.android.draw9patch.ui.PngFileFilter","1,00",2
"com.android.draw9patch.ui.action.BackgroundAction","2,00",2
"com.android.draw9patch.ui.action.ExitAction","1,00",2
"com.android.draw9patch.ui.action.OpenAction","1,00",2
"com.android.draw9patch.ui.action.SaveAction","1,00",2
"com.android.dvlib.DeviceSchema","1,00",3
"com.android.dvlib.DeviceSchema.ValidationHandler","2,25",18
"com.android.ide.common.api.AbstractViewRule","1,00",19
"com.android.ide.common.api.DrawingStyle",n/a,0
"com.android.ide.common.api.DropFeedback","1,00",1
"com.android.ide.common.api.IAttributeInfo.Format","9,50",19
"com.android.ide.common.api.IGraphics.LineStyle",n/a,0
"com.android.ide.common.api.IViewMetadata.FillPreference","1,00",2
"com.android.ide.common.api.InsertType","1,00",1
"com.android.ide.common.api.MarginType",n/a,0
"com.android.ide.common.api.Margins","1,00",2
"com.android.ide.common.api.Point","1,12",9
"com.android.ide.common.api.Rect","1,42",37
"com.android.ide.common.api.ResizePolicy","1,38",18
"com.android.ide.common.api.RuleAction","1,37",26
"com.android.ide.common.api.RuleAction.Choices","1,00",7
"com.android.ide.common.api.RuleAction.DelayedChoices","1,20",6
"com.android.ide.common.api.RuleAction.NestedAction","1,00",2
"com.android.ide.common.api.RuleAction.Separator","1,00",1
"com.android.ide.common.api.RuleAction.Toggle","1,00",4
"com.android.ide.common.api.Segment","1,50",3
"com.android.ide.common.api.SegmentType","3,75",15
"com.android.ide.common.rendering.HardwareConfigHelper","2,40",12
"com.android.ide.common.rendering.LayoutLibrary","2,93",85
"com.android.ide.common.rendering.StaticRenderSession","1,00",4
"com.android.ide.common.rendering.api.AdapterBinding","1,00",12
"com.android.ide.common.rendering.api.AttrResourceValue","1,33",4
"com.android.ide.common.rendering.api.Bridge","1,00",10
"com.android.ide.common.rendering.api.Capability",n/a,0
"com.android.ide.common.rendering.api.DataBindingItem","1,20",12
"com.android.ide.common.rendering.api.DeclareStyleableResourceValue","1,75",7
"com.android.ide.common.rendering.api.DensityBasedResourceValue","2,17",13
"com.android.ide.common.rendering.api.DrawableParams","1,00",3
"com.android.ide.common.rendering.api.HardwareConfig","1,00",9
"com.android.ide.common.rendering.api.IProjectCallback.ViewAttribute","1,00",2
"com.android.ide.common.rendering.api.LayoutLog","1,00",4
"com.android.ide.common.rendering.api.MergeCookie","1,00",2
"com.android.ide.common.rendering.api.RenderParams","1,00",30
"com.android.ide.common.rendering.api.RenderResources","1,14",16
"com.android.ide.common.rendering.api.RenderResources.FrameworkResourceIdProvider","1,00",1
"com.android.ide.common.rendering.api.RenderSession","1,00",14
"com.android.ide.common.rendering.api.ResourceReference","2,29",16
"com.android.ide.common.rendering.api.ResourceValue","2,10",21
"com.android.ide.common.rendering.api.Result","1,00",9
"com.android.ide.common.rendering.api.Result.Status","1,50",6
"com.android.ide.common.rendering.api.SessionParams","1,30",13
"com.android.ide.common.rendering.api.SessionParams.RenderingMode","1,00",3
"com.android.ide.common.rendering.api.StyleResourceValue","1,12",9
"com.android.ide.common.rendering.api.ViewInfo","1,06",19
"com.android.ide.common.rendering.legacy.LegacyCallback","1,33",4
"com.android.ide.common.resources.FrameworkResourceItem","1,00",3
"com.android.ide.common.resources.FrameworkResources","6,20",31
"com.android.ide.common.resources.IdGeneratingResourceFile","1,62",21
"com.android.ide.common.resources.IdResourceParser","4,00",12
"com.android.ide.common.resources.InlineResourceItem","1,20",6
"com.android.ide.common.resources.IntArrayWrapper","1,50",6
"com.android.ide.common.resources.MultiResourceFile","1,91",21
"com.android.ide.common.resources.ResourceDeltaKind",n/a,0
"com.android.ide.common.resources.ResourceFile","1,00",7
"com.android.ide.common.resources.ResourceFolder","3,38",54
"com.android.ide.common.resources.ResourceItem","1,56",28
"com.android.ide.common.resources.ResourceRepository","4,65",144
"com.android.ide.common.resources.ResourceResolver","3,29",79
"com.android.ide.common.resources.ScanningContext","1,14",8
"com.android.ide.common.resources.SingleResourceFile","1,33",12
"com.android.ide.common.resources.ValidatingResourceParser","4,33",13
"com.android.ide.common.resources.ValueResourceParser","8,17",49
"com.android.ide.common.resources.configuration.CountryCodeQualifier","1,31",21
"com.android.ide.common.resources.configuration.DensityQualifier","1,70",17
"com.android.ide.common.resources.configuration.DeviceConfigHelper","1,67",5
"com.android.ide.common.resources.configuration.EnumBasedResourceQualifier","1,71",12
"com.android.ide.common.resources.configuration.FolderConfiguration","2,49",169
"com.android.ide.common.resources.configuration.KeyboardStateQualifier","1,60",16
"com.android.ide.common.resources.configuration.LanguageQualifier","1,62",26
"com.android.ide.common.resources.configuration.LayoutDirectionQualifier","1,12",9
"com.android.ide.common.resources.configuration.NavigationMethodQualifier","1,12",9
"com.android.ide.common.resources.configuration.NavigationStateQualifier","1,12",9
"com.android.ide.common.resources.configuration.NetworkCodeQualifier","1,31",21
"com.android.ide.common.resources.configuration.NightModeQualifier","1,12",9
"com.android.ide.common.resources.configuration.RegionQualifier","1,62",26
"com.android.ide.common.resources.configuration.ResourceQualifier","1,00",5
"com.android.ide.common.resources.configuration.ScreenDimensionQualifier","1,35",23
"com.android.ide.common.resources.configuration.ScreenHeightQualifier","1,71",29
"com.android.ide.common.resources.configuration.ScreenOrientationQualifier","1,12",9
"com.android.ide.common.resources.configuration.ScreenRatioQualifier","1,12",9
"com.android.ide.common.resources.configuration.ScreenSizeQualifier","1,12",9
"com.android.ide.common.resources.configuration.ScreenWidthQualifier","1,71",29
"com.android.ide.common.resources.configuration.SmallestScreenWidthQualifier","1,71",29
"com.android.ide.common.resources.configuration.TextInputMethodQualifier","1,12",9
"com.android.ide.common.resources.configuration.TouchScreenQualifier","1,12",9
"com.android.ide.common.resources.configuration.UiModeQualifier","1,60",16
"com.android.ide.common.resources.configuration.VersionQualifier","1,56",28
"com.android.ide.common.sdk.LoadStatus",n/a,0
"com.android.ide.common.xml.AndroidManifestParser","2,00",8
"com.android.ide.common.xml.AndroidManifestParser.ManifestHandler","5,14",72
"com.android.ide.common.xml.ManifestData","1,53",29
"com.android.ide.common.xml.ManifestData.Activity","1,11",10
"com.android.ide.common.xml.ManifestData.Instrumentation","1,00",3
"com.android.ide.common.xml.ManifestData.SupportsScreens","2,22",51
"com.android.ide.common.xml.ManifestData.UsesConfiguration","1,00",5
"com.android.ide.common.xml.ManifestData.UsesFeature","1,00",3
"com.android.ide.common.xml.ManifestData.UsesLibrary","1,00",2
"com.android.io.FileWrapper","1,23",16
"com.android.io.FolderWrapper","1,64",23
"com.android.io.IAbstractFile.PreferredWriteMode",n/a,0
"com.android.io.StreamException","1,00",4
"com.android.io.StreamException.Error",n/a,0
"com.android.layoutlib.api.IDensityBasedResourceValue.Density","1,67",5
"com.android.manifmerger.ArgvParser","1,20",6
"com.android.manifmerger.IMergerLog.FileAndLine","2,00",8
"com.android.manifmerger.IMergerLog.Severity",n/a,0
"com.android.manifmerger.Main","1,50",6
"com.android.manifmerger.ManifestMerger","6,37",172
"com.android.manifmerger.MergerLog","2,50",15
"com.android.manifmerger.MergerXmlUtils","4,96",119
"com.android.ninepatch.GraphicsUtilities","1,67",15
"com.android.ninepatch.NinePatch","1,62",21
"com.android.ninepatch.NinePatchChunk","4,42",53
"com.android.ninepatch.NinePatchChunk.DrawingData",n/a,0
"com.android.ninepatch.NinePatchChunk.Pair","1,00",2
"com.android.prefs.AndroidLocation","4,00",12
"com.android.prefs.AndroidLocation.AndroidLocationException","1,00",1
"com.android.resources.Density","1,69",22
"com.android.resources.FolderTypeRelationship","3,20",16
"com.android.resources.Keyboard","1,67",15
"com.android.resources.KeyboardState","1,67",15
"com.android.resources.LayoutDirection","1,67",15
"com.android.resources.Navigation","1,67",15
"com.android.resources.NavigationState","1,67",15
"com.android.resources.NightMode","1,67",15
"com.android.resources.ResourceConstants",n/a,0
"com.android.resources.ResourceFolderType","1,50",6
"com.android.resources.ResourceType","2,00",12
"com.android.resources.ScreenOrientation","1,67",15
"com.android.resources.ScreenRatio","1,67",15
"com.android.resources.ScreenSize","1,67",15
"com.android.resources.TouchScreen","1,67",15
"com.android.resources.UiMode","1,67",15
"com.android.sdklib.AddOnTarget","1,77",62
"com.android.sdklib.AddOnTarget.OptionalLibrary","1,00",5
"com.android.sdklib.AndroidVersion","2,06",35
"com.android.sdklib.AndroidVersion.AndroidVersionException","1,00",1
"com.android.sdklib.ISystemImage.LocationType",n/a,0
"com.android.sdklib.PlatformTarget","1,46",51
"com.android.sdklib.SdkManager","5,81",151
"com.android.sdklib.SdkManager.DirInfo","3,50",14
"com.android.sdklib.SdkManager.LayoutlibVersion","1,50",6
"com.android.sdklib.SystemImage","1,75",14
"com.android.sdklib.build.ApkBuilder","3,04",85
"com.android.sdklib.build.ApkBuilder.FileEntry","1,00",1
"com.android.sdklib.build.ApkBuilder.JarStatusImpl","1,00",3
"com.android.sdklib.build.ApkBuilder.JavaAndNativeResourceFilter","3,00",12
"com.android.sdklib.build.ApkBuilder.NullZipFilter","1,50",3
"com.android.sdklib.build.ApkBuilder.SigningInfo","2,00",2
"com.android.sdklib.build.ApkBuilderMain","6,60",33
"com.android.sdklib.build.ApkCreationException","1,00",3
"com.android.sdklib.build.DuplicateFileException","1,00",5
"com.android.sdklib.build.JarListSanitizer","3,90",39
"com.android.sdklib.build.JarListSanitizer.DifferentLibException","1,00",2
"com.android.sdklib.build.JarListSanitizer.JarEntity","1,25",10
"com.android.sdklib.build.JarListSanitizer.Sha1Exception","1,00",2
"com.android.sdklib.build.SealedApkException","1,00",3
"com.android.sdklib.devices.Abi","1,67",5
"com.android.sdklib.devices.BluetoothProfile","1,67",5
"com.android.sdklib.devices.ButtonType","1,50",6
"com.android.sdklib.devices.Camera","1,36",15
"com.android.sdklib.devices.CameraLocation","1,67",5
"com.android.sdklib.devices.Device","1,62",21
"com.android.sdklib.devices.Device.Builder","1,92",23
"com.android.sdklib.devices.DeviceManager","3,09",68
"com.android.sdklib.devices.DeviceManager.DeviceStatus",n/a,0
"com.android.sdklib.devices.DeviceParser","1,00",3
"com.android.sdklib.devices.DeviceParser.DeviceHandler","8,45",93
"com.android.sdklib.devices.DeviceWriter","3,25",26
"com.android.sdklib.devices.Hardware","1,32",58
"com.android.sdklib.devices.Meta","2,33",35
"com.android.sdklib.devices.Multitouch","1,67",5
"com.android.sdklib.devices.Network","1,67",5
"com.android.sdklib.devices.PowerType","1,67",5
"com.android.sdklib.devices.Screen","1,08",27
"com.android.sdklib.devices.ScreenType","1,67",5
"com.android.sdklib.devices.Sensor","1,67",5
"com.android.sdklib.devices.Software","1,42",27
"com.android.sdklib.devices.State","1,28",23
"com.android.sdklib.devices.Storage","1,62",13
"com.android.sdklib.devices.Storage.Unit","1,50",6
"com.android.sdklib.internal.avd.AvdInfo","2,00",42
"com.android.sdklib.internal.avd.AvdInfo.AvdStatus",n/a,0
"com.android.sdklib.internal.avd.AvdManager","5,08",193
"com.android.sdklib.internal.avd.AvdManager.AvdConflict",n/a,0
"com.android.sdklib.internal.avd.AvdManager.InvalidTargetPathException","1,00",1
"com.android.sdklib.internal.avd.HardwareProperties","10,00",20
"com.android.sdklib.internal.avd.HardwareProperties.HardwareProperty","1,00",8
"com.android.sdklib.internal.avd.HardwareProperties.HardwarePropertyType","1,50",6
"com.android.sdklib.internal.build.BuildConfigGenerator","2,00",14
"com.android.sdklib.internal.build.DebugKeyProvider","2,33",14
"com.android.sdklib.internal.build.DebugKeyProvider.KeytoolException","1,00",4
"com.android.sdklib.internal.build.KeystoreHelper","5,00",15
"com.android.sdklib.internal.build.SignedJarBuilder","2,75",22
"com.android.sdklib.internal.build.SignedJarBuilder.IZipEntryFilter.ZipAbortException","1,00",4
"com.android.sdklib.internal.build.SignedJarBuilder.SignatureOutputStream","1,00",4
"com.android.sdklib.internal.build.SymbolLoader","1,33",4
"com.android.sdklib.internal.build.SymbolLoader.SymbolEntry","1,00",4
"com.android.sdklib.internal.build.SymbolWriter","3,00",6
"com.android.sdklib.internal.project.ProjectCreator","6,39",115
"com.android.sdklib.internal.project.ProjectCreator.OutputLevel",n/a,0
"com.android.sdklib.internal.project.ProjectCreator.ProjectCreateException","1,33",4
"com.android.sdklib.internal.project.ProjectProperties","1,75",35
"com.android.sdklib.internal.project.ProjectProperties.PropertyType","2,00",12
"com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy","4,00",28
"com.android.sdklib.internal.repository.AdbWrapper","2,00",10
"com.android.sdklib.internal.repository.AddonsListFetcher","5,67",68
"com.android.sdklib.internal.repository.AddonsListFetcher.Site","1,00",5
"com.android.sdklib.internal.repository.AddonsListFetcher.SiteType",n/a,0
"com.android.sdklib.internal.repository.CanceledByUserException","1,00",1
"com.android.sdklib.internal.repository.DownloadCache","5,25",84
"com.android.sdklib.internal.repository.DownloadCache.Strategy",n/a,0
"com.android.sdklib.internal.repository.LocalSdkParser","5,00",75
"com.android.sdklib.internal.repository.NullTaskMonitor","1,00",17
"com.android.sdklib.internal.repository.SdkStats","4,50",63
"com.android.sdklib.internal.repository.SdkStats.PlatformStat","1,00",4
"com.android.sdklib.internal.repository.SdkStats.PlatformStatBase","1,00",6
"com.android.sdklib.internal.repository.UrlOpener","7,50",45
"com.android.sdklib.internal.repository.UserCredentials","1,00",5
"com.android.sdklib.internal.repository.archives.Archive","2,87",66
"com.android.sdklib.internal.repository.archives.Archive.Arch","1,80",9
"com.android.sdklib.internal.repository.archives.Archive.ChecksumType","1,00",2
"com.android.sdklib.internal.repository.archives.Archive.Os","1,80",9
"com.android.sdklib.internal.repository.archives.ArchiveInstaller","6,68",127
"com.android.sdklib.internal.repository.archives.ArchiveReplacement","2,00",12
"com.android.sdklib.internal.repository.packages.AddonPackage","2,93",79
"com.android.sdklib.internal.repository.packages.AddonPackage.Lib","3,20",16
"com.android.sdklib.internal.repository.packages.BrokenPackage","1,25",15
"com.android.sdklib.internal.repository.packages.DocPackage","2,57",36
"com.android.sdklib.internal.repository.packages.ExtraPackage","3,88",101
"com.android.sdklib.internal.repository.packages.FullRevision","2,53",38
"com.android.sdklib.internal.repository.packages.FullRevisionPackage","2,86",20
"com.android.sdklib.internal.repository.packages.LayoutlibVersionMixin","2,50",15
"com.android.sdklib.internal.repository.packages.MajorRevision","1,33",4
"com.android.sdklib.internal.repository.packages.MajorRevisionPackage","2,00",10
"com.android.sdklib.internal.repository.packages.MinToolsPackage","2,50",15
"com.android.sdklib.internal.repository.packages.Package","2,90",84
"com.android.sdklib.internal.repository.packages.Package.UpdateInfo",n/a,0
"com.android.sdklib.internal.repository.packages.PackageParserUtils","2,57",18
"com.android.sdklib.internal.repository.packages.PlatformPackage","2,82",48
"com.android.sdklib.internal.repository.packages.PlatformToolPackage","2,36",26
"com.android.sdklib.internal.repository.packages.SamplePackage","2,36",52
"com.android.sdklib.internal.repository.packages.SourcePackage","2,67",40
"com.android.sdklib.internal.repository.packages.SystemImagePackage","2,44",44
"com.android.sdklib.internal.repository.packages.ToolPackage","2,59",44
"com.android.sdklib.internal.repository.sources.SdkAddonSource","1,00",11
"com.android.sdklib.internal.repository.sources.SdkRepoSource","4,20",63
"com.android.sdklib.internal.repository.sources.SdkSource","3,90",121
"com.android.sdklib.internal.repository.sources.SdkSourceCategory","1,00",5
"com.android.sdklib.internal.repository.sources.SdkSourceProperties","2,30",23
"com.android.sdklib.internal.repository.sources.SdkSources","3,19",51
"com.android.sdklib.internal.repository.sources.SdkSysImgSource","1,00",11
"com.android.sdklib.io.FileOp","2,22",40
"com.android.sdklib.io.NonClosingInputStream","1,75",7
"com.android.sdklib.io.NonClosingInputStream.CloseBehavior",n/a,0
"com.android.sdklib.repository.PkgProps",n/a,0
"com.android.sdklib.repository.RepoConstants","2,00",2
"com.android.sdklib.repository.SdkAddonConstants","1,00",2
"com.android.sdklib.repository.SdkAddonsListConstants","1,00",3
"com.android.sdklib.repository.SdkRepoConstants","1,00",2
"com.android.sdklib.repository.SdkStatsConstants","1,00",2
"com.android.sdklib.repository.SdkSysImgConstants","1,00",2
"com.android.sdklib.util.ArrayUtils","2,00",24
"com.android.sdklib.util.CommandLineParser","5,42",103
"com.android.sdklib.util.CommandLineParser.Accept",n/a,0
"com.android.sdklib.util.CommandLineParser.Arg","1,08",14
"com.android.sdklib.util.CommandLineParser.Mode","1,80",18
"com.android.sdklib.util.FormatUtils","4,00",4
"com.android.sdklib.util.GrabProcessOutput","3,67",11
"com.android.sdklib.util.GrabProcessOutput.Wait",n/a,0
"com.android.sdklib.util.LineUtil","7,50",15
"com.android.sdklib.util.SparseArray","1,87",58
"com.android.sdklib.util.SparseIntArray","1,87",28
"com.android.sdkstats.DdmsPreferenceStore","1,57",22
"com.android.sdkstats.SdkStatsPermissionDialog","1,50",12
"com.android.sdkstats.SdkStatsService","3,00",66
"com.android.tools.lint.HtmlReporter","5,56",100
"com.android.tools.lint.LintCliXmlParser","1,83",11
"com.android.tools.lint.LintCliXmlParser.LocationHandle","1,25",5
"com.android.tools.lint.LintCliXmlParser.OffsetPosition","1,00",7
"com.android.tools.lint.LombokParser","1,75",7
"com.android.tools.lint.LombokParser.LocationHandle","1,00",4
"com.android.tools.lint.Main","5,62",219
"com.android.tools.lint.Main.CliConfiguration","2,60",13
"com.android.tools.lint.Main.ProgressPrinter","10,00",10
"com.android.tools.lint.MultiProjectHtmlReporter","7,33",22
"com.android.tools.lint.MultiProjectHtmlReporter.ProjectEntry","2,00",4
"com.android.tools.lint.Reporter","2,23",29
"com.android.tools.lint.TextReporter","11,50",23
"com.android.tools.lint.Warning","4,50",9
"com.android.tools.lint.XmlReporter","6,25",25
"com.android.tools.lint.checks.AccessibilityDetector","1,67",10
"com.android.tools.lint.checks.AlwaysShowActionDetector","2,70",27
"com.android.tools.lint.checks.AlwaysShowActionDetector.FieldAccessChecker","3,00",6
"com.android.tools.lint.checks.AnnotationDetector","1,00",5
"com.android.tools.lint.checks.AnnotationDetector.AnnotationChecker","6,67",20
"com.android.tools.lint.checks.Api","1,25",5
"com.android.tools.lint.checks.ApiClass","3,62",58
"com.android.tools.lint.checks.ApiDetector","8,00",136
"com.android.tools.lint.checks.ApiLookup","6,11",110
"com.android.tools.lint.checks.ApiParser","2,80",14
"com.android.tools.lint.checks.ArraySizeDetector","4,83",29
"com.android.tools.lint.checks.BuiltinIssueRegistry","2,75",22
"com.android.tools.lint.checks.ButtonDetector","5,08",122
"com.android.tools.lint.checks.ChildCountDetector","2,00",10
"com.android.tools.lint.checks.ColorUsageDetector","1,80",9
"com.android.tools.lint.checks.CommentDetector","3,50",21
"com.android.tools.lint.checks.CommentDetector.CommentChecker","1,00",2
"com.android.tools.lint.checks.ControlFlowGraph","2,09",23
"com.android.tools.lint.checks.ControlFlowGraph.Node","4,50",18
"com.android.tools.lint.checks.CutPasteDetector","3,67",22
"com.android.tools.lint.checks.CutPasteDetector.ReachableVisitor","2,00",10
"com.android.tools.lint.checks.DeprecationDetector","2,17",13
"com.android.tools.lint.checks.DetectMissingPrefix","2,17",13
"com.android.tools.lint.checks.DosLineEndingDetector","4,00",12
"com.android.tools.lint.checks.DuplicateIdDetector","4,17",50
"com.android.tools.lint.checks.DuplicateIdDetector.IncludeGraph","7,67",46
"com.android.tools.lint.checks.DuplicateIdDetector.Layout","1,22",11
"com.android.tools.lint.checks.DuplicateIdDetector.Occurrence","1,67",5
"com.android.tools.lint.checks.DuplicateResourceDetector","2,67",16
"com.android.tools.lint.checks.ExtraTextDetector","3,40",17
"com.android.tools.lint.checks.FieldGetterDetector","5,17",31
"com.android.tools.lint.checks.FieldGetterDetector.Entry","1,00",1
"com.android.tools.lint.checks.FragmentDetector","5,00",15
"com.android.tools.lint.checks.GridLayoutDetector","2,40",12
"com.android.tools.lint.checks.HandlerDetector","1,67",5
"com.android.tools.lint.checks.HardcodedDebugModeDetector","1,20",6
"com.android.tools.lint.checks.HardcodedValuesDetector","1,40",7
"com.android.tools.lint.checks.IconDetector","7,21",274
"com.android.tools.lint.checks.IconDetector.MenuFinder","8,00",8
"com.android.tools.lint.checks.IconDetector.NotificationFinder","7,50",15
"com.android.tools.lint.checks.IconDetector.SetIconFinder","3,00",3
"com.android.tools.lint.checks.InefficientWeightDetector","7,00",35
"com.android.tools.lint.checks.InvalidPackageDetector","4,22",38
"com.android.tools.lint.checks.InvalidPackageDetector.Candidate","1,00",1
"com.android.tools.lint.checks.JavaPerformanceDetector","1,00",5
"com.android.tools.lint.checks.JavaPerformanceDetector.AssignmentTracker","2,00",4
"com.android.tools.lint.checks.JavaPerformanceDetector.PerformanceVisitor","4,93",69
"com.android.tools.lint.checks.LabelForDetector","2,71",19
"com.android.tools.lint.checks.LocaleDetector","3,00",18
"com.android.tools.lint.checks.LocaleDetector.StringValue","1,00",3
"com.android.tools.lint.checks.ManifestOrderDetector","5,38",43
"com.android.tools.lint.checks.MathDetector","1,25",5
"com.android.tools.lint.checks.MergeRootFrameLayoutDetector","2,56",23
"com.android.tools.lint.checks.MissingClassDetector","5,33",32
"com.android.tools.lint.checks.MissingIdDetector","1,25",5
"com.android.tools.lint.checks.NamespaceDetector","6,00",30
"com.android.tools.lint.checks.NestedScrollingWidgetDetector","2,12",17
"com.android.tools.lint.checks.NonInternationalizedSmsDetector","2,00",8
"com.android.tools.lint.checks.ObsoleteLayoutParamsDetector","5,00",40
"com.android.tools.lint.checks.OnClickDetector","4,57",32
"com.android.tools.lint.checks.OverdrawDetector","4,00",72
"com.android.tools.lint.checks.OverdrawDetector.OverdrawVisitor","4,67",14
"com.android.tools.lint.checks.OverrideDetector","8,75",35
"com.android.tools.lint.checks.PrivateKeyDetector","2,33",14
"com.android.tools.lint.checks.PrivateResourceDetector","1,25",5
"com.android.tools.lint.checks.ProguardDetector","4,67",14
"com.android.tools.lint.checks.PxUsageDetector","4,56",41
"com.android.tools.lint.checks.RecycleDetector","5,67",34
"com.android.tools.lint.checks.RecycleDetector.RecycleTracker","2,85",37
"com.android.tools.lint.checks.RecycleDetector.ResourceAnalyzer","1,00",4
"com.android.tools.lint.checks.RegistrationDetector","3,44",31
"com.android.tools.lint.checks.RequiredAttributeDetector","5,30",106
"com.android.tools.lint.checks.ScrollViewChildDetector","2,00",8
"com.android.tools.lint.checks.SdCardDetector","1,00",5
"com.android.tools.lint.checks.SdCardDetector.StringChecker","3,00",6
"com.android.tools.lint.checks.SecureRandomDetector","3,40",17
"com.android.tools.lint.checks.SecurityDetector","2,94",50
"com.android.tools.lint.checks.SecurityDetector.IdentifierVisitor","2,00",4
"com.android.tools.lint.checks.SetJavaScriptEnabledDetector","1,33",4
"com.android.tools.lint.checks.SharedPrefsDetector","3,29",23
"com.android.tools.lint.checks.SharedPrefsDetector.CommitFinder","2,00",8
"com.android.tools.lint.checks.StateListDetector","3,25",13
"com.android.tools.lint.checks.StringFormatDetector","5,87",135
"com.android.tools.lint.checks.StringFormatDetector.StringTracker","3,64",40
"com.android.tools.lint.checks.StyleCycleDetector","1,60",8
"com.android.tools.lint.checks.SystemPermissionsDetector","1,40",7
"com.android.tools.lint.checks.TextFieldDetector","4,67",42
"com.android.tools.lint.checks.TextViewDetector","5,00",20
"com.android.tools.lint.checks.TitleDetector","1,60",8
"com.android.tools.lint.checks.ToastDetector","2,50",10
"com.android.tools.lint.checks.ToastDetector.ShowFinder","1,75",7
"com.android.tools.lint.checks.TooManyViewsDetector","2,00",12
"com.android.tools.lint.checks.TranslationDetector","7,17",86
"com.android.tools.lint.checks.TypoDetector","4,92",64
"com.android.tools.lint.checks.TypoLookup","5,94",107
"com.android.tools.lint.checks.TypographyDetector","7,38",59
"com.android.tools.lint.checks.TypographyDetector.ReplaceEdit","1,00",1
"com.android.tools.lint.checks.UnusedResourceDetector","4,47",85
"com.android.tools.lint.checks.UnusedResourceDetector.UnusedResourceVisitor","12,00",12
"com.android.tools.lint.checks.UseCompoundDrawableDetector","2,25",9
"com.android.tools.lint.checks.UselessViewDetector","3,00",18
"com.android.tools.lint.checks.Utf8Detector","3,33",10
"com.android.tools.lint.checks.ViewConstructorDetector","2,60",13
"com.android.tools.lint.checks.ViewTagDetector","3,60",18
"com.android.tools.lint.checks.ViewTypeDetector","3,75",30
"com.android.tools.lint.checks.WakelockDetector","8,00",48
"com.android.tools.lint.checks.WakelockDetector.MyGraph","11,00",11
"com.android.tools.lint.checks.WrongIdDetector","3,69",48
"com.android.tools.lint.checks.WrongImportDetector","1,00",4
"com.android.tools.lint.checks.WrongImportDetector.ImportVisitor","1,50",3
"com.android.tools.lint.checks.WrongLocationDetector","1,33",4
"com.android.tools.lint.client.api.AsmVisitor","14,50",29
"com.android.tools.lint.client.api.Configuration","1,00",5
"com.android.tools.lint.client.api.DefaultConfiguration","3,11",56
"com.android.tools.lint.client.api.DefaultSdkInfo","3,17",19
"com.android.tools.lint.client.api.IssueRegistry","4,43",31
"com.android.tools.lint.client.api.JavaVisitor","9,50",19
"com.android.tools.lint.client.api.JavaVisitor.DelegatingJavaVisitor","5,33",16
"com.android.tools.lint.client.api.JavaVisitor.DispatchVisitor","2,97",223
"com.android.tools.lint.client.api.JavaVisitor.VisitingDetector","1,40",7
"com.android.tools.lint.client.api.LintClient","2,90",61
"com.android.tools.lint.client.api.LintClient.ClassPathInfo","1,00",4
"com.android.tools.lint.client.api.LintDriver","6,23",330
"com.android.tools.lint.client.api.LintDriver.ClassEntry","2,50",10
"com.android.tools.lint.client.api.LintDriver.LintClientWrapper","1,20",30
"com.android.tools.lint.client.api.LintDriver.SuperclassVisitor","1,50",3
"com.android.tools.lint.client.api.LintListener.EventType",n/a,0
"com.android.tools.lint.client.api.SdkInfo","2,50",5
"com.android.tools.lint.client.api.XmlVisitor","12,67",38
"com.android.tools.lint.detector.api.Category","1,57",11
"com.android.tools.lint.detector.api.ClassContext","3,54",85
"com.android.tools.lint.detector.api.Context","1,72",31
"com.android.tools.lint.detector.api.DefaultPosition","1,00",4
"com.android.tools.lint.detector.api.Detector","1,00",27
"com.android.tools.lint.detector.api.Issue","2,12",51
"com.android.tools.lint.detector.api.JavaContext","2,00",10
"com.android.tools.lint.detector.api.LayoutDetector","1,00",5
"com.android.tools.lint.detector.api.LintUtils","4,31",125
"com.android.tools.lint.detector.api.Location","3,36",74
"com.android.tools.lint.detector.api.Location.DefaultLocationHandle","1,00",4
"com.android.tools.lint.detector.api.Location.SearchDirection",n/a,0
"com.android.tools.lint.detector.api.Location.SearchHints","1,00",8
"com.android.tools.lint.detector.api.Position",n/a,0
"com.android.tools.lint.detector.api.Project","2,80",123
"com.android.tools.lint.detector.api.ResourceXmlDetector","1,00",3
"com.android.tools.lint.detector.api.Scope","1,50",3
"com.android.tools.lint.detector.api.Severity","1,00",2
"com.android.tools.lint.detector.api.Speed","1,00",2
"com.android.tools.lint.detector.api.XmlContext","1,67",10
"com.android.util.Pair","2,57",18
"com.android.utils.NullLogger","1,00",5
"com.android.utils.Pair","2,57",18
"com.android.utils.PositionXmlParser","7,50",60
"com.android.utils.PositionXmlParser.DefaultPosition","1,00",6
"com.android.utils.PositionXmlParser.DomBuilder","2,88",23
"com.android.utils.SdkUtils","2,56",23
"com.android.utils.StdLogger","2,14",15
"com.android.utils.StdLogger.Level","1,00",1
"com.android.utils.XmlUtils","6,20",62
"com.android.xml.AndroidManifest","2,08",25
"com.android.xml.AndroidXPathFactory","1,00",2
"com.android.xml.AndroidXPathFactory.AndroidNamespaceContext","1,80",9

Package,v(G)avg,v(G)tot
"com.android","2,80",14
"com.android.assetstudiolib","2,58",116
"com.android.ddmlib","2,37",1.634
"com.android.ddmlib.log","3,70",281
"com.android.ddmlib.testrunner","2,14",227
"com.android.ddmlib.utils","1,00",4
"com.android.draw9patch","3,50",7
"com.android.draw9patch.graphics","2,00",16
"com.android.draw9patch.ui","3,27",209
"com.android.draw9patch.ui.action","1,14",8
"com.android.dvlib","2,82",31
"com.android.ide.common.api","1,74",207
"com.android.ide.common.rendering","3,06",107
"com.android.ide.common.rendering.api","1,22",235
"com.android.ide.common.rendering.legacy","1,33",4
"com.android.ide.common.resources","3,27",539
"com.android.ide.common.resources.configuration","1,75",585
"com.android.ide.common.xml","2,71",222
"com.android.io","1,57",47
"com.android.layoutlib.api","1,67",5
"com.android.manifmerger","6,02",373
"com.android.ninepatch","2,83",102
"com.android.prefs","3,50",14
"com.android.resources","1,76",223
"com.android.sdklib","2,89",387
"com.android.sdklib.build","3,54",262
"com.android.sdklib.devices","2,38",573
"com.android.sdklib.internal.avd","4,66",326
"com.android.sdklib.internal.build","2,33",100
"com.android.sdklib.internal.project","4,41",238
"com.android.sdklib.internal.repository","4,99",494
"com.android.sdklib.internal.repository.archives","4,59",266
"com.android.sdklib.internal.repository.packages","3,12",812
"com.android.sdklib.internal.repository.sources","3,79",349
"com.android.sdklib.io","2,59",57
"com.android.sdklib.repository","1,25",15
"com.android.sdklib.util","3,44",313
"com.android.sdkstats","3,31",129
"com.android.tools.lint","5,26",589
"com.android.tools.lint.checks","5,12",3.886
"com.android.tools.lint.client.api","4,15",979
"com.android.tools.lint.detector.api","2,87",677
"com.android.util","2,57",18
"com.android.utils","4,18",255
"com.android.xml","2,37",45

Module,v(G)avg,v(G)tot
"adt","3,31",129
"assetstudio","2,58",116
"common","3,15",375
"ddmlib","2,45",2.146
"draw9patch","2,96",240
"dvlib","2,82",31
"layoutlib-api","1,46",481
"lint-api","3,51",1.656
"lint-checks","5,12",3.886
"lint-cli","5,26",589
"manifmerger","6,02",373
"ninepatch","2,83",102
"rule_api","1,74",207
"sdk_common","2,35",1.457
"sdklib","3,35",4.192

Project,v(G)avg,v(G)tot
"project","3,24",15.980

