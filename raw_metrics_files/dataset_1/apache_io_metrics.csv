SmellsMetrics,Ter, 12 jun 2018 13:57:07 BRT
Method,CALL,CALLED,IMP,LOC,NBD,NP,STAT,v(G)
"org.apache.commons.io.ByteOrderMark.ByteOrderMark(String,int...)",4,18,n/a,21,1,2,7,5
"org.apache.commons.io.ByteOrderMark.equals(Object)",2,11,n/a,23,2,1,11,5
"org.apache.commons.io.ByteOrderMark.get(int)",0,9,n/a,9,0,1,1,1
"org.apache.commons.io.ByteOrderMark.getBytes()",0,4,n/a,12,1,0,6,2
"org.apache.commons.io.ByteOrderMark.getCharsetName()",0,6,n/a,8,0,0,1,1
"org.apache.commons.io.ByteOrderMark.hashCode()",2,7,n/a,14,1,0,4,2
"org.apache.commons.io.ByteOrderMark.length()",0,8,n/a,8,0,0,1,1
"org.apache.commons.io.ByteOrderMark.toString()",14,35,n/a,22,2,0,14,3
"org.apache.commons.io.CopyUtils.CopyUtils()",0,0,n/a,4,0,0,0,1
"org.apache.commons.io.CopyUtils.copy(InputStream,OutputStream)",2,1,n/a,21,1,2,7,2
"org.apache.commons.io.CopyUtils.copy(InputStream,Writer)",2,2,n/a,15,0,2,2,1
"org.apache.commons.io.CopyUtils.copy(InputStream,Writer,String)",2,1,n/a,18,0,3,2,1
"org.apache.commons.io.CopyUtils.copy(Reader,OutputStream)",3,1,n/a,17,0,2,3,1
"org.apache.commons.io.CopyUtils.copy(Reader,Writer)",2,5,n/a,20,1,2,7,2
"org.apache.commons.io.CopyUtils.copy(String,OutputStream)",4,2,n/a,19,0,2,4,1
"org.apache.commons.io.CopyUtils.copy(String,Writer)",1,2,n/a,10,0,2,1,1
"org.apache.commons.io.CopyUtils.copy(byte[],OutputStream)",1,2,n/a,10,0,2,1,1
"org.apache.commons.io.CopyUtils.copy(byte[],Writer)",2,2,n/a,13,0,2,2,1
"org.apache.commons.io.CopyUtils.copy(byte[],Writer,String)",2,0,n/a,18,0,3,2,1
"org.apache.commons.io.DirectoryWalker.CancelException.CancelException(File,int)",1,5,n/a,10,0,2,1,1
"org.apache.commons.io.DirectoryWalker.CancelException.CancelException(String,File,int)",1,1,n/a,14,0,3,3,1
"org.apache.commons.io.DirectoryWalker.CancelException.getDepth()",0,8,n/a,8,0,0,1,1
"org.apache.commons.io.DirectoryWalker.CancelException.getFile()",0,6,n/a,8,0,0,1,1
"org.apache.commons.io.DirectoryWalker.DirectoryWalker()",1,5,n/a,6,0,0,1,1
"org.apache.commons.io.DirectoryWalker.DirectoryWalker(FileFilter,int)",0,4,n/a,16,0,2,2,1
"org.apache.commons.io.DirectoryWalker.DirectoryWalker(IOFileFilter,IOFileFilter,int)",3,2,n/a,26,1,3,8,5
"org.apache.commons.io.DirectoryWalker.checkIfCancelled(File,int,Collection<T>)",2,5,n/a,19,1,3,2,2
"org.apache.commons.io.DirectoryWalker.filterDirectoryContents(File,int,File[])",0,1,n/a,15,0,3,1,1
"org.apache.commons.io.DirectoryWalker.handleCancelled(File,Collection<T>,CancelException)",0,6,n/a,18,0,3,1,1
"org.apache.commons.io.DirectoryWalker.handleDirectory(File,int,Collection<T>)",0,1,n/a,19,0,3,1,1
"org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(File,int,Collection<T>)",0,1,n/a,13,0,3,0,1
"org.apache.commons.io.DirectoryWalker.handleDirectoryStart(File,int,Collection<T>)",0,1,n/a,13,0,3,0,1
"org.apache.commons.io.DirectoryWalker.handleEnd(Collection<T>)",0,1,n/a,11,0,1,0,1
"org.apache.commons.io.DirectoryWalker.handleFile(File,int,Collection<T>)",0,2,n/a,13,0,3,0,1
"org.apache.commons.io.DirectoryWalker.handleIsCancelled(File,int,Collection<T>)",0,2,n/a,40,0,3,1,1
"org.apache.commons.io.DirectoryWalker.handleRestricted(File,int,Collection<T>)",0,1,n/a,13,0,3,0,1
"org.apache.commons.io.DirectoryWalker.handleStart(File,Collection<T>)",0,1,n/a,12,0,2,0,1
"org.apache.commons.io.DirectoryWalker.walk(File,Collection<T>)",5,8,n/a,27,1,2,7,3
"org.apache.commons.io.DirectoryWalker.walk(File,int,Collection<T>)",15,2,n/a,35,5,3,18,8
"org.apache.commons.io.EndianUtils.EndianUtils()",1,0,n/a,6,0,0,1,1
"org.apache.commons.io.EndianUtils.read(InputStream)",2,13,n/a,15,1,1,4,2
"org.apache.commons.io.EndianUtils.readSwappedDouble(InputStream)",2,3,n/a,12,0,1,1,1
"org.apache.commons.io.EndianUtils.readSwappedDouble(byte[],int)",2,2,n/a,10,0,2,1,1
"org.apache.commons.io.EndianUtils.readSwappedFloat(InputStream)",2,3,n/a,12,0,1,1,1
"org.apache.commons.io.EndianUtils.readSwappedFloat(byte[],int)",2,1,n/a,10,0,2,1,1
"org.apache.commons.io.EndianUtils.readSwappedInteger(InputStream)",4,4,n/a,19,0,1,5,1
"org.apache.commons.io.EndianUtils.readSwappedInteger(byte[],int)",0,2,n/a,13,0,2,1,1
"org.apache.commons.io.EndianUtils.readSwappedLong(InputStream)",2,4,n/a,16,1,1,6,2
"org.apache.commons.io.EndianUtils.readSwappedLong(byte[],int)",0,4,n/a,20,0,2,3,1
"org.apache.commons.io.EndianUtils.readSwappedShort(InputStream)",2,3,n/a,13,0,1,1,1
"org.apache.commons.io.EndianUtils.readSwappedShort(byte[],int)",0,1,n/a,11,0,2,1,1
"org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(InputStream)",4,2,n/a,20,0,1,7,1
"org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(byte[],int)",0,2,n/a,15,0,2,3,1
"org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(InputStream)",2,3,n/a,15,0,1,3,1
"org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(byte[],int)",0,1,n/a,12,0,2,1,1
"org.apache.commons.io.EndianUtils.swapDouble(double)",3,4,n/a,8,0,1,1,1
"org.apache.commons.io.EndianUtils.swapFloat(float)",3,4,n/a,8,0,1,1,1
"org.apache.commons.io.EndianUtils.swapInteger(int)",0,10,n/a,12,0,1,1,1
"org.apache.commons.io.EndianUtils.swapLong(long)",0,7,n/a,16,0,1,1,1
"org.apache.commons.io.EndianUtils.swapShort(short)",0,6,n/a,9,0,1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedDouble(OutputStream,double)",2,1,n/a,12,0,2,1,1
"org.apache.commons.io.EndianUtils.writeSwappedDouble(byte[],int,double)",2,2,n/a,10,0,3,1,1
"org.apache.commons.io.EndianUtils.writeSwappedFloat(OutputStream,float)",2,1,n/a,12,0,2,1,1
"org.apache.commons.io.EndianUtils.writeSwappedFloat(byte[],int,float)",2,1,n/a,10,0,3,1,1
"org.apache.commons.io.EndianUtils.writeSwappedInteger(OutputStream,int)",4,2,n/a,15,0,2,4,1
"org.apache.commons.io.EndianUtils.writeSwappedInteger(byte[],int,int)",0,2,n/a,13,0,3,4,1
"org.apache.commons.io.EndianUtils.writeSwappedLong(OutputStream,long)",8,2,n/a,19,0,2,8,1
"org.apache.commons.io.EndianUtils.writeSwappedLong(byte[],int,long)",0,3,n/a,17,0,3,8,1
"org.apache.commons.io.EndianUtils.writeSwappedShort(OutputStream,short)",2,1,n/a,13,0,2,2,1
"org.apache.commons.io.EndianUtils.writeSwappedShort(byte[],int,short)",0,1,n/a,11,0,3,2,1
"org.apache.commons.io.FileCleaner.exitWhenFinished()",1,1,n/a,26,0,0,1,1
"org.apache.commons.io.FileCleaner.getInstance()",0,1,n/a,11,0,0,1,1
"org.apache.commons.io.FileCleaner.getTrackCount()",1,0,n/a,11,0,0,1,1
"org.apache.commons.io.FileCleaner.track(File,Object)",1,0,n/a,14,0,2,1,1
"org.apache.commons.io.FileCleaner.track(File,Object,FileDeleteStrategy)",1,0,n/a,15,0,3,1,1
"org.apache.commons.io.FileCleaner.track(String,Object)",1,0,n/a,14,0,2,1,1
"org.apache.commons.io.FileCleaner.track(String,Object,FileDeleteStrategy)",1,0,n/a,15,0,3,1,1
"org.apache.commons.io.FileCleaningTracker.Reaper.Reaper()",3,1,n/a,6,0,0,3,1
"org.apache.commons.io.FileCleaningTracker.Reaper.run()",5,1,n/a,19,2,0,7,4
"org.apache.commons.io.FileCleaningTracker.Tracker.Tracker(String,FileDeleteStrategy,Object,ReferenceQueue<? super Object>)",1,1,n/a,13,0,4,3,2
"org.apache.commons.io.FileCleaningTracker.Tracker.delete()",2,1,n/a,9,0,0,1,1
"org.apache.commons.io.FileCleaningTracker.addTracker(String,Object,FileDeleteStrategy)",5,2,n/a,18,1,3,6,3
"org.apache.commons.io.FileCleaningTracker.exitWhenFinished()",1,6,n/a,30,2,0,4,2
"org.apache.commons.io.FileCleaningTracker.getTrackCount()",1,23,n/a,9,0,0,1,1
"org.apache.commons.io.FileCleaningTracker.track(File,Object)",1,4,n/a,12,0,2,1,1
"org.apache.commons.io.FileCleaningTracker.track(File,Object,FileDeleteStrategy)",3,6,n/a,16,1,3,3,2
"org.apache.commons.io.FileCleaningTracker.track(String,Object)",1,7,n/a,12,0,2,1,1
"org.apache.commons.io.FileCleaningTracker.track(String,Object,FileDeleteStrategy)",2,4,n/a,16,1,3,3,2
"org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy(String)",0,2,n/a,8,0,1,1,1
"org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.ForceFileDeleteStrategy()",1,1,n/a,4,0,0,1,1
"org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.doDelete(File)",1,4,n/a,16,0,1,2,1
"org.apache.commons.io.FileDeleteStrategy.delete(File)",3,8,n/a,15,1,1,2,3
"org.apache.commons.io.FileDeleteStrategy.deleteQuietly(File)",2,7,n/a,20,1,1,5,4
"org.apache.commons.io.FileDeleteStrategy.doDelete(File)",1,4,n/a,19,0,1,1,1
"org.apache.commons.io.FileDeleteStrategy.toString()",0,33,n/a,9,0,0,1,1
"org.apache.commons.io.FileExistsException.FileExistsException()",1,0,n/a,6,0,0,1,1
"org.apache.commons.io.FileExistsException.FileExistsException(File)",1,0,n/a,8,0,1,1,1
"org.apache.commons.io.FileExistsException.FileExistsException(String)",1,2,n/a,8,0,1,1,1
"org.apache.commons.io.FileSystemUtils.FileSystemUtils()",1,7,n/a,6,0,0,1,1
"org.apache.commons.io.FileSystemUtils.freeSpace(String)",1,2,n/a,30,0,1,1,1
"org.apache.commons.io.FileSystemUtils.freeSpaceKb()",1,0,n/a,15,0,0,1,1
"org.apache.commons.io.FileSystemUtils.freeSpaceKb(String)",1,3,n/a,27,0,1,1,1
"org.apache.commons.io.FileSystemUtils.freeSpaceKb(String,long)",1,2,n/a,29,0,2,1,1
"org.apache.commons.io.FileSystemUtils.freeSpaceKb(long)",3,1,n/a,17,0,1,1,1
"org.apache.commons.io.FileSystemUtils.freeSpaceOS(String,int,boolean,long)",7,12,n/a,38,1,4,13,8
"org.apache.commons.io.FileSystemUtils.freeSpaceUnix(String,boolean,boolean,long)",19,33,n/a,54,2,4,23,9
"org.apache.commons.io.FileSystemUtils.freeSpaceWindows(String,long)",9,11,n/a,33,2,2,12,5
"org.apache.commons.io.FileSystemUtils.openProcess(String[])",2,1,n/a,10,0,1,1,1
"org.apache.commons.io.FileSystemUtils.parseBytes(String,String)",3,2,n/a,23,2,2,6,3
"org.apache.commons.io.FileSystemUtils.parseDir(String,String)",14,1,n/a,50,2,2,26,11
"org.apache.commons.io.FileSystemUtils.performCommand(String[],int,long)",30,2,n/a,66,2,3,32,7
"org.apache.commons.io.FileUtils.FileUtils()",1,0,n/a,6,0,0,1,1
"org.apache.commons.io.FileUtils.byteCountToDisplaySize(long)",4,4,n/a,26,1,1,9,4
"org.apache.commons.io.FileUtils.checksum(File,Checksum)",7,7,n/a,30,1,2,8,2
"org.apache.commons.io.FileUtils.checksumCRC32(File)",3,1,n/a,16,0,1,3,1
"org.apache.commons.io.FileUtils.cleanDirectory(File)",7,13,n/a,31,2,1,16,7
"org.apache.commons.io.FileUtils.cleanDirectoryOnExit(File)",7,1,n/a,32,2,1,16,7
"org.apache.commons.io.FileUtils.contentEquals(File,File)",15,13,n/a,47,1,2,19,7
"org.apache.commons.io.FileUtils.convertFileCollectionToFileArray(Collection<File>)",2,0,n/a,11,0,1,1,1
"org.apache.commons.io.FileUtils.copyDirectory(File,File)",1,12,n/a,27,0,2,1,1
"org.apache.commons.io.FileUtils.copyDirectory(File,File,FileFilter)",1,1,n/a,48,0,3,1,1
"org.apache.commons.io.FileUtils.copyDirectory(File,File,FileFilter,boolean)",21,2,n/a,77,3,4,19,11
"org.apache.commons.io.FileUtils.copyDirectory(File,File,boolean)",1,6,n/a,30,0,3,1,1
"org.apache.commons.io.FileUtils.copyDirectoryToDirectory(File,File)",11,2,n/a,38,1,2,9,7
"org.apache.commons.io.FileUtils.copyFile(File,File)",1,6,n/a,24,0,2,1,1
"org.apache.commons.io.FileUtils.copyFile(File,File,boolean)",20,5,n/a,51,2,3,16,11
"org.apache.commons.io.FileUtils.copyFileToDirectory(File,File)",1,4,n/a,24,0,2,1,1
"org.apache.commons.io.FileUtils.copyFileToDirectory(File,File,boolean)",7,2,n/a,35,1,3,6,4
"org.apache.commons.io.FileUtils.copyInputStreamToFile(InputStream,File)",4,2,n/a,27,2,2,6,1
"org.apache.commons.io.FileUtils.copyURLToFile(URL,File)",2,4,n/a,23,0,2,2,1
"org.apache.commons.io.FileUtils.copyURLToFile(URL,File,int,int)",5,2,n/a,28,0,4,5,1
"org.apache.commons.io.FileUtils.decodeUrl(String)",18,15,n/a,46,5,1,21,9
"org.apache.commons.io.FileUtils.deleteDirectory(File)",5,41,n/a,19,1,1,7,4
"org.apache.commons.io.FileUtils.deleteDirectoryOnExit(File)",4,1,n/a,16,1,1,5,3
"org.apache.commons.io.FileUtils.deleteQuietly(File)",3,17,n/a,31,2,1,8,5
"org.apache.commons.io.FileUtils.doCopyDirectory(File,File,FileFilter,boolean,List<String>)",19,2,n/a,45,3,5,18,12
"org.apache.commons.io.FileUtils.doCopyFile(File,File,boolean)",18,2,n/a,42,2,3,25,7
"org.apache.commons.io.FileUtils.forceDelete(File)",6,8,n/a,30,3,1,8,4
"org.apache.commons.io.FileUtils.forceDeleteOnExit(File)",3,1,n/a,15,1,1,3,2
"org.apache.commons.io.FileUtils.forceMkdir(File)",6,5,n/a,34,3,1,8,5
"org.apache.commons.io.FileUtils.getTempDirectory()",2,2,n/a,10,0,0,1,1
"org.apache.commons.io.FileUtils.getTempDirectoryPath()",1,3,n/a,10,0,0,1,1
"org.apache.commons.io.FileUtils.getUserDirectory()",2,2,n/a,10,0,0,1,1
"org.apache.commons.io.FileUtils.getUserDirectoryPath()",1,3,n/a,10,0,0,1,1
"org.apache.commons.io.FileUtils.innerListFiles(Collection<File>,File,IOFileFilter)",4,2,n/a,21,3,3,6,4
"org.apache.commons.io.FileUtils.isFileNewer(File,Date)",3,8,n/a,18,1,2,3,2
"org.apache.commons.io.FileUtils.isFileNewer(File,File)",5,11,n/a,23,1,2,5,3
"org.apache.commons.io.FileUtils.isFileNewer(File,long)",3,12,n/a,21,1,2,5,3
"org.apache.commons.io.FileUtils.isFileOlder(File,Date)",3,3,n/a,18,1,2,3,2
"org.apache.commons.io.FileUtils.isFileOlder(File,File)",5,6,n/a,23,1,2,5,3
"org.apache.commons.io.FileUtils.isFileOlder(File,long)",3,5,n/a,21,1,2,5,3
"org.apache.commons.io.FileUtils.isSymlink(File)",10,8,n/a,31,1,1,12,5
"org.apache.commons.io.FileUtils.iterateFiles(File,IOFileFilter,IOFileFilter)",2,1,n/a,21,0,3,1,1
"org.apache.commons.io.FileUtils.iterateFiles(File,String[],boolean)",2,0,n/a,16,0,3,1,1
"org.apache.commons.io.FileUtils.lineIterator(File)",1,0,n/a,12,0,1,1,1
"org.apache.commons.io.FileUtils.lineIterator(File,String)",4,9,n/a,44,1,2,8,3
"org.apache.commons.io.FileUtils.listFiles(File,IOFileFilter,IOFileFilter)",9,9,n/a,51,1,3,12,4
"org.apache.commons.io.FileUtils.listFiles(File,String[],boolean)",3,5,n/a,22,1,3,6,3
"org.apache.commons.io.FileUtils.moveDirectory(File,File)",13,8,n/a,38,2,2,16,8
"org.apache.commons.io.FileUtils.moveDirectoryToDirectory(File,File,boolean)",11,8,n/a,31,1,3,11,7
"org.apache.commons.io.FileUtils.moveFile(File,File)",15,9,n/a,41,2,2,18,9
"org.apache.commons.io.FileUtils.moveFileToDirectory(File,File,boolean)",11,6,n/a,31,1,3,11,7
"org.apache.commons.io.FileUtils.moveToDirectory(File,File,boolean)",7,3,n/a,30,1,3,9,5
"org.apache.commons.io.FileUtils.openInputStream(File)",7,7,n/a,31,2,1,7,4
"org.apache.commons.io.FileUtils.openOutputStream(File)",10,14,n/a,38,3,1,10,7
"org.apache.commons.io.FileUtils.readFileToByteArray(File)",3,1,n/a,18,1,1,5,1
"org.apache.commons.io.FileUtils.readFileToString(File)",1,0,n/a,12,0,1,1,1
"org.apache.commons.io.FileUtils.readFileToString(File,String)",3,7,n/a,19,1,2,5,1
"org.apache.commons.io.FileUtils.readLines(File)",1,1,n/a,12,0,1,1,1
"org.apache.commons.io.FileUtils.readLines(File,String)",3,2,n/a,20,1,2,5,1
"org.apache.commons.io.FileUtils.sizeOf(File)",5,7,n/a,29,1,1,6,3
"org.apache.commons.io.FileUtils.sizeOfDirectory(File)",6,22,n/a,26,1,1,13,5
"org.apache.commons.io.FileUtils.toFile(URL)",6,7,n/a,23,1,1,5,3
"org.apache.commons.io.FileUtils.toFiles(URL[])",4,4,n/a,36,3,1,12,6
"org.apache.commons.io.FileUtils.toSuffixes(String[])",0,1,n/a,14,1,1,6,2
"org.apache.commons.io.FileUtils.toURLs(File[])",2,1,n/a,16,1,1,6,2
"org.apache.commons.io.FileUtils.touch(File)",6,27,n/a,22,1,1,6,3
"org.apache.commons.io.FileUtils.waitFor(File,int)",2,2,n/a,31,3,2,11,6
"org.apache.commons.io.FileUtils.write(File,CharSequence)",2,2,n/a,12,0,2,2,2
"org.apache.commons.io.FileUtils.write(File,CharSequence,String)",2,2,n/a,14,0,3,2,2
"org.apache.commons.io.FileUtils.writeByteArrayToFile(File,byte[])",3,1,n/a,20,1,2,5,1
"org.apache.commons.io.FileUtils.writeLines(File,Collection<?>)",1,0,n/a,13,0,2,1,1
"org.apache.commons.io.FileUtils.writeLines(File,Collection<?>,String)",1,0,n/a,14,0,3,1,1
"org.apache.commons.io.FileUtils.writeLines(File,String,Collection<?>)",1,2,n/a,18,0,3,1,1
"org.apache.commons.io.FileUtils.writeLines(File,String,Collection<?>,String)",3,6,n/a,26,1,4,5,1
"org.apache.commons.io.FileUtils.writeStringToFile(File,String)",1,1,n/a,10,0,2,1,1
"org.apache.commons.io.FileUtils.writeStringToFile(File,String,String)",3,20,n/a,21,1,3,5,1
"org.apache.commons.io.FilenameUtils.FilenameUtils()",1,0,n/a,6,0,0,1,1
"org.apache.commons.io.FilenameUtils.concat(String,String)",8,29,n/a,62,1,2,14,6
"org.apache.commons.io.FilenameUtils.doGetFullPath(String,boolean)",6,2,n/a,32,2,2,16,8
"org.apache.commons.io.FilenameUtils.doGetPath(String,int)",4,2,n/a,22,1,2,10,6
"org.apache.commons.io.FilenameUtils.doNormalize(String,char,boolean)",11,4,n/a,93,4,3,64,31
"org.apache.commons.io.FilenameUtils.equals(String,String)",1,7,n/a,14,0,2,1,1
"org.apache.commons.io.FilenameUtils.equals(String,String,boolean,IOCase)",4,8,n/a,30,2,4,10,8
"org.apache.commons.io.FilenameUtils.equalsNormalized(String,String)",1,8,n/a,14,0,2,1,1
"org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(String,String)",1,11,n/a,16,0,2,1,1
"org.apache.commons.io.FilenameUtils.equalsOnSystem(String,String)",1,7,n/a,14,0,2,1,1
"org.apache.commons.io.FilenameUtils.getBaseName(String)",2,7,n/a,20,0,1,1,1
"org.apache.commons.io.FilenameUtils.getExtension(String)",2,19,n/a,29,1,1,6,3
"org.apache.commons.io.FilenameUtils.getFullPath(String)",1,30,n/a,28,0,1,1,1
"org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(String)",1,35,n/a,29,0,1,1,1
"org.apache.commons.io.FilenameUtils.getName(String)",2,7,n/a,24,1,1,4,2
"org.apache.commons.io.FilenameUtils.getPath(String)",1,32,n/a,25,0,1,1,1
"org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(String)",1,28,n/a,26,0,1,1,1
"org.apache.commons.io.FilenameUtils.getPrefix(String)",3,31,n/a,42,1,1,8,4
"org.apache.commons.io.FilenameUtils.getPrefixLength(String)",16,36,n/a,83,4,1,37,26
"org.apache.commons.io.FilenameUtils.indexOfExtension(String)",2,13,n/a,21,1,1,5,3
"org.apache.commons.io.FilenameUtils.indexOfLastSeparator(String)",3,9,n/a,20,1,1,5,2
"org.apache.commons.io.FilenameUtils.isExtension(String,Collection<String>)",4,30,n/a,26,2,2,9,6
"org.apache.commons.io.FilenameUtils.isExtension(String,String)",4,24,n/a,21,1,2,6,4
"org.apache.commons.io.FilenameUtils.isExtension(String,String[])",3,30,n/a,26,2,2,9,6
"org.apache.commons.io.FilenameUtils.isSeparator(char)",0,6,n/a,9,0,1,1,2
"org.apache.commons.io.FilenameUtils.isSystemWindows()",0,4,n/a,8,0,0,1,1
"org.apache.commons.io.FilenameUtils.normalize(String)",1,147,n/a,43,0,1,1,1
"org.apache.commons.io.FilenameUtils.normalize(String,boolean)",1,5,n/a,48,0,2,2,2
"org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(String)",1,138,n/a,44,0,1,1,1
"org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(String,boolean)",1,4,n/a,47,0,2,2,2
"org.apache.commons.io.FilenameUtils.removeExtension(String)",2,14,n/a,28,1,1,6,3
"org.apache.commons.io.FilenameUtils.separatorsToSystem(String)",3,12,n/a,16,1,1,5,3
"org.apache.commons.io.FilenameUtils.separatorsToUnix(String)",2,7,n/a,12,1,1,3,3
"org.apache.commons.io.FilenameUtils.separatorsToWindows(String)",2,7,n/a,12,1,1,3,3
"org.apache.commons.io.FilenameUtils.splitOnTokens(String)",21,10,n/a,38,3,1,20,12
"org.apache.commons.io.FilenameUtils.wildcardMatch(String,String)",1,26,n/a,25,0,2,1,1
"org.apache.commons.io.FilenameUtils.wildcardMatch(String,String,IOCase)",15,35,n/a,85,5,3,42,19
"org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(String,String)",1,21,n/a,25,0,2,1,1
"org.apache.commons.io.HexDump.HexDump()",1,0,n/a,6,0,0,1,1
"org.apache.commons.io.HexDump.dump(StringBuilder,byte)",1,1,n/a,13,1,2,5,2
"org.apache.commons.io.HexDump.dump(StringBuilder,long)",1,1,n/a,14,1,2,5,2
"org.apache.commons.io.HexDump.dump(byte[],long,OutputStream,int)",16,7,n/a,71,3,4,31,11
"org.apache.commons.io.IOCase.IOCase(String,boolean)",0,3,n/a,10,0,2,2,1
"org.apache.commons.io.IOCase.checkCompareTo(String,String)",3,21,n/a,17,1,2,3,4
"org.apache.commons.io.IOCase.checkEndsWith(String,String)",3,20,n/a,15,0,2,2,1
"org.apache.commons.io.IOCase.checkEquals(String,String)",3,21,n/a,17,1,2,3,4
"org.apache.commons.io.IOCase.checkIndexOf(String,int,String)",3,37,n/a,26,3,3,8,4
"org.apache.commons.io.IOCase.checkRegionMatches(String,int,String)",2,32,n/a,15,0,3,1,1
"org.apache.commons.io.IOCase.checkStartsWith(String,String)",2,20,n/a,14,0,2,1,1
"org.apache.commons.io.IOCase.forName(String)",4,6,n/a,19,1,1,7,4
"org.apache.commons.io.IOCase.getName()",0,3,n/a,8,0,0,1,1
"org.apache.commons.io.IOCase.isCaseSensitive()",0,4,n/a,8,0,0,1,1
"org.apache.commons.io.IOCase.readResolve()",1,0,n/a,9,0,0,1,1
"org.apache.commons.io.IOCase.toString()",0,34,n/a,9,0,0,1,1
"org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(String,Throwable)",2,5,n/a,16,0,2,2,1
"org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(Throwable)",3,2,n/a,14,0,1,2,2
"org.apache.commons.io.IOUtils.IOUtils()",1,0,n/a,6,0,0,1,1
"org.apache.commons.io.IOUtils.closeQuietly(Closeable)",1,9,n/a,32,2,1,3,3
"org.apache.commons.io.IOUtils.closeQuietly(InputStream)",1,19,n/a,26,0,1,1,1
"org.apache.commons.io.IOUtils.closeQuietly(OutputStream)",1,17,n/a,27,0,1,1,1
"org.apache.commons.io.IOUtils.closeQuietly(Reader)",1,5,n/a,26,0,1,1,1
"org.apache.commons.io.IOUtils.closeQuietly(Socket)",1,0,n/a,32,2,1,3,3
"org.apache.commons.io.IOUtils.closeQuietly(Writer)",1,28,n/a,25,0,1,1,1
"org.apache.commons.io.IOUtils.contentEquals(InputStream,InputStream)",6,1,n/a,33,2,2,12,5
"org.apache.commons.io.IOUtils.contentEquals(Reader,Reader)",6,0,n/a,34,2,2,12,5
"org.apache.commons.io.IOUtils.copy(InputStream,OutputStream)",1,8,n/a,26,1,2,4,2
"org.apache.commons.io.IOUtils.copy(InputStream,Writer)",2,6,n/a,20,0,2,2,1
"org.apache.commons.io.IOUtils.copy(InputStream,Writer,String)",3,6,n/a,28,1,3,4,2
"org.apache.commons.io.IOUtils.copy(Reader,OutputStream)",3,5,n/a,27,0,2,3,1
"org.apache.commons.io.IOUtils.copy(Reader,OutputStream,String)",4,5,n/a,35,1,3,5,2
"org.apache.commons.io.IOUtils.copy(Reader,Writer)",1,10,n/a,25,1,2,4,2
"org.apache.commons.io.IOUtils.copyLarge(InputStream,OutputStream)",2,7,n/a,25,1,2,7,2
"org.apache.commons.io.IOUtils.copyLarge(Reader,Writer)",2,3,n/a,23,1,2,7,2
"org.apache.commons.io.IOUtils.lineIterator(InputStream,String)",3,1,n/a,40,1,2,5,2
"org.apache.commons.io.IOUtils.lineIterator(Reader)",1,0,n/a,30,0,1,1,1
"org.apache.commons.io.IOUtils.readLines(InputStream)",2,2,n/a,17,0,1,2,1
"org.apache.commons.io.IOUtils.readLines(InputStream,String)",3,2,n/a,25,1,2,4,2
"org.apache.commons.io.IOUtils.readLines(Reader)",5,3,n/a,23,1,1,7,2
"org.apache.commons.io.IOUtils.skip(InputStream,long)",3,4,n/a,40,2,2,11,5
"org.apache.commons.io.IOUtils.skip(Reader,long)",3,4,n/a,40,2,2,11,5
"org.apache.commons.io.IOUtils.skipFully(InputStream,long)",3,4,n/a,24,1,2,5,3
"org.apache.commons.io.IOUtils.skipFully(Reader,long)",2,4,n/a,21,1,2,3,2
"org.apache.commons.io.IOUtils.toBufferedInputStream(InputStream)",1,1,n/a,24,0,1,1,1
"org.apache.commons.io.IOUtils.toByteArray(InputStream)",3,20,n/a,16,0,1,3,1
"org.apache.commons.io.IOUtils.toByteArray(Reader)",3,0,n/a,17,0,1,3,1
"org.apache.commons.io.IOUtils.toByteArray(Reader,String)",3,0,n/a,23,0,2,3,1
"org.apache.commons.io.IOUtils.toByteArray(String)",1,1,n/a,16,0,1,1,1
"org.apache.commons.io.IOUtils.toCharArray(InputStream)",3,1,n/a,18,0,1,3,1
"org.apache.commons.io.IOUtils.toCharArray(InputStream,String)",3,1,n/a,23,0,2,3,1
"org.apache.commons.io.IOUtils.toCharArray(Reader)",3,1,n/a,17,0,1,3,1
"org.apache.commons.io.IOUtils.toInputStream(CharSequence)",2,2,n/a,11,0,1,1,1
"org.apache.commons.io.IOUtils.toInputStream(CharSequence,String)",2,3,n/a,16,0,2,1,1
"org.apache.commons.io.IOUtils.toInputStream(String)",2,3,n/a,12,0,1,2,1
"org.apache.commons.io.IOUtils.toInputStream(String,String)",3,4,n/a,17,0,2,2,2
"org.apache.commons.io.IOUtils.toString(InputStream)",3,1,n/a,17,0,1,3,1
"org.apache.commons.io.IOUtils.toString(InputStream,String)",3,1,n/a,22,0,2,3,1
"org.apache.commons.io.IOUtils.toString(Reader)",3,4,n/a,16,0,1,3,1
"org.apache.commons.io.IOUtils.toString(byte[])",1,1,n/a,14,0,1,1,1
"org.apache.commons.io.IOUtils.toString(byte[],String)",2,0,n/a,23,1,2,3,2
"org.apache.commons.io.IOUtils.write(CharSequence,OutputStream)",2,5,n/a,19,1,2,2,2
"org.apache.commons.io.IOUtils.write(CharSequence,OutputStream,String)",2,2,n/a,22,1,3,2,2
"org.apache.commons.io.IOUtils.write(CharSequence,Writer)",2,3,n/a,14,1,2,2,2
"org.apache.commons.io.IOUtils.write(String,OutputStream)",2,8,n/a,19,1,2,2,2
"org.apache.commons.io.IOUtils.write(String,OutputStream,String)",3,4,n/a,26,2,3,4,3
"org.apache.commons.io.IOUtils.write(String,Writer)",1,4,n/a,14,1,2,2,2
"org.apache.commons.io.IOUtils.write(StringBuffer,OutputStream)",3,1,n/a,21,1,2,2,2
"org.apache.commons.io.IOUtils.write(StringBuffer,OutputStream,String)",4,0,n/a,28,2,3,4,3
"org.apache.commons.io.IOUtils.write(StringBuffer,Writer)",2,0,n/a,17,1,2,2,2
"org.apache.commons.io.IOUtils.write(byte[],OutputStream)",1,6,n/a,16,1,2,2,2
"org.apache.commons.io.IOUtils.write(byte[],Writer)",2,4,n/a,18,1,2,2,2
"org.apache.commons.io.IOUtils.write(byte[],Writer,String)",3,4,n/a,27,2,3,4,3
"org.apache.commons.io.IOUtils.write(char[],OutputStream)",3,6,n/a,20,1,2,2,2
"org.apache.commons.io.IOUtils.write(char[],OutputStream,String)",4,2,n/a,28,2,3,4,3
"org.apache.commons.io.IOUtils.write(char[],Writer)",1,3,n/a,16,1,2,2,2
"org.apache.commons.io.IOUtils.writeLines(Collection<?>,String,OutputStream)",5,5,n/a,27,2,3,8,5
"org.apache.commons.io.IOUtils.writeLines(Collection<?>,String,OutputStream,String)",6,6,n/a,35,3,4,10,6
"org.apache.commons.io.IOUtils.writeLines(Collection<?>,String,Writer)",3,4,n/a,26,2,3,8,5
"org.apache.commons.io.LineIterator.LineIterator(Reader)",2,4,n/a,16,1,1,5,3
"org.apache.commons.io.LineIterator.close()",1,9,n/a,12,0,0,3,1
"org.apache.commons.io.LineIterator.closeQuietly(LineIterator)",1,12,n/a,10,1,1,2,2
"org.apache.commons.io.LineIterator.hasNext()",5,17,n/a,31,4,0,15,7
"org.apache.commons.io.LineIterator.isValidLine(String)",0,1,n/a,9,0,1,1,1
"org.apache.commons.io.LineIterator.next()",1,18,n/a,9,0,0,1,1
"org.apache.commons.io.LineIterator.nextLine()",2,6,n/a,14,1,0,5,2
"org.apache.commons.io.LineIterator.remove()",1,2,n/a,8,0,0,1,1
"org.apache.commons.io.TaggedIOException.TaggedIOException(IOException,Serializable)",2,7,n/a,10,0,2,2,1
"org.apache.commons.io.TaggedIOException.getCause()",1,8,n/a,10,0,0,1,1
"org.apache.commons.io.TaggedIOException.getTag()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.TaggedIOException.isTaggedWith(Throwable,Object)",1,5,n/a,33,0,2,1,3
"org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(Throwable,Object)",2,2,n/a,28,1,2,2,2
"org.apache.commons.io.ThreadMonitor.ThreadMonitor(Thread,long)",0,1,n/a,10,0,2,2,1
"org.apache.commons.io.ThreadMonitor.run()",2,1,n/a,14,1,0,3,2
"org.apache.commons.io.ThreadMonitor.start(Thread,long)",5,1,n/a,19,1,2,7,2
"org.apache.commons.io.ThreadMonitor.start(long)",2,5,n/a,11,0,1,1,1
"org.apache.commons.io.ThreadMonitor.stop(Thread)",1,5,n/a,10,1,1,2,2
"org.apache.commons.io.comparator.AbstractFileComparator.sort(File...)",1,2,n/a,16,1,1,3,2
"org.apache.commons.io.comparator.AbstractFileComparator.sort(List<File>)",1,2,n/a,16,1,1,3,2
"org.apache.commons.io.comparator.AbstractFileComparator.toString()",2,38,n/a,9,0,0,1,1
"org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(Comparator<File>...)",1,2,n/a,14,1,1,4,2
"org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(Iterable<Comparator<File>>)",4,2,n/a,17,2,1,6,3
"org.apache.commons.io.comparator.CompositeFileComparator.compare(File,File)",1,43,n/a,18,2,2,6,3
"org.apache.commons.io.comparator.CompositeFileComparator.toString()",8,38,n/a,19,2,0,11,3
"org.apache.commons.io.comparator.DefaultFileComparator.compare(File,File)",1,43,n/a,11,0,2,1,1
"org.apache.commons.io.comparator.DirectoryFileComparator.compare(File,File)",2,43,n/a,11,0,2,1,1
"org.apache.commons.io.comparator.DirectoryFileComparator.getType(File)",1,2,n/a,13,1,1,3,2
"org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator()",0,1,n/a,6,0,0,1,1
"org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(IOCase)",0,3,n/a,8,0,1,1,2
"org.apache.commons.io.comparator.ExtensionFileComparator.compare(File,File)",5,43,n/a,16,0,2,3,1
"org.apache.commons.io.comparator.ExtensionFileComparator.toString()",1,38,n/a,9,0,0,1,1
"org.apache.commons.io.comparator.LastModifiedFileComparator.compare(File,File)",2,43,n/a,21,1,2,6,3
"org.apache.commons.io.comparator.NameFileComparator.NameFileComparator()",0,1,n/a,6,0,0,1,1
"org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(IOCase)",0,3,n/a,8,0,1,1,2
"org.apache.commons.io.comparator.NameFileComparator.compare(File,File)",3,43,n/a,13,0,2,1,1
"org.apache.commons.io.comparator.NameFileComparator.toString()",1,38,n/a,9,0,0,1,1
"org.apache.commons.io.comparator.PathFileComparator.PathFileComparator()",0,1,n/a,6,0,0,1,1
"org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(IOCase)",0,3,n/a,8,0,1,1,2
"org.apache.commons.io.comparator.PathFileComparator.compare(File,File)",3,43,n/a,14,0,2,1,1
"org.apache.commons.io.comparator.PathFileComparator.toString()",1,38,n/a,9,0,0,1,1
"org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(Comparator<File>)",1,15,n/a,11,1,1,3,2
"org.apache.commons.io.comparator.ReverseComparator.compare(File,File)",1,43,n/a,11,0,2,1,1
"org.apache.commons.io.comparator.ReverseComparator.toString()",2,38,n/a,9,0,0,1,1
"org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator()",0,1,n/a,6,0,0,1,1
"org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(boolean)",0,1,n/a,14,0,1,1,1
"org.apache.commons.io.comparator.SizeFileComparator.compare(File,File)",8,43,n/a,33,1,2,14,9
"org.apache.commons.io.comparator.SizeFileComparator.toString()",1,38,n/a,9,0,0,1,1
"org.apache.commons.io.filefilter.AbstractFileFilter.accept(File)",3,21,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.AbstractFileFilter.accept(File,String)",2,24,n/a,10,0,2,1,1
"org.apache.commons.io.filefilter.AbstractFileFilter.toString()",2,42,n/a,9,0,0,1,1
"org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(Date)",1,1,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(Date,boolean)",2,2,n/a,11,0,2,1,1
"org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(File)",1,1,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(File,boolean)",2,2,n/a,13,0,2,1,1
"org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(long)",1,1,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(long,boolean)",0,4,n/a,12,0,2,2,1
"org.apache.commons.io.filefilter.AgeFileFilter.accept(File)",1,21,n/a,17,0,1,2,2
"org.apache.commons.io.filefilter.AgeFileFilter.toString()",1,42,n/a,10,0,0,2,2
"org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter()",1,3,n/a,8,0,0,1,1
"org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(IOFileFilter,IOFileFilter)",4,10,n/a,15,1,2,5,3
"org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(List<IOFileFilter>)",2,4,n/a,14,1,1,3,2
"org.apache.commons.io.filefilter.AndFileFilter.accept(File)",2,21,n/a,15,2,1,6,4
"org.apache.commons.io.filefilter.AndFileFilter.accept(File,String)",2,24,n/a,15,2,2,6,4
"org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(IOFileFilter)",1,4,n/a,6,0,1,1,1
"org.apache.commons.io.filefilter.AndFileFilter.getFileFilters()",1,7,n/a,6,0,0,1,1
"org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter(IOFileFilter)",1,1,n/a,6,0,1,1,1
"org.apache.commons.io.filefilter.AndFileFilter.setFileFilters(List<IOFileFilter>)",2,0,n/a,7,0,1,2,1
"org.apache.commons.io.filefilter.AndFileFilter.toString()",11,42,n/a,22,3,0,13,5
"org.apache.commons.io.filefilter.CanReadFileFilter.CanReadFileFilter()",0,1,n/a,5,0,0,0,1
"org.apache.commons.io.filefilter.CanReadFileFilter.accept(File)",1,21,n/a,11,0,1,1,1
"org.apache.commons.io.filefilter.CanWriteFileFilter.CanWriteFileFilter()",0,1,n/a,5,0,0,0,1
"org.apache.commons.io.filefilter.CanWriteFileFilter.accept(File)",1,21,n/a,11,0,1,1,1
"org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(IOFileFilter)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(IOFileFilter)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.filefilter.ConditionalFileFilter.setFileFilters(List<IOFileFilter>)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(FileFilter)",1,3,n/a,12,1,1,4,2
"org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(FilenameFilter)",1,3,n/a,12,1,1,4,2
"org.apache.commons.io.filefilter.DelegateFileFilter.accept(File)",2,21,n/a,14,1,1,3,2
"org.apache.commons.io.filefilter.DelegateFileFilter.accept(File,String)",2,24,n/a,15,1,2,3,2
"org.apache.commons.io.filefilter.DelegateFileFilter.toString()",3,42,n/a,10,0,0,2,2
"org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter()",0,2,n/a,5,0,0,0,1
"org.apache.commons.io.filefilter.DirectoryFileFilter.accept(File)",1,21,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.EmptyFileFilter.EmptyFileFilter()",0,1,n/a,5,0,0,0,1
"org.apache.commons.io.filefilter.EmptyFileFilter.accept(File)",3,21,n/a,16,1,1,4,3
"org.apache.commons.io.filefilter.FalseFileFilter.FalseFileFilter()",0,2,n/a,5,0,0,0,1
"org.apache.commons.io.filefilter.FalseFileFilter.accept(File)",0,20,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.FalseFileFilter.accept(File,String)",0,23,n/a,10,0,2,1,1
"org.apache.commons.io.filefilter.FileFileFilter.FileFileFilter()",0,1,n/a,5,0,0,0,1
"org.apache.commons.io.filefilter.FileFileFilter.accept(File)",1,21,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils()",0,0,n/a,5,0,0,0,1
"org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(Date)",1,1,n/a,11,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(Date,boolean)",1,2,n/a,11,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(File)",1,1,n/a,12,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(File,boolean)",1,2,n/a,12,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long)",1,1,n/a,11,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long,boolean)",1,2,n/a,11,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.and(IOFileFilter...)",2,15,n/a,13,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(IOFileFilter,IOFileFilter)",1,0,n/a,12,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(FileFilter)",1,0,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(FilenameFilter)",1,0,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()",0,4,n/a,8,0,0,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter()",0,1,n/a,8,0,0,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter()",0,2,n/a,8,0,0,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.filter(IOFileFilter,File...)",7,8,n/a,44,2,2,11,6
"org.apache.commons.io.filefilter.FileFilterUtils.filter(IOFileFilter,Iterable<File>)",3,2,n/a,30,0,2,2,1
"org.apache.commons.io.filefilter.FileFilterUtils.filter(IOFileFilter,Iterable<File>,T)",4,2,n/a,39,3,3,9,6
"org.apache.commons.io.filefilter.FileFilterUtils.filterList(IOFileFilter,File...)",2,2,n/a,29,0,2,2,1
"org.apache.commons.io.filefilter.FileFilterUtils.filterList(IOFileFilter,Iterable<File>)",2,7,n/a,28,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.filterSet(IOFileFilter,File...)",3,2,n/a,30,0,2,2,1
"org.apache.commons.io.filefilter.FileFilterUtils.filterSet(IOFileFilter,Iterable<File>)",2,6,n/a,29,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(String)",1,1,n/a,17,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(String,long)",1,1,n/a,19,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[])",1,1,n/a,17,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[],long)",1,1,n/a,19,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(IOFileFilter)",1,4,n/a,16,1,1,3,2
"org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(IOFileFilter)",1,4,n/a,13,1,1,3,2
"org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(IOFileFilter)",1,4,n/a,13,1,1,3,2
"org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(IOFileFilter)",1,4,n/a,16,1,1,3,2
"org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(String)",1,14,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(String,IOCase)",1,2,n/a,11,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(IOFileFilter)",1,5,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.or(IOFileFilter...)",2,10,n/a,13,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(IOFileFilter,IOFileFilter)",1,0,n/a,12,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(String)",1,2,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(String,IOCase)",1,2,n/a,11,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long)",1,2,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long,boolean)",1,2,n/a,11,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(long,long)",3,5,n/a,14,0,2,3,1
"org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(String)",1,4,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(String,IOCase)",1,2,n/a,11,0,2,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.toList(IOFileFilter...)",4,2,n/a,22,2,1,10,4
"org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()",0,9,n/a,8,0,0,1,1
"org.apache.commons.io.filefilter.HiddenFileFilter.HiddenFileFilter()",0,1,n/a,5,0,0,0,1
"org.apache.commons.io.filefilter.HiddenFileFilter.accept(File)",1,21,n/a,11,0,1,1,1
"org.apache.commons.io.filefilter.IOFileFilter.accept(File)",n/a,19,23,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.filefilter.IOFileFilter.accept(File,String)",n/a,22,15,n/a,n/a,2,n/a,n/a
"org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(String)",1,2,n/a,24,0,1,1,1
"org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(String,long)",5,3,n/a,33,1,2,8,4
"org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(byte[])",1,2,n/a,27,0,1,1,1
"org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(byte[],long)",4,3,n/a,44,1,2,9,4
"org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(File)",7,21,n/a,37,3,1,12,6
"org.apache.commons.io.filefilter.MagicNumberFileFilter.toString()",9,42,n/a,16,0,0,7,1
"org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(List<String>)",1,2,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(List<String>,IOCase)",3,1,n/a,15,1,2,4,3
"org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(String)",1,3,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(String,IOCase)",1,2,n/a,14,1,2,4,3
"org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(String[])",1,5,n/a,12,0,1,1,1
"org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(String[],IOCase)",2,5,n/a,18,1,2,5,3
"org.apache.commons.io.filefilter.NameFileFilter.accept(File)",2,21,n/a,16,2,1,5,3
"org.apache.commons.io.filefilter.NameFileFilter.accept(File,String)",1,24,n/a,16,2,2,4,3
"org.apache.commons.io.filefilter.NameFileFilter.toString()",8,42,n/a,21,3,0,12,4
"org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(IOFileFilter)",1,6,n/a,12,1,1,3,2
"org.apache.commons.io.filefilter.NotFileFilter.accept(File)",1,21,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.NotFileFilter.accept(File,String)",1,24,n/a,11,0,2,1,1
"org.apache.commons.io.filefilter.NotFileFilter.toString()",2,42,n/a,9,0,0,1,1
"org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter()",1,4,n/a,8,0,0,1,1
"org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(IOFileFilter,IOFileFilter)",4,10,n/a,15,1,2,5,3
"org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(List<IOFileFilter>)",2,4,n/a,14,1,1,3,2
"org.apache.commons.io.filefilter.OrFileFilter.accept(File)",1,21,n/a,12,2,1,4,3
"org.apache.commons.io.filefilter.OrFileFilter.accept(File,String)",1,26,n/a,12,2,2,4,3
"org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(IOFileFilter)",1,4,n/a,6,0,1,1,1
"org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()",1,8,n/a,6,0,0,1,1
"org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(IOFileFilter)",1,3,n/a,6,0,1,1,1
"org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(List<IOFileFilter>)",2,1,n/a,7,0,1,2,1
"org.apache.commons.io.filefilter.OrFileFilter.toString()",11,42,n/a,22,3,0,13,5
"org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(List<String>)",1,2,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(List<String>,IOCase)",3,3,n/a,17,1,2,4,3
"org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(String)",1,3,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(String,IOCase)",1,4,n/a,16,1,2,4,3
"org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(String[])",1,2,n/a,12,0,1,1,1
"org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(String[],IOCase)",2,3,n/a,20,1,2,5,3
"org.apache.commons.io.filefilter.PrefixFileFilter.accept(File)",2,21,n/a,16,2,1,5,3
"org.apache.commons.io.filefilter.PrefixFileFilter.accept(File,String)",1,24,n/a,16,2,2,4,3
"org.apache.commons.io.filefilter.PrefixFileFilter.toString()",8,42,n/a,21,3,0,12,4
"org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(Pattern)",1,2,n/a,12,1,1,3,2
"org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(String)",2,3,n/a,12,1,1,3,2
"org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(String,IOCase)",3,2,n/a,17,1,2,6,4
"org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(String,int)",2,2,n/a,13,1,2,3,2
"org.apache.commons.io.filefilter.RegexFileFilter.accept(File,String)",2,24,n/a,11,0,2,1,1
"org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(long)",1,1,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(long,boolean)",1,4,n/a,16,1,2,4,2
"org.apache.commons.io.filefilter.SizeFileFilter.accept(File)",1,21,n/a,16,0,1,2,2
"org.apache.commons.io.filefilter.SizeFileFilter.toString()",1,42,n/a,10,0,0,2,2
"org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(List<String>)",1,2,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(List<String>,IOCase)",3,3,n/a,17,1,2,4,3
"org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(String)",1,3,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(String,IOCase)",1,4,n/a,16,1,2,4,3
"org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(String[])",1,3,n/a,12,0,1,1,1
"org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(String[],IOCase)",2,3,n/a,20,1,2,5,3
"org.apache.commons.io.filefilter.SuffixFileFilter.accept(File)",2,21,n/a,16,2,1,5,3
"org.apache.commons.io.filefilter.SuffixFileFilter.accept(File,String)",1,24,n/a,16,2,2,4,3
"org.apache.commons.io.filefilter.SuffixFileFilter.toString()",8,42,n/a,21,3,0,12,4
"org.apache.commons.io.filefilter.TrueFileFilter.TrueFileFilter()",0,2,n/a,5,0,0,0,1
"org.apache.commons.io.filefilter.TrueFileFilter.accept(File)",0,20,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.TrueFileFilter.accept(File,String)",0,23,n/a,10,0,2,1,1
"org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(List<String>)",1,2,n/a,10,0,1,1,1
"org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(List<String>,IOCase)",3,1,n/a,15,1,2,4,3
"org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(String)",1,6,n/a,9,0,1,1,1
"org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(String,IOCase)",1,5,n/a,14,1,2,4,3
"org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(String[])",1,2,n/a,12,0,1,1,1
"org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(String[],IOCase)",2,5,n/a,18,1,2,5,3
"org.apache.commons.io.filefilter.WildcardFileFilter.accept(File)",2,21,n/a,16,2,1,5,3
"org.apache.commons.io.filefilter.WildcardFileFilter.accept(File,String)",1,24,n/a,16,2,2,4,3
"org.apache.commons.io.filefilter.WildcardFileFilter.toString()",8,42,n/a,21,3,0,12,4
"org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(List<String>)",3,2,n/a,13,1,1,3,2
"org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(String)",1,4,n/a,12,1,1,3,2
"org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(String[])",2,2,n/a,13,1,1,4,2
"org.apache.commons.io.filefilter.WildcardFilter.accept(File)",3,21,n/a,18,2,1,6,4
"org.apache.commons.io.filefilter.WildcardFilter.accept(File,String)",3,24,n/a,19,2,2,6,5
"org.apache.commons.io.input.AutoCloseInputStream.AutoCloseInputStream(InputStream)",1,1,n/a,8,0,1,1,1
"org.apache.commons.io.input.AutoCloseInputStream.afterRead(int)",1,3,n/a,13,1,1,2,2
"org.apache.commons.io.input.AutoCloseInputStream.close()",2,26,n/a,18,0,0,2,1
"org.apache.commons.io.input.AutoCloseInputStream.finalize()",2,1,n/a,11,0,0,2,1
"org.apache.commons.io.input.BOMInputStream.BOMInputStream(InputStream)",1,20,n/a,8,0,1,1,1
"org.apache.commons.io.input.BOMInputStream.BOMInputStream(InputStream,ByteOrderMark...)",1,1,n/a,9,0,2,1,1
"org.apache.commons.io.input.BOMInputStream.BOMInputStream(InputStream,boolean)",1,2,n/a,10,0,2,1,1
"org.apache.commons.io.input.BOMInputStream.BOMInputStream(InputStream,boolean,ByteOrderMark...)",3,9,n/a,16,1,3,5,3
"org.apache.commons.io.input.BOMInputStream.find()",1,1,n/a,13,2,0,4,3
"org.apache.commons.io.input.BOMInputStream.getBOM()",4,12,n/a,30,4,0,18,7
"org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()",2,4,n/a,11,0,0,2,2
"org.apache.commons.io.input.BOMInputStream.hasBOM()",1,8,n/a,10,0,0,1,1
"org.apache.commons.io.input.BOMInputStream.hasBOM(ByteOrderMark)",4,10,n/a,16,1,1,3,3
"org.apache.commons.io.input.BOMInputStream.mark(int)",1,13,n/a,10,0,1,3,1
"org.apache.commons.io.input.BOMInputStream.matches(ByteOrderMark)",3,1,n/a,17,2,1,8,4
"org.apache.commons.io.input.BOMInputStream.read()",2,110,n/a,11,0,0,2,2
"org.apache.commons.io.input.BOMInputStream.read(byte[])",1,26,n/a,12,0,1,1,1
"org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)",2,32,n/a,24,2,3,10,5
"org.apache.commons.io.input.BOMInputStream.readFirstBytes()",1,3,n/a,12,0,0,2,2
"org.apache.commons.io.input.BOMInputStream.reset()",1,17,n/a,12,1,0,4,2
"org.apache.commons.io.input.BOMInputStream.skip(long)",2,20,n/a,14,1,1,3,3
"org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(InputStream)",1,1,n/a,9,0,1,1,1
"org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(InputStream,long)",0,8,n/a,13,0,2,2,1
"org.apache.commons.io.input.BoundedInputStream.available()",1,17,n/a,10,1,0,3,3
"org.apache.commons.io.input.BoundedInputStream.close()",1,25,n/a,11,1,0,2,2
"org.apache.commons.io.input.BoundedInputStream.isPropagateClose()",0,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.BoundedInputStream.mark(int)",1,12,n/a,9,0,1,2,1
"org.apache.commons.io.input.BoundedInputStream.markSupported()",1,8,n/a,8,0,0,1,1
"org.apache.commons.io.input.BoundedInputStream.read()",1,75,n/a,16,1,0,5,3
"org.apache.commons.io.input.BoundedInputStream.read(byte[])",1,20,n/a,11,0,1,1,1
"org.apache.commons.io.input.BoundedInputStream.read(byte[],int,int)",2,25,n/a,22,1,3,8,5
"org.apache.commons.io.input.BoundedInputStream.reset()",1,14,n/a,9,0,0,2,1
"org.apache.commons.io.input.BoundedInputStream.setPropagateClose(boolean)",0,0,n/a,12,0,1,1,1
"org.apache.commons.io.input.BoundedInputStream.skip(long)",2,16,n/a,13,0,1,4,2
"org.apache.commons.io.input.BoundedInputStream.toString()",1,31,n/a,8,0,0,1,1
"org.apache.commons.io.input.BrokenInputStream.BrokenInputStream()",2,0,n/a,6,0,0,1,1
"org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(IOException)",0,3,n/a,8,0,1,1,1
"org.apache.commons.io.input.BrokenInputStream.available()",0,17,n/a,10,0,0,1,1
"org.apache.commons.io.input.BrokenInputStream.close()",0,21,n/a,9,0,0,1,1
"org.apache.commons.io.input.BrokenInputStream.read()",0,68,n/a,10,0,0,1,1
"org.apache.commons.io.input.BrokenInputStream.reset()",0,14,n/a,9,0,0,1,1
"org.apache.commons.io.input.BrokenInputStream.skip(long)",0,16,n/a,11,0,1,1,1
"org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(CharSequence)",0,7,n/a,8,0,1,1,2
"org.apache.commons.io.input.CharSequenceReader.close()",0,14,n/a,8,0,0,2,1
"org.apache.commons.io.input.CharSequenceReader.mark(int)",0,6,n/a,9,0,1,1,1
"org.apache.commons.io.input.CharSequenceReader.markSupported()",0,5,n/a,9,0,0,1,1
"org.apache.commons.io.input.CharSequenceReader.read()",2,24,n/a,14,1,0,3,2
"org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)",4,10,n/a,32,2,3,16,7
"org.apache.commons.io.input.CharSequenceReader.reset()",0,9,n/a,8,0,0,1,1
"org.apache.commons.io.input.CharSequenceReader.skip(long)",4,15,n/a,20,1,1,8,3
"org.apache.commons.io.input.CharSequenceReader.toString()",1,31,n/a,10,0,0,1,1
"org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream(ClassLoader,InputStream)",1,1,n/a,14,0,2,2,1
"org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(ObjectStreamClass)",3,1,n/a,21,1,1,4,2
"org.apache.commons.io.input.CloseShieldInputStream.CloseShieldInputStream(InputStream)",1,1,n/a,9,0,1,1,1
"org.apache.commons.io.input.CloseShieldInputStream.close()",1,23,n/a,9,0,0,1,1
"org.apache.commons.io.input.ClosedInputStream.read()",0,69,n/a,9,0,0,1,1
"org.apache.commons.io.input.CountingInputStream.CountingInputStream(InputStream)",1,10,n/a,8,0,1,1,1
"org.apache.commons.io.input.CountingInputStream.afterRead(int)",0,3,n/a,12,1,1,2,2
"org.apache.commons.io.input.CountingInputStream.getByteCount()",0,3,n/a,13,0,0,1,1
"org.apache.commons.io.input.CountingInputStream.getCount()",2,16,n/a,17,1,0,4,2
"org.apache.commons.io.input.CountingInputStream.resetByteCount()",0,3,n/a,15,0,0,3,1
"org.apache.commons.io.input.CountingInputStream.resetCount()",2,2,n/a,17,1,0,4,2
"org.apache.commons.io.input.CountingInputStream.skip(long)",1,21,n/a,15,0,1,3,1
"org.apache.commons.io.input.DemuxInputStream.bindStream(InputStream)",2,1,n/a,12,0,1,3,1
"org.apache.commons.io.input.DemuxInputStream.close()",2,21,n/a,15,1,0,3,2
"org.apache.commons.io.input.DemuxInputStream.read()",2,70,n/a,20,1,0,4,2
"org.apache.commons.io.input.NullInputStream.NullInputStream(long)",1,4,n/a,9,0,1,1,1
"org.apache.commons.io.input.NullInputStream.NullInputStream(long,boolean,boolean)",0,2,n/a,16,0,3,3,1
"org.apache.commons.io.input.NullInputStream.available()",0,17,n/a,16,1,0,6,3
"org.apache.commons.io.input.NullInputStream.close()",0,23,n/a,12,0,0,3,1
"org.apache.commons.io.input.NullInputStream.doEndOfFile()",1,3,n/a,15,1,0,4,2
"org.apache.commons.io.input.NullInputStream.getPosition()",0,2,n/a,8,0,0,1,1
"org.apache.commons.io.input.NullInputStream.getSize()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.input.NullInputStream.mark(int)",1,12,n/a,15,1,1,4,2
"org.apache.commons.io.input.NullInputStream.markSupported()",0,8,n/a,9,0,0,1,1
"org.apache.commons.io.input.NullInputStream.processByte()",0,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.NullInputStream.processBytes(byte[],int,int)",0,1,n/a,13,0,3,0,1
"org.apache.commons.io.input.NullInputStream.read()",3,68,n/a,21,1,0,6,3
"org.apache.commons.io.input.NullInputStream.read(byte[])",1,20,n/a,15,0,1,1,1
"org.apache.commons.io.input.NullInputStream.read(byte[],int,int)",3,24,n/a,30,1,3,11,4
"org.apache.commons.io.input.NullInputStream.reset()",3,14,n/a,24,1,0,8,4
"org.apache.commons.io.input.NullInputStream.skip(long)",2,16,n/a,27,1,1,10,4
"org.apache.commons.io.input.NullReader.NullReader(long)",1,3,n/a,9,0,1,1,1
"org.apache.commons.io.input.NullReader.NullReader(long,boolean,boolean)",0,2,n/a,16,0,3,3,1
"org.apache.commons.io.input.NullReader.close()",0,15,n/a,12,0,0,3,1
"org.apache.commons.io.input.NullReader.doEndOfFile()",1,3,n/a,15,1,0,4,2
"org.apache.commons.io.input.NullReader.getPosition()",0,3,n/a,8,0,0,1,1
"org.apache.commons.io.input.NullReader.getSize()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.input.NullReader.mark(int)",1,5,n/a,15,1,1,4,2
"org.apache.commons.io.input.NullReader.markSupported()",0,5,n/a,9,0,0,1,1
"org.apache.commons.io.input.NullReader.processChar()",0,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.NullReader.processChars(char[],int,int)",0,1,n/a,13,0,3,0,1
"org.apache.commons.io.input.NullReader.read()",3,26,n/a,21,1,0,6,3
"org.apache.commons.io.input.NullReader.read(char[])",1,14,n/a,15,0,1,1,1
"org.apache.commons.io.input.NullReader.read(char[],int,int)",3,11,n/a,30,1,3,11,4
"org.apache.commons.io.input.NullReader.reset()",3,8,n/a,24,1,0,8,4
"org.apache.commons.io.input.NullReader.skip(long)",2,15,n/a,27,1,1,10,4
"org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(InputStream)",1,8,n/a,9,0,1,1,1
"org.apache.commons.io.input.ProxyInputStream.afterRead(int)",0,3,n/a,19,0,1,0,1
"org.apache.commons.io.input.ProxyInputStream.available()",2,19,n/a,14,1,0,4,2
"org.apache.commons.io.input.ProxyInputStream.beforeRead(int)",0,3,n/a,20,0,1,0,1
"org.apache.commons.io.input.ProxyInputStream.close()",2,23,n/a,12,1,0,3,2
"org.apache.commons.io.input.ProxyInputStream.handleIOException(IOException)",0,7,n/a,12,0,1,1,1
"org.apache.commons.io.input.ProxyInputStream.mark(int)",1,13,n/a,8,0,1,1,1
"org.apache.commons.io.input.ProxyInputStream.markSupported()",1,8,n/a,8,0,0,1,1
"org.apache.commons.io.input.ProxyInputStream.read()",4,76,n/a,17,1,0,7,3
"org.apache.commons.io.input.ProxyInputStream.read(byte[])",4,26,n/a,18,1,1,7,3
"org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)",4,31,n/a,20,1,3,7,2
"org.apache.commons.io.input.ProxyInputStream.reset()",2,17,n/a,12,1,0,3,2
"org.apache.commons.io.input.ProxyInputStream.skip(long)",2,20,n/a,15,1,1,4,2
"org.apache.commons.io.input.ProxyReader.ProxyReader(Reader)",1,1,n/a,9,0,1,1,1
"org.apache.commons.io.input.ProxyReader.afterRead(int)",0,4,n/a,19,0,1,0,1
"org.apache.commons.io.input.ProxyReader.beforeRead(int)",0,4,n/a,20,0,1,0,1
"org.apache.commons.io.input.ProxyReader.close()",2,14,n/a,12,1,0,3,2
"org.apache.commons.io.input.ProxyReader.handleIOException(IOException)",0,9,n/a,12,0,1,1,1
"org.apache.commons.io.input.ProxyReader.mark(int)",2,5,n/a,13,1,1,3,2
"org.apache.commons.io.input.ProxyReader.markSupported()",1,5,n/a,8,0,0,1,1
"org.apache.commons.io.input.ProxyReader.read()",4,24,n/a,17,1,0,7,3
"org.apache.commons.io.input.ProxyReader.read(CharBuffer)",5,3,n/a,19,1,1,7,3
"org.apache.commons.io.input.ProxyReader.read(char[])",4,15,n/a,18,1,1,7,3
"org.apache.commons.io.input.ProxyReader.read(char[],int,int)",4,11,n/a,20,1,3,7,2
"org.apache.commons.io.input.ProxyReader.ready()",2,1,n/a,14,1,0,4,2
"org.apache.commons.io.input.ProxyReader.reset()",2,10,n/a,12,1,0,3,2
"org.apache.commons.io.input.ProxyReader.skip(long)",2,17,n/a,15,1,1,4,2
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader)",2,1,n/a,9,0,1,1,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,Charset)",1,1,n/a,10,0,2,1,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,Charset,int)",3,2,n/a,13,0,3,4,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,String)",1,2,n/a,10,0,2,1,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,String,int)",2,1,n/a,10,0,3,1,1
"org.apache.commons.io.input.ReaderInputStream.close()",1,21,n/a,9,0,0,1,1
"org.apache.commons.io.input.ReaderInputStream.read()",1,70,n/a,12,0,0,2,2
"org.apache.commons.io.input.ReaderInputStream.read(byte[])",1,21,n/a,12,0,1,1,1
"org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)",16,26,n/a,45,4,3,22,11
"org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream(InputStream)",1,2,n/a,9,0,1,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readBoolean()",1,3,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readByte()",1,3,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readChar()",1,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readDouble()",1,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readFloat()",1,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[])",1,1,n/a,12,0,1,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[],int,int)",2,1,n/a,24,2,3,7,3
"org.apache.commons.io.input.SwappedDataInputStream.readInt()",1,2,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readLine()",1,1,n/a,12,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readLong()",1,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readShort()",1,3,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readUTF()",1,1,n/a,12,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte()",1,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort()",1,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.SwappedDataInputStream.skipBytes(int)",1,1,n/a,12,0,1,1,1
"org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(InputStream)",1,4,n/a,8,0,1,1,1
"org.apache.commons.io.input.TaggedInputStream.handleIOException(IOException)",1,7,n/a,10,0,1,1,1
"org.apache.commons.io.input.TaggedInputStream.isCauseOf(Throwable)",1,5,n/a,10,0,1,1,1
"org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(Throwable)",1,6,n/a,13,0,1,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,TailerListener)",1,0,n/a,8,0,2,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,TailerListener,long)",1,1,n/a,9,0,3,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,TailerListener,long,boolean)",1,4,n/a,15,0,4,5,1
"org.apache.commons.io.input.Tailer.create(File,TailerListener)",1,0,n/a,11,0,2,1,1
"org.apache.commons.io.input.Tailer.create(File,TailerListener,long)",1,0,n/a,11,0,3,1,1
"org.apache.commons.io.input.Tailer.create(File,TailerListener,long,boolean)",4,3,n/a,16,0,4,5,1
"org.apache.commons.io.input.Tailer.getDelay()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.input.Tailer.getFile()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.input.Tailer.readLines(RandomAccessFile)",4,2,n/a,15,1,1,5,2
"org.apache.commons.io.input.Tailer.run()",20,1,n/a,70,4,0,35,12
"org.apache.commons.io.input.Tailer.stop()",0,3,n/a,6,0,0,1,1
"org.apache.commons.io.input.TailerListener.fileNotFound()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.apache.commons.io.input.TailerListener.fileRotated()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.commons.io.input.TailerListener.handle(Exception)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.input.TailerListener.handle(String)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.input.TailerListener.init(Tailer)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.input.TailerListenerAdapter.fileNotFound()",0,2,n/a,5,0,0,0,1
"org.apache.commons.io.input.TailerListenerAdapter.fileRotated()",0,1,n/a,8,0,0,0,1
"org.apache.commons.io.input.TailerListenerAdapter.handle(Exception)",0,1,n/a,6,0,1,0,1
"org.apache.commons.io.input.TailerListenerAdapter.handle(String)",0,1,n/a,6,0,1,0,1
"org.apache.commons.io.input.TailerListenerAdapter.init(Tailer)",0,1,n/a,7,0,1,0,1
"org.apache.commons.io.input.TeeInputStream.TeeInputStream(InputStream,OutputStream)",1,1,n/a,11,0,2,1,1
"org.apache.commons.io.input.TeeInputStream.TeeInputStream(InputStream,OutputStream,boolean)",1,1,n/a,17,0,3,3,1
"org.apache.commons.io.input.TeeInputStream.close()",2,24,n/a,17,2,0,4,2
"org.apache.commons.io.input.TeeInputStream.read()",2,76,n/a,15,1,0,4,2
"org.apache.commons.io.input.TeeInputStream.read(byte[])",2,26,n/a,16,1,1,4,2
"org.apache.commons.io.input.TeeInputStream.read(byte[],int,int)",2,31,n/a,18,1,3,4,2
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(File)",2,0,n/a,15,0,1,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream)",1,5,n/a,14,0,1,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream,String)",1,0,n/a,21,0,2,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream,String,boolean)",1,6,n/a,37,0,3,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream,String,boolean,String)",2,1,n/a,49,2,4,6,4
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream,boolean)",2,5,n/a,40,2,2,6,3
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(URL)",2,0,n/a,20,0,1,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(URLConnection)",6,1,n/a,37,2,1,11,5
"org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(String,String,String,String,String,InputStream,boolean)",13,1,n/a,59,4,7,19,13
"org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(String,String,String,InputStream)",21,2,n/a,54,2,4,21,20
"org.apache.commons.io.input.XmlStreamReader.close()",1,14,n/a,9,0,0,1,1
"org.apache.commons.io.input.XmlStreamReader.doHttpStream(InputStream,String,boolean)",10,3,n/a,22,0,3,9,1
"org.apache.commons.io.input.XmlStreamReader.doLenientDetection(String,InputStream,XmlStreamReaderException)",7,4,n/a,36,3,3,16,8
"org.apache.commons.io.input.XmlStreamReader.doRawStream(InputStream,boolean)",8,2,n/a,18,0,2,7,1
"org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(String)",6,1,n/a,20,2,1,9,5
"org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(String)",3,1,n/a,19,2,1,8,3
"org.apache.commons.io.input.XmlStreamReader.getDefaultEncoding()",0,0,n/a,11,0,0,1,1
"org.apache.commons.io.input.XmlStreamReader.getEncoding()",0,12,n/a,8,0,0,1,1
"org.apache.commons.io.input.XmlStreamReader.getXmlProlog(InputStream,String)",21,2,n/a,55,3,2,33,10
"org.apache.commons.io.input.XmlStreamReader.isAppXml(String)",5,1,n/a,14,0,1,1,6
"org.apache.commons.io.input.XmlStreamReader.isTextXml(String)",4,1,n/a,13,0,1,1,5
"org.apache.commons.io.input.XmlStreamReader.read(char[],int,int)",1,10,n/a,12,0,3,1,1
"org.apache.commons.io.input.XmlStreamReader.setDefaultEncoding(String)",0,2,n/a,13,0,1,1,1
"org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(String,String,String,String)",1,4,n/a,15,0,4,1,1
"org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(String,String,String,String,String,String)",1,4,n/a,22,0,6,6,1
"org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()",0,1,n/a,11,0,0,1,1
"org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime()",0,0,n/a,10,0,0,1,1
"org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()",0,1,n/a,8,0,0,1,1
"org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemEntry.FilesystemEntry(File)",1,1,n/a,8,0,1,1,1
"org.apache.commons.io.monitor.FilesystemEntry.FilesystemEntry(FilesystemEntry,File)",2,2,n/a,14,1,2,5,2
"org.apache.commons.io.monitor.FilesystemEntry.getChildren()",0,5,n/a,10,0,0,1,2
"org.apache.commons.io.monitor.FilesystemEntry.getFile()",0,12,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemEntry.getLastModified()",0,0,n/a,9,0,0,1,1
"org.apache.commons.io.monitor.FilesystemEntry.getLevel()",1,1,n/a,8,0,0,1,2
"org.apache.commons.io.monitor.FilesystemEntry.getName()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemEntry.getParent()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemEntry.hasChanged()",1,3,n/a,11,0,0,1,1
"org.apache.commons.io.monitor.FilesystemEntry.isDirectory()",0,3,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemEntry.isExists()",0,1,n/a,9,0,0,1,1
"org.apache.commons.io.monitor.FilesystemEntry.newChildInstance(File)",1,2,n/a,12,0,1,1,1
"org.apache.commons.io.monitor.FilesystemEntry.refresh()",4,5,n/a,14,1,0,5,2
"org.apache.commons.io.monitor.FilesystemEntry.setChildren(FilesystemEntry[])",0,3,n/a,8,0,1,1,1
"org.apache.commons.io.monitor.FilesystemEntry.setDirectory(boolean)",0,0,n/a,8,0,1,1,1
"org.apache.commons.io.monitor.FilesystemEntry.setExists(boolean)",0,0,n/a,9,0,1,1,1
"org.apache.commons.io.monitor.FilesystemEntry.setFile(File)",0,1,n/a,8,0,1,1,1
"org.apache.commons.io.monitor.FilesystemEntry.setLastModified(long)",0,0,n/a,9,0,1,1,1
"org.apache.commons.io.monitor.FilesystemEntry.setName(String)",0,0,n/a,8,0,1,1,1
"org.apache.commons.io.monitor.FilesystemListener.onDirectoryChange(File)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.monitor.FilesystemListener.onDirectoryCreate(File)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.monitor.FilesystemListener.onDirectoryDelete(File)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.monitor.FilesystemListener.onFileChange(File)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.monitor.FilesystemListener.onFileCreate(File)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.monitor.FilesystemListener.onFileDelete(File)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.monitor.FilesystemListener.onStart(FilesystemObserver)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.monitor.FilesystemListener.onStop(FilesystemObserver)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.commons.io.monitor.FilesystemListenerAdaptor.onDirectoryChange(File)",0,1,n/a,7,0,1,0,1
"org.apache.commons.io.monitor.FilesystemListenerAdaptor.onDirectoryCreate(File)",0,1,n/a,7,0,1,0,1
"org.apache.commons.io.monitor.FilesystemListenerAdaptor.onDirectoryDelete(File)",0,1,n/a,7,0,1,0,1
"org.apache.commons.io.monitor.FilesystemListenerAdaptor.onFileChange(File)",0,1,n/a,7,0,1,0,1
"org.apache.commons.io.monitor.FilesystemListenerAdaptor.onFileCreate(File)",0,1,n/a,7,0,1,0,1
"org.apache.commons.io.monitor.FilesystemListenerAdaptor.onFileDelete(File)",0,1,n/a,7,0,1,0,1
"org.apache.commons.io.monitor.FilesystemListenerAdaptor.onStart(FilesystemObserver)",0,1,n/a,7,0,1,0,1
"org.apache.commons.io.monitor.FilesystemListenerAdaptor.onStop(FilesystemObserver)",0,1,n/a,7,0,1,0,1
"org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor()",1,0,n/a,6,0,0,1,1
"org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor(long)",0,2,n/a,9,0,1,1,1
"org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor(long,FilesystemObserver...)",2,1,n/a,15,2,2,4,3
"org.apache.commons.io.monitor.FilesystemMonitor.addObserver(FilesystemObserver)",1,1,n/a,10,1,1,2,2
"org.apache.commons.io.monitor.FilesystemMonitor.getObservers()",0,0,n/a,9,0,0,1,1
"org.apache.commons.io.monitor.FilesystemMonitor.removeObserver(FilesystemObserver)",1,0,n/a,11,2,1,2,3
"org.apache.commons.io.monitor.FilesystemMonitor.run()",2,1,n/a,17,2,0,7,5
"org.apache.commons.io.monitor.FilesystemMonitor.start()",3,1,n/a,13,1,0,5,2
"org.apache.commons.io.monitor.FilesystemMonitor.stop()",4,1,n/a,16,1,0,6,3
"org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(File)",1,1,n/a,8,0,1,1,1
"org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(File,FileFilter)",1,4,n/a,9,0,2,1,1
"org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(File,FileFilter,Comparator<File>)",2,2,n/a,11,0,3,1,1
"org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(FilesystemEntry,FileFilter,Comparator<File>)",3,1,n/a,23,1,3,9,4
"org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(String)",2,0,n/a,8,0,1,1,1
"org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(String,FileFilter)",2,0,n/a,9,0,2,1,1
"org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(String,FileFilter,Comparator<File>)",2,0,n/a,11,0,3,1,1
"org.apache.commons.io.monitor.FilesystemObserver.addListener(FilesystemListener)",1,2,n/a,10,1,1,2,2
"org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify()",10,4,n/a,22,1,0,9,5
"org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify(FilesystemEntry,FilesystemEntry[],File[])",16,4,n/a,32,2,3,19,8
"org.apache.commons.io.monitor.FilesystemObserver.createFileEntry(FilesystemEntry,File)",5,4,n/a,18,1,2,10,3
"org.apache.commons.io.monitor.FilesystemObserver.destroy()",0,1,n/a,7,0,0,0,1
"org.apache.commons.io.monitor.FilesystemObserver.doCreate(FilesystemEntry)",7,3,n/a,18,2,1,7,4
"org.apache.commons.io.monitor.FilesystemObserver.doDelete(FilesystemEntry)",5,1,n/a,14,2,1,4,3
"org.apache.commons.io.monitor.FilesystemObserver.doMatch(FilesystemEntry,File)",8,1,n/a,19,3,2,7,4
"org.apache.commons.io.monitor.FilesystemObserver.getComparator()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemObserver.getDirectory()",1,1,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemObserver.getFileFilter()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemObserver.getListeners()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemObserver.getRootEntry()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.monitor.FilesystemObserver.initialize()",5,3,n/a,14,1,0,8,3
"org.apache.commons.io.monitor.FilesystemObserver.listFiles(File)",4,4,n/a,20,1,1,8,6
"org.apache.commons.io.monitor.FilesystemObserver.removeListener(FilesystemListener)",1,0,n/a,11,2,1,2,3
"org.apache.commons.io.monitor.FilesystemObserver.toString()",16,31,n/a,20,1,0,11,2
"org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream()",2,0,n/a,6,0,0,1,1
"org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(IOException)",0,3,n/a,8,0,1,1,1
"org.apache.commons.io.output.BrokenOutputStream.close()",0,18,n/a,9,0,0,1,1
"org.apache.commons.io.output.BrokenOutputStream.flush()",0,10,n/a,9,0,0,1,1
"org.apache.commons.io.output.BrokenOutputStream.write(int)",0,24,n/a,10,0,1,1,1
"org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream()",1,80,n/a,7,0,0,1,1
"org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(int)",2,3,n/a,16,1,1,4,2
"org.apache.commons.io.output.ByteArrayOutputStream.close()",0,18,n/a,12,0,0,0,1
"org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(int)",4,4,n/a,29,2,1,13,3
"org.apache.commons.io.output.ByteArrayOutputStream.reset()",1,3,n/a,9,0,0,4,1
"org.apache.commons.io.output.ByteArrayOutputStream.size()",0,45,n/a,7,0,0,1,1
"org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream()",8,1,n/a,26,2,0,11,4
"org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(InputStream)",3,1,n/a,27,0,1,3,1
"org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()",2,54,n/a,25,2,0,13,4
"org.apache.commons.io.output.ByteArrayOutputStream.toString()",2,38,n/a,9,0,0,1,1
"org.apache.commons.io.output.ByteArrayOutputStream.toString(String)",2,2,n/a,12,0,1,1,1
"org.apache.commons.io.output.ByteArrayOutputStream.write(InputStream)",3,2,n/a,27,2,1,12,3
"org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)",4,11,n/a,33,3,3,16,9
"org.apache.commons.io.output.ByteArrayOutputStream.write(int)",1,26,n/a,14,1,1,6,2
"org.apache.commons.io.output.ByteArrayOutputStream.writeTo(OutputStream)",2,3,n/a,19,2,1,7,3
"org.apache.commons.io.output.CloseShieldOutputStream.CloseShieldOutputStream(OutputStream)",1,1,n/a,9,0,1,1,1
"org.apache.commons.io.output.CloseShieldOutputStream.close()",1,21,n/a,9,0,0,1,1
"org.apache.commons.io.output.ClosedOutputStream.write(int)",1,25,n/a,10,0,1,1,1
"org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(OutputStream)",1,2,n/a,8,0,1,1,1
"org.apache.commons.io.output.CountingOutputStream.beforeWrite(int)",0,3,n/a,10,0,1,1,1
"org.apache.commons.io.output.CountingOutputStream.getByteCount()",0,3,n/a,13,0,0,1,1
"org.apache.commons.io.output.CountingOutputStream.getCount()",2,5,n/a,17,1,0,4,2
"org.apache.commons.io.output.CountingOutputStream.resetByteCount()",0,3,n/a,15,0,0,3,1
"org.apache.commons.io.output.CountingOutputStream.resetCount()",2,2,n/a,17,1,0,4,2
"org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(int,File)",1,6,n/a,11,0,2,1,1
"org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(int,File,String,String,File)",2,2,n/a,19,0,5,7,1
"org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(int,String,String,File)",2,4,n/a,18,1,4,3,2
"org.apache.commons.io.output.DeferredFileOutputStream.close()",1,28,n/a,11,0,0,2,1
"org.apache.commons.io.output.DeferredFileOutputStream.getData()",1,6,n/a,16,1,0,3,2
"org.apache.commons.io.output.DeferredFileOutputStream.getFile()",0,17,n/a,18,0,0,1,1
"org.apache.commons.io.output.DeferredFileOutputStream.getStream()",0,5,n/a,13,0,0,1,1
"org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()",1,10,n/a,11,0,0,1,1
"org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached()",3,2,n/a,19,1,0,6,2
"org.apache.commons.io.output.DeferredFileOutputStream.writeTo(OutputStream)",6,4,n/a,30,2,1,8,3
"org.apache.commons.io.output.DemuxOutputStream.bindStream(OutputStream)",2,1,n/a,12,0,1,3,1
"org.apache.commons.io.output.DemuxOutputStream.close()",2,18,n/a,15,1,0,3,2
"org.apache.commons.io.output.DemuxOutputStream.flush()",2,10,n/a,15,1,0,3,2
"org.apache.commons.io.output.DemuxOutputStream.write(int)",2,25,n/a,16,1,1,3,2
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,Charset)",1,0,n/a,11,0,2,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,Charset,boolean)",2,3,n/a,13,0,3,2,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,CharsetEncoder)",1,0,n/a,11,0,2,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,CharsetEncoder,boolean)",2,3,n/a,13,0,3,2,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,String)",1,6,n/a,11,0,2,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,String,boolean)",2,3,n/a,13,0,3,2,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,Charset)",2,0,n/a,11,0,2,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,Charset,boolean)",2,0,n/a,12,0,3,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,CharsetEncoder)",2,0,n/a,11,0,2,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,CharsetEncoder,boolean)",2,0,n/a,12,0,3,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,String)",2,1,n/a,11,0,2,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,String,boolean)",2,0,n/a,12,0,3,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.close()",1,13,n/a,8,0,0,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.flush()",1,32,n/a,8,0,0,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.initWriter(File,Object,boolean)",13,3,n/a,47,2,3,25,9
"org.apache.commons.io.output.FileWriterWithEncoding.write(String)",1,29,n/a,9,0,1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.write(String,int,int)",1,6,n/a,11,0,3,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.write(char[])",1,7,n/a,9,0,1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.write(char[],int,int)",1,11,n/a,11,0,3,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.write(int)",1,7,n/a,9,0,1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File)",1,7,n/a,11,0,1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,String)",1,1,n/a,11,0,2,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,String,boolean,String)",15,2,n/a,34,1,4,14,4
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,boolean)",1,0,n/a,11,0,2,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,boolean,String)",1,5,n/a,12,0,3,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(String)",1,1,n/a,11,0,1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(String,boolean)",1,0,n/a,11,0,2,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(String,boolean,String)",2,2,n/a,12,0,3,1,1
"org.apache.commons.io.output.LockableFileWriter.close()",2,14,n/a,13,1,0,3,1
"org.apache.commons.io.output.LockableFileWriter.createLock()",4,1,n/a,14,2,0,4,2
"org.apache.commons.io.output.LockableFileWriter.flush()",1,29,n/a,8,0,0,1,1
"org.apache.commons.io.output.LockableFileWriter.initWriter(File,String,boolean)",14,1,n/a,40,2,3,21,6
"org.apache.commons.io.output.LockableFileWriter.testLockDir(File)",6,1,n/a,17,1,1,4,3
"org.apache.commons.io.output.LockableFileWriter.write(String)",1,26,n/a,9,0,1,1,1
"org.apache.commons.io.output.LockableFileWriter.write(String,int,int)",1,6,n/a,11,0,3,1,1
"org.apache.commons.io.output.LockableFileWriter.write(char[])",1,7,n/a,9,0,1,1,1
"org.apache.commons.io.output.LockableFileWriter.write(char[],int,int)",1,11,n/a,11,0,3,1,1
"org.apache.commons.io.output.LockableFileWriter.write(int)",1,7,n/a,9,0,1,1,1
"org.apache.commons.io.output.NullOutputStream.write(byte[])",0,25,n/a,9,0,1,0,1
"org.apache.commons.io.output.NullOutputStream.write(byte[],int,int)",0,11,n/a,10,0,3,0,1
"org.apache.commons.io.output.NullOutputStream.write(int)",0,27,n/a,8,0,1,0,1
"org.apache.commons.io.output.NullWriter.NullWriter()",0,6,n/a,5,0,0,0,1
"org.apache.commons.io.output.NullWriter.append(CharSequence)",0,8,n/a,11,0,1,1,1
"org.apache.commons.io.output.NullWriter.append(CharSequence,int,int)",0,4,n/a,13,0,3,1,1
"org.apache.commons.io.output.NullWriter.append(char)",0,5,n/a,11,0,1,1,1
"org.apache.commons.io.output.NullWriter.close()",0,14,n/a,5,0,0,0,1
"org.apache.commons.io.output.NullWriter.flush()",0,30,n/a,5,0,0,0,1
"org.apache.commons.io.output.NullWriter.write(String)",0,27,n/a,8,0,1,0,1
"org.apache.commons.io.output.NullWriter.write(String,int,int)",0,7,n/a,10,0,3,0,1
"org.apache.commons.io.output.NullWriter.write(char[])",0,8,n/a,8,0,1,0,1
"org.apache.commons.io.output.NullWriter.write(char[],int,int)",0,12,n/a,10,0,3,0,1
"org.apache.commons.io.output.NullWriter.write(int)",0,8,n/a,8,0,1,0,1
"org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(OutputStream)",1,6,n/a,9,0,1,1,1
"org.apache.commons.io.output.ProxyOutputStream.afterWrite(int)",0,3,n/a,16,0,1,0,1
"org.apache.commons.io.output.ProxyOutputStream.beforeWrite(int)",0,3,n/a,15,0,1,0,1
"org.apache.commons.io.output.ProxyOutputStream.close()",2,21,n/a,12,1,0,3,2
"org.apache.commons.io.output.ProxyOutputStream.flush()",2,13,n/a,12,1,0,3,2
"org.apache.commons.io.output.ProxyOutputStream.handleIOException(IOException)",0,5,n/a,12,0,1,1,1
"org.apache.commons.io.output.ProxyOutputStream.write(byte[])",4,27,n/a,16,1,1,6,3
"org.apache.commons.io.output.ProxyOutputStream.write(byte[],int,int)",4,12,n/a,17,1,3,5,2
"org.apache.commons.io.output.ProxyOutputStream.write(int)",4,30,n/a,15,1,1,5,2
"org.apache.commons.io.output.ProxyWriter.ProxyWriter(Writer)",1,8,n/a,9,0,1,1,1
"org.apache.commons.io.output.ProxyWriter.afterWrite(int)",0,8,n/a,16,0,1,0,1
"org.apache.commons.io.output.ProxyWriter.append(CharSequence)",5,10,n/a,22,2,1,9,3
"org.apache.commons.io.output.ProxyWriter.append(CharSequence,int,int)",4,4,n/a,20,1,3,6,2
"org.apache.commons.io.output.ProxyWriter.append(char)",4,5,n/a,18,1,1,6,2
"org.apache.commons.io.output.ProxyWriter.beforeWrite(int)",0,8,n/a,15,0,1,0,1
"org.apache.commons.io.output.ProxyWriter.close()",2,13,n/a,12,1,0,3,2
"org.apache.commons.io.output.ProxyWriter.flush()",2,29,n/a,12,1,0,3,2
"org.apache.commons.io.output.ProxyWriter.handleIOException(IOException)",0,10,n/a,12,0,1,1,1
"org.apache.commons.io.output.ProxyWriter.write(String)",5,28,n/a,19,2,1,8,3
"org.apache.commons.io.output.ProxyWriter.write(String,int,int)",4,8,n/a,17,1,3,5,2
"org.apache.commons.io.output.ProxyWriter.write(char[])",4,11,n/a,19,2,1,8,3
"org.apache.commons.io.output.ProxyWriter.write(char[],int,int)",4,13,n/a,17,1,3,5,2
"org.apache.commons.io.output.ProxyWriter.write(int)",4,9,n/a,15,1,1,5,2
"org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter()",1,17,n/a,6,0,0,1,1
"org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(StringBuilder)",1,2,n/a,8,0,1,1,2
"org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(int)",1,2,n/a,8,0,1,1,1
"org.apache.commons.io.output.StringBuilderWriter.append(CharSequence)",1,9,n/a,11,0,1,2,1
"org.apache.commons.io.output.StringBuilderWriter.append(CharSequence,int,int)",1,4,n/a,13,0,3,2,1
"org.apache.commons.io.output.StringBuilderWriter.append(char)",1,5,n/a,11,0,1,2,1
"org.apache.commons.io.output.StringBuilderWriter.close()",0,13,n/a,6,0,0,0,1
"org.apache.commons.io.output.StringBuilderWriter.flush()",0,29,n/a,6,0,0,0,1
"org.apache.commons.io.output.StringBuilderWriter.getBuilder()",0,1,n/a,8,0,0,1,1
"org.apache.commons.io.output.StringBuilderWriter.toString()",1,41,n/a,9,0,0,1,1
"org.apache.commons.io.output.StringBuilderWriter.write(String)",1,26,n/a,11,1,1,2,2
"org.apache.commons.io.output.StringBuilderWriter.write(char[],int,int)",1,11,n/a,13,1,3,2,2
"org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(OutputStream)",1,3,n/a,8,0,1,1,1
"org.apache.commons.io.output.TaggedOutputStream.handleIOException(IOException)",1,5,n/a,10,0,1,1,1
"org.apache.commons.io.output.TaggedOutputStream.isCauseOf(Exception)",1,5,n/a,10,0,1,1,1
"org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(Exception)",1,6,n/a,13,0,1,1,1
"org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(OutputStream,OutputStream)",1,1,n/a,9,0,2,2,1
"org.apache.commons.io.output.TeeOutputStream.close()",2,21,n/a,9,0,0,2,1
"org.apache.commons.io.output.TeeOutputStream.flush()",2,13,n/a,9,0,0,2,1
"org.apache.commons.io.output.TeeOutputStream.write(byte[])",2,28,n/a,10,0,1,2,1
"org.apache.commons.io.output.TeeOutputStream.write(byte[],int,int)",2,13,n/a,12,0,3,2,1
"org.apache.commons.io.output.TeeOutputStream.write(int)",2,31,n/a,10,0,1,2,1
"org.apache.commons.io.output.ThresholdingOutputStream.ThresholdingOutputStream(int)",0,1,n/a,10,0,1,1,1
"org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)",1,3,n/a,18,1,1,3,3
"org.apache.commons.io.output.ThresholdingOutputStream.close()",3,19,n/a,19,1,0,3,2
"org.apache.commons.io.output.ThresholdingOutputStream.flush()",2,11,n/a,11,0,0,1,1
"org.apache.commons.io.output.ThresholdingOutputStream.getByteCount()",0,0,n/a,9,0,0,1,1
"org.apache.commons.io.output.ThresholdingOutputStream.getStream()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.apache.commons.io.output.ThresholdingOutputStream.getThreshold()",0,0,n/a,9,0,0,1,1
"org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded()",0,1,n/a,11,0,0,1,1
"org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount()",0,0,n/a,9,0,0,2,1
"org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.apache.commons.io.output.ThresholdingOutputStream.write(byte[])",3,25,n/a,15,0,1,3,1
"org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)",3,19,n/a,17,0,3,3,1
"org.apache.commons.io.output.ThresholdingOutputStream.write(int)",3,24,n/a,14,0,1,3,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer)",2,0,n/a,10,0,1,1,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,Charset)",1,0,n/a,11,0,2,1,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,Charset,int,boolean)",5,3,n/a,21,0,4,7,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,String)",1,2,n/a,11,0,2,1,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,String,int,boolean)",2,3,n/a,15,0,4,1,1
"org.apache.commons.io.output.WriterOutputStream.close()",3,26,n/a,12,0,0,3,1
"org.apache.commons.io.output.WriterOutputStream.flush()",2,17,n/a,11,0,0,2,1
"org.apache.commons.io.output.WriterOutputStream.flushOutput()",5,4,n/a,11,1,0,3,2
"org.apache.commons.io.output.WriterOutputStream.processInput(boolean)",7,2,n/a,25,2,1,10,4
"org.apache.commons.io.output.WriterOutputStream.write(byte[])",1,25,n/a,10,0,1,1,1
"org.apache.commons.io.output.WriterOutputStream.write(byte[],int,int)",5,13,n/a,21,1,3,8,3
"org.apache.commons.io.output.WriterOutputStream.write(int)",1,25,n/a,10,0,1,1,1
"org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(File)",2,0,n/a,10,0,1,1,1
"org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(OutputStream)",0,3,n/a,8,0,1,1,1
"org.apache.commons.io.output.XmlStreamWriter.close()",4,15,n/a,14,1,0,5,2
"org.apache.commons.io.output.XmlStreamWriter.detectEncoding(char[],int,int)",20,1,n/a,55,4,3,23,9
"org.apache.commons.io.output.XmlStreamWriter.flush()",1,32,n/a,11,1,0,2,2
"org.apache.commons.io.output.XmlStreamWriter.getEncoding()",0,0,n/a,8,0,0,1,1
"org.apache.commons.io.output.XmlStreamWriter.write(char[],int,int)",2,11,n/a,16,1,3,3,2

Class,CBO,CSA,CSO,CSOA,Dcy*,DIT,Inner,LCOM,LOC,NCLOC,NOC,NOIC,NOOC,OCavg,Query,RFC,WMC
"org.apache.commons.io.ByteOrderMark",5,6,20,26,1,1,1,2,136,76,0,8,3,"2,25",7,20,18
"org.apache.commons.io.CopyUtils",2,1,23,24,0,1,0,3,281,84,0,11,0,"1,18",2,23,13
"org.apache.commons.io.DirectoryWalker",12,2,28,30,30,1,0,1,533,93,8,11,0,"1,69",3,24,27
"org.apache.commons.io.DirectoryWalker.CancelException",7,8,51,59,0,4,1,2,52,19,0,26,0,"1,00",2,5,4
"org.apache.commons.io.EndianUtils",2,0,43,43,0,1,0,14,424,202,0,11,0,"1,06",20,39,33
"org.apache.commons.io.FileCleaner",3,1,19,20,34,1,0,1,134,31,0,11,0,"1,00",2,13,7
"org.apache.commons.io.FileCleaningTracker",6,4,19,23,33,1,0,1,153,45,0,11,0,"1,71",1,19,12
"org.apache.commons.io.FileCleaningTracker.Reaper",2,24,68,92,33,2,1,1,30,20,0,42,1,"1,50",0,10,3
"org.apache.commons.io.FileCleaningTracker.Tracker",3,6,22,28,31,3,0,1,35,12,0,16,0,"1,50",1,5,3
"org.apache.commons.io.FileDeleteStrategy",6,3,17,20,30,1,0,1,102,30,1,10,1,"1,40",3,9,7
"org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy",2,1,19,20,30,2,0,1,25,10,0,14,1,"1,00",1,4,2
"org.apache.commons.io.FileExistsException",2,6,50,56,0,4,1,0,34,12,0,26,0,"1,00",0,5,3
"org.apache.commons.io.FileSystemUtils",6,8,25,33,10,1,0,1,480,236,3,11,0,"3,62",12,59,47
"org.apache.commons.io.FileUtils",35,6,88,94,28,1,0,14,2.040,897,0,11,0,"3,05",38,174,232
"org.apache.commons.io.FilenameUtils",9,6,50,56,2,1,0,1,1.279,490,0,11,0,"3,84",37,75,146
"org.apache.commons.io.HexDump",2,3,16,19,1,1,0,1,132,71,0,11,0,"3,50",2,16,14
"org.apache.commons.io.IOCase",15,6,24,30,2,1,1,2,218,70,0,10,1,"1,83",11,21,22
"org.apache.commons.io.IOExceptionWithCause",3,6,49,55,0,4,1,0,44,11,1,26,0,"1,50",0,5,3
"org.apache.commons.io.IOUtils",23,10,73,83,5,1,0,22,1.528,473,0,11,0,"2,05",30,109,125
"org.apache.commons.io.LineIterator",3,3,24,27,5,1,1,2,147,65,1,12,1,"2,12",4,16,17
"org.apache.commons.io.TaggedIOException",6,7,54,61,1,5,1,1,106,26,0,25,1,"1,20",3,9,6
"org.apache.commons.io.ThreadMonitor",2,2,18,20,0,1,1,3,90,33,0,11,0,"1,40",2,12,7
"org.apache.commons.io.comparator.AbstractFileComparator",17,0,24,24,0,1,1,2,49,18,9,17,1,"1,67",3,7,5
"org.apache.commons.io.comparator.CompositeFileComparator",3,2,28,30,2,2,2,1,92,49,0,19,1,"2,75",2,16,11
"org.apache.commons.io.comparator.DefaultFileComparator",4,2,25,27,2,2,2,1,41,7,0,21,0,"1,00",1,3,1
"org.apache.commons.io.comparator.DirectoryFileComparator",3,2,26,28,2,2,2,1,53,14,0,21,0,"1,50",2,4,3
"org.apache.commons.io.comparator.ExtensionFileComparator",6,7,28,35,5,2,2,1,85,26,0,19,1,"1,25",2,9,5
"org.apache.commons.io.comparator.LastModifiedFileComparator",3,2,25,27,2,2,2,1,52,14,0,21,0,"3,00",1,3,3
"org.apache.commons.io.comparator.NameFileComparator",5,7,28,35,5,2,2,1,79,22,0,19,1,"1,25",2,8,5
"org.apache.commons.io.comparator.PathFileComparator",4,7,28,35,5,2,2,1,80,22,0,19,1,"1,25",2,8,5
"org.apache.commons.io.comparator.ReverseComparator",9,1,27,28,1,2,2,1,41,16,0,19,1,"1,33",2,7,4
"org.apache.commons.io.comparator.SizeFileComparator",5,5,28,33,31,2,2,1,107,39,0,19,1,"2,50",2,10,10
"org.apache.commons.io.filefilter.AbstractFileFilter",20,0,19,19,1,1,3,1,42,12,19,10,1,"1,00",3,8,3
"org.apache.commons.io.filefilter.AgeFileFilter",3,2,27,29,28,2,4,1,119,33,0,11,2,"1,25",2,12,10
"org.apache.commons.io.filefilter.AndFileFilter",7,1,33,34,3,2,5,1,132,77,0,10,3,"2,20",5,28,22
"org.apache.commons.io.filefilter.CanReadFileFilter",6,3,21,24,6,2,4,1,66,12,0,13,1,"1,00",1,5,2
"org.apache.commons.io.filefilter.CanWriteFileFilter",5,2,21,23,3,2,4,1,55,10,0,13,1,"1,00",1,4,2
"org.apache.commons.io.filefilter.ConditionalFileFilter",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.apache.commons.io.filefilter.DelegateFileFilter",3,2,24,26,2,2,4,2,77,39,0,10,3,"2,00",3,12,10
"org.apache.commons.io.filefilter.DirectoryFileFilter",5,2,21,23,2,2,4,1,49,10,0,13,1,"1,00",1,3,2
"org.apache.commons.io.filefilter.EmptyFileFilter",5,2,21,23,4,2,4,1,59,15,0,13,1,"1,50",1,6,3
"org.apache.commons.io.filefilter.FalseFileFilter",5,2,19,21,1,1,4,2,46,12,1,11,0,"1,00",2,3,3
"org.apache.commons.io.filefilter.FileFileFilter",4,1,21,22,2,2,4,1,36,9,0,13,1,"1,00",1,3,2
"org.apache.commons.io.filefilter.FileFilterUtils",25,2,55,57,28,1,0,31,689,194,0,11,0,"1,40",42,79,60
"org.apache.commons.io.filefilter.HiddenFileFilter",6,2,21,23,3,2,4,1,51,10,0,13,1,"1,00",1,4,2
"org.apache.commons.io.filefilter.IOFileFilter",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.commons.io.filefilter.MagicNumberFileFilter",5,3,25,28,8,2,4,1,234,69,0,11,2,"2,33",2,23,14
"org.apache.commons.io.filefilter.NameFileFilter",8,2,28,30,5,2,4,1,160,70,0,10,3,"2,44",3,19,22
"org.apache.commons.io.filefilter.NotFileFilter",8,1,23,24,2,2,4,1,54,21,0,10,3,"1,25",3,9,5
"org.apache.commons.io.filefilter.OrFileFilter",8,1,33,34,3,2,5,1,126,71,0,10,3,"2,00",5,28,20
"org.apache.commons.io.filefilter.PrefixFileFilter",5,2,28,30,5,2,4,1,165,70,0,10,3,"2,44",3,19,22
"org.apache.commons.io.filefilter.RegexFileFilter",3,1,24,25,5,2,4,1,90,35,0,13,1,"2,00",1,11,10
"org.apache.commons.io.filefilter.SizeFileFilter",2,2,23,25,2,2,4,1,78,24,0,11,2,"1,75",2,7,7
"org.apache.commons.io.filefilter.SuffixFileFilter",6,2,28,30,5,2,4,1,166,70,0,10,3,"2,44",3,19,22
"org.apache.commons.io.filefilter.TrueFileFilter",6,2,19,21,1,1,4,2,46,12,1,11,0,"1,00",2,3,3
"org.apache.commons.io.filefilter.WildcardFileFilter",6,2,28,30,5,2,4,1,164,70,0,10,3,"2,44",3,19,22
"org.apache.commons.io.filefilter.WildcardFilter",4,1,24,25,5,2,4,1,109,47,0,12,2,"2,80",2,13,14
"org.apache.commons.io.input.AutoCloseInputStream",3,1,51,52,3,4,2,1,67,21,0,35,3,"1,25",0,7,5
"org.apache.commons.io.input.BOMInputStream",5,9,64,73,3,4,2,1,289,132,0,23,6,"2,24",11,31,38
"org.apache.commons.io.input.BoundedInputStream",2,5,38,43,1,2,2,1,188,84,0,10,9,"1,50",8,24,21
"org.apache.commons.io.input.BrokenInputStream",2,1,31,32,0,2,2,1,78,29,0,15,4,"1,00",3,8,7
"org.apache.commons.io.input.CharSequenceReader",2,5,36,41,1,2,4,2,132,74,0,13,6,"2,00",5,16,18
"org.apache.commons.io.input.ClassLoaderObjectInputStream",1,15,108,123,0,3,5,1,49,19,0,50,1,"1,50",1,6,3
"org.apache.commons.io.input.CloseShieldInputStream",3,1,49,50,3,4,2,1,30,9,0,37,1,"1,00",0,3,2
"org.apache.commons.io.input.ClosedInputStream",5,1,25,26,0,2,2,1,26,7,0,19,0,"1,00",1,1,1
"org.apache.commons.io.input.CountingInputStream",2,2,54,56,2,4,2,1,113,40,0,36,2,"1,43",5,10,10
"org.apache.commons.io.input.DemuxInputStream",2,1,27,28,0,2,2,1,59,35,0,18,1,"1,67",2,8,5
"org.apache.commons.io.input.NullInputStream",5,7,40,47,1,2,2,1,298,128,1,11,8,"1,94",10,19,31
"org.apache.commons.io.input.NullReader",5,9,42,51,1,2,3,1,282,117,2,13,6,"1,87",9,18,28
"org.apache.commons.io.input.ProxyInputStream",11,1,47,48,1,3,2,1,201,90,8,11,9,"1,15",6,23,15
"org.apache.commons.io.input.ProxyReader",3,3,50,53,1,3,3,1,222,106,1,11,10,"1,21",7,26,17
"org.apache.commons.io.input.ReaderInputStream",2,7,33,40,1,2,2,1,197,72,0,16,3,"1,78",3,27,16
"org.apache.commons.io.input.SwappedDataInputStream",4,1,78,79,3,4,3,4,205,95,0,40,0,"1,12",13,28,18
"org.apache.commons.io.input.TaggedInputStream",3,2,51,53,4,4,2,1,85,16,0,39,1,"1,00",1,9,4
"org.apache.commons.io.input.Tailer",6,5,24,29,30,1,1,2,228,101,0,11,0,"1,73",6,28,19
"org.apache.commons.io.input.TailerListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.apache.commons.io.input.TailerListenerAdapter",2,0,22,22,31,1,1,5,40,12,0,11,0,"1,00",0,5,5
"org.apache.commons.io.input.TeeInputStream",2,3,53,56,2,4,2,1,120,47,0,29,4,"1,67",3,14,10
"org.apache.commons.io.input.XmlStreamReader",5,22,50,72,5,2,3,2,664,345,0,19,0,"2,78",10,65,64
"org.apache.commons.io.input.XmlStreamReaderException",1,11,54,65,0,4,1,5,104,36,0,26,0,"1,00",5,8,7
"org.apache.commons.io.monitor.FilesystemEntry",1,7,31,38,8,1,1,4,206,76,0,11,0,"1,21",10,24,23
"org.apache.commons.io.monitor.FilesystemListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,8,n/a
"org.apache.commons.io.monitor.FilesystemListenerAdaptor",2,0,28,28,9,1,1,8,65,18,0,11,0,"1,00",0,8,8
"org.apache.commons.io.monitor.FilesystemMonitor",2,4,22,26,9,1,1,1,120,67,0,11,0,"2,11",1,21,19
"org.apache.commons.io.monitor.FilesystemObserver",9,6,36,42,8,1,1,2,435,192,0,10,1,"2,33",8,62,56
"org.apache.commons.io.output.BrokenOutputStream",2,1,26,27,0,2,3,1,57,21,0,13,2,"1,00",0,6,5
"org.apache.commons.io.output.ByteArrayOutputStream",15,6,36,42,2,2,3,2,311,164,2,12,3,"2,20",7,32,33
"org.apache.commons.io.output.CloseShieldOutputStream",3,1,38,39,3,4,3,1,30,9,0,25,1,"1,00",0,3,2
"org.apache.commons.io.output.ClosedOutputStream",3,1,22,23,0,2,3,1,27,7,0,15,0,"1,00",0,2,1
"org.apache.commons.io.output.CountingOutputStream",2,2,42,44,2,4,3,1,95,32,0,27,1,"1,33",4,8,8
"org.apache.commons.io.output.DeferredFileOutputStream",4,10,44,54,7,3,3,1,221,89,0,23,1,"1,50",4,23,15
"org.apache.commons.io.output.DemuxOutputStream",2,1,25,26,0,2,3,1,70,41,0,13,2,"1,75",1,10,7
"org.apache.commons.io.output.FileWriterWithEncoding",3,3,50,53,29,2,4,2,280,106,0,14,4,"1,30",1,38,26
"org.apache.commons.io.output.LockableFileWriter",3,5,48,53,29,2,4,2,293,127,0,14,4,"1,50",1,47,27
"org.apache.commons.io.output.NullOutputStream",5,1,24,25,0,2,3,3,42,12,0,13,2,"1,00",0,3,3
"org.apache.commons.io.output.NullWriter",3,3,41,44,0,2,4,10,108,38,0,11,7,"1,00",3,11,11
"org.apache.commons.io.output.ProxyOutputStream",9,1,36,37,1,3,3,1,138,59,5,11,5,"1,11",0,15,10
"org.apache.commons.io.output.ProxyWriter",2,3,50,53,1,3,4,1,236,123,0,11,10,"1,21",3,27,17
"org.apache.commons.io.output.StringBuilderWriter",3,3,42,45,0,2,5,3,125,52,0,13,5,"1,25",5,20,15
"org.apache.commons.io.output.TaggedOutputStream",3,2,40,42,4,4,3,1,85,16,0,27,1,"1,00",1,9,4
"org.apache.commons.io.output.TeeOutputStream",2,2,42,44,2,4,3,1,70,32,0,14,5,"1,00",0,17,6
"org.apache.commons.io.output.ThresholdingOutputStream",3,3,34,37,1,2,3,1,199,76,1,11,4,"1,09",4,18,12
"org.apache.commons.io.output.WriterOutputStream",2,6,33,39,1,2,3,1,231,82,0,11,4,"1,50",0,35,18
"org.apache.commons.io.output.XmlStreamWriter",2,8,37,45,6,2,4,1,139,78,0,18,0,"2,57",1,28,18

Package,C(rec),LOC(rec),METH(rec)
"",104,21.337,965
"org",104,21.337,965
"org.apache",104,21.337,965
"org.apache.commons",104,21.337,965
"org.apache.commons.io",104,21.337,965
"org.apache.commons.io.comparator",10,910,30
"org.apache.commons.io.filefilter",25,3.528,163
"org.apache.commons.io.input",23,4.215,210
"org.apache.commons.io.monitor",5,1.007,68
"org.apache.commons.io.output",19,3.186,172

Project,C,L(J),LOCp,METH
"project",104,21.038,21.337,965

