SmellsMetrics,Ter, 12 jun 2018 11:07:25 BRT
Method,CALL,CALLED,IMP,LOC,NBD,NP,STAT,v(G)
"null.afterExecute(Runnable,Throwable)",2,0,n/a,6,0,2,2,1
"null.apply(IMutation,Multimap<InetAddress, InetAddress>,IWriteResponseHandler,String,ConsistencyLevel)",6,1,n/a,7,0,5,4,2
"null.compare(DecoratedKey,DecoratedKey)",1,0,n/a,4,0,2,1,1
"null.compare(IColumnIterator,IColumnIterator)",3,0,n/a,4,0,2,1,1
"null.compare(InetAddress,InetAddress)",3,0,n/a,4,0,2,1,1
"null.compare(ReplayPosition,ReplayPosition)",4,0,n/a,6,0,2,3,2
"null.fromByteArray(ByteBuffer)",1,0,n/a,4,0,1,1,1
"null.fromString(String)",2,0,n/a,4,0,1,1,1
"null.get()",2,0,n/a,7,0,0,3,1
"null.initialValue()",1,0,n/a,5,0,0,1,1
"null.rejectedExecution(Runnable,ThreadPoolExecutor)",8,0,n/a,25,3,2,11,5
"null.run()",5,0,n/a,24,2,0,9,4
"null.toByteArray(Token<BigInteger>)",2,0,n/a,4,0,1,1,1
"null.toByteArray(Token<String>)",1,0,n/a,4,0,1,1,1
"null.toByteArray(Token<byte[]>)",1,0,n/a,4,0,1,1,1
"null.toString(Token<BigInteger>)",1,0,n/a,4,0,1,1,1
"null.toString(Token<String>)",0,0,n/a,4,0,1,1,1
"null.toString(Token<byte[]>)",1,0,n/a,4,0,1,1,1
"null.validate(String)",2,0,n/a,11,1,1,3,2
"org.apache.cassandra.auth.AllowAllAuthenticator.authenticate(Map<? extends CharSequence, ? extends CharSequence>)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.auth.AllowAllAuthenticator.defaultUser()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.auth.AllowAllAuthenticator.validateConfiguration()",0,0,n/a,4,0,0,0,1
"org.apache.cassandra.auth.AllowAllAuthority.authorize(AuthenticatedUser,List<Object>)",0,0,n/a,4,0,2,1,1
"org.apache.cassandra.auth.AllowAllAuthority.validateConfiguration()",0,0,n/a,4,0,0,0,1
"org.apache.cassandra.auth.AuthenticatedUser.AuthenticatedUser(String)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.auth.AuthenticatedUser.AuthenticatedUser(String,Set<String>)",1,0,n/a,5,0,2,2,1
"org.apache.cassandra.auth.AuthenticatedUser.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.auth.IAuthenticator.authenticate(Map<? extends CharSequence, ? extends CharSequence>)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.auth.IAuthenticator.defaultUser()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.auth.IAuthenticator.validateConfiguration()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.auth.IAuthority.authorize(AuthenticatedUser,List<Object>)",n/a,3,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.auth.IAuthority.validateConfiguration()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.auth.Resources.toString(List<Object>)",7,1,n/a,13,1,1,7,3
"org.apache.cassandra.auth.SimpleAuthenticator.authenticate(Map<? extends CharSequence, ? extends CharSequence>)",34,0,n/a,69,2,1,44,13
"org.apache.cassandra.auth.SimpleAuthenticator.authenticationErrorMessage(PasswordMode,String)",1,2,n/a,4,0,2,1,1
"org.apache.cassandra.auth.SimpleAuthenticator.defaultUser()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.auth.SimpleAuthenticator.validateConfiguration()",4,0,n/a,9,1,0,3,2
"org.apache.cassandra.auth.SimpleAuthority.authorize(AuthenticatedUser,List<Object>)",33,0,n/a,94,4,2,48,21
"org.apache.cassandra.auth.SimpleAuthority.validateConfiguration()",5,0,n/a,10,1,0,3,2
"org.apache.cassandra.cache.AutoSavingCache.AutoSavingCache(ICache<K, V>,String,String,CacheType)",1,0,n/a,7,0,4,4,1
"org.apache.cassandra.cache.AutoSavingCache.Writer.Writer(String,String)",6,1,n/a,21,0,2,12,4
"org.apache.cassandra.cache.AutoSavingCache.Writer.getCompactionInfo()",2,1,n/a,7,0,0,2,1
"org.apache.cassandra.cache.AutoSavingCache.Writer.saveCache()",22,1,n/a,32,2,0,19,5
"org.apache.cassandra.cache.AutoSavingCache.getAdjustedCacheSize(long)",4,1,n/a,5,0,1,2,1
"org.apache.cassandra.cache.AutoSavingCache.getCachePath()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.cache.AutoSavingCache.getConfiguredCacheSize(CFMetaData)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.cache.AutoSavingCache.getWriter()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.cache.AutoSavingCache.readSaved()",29,3,n/a,46,4,0,24,6
"org.apache.cassandra.cache.AutoSavingCache.reduceCacheSize()",7,2,n/a,10,1,0,4,2
"org.apache.cassandra.cache.AutoSavingCache.scheduleSaving(int)",4,2,n/a,4,3,1,7,3
"org.apache.cassandra.cache.AutoSavingCache.submitWrite()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.cache.AutoSavingCache.translateKey(K)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.cache.AutoSavingCache.updateCacheSize(long)",6,2,n/a,18,2,1,6,4
"org.apache.cassandra.cache.AutoSavingKeyCache.AutoSavingKeyCache(ICache<K, V>,String,String)",1,1,n/a,4,0,3,1,1
"org.apache.cassandra.cache.AutoSavingKeyCache.getConfiguredCacheSize(CFMetaData)",1,0,n/a,5,0,1,1,2
"org.apache.cassandra.cache.AutoSavingKeyCache.translateKey(K)",0,0,n/a,5,0,1,1,1
"org.apache.cassandra.cache.AutoSavingRowCache.AutoSavingRowCache(ICache<K, V>,String,String)",1,1,n/a,4,0,3,1,1
"org.apache.cassandra.cache.AutoSavingRowCache.getConfiguredCacheSize(CFMetaData)",1,0,n/a,5,0,1,1,2
"org.apache.cassandra.cache.AutoSavingRowCache.translateKey(K)",0,0,n/a,5,0,1,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.ConcurrentLinkedHashCache(ConcurrentLinkedHashMap<K, V>)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.capacity()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.clear()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.create(int,String,String)",8,1,n/a,10,0,3,2,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.get(K)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.isEmpty()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.isPutCopying()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.keySet()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.put(K,V)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.remove(K)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.setCapacity(int)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCache.size()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.ConcurrentLinkedHashCacheProvider.create(int,String,String)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.cache.FreeableMemory.FreeableMemory(long)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cache.FreeableMemory.finalize()",1,0,n/a,9,0,0,2,1
"org.apache.cassandra.cache.FreeableMemory.free()",1,1,n/a,5,0,0,2,1
"org.apache.cassandra.cache.FreeableMemory.getValidByte(long)",1,1,n/a,5,0,1,2,1
"org.apache.cassandra.cache.FreeableMemory.reference()",2,0,n/a,15,1,0,6,4
"org.apache.cassandra.cache.FreeableMemory.unreference()",2,0,n/a,6,0,0,2,2
"org.apache.cassandra.cache.ICache.capacity()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.ICache.clear()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.ICache.get(K)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.cache.ICache.isPutCopying()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.ICache.keySet()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.ICache.put(K,V)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.cache.ICache.remove(K)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.cache.ICache.setCapacity(int)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.cache.ICache.size()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.IRowCacheProvider.create(int,String,String)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.cache.InstrumentingCache.InstrumentingCache(ICache<K, V>,String,String)",6,0,n/a,17,1,3,8,3
"org.apache.cassandra.cache.InstrumentingCache.clear()",3,0,n/a,6,0,0,3,1
"org.apache.cassandra.cache.InstrumentingCache.get(K)",3,1,n/a,8,0,1,5,2
"org.apache.cassandra.cache.InstrumentingCache.getCapacity()",1,4,n/a,4,0,0,1,1
"org.apache.cassandra.cache.InstrumentingCache.getHits()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.InstrumentingCache.getInternal(K)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cache.InstrumentingCache.getKeySet()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.InstrumentingCache.getRecentHitRate()",6,0,n/a,14,1,0,6,1
"org.apache.cassandra.cache.InstrumentingCache.getRequests()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.InstrumentingCache.getSize()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.InstrumentingCache.isCapacitySetManually()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.InstrumentingCache.isPutCopying()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.InstrumentingCache.put(K,V)",1,1,n/a,4,0,2,1,1
"org.apache.cassandra.cache.InstrumentingCache.remove(K)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cache.InstrumentingCache.setCapacity(int)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.cache.InstrumentingCache.size()",1,4,n/a,4,0,0,1,1
"org.apache.cassandra.cache.InstrumentingCache.updateCapacity(int)",1,2,n/a,4,0,1,1,1
"org.apache.cassandra.cache.InstrumentingCacheMBean.getCapacity()",n/a,4,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.InstrumentingCacheMBean.getHits()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.InstrumentingCacheMBean.getRecentHitRate()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.InstrumentingCacheMBean.getRequests()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.InstrumentingCacheMBean.getSize()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.cache.InstrumentingCacheMBean.setCapacity(int)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.cache.SerializingCache.SerializingCache(int,ICompactSerializer3<V>,String,String)",10,0,n/a,4,2,4,4,1
"org.apache.cassandra.cache.SerializingCache.capacity()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.SerializingCache.clear()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.SerializingCache.deserialize(FreeableMemory)",3,1,n/a,12,1,1,4,2
"org.apache.cassandra.cache.SerializingCache.get(Object)",4,0,n/a,16,1,1,8,3
"org.apache.cassandra.cache.SerializingCache.isEmpty()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.SerializingCache.isPutCopying()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.SerializingCache.keySet()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.SerializingCache.put(K,V)",3,0,n/a,9,0,2,6,3
"org.apache.cassandra.cache.SerializingCache.remove(K)",2,0,n/a,6,0,1,3,2
"org.apache.cassandra.cache.SerializingCache.serialize(V)",7,1,n/a,24,1,1,11,4
"org.apache.cassandra.cache.SerializingCache.setCapacity(int)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cache.SerializingCache.size()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cache.SerializingCacheProvider.SerializingCacheProvider()",2,0,n/a,11,1,0,3,2
"org.apache.cassandra.cache.SerializingCacheProvider.create(int,String,String)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.cli.CliClient.CfDefNamesComparator.compare(CfDef,CfDef)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.cli.CliClient.CliClient(CliSessionState,Client)",2,0,n/a,7,0,2,4,1
"org.apache.cassandra.cli.CliClient.Function.Function(AbstractType)",0,8,n/a,4,0,1,1,1
"org.apache.cassandra.cli.CliClient.Function.getFunctionNames()",8,3,n/a,11,1,0,8,3
"org.apache.cassandra.cli.CliClient.Function.getValidator()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.cli.CliClient.KsDefNamesComparator.compare(KsDef,KsDef)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.cli.CliClient.cleanupAndExit()",2,1,n/a,5,0,0,2,1
"org.apache.cassandra.cli.CliClient.columnNameAsByteArray(String,CfDef)",2,1,n/a,10,0,2,1,1
"org.apache.cassandra.cli.CliClient.columnNameAsByteArray(String,String)",2,1,n/a,10,0,2,1,1
"org.apache.cassandra.cli.CliClient.columnNameAsBytes(String,CfDef)",2,5,n/a,11,0,2,2,1
"org.apache.cassandra.cli.CliClient.columnNameAsBytes(String,String)",2,5,n/a,11,0,2,2,1
"org.apache.cassandra.cli.CliClient.columnValueAsBytes(ByteBuffer,String,String)",10,2,n/a,29,3,3,9,4
"org.apache.cassandra.cli.CliClient.convertValueByFunction(Tree,CfDef,ByteBuffer)",1,8,n/a,12,0,3,1,1
"org.apache.cassandra.cli.CliClient.convertValueByFunction(Tree,CfDef,ByteBuffer,boolean)",20,2,n/a,52,3,4,19,8
"org.apache.cassandra.cli.CliClient.describeKeySpace(String,KsDef)",58,2,n/a,113,6,2,61,27
"org.apache.cassandra.cli.CliClient.doGetCounter(ByteBuffer,ColumnPath)",5,1,n/a,22,1,2,8,3
"org.apache.cassandra.cli.CliClient.doSlice(String,ByteBuffer,String,byte[],int)",44,2,n/a,62,3,5,32,12
"org.apache.cassandra.cli.CliClient.executeAddColumnFamily(Tree)",16,1,n/a,26,1,1,10,5
"org.apache.cassandra.cli.CliClient.executeAddKeySpace(Tree)",15,1,n/a,27,1,1,11,4
"org.apache.cassandra.cli.CliClient.executeAssumeStatement(Tree)",31,1,n/a,53,1,1,25,8
"org.apache.cassandra.cli.CliClient.executeCLIStatement(String)",48,0,n/a,121,2,1,103,35
"org.apache.cassandra.cli.CliClient.executeConnect(Tree)",18,1,n/a,25,1,1,15,3
"org.apache.cassandra.cli.CliClient.executeConsistencyLevelStatement(Tree)",9,1,n/a,22,1,1,9,3
"org.apache.cassandra.cli.CliClient.executeCount(Tree)",24,1,n/a,22,1,1,14,5
"org.apache.cassandra.cli.CliClient.executeDelColumnFamily(Tree)",7,1,n/a,18,0,1,6,3
"org.apache.cassandra.cli.CliClient.executeDelKeySpace(Tree)",7,1,n/a,20,0,1,8,3
"org.apache.cassandra.cli.CliClient.executeDelete(Tree)",37,1,n/a,62,1,1,35,17
"org.apache.cassandra.cli.CliClient.executeDescribeCluster()",14,1,n/a,23,2,0,12,5
"org.apache.cassandra.cli.CliClient.executeDescribeKeySpace(Tree)",6,1,n/a,24,1,1,10,4
"org.apache.cassandra.cli.CliClient.executeDropIndex(Tree)",26,1,n/a,42,2,1,23,9
"org.apache.cassandra.cli.CliClient.executeGet(Tree)",60,1,n/a,117,2,1,60,19
"org.apache.cassandra.cli.CliClient.executeGetWithConditions(Tree)",46,1,n/a,80,3,1,41,10
"org.apache.cassandra.cli.CliClient.executeHelp(Tree)",6,1,n/a,19,3,1,7,4
"org.apache.cassandra.cli.CliClient.executeIncr(Tree,long)",31,2,n/a,58,2,2,31,10
"org.apache.cassandra.cli.CliClient.executeList(Tree)",40,1,n/a,60,3,1,39,12
"org.apache.cassandra.cli.CliClient.executeSet(Tree)",43,1,n/a,75,2,1,42,12
"org.apache.cassandra.cli.CliClient.executeShowClusterName()",3,1,n/a,6,0,0,3,2
"org.apache.cassandra.cli.CliClient.executeShowKeySpaces()",5,1,n/a,12,1,0,6,3
"org.apache.cassandra.cli.CliClient.executeShowSchema(Tree)",17,1,n/a,4,2,1,14,5
"org.apache.cassandra.cli.CliClient.executeShowVersion()",3,1,n/a,7,0,0,3,2
"org.apache.cassandra.cli.CliClient.executeTruncate(String)",12,1,n/a,21,1,1,8,5
"org.apache.cassandra.cli.CliClient.executeUpdateColumnFamily(Tree)",17,1,n/a,29,1,1,13,6
"org.apache.cassandra.cli.CliClient.executeUpdateKeySpace(Tree)",14,1,n/a,27,1,1,12,4
"org.apache.cassandra.cli.CliClient.executeUseKeySpace(Tree)",28,1,n/a,62,2,1,33,13
"org.apache.cassandra.cli.CliClient.formatColumnName(String,String,ByteBuffer)",3,10,n/a,6,0,3,1,1
"org.apache.cassandra.cli.CliClient.formatSubcolumnName(String,String,ByteBuffer)",3,8,n/a,6,0,3,1,1
"org.apache.cassandra.cli.CliClient.getBytesAccordingToType(String,AbstractType)",3,7,n/a,19,1,2,5,3
"org.apache.cassandra.cli.CliClient.getCFColumnMetaFromTree(CfDef,Tree)",29,1,n/a,58,3,2,27,9
"org.apache.cassandra.cli.CliClient.getCfDef(KsDef,String)",1,3,n/a,9,1,2,4,3
"org.apache.cassandra.cli.CliClient.getCfDef(String)",1,14,n/a,9,0,1,1,1
"org.apache.cassandra.cli.CliClient.getCfDef(String,String)",3,3,n/a,18,2,2,5,3
"org.apache.cassandra.cli.CliClient.getColumnDefByName(CfDef,ByteBuffer)",3,1,n/a,18,2,2,5,3
"org.apache.cassandra.cli.CliClient.getColumnName(String,Tree)",5,6,n/a,6,0,2,1,2
"org.apache.cassandra.cli.CliClient.getFormatType(String)",10,12,n/a,22,2,1,9,3
"org.apache.cassandra.cli.CliClient.getHelp()",10,1,n/a,24,2,0,11,2
"org.apache.cassandra.cli.CliClient.getIndexTypeFromString(String)",5,1,n/a,30,2,1,9,4
"org.apache.cassandra.cli.CliClient.getKSMetaData(String)",4,3,n/a,8,0,1,3,2
"org.apache.cassandra.cli.CliClient.getKeyAsBytes(String,Tree)",6,5,n/a,7,0,2,4,2
"org.apache.cassandra.cli.CliClient.getKeyComparatorForCF(String)",4,2,n/a,11,1,1,6,2
"org.apache.cassandra.cli.CliClient.getKeySpace()",0,0,n/a,4,0,0,1,2
"org.apache.cassandra.cli.CliClient.getStrategyOptionsFromTree(Tree)",12,1,n/a,26,2,1,13,3
"org.apache.cassandra.cli.CliClient.getSubColumnName(String,Tree)",5,3,n/a,6,0,2,1,2
"org.apache.cassandra.cli.CliClient.getTypeByFunction(String)",9,1,n/a,20,1,1,7,2
"org.apache.cassandra.cli.CliClient.getUsername()",0,0,n/a,4,0,0,1,2
"org.apache.cassandra.cli.CliClient.getValidatorForValue(CfDef,byte[])",7,5,n/a,23,2,2,8,5
"org.apache.cassandra.cli.CliClient.hasKeySpace()",1,13,n/a,13,1,0,4,2
"org.apache.cassandra.cli.CliClient.isCounterCF(CfDef)",2,2,n/a,9,1,1,4,3
"org.apache.cassandra.cli.CliClient.normaliseType(String,String)",3,7,n/a,6,0,2,3,2
"org.apache.cassandra.cli.CliClient.printBanner()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cli.CliClient.printSliceList(CfDef,List<KeySlice>)",38,2,n/a,65,4,2,31,13
"org.apache.cassandra.cli.CliClient.setKeySpace(String)",1,0,n/a,6,0,1,2,1
"org.apache.cassandra.cli.CliClient.setUsername(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cli.CliClient.showColumnFamily(StringBuilder,CfDef)",39,1,n/a,51,2,2,37,7
"org.apache.cassandra.cli.CliClient.showColumnMeta(StringBuilder,CfDef,ColumnDef)",17,1,n/a,23,1,3,10,3
"org.apache.cassandra.cli.CliClient.showKeyspace(StringBuilder,KsDef)",25,1,n/a,33,2,2,21,5
"org.apache.cassandra.cli.CliClient.subColumnNameAsByteArray(String,CfDef)",2,2,n/a,10,0,2,1,1
"org.apache.cassandra.cli.CliClient.subColumnNameAsBytes(String,CfDef)",5,2,n/a,16,1,2,5,2
"org.apache.cassandra.cli.CliClient.subColumnNameAsBytes(String,String)",2,2,n/a,11,0,2,2,1
"org.apache.cassandra.cli.CliClient.updateCfDefAttributes(Tree,CfDef)",53,2,n/a,89,2,2,77,26
"org.apache.cassandra.cli.CliClient.updateColumnMetaData(CfDef,ByteBuffer,String)",7,2,n/a,23,1,3,7,3
"org.apache.cassandra.cli.CliClient.updateKsDefAttributes(Tree,KsDef)",30,2,n/a,57,3,2,31,10
"org.apache.cassandra.cli.CliClient.validateSchemaIsSettled(String)",19,7,n/a,36,2,1,20,10
"org.apache.cassandra.cli.CliClient.writeAttr(StringBuilder,boolean,String,Boolean)",2,6,n/a,4,0,4,1,1
"org.apache.cassandra.cli.CliClient.writeAttr(StringBuilder,boolean,String,Number)",2,6,n/a,4,0,4,1,1
"org.apache.cassandra.cli.CliClient.writeAttr(StringBuilder,boolean,String,String)",2,6,n/a,4,0,4,1,1
"org.apache.cassandra.cli.CliClient.writeAttrRaw(StringBuilder,boolean,String,String)",4,5,n/a,7,0,4,4,2
"org.apache.cassandra.cli.CliCompiler.ANTLRNoCaseStringStream.ANTLRNoCaseStringStream(String)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.cli.CliCompiler.ANTLRNoCaseStringStream.LA(int)",2,0,n/a,13,1,1,6,3
"org.apache.cassandra.cli.CliCompiler.compileQuery(String)",8,0,n/a,21,1,1,9,2
"org.apache.cassandra.cli.CliCompiler.getColumn(Tree,int)",3,0,n/a,6,0,2,1,1
"org.apache.cassandra.cli.CliCompiler.getColumnFamily(String,List<CfDef>)",5,0,n/a,20,2,2,11,6
"org.apache.cassandra.cli.CliCompiler.getColumnFamily(Tree,List<CfDef>)",4,0,n/a,4,0,2,1,1
"org.apache.cassandra.cli.CliCompiler.getKey(Tree)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.cli.CliCompiler.getKeySpace(String,List<KsDef>)",5,0,n/a,20,2,2,11,6
"org.apache.cassandra.cli.CliCompiler.getKeySpace(Tree,List<KsDef>)",3,0,n/a,4,0,2,1,1
"org.apache.cassandra.cli.CliCompiler.numColumnSpecifiers(Tree)",1,0,n/a,5,0,1,1,1
"org.apache.cassandra.cli.CliCompleter.CliCompleter()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cli.CliCompleter.getKeyspaceCommands()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cli.CliMain.connect(String,int)",36,1,n/a,106,2,2,53,17
"org.apache.cassandra.cli.CliMain.disconnect()",1,0,n/a,11,1,0,3,2
"org.apache.cassandra.cli.CliMain.evaluateFileStatements(BufferedReader)",9,1,n/a,32,2,1,19,9
"org.apache.cassandra.cli.CliMain.getPrompt(CliClient)",2,1,n/a,9,0,1,1,1
"org.apache.cassandra.cli.CliMain.isConnected()",1,0,n/a,13,1,0,4,2
"org.apache.cassandra.cli.CliMain.main(String[])",31,0,n/a,96,2,1,49,17
"org.apache.cassandra.cli.CliMain.processStatement(String)",10,2,n/a,25,2,1,10,7
"org.apache.cassandra.cli.CliMain.updateCompletor(Set<String>)",8,1,n/a,11,1,1,6,3
"org.apache.cassandra.cli.CliOptions.CLIOptions.addOption(String,String,String)",2,5,n/a,11,0,3,1,1
"org.apache.cassandra.cli.CliOptions.CLIOptions.addOption(String,String,String,String)",3,8,n/a,14,0,4,3,1
"org.apache.cassandra.cli.CliOptions.printUsage()",2,3,n/a,4,0,0,1,1
"org.apache.cassandra.cli.CliOptions.processArgs(CliSessionState,String[])",39,0,n/a,104,2,2,44,16
"org.apache.cassandra.cli.CliSessionState.CliSessionState()",0,0,n/a,6,0,0,3,1
"org.apache.cassandra.cli.CliSessionState.getNodeProbe()",2,0,n/a,12,1,0,4,2
"org.apache.cassandra.cli.CliSessionState.inFileMode()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cli.CliSessionState.setErr(PrintStream)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cli.CliSessionState.setOut(PrintStream)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cli.CliUtils.escapeSQLString(String)",2,0,n/a,5,0,1,1,1
"org.apache.cassandra.cli.CliUtils.getCfNamesByKeySpace(KsDef)",4,0,n/a,14,1,1,4,2
"org.apache.cassandra.cli.CliUtils.getIndexOperator(String)",5,0,n/a,29,1,1,11,6
"org.apache.cassandra.cli.CliUtils.unescapeSQLString(String)",6,0,n/a,12,0,1,3,3
"org.apache.cassandra.client.RingCache.RingCache(String,IPartitioner<?>,String,int)",3,1,n/a,9,0,4,6,2
"org.apache.cassandra.client.RingCache.getEndpoint(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.client.RingCache.getEndpoint(Range)",1,2,n/a,5,0,1,1,1
"org.apache.cassandra.client.RingCache.getRange(ByteBuffer)",4,2,n/a,9,0,1,5,3
"org.apache.cassandra.client.RingCache.refreshEndpointMap()",18,1,n/a,42,5,0,19,7
"org.apache.cassandra.concurrent.AIOExecutorService.AIOExecutorService(int,int,long,TimeUnit,BlockingQueue<Runnable>,ThreadFactory)",1,0,n/a,9,0,6,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.awaitTermination(long,TimeUnit)",1,2,n/a,15,0,2,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.execute(Runnable)",1,0,n/a,14,0,1,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.invokeAll(Collection<? extends Callable<T>>)",1,0,n/a,24,0,1,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.invokeAll(Collection<? extends Callable<T>>,long,TimeUnit)",1,0,n/a,31,0,3,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.invokeAny(Collection<? extends Callable<T>>)",1,0,n/a,22,0,1,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.invokeAny(Collection<? extends Callable<T>>,long,TimeUnit)",1,0,n/a,26,0,3,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.isShutdown()",1,0,n/a,9,0,0,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.isTerminated()",1,0,n/a,11,0,0,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.shutdown()",0,0,n/a,21,0,0,0,1
"org.apache.cassandra.concurrent.AIOExecutorService.shutdownNow()",1,0,n/a,27,0,0,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.submit(Callable<T>)",1,0,n/a,26,0,1,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.submit(Runnable)",1,0,n/a,15,0,1,1,1
"org.apache.cassandra.concurrent.AIOExecutorService.submit(Runnable,T)",1,0,n/a,16,0,2,1,1
"org.apache.cassandra.concurrent.Context.Context()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.concurrent.Context.get(Object)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.Context.put(Object,Object)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.concurrent.Context.remove(Object)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.DebuggableThreadPoolExecutor(String,int)",3,1,n/a,4,0,2,1,1
"org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.DebuggableThreadPoolExecutor(int,int,long,TimeUnit,BlockingQueue<Runnable>,ThreadFactory)",3,2,n/a,11,0,6,3,1
"org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.DebuggableThreadPoolExecutor(int,long,TimeUnit,BlockingQueue<Runnable>,ThreadFactory)",1,1,n/a,4,0,5,1,1
"org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.afterExecute(Runnable,Throwable)",2,0,n/a,6,0,2,2,1
"org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.logExceptionsAfterExecute(Runnable,Throwable)",14,3,n/a,30,2,2,11,7
"org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.onFinalAccept(Runnable)",0,1,n/a,1,0,1,0,1
"org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.onFinalRejection(Runnable)",0,1,n/a,1,0,1,0,1
"org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.onInitialRejection(Runnable)",0,1,n/a,1,0,1,0,1
"org.apache.cassandra.concurrent.IExecutorMBean.getActiveCount()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.concurrent.IExecutorMBean.getCompletedTasks()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.concurrent.IExecutorMBean.getPendingTasks()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.concurrent.JMXConfigurableThreadPoolExecutor.JMXConfigurableThreadPoolExecutor(int,long,TimeUnit,BlockingQueue<Runnable>,NamedThreadFactory,String)",1,0,n/a,9,0,6,1,1
"org.apache.cassandra.concurrent.JMXConfigurableThreadPoolExecutorMBean.getCorePoolSize()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.concurrent.JMXConfigurableThreadPoolExecutorMBean.setCorePoolSize(int)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.JMXEnabledThreadPoolExecutor(Stage)",3,2,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.JMXEnabledThreadPoolExecutor(String)",3,2,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.JMXEnabledThreadPoolExecutor(String,String)",3,0,n/a,4,0,2,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.JMXEnabledThreadPoolExecutor(String,int)",3,1,n/a,4,0,2,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.JMXEnabledThreadPoolExecutor(int,int,long,TimeUnit,BlockingQueue<Runnable>,NamedThreadFactory,String)",6,2,n/a,21,1,7,7,2
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.JMXEnabledThreadPoolExecutor(int,long,TimeUnit,BlockingQueue<Runnable>,NamedThreadFactory,String)",1,5,n/a,9,0,6,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.getCompletedTasks()",1,0,n/a,7,0,0,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.getCurrentlyBlockedTasks()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.getPendingTasks()",2,0,n/a,7,0,0,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.getTotalBlockedTasks()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.onFinalAccept(Runnable)",1,0,n/a,5,0,1,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.onFinalRejection(Runnable)",1,0,n/a,5,0,1,1,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.onInitialRejection(Runnable)",2,0,n/a,6,0,1,2,1
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.shutdown()",3,0,n/a,11,1,0,3,2
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.shutdownNow()",3,0,n/a,11,1,0,3,2
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.unregisterMBean()",4,2,n/a,11,1,0,3,2
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutorMBean.getCurrentlyBlockedTasks()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutorMBean.getTotalBlockedTasks()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.concurrent.NamedThreadFactory.NamedThreadFactory(String)",1,3,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.NamedThreadFactory.NamedThreadFactory(String,int)",0,2,n/a,5,0,2,2,1
"org.apache.cassandra.concurrent.NamedThreadFactory.newThread(Runnable)",3,0,n/a,7,0,1,4,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.LoggingScheduledFuture(RunnableScheduledFuture<V>)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.cancel(boolean)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.compareTo(Delayed)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.get()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.get(long,TimeUnit)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.getDelay(TimeUnit)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.isCancelled()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.isDone()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.isPeriodic()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture.run()",6,0,n/a,12,1,0,4,3
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.RetryingScheduledThreadPoolExecutor(String)",1,3,n/a,4,0,1,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.RetryingScheduledThreadPoolExecutor(String,int)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.RetryingScheduledThreadPoolExecutor(int,String,int)",2,2,n/a,4,0,3,1,1
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.decorateTask(Runnable,RunnableScheduledFuture<V>)",1,0,n/a,5,0,2,1,1
"org.apache.cassandra.concurrent.Stage.getJmxName()",5,0,n/a,9,1,0,4,2
"org.apache.cassandra.concurrent.Stage.getJmxType()",1,0,n/a,21,1,0,16,4
"org.apache.cassandra.concurrent.StageManager.getStage(Stage)",1,16,n/a,8,0,1,1,1
"org.apache.cassandra.concurrent.StageManager.multiThreadedConfigurableStage(Stage,int)",5,3,n/a,9,0,2,1,1
"org.apache.cassandra.concurrent.StageManager.multiThreadedStage(Stage,int)",5,3,n/a,9,0,2,1,1
"org.apache.cassandra.concurrent.StageManager.shutdownNow()",3,2,n/a,10,1,0,2,2
"org.apache.cassandra.config.CFMetaData.CFMetaData(String,String,ColumnFamilyType,AbstractType,AbstractType)",2,5,n/a,4,0,5,1,1
"org.apache.cassandra.config.CFMetaData.CFMetaData(String,String,ColumnFamilyType,AbstractType,AbstractType,int)",2,5,n/a,13,0,6,7,1
"org.apache.cassandra.config.CFMetaData.addDefaultIndexNames(CfDef)",4,0,n/a,23,1,1,9,6
"org.apache.cassandra.config.CFMetaData.apply(CfDef)",52,0,n/a,83,1,1,59,23
"org.apache.cassandra.config.CFMetaData.applyImplicitDefaults(CfDef)",22,1,n/a,26,0,1,22,12
"org.apache.cassandra.config.CFMetaData.columnMetadata(Map<ByteBuffer, ColumnDefinition>)",0,4,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.comment(String)",1,5,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.convertToAvro(CFMetaData)",24,2,n/a,45,1,1,37,5
"org.apache.cassandra.config.CFMetaData.convertToAvro(CfDef)",36,0,n/a,42,2,1,35,4
"org.apache.cassandra.config.CFMetaData.convertToThrift(CFMetaData)",44,0,n/a,42,1,1,34,3
"org.apache.cassandra.config.CFMetaData.copyOpts(CFMetaData,CFMetaData)",15,2,n/a,18,0,2,1,1
"org.apache.cassandra.config.CFMetaData.defaultValidator(AbstractType)",0,4,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.deflate()",22,0,n/a,34,0,0,30,3
"org.apache.cassandra.config.CFMetaData.enforceCommentNotNull(CharSequence)",1,4,n/a,4,0,1,1,2
"org.apache.cassandra.config.CFMetaData.enforceSubccDefault(ColumnFamilyType,AbstractType)",0,1,n/a,4,0,2,1,3
"org.apache.cassandra.config.CFMetaData.equals(Object)",30,0,n/a,38,1,1,6,4
"org.apache.cassandra.config.CFMetaData.fixMaxId()",5,1,n/a,6,0,0,1,2
"org.apache.cassandra.config.CFMetaData.fromThrift(CfDef)",43,0,n/a,34,1,1,30,15
"org.apache.cassandra.config.CFMetaData.gcGraceSeconds(int)",0,6,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.getCF(Integer)",2,3,n/a,7,0,1,1,1
"org.apache.cassandra.config.CFMetaData.getColumnDefinition(ByteBuffer)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.config.CFMetaData.getColumnDefinitionForIndex(String)",3,1,n/a,9,1,1,4,3
"org.apache.cassandra.config.CFMetaData.getColumn_metadata()",1,6,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getComment()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getComparatorFor(ByteBuffer)",0,1,n/a,4,0,1,1,2
"org.apache.cassandra.config.CFMetaData.getDefaultIndexName(String,AbstractType,ByteBuffer)",2,2,n/a,4,0,3,1,1
"org.apache.cassandra.config.CFMetaData.getDefaultValidator()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getGcGraceSeconds()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getId(String,String)",2,5,n/a,7,0,2,1,1
"org.apache.cassandra.config.CFMetaData.getKeyCacheSavePeriodInSeconds()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getKeyCacheSize()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getKeyName()",0,2,n/a,4,0,0,1,2
"org.apache.cassandra.config.CFMetaData.getKeyValidator()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getMaxCompactionThreshold()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getMemtableFlushAfterMins()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getMemtableOperationsInMillions()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getMemtableThroughputInMb()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getMergeShardsChance()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getMinCompactionThreshold()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getReadRepairChance()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getReplicateOnWrite()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getRowCacheProvider()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getRowCacheSavePeriodInSeconds()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getRowCacheSize()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.getValueValidator(ByteBuffer)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.config.CFMetaData.getValueValidator(ColumnDefinition)",1,2,n/a,6,0,1,1,2
"org.apache.cassandra.config.CFMetaData.hashCode()",26,0,n/a,29,0,0,1,1
"org.apache.cassandra.config.CFMetaData.indexColumnFamilyName(ColumnDefinition)",3,2,n/a,13,0,1,1,2
"org.apache.cassandra.config.CFMetaData.inflate(CfDef)",42,0,n/a,66,2,1,41,17
"org.apache.cassandra.config.CFMetaData.init()",3,1,n/a,29,1,0,19,2
"org.apache.cassandra.config.CFMetaData.keyAlias(ByteBuffer)",0,3,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.keyCacheSavePeriod(int)",0,5,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.keyCacheSize(double)",0,6,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.keyValidator(AbstractType)",0,4,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.map(CFMetaData)",4,3,n/a,11,1,1,4,2
"org.apache.cassandra.config.CFMetaData.maxCompactionThreshold(int)",0,5,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.memOps(double)",0,6,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.memSize(int)",0,6,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.memTime(int)",0,5,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.mergeShardsChance(double)",0,4,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.minCompactionThreshold(int)",0,5,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.newIndexMetadata(CFMetaData,ColumnDefinition,AbstractType)",10,2,n/a,12,0,3,1,1
"org.apache.cassandra.config.CFMetaData.newSystemMetadata(String,int,String,AbstractType,AbstractType,int)",11,6,n/a,14,0,6,3,2
"org.apache.cassandra.config.CFMetaData.nextId()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.CFMetaData.purge(CFMetaData)",2,5,n/a,5,0,1,1,1
"org.apache.cassandra.config.CFMetaData.readRepairChance(double)",0,6,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.rename(CFMetaData,String)",2,1,n/a,5,0,2,1,1
"org.apache.cassandra.config.CFMetaData.renameTable(CFMetaData,String)",2,1,n/a,5,0,2,1,1
"org.apache.cassandra.config.CFMetaData.replicateOnWrite(boolean)",0,4,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.rowCacheProvider(IRowCacheProvider)",0,3,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.rowCacheSavePeriod(int)",0,5,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.rowCacheSize(double)",0,4,n/a,1,0,1,2,1
"org.apache.cassandra.config.CFMetaData.sizeMemtableOperations(int)",0,2,n/a,7,0,1,1,1
"org.apache.cassandra.config.CFMetaData.sizeMemtableThroughput()",2,1,n/a,7,0,0,1,1
"org.apache.cassandra.config.CFMetaData.toString()",26,0,n/a,30,0,0,1,1
"org.apache.cassandra.config.CFMetaData.validateMemtableSettings(CfDef)",3,1,n/a,9,0,1,6,4
"org.apache.cassandra.config.CFMetaData.validateMinMaxCompactionThresholds(CfDef)",3,1,n/a,29,2,1,9,10
"org.apache.cassandra.config.ColumnDefinition.ColumnDefinition(ByteBuffer,AbstractType,IndexType,String)",0,5,n/a,7,0,4,4,1
"org.apache.cassandra.config.ColumnDefinition.deflate()",6,2,n/a,10,0,0,6,3
"org.apache.cassandra.config.ColumnDefinition.equals(Object)",6,0,n/a,16,0,1,12,10
"org.apache.cassandra.config.ColumnDefinition.fromColumnDef(ColumnDef)",6,0,n/a,9,0,1,3,3
"org.apache.cassandra.config.ColumnDefinition.fromColumnDef(List<ColumnDef>)",5,0,n/a,9,0,1,6,3
"org.apache.cassandra.config.ColumnDefinition.getIndexName()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.ColumnDefinition.getIndexType()",0,4,n/a,4,0,0,1,1
"org.apache.cassandra.config.ColumnDefinition.getValidator()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.ColumnDefinition.hashCode()",4,0,n/a,9,0,0,5,5
"org.apache.cassandra.config.ColumnDefinition.inflate(ColumnDef)",6,0,n/a,15,1,1,6,4
"org.apache.cassandra.config.ColumnDefinition.setIndexName(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.config.ColumnDefinition.setIndexType(IndexType)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.config.ColumnDefinition.setValidator(AbstractType)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.config.ColumnDefinition.toString()",1,0,n/a,10,0,0,1,1
"org.apache.cassandra.config.ColumnDefinition.validateIndexType(ColumnDef)",1,1,n/a,5,0,1,2,3
"org.apache.cassandra.config.ConfigurationException.ConfigurationException(String)",1,57,n/a,4,0,1,1,1
"org.apache.cassandra.config.ConfigurationException.ConfigurationException(String,Exception)",1,3,n/a,4,0,2,1,1
"org.apache.cassandra.config.DatabaseDescriptor.clearTableDefinition(KSMetaData,UUID)",1,3,n/a,5,0,2,2,1
"org.apache.cassandra.config.DatabaseDescriptor.createAllDirectories()",10,2,n/a,30,2,0,14,6
"org.apache.cassandra.config.DatabaseDescriptor.createEndpointSnitch(String)",2,1,n/a,5,0,1,2,2
"org.apache.cassandra.config.DatabaseDescriptor.estimatesRealMemtableSize()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getAllDataFileLocations()",0,6,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getAllDataFileLocationsForTable(String)",0,5,n/a,16,1,1,6,2
"org.apache.cassandra.config.DatabaseDescriptor.getAuthenticator()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getAuthority()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getBMTThreshold()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getCFMetaData(Descriptor)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getCFMetaData(Integer)",2,5,n/a,7,0,1,4,2
"org.apache.cassandra.config.DatabaseDescriptor.getCFMetaData(String,String)",3,18,n/a,13,0,2,5,2
"org.apache.cassandra.config.DatabaseDescriptor.getClusterName()",0,6,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getColumnFamilyType(String,String)",1,1,n/a,8,0,2,5,3
"org.apache.cassandra.config.DatabaseDescriptor.getColumnIndexSize()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getCommitLogLocation()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getCommitLogSegmentSize()",0,1,n/a,7,0,0,1,2
"org.apache.cassandra.config.DatabaseDescriptor.getCommitLogSync()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getCommitLogSyncBatchWindow()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getCommitLogSyncPeriod()",0,1,n/a,3,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getCompactionThreadPriority()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getCompactionThroughputMbPerSec()",0,4,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getComparator(String,String)",2,3,n/a,8,0,2,5,2
"org.apache.cassandra.config.DatabaseDescriptor.getConcurrentCompactors()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getConcurrentReaders()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getConcurrentReplicators()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getConcurrentWriters()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getDataFileLocationForTable(String,long)",5,2,n/a,36,2,2,18,4
"org.apache.cassandra.config.DatabaseDescriptor.getDefsVersion()",0,16,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getDiskAccessMode()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getDynamicBadnessThreshold()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getDynamicResetInterval()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getDynamicUpdateInterval()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getEncryptionOptions()",0,7,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getEndpointSnitch()",0,19,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getFlushLargestMemtablesAt()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getFlushQueueSize()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getFlushWriters()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getHintedHandoffThrottleDelay()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getInMemoryCompactionLimit()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getIndexAccessMode()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getIndexInterval()",0,11,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getIndexedReadBufferSizeInKB()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getInitialToken()",1,4,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getJobJarLocation()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getJobTrackerAddress()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getKSMetaData(String)",1,6,n/a,5,0,1,2,1
"org.apache.cassandra.config.DatabaseDescriptor.getListenAddress()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getMaxHintWindow()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getNextAvailableDataLocation()",0,0,n/a,6,0,0,3,1
"org.apache.cassandra.config.DatabaseDescriptor.getNonSystemTables()",4,16,n/a,6,0,0,3,1
"org.apache.cassandra.config.DatabaseDescriptor.getPartitioner()",0,5,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getPhiConvictThreshold()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getPreheatKeyCache()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getReduceCacheCapacityTo()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getReduceCacheSizesAt()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRequestScheduler()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRequestSchedulerId()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRequestSchedulerOptions()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRpcAddress()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRpcKeepAlive()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRpcMaxThreads()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRpcMinThreads()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRpcPort()",3,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRpcRecvBufferSize()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRpcSendBufferSize()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRpcServerType()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getRpcTimeout()",0,13,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getSavedCachesLocation()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getSeeds()",3,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getSerializedCachePath(String,String,CacheType)",1,1,n/a,4,0,3,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getSlicedReadBufferSizeInKB()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getStorageConfigURL()",7,1,n/a,23,1,0,12,4
"org.apache.cassandra.config.DatabaseDescriptor.getStoragePort()",3,7,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getSubComparator(String,String)",1,1,n/a,5,0,2,2,1
"org.apache.cassandra.config.DatabaseDescriptor.getTableDefinition(String)",1,17,n/a,4,0,1,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getTableMetaData(String)",2,3,n/a,7,0,1,4,1
"org.apache.cassandra.config.DatabaseDescriptor.getTables()",1,11,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getThriftFramedTransportSize()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getThriftMaxMessageLength()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.getTotalMemtableSpaceInMB()",0,4,n/a,6,0,0,2,1
"org.apache.cassandra.config.DatabaseDescriptor.getValueValidator(String,String,ByteBuffer)",2,2,n/a,4,0,3,1,1
"org.apache.cassandra.config.DatabaseDescriptor.hintedHandoffEnabled()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.incrementalBackupsEnabled()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.isAutoBootstrap()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.isSnapshotBeforeCompaction()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.config.DatabaseDescriptor.loadSchemas()",26,3,n/a,4,5,0,32,14
"org.apache.cassandra.config.DatabaseDescriptor.setCompactionThroughputMbPerSec(int)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.config.DatabaseDescriptor.setDynamicBadnessThreshold(Double)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.config.DatabaseDescriptor.setDynamicResetInterval(Integer)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.config.DatabaseDescriptor.setDynamicUpdateInterval(Integer)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.config.DatabaseDescriptor.setEndpointSnitch(IEndpointSnitch)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.config.DatabaseDescriptor.setTableDefinition(KSMetaData,UUID)",1,6,n/a,8,0,2,3,2
"org.apache.cassandra.config.DatabaseDescriptor.validateMemtableFlushPeriod(int)",1,0,n/a,5,0,1,2,2
"org.apache.cassandra.config.DatabaseDescriptor.validateMemtableOperations(double)",2,1,n/a,7,0,1,4,3
"org.apache.cassandra.config.DatabaseDescriptor.validateMemtableThroughput(int)",1,1,n/a,5,0,1,2,2
"org.apache.cassandra.config.KSMetaData.KSMetaData(String,Class<? extends AbstractReplicationStrategy>,Map<String, String>,CFMetaData...)",1,0,n/a,4,0,4,1,1
"org.apache.cassandra.config.KSMetaData.KSMetaData(String,Class<? extends AbstractReplicationStrategy>,Map<String, String>,boolean,CFMetaData...)",3,1,n/a,11,0,5,8,3
"org.apache.cassandra.config.KSMetaData.cfMetaData()",0,25,n/a,4,0,0,1,1
"org.apache.cassandra.config.KSMetaData.convertOldStrategyName(String)",2,1,n/a,5,0,1,1,1
"org.apache.cassandra.config.KSMetaData.deflate()",16,5,n/a,19,2,0,12,4
"org.apache.cassandra.config.KSMetaData.equals(Object)",6,0,n/a,12,0,1,4,7
"org.apache.cassandra.config.KSMetaData.forwardsCompatibleOptions(KsDef)",4,1,n/a,9,0,1,4,3
"org.apache.cassandra.config.KSMetaData.fromThrift(KsDef,CFMetaData...)",3,0,n/a,8,0,2,1,1
"org.apache.cassandra.config.KSMetaData.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.config.KSMetaData.inflate(KsDef)",22,4,n/a,37,2,1,21,7
"org.apache.cassandra.config.KSMetaData.isDurableWrites()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.config.KSMetaData.maybeAddReplicationFactor(Map<String, String>,String,Integer)",4,2,n/a,6,0,3,2,4
"org.apache.cassandra.config.KSMetaData.optsWithRF(Integer)",3,0,n/a,6,0,1,3,1
"org.apache.cassandra.config.KSMetaData.setDurableWrites(boolean)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.config.KSMetaData.toString()",13,3,n/a,13,0,0,3,1
"org.apache.cassandra.config.KSMetaData.toThrift(KSMetaData)",13,0,n/a,12,0,1,9,4
"org.apache.cassandra.config.SeedProviderDef.SeedProviderDef(LinkedHashMap)",3,0,n/a,5,0,1,2,1
"org.apache.cassandra.cql.AbstractModification.AbstractModification(String,String,Attributes)",4,0,n/a,4,0,3,1,1
"org.apache.cassandra.cql.AbstractModification.AbstractModification(String,String,ConsistencyLevel,Long,int)",1,1,n/a,8,0,5,5,1
"org.apache.cassandra.cql.AbstractModification.getColumnFamily()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.AbstractModification.getConsistencyLevel()",0,0,n/a,4,0,0,1,2
"org.apache.cassandra.cql.AbstractModification.getTimeToLive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.AbstractModification.getTimestamp()",1,0,n/a,4,0,0,1,2
"org.apache.cassandra.cql.AbstractModification.isSetConsistencyLevel()",0,0,n/a,9,0,0,1,1
"org.apache.cassandra.cql.AbstractModification.isSetTimestamp()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.AbstractModification.prepareRowMutations(String,ClientState)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.cql.AbstractModification.prepareRowMutations(String,ClientState,Long)",n/a,0,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.cql.AlterTableStatement.AlterTableStatement(String,OperationType,String)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.cql.AlterTableStatement.AlterTableStatement(String,OperationType,String,String)",1,1,n/a,7,0,4,4,1
"org.apache.cassandra.cql.AlterTableStatement.getCfDef(String)",20,0,n/a,47,3,1,26,10
"org.apache.cassandra.cql.AlterTableStatement.toString()",1,0,n/a,8,0,0,1,1
"org.apache.cassandra.cql.Attributes.Attributes()",0,0,n/a,2,0,0,0,1
"org.apache.cassandra.cql.Attributes.Attributes(ConsistencyLevel,Long,int)",0,0,n/a,6,0,3,3,1
"org.apache.cassandra.cql.Attributes.getConsistencyLevel()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.Attributes.getTimeToLive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.Attributes.getTimestamp()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.Attributes.setConsistencyLevel(ConsistencyLevel)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.Attributes.setTimeToLive(int)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.Attributes.setTimestamp(Long)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.Attributes.toString()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.BatchStatement.BatchStatement(List<AbstractModification>,Attributes)",3,0,n/a,14,0,2,4,1
"org.apache.cassandra.cql.BatchStatement.getConsistencyLevel()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.BatchStatement.getMutations(String,ClientState)",3,0,n/a,8,1,2,4,2
"org.apache.cassandra.cql.BatchStatement.getStatements()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.BatchStatement.getTimeToLive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.BatchStatement.isSetTimestamp()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.BatchStatement.toString()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.CQLStatement.CQLStatement(StatementType,Object)",0,0,n/a,5,0,2,2,1
"org.apache.cassandra.cql.CreateColumnFamilyStatement.CreateColumnFamilyStatement(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.CreateColumnFamilyStatement.addColumn(Term,String)",1,0,n/a,5,0,2,1,1
"org.apache.cassandra.cql.CreateColumnFamilyStatement.addProperty(String,String)",1,0,n/a,5,0,2,1,1
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getCFMetaData(String)",44,0,n/a,46,1,1,8,2
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getColumns(AbstractType<?>)",16,1,n/a,22,2,1,11,4
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getComparator()",6,2,n/a,6,0,0,1,2
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getKeyType()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getName()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getPropertyBoolean(String,Boolean)",3,1,n/a,6,0,2,2,2
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getPropertyDouble(String,Double)",4,5,n/a,20,2,2,8,3
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getPropertyInt(String,Integer)",4,11,n/a,20,2,2,8,3
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getPropertyString(String,String)",1,7,n/a,5,0,2,2,2
"org.apache.cassandra.cql.CreateColumnFamilyStatement.getValidator()",6,1,n/a,6,0,0,1,2
"org.apache.cassandra.cql.CreateColumnFamilyStatement.setKeyAlias(String)",3,0,n/a,6,0,1,2,2
"org.apache.cassandra.cql.CreateColumnFamilyStatement.setKeyType(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.CreateColumnFamilyStatement.validate()",38,1,n/a,73,1,0,38,24
"org.apache.cassandra.cql.CreateIndexStatement.CreateIndexStatement(String,String,Term)",0,0,n/a,6,0,3,3,1
"org.apache.cassandra.cql.CreateIndexStatement.getColumnFamily()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.cql.CreateIndexStatement.getColumnName()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.cql.CreateIndexStatement.getIndexName()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.cql.CreateKeyspaceStatement.CreateKeyspaceStatement(String,Map<String, String>)",0,0,n/a,12,0,2,2,1
"org.apache.cassandra.cql.CreateKeyspaceStatement.getName()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.CreateKeyspaceStatement.getStrategyClass()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.CreateKeyspaceStatement.getStrategyOptions()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.CreateKeyspaceStatement.validate()",18,0,n/a,34,1,0,11,7
"org.apache.cassandra.cql.DeleteStatement.DeleteStatement(List<Term>,String,String,List<Term>,Attributes)",1,0,n/a,6,0,5,3,1
"org.apache.cassandra.cql.DeleteStatement.getColumns()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.DeleteStatement.getKeys()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.cql.DeleteStatement.mutationForKey(ByteBuffer,String,Long)",2,0,n/a,7,0,3,3,1
"org.apache.cassandra.cql.DeleteStatement.mutationForKey(RowMutation,String,Long)",12,1,n/a,18,2,3,9,5
"org.apache.cassandra.cql.DeleteStatement.prepareRowMutations(String,ClientState)",1,0,n/a,5,0,2,1,1
"org.apache.cassandra.cql.DeleteStatement.prepareRowMutations(String,ClientState,Long)",7,1,n/a,12,1,3,6,2
"org.apache.cassandra.cql.DeleteStatement.toString()",1,0,n/a,8,0,0,1,1
"org.apache.cassandra.cql.DropIndexStatement.DropIndexStatement(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.DropIndexStatement.generateMutation(String)",8,0,n/a,16,1,1,10,4
"org.apache.cassandra.cql.DropIndexStatement.getUpdatedCFDef(CfDef)",1,1,n/a,14,2,1,7,6
"org.apache.cassandra.cql.Operation.Operation(Term)",0,0,n/a,7,0,1,3,1
"org.apache.cassandra.cql.Operation.Operation(Term,OperationType,Term)",0,0,n/a,7,0,3,3,1
"org.apache.cassandra.cql.Operation.isUnary()",0,1,n/a,4,0,0,1,2
"org.apache.cassandra.cql.Operation.toString()",3,0,n/a,6,0,0,1,2
"org.apache.cassandra.cql.QueryProcessor.applyMigrationOnStage(Migration)",17,7,n/a,6,2,1,15,4
"org.apache.cassandra.cql.QueryProcessor.batchUpdate(ClientState,List<UpdateStatement>,ConsistencyLevel)",14,1,n/a,29,2,3,12,5
"org.apache.cassandra.cql.QueryProcessor.bufferToString(ByteBuffer)",3,2,n/a,11,1,1,3,2
"org.apache.cassandra.cql.QueryProcessor.describeSchemaVersions()",4,2,n/a,6,0,0,1,1
"org.apache.cassandra.cql.QueryProcessor.extractThriftColumns(SelectStatement,CFMetaData,Row)",31,1,n/a,49,3,3,23,10
"org.apache.cassandra.cql.QueryProcessor.getColumnNames(SelectStatement,CFMetaData)",7,2,n/a,12,1,2,6,3
"org.apache.cassandra.cql.QueryProcessor.getIndexedSlices(String,SelectStatement)",31,1,n/a,40,1,2,17,5
"org.apache.cassandra.cql.QueryProcessor.getKeyString(CFMetaData)",3,2,n/a,13,1,1,5,2
"org.apache.cassandra.cql.QueryProcessor.getSlice(String,SelectStatement)",33,1,n/a,51,2,2,22,6
"org.apache.cassandra.cql.QueryProcessor.getStatement(String)",7,1,n/a,15,0,1,8,1
"org.apache.cassandra.cql.QueryProcessor.multiRangeSlice(String,SelectStatement)",55,1,n/a,66,1,2,28,20
"org.apache.cassandra.cql.QueryProcessor.process(String,ClientState)",174,1,n/a,329,3,2,208,55
"org.apache.cassandra.cql.QueryProcessor.slicePredicateFromSelect(SelectStatement,CFMetaData)",12,2,n/a,19,1,2,10,3
"org.apache.cassandra.cql.QueryProcessor.thriftify(IColumn)",10,2,n/a,7,0,1,2,2
"org.apache.cassandra.cql.QueryProcessor.validateColumn(CFMetaData,ByteBuffer,ByteBuffer)",7,1,n/a,17,1,3,6,3
"org.apache.cassandra.cql.QueryProcessor.validateColumnName(ByteBuffer)",2,2,n/a,5,0,1,1,1
"org.apache.cassandra.cql.QueryProcessor.validateColumnNames(Iterable<ByteBuffer>)",6,3,n/a,13,1,1,5,4
"org.apache.cassandra.cql.QueryProcessor.validateKey(ByteBuffer)",5,2,n/a,13,1,1,4,4
"org.apache.cassandra.cql.QueryProcessor.validateKeyAlias(CFMetaData,String)",8,1,n/a,7,0,2,4,2
"org.apache.cassandra.cql.QueryProcessor.validateSchemaAgreement()",3,7,n/a,6,0,0,2,2
"org.apache.cassandra.cql.QueryProcessor.validateSchemaIsSettled()",8,1,n/a,17,2,0,9,4
"org.apache.cassandra.cql.QueryProcessor.validateSelect(String,SelectStatement)",35,1,n/a,29,2,2,17,17
"org.apache.cassandra.cql.QueryProcessor.validateSlicePredicate(CFMetaData,SlicePredicate)",2,2,n/a,8,0,2,3,2
"org.apache.cassandra.cql.QueryProcessor.validateSliceRange(CFMetaData,ByteBuffer,ByteBuffer,boolean)",5,2,n/a,8,0,4,4,5
"org.apache.cassandra.cql.QueryProcessor.validateSliceRange(CFMetaData,SliceRange)",1,1,n/a,5,0,2,1,1
"org.apache.cassandra.cql.Relation.Relation(Term,String,Term)",4,0,n/a,15,0,3,5,2
"org.apache.cassandra.cql.Relation.getEntity()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.Relation.getValue()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.Relation.isColumn()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.Relation.isKey()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.Relation.operator()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.Relation.toString()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.RelationType.forString(String)",5,1,n/a,14,0,1,11,6
"org.apache.cassandra.cql.SelectExpression.SelectExpression(Term,Term,int,boolean,boolean)",0,0,n/a,16,0,5,5,1
"org.apache.cassandra.cql.SelectExpression.SelectExpression(Term,int,boolean)",2,0,n/a,15,0,3,5,1
"org.apache.cassandra.cql.SelectExpression.and(Term)",2,0,n/a,10,0,1,2,1
"org.apache.cassandra.cql.SelectExpression.getColumns()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectExpression.getColumnsLimit()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectExpression.getFinish()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectExpression.getStart()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectExpression.isColumnList()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectExpression.isColumnRange()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectExpression.isColumnsReversed()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectExpression.isWildcard()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectExpression.setColumnsLimit(int)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.SelectExpression.setColumnsReversed(boolean)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.SelectStatement.SelectStatement(SelectExpression,boolean,String,ConsistencyLevel,WhereClause,int)",1,0,n/a,10,0,6,6,2
"org.apache.cassandra.cql.SelectStatement.extractKeyAliasFromColumns(CFMetaData)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.SelectStatement.getColumnFamily()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getColumnFinish()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getColumnNames()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getColumnRelations()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getColumnStart()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getColumnsLimit()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getComparator(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.SelectStatement.getConsistencyLevel()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getKeyAlias()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getKeyFinish()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getKeyStart()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getKeys()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getNumRecords()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.getValueValidator(String,ByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.cql.SelectStatement.includeFinishKey()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.includeStartKey()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.isColumnRange()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.isColumnsReversed()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.isCountOperation()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.isKeyRange()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.isMultiKey()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.SelectStatement.isWildcard()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.Term.Term()",0,0,n/a,5,0,0,2,1
"org.apache.cassandra.cql.Term.Term(String,TermType)",0,0,n/a,5,0,2,2,2
"org.apache.cassandra.cql.Term.Term(String,int)",1,0,n/a,12,0,2,2,2
"org.apache.cassandra.cql.Term.equals(Object)",3,0,n/a,20,1,1,15,8
"org.apache.cassandra.cql.Term.getByteBuffer()",4,0,n/a,24,1,0,10,5
"org.apache.cassandra.cql.Term.getByteBuffer(AbstractType<?>)",3,0,n/a,18,1,1,3,2
"org.apache.cassandra.cql.Term.getText()",0,1,n/a,9,0,0,1,1
"org.apache.cassandra.cql.Term.getType()",0,0,n/a,9,0,0,1,1
"org.apache.cassandra.cql.Term.hashCode()",2,0,n/a,9,0,0,5,3
"org.apache.cassandra.cql.Term.toString()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.TermType.forInt(int)",0,1,n/a,13,0,1,9,6
"org.apache.cassandra.cql.UpdateStatement.UpdateStatement(String,String,List<Term>,List<Term>,List<Term>,Attributes)",1,0,n/a,24,0,6,4,1
"org.apache.cassandra.cql.UpdateStatement.UpdateStatement(String,String,Map<Term, Operation>,List<Term>,Attributes)",1,0,n/a,20,0,5,3,1
"org.apache.cassandra.cql.UpdateStatement.getColumnFamily()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.UpdateStatement.getColumns()",11,2,n/a,16,0,0,12,5
"org.apache.cassandra.cql.UpdateStatement.getComparator(String)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.cql.UpdateStatement.getConsistencyLevel()",0,2,n/a,10,0,0,1,2
"org.apache.cassandra.cql.UpdateStatement.getKeyType(String)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.cql.UpdateStatement.getKeys()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.cql.UpdateStatement.getValueValidator(String,ByteBuffer)",1,1,n/a,4,0,2,1,1
"org.apache.cassandra.cql.UpdateStatement.isSetConsistencyLevel()",0,0,n/a,9,0,0,1,1
"org.apache.cassandra.cql.UpdateStatement.mutationForKey(String,ByteBuffer,CFMetaData,Long)",30,1,n/a,57,4,4,23,9
"org.apache.cassandra.cql.UpdateStatement.prepareRowMutations(String,ClientState)",1,0,n/a,5,0,2,1,1
"org.apache.cassandra.cql.UpdateStatement.prepareRowMutations(String,ClientState,Long)",19,1,n/a,29,1,3,18,8
"org.apache.cassandra.cql.UpdateStatement.toString()",2,0,n/a,10,0,0,1,1
"org.apache.cassandra.cql.WhereClause.WhereClause()",0,0,n/a,3,0,0,0,1
"org.apache.cassandra.cql.WhereClause.WhereClause(Relation)",1,0,n/a,9,0,1,1,1
"org.apache.cassandra.cql.WhereClause.and(Relation)",20,1,n/a,25,2,1,10,8
"org.apache.cassandra.cql.WhereClause.andKeyEquals(Term)",1,0,n/a,8,0,1,1,1
"org.apache.cassandra.cql.WhereClause.extractKeysFromColumns(CFMetaData)",15,0,n/a,20,2,1,12,4
"org.apache.cassandra.cql.WhereClause.getColumnRelations()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.WhereClause.getFinishKey()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.WhereClause.getKeyAlias()",0,0,n/a,11,0,0,1,2
"org.apache.cassandra.cql.WhereClause.getKeys()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.WhereClause.getStartKey()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.WhereClause.includeFinishKey()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.WhereClause.includeStartKey()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.WhereClause.isKeyRange()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.cql.WhereClause.isMultiKey()",0,0,n/a,3,0,0,1,1
"org.apache.cassandra.cql.WhereClause.setKeyAlias(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.cql.WhereClause.setMultiKey(boolean)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.BinaryMemtable.BinaryMemtable(ColumnFamilyStore)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.BinaryMemtable.flushAndSignal(CountDownLatch,ExecutorService,ExecutorService,ReplayPosition)",8,0,n/a,5,4,4,5,1
"org.apache.cassandra.db.BinaryMemtable.getSortedKeys()",5,1,n/a,8,0,0,5,1
"org.apache.cassandra.db.BinaryMemtable.isClean()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.BinaryMemtable.isThresholdViolated()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.BinaryMemtable.put(DecoratedKey,ByteBuffer)",8,0,n/a,33,3,2,10,3
"org.apache.cassandra.db.BinaryMemtable.resolve(DecoratedKey,ByteBuffer)",4,1,n/a,5,0,2,2,1
"org.apache.cassandra.db.BinaryMemtable.writeSortedContents(List<DecoratedKey>,ReplayPosition)",10,1,n/a,14,1,2,9,2
"org.apache.cassandra.db.BinaryVerbHandler.doVerb(Message,String)",18,0,n/a,19,1,2,11,3
"org.apache.cassandra.db.Column.Column(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.Column.Column(ByteBuffer,ByteBuffer)",1,2,n/a,4,0,2,1,1
"org.apache.cassandra.db.Column.Column(ByteBuffer,ByteBuffer,long)",1,2,n/a,9,0,3,6,1
"org.apache.cassandra.db.Column.addColumn(IColumn)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.Column.diff(IColumn)",2,0,n/a,8,1,1,3,2
"org.apache.cassandra.db.Column.equals(Object)",4,0,n/a,14,0,1,10,6
"org.apache.cassandra.db.Column.getLocalDeletionTime()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.getMarkedForDeleteAt()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.getString(AbstractType)",13,0,n/a,12,0,1,9,1
"org.apache.cassandra.db.Column.getSubColumn(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.Column.getSubColumns()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.hashCode()",2,0,n/a,8,0,0,4,3
"org.apache.cassandra.db.Column.isLive()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.isMarkedForDelete()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.localCopy(ColumnFamilyStore)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.Column.mostRecentLiveChangeAt()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.name()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.reconcile(IColumn)",13,0,n/a,13,0,1,7,8
"org.apache.cassandra.db.Column.serializationFlags()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.serializedSize()",1,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.Column.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.size()",2,1,n/a,12,0,0,1,1
"org.apache.cassandra.db.Column.timestamp()",0,6,n/a,4,0,0,1,1
"org.apache.cassandra.db.Column.updateDigest(MessageDigest)",12,0,n/a,16,1,1,8,2
"org.apache.cassandra.db.Column.validateFields(CFMetaData)",5,0,n/a,7,0,1,4,2
"org.apache.cassandra.db.Column.validateName(CFMetaData)",2,1,n/a,5,0,1,2,2
"org.apache.cassandra.db.Column.value()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.ColumnFamily(CFMetaData)",3,3,n/a,7,0,1,4,2
"org.apache.cassandra.db.ColumnFamily.addAll(ColumnFamily)",3,2,n/a,10,0,1,3,2
"org.apache.cassandra.db.ColumnFamily.addColumn(ByteBuffer,Column)",5,5,n/a,15,1,2,7,2
"org.apache.cassandra.db.ColumnFamily.addColumn(IColumn)",5,6,n/a,26,2,1,9,4
"org.apache.cassandra.db.ColumnFamily.addColumn(QueryPath,ByteBuffer,long)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.ColumnFamily.addColumn(QueryPath,ByteBuffer,long,int)",6,1,n/a,11,0,4,7,2
"org.apache.cassandra.db.ColumnFamily.addCounter(QueryPath,long)",3,0,n/a,5,0,2,2,1
"org.apache.cassandra.db.ColumnFamily.addTombstone(ByteBuffer,int,long)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.ColumnFamily.addTombstone(QueryPath,ByteBuffer,long)",2,0,n/a,5,0,3,2,1
"org.apache.cassandra.db.ColumnFamily.addTombstone(QueryPath,int,long)",2,0,n/a,5,0,3,2,1
"org.apache.cassandra.db.ColumnFamily.clear()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.cloneMe()",2,0,n/a,6,0,0,3,1
"org.apache.cassandra.db.ColumnFamily.cloneMeShallow()",5,3,n/a,7,0,0,4,1
"org.apache.cassandra.db.ColumnFamily.create(CFMetaData)",1,3,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamily.create(Integer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamily.create(String,String)",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.ColumnFamily.delete(ColumnFamily)",4,1,n/a,5,0,1,2,1
"org.apache.cassandra.db.ColumnFamily.delete(int,long)",2,1,n/a,6,0,2,2,1
"org.apache.cassandra.db.ColumnFamily.diff(ColumnFamily)",20,1,n/a,38,3,1,17,7
"org.apache.cassandra.db.ColumnFamily.diff(ColumnFamily,ColumnFamily)",1,0,n/a,6,0,2,3,2
"org.apache.cassandra.db.ColumnFamily.digest(ColumnFamily)",4,1,n/a,7,0,1,4,2
"org.apache.cassandra.db.ColumnFamily.equals(Object)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamily.getColumn(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamily.getColumnCount()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getColumnNames()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getColumnSerializer()",0,6,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getColumnsMap()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getComparator()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getComparatorFor(String,String,ByteBuffer)",2,0,n/a,6,0,3,1,2
"org.apache.cassandra.db.ColumnFamily.getEstimatedColumnCount()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getLocalDeletionTime()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getMarkedForDeleteAt()",1,5,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getReverseSortedColumns()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getSortedColumns()",1,4,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.getSubComparator()",1,1,n/a,4,0,0,1,2
"org.apache.cassandra.db.ColumnFamily.getType()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.id()",0,4,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.isEmpty()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.isMarkedForDelete()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.isSuper()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.iterator()",2,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.metadata()",0,5,n/a,7,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.remove(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamily.resolve(ColumnFamily)",1,0,n/a,7,0,1,3,2
"org.apache.cassandra.db.ColumnFamily.retainAll(ColumnFamily)",24,0,n/a,36,3,1,20,15
"org.apache.cassandra.db.ColumnFamily.serializedSize()",2,0,n/a,11,0,0,4,2
"org.apache.cassandra.db.ColumnFamily.serializer()",0,11,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamily.size()",2,0,n/a,9,1,0,4,2
"org.apache.cassandra.db.ColumnFamily.toString()",15,0,n/a,10,0,0,7,3
"org.apache.cassandra.db.ColumnFamily.updateDigest(MessageDigest)",2,2,n/a,5,0,1,2,2
"org.apache.cassandra.db.ColumnFamily.validateColumnFields()",3,1,n/a,13,1,0,3,2
"org.apache.cassandra.db.ColumnFamilyNotDefinedException.ColumnFamilyNotDefinedException(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilySerializer.deserialize(DataInput)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilySerializer.deserialize(DataInput,boolean,boolean)",7,1,n/a,13,0,3,9,3
"org.apache.cassandra.db.ColumnFamilySerializer.deserializeColumns(DataInput,ColumnFamily,boolean,boolean)",10,1,n/a,10,1,4,7,3
"org.apache.cassandra.db.ColumnFamilySerializer.deserializeFromSSTableNoColumns(ColumnFamily,DataInput)",3,2,n/a,5,0,2,2,1
"org.apache.cassandra.db.ColumnFamilySerializer.serialize(ColumnFamily,DataOutput)",6,0,n/a,35,2,2,8,3
"org.apache.cassandra.db.ColumnFamilySerializer.serializeCFInfo(ColumnFamily,DataOutput)",4,1,n/a,5,0,2,2,1
"org.apache.cassandra.db.ColumnFamilySerializer.serializeForSSTable(ColumnFamily,DataOutput)",7,2,n/a,19,2,2,9,3
"org.apache.cassandra.db.ColumnFamilySerializer.serializeWithIndexes(ColumnFamily,DataOutput)",2,0,n/a,5,0,2,2,1
"org.apache.cassandra.db.ColumnFamilySerializer.serializedSize(ColumnFamily)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.CacheType.CacheType(String)",0,2,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.CacheType.toString()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.ColumnFamilyStore(Table,String,IPartitioner,int,CFMetaData)",42,1,n/a,54,1,5,39,8
"org.apache.cassandra.db.ColumnFamilyStore.addIndex(ColumnDefinition)",21,2,n/a,17,3,1,17,5
"org.apache.cassandra.db.ColumnFamilyStore.addSSTable(SSTableReader)",4,1,n/a,15,0,1,3,1
"org.apache.cassandra.db.ColumnFamilyStore.all()",5,2,n/a,10,1,0,5,2
"org.apache.cassandra.db.ColumnFamilyStore.allKeySamples()",4,0,n/a,11,1,0,6,2
"org.apache.cassandra.db.ColumnFamilyStore.apply(DecoratedKey,ColumnFamily)",13,0,n/a,32,3,2,16,6
"org.apache.cassandra.db.ColumnFamilyStore.applyBinary(DecoratedKey,ByteBuffer)",5,0,n/a,13,0,2,3,1
"org.apache.cassandra.db.ColumnFamilyStore.cacheRow(DecoratedKey)",13,2,n/a,23,3,1,11,5
"org.apache.cassandra.db.ColumnFamilyStore.clearUnsafe()",1,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.concatWithIndexes()",3,9,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.createColumnFamilyStore(Table,String)",3,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.ColumnFamilyStore.createColumnFamilyStore(Table,String,IPartitioner,CFMetaData)",18,2,n/a,27,3,4,16,7
"org.apache.cassandra.db.ColumnFamilyStore.createCompactionWriter(long,String,Collection<SSTableReader>)",3,0,n/a,5,0,3,2,1
"org.apache.cassandra.db.ColumnFamilyStore.createFlushWriter(long,long,ReplayPosition)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.ColumnFamilyStore.disableAutoCompaction()",2,0,n/a,5,0,0,2,1
"org.apache.cassandra.db.ColumnFamilyStore.estimateKeys()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.expressionString(IndexExpression)",7,1,n/a,8,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.files(File)",5,3,n/a,7,2,1,7,2
"org.apache.cassandra.db.ColumnFamilyStore.files(String,String,boolean,boolean)",13,3,n/a,30,5,4,12,10
"org.apache.cassandra.db.ColumnFamilyStore.filterColumnFamily(ColumnFamily,QueryFilter,int)",20,1,n/a,46,4,3,17,11
"org.apache.cassandra.db.ColumnFamilyStore.forceBlockingFlush()",2,3,n/a,6,0,0,3,2
"org.apache.cassandra.db.ColumnFamilyStore.forceCleanup(OneShotRenewer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.forceFlush()",6,3,n/a,14,1,0,7,3
"org.apache.cassandra.db.ColumnFamilyStore.forceFlushBinary()",5,0,n/a,6,0,0,3,2
"org.apache.cassandra.db.ColumnFamilyStore.forceFlushIfExpired()",3,0,n/a,5,0,0,2,2
"org.apache.cassandra.db.ColumnFamilyStore.forceMajorCompaction()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.gcBefore()",2,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getBloomFilterFalsePositives()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getBloomFilterFalseRatio()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getBuiltIndexes()",4,0,n/a,16,2,0,5,3
"org.apache.cassandra.db.ColumnFamilyStore.getColumnFamily(DecoratedKey,QueryPath,ByteBuffer,ByteBuffer,boolean,int)",2,0,n/a,4,0,6,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getColumnFamily(QueryFilter)",2,4,n/a,9,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getColumnFamily(QueryFilter,int)",13,1,n/a,25,2,2,13,5
"org.apache.cassandra.db.ColumnFamilyStore.getColumnFamilyName()",0,1,n/a,7,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getComparator()",0,13,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getDataTracker()",0,0,n/a,7,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getEstimatedColumnCountHistogram()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getEstimatedRowSizeHistogram()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getExpectedCompactedFileSize(Iterable<SSTableReader>)",1,0,n/a,14,1,1,5,2
"org.apache.cassandra.db.ColumnFamilyStore.getExtraFilter(IndexClause)",4,1,n/a,9,1,1,4,2
"org.apache.cassandra.db.ColumnFamilyStore.getFlushPath(long,String)",3,2,n/a,12,0,2,4,2
"org.apache.cassandra.db.ColumnFamilyStore.getIndexKeyFor(ByteBuffer,ByteBuffer)",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getIndexedColumnFamilyStore(ByteBuffer)",1,3,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getIndexedColumns()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getKeyCache()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getKeyCacheCapacity()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getKeyCacheSavePeriodInSeconds()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getKeyCacheSize()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getLifetimeReadLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getLifetimeWriteLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getLiveDiskSpaceUsed()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getLiveSSTableCount()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMaxRowSize()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMaxSizeFile(Iterable<SSTableReader>)",2,0,n/a,17,2,1,7,3
"org.apache.cassandra.db.ColumnFamilyStore.getMaximumCompactionThreshold()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMeanColumns()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMeanRowSize()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMemtableColumnsCount()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMemtableDataSize()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMemtableFlushAfterMins()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMemtableOperationsInMillions()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMemtableSwitchCount()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMemtableThreadSafe()",1,9,n/a,14,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMemtableThroughputInMB()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMemtablesPendingFlush()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMinRowSize()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getMinimumCompactionThreshold()",1,0,n/a,14,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getParentColumnfamily()",2,1,n/a,5,0,0,2,1
"org.apache.cassandra.db.ColumnFamilyStore.getPendingTasks()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRangeSlice(ByteBuffer,AbstractBounds,int,IFilter)",31,1,n/a,66,3,4,30,14
"org.apache.cassandra.db.ColumnFamilyStore.getRawCachedRow(DecoratedKey)",2,3,n/a,5,0,1,1,2
"org.apache.cassandra.db.ColumnFamilyStore.getReadCount()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRecentBloomFilterFalsePositives()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRecentBloomFilterFalseRatio()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRecentReadLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRecentReadLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRecentSSTablesPerReadHistogram()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRecentWriteLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRecentWriteLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRowCacheCapacity()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRowCacheSavePeriodInSeconds()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getRowCacheSize()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getSSTables()",1,4,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getSSTablesPerReadHistogram()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getTempSSTablePath(String)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getTempSSTablePath(String,String)",4,2,n/a,10,0,2,2,1
"org.apache.cassandra.db.ColumnFamilyStore.getTopLevelColumns(QueryFilter,int)",27,2,n/a,66,3,2,33,9
"org.apache.cassandra.db.ColumnFamilyStore.getTotalDiskSpaceUsed()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getTotalMemtableLiveSize()",3,0,n/a,7,0,0,4,2
"org.apache.cassandra.db.ColumnFamilyStore.getTotalReadLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getTotalWriteLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.getWriteCount()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.hasUnreclaimedSpace()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.highestSelectivityPredicate(IndexClause)",3,1,n/a,18,2,1,11,5
"org.apache.cassandra.db.ColumnFamilyStore.indexComparator()",3,1,n/a,7,0,0,2,3
"org.apache.cassandra.db.ColumnFamilyStore.initCaches()",11,0,n/a,15,0,0,6,3
"org.apache.cassandra.db.ColumnFamilyStore.intern(ByteBuffer)",3,2,n/a,12,1,1,7,3
"org.apache.cassandra.db.ColumnFamilyStore.internOrCopy(ByteBuffer)",3,0,n/a,6,0,1,3,2
"org.apache.cassandra.db.ColumnFamilyStore.invalidateCachedRow(DecoratedKey)",1,4,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.invalidateKeyCache()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.invalidateRowCache()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.isCompleteSSTables(Set<SSTableReader>)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.isDropped()",4,0,n/a,6,0,0,1,2
"org.apache.cassandra.db.ColumnFamilyStore.isIdentityFilter(SliceQueryFilter)",2,1,n/a,6,0,1,1,3
"org.apache.cassandra.db.ColumnFamilyStore.isIndex()",0,2,n/a,5,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.isIndexBuilt()",1,2,n/a,8,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.isInvalid()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.isKeyInRemainingSSTables(DecoratedKey,Set<? extends SSTable>)",4,1,n/a,17,1,2,4,4
"org.apache.cassandra.db.ColumnFamilyStore.keySamples(Range)",4,1,n/a,11,1,1,6,2
"org.apache.cassandra.db.ColumnFamilyStore.loadNewSSTables()",27,0,n/a,59,1,0,40,11
"org.apache.cassandra.db.ColumnFamilyStore.loadNewSSTables(String,String)",3,0,n/a,12,0,2,2,1
"org.apache.cassandra.db.ColumnFamilyStore.markCompacted(Collection<SSTableReader>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.maybeBuildSecondaryIndexes(Collection<SSTableReader>,SortedSet<ByteBuffer>)",15,2,n/a,28,1,2,12,5
"org.apache.cassandra.db.ColumnFamilyStore.maybeIntern(ByteBuffer)",2,0,n/a,6,0,1,3,2
"org.apache.cassandra.db.ColumnFamilyStore.maybeSwitchMemtable(Memtable,boolean)",28,1,n/a,10,4,2,29,10
"org.apache.cassandra.db.ColumnFamilyStore.newIndexedColumnFamily(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnFamilyStore.openSSTableReader(Entry<Descriptor, Set<Component>>,Set<DecoratedKey>,DataTracker,CFMetaData,IPartitioner)",6,2,n/a,21,1,5,6,3
"org.apache.cassandra.db.ColumnFamilyStore.reduceCacheSizes()",2,0,n/a,8,0,0,2,1
"org.apache.cassandra.db.ColumnFamilyStore.reload()",40,1,n/a,37,1,0,28,19
"org.apache.cassandra.db.ColumnFamilyStore.removeAllSSTables()",3,2,n/a,8,1,0,3,2
"org.apache.cassandra.db.ColumnFamilyStore.removeDeleted(ColumnFamily,int)",2,6,n/a,15,1,2,4,2
"org.apache.cassandra.db.ColumnFamilyStore.removeDeletedCF(ColumnFamily,int)",2,5,n/a,8,0,2,3,3
"org.apache.cassandra.db.ColumnFamilyStore.removeDeletedColumnsOnly(ColumnFamily,int)",3,2,n/a,7,0,2,3,2
"org.apache.cassandra.db.ColumnFamilyStore.removeDeletedStandard(ColumnFamily,int)",9,1,n/a,16,2,2,5,5
"org.apache.cassandra.db.ColumnFamilyStore.removeDeletedSuper(ColumnFamily,int)",17,1,n/a,26,3,2,8,8
"org.apache.cassandra.db.ColumnFamilyStore.removeIndex(ByteBuffer)",6,1,n/a,12,1,1,7,2
"org.apache.cassandra.db.ColumnFamilyStore.renameSSTables(String)",10,1,n/a,25,2,1,10,5
"org.apache.cassandra.db.ColumnFamilyStore.replaceCompactedSSTables(Collection<SSTableReader>,Iterable<SSTableReader>)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.ColumnFamilyStore.replaceFlushed(Memtable,SSTableReader)",2,0,n/a,5,0,2,2,1
"org.apache.cassandra.db.ColumnFamilyStore.satisfies(ColumnFamily,IndexClause,IndexExpression)",6,1,n/a,16,1,3,8,4
"org.apache.cassandra.db.ColumnFamilyStore.satisfies(int,IndexOperator)",1,1,n/a,18,1,2,13,7
"org.apache.cassandra.db.ColumnFamilyStore.scan(IndexClause,AbstractBounds,IFilter)",67,0,n/a,147,5,3,80,30
"org.apache.cassandra.db.ColumnFamilyStore.scheduleCacheSaving(int,int)",2,4,n/a,5,0,2,2,1
"org.apache.cassandra.db.ColumnFamilyStore.scrub()",3,0,n/a,5,0,0,2,1
"org.apache.cassandra.db.ColumnFamilyStore.scrubDataDirectories(String,String)",32,3,n/a,54,3,2,27,14
"org.apache.cassandra.db.ColumnFamilyStore.setKeyCacheSavePeriodInSeconds(int)",5,0,n/a,9,1,1,4,2
"org.apache.cassandra.db.ColumnFamilyStore.setMaximumCompactionThreshold(int)",3,0,n/a,8,1,1,3,2
"org.apache.cassandra.db.ColumnFamilyStore.setMemtableFlushAfterMins(int)",2,0,n/a,8,1,1,3,2
"org.apache.cassandra.db.ColumnFamilyStore.setMemtableOperationsInMillions(double)",2,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.ColumnFamilyStore.setMemtableThroughputInMB(int)",2,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.ColumnFamilyStore.setMinimumCompactionThreshold(int)",4,0,n/a,8,1,1,3,3
"org.apache.cassandra.db.ColumnFamilyStore.setRowCacheSavePeriodInSeconds(int)",5,0,n/a,9,1,1,4,2
"org.apache.cassandra.db.ColumnFamilyStore.snapshot(String)",4,3,n/a,21,1,1,5,3
"org.apache.cassandra.db.ColumnFamilyStore.snapshotWithoutFlush(String)",11,2,n/a,25,3,1,10,5
"org.apache.cassandra.db.ColumnFamilyStore.submitFlush(IFlushable,CountDownLatch,ReplayPosition)",2,2,n/a,14,0,3,2,1
"org.apache.cassandra.db.ColumnFamilyStore.switchBinaryMemtable(DecoratedKey,ByteBuffer)",4,0,n/a,5,0,2,2,1
"org.apache.cassandra.db.ColumnFamilyStore.toString()",0,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.ColumnFamilyStore.truncate()",12,0,n/a,47,1,0,12,3
"org.apache.cassandra.db.ColumnFamilyStore.unregisterMBean()",8,2,n/a,19,1,0,9,4
"org.apache.cassandra.db.ColumnFamilyStore.updateCacheSizes()",3,1,n/a,9,0,0,3,1
"org.apache.cassandra.db.ColumnFamilyStore.updateRowCache(DecoratedKey,ColumnFamily)",4,2,n/a,13,1,2,5,3
"org.apache.cassandra.db.ColumnFamilyStore.waitForActiveFlushes()",9,1,n/a,1,3,0,9,3
"org.apache.cassandra.db.ColumnFamilyStoreMBean.disableAutoCompaction()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.estimateKeys()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.forceFlush()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.forceMajorCompaction()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getBloomFilterFalsePositives()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getBloomFilterFalseRatio()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getBuiltIndexes()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getColumnFamilyName()",n/a,3,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getEstimatedColumnCountHistogram()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getEstimatedRowSizeHistogram()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getKeyCacheSavePeriodInSeconds()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getLifetimeReadLatencyHistogramMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getLifetimeWriteLatencyHistogramMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getLiveDiskSpaceUsed()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getLiveSSTableCount()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMaxRowSize()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMaximumCompactionThreshold()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMeanRowSize()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMemtableColumnsCount()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMemtableDataSize()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMemtableFlushAfterMins()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMemtableOperationsInMillions()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMemtableSwitchCount()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMemtableThroughputInMB()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMinRowSize()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getMinimumCompactionThreshold()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getPendingTasks()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getReadCount()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getRecentBloomFilterFalsePositives()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getRecentBloomFilterFalseRatio()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getRecentReadLatencyHistogramMicros()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getRecentReadLatencyMicros()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getRecentSSTablesPerReadHistogram()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getRecentWriteLatencyHistogramMicros()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getRecentWriteLatencyMicros()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getRowCacheSavePeriodInSeconds()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getSSTablesPerReadHistogram()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getTotalDiskSpaceUsed()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getTotalReadLatencyMicros()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getTotalWriteLatencyMicros()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.getWriteCount()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.invalidateKeyCache()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.invalidateRowCache()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.loadNewSSTables()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.setKeyCacheSavePeriodInSeconds(int)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.setMaximumCompactionThreshold(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.setMemtableFlushAfterMins(int)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.setMemtableOperationsInMillions(double)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.setMemtableThroughputInMB(int)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.setMinimumCompactionThreshold(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyStoreMBean.setRowCacheSavePeriodInSeconds(int)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.ColumnFamilyType.create(String)",1,2,n/a,12,1,1,3,3
"org.apache.cassandra.db.ColumnIndexer.serialize(IIterableColumns,DataOutput)",2,1,n/a,18,1,2,3,2
"org.apache.cassandra.db.ColumnIndexer.serializeInternal(IIterableColumns,DataOutput)",30,1,n/a,64,2,2,35,10
"org.apache.cassandra.db.ColumnIndexer.writeBloomFilter(DataOutput,BloomFilter)",9,2,n/a,8,0,2,5,1
"org.apache.cassandra.db.ColumnIndexer.writeEmptyHeader(DataOutput,BloomFilter)",2,2,n/a,6,0,2,2,1
"org.apache.cassandra.db.ColumnSerializer.CorruptColumnException.CorruptColumnException(String)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnSerializer.deserialize(DataInput)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ColumnSerializer.deserialize(DataInput,ColumnFamilyStore,boolean)",2,1,n/a,9,0,3,1,1
"org.apache.cassandra.db.ColumnSerializer.deserialize(DataInput,ColumnFamilyStore,boolean,int)",26,1,n/a,48,2,4,27,9
"org.apache.cassandra.db.ColumnSerializer.serialize(IColumn,DataOutput)",17,0,n/a,24,2,2,12,4
"org.apache.cassandra.db.CounterColumn.CounterColumn(ByteBuffer,ByteBuffer,long)",1,1,n/a,4,0,3,1,1
"org.apache.cassandra.db.CounterColumn.CounterColumn(ByteBuffer,ByteBuffer,long,long)",1,1,n/a,5,0,4,2,1
"org.apache.cassandra.db.CounterColumn.CounterColumn(ByteBuffer,long,long)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.CounterColumn.CounterColumn(ByteBuffer,long,long,long)",2,0,n/a,4,0,4,1,1
"org.apache.cassandra.db.CounterColumn.computeOldShardMerger()",6,0,n/a,8,0,0,4,2
"org.apache.cassandra.db.CounterColumn.diff(IColumn)",7,0,n/a,13,0,1,9,5
"org.apache.cassandra.db.CounterColumn.equals(Object)",1,0,n/a,6,0,1,1,2
"org.apache.cassandra.db.CounterColumn.getString(AbstractType)",15,0,n/a,15,0,1,11,1
"org.apache.cassandra.db.CounterColumn.hasNodeId(NodeId)",2,1,n/a,7,0,1,1,1
"org.apache.cassandra.db.CounterColumn.hashCode()",1,0,n/a,7,0,0,3,1
"org.apache.cassandra.db.CounterColumn.localCopy(ColumnFamilyStore)",3,0,n/a,5,0,1,1,1
"org.apache.cassandra.db.CounterColumn.reconcile(IColumn)",25,0,n/a,31,2,1,12,7
"org.apache.cassandra.db.CounterColumn.removeOldShards(ColumnFamily,int)",16,1,n/a,37,4,2,19,9
"org.apache.cassandra.db.CounterColumn.removeOldShards(int)",6,2,n/a,10,1,1,4,2
"org.apache.cassandra.db.CounterColumn.serializationFlags()",0,1,n/a,5,0,0,1,1
"org.apache.cassandra.db.CounterColumn.size()",1,0,n/a,9,0,0,1,1
"org.apache.cassandra.db.CounterColumn.timestampOfLastDelete()",0,7,n/a,4,0,0,1,1
"org.apache.cassandra.db.CounterColumn.total()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.CounterColumn.updateDigest(MessageDigest)",12,0,n/a,25,1,1,9,2
"org.apache.cassandra.db.CounterColumn.validateFields(CFMetaData)",3,0,n/a,8,0,1,2,1
"org.apache.cassandra.db.CounterMutation.CounterMutation(RowMutation,ConsistencyLevel)",0,2,n/a,5,0,2,2,1
"org.apache.cassandra.db.CounterMutation.addReadCommandFromColumnFamily(String,ByteBuffer,ColumnFamily,List<ReadCommand>)",5,1,n/a,5,0,4,2,1
"org.apache.cassandra.db.CounterMutation.apply()",16,0,n/a,18,2,0,9,3
"org.apache.cassandra.db.CounterMutation.computeShardMerger(ColumnFamily)",12,1,n/a,46,4,1,25,13
"org.apache.cassandra.db.CounterMutation.consistency()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.CounterMutation.getColumnFamilyIds()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.CounterMutation.getTable()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.CounterMutation.key()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.CounterMutation.makeMutationMessage(int)",7,0,n/a,7,0,1,4,1
"org.apache.cassandra.db.CounterMutation.makeReplicationMutation()",18,0,n/a,25,1,0,17,7
"org.apache.cassandra.db.CounterMutation.mergeOldShards(String,Row)",9,1,n/a,17,2,2,9,3
"org.apache.cassandra.db.CounterMutation.rowMutation()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.CounterMutation.serializer()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.CounterMutation.shouldReplicateOnWrite()",3,0,n/a,7,0,0,4,3
"org.apache.cassandra.db.CounterMutation.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.CounterMutation.toString(boolean)",8,1,n/a,7,0,1,4,1
"org.apache.cassandra.db.CounterMutationSerializer.deserialize(DataInputStream,int)",5,7,n/a,6,0,2,3,1
"org.apache.cassandra.db.CounterMutationSerializer.serialize(CounterMutation,DataOutputStream,int)",6,10,n/a,5,0,3,2,1
"org.apache.cassandra.db.CounterMutationVerbHandler.doVerb(Message,String)",21,0,n/a,31,1,2,13,5
"org.apache.cassandra.db.CounterUpdateColumn.CounterUpdateColumn(ByteBuffer,ByteBuffer,long)",1,1,n/a,4,0,3,1,1
"org.apache.cassandra.db.CounterUpdateColumn.CounterUpdateColumn(ByteBuffer,long,long)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.CounterUpdateColumn.delta()",4,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.CounterUpdateColumn.diff(IColumn)",1,0,n/a,6,0,1,1,1
"org.apache.cassandra.db.CounterUpdateColumn.localCopy(ColumnFamilyStore)",6,0,n/a,8,0,1,1,1
"org.apache.cassandra.db.CounterUpdateColumn.reconcile(IColumn)",10,0,n/a,13,0,1,5,4
"org.apache.cassandra.db.CounterUpdateColumn.serializationFlags()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.DataTracker.DataTracker(ColumnFamilyStore)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.DataTracker.View.View(Memtable,Set<Memtable>,Set<SSTableReader>,Set<SSTableReader>)",0,7,n/a,7,0,4,4,1
"org.apache.cassandra.db.DataTracker.View.markCompacting(Collection<SSTableReader>)",5,1,n/a,5,0,1,2,1
"org.apache.cassandra.db.DataTracker.View.renewMemtable(Memtable)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.DataTracker.View.replace(Collection<SSTableReader>,Iterable<SSTableReader>)",7,1,n/a,6,0,2,3,1
"org.apache.cassandra.db.DataTracker.View.replaceFlushed(Memtable,SSTableReader)",8,1,n/a,6,0,2,3,1
"org.apache.cassandra.db.DataTracker.View.switchMemtable(Memtable)",5,1,n/a,5,0,1,2,1
"org.apache.cassandra.db.DataTracker.View.unmarkCompacting(Collection<SSTableReader>)",4,1,n/a,5,0,1,2,1
"org.apache.cassandra.db.DataTracker.addNewSSTablesSize(Iterable<SSTableReader>)",9,2,n/a,14,1,1,8,3
"org.apache.cassandra.db.DataTracker.addSSTables(Collection<SSTableReader>)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.DataTracker.addStreamedSSTable(SSTableReader)",3,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.DataTracker.estimatedKeys()",2,0,n/a,9,1,0,4,2
"org.apache.cassandra.db.DataTracker.getBloomFilterFalsePositives()",2,0,n/a,9,1,0,4,2
"org.apache.cassandra.db.DataTracker.getBloomFilterFalseRatio()",3,0,n/a,13,1,0,8,4
"org.apache.cassandra.db.DataTracker.getEstimatedColumnCountHistogram()",3,0,n/a,11,1,0,8,3
"org.apache.cassandra.db.DataTracker.getEstimatedRowSizeHistogram()",3,0,n/a,11,1,0,8,3
"org.apache.cassandra.db.DataTracker.getKeyCache()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.DataTracker.getLiveSize()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.DataTracker.getMaxRowSize()",5,0,n/a,10,1,0,5,3
"org.apache.cassandra.db.DataTracker.getMeanColumns()",3,0,n/a,11,1,0,6,3
"org.apache.cassandra.db.DataTracker.getMeanRowSize()",3,0,n/a,11,1,0,6,3
"org.apache.cassandra.db.DataTracker.getMemtable()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.DataTracker.getMemtablesPendingFlush()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.DataTracker.getMinRowSize()",5,0,n/a,10,1,0,5,4
"org.apache.cassandra.db.DataTracker.getRecentBloomFilterFalsePositives()",2,0,n/a,9,1,0,4,2
"org.apache.cassandra.db.DataTracker.getRecentBloomFilterFalseRatio()",3,0,n/a,13,1,0,8,4
"org.apache.cassandra.db.DataTracker.getSSTables()",1,12,n/a,4,0,0,1,1
"org.apache.cassandra.db.DataTracker.getTotalSize()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.DataTracker.getView()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.DataTracker.incrementallyBackup(SSTableReader)",11,2,n/a,18,2,1,8,5
"org.apache.cassandra.db.DataTracker.init()",6,1,n/a,8,0,0,1,1
"org.apache.cassandra.db.DataTracker.markCompacted(Collection<SSTableReader>)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.DataTracker.markCompacting(Collection<SSTableReader>,int,int)",12,0,n/a,32,1,3,19,7
"org.apache.cassandra.db.DataTracker.removeAllSSTables()",3,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.DataTracker.removeOldSSTablesSize(Iterable<SSTableReader>)",7,1,n/a,11,1,1,5,3
"org.apache.cassandra.db.DataTracker.renewMemtable()",4,0,n/a,16,1,0,5,2
"org.apache.cassandra.db.DataTracker.replace(Collection<SSTableReader>,Iterable<SSTableReader>)",6,4,n/a,13,1,2,7,2
"org.apache.cassandra.db.DataTracker.replaceCompactedSSTables(Collection<SSTableReader>,Iterable<SSTableReader>)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.DataTracker.replaceFlushed(Memtable,SSTableReader)",7,0,n/a,13,1,2,7,2
"org.apache.cassandra.db.DataTracker.spaceReclaimed(long)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.DataTracker.switchMemtable()",4,0,n/a,23,1,0,8,2
"org.apache.cassandra.db.DataTracker.unmarkCompacting(Collection<SSTableReader>)",3,0,n/a,14,1,1,4,2
"org.apache.cassandra.db.DecoratedKey.DecoratedKey(T,ByteBuffer)",1,7,n/a,7,0,2,4,1
"org.apache.cassandra.db.DecoratedKey.compareTo(DecoratedKey)",1,9,n/a,4,0,1,1,1
"org.apache.cassandra.db.DecoratedKey.equals(Object)",3,3,n/a,12,0,1,8,4
"org.apache.cassandra.db.DecoratedKey.hashCode()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.DecoratedKey.isEmpty()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.DecoratedKey.toString()",1,1,n/a,6,0,0,2,2
"org.apache.cassandra.db.DefinitionsUpdateVerbHandler.doVerb(Message,String)",33,0,n/a,23,7,2,18,7
"org.apache.cassandra.db.DefsTable.dumpToStorage(UUID)",21,0,n/a,28,1,1,12,2
"org.apache.cassandra.db.DefsTable.getFiles(String,String)",12,0,n/a,4,3,2,6,4
"org.apache.cassandra.db.DefsTable.loadFromStorage(UUID)",22,1,n/a,25,1,1,17,4
"org.apache.cassandra.db.DeletedColumn.DeletedColumn(ByteBuffer,ByteBuffer,long)",1,1,n/a,4,0,3,1,1
"org.apache.cassandra.db.DeletedColumn.DeletedColumn(ByteBuffer,int,long)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.DeletedColumn.getLocalDeletionTime()",2,1,n/a,5,0,0,1,1
"org.apache.cassandra.db.DeletedColumn.getMarkedForDeleteAt()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.DeletedColumn.isMarkedForDelete()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.DeletedColumn.localCopy(ColumnFamilyStore)",3,0,n/a,5,0,1,1,1
"org.apache.cassandra.db.DeletedColumn.reconcile(IColumn)",2,0,n/a,7,0,1,3,2
"org.apache.cassandra.db.DeletedColumn.serializationFlags()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.DeletedColumn.validateFields(CFMetaData)",6,0,n/a,9,0,1,5,3
"org.apache.cassandra.db.EchoedRow.EchoedRow(CompactionController,SSTableIdentityIterator)",3,1,n/a,8,0,2,4,1
"org.apache.cassandra.db.EchoedRow.columnCount()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.EchoedRow.isEmpty()",3,0,n/a,4,0,0,1,2
"org.apache.cassandra.db.EchoedRow.update(MessageDigest)",1,1,n/a,5,0,1,1,1
"org.apache.cassandra.db.EchoedRow.write(DataOutput)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.ExpiringColumn.ExpiringColumn(ByteBuffer,ByteBuffer,long,int)",2,0,n/a,4,0,4,1,1
"org.apache.cassandra.db.ExpiringColumn.ExpiringColumn(ByteBuffer,ByteBuffer,long,int,int)",1,2,n/a,8,0,5,5,1
"org.apache.cassandra.db.ExpiringColumn.getLocalDeletionTime()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.ExpiringColumn.getMarkedForDeleteAt()",2,0,n/a,12,1,0,3,2
"org.apache.cassandra.db.ExpiringColumn.getString(AbstractType)",6,0,n/a,9,0,1,5,1
"org.apache.cassandra.db.ExpiringColumn.getTimeToLive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ExpiringColumn.isMarkedForDelete()",1,1,n/a,5,0,0,1,1
"org.apache.cassandra.db.ExpiringColumn.localCopy(ColumnFamilyStore)",3,0,n/a,5,0,1,1,1
"org.apache.cassandra.db.ExpiringColumn.serializationFlags()",0,1,n/a,5,0,0,1,1
"org.apache.cassandra.db.ExpiringColumn.size()",1,0,n/a,10,0,0,1,1
"org.apache.cassandra.db.ExpiringColumn.updateDigest(MessageDigest)",13,0,n/a,18,1,1,9,2
"org.apache.cassandra.db.ExpiringColumn.validateFields(CFMetaData)",3,0,n/a,9,0,1,5,3
"org.apache.cassandra.db.HintedHandOffManager.HintedHandOffManager()",4,1,n/a,12,1,0,4,2
"org.apache.cassandra.db.HintedHandOffManager.countPendingHints()",6,0,n/a,11,1,0,6,3
"org.apache.cassandra.db.HintedHandOffManager.deleteHintKey(ByteBuffer,ByteBuffer,ByteBuffer,long)",4,1,n/a,6,0,4,3,1
"org.apache.cassandra.db.HintedHandOffManager.deleteHintsForEndpoint(InetAddress)",15,1,n/a,14,3,1,12,2
"org.apache.cassandra.db.HintedHandOffManager.deleteHintsForEndpoint(String)",5,1,n/a,14,1,1,6,2
"org.apache.cassandra.db.HintedHandOffManager.deliverHints(InetAddress)",4,0,n/a,4,2,1,5,2
"org.apache.cassandra.db.HintedHandOffManager.deliverHints(String)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.HintedHandOffManager.deliverHintsToEndpoint(InetAddress)",41,1,n/a,77,4,1,40,10
"org.apache.cassandra.db.HintedHandOffManager.getHintsSlice(int)",15,2,n/a,27,1,1,15,2
"org.apache.cassandra.db.HintedHandOffManager.getTableAndCFNames(ByteBuffer)",12,1,n/a,15,1,1,6,4
"org.apache.cassandra.db.HintedHandOffManager.listEndpointsPendingHints()",5,0,n/a,12,1,0,6,3
"org.apache.cassandra.db.HintedHandOffManager.makeCombinedName(String,String)",6,0,n/a,5,0,2,2,1
"org.apache.cassandra.db.HintedHandOffManager.pagingFinished(ColumnFamily,ByteBuffer)",3,2,n/a,6,0,2,1,3
"org.apache.cassandra.db.HintedHandOffManager.registerMBean()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.HintedHandOffManager.sendRow(InetAddress,String,String,ByteBuffer)",35,1,n/a,64,2,4,38,10
"org.apache.cassandra.db.HintedHandOffManager.waitForSchemaAgreement(InetAddress)",13,1,n/a,27,1,1,15,5
"org.apache.cassandra.db.HintedHandOffManagerMBean.countPendingHints()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.HintedHandOffManagerMBean.deleteHintsForEndpoint(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.HintedHandOffManagerMBean.listEndpointsPendingHints()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.addColumn(IColumn)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IColumn.diff(IColumn)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IColumn.getLocalDeletionTime()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.getMarkedForDeleteAt()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.getString(AbstractType)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IColumn.getSubColumn(ByteBuffer)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IColumn.getSubColumns()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.isLive()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.isMarkedForDelete()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.localCopy(ColumnFamilyStore)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IColumn.mostRecentLiveChangeAt()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.name()",n/a,21,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.reconcile(IColumn)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IColumn.serializationFlags()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.serializedSize()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.size()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.timestamp()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumn.updateDigest(MessageDigest)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IColumn.validateFields(CFMetaData)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IColumn.value()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumnContainer.addColumn(IColumn)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IColumnContainer.getComparator()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumnContainer.getMarkedForDeleteAt()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumnContainer.getSortedColumns()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumnContainer.isMarkedForDelete()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IColumnContainer.remove(ByteBuffer)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IFlushable.flushAndSignal(CountDownLatch,ExecutorService,ExecutorService,ReplayPosition)",n/a,0,0,n/a,n/a,4,n/a,n/a
"org.apache.cassandra.db.IMutation.apply()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IMutation.getColumnFamilyIds()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IMutation.getTable()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IMutation.key()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.IMutation.toString(boolean)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.IndexScanCommand.IndexScanCommand(String,String,IndexClause,SlicePredicate,AbstractBounds)",0,1,n/a,8,0,5,5,1
"org.apache.cassandra.db.IndexScanCommand.IndexScanCommandSerializer.deserialize(DataInput)",11,5,n/a,12,0,1,9,1
"org.apache.cassandra.db.IndexScanCommand.IndexScanCommandSerializer.serialize(IndexScanCommand,DataOutput)",8,7,n/a,9,0,2,6,1
"org.apache.cassandra.db.IndexScanCommand.getMessage(Integer)",8,2,n/a,16,1,1,5,2
"org.apache.cassandra.db.IndexScanCommand.read(Message)",4,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.KeyspaceNotDefinedException.KeyspaceNotDefinedException(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.Memtable.Memtable(ColumnFamilyStore)",3,0,n/a,7,0,1,4,1
"org.apache.cassandra.db.Memtable.clearUnsafe()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Memtable.compareTo(Memtable)",0,0,n/a,16,0,1,6,3
"org.apache.cassandra.db.Memtable.contents()",11,0,n/a,12,1,0,6,2
"org.apache.cassandra.db.Memtable.flushAndSignal(CountDownLatch,ExecutorService,ExecutorService,ReplayPosition)",8,0,n/a,17,4,4,8,2
"org.apache.cassandra.db.Memtable.freeze()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Memtable.getColumnFamily(DecoratedKey)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.Memtable.getEntryIterator(DecoratedKey)",3,0,n/a,8,0,1,1,1
"org.apache.cassandra.db.Memtable.getLiveSize()",1,1,n/a,5,0,0,1,1
"org.apache.cassandra.db.Memtable.getNamesIterator(DecoratedKey,ColumnFamily,NamesQueryFilter)",8,0,n/a,12,3,3,11,4
"org.apache.cassandra.db.Memtable.getOperations()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Memtable.getSerializedSize()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Memtable.getSliceIterator(DecoratedKey,ColumnFamily,SliceQueryFilter,AbstractType)",16,0,n/a,4,2,4,14,7
"org.apache.cassandra.db.Memtable.getTableName()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Memtable.isClean()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Memtable.isExpired()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Memtable.isFrozen()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Memtable.isThresholdViolated()",2,0,n/a,4,0,0,1,2
"org.apache.cassandra.db.Memtable.put(DecoratedKey,ColumnFamily)",1,0,n/a,10,0,2,2,1
"org.apache.cassandra.db.Memtable.resolve(DecoratedKey,ColumnFamily)",8,1,n/a,11,0,2,6,4
"org.apache.cassandra.db.Memtable.toString()",4,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.Memtable.updateLiveRatio()",20,0,n/a,29,3,0,25,6
"org.apache.cassandra.db.Memtable.writeSortedContents(ReplayPosition)",17,1,n/a,20,0,1,11,3
"org.apache.cassandra.db.MemtableAllocator.Region.Region(int)",0,1,n/a,10,0,1,1,1
"org.apache.cassandra.db.MemtableAllocator.Region.allocate(int)",7,1,n/a,31,2,1,10,5
"org.apache.cassandra.db.MemtableAllocator.Region.init()",6,1,n/a,15,0,0,5,1
"org.apache.cassandra.db.MemtableAllocator.Region.toString()",4,0,n/a,7,0,0,1,1
"org.apache.cassandra.db.MemtableAllocator.clone(ByteBuffer)",10,0,n/a,29,2,1,12,4
"org.apache.cassandra.db.MemtableAllocator.getRegion()",4,1,n/a,25,2,0,8,4
"org.apache.cassandra.db.MemtableAllocator.tryRetireRegion(Region)",2,1,n/a,11,1,1,2,2
"org.apache.cassandra.db.MeteredFlusher.countFlushingBytes()",3,2,n/a,10,1,0,5,3
"org.apache.cassandra.db.MeteredFlusher.run()",30,0,n/a,10,3,0,35,10
"org.apache.cassandra.db.RangeSliceCommand.RangeSliceCommand(String,ColumnParent,SlicePredicate,AbstractBounds,int)",2,0,n/a,4,0,5,1,1
"org.apache.cassandra.db.RangeSliceCommand.RangeSliceCommand(String,String,ByteBuffer,SlicePredicate,AbstractBounds,int)",0,2,n/a,9,0,6,6,1
"org.apache.cassandra.db.RangeSliceCommand.getKeyspace()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.RangeSliceCommand.getMessage(Integer)",7,2,n/a,8,0,1,3,1
"org.apache.cassandra.db.RangeSliceCommand.read(Message)",5,1,n/a,6,0,1,3,1
"org.apache.cassandra.db.RangeSliceCommand.toString()",0,0,n/a,12,0,0,1,1
"org.apache.cassandra.db.RangeSliceCommandSerializer.deserialize(DataInputStream,int)",13,8,n/a,15,0,2,12,2
"org.apache.cassandra.db.RangeSliceCommandSerializer.readBuf(int,DataInputStream)",1,1,n/a,8,0,2,5,2
"org.apache.cassandra.db.RangeSliceCommandSerializer.serialize(RangeSliceCommand,DataOutputStream,int)",11,10,n/a,13,0,3,10,3
"org.apache.cassandra.db.RangeSliceReply.RangeSliceReply(List<Row>)",0,2,n/a,4,0,1,1,1
"org.apache.cassandra.db.RangeSliceReply.getReply(Message)",12,1,n/a,11,1,1,6,2
"org.apache.cassandra.db.RangeSliceReply.read(byte[],int)",8,2,n/a,12,1,2,9,2
"org.apache.cassandra.db.RangeSliceReply.toString()",1,0,n/a,7,0,0,1,1
"org.apache.cassandra.db.ReadCommand.ReadCommand(String,ByteBuffer,QueryPath,byte)",0,0,n/a,7,0,4,4,1
"org.apache.cassandra.db.ReadCommand.copy()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.ReadCommand.getColumnFamilyName()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.ReadCommand.getComparator()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ReadCommand.getKeyspace()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ReadCommand.getMessage(Integer)",7,2,n/a,7,0,1,4,1
"org.apache.cassandra.db.ReadCommand.getRow(Table)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.ReadCommand.isDigestQuery()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.ReadCommand.serializer()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ReadCommand.setDigestQuery(boolean)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.ReadCommandSerializer.deserialize(DataInputStream,int)",3,7,n/a,5,0,2,2,1
"org.apache.cassandra.db.ReadCommandSerializer.serialize(ReadCommand,DataOutputStream,int)",3,11,n/a,6,0,3,3,1
"org.apache.cassandra.db.ReadRepairVerbHandler.doVerb(Message,String)",8,0,n/a,14,1,2,6,2
"org.apache.cassandra.db.ReadResponse.ReadResponse(ByteBuffer)",0,1,n/a,6,0,1,3,1
"org.apache.cassandra.db.ReadResponse.ReadResponse(Row)",0,1,n/a,6,0,1,3,1
"org.apache.cassandra.db.ReadResponse.digest()",0,4,n/a,4,0,0,1,1
"org.apache.cassandra.db.ReadResponse.isDigestQuery()",0,8,n/a,4,0,0,1,1
"org.apache.cassandra.db.ReadResponse.row()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.ReadResponse.serializer()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.ReadResponseSerializer.deserialize(DataInputStream,int)",8,7,n/a,19,1,2,11,4
"org.apache.cassandra.db.ReadResponseSerializer.serialize(ReadResponse,DataOutputStream,int)",13,9,n/a,11,1,3,6,4
"org.apache.cassandra.db.ReadVerbHandler.doVerb(Message,String)",33,0,n/a,38,2,2,22,5
"org.apache.cassandra.db.ReadVerbHandler.getResponse(ReadCommand,Row)",8,1,n/a,13,1,2,5,3
"org.apache.cassandra.db.Row.Row(DecoratedKey<?>,ColumnFamily)",0,3,n/a,7,0,2,3,1
"org.apache.cassandra.db.Row.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.Row.toString()",0,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.RowIterator.RowIterator(ReducingIterator<IColumnIterator, Row>,List<Iterator<IColumnIterator>>)",0,0,n/a,10,0,2,2,1
"org.apache.cassandra.db.RowIterator.close()",1,0,n/a,10,2,0,3,3
"org.apache.cassandra.db.RowIterator.hasNext()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowIterator.next()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowIteratorFactory.ConvertToColumnIterator.ConvertToColumnIterator(QueryFilter,AbstractType)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.db.RowIteratorFactory.ConvertToColumnIterator.apply(Entry<DecoratedKey, ColumnFamily>)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.RowIteratorFactory.getIterator(Collection<Memtable>,Collection<SSTableReader>,DecoratedKey,DecoratedKey,QueryFilter,AbstractType,ColumnFamilyStore)",36,0,n/a,20,3,7,30,7
"org.apache.cassandra.db.RowMutation.RowMutation(String,ByteBuffer)",0,3,n/a,5,0,2,2,1
"org.apache.cassandra.db.RowMutation.RowMutation(String,ByteBuffer,Map<Integer, ColumnFamily>)",0,1,n/a,6,0,3,3,1
"org.apache.cassandra.db.RowMutation.RowMutation(String,Row)",1,3,n/a,6,0,2,3,1
"org.apache.cassandra.db.RowMutation.RowMutationSerializer.deserialize(DataInputStream,int)",1,8,n/a,4,0,2,1,1
"org.apache.cassandra.db.RowMutation.RowMutationSerializer.deserialize(DataInputStream,int,boolean)",10,1,n/a,14,1,3,11,2
"org.apache.cassandra.db.RowMutation.RowMutationSerializer.serialize(RowMutation,DataOutputStream,int)",12,10,n/a,16,2,3,8,3
"org.apache.cassandra.db.RowMutation.add(ColumnFamily)",3,1,n/a,14,0,1,4,2
"org.apache.cassandra.db.RowMutation.add(QueryPath,ByteBuffer,long)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.RowMutation.add(QueryPath,ByteBuffer,long,int)",5,5,n/a,24,1,4,6,2
"org.apache.cassandra.db.RowMutation.addColumnOrSuperColumn(String,ColumnOrSuperColumn)",8,0,n/a,25,2,2,9,6
"org.apache.cassandra.db.RowMutation.addCounter(QueryPath,long)",5,3,n/a,11,1,2,6,2
"org.apache.cassandra.db.RowMutation.addHints(RowMutation)",10,0,n/a,9,1,1,4,2
"org.apache.cassandra.db.RowMutation.apply()",5,0,n/a,9,0,0,2,1
"org.apache.cassandra.db.RowMutation.applyBinary()",2,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.RowMutation.applyUnsafe()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowMutation.delete(QueryPath,long)",11,5,n/a,25,1,2,13,5
"org.apache.cassandra.db.RowMutation.deleteColumnOrSuperColumn(String,Deletion)",7,0,n/a,17,2,2,6,6
"org.apache.cassandra.db.RowMutation.fromBytes(byte[],int)",9,0,n/a,17,2,2,9,4
"org.apache.cassandra.db.RowMutation.getColumnFamilies()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowMutation.getColumnFamily(Integer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.RowMutation.getColumnFamilyIds()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowMutation.getMessage(Integer)",1,2,n/a,4,0,1,1,1
"org.apache.cassandra.db.RowMutation.getSerializedBuffer(int)",8,2,n/a,14,1,1,9,2
"org.apache.cassandra.db.RowMutation.getTable()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowMutation.isEmpty()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowMutation.key()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowMutation.localCopy()",16,0,n/a,14,1,0,9,3
"org.apache.cassandra.db.RowMutation.makeRowMutationMessage(Verb,int)",3,1,n/a,4,0,2,1,1
"org.apache.cassandra.db.RowMutation.serializer()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowMutation.toString()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.RowMutation.toString(boolean)",20,1,n/a,20,2,1,12,4
"org.apache.cassandra.db.RowMutationVerbHandler.doVerb(Message,String)",31,0,n/a,39,3,2,25,8
"org.apache.cassandra.db.RowMutationVerbHandler.forwardToLocalNodes(Message,byte[])",9,1,n/a,22,1,2,13,3
"org.apache.cassandra.db.RowSerializer.deserialize(DataInputStream,int)",1,7,n/a,4,0,2,1,1
"org.apache.cassandra.db.RowSerializer.deserialize(DataInputStream,int,boolean)",6,1,n/a,5,0,3,1,1
"org.apache.cassandra.db.RowSerializer.serialize(Row,DataOutputStream,int)",3,9,n/a,5,0,3,2,1
"org.apache.cassandra.db.SchemaCheckVerbHandler.doVerb(Message,String)",9,0,n/a,6,0,2,3,1
"org.apache.cassandra.db.SliceByNamesReadCommand.SliceByNamesReadCommand(String,ByteBuffer,ColumnParent,Collection<ByteBuffer>)",2,0,n/a,4,0,4,1,1
"org.apache.cassandra.db.SliceByNamesReadCommand.SliceByNamesReadCommand(String,ByteBuffer,QueryPath,Collection<ByteBuffer>)",4,1,n/a,6,0,4,3,1
"org.apache.cassandra.db.SliceByNamesReadCommand.copy()",3,0,n/a,6,0,0,3,1
"org.apache.cassandra.db.SliceByNamesReadCommand.getRow(Table)",4,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.SliceByNamesReadCommand.toString()",3,0,n/a,10,0,0,1,1
"org.apache.cassandra.db.SliceByNamesReadCommandSerializer.deserialize(DataInputStream,int)",10,0,n/a,17,1,2,13,2
"org.apache.cassandra.db.SliceByNamesReadCommandSerializer.serialize(ReadCommand,DataOutputStream,int)",9,0,n/a,17,2,3,9,3
"org.apache.cassandra.db.SliceFromReadCommand.SliceFromReadCommand(String,ByteBuffer,ColumnParent,ByteBuffer,ByteBuffer,boolean,int)",2,0,n/a,4,0,7,1,1
"org.apache.cassandra.db.SliceFromReadCommand.SliceFromReadCommand(String,ByteBuffer,QueryPath,ByteBuffer,ByteBuffer,boolean,int)",1,1,n/a,8,0,7,5,1
"org.apache.cassandra.db.SliceFromReadCommand.copy()",3,0,n/a,6,0,0,3,1
"org.apache.cassandra.db.SliceFromReadCommand.getRow(Table)",4,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.SliceFromReadCommand.toString()",5,0,n/a,13,0,0,1,1
"org.apache.cassandra.db.SliceFromReadCommandSerializer.deserialize(DataInputStream,int)",10,0,n/a,14,0,2,4,1
"org.apache.cassandra.db.SliceFromReadCommandSerializer.serialize(ReadCommand,DataOutputStream,int)",9,0,n/a,13,0,3,9,1
"org.apache.cassandra.db.SuperColumn.SuperColumn(ByteBuffer,AbstractType)",2,3,n/a,4,0,2,1,1
"org.apache.cassandra.db.SuperColumn.SuperColumn(ByteBuffer,ConcurrentSkipListMap<ByteBuffer, IColumn>)",1,3,n/a,7,0,2,4,1
"org.apache.cassandra.db.SuperColumn.addColumn(IColumn)",4,2,n/a,14,1,1,7,3
"org.apache.cassandra.db.SuperColumn.cloneMe()",5,0,n/a,6,0,0,3,1
"org.apache.cassandra.db.SuperColumn.cloneMeShallow()",5,0,n/a,6,0,0,3,1
"org.apache.cassandra.db.SuperColumn.diff(IColumn)",17,0,n/a,31,3,1,13,7
"org.apache.cassandra.db.SuperColumn.getComparator()",1,6,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.getLocalDeletionTime()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.getMarkedForDeleteAt()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.getSortedColumns()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.getString(AbstractType)",16,0,n/a,13,1,1,9,2
"org.apache.cassandra.db.SuperColumn.getSubColumn(ByteBuffer)",1,0,n/a,6,0,1,3,2
"org.apache.cassandra.db.SuperColumn.getSubColumns()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.isLive()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.isMarkedForDelete()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.localCopy(ColumnFamilyStore)",7,0,n/a,13,1,1,6,2
"org.apache.cassandra.db.SuperColumn.markForDeleteAt(int,long)",2,4,n/a,6,0,2,2,1
"org.apache.cassandra.db.SuperColumn.mostRecentLiveChangeAt()",4,1,n/a,12,2,0,5,4
"org.apache.cassandra.db.SuperColumn.name()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.putColumn(IColumn)",6,0,n/a,14,1,1,5,2
"org.apache.cassandra.db.SuperColumn.reconcile(IColumn)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.SuperColumn.remove(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.SuperColumn.retainAll(SuperColumn)",24,0,n/a,31,2,1,17,13
"org.apache.cassandra.db.SuperColumn.serializationFlags()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.serializedSize()",2,0,n/a,12,0,0,1,1
"org.apache.cassandra.db.SuperColumn.serializer(AbstractType)",3,0,n/a,10,1,1,5,2
"org.apache.cassandra.db.SuperColumn.shallowCopy()",3,0,n/a,7,0,0,4,1
"org.apache.cassandra.db.SuperColumn.size()",2,1,n/a,12,1,0,4,2
"org.apache.cassandra.db.SuperColumn.timestamp()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumn.updateDigest(MessageDigest)",11,0,n/a,19,1,1,9,3
"org.apache.cassandra.db.SuperColumn.validateFields(CFMetaData)",4,0,n/a,8,1,1,3,2
"org.apache.cassandra.db.SuperColumn.value()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumnSerializer.SuperColumnSerializer(AbstractType)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.SuperColumnSerializer.deserialize(DataInput)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.SuperColumnSerializer.deserialize(DataInput,ColumnFamilyStore)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.SuperColumnSerializer.deserialize(DataInput,ColumnFamilyStore,boolean)",2,2,n/a,4,0,3,1,1
"org.apache.cassandra.db.SuperColumnSerializer.deserialize(DataInput,ColumnFamilyStore,boolean,int)",11,1,n/a,21,1,4,13,5
"org.apache.cassandra.db.SuperColumnSerializer.getComparator()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.SuperColumnSerializer.serialize(IColumn,DataOutput)",12,0,n/a,20,2,2,10,3
"org.apache.cassandra.db.SystemTable.checkHealth()",46,1,n/a,51,1,0,31,6
"org.apache.cassandra.db.SystemTable.decorate(ByteBuffer)",2,9,n/a,4,0,1,1,1
"org.apache.cassandra.db.SystemTable.forceBlockingFlush(String)",5,4,n/a,15,1,1,4,3
"org.apache.cassandra.db.SystemTable.getCurrentLocalNodeId()",13,1,n/a,28,1,0,12,4
"org.apache.cassandra.db.SystemTable.getOldLocalNodeIds()",12,1,n/a,18,1,0,10,3
"org.apache.cassandra.db.SystemTable.getSavedToken()",11,0,n/a,7,0,0,4,2
"org.apache.cassandra.db.SystemTable.incrementAndGetGeneration()",21,1,n/a,26,1,0,14,2
"org.apache.cassandra.db.SystemTable.isBootstrapped()",11,0,n/a,12,0,0,7,2
"org.apache.cassandra.db.SystemTable.isIndexBuilt(String,String)",8,0,n/a,8,0,2,3,1
"org.apache.cassandra.db.SystemTable.loadTokens()",20,0,n/a,30,3,0,14,4
"org.apache.cassandra.db.SystemTable.purgeIncompatibleHints()",20,1,n/a,23,2,0,13,3
"org.apache.cassandra.db.SystemTable.removeToken(Token)",9,0,n/a,17,1,1,6,2
"org.apache.cassandra.db.SystemTable.setBootstrapped(boolean)",9,0,n/a,17,1,1,7,3
"org.apache.cassandra.db.SystemTable.setIndexBuilt(String,String)",11,0,n/a,16,1,2,8,2
"org.apache.cassandra.db.SystemTable.setIndexRemoved(String,String)",9,0,n/a,14,1,2,6,2
"org.apache.cassandra.db.SystemTable.updateToken(InetAddress,Token)",13,0,n/a,19,1,2,8,2
"org.apache.cassandra.db.SystemTable.updateToken(Token)",12,0,n/a,20,1,1,9,2
"org.apache.cassandra.db.SystemTable.writeCurrentLocalNodeId(NodeId,NodeId,long)",18,2,n/a,32,1,3,14,3
"org.apache.cassandra.db.Table.IndexBuilder.IndexBuilder(ColumnFamilyStore,SortedSet<ByteBuffer>,ReducingKeyIterator)",0,1,n/a,6,0,3,3,1
"org.apache.cassandra.db.Table.IndexBuilder.build()",15,0,n/a,34,3,0,16,5
"org.apache.cassandra.db.Table.IndexBuilder.getCompactionInfo()",3,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.Table.Table(String)",22,1,n/a,7,3,1,27,9
"org.apache.cassandra.db.Table.addFullMemtable(List<Memtable>,Memtable)",3,3,n/a,7,0,2,4,2
"org.apache.cassandra.db.Table.all()",4,3,n/a,4,2,0,3,1
"org.apache.cassandra.db.Table.apply(RowMutation,boolean)",43,0,n/a,77,5,2,36,16
"org.apache.cassandra.db.Table.applyIndexUpdates(ByteBuffer,ColumnFamily,ColumnFamilyStore,SortedSet<ByteBuffer>,ColumnFamily)",34,2,n/a,56,2,5,32,12
"org.apache.cassandra.db.Table.cleanupIndexEntry(ColumnFamilyStore,ByteBuffer,IColumn)",15,0,n/a,14,0,3,11,4
"org.apache.cassandra.db.Table.clear(String)",4,2,n/a,14,2,1,7,3
"org.apache.cassandra.db.Table.clearSnapshot(String)",6,1,n/a,18,2,1,7,4
"org.apache.cassandra.db.Table.createIndexBuilder(ColumnFamilyStore,SortedSet<ByteBuffer>,ReducingKeyIterator)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.Table.createReplicationStrategy(KSMetaData)",5,2,n/a,10,0,1,3,2
"org.apache.cassandra.db.Table.dropCf(Integer)",4,2,n/a,10,0,1,6,2
"org.apache.cassandra.db.Table.flush()",5,1,n/a,11,1,0,6,3
"org.apache.cassandra.db.Table.forceCleanup(OneShotRenewer)",10,0,n/a,10,2,1,12,5
"org.apache.cassandra.db.Table.getAllSSTables()",4,2,n/a,10,0,0,4,2
"org.apache.cassandra.db.Table.getColumnFamilyStore(Integer)",2,9,n/a,7,0,1,4,2
"org.apache.cassandra.db.Table.getColumnFamilyStore(String)",4,9,n/a,7,0,1,4,2
"org.apache.cassandra.db.Table.getColumnFamilyStores()",2,6,n/a,4,0,0,1,1
"org.apache.cassandra.db.Table.getDataFileLocation(long)",5,0,n/a,19,2,1,8,3
"org.apache.cassandra.db.Table.getReplicationStrategy()",0,19,n/a,4,0,0,1,1
"org.apache.cassandra.db.Table.getRow(QueryFilter)",4,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.Table.getSnapshotPath(String,String,String)",0,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.Table.getTimestampedSnapshotName(String)",3,2,n/a,13,1,1,4,3
"org.apache.cassandra.db.Table.ignoreObsoleteMutations(ColumnFamily,SortedSet<ByteBuffer>,ColumnFamily)",21,1,n/a,38,3,3,18,18
"org.apache.cassandra.db.Table.indexLockFor(ByteBuffer)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.db.Table.initCf(Integer,String)",5,3,n/a,7,0,2,2,1
"org.apache.cassandra.db.Table.load(RowMutation)",10,0,n/a,14,2,1,6,3
"org.apache.cassandra.db.Table.open(String)",6,43,n/a,23,3,1,10,4
"org.apache.cassandra.db.Table.readCurrentIndexedColumns(DecoratedKey<?>,ColumnFamilyStore,SortedSet<ByteBuffer>)",4,2,n/a,5,0,3,2,1
"org.apache.cassandra.db.Table.renameCf(Integer,String)",5,1,n/a,9,0,2,5,1
"org.apache.cassandra.db.Table.snapshot(String)",2,1,n/a,11,0,1,3,2
"org.apache.cassandra.db.Table.snapshotExists(String)",3,1,n/a,20,2,1,6,3
"org.apache.cassandra.db.Table.toString()",2,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.Table.unloadCf(ColumnFamilyStore)",4,3,n/a,17,1,1,5,3
"org.apache.cassandra.db.TruncateResponse.TruncateResponse(String,String,boolean)",0,1,n/a,5,0,3,3,1
"org.apache.cassandra.db.TruncateResponse.TruncateResponseSerializer.deserialize(DataInputStream,int)",4,7,n/a,7,0,2,4,1
"org.apache.cassandra.db.TruncateResponse.TruncateResponseSerializer.serialize(TruncateResponse,DataOutputStream,int)",3,10,n/a,6,0,3,3,1
"org.apache.cassandra.db.TruncateResponse.makeTruncateResponseMessage(Message,TruncateResponse)",9,0,n/a,8,0,2,4,1
"org.apache.cassandra.db.TruncateResponse.serializer()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.TruncateVerbHandler.doVerb(Message,String)",22,0,n/a,29,2,2,16,3
"org.apache.cassandra.db.TruncateVerbHandler.respondError(Truncation,Message)",5,1,n/a,6,0,2,3,1
"org.apache.cassandra.db.Truncation.Truncation(String,String)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.db.Truncation.apply()",3,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.Truncation.getMessage(Integer)",7,2,n/a,7,0,1,4,1
"org.apache.cassandra.db.Truncation.serializer()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.Truncation.toString()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.TruncationSerializer.deserialize(DataInputStream,int)",3,7,n/a,6,0,2,3,1
"org.apache.cassandra.db.TruncationSerializer.serialize(Truncation,DataOutputStream,int)",2,9,n/a,5,0,3,2,1
"org.apache.cassandra.db.UnserializableColumnFamilyException.UnserializableColumnFamilyException(String,int)",1,0,n/a,5,0,2,2,1
"org.apache.cassandra.db.WriteResponse.WriteResponse(String,ByteBuffer,boolean)",0,1,n/a,5,0,3,3,1
"org.apache.cassandra.db.WriteResponse.WriteResponseSerializer.deserialize(DataInputStream,int)",4,7,n/a,7,0,2,4,1
"org.apache.cassandra.db.WriteResponse.WriteResponseSerializer.serialize(WriteResponse,DataOutputStream,int)",6,10,n/a,6,0,3,3,1
"org.apache.cassandra.db.WriteResponse.isSuccess()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.WriteResponse.key()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.WriteResponse.makeWriteResponseMessage(Message,WriteResponse)",9,0,n/a,7,0,2,4,1
"org.apache.cassandra.db.WriteResponse.serializer()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.WriteResponse.table()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.IColumnIterator.close()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.columniterator.IColumnIterator.getColumnFamily()",n/a,7,2,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.columniterator.IColumnIterator.getKey()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.columniterator.IdentityQueryFilter.IdentityQueryFilter()",1,2,n/a,7,0,0,1,1
"org.apache.cassandra.db.columniterator.IdentityQueryFilter.filterSuperColumn(SuperColumn,int)",0,0,n/a,5,0,2,1,1
"org.apache.cassandra.db.columniterator.IndexedSliceReader.BlockFetcher.getNextBlock()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.columniterator.IndexedSliceReader.IndexedBlockFetcher.IndexedBlockFetcher()",3,1,n/a,6,0,0,3,1
"org.apache.cassandra.db.columniterator.IndexedSliceReader.IndexedBlockFetcher.getNextBlock()",23,1,n/a,41,1,0,24,20
"org.apache.cassandra.db.columniterator.IndexedSliceReader.IndexedSliceReader(SSTableReader,FileDataInput,ByteBuffer,ByteBuffer,boolean)",8,0,n/a,19,1,5,11,3
"org.apache.cassandra.db.columniterator.IndexedSliceReader.SimpleBlockFetcher.SimpleBlockFetcher()",11,1,n/a,20,1,0,15,8
"org.apache.cassandra.db.columniterator.IndexedSliceReader.SimpleBlockFetcher.getNextBlock()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.IndexedSliceReader.close()",0,0,n/a,3,0,0,0,1
"org.apache.cassandra.db.columniterator.IndexedSliceReader.computeNext()",5,0,n/a,18,2,0,8,7
"org.apache.cassandra.db.columniterator.IndexedSliceReader.getColumnFamily()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.IndexedSliceReader.getKey()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.IndexedSliceReader.isColumnNeeded(IColumn)",22,1,n/a,17,0,1,13,14
"org.apache.cassandra.db.columniterator.SSTableNamesIterator.SSTableNamesIterator(SSTableReader,DecoratedKey,SortedSet<ByteBuffer>)",11,1,n/a,26,1,3,13,3
"org.apache.cassandra.db.columniterator.SSTableNamesIterator.SSTableNamesIterator(SSTableReader,FileDataInput,DecoratedKey,SortedSet<ByteBuffer>)",2,1,n/a,14,1,4,6,2
"org.apache.cassandra.db.columniterator.SSTableNamesIterator.computeNext()",3,0,n/a,6,0,0,3,3
"org.apache.cassandra.db.columniterator.SSTableNamesIterator.getColumnFamily()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.SSTableNamesIterator.getKey()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.SSTableNamesIterator.read(SSTableReader,FileDataInput)",16,2,n/a,31,2,2,16,6
"org.apache.cassandra.db.columniterator.SSTableNamesIterator.readIndexedColumns(CFMetaData,FileDataInput,SortedSet<ByteBuffer>,List<ByteBuffer>,List<IndexInfo>)",17,1,n/a,34,3,5,19,7
"org.apache.cassandra.db.columniterator.SSTableNamesIterator.readSimpleColumns(FileDataInput,SortedSet<ByteBuffer>,List<ByteBuffer>)",7,1,n/a,15,2,3,10,4
"org.apache.cassandra.db.columniterator.SSTableSliceIterator.SSTableSliceIterator(SSTableReader,DecoratedKey,ByteBuffer,ByteBuffer,boolean)",10,1,n/a,21,1,5,10,3
"org.apache.cassandra.db.columniterator.SSTableSliceIterator.SSTableSliceIterator(SSTableReader,FileDataInput,DecoratedKey,ByteBuffer,ByteBuffer,boolean)",1,1,n/a,18,0,6,3,1
"org.apache.cassandra.db.columniterator.SSTableSliceIterator.close()",1,0,n/a,5,0,0,2,2
"org.apache.cassandra.db.columniterator.SSTableSliceIterator.createReader(SSTableReader,FileDataInput,ByteBuffer,ByteBuffer,boolean)",3,2,n/a,6,0,5,1,3
"org.apache.cassandra.db.columniterator.SSTableSliceIterator.getColumnFamily()",1,0,n/a,4,0,0,1,2
"org.apache.cassandra.db.columniterator.SSTableSliceIterator.getKey()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.SSTableSliceIterator.hasNext()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.SSTableSliceIterator.next()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.SSTableSliceIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.SimpleAbstractColumnIterator.close()",0,0,n/a,1,0,0,0,1
"org.apache.cassandra.db.columniterator.SimpleSliceReader.SimpleSliceReader(SSTableReader,FileDataInput,ByteBuffer)",8,0,n/a,18,1,3,10,2
"org.apache.cassandra.db.columniterator.SimpleSliceReader.close()",0,0,n/a,3,0,0,0,1
"org.apache.cassandra.db.columniterator.SimpleSliceReader.computeNext()",10,0,n/a,19,1,0,11,5
"org.apache.cassandra.db.columniterator.SimpleSliceReader.getColumnFamily()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.columniterator.SimpleSliceReader.getKey()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.AbstractCommitLogExecutorService.awaitTermination(long,TimeUnit)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.commitlog.AbstractCommitLogExecutorService.getActiveCount()",0,0,n/a,7,0,0,1,1
"org.apache.cassandra.db.commitlog.AbstractCommitLogExecutorService.getCompletedTasks()",0,0,n/a,7,0,0,1,1
"org.apache.cassandra.db.commitlog.AbstractCommitLogExecutorService.isShutdown()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.AbstractCommitLogExecutorService.isTerminated()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.AbstractCommitLogExecutorService.registerMBean(Object)",4,0,n/a,12,1,1,4,2
"org.apache.cassandra.db.commitlog.AbstractCommitLogExecutorService.shutdownNow()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.BatchCommitLogExecutorService()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.BatchCommitLogExecutorService(int)",6,1,n/a,8,3,1,8,3
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.CheaterFutureTask.CheaterFutureTask(Callable<V>)",1,1,n/a,5,0,1,2,1
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.CheaterFutureTask.getRawCallable()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.CheaterFutureTask.set(V)",1,0,n/a,5,0,1,1,1
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.add(LogRecordAdder)",4,0,n/a,15,1,1,4,3
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.awaitTermination()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.execute(Runnable)",2,0,n/a,11,1,1,3,2
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.getPendingTasks()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.newTaskFor(Callable<T>)",1,1,n/a,5,0,1,1,1
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.newTaskFor(Runnable,T)",2,0,n/a,5,0,2,1,1
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.processWithSyncBatch()",26,1,n/a,43,1,0,23,8
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.shutdown()",6,0,n/a,7,2,0,5,2
"org.apache.cassandra.db.commitlog.CommitLog.CommitLog()",8,1,n/a,24,1,0,6,3
"org.apache.cassandra.db.commitlog.CommitLog.LogRecordAdder.LogRecordAdder(RowMutation)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.commitlog.CommitLog.LogRecordAdder.call()",1,0,n/a,5,0,0,2,1
"org.apache.cassandra.db.commitlog.CommitLog.LogRecordAdder.run()",6,1,n/a,14,1,0,5,3
"org.apache.cassandra.db.commitlog.CommitLog.add(RowMutation)",2,1,n/a,10,0,1,1,1
"org.apache.cassandra.db.commitlog.CommitLog.createNewSegment()",3,2,n/a,5,0,0,2,1
"org.apache.cassandra.db.commitlog.CommitLog.currentSegment()",1,4,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.CommitLog.discardCompletedSegments(Integer,ReplayPosition)",6,2,n/a,5,2,2,7,3
"org.apache.cassandra.db.commitlog.CommitLog.discardCompletedSegmentsInternal(ReplayPosition,Integer)",9,1,n/a,33,2,2,11,4
"org.apache.cassandra.db.commitlog.CommitLog.forceNewSegment()",6,1,n/a,5,2,0,7,3
"org.apache.cassandra.db.commitlog.CommitLog.getContext()",7,2,n/a,4,2,0,6,3
"org.apache.cassandra.db.commitlog.CommitLog.manages(String)",2,1,n/a,9,1,1,4,3
"org.apache.cassandra.db.commitlog.CommitLog.maybeDiscardSegment(CommitLogSegment,Iterator<CommitLogSegment>)",11,2,n/a,17,1,2,7,4
"org.apache.cassandra.db.commitlog.CommitLog.recover()",15,1,n/a,7,2,0,14,5
"org.apache.cassandra.db.commitlog.CommitLog.recover(File[])",100,1,n/a,29,7,1,95,28
"org.apache.cassandra.db.commitlog.CommitLog.resetUnsafe()",3,0,n/a,5,0,0,2,1
"org.apache.cassandra.db.commitlog.CommitLog.segmentsCount()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.commitlog.CommitLog.shutdownBlocking()",2,2,n/a,5,0,0,2,1
"org.apache.cassandra.db.commitlog.CommitLog.sync()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.CommitLogSegment()",5,0,n/a,14,1,0,6,2
"org.apache.cassandra.db.commitlog.CommitLogSegment.close()",2,0,n/a,11,1,0,3,2
"org.apache.cassandra.db.commitlog.CommitLogSegment.createWriter(String)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.dirtyString()",8,0,n/a,11,1,0,5,3
"org.apache.cassandra.db.commitlog.CommitLogSegment.getContext()",2,0,n/a,6,0,0,3,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.getName()",4,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.getPath()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.idFromFilename(String)",4,0,n/a,16,1,1,6,3
"org.apache.cassandra.db.commitlog.CommitLogSegment.isSafeToDelete()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.length()",2,0,n/a,11,1,0,3,2
"org.apache.cassandra.db.commitlog.CommitLogSegment.possibleCommitLogFile(String)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.sync()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.turnOff(Integer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.turnOffIfNotWritten(Integer,Integer)",2,0,n/a,10,0,2,3,3
"org.apache.cassandra.db.commitlog.CommitLogSegment.turnOn(Integer,Integer)",1,1,n/a,4,0,2,1,1
"org.apache.cassandra.db.commitlog.CommitLogSegment.write(RowMutation)",19,0,n/a,40,3,1,22,5
"org.apache.cassandra.db.commitlog.ICommitLogExecutorService.add(LogRecordAdder)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.commitlog.ICommitLogExecutorService.awaitTermination()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.commitlog.ICommitLogExecutorService.shutdown()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.commitlog.ICommitLogExecutorService.submit(Callable<T>)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorService.PeriodicCommitLogExecutorService(CommitLog)",21,0,n/a,19,4,1,22,6
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorService.add(LogRecordAdder)",2,0,n/a,11,1,1,3,2
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorService.awaitTermination()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorService.getActiveCount()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorService.getCompletedTasks()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorService.getPendingTasks()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorService.shutdown()",6,0,n/a,7,2,0,5,2
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorService.submit(Callable<T>)",3,1,n/a,13,1,1,5,2
"org.apache.cassandra.db.commitlog.ReplayPosition.ReplayPosition(long,int)",0,2,n/a,6,0,2,3,1
"org.apache.cassandra.db.commitlog.ReplayPosition.ReplayPositionSerializer.deserialize(DataInput)",3,5,n/a,4,0,1,1,1
"org.apache.cassandra.db.commitlog.ReplayPosition.ReplayPositionSerializer.serialize(ReplayPosition,DataOutput)",2,7,n/a,5,0,2,2,1
"org.apache.cassandra.db.commitlog.ReplayPosition.compareTo(ReplayPosition)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.commitlog.ReplayPosition.equals(Object)",2,0,n/a,9,0,1,8,5
"org.apache.cassandra.db.commitlog.ReplayPosition.getReplayPosition(Iterable<? extends SSTable>)",5,1,n/a,4,2,1,6,2
"org.apache.cassandra.db.commitlog.ReplayPosition.hashCode()",0,0,n/a,7,0,0,3,1
"org.apache.cassandra.db.commitlog.ReplayPosition.toString()",0,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.compaction.AbstractCompactedRow.AbstractCompactedRow(DecoratedKey)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.AbstractCompactedRow.columnCount()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.compaction.AbstractCompactedRow.isEmpty()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.compaction.AbstractCompactedRow.update(MessageDigest)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.compaction.AbstractCompactedRow.write(DataOutput)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.compaction.CompactionController.CompactionController(ColumnFamilyStore,Collection<SSTableReader>,int,boolean)",4,0,n/a,17,0,4,11,3
"org.apache.cassandra.db.compaction.CompactionController.getColumnFamily()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionController.getCompactedRow(List<SSTableIdentityIterator>)",16,0,n/a,23,1,1,10,6
"org.apache.cassandra.db.compaction.CompactionController.getCompactedRow(SSTableIdentityIterator)",2,0,n/a,5,0,1,1,1
"org.apache.cassandra.db.compaction.CompactionController.getKeyspace()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionController.getThrottleResolution()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionController.invalidateCachedRow(DecoratedKey)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.CompactionController.isMajor()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionController.needDeserialize()",0,1,n/a,9,0,0,6,4
"org.apache.cassandra.db.compaction.CompactionController.removeDeletedInCache(DecoratedKey)",2,0,n/a,6,0,1,3,2
"org.apache.cassandra.db.compaction.CompactionController.shouldPurge(DecoratedKey)",1,1,n/a,4,0,1,1,2
"org.apache.cassandra.db.compaction.CompactionInfo.CompactionInfo(String,String,CompactionType,long,long)",0,3,n/a,8,0,5,5,1
"org.apache.cassandra.db.compaction.CompactionInfo.Holder.getCompactionInfo()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.compaction.CompactionInfo.forProgress(long,long)",1,1,n/a,5,0,2,1,1
"org.apache.cassandra.db.compaction.CompactionInfo.getBytesComplete()",0,4,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionInfo.getColumnFamily()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionInfo.getKeyspace()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionInfo.getTaskType()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionInfo.getTotalBytes()",0,5,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionInfo.toString()",20,0,n/a,8,0,0,5,1
"org.apache.cassandra.db.compaction.CompactionIterator.CompactionIterator(CompactionType,Iterable<SSTableReader>,CompactionController)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.compaction.CompactionIterator.CompactionIterator(CompactionType,Iterator,CompactionController)",3,0,n/a,13,1,3,7,2
"org.apache.cassandra.db.compaction.CompactionIterator.close()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionIterator.getCollatingIterator(Iterable<SSTableReader>)",3,1,n/a,11,1,1,4,2
"org.apache.cassandra.db.compaction.CompactionIterator.getCompactionInfo()",3,1,n/a,8,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionIterator.getReduced()",11,1,n/a,29,2,0,14,4
"org.apache.cassandra.db.compaction.CompactionIterator.getScanners()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionIterator.isEqual(SSTableIdentityIterator,SSTableIdentityIterator)",3,1,n/a,5,0,2,1,1
"org.apache.cassandra.db.compaction.CompactionIterator.reduce(SSTableIdentityIterator)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.CompactionIterator.throttle()",14,1,n/a,36,2,0,19,7
"org.apache.cassandra.db.compaction.CompactionIterator.toString()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionManager.CleanupInfo.CleanupInfo(SSTableReader,SSTableScanner)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.db.compaction.CompactionManager.CleanupInfo.getCompactionInfo()",4,0,n/a,15,1,0,3,2
"org.apache.cassandra.db.compaction.CompactionManager.CompactionExecutor.CompactionExecutor()",3,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionManager.CompactionExecutor.CompactionExecutor(int,String)",2,1,n/a,4,0,2,1,1
"org.apache.cassandra.db.compaction.CompactionManager.CompactionExecutor.CompactionExecutor(int,int,String,BlockingQueue<Runnable>)",3,2,n/a,9,0,4,1,1
"org.apache.cassandra.db.compaction.CompactionManager.CompactionExecutor.beginCompaction(Holder)",1,7,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.CompactionManager.CompactionExecutor.finishCompaction(Holder)",1,6,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.CompactionManager.CompactionExecutor.getCompactions()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionManager.ScrubInfo.ScrubInfo(BufferedRandomAccessFile,SSTableReader)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.db.compaction.CompactionManager.ScrubInfo.getCompactionInfo()",4,0,n/a,15,1,0,3,2
"org.apache.cassandra.db.compaction.CompactionManager.SimpleFuture.SimpleFuture(Runnable)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.CompactionManager.SimpleFuture.cancel(boolean)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.CompactionManager.SimpleFuture.get()",1,0,n/a,6,0,0,3,1
"org.apache.cassandra.db.compaction.CompactionManager.SimpleFuture.get(long,TimeUnit)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.compaction.CompactionManager.SimpleFuture.isCancelled()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionManager.SimpleFuture.isDone()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionManager.ValidationCompactionIterator.ValidationCompactionIterator(ColumnFamilyStore,Range)",6,1,n/a,6,0,2,1,1
"org.apache.cassandra.db.compaction.CompactionManager.ValidationCompactionIterator.getCollatingIterator(Iterable<SSTableReader>,Range)",3,1,n/a,9,1,2,4,2
"org.apache.cassandra.db.compaction.CompactionManager.ValidationExecutor.ValidationExecutor()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionManager.convertSSTablesToPairs(Collection<SSTableReader>)",4,1,n/a,9,1,1,4,2
"org.apache.cassandra.db.compaction.CompactionManager.disableAutoCompaction()",4,0,n/a,9,1,0,3,3
"org.apache.cassandra.db.compaction.CompactionManager.doCleanupCompaction(ColumnFamilyStore,Collection<SSTableReader>,OneShotRenewer)",62,1,n/a,104,6,3,60,17
"org.apache.cassandra.db.compaction.CompactionManager.doCompaction(ColumnFamilyStore,Collection<SSTableReader>,int)",13,2,n/a,22,1,3,13,4
"org.apache.cassandra.db.compaction.CompactionManager.doCompactionWithoutSizeEstimation(ColumnFamilyStore,Collection<SSTableReader>,int,String,boolean)",46,2,n/a,83,5,5,48,12
"org.apache.cassandra.db.compaction.CompactionManager.doScrub(ColumnFamilyStore,Collection<SSTableReader>)",2,1,n/a,13,0,2,3,2
"org.apache.cassandra.db.compaction.CompactionManager.doValidationCompaction(ColumnFamilyStore,Validator)",15,1,n/a,39,2,2,15,4
"org.apache.cassandra.db.compaction.CompactionManager.forceUserDefinedCompaction(String,String)",18,0,n/a,28,2,2,17,6
"org.apache.cassandra.db.compaction.CompactionManager.getActiveCompactions()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionManager.getBuckets(Collection<Pair<T, Long>>,long)",17,1,n/a,4,3,2,23,8
"org.apache.cassandra.db.compaction.CompactionManager.getCompactionLock()",1,4,n/a,7,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionManager.getCompactionSummary()",5,0,n/a,7,0,0,4,2
"org.apache.cassandra.db.compaction.CompactionManager.getCompactions()",4,0,n/a,7,0,0,4,2
"org.apache.cassandra.db.compaction.CompactionManager.getCompletedTasks()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.CompactionManager.getDefaultGcBefore(ColumnFamilyStore)",3,6,n/a,6,0,1,1,2
"org.apache.cassandra.db.compaction.CompactionManager.getMaxDataAge(Collection<SSTableReader>)",0,1,n/a,10,1,1,5,3
"org.apache.cassandra.db.compaction.CompactionManager.getPendingTasks()",5,1,n/a,7,0,0,4,2
"org.apache.cassandra.db.compaction.CompactionManager.lookupSSTable(ColumnFamilyStore,Descriptor)",4,1,n/a,13,1,2,4,3
"org.apache.cassandra.db.compaction.CompactionManager.maybeCreateWriter(ColumnFamilyStore,String,int,SSTableWriter,Collection<SSTableReader>)",2,2,n/a,10,1,5,4,2
"org.apache.cassandra.db.compaction.CompactionManager.performCleanup(ColumnFamilyStore,OneShotRenewer)",23,1,n/a,38,5,2,19,5
"org.apache.cassandra.db.compaction.CompactionManager.performMajor(ColumnFamilyStore)",3,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.CompactionManager.performScrub(ColumnFamilyStore)",23,1,n/a,38,5,1,19,5
"org.apache.cassandra.db.compaction.CompactionManager.scrubOne(ColumnFamilyStore,SSTableReader)",94,1,n/a,162,6,2,95,34
"org.apache.cassandra.db.compaction.CompactionManager.submitCacheWrite(Writer)",9,1,n/a,24,4,1,11,2
"org.apache.cassandra.db.compaction.CompactionManager.submitIndexBuild(ColumnFamilyStore,IndexBuilder)",12,1,n/a,22,4,2,13,3
"org.apache.cassandra.db.compaction.CompactionManager.submitMajor(ColumnFamilyStore,long,int)",26,3,n/a,54,6,3,26,8
"org.apache.cassandra.db.compaction.CompactionManager.submitMinorIfNeeded(ColumnFamilyStore)",23,3,n/a,45,5,1,27,7
"org.apache.cassandra.db.compaction.CompactionManager.submitSSTableBuild(Descriptor,OperationType)",10,1,n/a,20,4,2,10,1
"org.apache.cassandra.db.compaction.CompactionManager.submitTruncate(ColumnFamilyStore,long)",9,1,n/a,14,4,2,9,4
"org.apache.cassandra.db.compaction.CompactionManager.submitUserDefined(ColumnFamilyStore,Collection<Descriptor>,int)",20,1,n/a,53,5,3,22,6
"org.apache.cassandra.db.compaction.CompactionManager.submitValidation(ColumnFamilyStore,Validator)",8,1,n/a,14,3,2,8,2
"org.apache.cassandra.db.compaction.CompactionManager.throwIfFatal(Throwable)",0,3,n/a,5,0,1,2,4
"org.apache.cassandra.db.compaction.CompactionManager.updateEstimateFor(ColumnFamilyStore,Set<List<SSTableReader>>)",7,1,n/a,21,3,2,9,5
"org.apache.cassandra.db.compaction.CompactionManagerMBean.forceUserDefinedCompaction(String,String)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.db.compaction.CompactionManagerMBean.getCompactionSummary()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.compaction.CompactionManagerMBean.getCompactions()",n/a,3,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.compaction.CompactionManagerMBean.getCompletedTasks()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.compaction.CompactionManagerMBean.getPendingTasks()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.compaction.CompactionType.CompactionType(String)",0,10,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.CompactionType.toString()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.LazilyCompactedRow.LazilyCompactedRow(CompactionController,List<SSTableIdentityIterator>)",8,0,n/a,23,1,2,14,5
"org.apache.cassandra.db.compaction.LazilyCompactedRow.LazyColumnIterator.LazyColumnIterator(Iterator<IColumn>)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.LazilyCompactedRow.LazyColumnIterator.getReduced()",8,1,n/a,14,1,0,9,3
"org.apache.cassandra.db.compaction.LazilyCompactedRow.LazyColumnIterator.isEqual(IColumn,IColumn)",3,1,n/a,5,0,2,1,1
"org.apache.cassandra.db.compaction.LazilyCompactedRow.LazyColumnIterator.reduce(IColumn)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.compaction.LazilyCompactedRow.columnCount()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.LazilyCompactedRow.getComparator()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.compaction.LazilyCompactedRow.getEstimatedColumnCount()",0,1,n/a,7,0,0,4,2
"org.apache.cassandra.db.compaction.LazilyCompactedRow.isEmpty()",1,0,n/a,5,0,0,2,2
"org.apache.cassandra.db.compaction.LazilyCompactedRow.iterator()",6,2,n/a,9,1,0,4,2
"org.apache.cassandra.db.compaction.LazilyCompactedRow.update(MessageDigest)",12,0,n/a,21,1,1,9,3
"org.apache.cassandra.db.compaction.LazilyCompactedRow.write(DataOutput)",23,0,n/a,23,1,1,16,4
"org.apache.cassandra.db.compaction.PrecompactedRow.PrecompactedRow(CompactionController,List<SSTableIdentityIterator>)",7,0,n/a,6,0,2,3,1
"org.apache.cassandra.db.compaction.PrecompactedRow.PrecompactedRow(DecoratedKey,ColumnFamily)",1,0,n/a,7,0,2,3,1
"org.apache.cassandra.db.compaction.PrecompactedRow.columnCount()",1,0,n/a,4,0,0,1,2
"org.apache.cassandra.db.compaction.PrecompactedRow.getFullColumnFamily()",0,0,n/a,10,0,0,1,1
"org.apache.cassandra.db.compaction.PrecompactedRow.isEmpty()",1,0,n/a,4,0,0,1,2
"org.apache.cassandra.db.compaction.PrecompactedRow.merge(List<SSTableIdentityIterator>)",5,1,n/a,26,2,1,11,4
"org.apache.cassandra.db.compaction.PrecompactedRow.removeDeletedAndOldShards(DecoratedKey,CompactionController,ColumnFamily)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.compaction.PrecompactedRow.removeDeletedAndOldShards(boolean,CompactionController,ColumnFamily)",5,0,n/a,7,0,3,4,5
"org.apache.cassandra.db.compaction.PrecompactedRow.update(MessageDigest)",10,0,n/a,16,1,1,8,2
"org.apache.cassandra.db.compaction.PrecompactedRow.write(DataOutput)",14,0,n/a,11,0,1,8,1
"org.apache.cassandra.db.context.CounterContext.ContextState.ContextState(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.ContextState(ByteBuffer,int)",2,11,n/a,5,0,2,2,1
"org.apache.cassandra.db.context.CounterContext.ContextState.ContextState(ByteBuffer,int,int,int,boolean)",0,2,n/a,8,0,5,5,1
"org.apache.cassandra.db.context.CounterContext.ContextState.allocate(int,int)",3,1,n/a,13,0,2,5,1
"org.apache.cassandra.db.context.CounterContext.ContextState.compareIdTo(ContextState)",3,3,n/a,4,0,1,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.copyTo(ContextState)",7,8,n/a,11,1,1,5,2
"org.apache.cassandra.db.context.CounterContext.ContextState.duplicate()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.elementIdx()",0,4,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.getClock()",2,12,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.getCount()",2,10,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.getNodeId()",2,11,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.hasRemaining()",1,14,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.isDelta()",0,19,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.moveToNext()",1,21,n/a,9,1,0,4,2
"org.apache.cassandra.db.context.CounterContext.ContextState.remainingBodyLength()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.remainingHeaderLength()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.reset()",1,3,n/a,6,0,0,3,1
"org.apache.cassandra.db.context.CounterContext.ContextState.updateIsDelta()",3,3,n/a,4,0,0,1,2
"org.apache.cassandra.db.context.CounterContext.ContextState.writeElement(NodeId,long,long)",1,2,n/a,4,0,3,1,1
"org.apache.cassandra.db.context.CounterContext.ContextState.writeElement(NodeId,long,long,boolean)",6,5,n/a,11,1,4,5,2
"org.apache.cassandra.db.context.CounterContext.clearAllDelta(ByteBuffer)",9,1,n/a,21,0,1,7,2
"org.apache.cassandra.db.context.CounterContext.compareId(ByteBuffer,int,ByteBuffer,int)",1,1,n/a,4,0,4,1,1
"org.apache.cassandra.db.context.CounterContext.computeOldShardMerger(ByteBuffer,List<NodeIdRecord>)",42,1,n/a,69,3,2,39,18
"org.apache.cassandra.db.context.CounterContext.create(NodeId,long,long,boolean)",4,1,n/a,12,1,4,6,5
"org.apache.cassandra.db.context.CounterContext.create(long)",5,4,n/a,16,0,1,5,1
"org.apache.cassandra.db.context.CounterContext.diff(ByteBuffer,ByteBuffer)",15,1,n/a,131,4,2,47,26
"org.apache.cassandra.db.context.CounterContext.hasNodeId(ByteBuffer,NodeId)",5,1,n/a,20,2,2,6,3
"org.apache.cassandra.db.context.CounterContext.headerLength(ByteBuffer)",2,13,n/a,4,0,1,1,1
"org.apache.cassandra.db.context.CounterContext.instance()",0,8,n/a,4,0,0,1,1
"org.apache.cassandra.db.context.CounterContext.merge(ByteBuffer,ByteBuffer)",56,2,n/a,104,4,2,56,26
"org.apache.cassandra.db.context.CounterContext.removeOldShards(ByteBuffer,int)",34,1,n/a,60,3,2,34,22
"org.apache.cassandra.db.context.CounterContext.toString(ByteBuffer)",23,1,n/a,31,2,1,16,4
"org.apache.cassandra.db.context.CounterContext.total(ByteBuffer)",4,5,n/a,17,1,1,7,2
"org.apache.cassandra.db.context.CounterContext.updateDigest(MessageDigest,ByteBuffer)",5,1,n/a,14,0,2,4,1
"org.apache.cassandra.db.context.CounterContext.validateContext(ByteBuffer)",3,1,n/a,6,0,1,3,3
"org.apache.cassandra.db.context.CounterContext.writeElementAtOffset(ByteBuffer,int,NodeId,long,long)",6,3,n/a,7,0,5,3,1
"org.apache.cassandra.db.context.IContext.diff(ByteBuffer,ByteBuffer)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.db.context.IContext.merge(ByteBuffer,ByteBuffer)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.db.context.IContext.toString(ByteBuffer)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.filter.AbstractColumnIterator.close()",0,1,n/a,2,0,0,0,1
"org.apache.cassandra.db.filter.AbstractColumnIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.filter.IFilter.collectReducedColumns(IColumnContainer,Iterator<IColumn>,int)",n/a,0,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.db.filter.IFilter.filterSuperColumn(SuperColumn,int)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.db.filter.IFilter.getColumnComparator(AbstractType)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.filter.IFilter.getMemtableColumnIterator(ColumnFamily,DecoratedKey,AbstractType)",n/a,0,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.db.filter.IFilter.getSSTableColumnIterator(SSTableReader,DecoratedKey)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.db.filter.IFilter.getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey)",n/a,0,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.db.filter.NamesQueryFilter.NamesQueryFilter(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.filter.NamesQueryFilter.NamesQueryFilter(SortedSet<ByteBuffer>)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.filter.NamesQueryFilter.collectReducedColumns(IColumnContainer,Iterator<IColumn>,int)",4,0,n/a,9,1,3,4,3
"org.apache.cassandra.db.filter.NamesQueryFilter.filterSuperColumn(SuperColumn,int)",6,0,n/a,11,2,2,4,4
"org.apache.cassandra.db.filter.NamesQueryFilter.getColumnComparator(AbstractType)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.filter.NamesQueryFilter.getMemtableColumnIterator(ColumnFamily,DecoratedKey,AbstractType)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.filter.NamesQueryFilter.getSSTableColumnIterator(SSTableReader,DecoratedKey)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.filter.NamesQueryFilter.getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.filter.NamesQueryFilter.toString()",1,0,n/a,7,0,0,1,1
"org.apache.cassandra.db.filter.QueryFilter.QueryFilter(DecoratedKey,QueryPath,IFilter)",1,6,n/a,7,0,3,4,2
"org.apache.cassandra.db.filter.QueryFilter.collectCollatedColumns(ColumnFamily,Iterator<IColumn>,int)",23,2,n/a,17,3,3,16,6
"org.apache.cassandra.db.filter.QueryFilter.getColumnFamilyName()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.filter.QueryFilter.getFilter(SlicePredicate,AbstractType)",4,3,n/a,11,1,2,6,2
"org.apache.cassandra.db.filter.QueryFilter.getIdentityFilter(DecoratedKey,QueryPath)",2,4,n/a,8,0,2,1,1
"org.apache.cassandra.db.filter.QueryFilter.getMemtableColumnIterator(ColumnFamily,DecoratedKey,AbstractType)",2,2,n/a,7,0,3,4,2
"org.apache.cassandra.db.filter.QueryFilter.getMemtableColumnIterator(Memtable,AbstractType)",2,0,n/a,7,0,2,4,2
"org.apache.cassandra.db.filter.QueryFilter.getNamesFilter(DecoratedKey,QueryPath,ByteBuffer)",2,0,n/a,7,0,3,1,1
"org.apache.cassandra.db.filter.QueryFilter.getNamesFilter(DecoratedKey,QueryPath,SortedSet<ByteBuffer>)",2,0,n/a,10,0,3,1,1
"org.apache.cassandra.db.filter.QueryFilter.getSSTableColumnIterator(SSTableReader)",2,0,n/a,7,0,1,3,2
"org.apache.cassandra.db.filter.QueryFilter.getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey)",2,1,n/a,6,0,3,3,2
"org.apache.cassandra.db.filter.QueryFilter.getSliceFilter(DecoratedKey,QueryPath,ByteBuffer,ByteBuffer,boolean,int)",2,4,n/a,12,0,6,1,1
"org.apache.cassandra.db.filter.QueryFilter.isRelevant(IColumn,IColumnContainer,int)",6,0,n/a,9,0,3,2,5
"org.apache.cassandra.db.filter.QueryFilter.toString()",2,0,n/a,8,0,0,1,3
"org.apache.cassandra.db.filter.QueryPath.QueryPath(ColumnParent)",1,17,n/a,4,0,1,1,1
"org.apache.cassandra.db.filter.QueryPath.QueryPath(ColumnPath)",1,17,n/a,4,0,1,1,1
"org.apache.cassandra.db.filter.QueryPath.QueryPath(String)",1,17,n/a,4,0,1,1,1
"org.apache.cassandra.db.filter.QueryPath.QueryPath(String,ByteBuffer)",1,4,n/a,4,0,2,1,1
"org.apache.cassandra.db.filter.QueryPath.QueryPath(String,ByteBuffer,ByteBuffer)",0,27,n/a,6,0,3,3,1
"org.apache.cassandra.db.filter.QueryPath.column(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.filter.QueryPath.deserialize(DataInputStream)",7,2,n/a,9,0,1,4,4
"org.apache.cassandra.db.filter.QueryPath.serialize(DataOutputStream)",6,0,n/a,9,0,1,6,6
"org.apache.cassandra.db.filter.QueryPath.toString()",2,0,n/a,9,0,0,1,1
"org.apache.cassandra.db.filter.SliceQueryFilter.SliceQueryFilter(ByteBuffer,ByteBuffer,boolean,int)",0,1,n/a,7,0,4,4,1
"org.apache.cassandra.db.filter.SliceQueryFilter.collectReducedColumns(IColumnContainer,Iterator<IColumn>,int)",18,1,n/a,28,2,3,14,13
"org.apache.cassandra.db.filter.SliceQueryFilter.filterSuperColumn(SuperColumn,int)",15,0,n/a,30,2,2,14,5
"org.apache.cassandra.db.filter.SliceQueryFilter.getColumnComparator(AbstractType)",0,1,n/a,4,0,1,1,2
"org.apache.cassandra.db.filter.SliceQueryFilter.getMemtableColumnIterator(ColumnFamily,DecoratedKey,AbstractType)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.filter.SliceQueryFilter.getSSTableColumnIterator(SSTableReader,DecoratedKey)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.filter.SliceQueryFilter.getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.filter.SliceQueryFilter.toString()",2,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.compose(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.createColumn(ByteBuffer,ByteBuffer,long)",n/a,0,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractCommutativeType.decompose(Long)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.getPrecision(Long)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.getScale(Long)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.isCommutative()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCommutativeType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.ParsedComparator.getAbstractType()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractCompositeType.ParsedComparator.getComparatorSerializedSize()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractCompositeType.ParsedComparator.getRemainingPart()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractCompositeType.ParsedComparator.serializeComparator(ByteBuffer)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractCompositeType.compare(ByteBuffer,ByteBuffer)",12,0,n/a,40,2,2,26,13
"org.apache.cassandra.db.marshal.AbstractCompositeType.compose(ByteBuffer)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.decompose(ByteBuffer)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.fromString(String)",22,0,n/a,44,2,1,29,5
"org.apache.cassandra.db.marshal.AbstractCompositeType.getAndAppendNextComparator(int,ByteBuffer,StringBuilder)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractCompositeType.getBytes(ByteBuffer,int)",5,2,n/a,8,0,2,4,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.getJdbcType()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.getNextComparator(int,ByteBuffer)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractCompositeType.getNextComparator(int,ByteBuffer,ByteBuffer)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractCompositeType.getPrecision(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.getScale(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.getShortLength(ByteBuffer)",2,2,n/a,6,0,1,2,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.getString(ByteBuffer)",13,1,n/a,22,2,1,15,4
"org.apache.cassandra.db.marshal.AbstractCompositeType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.getWithShortLength(ByteBuffer)",2,3,n/a,6,0,1,2,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.isCaseSensitive()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.isCurrency()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.isSigned()",1,0,n/a,8,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.needsQuotes()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.parseNextComparator(int,String)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractCompositeType.putShortLength(ByteBuffer,int)",2,1,n/a,6,0,2,2,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.toString(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractCompositeType.validate(ByteBuffer)",15,0,n/a,22,1,1,17,7
"org.apache.cassandra.db.marshal.AbstractCompositeType.validateNextComparator(int,ByteBuffer)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.AbstractType()",17,0,n/a,12,3,0,14,4
"org.apache.cassandra.db.marshal.AbstractType.compose(ByteBuffer)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.decompose(T)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.fromString(String)",1,3,n/a,6,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractType.getColumnsString(Collection<IColumn>)",5,2,n/a,10,1,1,4,2
"org.apache.cassandra.db.marshal.AbstractType.getJdbcType()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.getPrecision(T)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.getReverseComparator()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractType.getScale(T)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.getString(ByteBuffer)",n/a,6,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.getString(Collection<ByteBuffer>)",5,6,n/a,10,1,1,4,2
"org.apache.cassandra.db.marshal.AbstractType.getType()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.isCaseSensitive()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.isCommutative()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractType.isCurrency()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.isSigned()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.needsQuotes()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.parseDefaultParameters(AbstractType,TypeParser)",5,0,n/a,13,1,2,5,4
"org.apache.cassandra.db.marshal.AbstractType.toString()",2,1,n/a,9,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractType.toString(T)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractType.validate(ByteBuffer)",n/a,10,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.marshal.AbstractUUIDType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractUUIDType.getPrecision(UUID)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractUUIDType.getScale(UUID)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AbstractUUIDType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractUUIDType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractUUIDType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractUUIDType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AbstractUUIDType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AsciiType.AsciiType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.AsciiType.compare(ByteBuffer,ByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.AsciiType.compose(ByteBuffer)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AsciiType.decompose(String)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AsciiType.fromString(String)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AsciiType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AsciiType.getPrecision(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AsciiType.getScale(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AsciiType.getString(ByteBuffer)",3,1,n/a,11,1,1,3,2
"org.apache.cassandra.db.marshal.AsciiType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AsciiType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AsciiType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AsciiType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AsciiType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.AsciiType.toString(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.AsciiType.validate(ByteBuffer)",5,1,n/a,10,1,1,6,4
"org.apache.cassandra.db.marshal.BooleanType.BooleanType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.BooleanType.compare(ByteBuffer,ByteBuffer)",4,0,n/a,8,0,2,5,7
"org.apache.cassandra.db.marshal.BooleanType.compose(ByteBuffer)",3,0,n/a,5,0,1,2,2
"org.apache.cassandra.db.marshal.BooleanType.decompose(Boolean)",2,2,n/a,6,0,1,1,3
"org.apache.cassandra.db.marshal.BooleanType.fromString(String)",9,0,n/a,8,0,1,5,4
"org.apache.cassandra.db.marshal.BooleanType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BooleanType.getPrecision(Boolean)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.BooleanType.getScale(Boolean)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.BooleanType.getString(ByteBuffer)",9,0,n/a,13,1,1,6,4
"org.apache.cassandra.db.marshal.BooleanType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BooleanType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BooleanType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BooleanType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BooleanType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BooleanType.toString(Boolean)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.BooleanType.validate(ByteBuffer)",5,0,n/a,5,0,1,2,3
"org.apache.cassandra.db.marshal.BytesType.BytesType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.BytesType.bytesCompare(ByteBuffer,ByteBuffer)",1,1,n/a,8,1,2,5,3
"org.apache.cassandra.db.marshal.BytesType.compare(ByteBuffer,ByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.BytesType.compose(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.BytesType.decompose(ByteBuffer)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.BytesType.fromString(String)",4,0,n/a,11,1,1,3,2
"org.apache.cassandra.db.marshal.BytesType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BytesType.getPrecision(ByteBuffer)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.BytesType.getScale(ByteBuffer)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.BytesType.getString(ByteBuffer)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.BytesType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BytesType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BytesType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BytesType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BytesType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.BytesType.toString(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.BytesType.validate(ByteBuffer)",0,0,n/a,4,0,1,0,1
"org.apache.cassandra.db.marshal.CompositeType.CompositeType(List<AbstractType>)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.CompositeType.StaticParsedComparator.StaticParsedComparator(AbstractType,String)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.db.marshal.CompositeType.StaticParsedComparator.getAbstractType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.CompositeType.StaticParsedComparator.getComparatorSerializedSize()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.CompositeType.StaticParsedComparator.getRemainingPart()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.CompositeType.StaticParsedComparator.serializeComparator(ByteBuffer)",0,0,n/a,1,0,1,0,1
"org.apache.cassandra.db.marshal.CompositeType.getAndAppendNextComparator(int,ByteBuffer,StringBuilder)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.marshal.CompositeType.getInstance(List<AbstractType>)",5,0,n/a,12,1,1,7,4
"org.apache.cassandra.db.marshal.CompositeType.getInstance(TypeParser)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.CompositeType.getNextComparator(int,ByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.CompositeType.getNextComparator(int,ByteBuffer,ByteBuffer)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.db.marshal.CompositeType.parseNextComparator(int,String)",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.CompositeType.toString()",3,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.marshal.CompositeType.validateNextComparator(int,ByteBuffer)",3,0,n/a,6,0,2,3,2
"org.apache.cassandra.db.marshal.CounterColumnType.CounterColumnType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.CounterColumnType.compare(ByteBuffer,ByteBuffer)",1,0,n/a,6,0,2,3,3
"org.apache.cassandra.db.marshal.CounterColumnType.createColumn(ByteBuffer,ByteBuffer,long)",1,0,n/a,7,0,3,1,1
"org.apache.cassandra.db.marshal.CounterColumnType.fromString(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.CounterColumnType.getString(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.CounterColumnType.toString(Long)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.CounterColumnType.validate(ByteBuffer)",5,0,n/a,5,0,1,2,3
"org.apache.cassandra.db.marshal.DateType.DateType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.DateType.compare(ByteBuffer,ByteBuffer)",4,0,n/a,12,1,2,5,4
"org.apache.cassandra.db.marshal.DateType.compose(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.DateType.decompose(Date)",2,0,n/a,5,0,1,1,2
"org.apache.cassandra.db.marshal.DateType.fromString(String)",15,0,n/a,39,2,1,16,6
"org.apache.cassandra.db.marshal.DateType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DateType.getPrecision(Date)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.DateType.getScale(Date)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.DateType.getString(ByteBuffer)",8,0,n/a,13,1,1,5,3
"org.apache.cassandra.db.marshal.DateType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DateType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DateType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DateType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DateType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DateType.toString(Date)",1,0,n/a,5,0,1,1,1
"org.apache.cassandra.db.marshal.DateType.validate(ByteBuffer)",5,0,n/a,5,0,1,2,3
"org.apache.cassandra.db.marshal.DoubleType.DoubleType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.DoubleType.compare(ByteBuffer,ByteBuffer)",6,0,n/a,12,1,2,5,4
"org.apache.cassandra.db.marshal.DoubleType.compose(ByteBuffer)",1,3,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.DoubleType.decompose(Double)",1,1,n/a,4,0,1,1,2
"org.apache.cassandra.db.marshal.DoubleType.fromString(String)",5,0,n/a,16,1,1,7,3
"org.apache.cassandra.db.marshal.DoubleType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DoubleType.getPrecision(Double)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.DoubleType.getScale(Double)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.DoubleType.getString(ByteBuffer)",6,0,n/a,12,1,1,5,3
"org.apache.cassandra.db.marshal.DoubleType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DoubleType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DoubleType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DoubleType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DoubleType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DoubleType.toString(Double)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.DoubleType.validate(ByteBuffer)",5,0,n/a,5,0,1,2,3
"org.apache.cassandra.db.marshal.DynamicCompositeType.DynamicCompositeType(Map<Byte, AbstractType>)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.DynamicCompositeType.DynamicParsedComparator.DynamicParsedComparator(String)",7,1,n/a,29,2,1,14,5
"org.apache.cassandra.db.marshal.DynamicCompositeType.DynamicParsedComparator.getAbstractType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DynamicCompositeType.DynamicParsedComparator.getComparatorSerializedSize()",2,0,n/a,4,0,0,1,2
"org.apache.cassandra.db.marshal.DynamicCompositeType.DynamicParsedComparator.getRemainingPart()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.DynamicCompositeType.DynamicParsedComparator.serializeComparator(ByteBuffer)",5,0,n/a,11,0,1,7,3
"org.apache.cassandra.db.marshal.DynamicCompositeType.getAndAppendNextComparator(int,ByteBuffer,StringBuilder)",11,0,n/a,26,2,3,10,4
"org.apache.cassandra.db.marshal.DynamicCompositeType.getComparator(ByteBuffer)",7,3,n/a,24,2,1,8,4
"org.apache.cassandra.db.marshal.DynamicCompositeType.getInstance(Map<Byte, AbstractType>)",3,0,n/a,10,1,1,5,2
"org.apache.cassandra.db.marshal.DynamicCompositeType.getInstance(TypeParser)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.DynamicCompositeType.getNextComparator(int,ByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.DynamicCompositeType.getNextComparator(int,ByteBuffer,ByteBuffer)",4,0,n/a,12,1,3,6,2
"org.apache.cassandra.db.marshal.DynamicCompositeType.parseNextComparator(int,String)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.DynamicCompositeType.toString()",3,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.marshal.DynamicCompositeType.validateNextComparator(int,ByteBuffer)",10,0,n/a,29,2,2,14,6
"org.apache.cassandra.db.marshal.FloatType.FloatType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.FloatType.compare(ByteBuffer,ByteBuffer)",6,0,n/a,12,1,2,5,4
"org.apache.cassandra.db.marshal.FloatType.compose(ByteBuffer)",1,3,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.FloatType.decompose(Float)",1,0,n/a,4,0,1,1,2
"org.apache.cassandra.db.marshal.FloatType.fromString(String)",5,1,n/a,16,1,1,7,3
"org.apache.cassandra.db.marshal.FloatType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.FloatType.getPrecision(Float)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.FloatType.getScale(Float)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.FloatType.getString(ByteBuffer)",6,0,n/a,12,1,1,5,3
"org.apache.cassandra.db.marshal.FloatType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.FloatType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.FloatType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.FloatType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.FloatType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.FloatType.toString(Float)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.FloatType.validate(ByteBuffer)",5,0,n/a,5,0,1,2,3
"org.apache.cassandra.db.marshal.IntegerType.IntegerType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.IntegerType.compare(ByteBuffer,ByteBuffer)",12,0,n/a,48,1,2,28,11
"org.apache.cassandra.db.marshal.IntegerType.compose(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.IntegerType.decompose(BigInteger)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.IntegerType.findMostSignificantByte(ByteBuffer)",5,2,n/a,25,2,1,17,10
"org.apache.cassandra.db.marshal.IntegerType.fromString(String)",5,1,n/a,16,1,1,7,3
"org.apache.cassandra.db.marshal.IntegerType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.IntegerType.getPrecision(BigInteger)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.IntegerType.getScale(BigInteger)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.IntegerType.getString(ByteBuffer)",4,0,n/a,8,0,1,5,3
"org.apache.cassandra.db.marshal.IntegerType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.IntegerType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.IntegerType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.IntegerType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.IntegerType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.IntegerType.toString(BigInteger)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.IntegerType.validate(ByteBuffer)",0,0,n/a,4,0,1,0,1
"org.apache.cassandra.db.marshal.LexicalUUIDType.LexicalUUIDType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.LexicalUUIDType.compare(ByteBuffer,ByteBuffer)",6,0,n/a,12,1,2,5,4
"org.apache.cassandra.db.marshal.LexicalUUIDType.compose(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LexicalUUIDType.decompose(UUID)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LexicalUUIDType.fromString(String)",5,1,n/a,14,1,1,5,3
"org.apache.cassandra.db.marshal.LexicalUUIDType.getString(ByteBuffer)",5,0,n/a,12,1,1,5,3
"org.apache.cassandra.db.marshal.LexicalUUIDType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LexicalUUIDType.toString(UUID)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LexicalUUIDType.validate(ByteBuffer)",5,0,n/a,6,0,1,2,3
"org.apache.cassandra.db.marshal.LocalByPartionerType.LocalByPartionerType(IPartitioner<T>)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.compare(ByteBuffer,ByteBuffer)",3,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.compose(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.decompose(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.fromString(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.getJdbcType()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.getPrecision(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.getScale(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.getString(ByteBuffer)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.isCaseSensitive()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.isCurrency()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.isSigned()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.needsQuotes()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.toString(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LocalByPartionerType.validate(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LongType.LongType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.LongType.compare(ByteBuffer,ByteBuffer)",8,0,n/a,15,1,2,8,5
"org.apache.cassandra.db.marshal.LongType.compose(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LongType.decompose(Long)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LongType.fromString(String)",5,0,n/a,16,1,1,7,3
"org.apache.cassandra.db.marshal.LongType.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LongType.getPrecision(Long)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LongType.getScale(Long)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LongType.getString(ByteBuffer)",7,0,n/a,12,1,1,5,3
"org.apache.cassandra.db.marshal.LongType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LongType.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LongType.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LongType.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LongType.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.LongType.toString(Long)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.LongType.validate(ByteBuffer)",5,0,n/a,5,0,1,2,3
"org.apache.cassandra.db.marshal.MarshalException.MarshalException(String)",1,5,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.MarshalException.MarshalException(String,Throwable)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.ReversedType.ReversedType(AbstractType<T>)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.ReversedType.compare(ByteBuffer,ByteBuffer)",4,0,n/a,13,1,2,5,4
"org.apache.cassandra.db.marshal.ReversedType.compose(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.ReversedType.decompose(T)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.ReversedType.fromString(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.ReversedType.getInstance(AbstractType<T>)",3,0,n/a,10,1,1,5,2
"org.apache.cassandra.db.marshal.ReversedType.getInstance(TypeParser)",6,0,n/a,7,0,1,4,2
"org.apache.cassandra.db.marshal.ReversedType.getJdbcType()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.ReversedType.getPrecision(T)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.ReversedType.getScale(T)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.ReversedType.getString(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.ReversedType.getType()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.ReversedType.isCaseSensitive()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.ReversedType.isCurrency()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.ReversedType.isSigned()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.ReversedType.needsQuotes()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.ReversedType.toString()",2,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.marshal.ReversedType.toString(T)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.ReversedType.validate(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.TimeUUIDType.TimeUUIDType()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.TimeUUIDType.compare(ByteBuffer,ByteBuffer)",5,0,n/a,15,1,2,8,5
"org.apache.cassandra.db.marshal.TimeUUIDType.compareTimestampBytes(ByteBuffer,ByteBuffer)",18,1,n/a,20,0,2,24,8
"org.apache.cassandra.db.marshal.TimeUUIDType.compose(ByteBuffer)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.TimeUUIDType.decompose(UUID)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.TimeUUIDType.fromString(String)",27,0,n/a,53,2,1,22,9
"org.apache.cassandra.db.marshal.TimeUUIDType.getString(ByteBuffer)",7,0,n/a,17,1,1,8,4
"org.apache.cassandra.db.marshal.TimeUUIDType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.TimeUUIDType.toString(UUID)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.TimeUUIDType.validate(ByteBuffer)",10,0,n/a,13,1,1,7,5
"org.apache.cassandra.db.marshal.TypeParser.TypeParser(String,int)",0,2,n/a,5,0,2,2,1
"org.apache.cassandra.db.marshal.TypeParser.getAbstractType(String)",6,2,n/a,20,1,1,7,4
"org.apache.cassandra.db.marshal.TypeParser.getAbstractType(String,TypeParser)",12,2,n/a,28,1,2,12,5
"org.apache.cassandra.db.marshal.TypeParser.getAliasParameters()",23,0,n/a,39,2,0,27,11
"org.apache.cassandra.db.marshal.TypeParser.getKeyValueParameters()",18,0,n/a,32,2,0,21,8
"org.apache.cassandra.db.marshal.TypeParser.getRawAbstractType(Class<? extends AbstractType>)",6,2,n/a,16,1,1,5,3
"org.apache.cassandra.db.marshal.TypeParser.getRawAbstractType(Class<? extends AbstractType>,TypeParser)",10,2,n/a,22,1,2,8,4
"org.apache.cassandra.db.marshal.TypeParser.getTypeParameters()",13,0,n/a,28,2,0,16,6
"org.apache.cassandra.db.marshal.TypeParser.isBlank(int)",0,2,n/a,4,0,1,1,3
"org.apache.cassandra.db.marshal.TypeParser.isEOS()",1,6,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.TypeParser.isEOS(String,int)",1,4,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.TypeParser.isIdentifierChar(int)",0,2,n/a,9,0,1,1,11
"org.apache.cassandra.db.marshal.TypeParser.parse()",7,2,n/a,13,0,0,6,3
"org.apache.cassandra.db.marshal.TypeParser.parse(CharSequence)",2,5,n/a,4,0,1,1,2
"org.apache.cassandra.db.marshal.TypeParser.parse(String)",13,5,n/a,28,0,1,19,8
"org.apache.cassandra.db.marshal.TypeParser.readNextIdentifier()",4,4,n/a,8,0,0,4,3
"org.apache.cassandra.db.marshal.TypeParser.skipBlank()",1,6,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.TypeParser.skipBlank(String,int)",3,3,n/a,6,0,2,3,3
"org.apache.cassandra.db.marshal.TypeParser.skipBlankAndComma()",3,3,n/a,22,2,0,11,5
"org.apache.cassandra.db.marshal.TypeParser.stringifyAliasesParameters(Map<Byte, AbstractType>)",21,0,n/a,21,1,1,11,3
"org.apache.cassandra.db.marshal.TypeParser.stringifyTypeParameters(List<AbstractType>)",6,0,n/a,9,0,1,3,1
"org.apache.cassandra.db.marshal.TypeParser.throwSyntaxError(String)",2,4,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.UTF8Type.UTF8Type()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.db.marshal.UTF8Type.UTF8Validator.validate(ByteBuffer)",2,1,n/a,102,3,1,67,28
"org.apache.cassandra.db.marshal.UTF8Type.compare(ByteBuffer,ByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.db.marshal.UTF8Type.compose(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.UTF8Type.decompose(String)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.UTF8Type.fromString(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.UTF8Type.getJdbcType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.UTF8Type.getPrecision(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.UTF8Type.getScale(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.UTF8Type.getString(ByteBuffer)",3,1,n/a,11,1,1,3,2
"org.apache.cassandra.db.marshal.UTF8Type.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.UTF8Type.isCaseSensitive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.UTF8Type.isCurrency()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.UTF8Type.isSigned()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.UTF8Type.needsQuotes()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.UTF8Type.toString(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.UTF8Type.validate(ByteBuffer)",3,0,n/a,5,0,1,2,2
"org.apache.cassandra.db.marshal.UUIDType.UUIDType()",0,1,n/a,3,0,0,0,1
"org.apache.cassandra.db.marshal.UUIDType.compare(ByteBuffer,ByteBuffer)",10,0,n/a,47,2,2,21,12
"org.apache.cassandra.db.marshal.UUIDType.compareTimestampBytes(ByteBuffer,ByteBuffer)",18,1,n/a,41,1,2,24,8
"org.apache.cassandra.db.marshal.UUIDType.compose(ByteBuffer)",6,1,n/a,7,0,1,4,2
"org.apache.cassandra.db.marshal.UUIDType.decompose(UUID)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.UUIDType.fromString(String)",26,0,n/a,52,2,1,20,8
"org.apache.cassandra.db.marshal.UUIDType.getString(ByteBuffer)",5,0,n/a,13,1,1,6,3
"org.apache.cassandra.db.marshal.UUIDType.getType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.db.marshal.UUIDType.toString(UUID)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.db.marshal.UUIDType.validate(ByteBuffer)",3,0,n/a,7,1,1,2,3
"org.apache.cassandra.db.migration.AddColumnFamily.AddColumnFamily()",0,0,n/a,2,0,0,0,1
"org.apache.cassandra.db.migration.AddColumnFamily.AddColumnFamily(CFMetaData)",20,0,n/a,23,1,1,15,7
"org.apache.cassandra.db.migration.AddColumnFamily.applyModels()",10,0,n/a,20,1,0,10,3
"org.apache.cassandra.db.migration.AddColumnFamily.makeNewKeyspaceDefinition(KSMetaData)",7,2,n/a,6,0,1,3,1
"org.apache.cassandra.db.migration.AddColumnFamily.subdeflate(Migration)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.migration.AddColumnFamily.subinflate(Migration)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.migration.AddColumnFamily.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.migration.AddKeyspace.AddKeyspace()",0,0,n/a,2,0,0,0,1
"org.apache.cassandra.db.migration.AddKeyspace.AddKeyspace(KSMetaData)",13,0,n/a,13,0,1,10,5
"org.apache.cassandra.db.migration.AddKeyspace.applyModels()",8,0,n/a,23,2,0,8,4
"org.apache.cassandra.db.migration.AddKeyspace.subdeflate(Migration)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.migration.AddKeyspace.subinflate(Migration)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.migration.AddKeyspace.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.migration.DropColumnFamily.DropColumnFamily()",0,0,n/a,2,0,0,0,1
"org.apache.cassandra.db.migration.DropColumnFamily.DropColumnFamily(String,String)",11,0,n/a,13,0,2,10,3
"org.apache.cassandra.db.migration.DropColumnFamily.applyModels()",19,0,n/a,25,2,0,14,2
"org.apache.cassandra.db.migration.DropColumnFamily.makeNewKeyspaceDefinition(KSMetaData)",12,2,n/a,9,0,1,5,1
"org.apache.cassandra.db.migration.DropColumnFamily.subdeflate(Migration)",3,0,n/a,7,0,1,4,1
"org.apache.cassandra.db.migration.DropColumnFamily.subinflate(Migration)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.migration.DropColumnFamily.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.migration.DropKeyspace.DropKeyspace()",0,0,n/a,2,0,0,0,1
"org.apache.cassandra.db.migration.DropKeyspace.DropKeyspace(String)",7,0,n/a,9,0,1,6,2
"org.apache.cassandra.db.migration.DropKeyspace.applyModels()",19,0,n/a,37,4,0,17,3
"org.apache.cassandra.db.migration.DropKeyspace.subdeflate(Migration)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.migration.DropKeyspace.subinflate(Migration)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.migration.DropKeyspace.toString()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.migration.Migration.Migration()",0,1,n/a,2,0,0,0,1
"org.apache.cassandra.db.migration.Migration.Migration(UUID,UUID)",1,0,n/a,6,0,2,3,1
"org.apache.cassandra.db.migration.Migration.announce()",3,0,n/a,8,0,0,4,1
"org.apache.cassandra.db.migration.Migration.apply()",38,2,n/a,58,3,0,31,9
"org.apache.cassandra.db.migration.Migration.applyModels()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.db.migration.Migration.deserialize(ByteBuffer,int)",20,2,n/a,32,1,2,15,3
"org.apache.cassandra.db.migration.Migration.getLastMigrationId()",12,2,n/a,12,0,0,8,3
"org.apache.cassandra.db.migration.Migration.getLocalMigrations(UUID,UUID)",12,2,n/a,15,0,2,6,1
"org.apache.cassandra.db.migration.Migration.getVersion()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.db.migration.Migration.isLegalName(String)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.db.migration.Migration.makeDefinitionMutation(KSMetaData,KSMetaData,UUID)",19,0,n/a,31,1,3,13,8
"org.apache.cassandra.db.migration.Migration.passiveAnnounce()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.db.migration.Migration.serialize()",18,1,n/a,25,1,0,13,2
"org.apache.cassandra.db.migration.Migration.subdeflate(Migration)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.migration.Migration.subinflate(Migration)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.db.migration.Migration.toUTF8Bytes(UUID)",2,3,n/a,4,0,1,1,1
"org.apache.cassandra.db.migration.RenameColumnFamily.RenameColumnFamily()",0,0,n/a,2,0,0,0,1
"org.apache.cassandra.db.migration.RenameColumnFamily.RenameColumnFamily(String,String,String)",18,0,n/a,22,0,3,16,5
"org.apache.cassandra.db.migration.RenameColumnFamily.applyModels()",14,0,n/a,24,1,0,9,3
"org.apache.cassandra.db.migration.RenameColumnFamily.makeNewKeyspaceDefinition(KSMetaData)",14,2,n/a,10,0,1,7,1
"org.apache.cassandra.db.migration.RenameColumnFamily.subdeflate(Migration)",4,0,n/a,9,0,1,6,1
"org.apache.cassandra.db.migration.RenameColumnFamily.subinflate(Migration)",3,0,n/a,8,0,1,5,1
"org.apache.cassandra.db.migration.RenameColumnFamily.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.migration.RenameKeyspace.RenameKeyspace()",0,0,n/a,2,0,0,0,1
"org.apache.cassandra.db.migration.RenameKeyspace.RenameKeyspace(String,String)",12,0,n/a,16,0,2,12,4
"org.apache.cassandra.db.migration.RenameKeyspace.applyModels()",16,0,n/a,31,2,0,15,6
"org.apache.cassandra.db.migration.RenameKeyspace.rename(KSMetaData,String,boolean)",11,2,n/a,13,1,3,6,3
"org.apache.cassandra.db.migration.RenameKeyspace.renameKsStorageFiles(String,String)",10,1,n/a,13,1,2,8,5
"org.apache.cassandra.db.migration.RenameKeyspace.subdeflate(Migration)",3,0,n/a,7,0,1,4,1
"org.apache.cassandra.db.migration.RenameKeyspace.subinflate(Migration)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.migration.RenameKeyspace.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.migration.UpdateColumnFamily.UpdateColumnFamily()",0,0,n/a,1,0,0,0,1
"org.apache.cassandra.db.migration.UpdateColumnFamily.UpdateColumnFamily(CfDef)",25,1,n/a,24,2,1,14,6
"org.apache.cassandra.db.migration.UpdateColumnFamily.applyModels()",11,0,n/a,20,1,0,9,3
"org.apache.cassandra.db.migration.UpdateColumnFamily.subdeflate(Migration)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.migration.UpdateColumnFamily.subinflate(Migration)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.db.migration.UpdateColumnFamily.toString()",2,0,n/a,5,0,0,1,1
"org.apache.cassandra.db.migration.UpdateKeyspace.UpdateKeyspace()",0,0,n/a,2,0,0,0,1
"org.apache.cassandra.db.migration.UpdateKeyspace.UpdateKeyspace(KSMetaData)",16,0,n/a,15,0,1,10,3
"org.apache.cassandra.db.migration.UpdateKeyspace.applyModels()",6,0,n/a,15,1,0,7,2
"org.apache.cassandra.db.migration.UpdateKeyspace.subdeflate(Migration)",3,0,n/a,7,0,1,4,1
"org.apache.cassandra.db.migration.UpdateKeyspace.subinflate(Migration)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.db.migration.UpdateKeyspace.toString()",3,0,n/a,5,0,0,1,1
"org.apache.cassandra.dht.AbstractBounds.AbstractBounds(Token,Token,IPartitioner)",0,0,n/a,6,0,3,3,1
"org.apache.cassandra.dht.AbstractBounds.AbstractBoundsSerializer.deserialize(DataInput)",12,4,n/a,6,0,1,3,2
"org.apache.cassandra.dht.AbstractBounds.AbstractBoundsSerializer.serialize(AbstractBounds,DataOutput)",7,6,n/a,6,0,2,3,2
"org.apache.cassandra.dht.AbstractBounds.contains(Token)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.AbstractBounds.createFrom(Token)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.AbstractBounds.equals(Object)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.AbstractBounds.hashCode()",2,0,n/a,5,0,0,1,1
"org.apache.cassandra.dht.AbstractBounds.normalize(Collection<? extends AbstractBounds>)",6,2,n/a,4,2,1,6,2
"org.apache.cassandra.dht.AbstractBounds.serializer()",0,8,n/a,4,0,0,1,1
"org.apache.cassandra.dht.AbstractBounds.split(Token)",6,1,n/a,14,0,1,4,4
"org.apache.cassandra.dht.AbstractBounds.unwrap()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.bigForBytes(ByteBuffer,int)",5,2,n/a,11,0,2,4,1
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.bytesForBig(BigInteger,int,boolean)",4,1,n/a,22,1,3,9,4
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.convertFromDiskFormat(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.decorateKey(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.describeOwnership(List<Token>)",22,0,n/a,32,3,1,17,7
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.getMinimumToken()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.getRandomToken()",3,0,n/a,7,0,0,4,1
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.getToken(ByteBuffer)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.getTokenFactory()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.midpoint(Token,Token)",10,0,n/a,30,1,2,17,3
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner.preservesOrder()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.BigIntegerToken.BigIntegerToken(BigInteger)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.dht.BigIntegerToken.BigIntegerToken(String)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.BigIntegerToken.compareTo(Token<BigInteger>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.BootStrapper.BootStrapper(InetAddress,Token,TokenMetadata)",0,0,n/a,8,0,3,5,1
"org.apache.cassandra.dht.BootStrapper.BootstrapTokenCallback.getToken(long)",2,1,n/a,13,1,1,5,3
"org.apache.cassandra.dht.BootStrapper.BootstrapTokenCallback.isLatencyForSnitch()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.BootStrapper.BootstrapTokenCallback.response(Message)",6,0,n/a,5,0,1,2,1
"org.apache.cassandra.dht.BootStrapper.BootstrapTokenVerbHandler.doVerb(Message,String)",10,0,n/a,7,0,2,4,1
"org.apache.cassandra.dht.BootStrapper.bootstrap()",29,0,n/a,7,4,0,25,9
"org.apache.cassandra.dht.BootStrapper.getBalancedToken(TokenMetadata,Map<InetAddress, Double>)",3,1,n/a,7,0,2,4,1
"org.apache.cassandra.dht.BootStrapper.getBootstrapSource(TokenMetadata,Map<InetAddress, Double>)",19,1,n/a,12,2,2,22,8
"org.apache.cassandra.dht.BootStrapper.getBootstrapToken(TokenMetadata,Map<InetAddress, Double>)",10,0,n/a,16,1,2,7,3
"org.apache.cassandra.dht.BootStrapper.getBootstrapTokenFrom(InetAddress)",10,1,n/a,19,1,1,11,3
"org.apache.cassandra.dht.BootStrapper.getRangesWithSources(String)",15,1,n/a,23,3,1,13,4
"org.apache.cassandra.dht.BootStrapper.getWorkMap(Multimap<Range, InetAddress>)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.dht.BootStrapper.getWorkMap(Multimap<Range, InetAddress>,IFailureDetector)",5,1,n/a,21,3,2,7,4
"org.apache.cassandra.dht.Bounds.Bounds(Token,Token)",2,1,n/a,4,0,2,1,1
"org.apache.cassandra.dht.Bounds.Bounds(Token,Token,IPartitioner)",4,2,n/a,6,0,3,2,2
"org.apache.cassandra.dht.Bounds.contains(Token)",2,0,n/a,4,0,1,1,2
"org.apache.cassandra.dht.Bounds.createFrom(Token)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.Bounds.equals(Object)",2,0,n/a,7,0,1,4,3
"org.apache.cassandra.dht.Bounds.toString()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.Bounds.unwrap()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.dht.ByteOrderedPartitioner.getToken(ByteBuffer)",2,0,n/a,6,0,1,3,2
"org.apache.cassandra.dht.BytesToken.BytesToken(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.BytesToken.BytesToken(byte[])",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.dht.BytesToken.compareTo(Token<byte[]>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.BytesToken.equals(Object)",1,0,n/a,10,0,1,6,3
"org.apache.cassandra.dht.BytesToken.hashCode()",1,0,n/a,6,0,0,2,1
"org.apache.cassandra.dht.BytesToken.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.dht.CollatingOrderPreservingPartitioner.describeOwnership(List<Token>)",1,0,n/a,1,0,1,1,1
"org.apache.cassandra.dht.CollatingOrderPreservingPartitioner.getToken(ByteBuffer)",7,0,n/a,15,1,1,7,3
"org.apache.cassandra.dht.IPartitioner.convertFromDiskFormat(ByteBuffer)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.IPartitioner.decorateKey(ByteBuffer)",n/a,6,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.IPartitioner.describeOwnership(List<Token>)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.IPartitioner.getMinimumToken()",n/a,4,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.dht.IPartitioner.getRandomToken()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.dht.IPartitioner.getToken(ByteBuffer)",n/a,7,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.IPartitioner.getTokenFactory()",n/a,22,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.dht.IPartitioner.midpoint(Token,Token)",n/a,3,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.dht.IPartitioner.preservesOrder()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.dht.LocalPartitioner.LocalPartitioner(AbstractType)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.LocalPartitioner.convertFromDiskFormat(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.LocalPartitioner.decorateKey(ByteBuffer)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.dht.LocalPartitioner.describeOwnership(List<Token>)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.LocalPartitioner.getMinimumToken()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.dht.LocalPartitioner.getRandomToken()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.LocalPartitioner.getToken(ByteBuffer)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.dht.LocalPartitioner.getTokenFactory()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.LocalPartitioner.midpoint(Token,Token)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.dht.LocalPartitioner.preservesOrder()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.LocalToken.LocalToken(AbstractType,ByteBuffer)",1,0,n/a,5,0,2,2,1
"org.apache.cassandra.dht.LocalToken.compareTo(Token<ByteBuffer>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.LocalToken.equals(Object)",1,0,n/a,10,0,1,6,3
"org.apache.cassandra.dht.LocalToken.hashCode()",1,0,n/a,6,0,0,2,1
"org.apache.cassandra.dht.LocalToken.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.dht.OrderPreservingPartitioner.bigForString(String,int)",6,2,n/a,17,1,2,9,2
"org.apache.cassandra.dht.OrderPreservingPartitioner.convertFromDiskFormat(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.OrderPreservingPartitioner.decorateKey(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.OrderPreservingPartitioner.describeOwnership(List<Token>)",23,0,n/a,32,3,1,17,7
"org.apache.cassandra.dht.OrderPreservingPartitioner.getMinimumToken()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.OrderPreservingPartitioner.getRandomToken()",8,0,n/a,10,1,0,8,2
"org.apache.cassandra.dht.OrderPreservingPartitioner.getToken(ByteBuffer)",3,2,n/a,13,1,1,5,2
"org.apache.cassandra.dht.OrderPreservingPartitioner.getTokenFactory()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.OrderPreservingPartitioner.midpoint(Token,Token)",8,0,n/a,8,0,2,5,1
"org.apache.cassandra.dht.OrderPreservingPartitioner.preservesOrder()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.OrderPreservingPartitioner.stringForBig(BigInteger,int,boolean)",5,1,n/a,19,1,3,9,4
"org.apache.cassandra.dht.RandomPartitioner.convertFromDiskFormat(ByteBuffer)",11,0,n/a,27,2,1,15,4
"org.apache.cassandra.dht.RandomPartitioner.decorateKey(ByteBuffer)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.RandomPartitioner.describeOwnership(List<Token>)",28,0,n/a,29,2,1,21,4
"org.apache.cassandra.dht.RandomPartitioner.getMinimumToken()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.RandomPartitioner.getRandomToken()",6,0,n/a,7,0,0,4,2
"org.apache.cassandra.dht.RandomPartitioner.getToken(ByteBuffer)",3,1,n/a,6,0,1,3,2
"org.apache.cassandra.dht.RandomPartitioner.getTokenFactory()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.RandomPartitioner.midpoint(Token,Token)",4,0,n/a,9,0,2,4,3
"org.apache.cassandra.dht.RandomPartitioner.preservesOrder()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.dht.Range.Range(Token,Token)",2,8,n/a,4,0,2,1,1
"org.apache.cassandra.dht.Range.Range(Token,Token,IPartitioner)",1,14,n/a,4,0,3,1,1
"org.apache.cassandra.dht.Range.compare(Token,Token)",4,10,n/a,26,1,2,10,4
"org.apache.cassandra.dht.Range.compareTo(Range)",3,0,n/a,12,0,1,5,3
"org.apache.cassandra.dht.Range.contains(Range)",7,6,n/a,26,1,1,9,6
"org.apache.cassandra.dht.Range.contains(Token)",1,1,n/a,10,0,1,1,1
"org.apache.cassandra.dht.Range.contains(Token,Token,Token)",5,4,n/a,24,1,3,5,4
"org.apache.cassandra.dht.Range.createFrom(Token)",2,0,n/a,6,0,1,3,2
"org.apache.cassandra.dht.Range.differenceToFetch(Range)",12,0,n/a,39,2,1,15,3
"org.apache.cassandra.dht.Range.equals(Object)",2,1,n/a,7,0,1,4,3
"org.apache.cassandra.dht.Range.intersectionBothWrapping(Range,Range)",7,2,n/a,8,0,2,5,2
"org.apache.cassandra.dht.Range.intersectionOneWrapping(Range,Range)",9,2,n/a,10,0,2,6,4
"org.apache.cassandra.dht.Range.intersectionWith(Range)",19,3,n/a,44,1,1,17,13
"org.apache.cassandra.dht.Range.intersects(Range)",2,1,n/a,8,0,1,1,1
"org.apache.cassandra.dht.Range.isTokenInRanges(Token,Iterable<Range>)",1,1,n/a,12,2,2,5,3
"org.apache.cassandra.dht.Range.isWrapAround()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.dht.Range.isWrapAround(Token,Token)",1,10,n/a,7,0,2,1,1
"org.apache.cassandra.dht.Range.rangeSet(Range...)",3,3,n/a,4,0,1,1,1
"org.apache.cassandra.dht.Range.subtractContained(Range)",7,3,n/a,16,0,1,6,3
"org.apache.cassandra.dht.Range.toString()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.dht.Range.unwrap()",11,0,n/a,9,0,0,6,3
"org.apache.cassandra.dht.StringToken.StringToken(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.StringToken.compareTo(Token<String>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.Token.Token(T)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.dht.Token.TokenFactory.fromByteArray(ByteBuffer)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.Token.TokenFactory.fromString(String)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.Token.TokenFactory.toByteArray(Token<T>)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.Token.TokenFactory.toString(Token<T>)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.Token.TokenFactory.validate(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.Token.TokenSerializer.deserialize(DataInput)",6,5,n/a,8,0,1,5,1
"org.apache.cassandra.dht.Token.TokenSerializer.serialize(Token,DataOutput)",4,7,n/a,6,0,2,3,1
"org.apache.cassandra.dht.Token.compareTo(Token<T>)",n/a,7,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.dht.Token.equals(Object)",1,9,n/a,7,1,1,3,2
"org.apache.cassandra.dht.Token.hashCode()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.dht.Token.serializer()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.dht.Token.toString()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.ArrivalWindow.ArrivalWindow(int)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.gms.ArrivalWindow.add(double)",1,1,n/a,14,1,1,6,2
"org.apache.cassandra.gms.ArrivalWindow.clear()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.ArrivalWindow.mean()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.gms.ArrivalWindow.phi(long)",2,1,n/a,9,0,1,3,2
"org.apache.cassandra.gms.ArrivalWindow.stdev()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.ArrivalWindow.sum()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.ArrivalWindow.sumOfDeviations()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.ArrivalWindow.toString()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.gms.ArrivalWindow.variance()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.EndpointState.EndpointState(HeartBeatState)",1,1,n/a,7,0,1,4,1
"org.apache.cassandra.gms.EndpointState.addApplicationState(ApplicationState,VersionedValue)",1,1,n/a,4,0,2,1,1
"org.apache.cassandra.gms.EndpointState.getApplicationState(ApplicationState)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.EndpointState.getApplicationStateMap()",0,0,n/a,8,0,0,1,1
"org.apache.cassandra.gms.EndpointState.getHeartBeatState()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.gms.EndpointState.getUpdateTimestamp()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.gms.EndpointState.hasToken()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.EndpointState.isAlive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.EndpointState.markAlive()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.EndpointState.markDead()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.EndpointState.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.EndpointState.setHasToken(boolean)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.EndpointState.setHeartBeatState(HeartBeatState)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.gms.EndpointState.updateTimestamp()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.gms.EndpointStateSerializer.deserialize(DataInputStream,int)",8,7,n/a,17,2,2,12,3
"org.apache.cassandra.gms.EndpointStateSerializer.serialize(EndpointState,DataOutputStream,int)",11,9,n/a,18,2,3,9,3
"org.apache.cassandra.gms.EndpointStatesSerializationHelper.deserialize(DataInputStream,int)",7,0,n/a,13,1,2,10,2
"org.apache.cassandra.gms.EndpointStatesSerializationHelper.serialize(Map<InetAddress, EndpointState>,DataOutputStream,int)",8,0,n/a,10,1,3,5,2
"org.apache.cassandra.gms.FailureDetector.FailureDetector()",5,1,n/a,14,1,0,5,2
"org.apache.cassandra.gms.FailureDetector.dumpInterArrivalTimes()",8,0,n/a,21,1,0,7,2
"org.apache.cassandra.gms.FailureDetector.getAllEndpointStates()",15,0,n/a,11,1,0,6,3
"org.apache.cassandra.gms.FailureDetector.getPhiConvictThreshold()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.FailureDetector.interpret(InetAddress)",6,0,n/a,19,2,1,10,5
"org.apache.cassandra.gms.FailureDetector.isAlive(InetAddress)",5,0,n/a,12,0,1,6,4
"org.apache.cassandra.gms.FailureDetector.main(String[])",0,0,n/a,3,0,1,0,1
"org.apache.cassandra.gms.FailureDetector.registerFailureDetectionEventListener(IFailureDetectionEventListener)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.FailureDetector.remove(InetAddress)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.FailureDetector.report(InetAddress)",7,0,n/a,13,1,1,8,3
"org.apache.cassandra.gms.FailureDetector.setPhiConvictThreshold(int)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.FailureDetector.toString()",11,1,n/a,15,1,0,10,2
"org.apache.cassandra.gms.FailureDetector.unregisterFailureDetectionEventListener(IFailureDetectionEventListener)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.FailureDetectorMBean.dumpInterArrivalTimes()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.gms.FailureDetectorMBean.getAllEndpointStates()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.gms.FailureDetectorMBean.getPhiConvictThreshold()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.gms.FailureDetectorMBean.setPhiConvictThreshold(int)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.GossipDigest.GossipDigest(InetAddress,int,int)",0,1,n/a,6,0,3,3,1
"org.apache.cassandra.gms.GossipDigest.compareTo(GossipDigest)",0,0,n/a,6,0,1,3,2
"org.apache.cassandra.gms.GossipDigest.getEndpoint()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigest.getGeneration()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigest.getMaxVersion()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigest.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigest.toString()",7,0,n/a,10,0,0,7,1
"org.apache.cassandra.gms.GossipDigestAck2Message.GossipDigestAck2Message(Map<InetAddress, EndpointState>)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.gms.GossipDigestAck2Message.getEndpointStateMap()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigestAck2Message.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigestAck2MessageSerializer.deserialize(DataInputStream,int)",2,7,n/a,5,0,2,2,1
"org.apache.cassandra.gms.GossipDigestAck2MessageSerializer.serialize(GossipDigestAck2Message,DataOutputStream,int)",1,9,n/a,5,0,3,1,1
"org.apache.cassandra.gms.GossipDigestAck2VerbHandler.doVerb(Message,String)",13,0,n/a,21,1,2,12,3
"org.apache.cassandra.gms.GossipDigestAckMessage.GossipDigestAckMessage(List<GossipDigest>,Map<InetAddress, EndpointState>)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.gms.GossipDigestAckMessage.getEndpointStateMap()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigestAckMessage.getGossipDigestList()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigestAckMessage.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigestAckMessageSerializer.deserialize(DataInputStream,int)",4,7,n/a,7,0,2,4,1
"org.apache.cassandra.gms.GossipDigestAckMessageSerializer.serialize(GossipDigestAckMessage,DataOutputStream,int)",3,9,n/a,6,0,3,3,1
"org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb(Message,String)",30,0,n/a,44,2,2,28,9
"org.apache.cassandra.gms.GossipDigestSerializationHelper.deserialize(DataInputStream,int)",6,1,n/a,11,1,2,8,2
"org.apache.cassandra.gms.GossipDigestSerializationHelper.serialize(List<GossipDigest>,DataOutputStream,int)",4,1,n/a,8,1,3,3,2
"org.apache.cassandra.gms.GossipDigestSerializer.deserialize(DataInputStream,int)",4,7,n/a,7,0,2,4,1
"org.apache.cassandra.gms.GossipDigestSerializer.serialize(GossipDigest,DataOutputStream,int)",3,9,n/a,6,0,3,3,1
"org.apache.cassandra.gms.GossipDigestSynMessage.GossipDigestSynMessage(String,List<GossipDigest>)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.gms.GossipDigestSynMessage.getGossipDigests()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigestSynMessage.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.GossipDigestSynMessageSerializer.deserialize(DataInputStream,int)",3,7,n/a,6,0,2,3,1
"org.apache.cassandra.gms.GossipDigestSynMessageSerializer.serialize(GossipDigestSynMessage,DataOutputStream,int)",2,9,n/a,5,0,3,2,1
"org.apache.cassandra.gms.GossipDigestSynVerbHandler.doSort(List<GossipDigest>)",19,1,n/a,40,1,1,17,5
"org.apache.cassandra.gms.GossipDigestSynVerbHandler.doVerb(Message,String)",36,0,n/a,50,3,2,32,9
"org.apache.cassandra.gms.Gossiper.GossipTask.run()",26,0,n/a,4,4,0,18,7
"org.apache.cassandra.gms.Gossiper.Gossiper()",1,1,n/a,9,0,0,3,1
"org.apache.cassandra.gms.Gossiper.addLocalApplicationState(ApplicationState,VersionedValue)",5,2,n/a,7,0,2,4,1
"org.apache.cassandra.gms.Gossiper.addSavedEndpoint(InetAddress)",11,1,n/a,13,0,1,7,2
"org.apache.cassandra.gms.Gossiper.advertiseRemoving(InetAddress,Token,Token)",20,0,n/a,35,1,3,16,3
"org.apache.cassandra.gms.Gossiper.advertiseTokenRemoved(InetAddress,Token)",10,0,n/a,24,1,2,9,2
"org.apache.cassandra.gms.Gossiper.applyNewStates(InetAddress,EndpointState,EndpointState)",18,1,n/a,16,1,3,10,3
"org.apache.cassandra.gms.Gossiper.applyStateLocally(Map<InetAddress, EndpointState>)",28,0,n/a,60,4,1,31,14
"org.apache.cassandra.gms.Gossiper.compareEndpointStartup(InetAddress,InetAddress)",6,0,n/a,8,0,2,4,2
"org.apache.cassandra.gms.Gossiper.convict(InetAddress,double)",3,0,n/a,14,1,2,3,2
"org.apache.cassandra.gms.Gossiper.doGossipToLiveMember(MessageProducer)",2,1,n/a,8,0,1,4,2
"org.apache.cassandra.gms.Gossiper.doGossipToSeed(MessageProducer)",10,1,n/a,24,2,1,10,6
"org.apache.cassandra.gms.Gossiper.doGossipToUnreachableMember(MessageProducer)",5,1,n/a,14,1,1,7,3
"org.apache.cassandra.gms.Gossiper.doNotifications(InetAddress,ApplicationState,VersionedValue)",1,2,n/a,8,1,3,2,2
"org.apache.cassandra.gms.Gossiper.doStatusCheck()",28,1,n/a,42,3,0,23,16
"org.apache.cassandra.gms.Gossiper.evictFromMembership(InetAddress)",6,2,n/a,13,0,1,5,2
"org.apache.cassandra.gms.Gossiper.examineGossiper(List<GossipDigest>,List<GossipDigest>,Map<InetAddress, EndpointState>)",14,0,n/a,61,4,3,19,10
"org.apache.cassandra.gms.Gossiper.getCurrentGenerationNumber(InetAddress)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.Gossiper.getEndpointDowntime(InetAddress)",2,2,n/a,8,0,1,4,2
"org.apache.cassandra.gms.Gossiper.getEndpointStateForEndpoint(InetAddress)",1,8,n/a,4,0,1,1,1
"org.apache.cassandra.gms.Gossiper.getEndpointStates()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.Gossiper.getLiveMembers()",5,4,n/a,7,0,0,4,2
"org.apache.cassandra.gms.Gossiper.getMaxEndpointStateVersion(EndpointState)",5,5,n/a,12,0,1,4,2
"org.apache.cassandra.gms.Gossiper.getStateForVersionBiggerThan(InetAddress,int)",16,1,n/a,40,4,2,18,8
"org.apache.cassandra.gms.Gossiper.getUnreachableMembers()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.gms.Gossiper.getVersion(InetAddress)",2,13,n/a,12,1,1,5,2
"org.apache.cassandra.gms.Gossiper.handleMajorStateChange(InetAddress,EndpointState)",18,2,n/a,32,1,2,16,9
"org.apache.cassandra.gms.Gossiper.initializeNodeUnsafe(InetAddress,int)",5,0,n/a,14,1,2,6,2
"org.apache.cassandra.gms.Gossiper.isDeadState(String)",2,2,n/a,12,1,1,7,3
"org.apache.cassandra.gms.Gossiper.isEnabled()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.Gossiper.isKnownEndpoint(InetAddress)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.gms.Gossiper.makeGossipDigestAck2Message(GossipDigestAck2Message,int)",7,0,n/a,7,0,2,4,1
"org.apache.cassandra.gms.Gossiper.makeGossipDigestAckMessage(GossipDigestAckMessage,int)",7,0,n/a,7,0,2,4,1
"org.apache.cassandra.gms.Gossiper.makeGossipDigestSynMessage(List<GossipDigest>,int)",9,1,n/a,8,0,2,5,1
"org.apache.cassandra.gms.Gossiper.makeRandomGossipDigest(List<GossipDigest>)",15,1,n/a,35,2,1,17,5
"org.apache.cassandra.gms.Gossiper.markAlive(InetAddress,EndpointState)",10,2,n/a,14,0,2,11,4
"org.apache.cassandra.gms.Gossiper.markDead(InetAddress,EndpointState)",10,1,n/a,13,0,2,10,4
"org.apache.cassandra.gms.Gossiper.maybeInitializeLocalState(int)",7,2,n/a,12,1,1,6,2
"org.apache.cassandra.gms.Gossiper.notifyFailureDetector(InetAddress,EndpointState)",12,2,n/a,30,3,2,15,5
"org.apache.cassandra.gms.Gossiper.notifyFailureDetector(List<GossipDigest>)",2,0,n/a,7,1,1,2,2
"org.apache.cassandra.gms.Gossiper.notifyFailureDetector(Map<InetAddress, EndpointState>)",4,0,n/a,7,1,1,2,2
"org.apache.cassandra.gms.Gossiper.register(IEndpointStateChangeSubscriber)",1,0,n/a,8,0,1,1,1
"org.apache.cassandra.gms.Gossiper.removeEndpoint(InetAddress)",9,1,n/a,17,0,1,9,3
"org.apache.cassandra.gms.Gossiper.requestAll(GossipDigest,List<GossipDigest>,int)",6,2,n/a,8,0,3,3,2
"org.apache.cassandra.gms.Gossiper.resetVersion(InetAddress)",2,1,n/a,5,0,1,2,1
"org.apache.cassandra.gms.Gossiper.sendAll(GossipDigest,Map<InetAddress, EndpointState>,int)",4,2,n/a,7,0,3,3,2
"org.apache.cassandra.gms.Gossiper.sendGossip(MessageProducer,Set<InetAddress>)",12,4,n/a,28,1,2,12,5
"org.apache.cassandra.gms.Gossiper.setVersion(InetAddress,int)",2,1,n/a,5,0,2,2,1
"org.apache.cassandra.gms.Gossiper.start(int)",15,0,n/a,26,1,1,11,4
"org.apache.cassandra.gms.Gossiper.stop()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.Gossiper.unregister(IEndpointStateChangeSubscriber)",1,0,n/a,8,0,1,1,1
"org.apache.cassandra.gms.HeartBeatState.HeartBeatState(int)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.HeartBeatState.HeartBeatState(int,int)",0,2,n/a,5,0,2,2,1
"org.apache.cassandra.gms.HeartBeatState.forceNewerGenerationUnsafe()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.HeartBeatState.getGeneration()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.gms.HeartBeatState.getHeartBeatVersion()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.gms.HeartBeatState.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.HeartBeatState.updateHeartBeat()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.HeartBeatStateSerializer.deserialize(DataInputStream,int)",3,7,n/a,4,0,2,1,1
"org.apache.cassandra.gms.HeartBeatStateSerializer.serialize(HeartBeatState,DataOutputStream,int)",4,9,n/a,5,0,3,2,1
"org.apache.cassandra.gms.IEndpointStateChangeSubscriber.onAlive(InetAddress,EndpointState)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.gms.IEndpointStateChangeSubscriber.onChange(InetAddress,ApplicationState,VersionedValue)",n/a,0,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.gms.IEndpointStateChangeSubscriber.onDead(InetAddress,EndpointState)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.gms.IEndpointStateChangeSubscriber.onJoin(InetAddress,EndpointState)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.gms.IEndpointStateChangeSubscriber.onRemove(InetAddress)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.IEndpointStateChangeSubscriber.onRestart(InetAddress,EndpointState)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.gms.IFailureDetectionEventListener.convict(InetAddress,double)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.gms.IFailureDetector.interpret(InetAddress)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.IFailureDetector.isAlive(InetAddress)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.IFailureDetector.registerFailureDetectionEventListener(IFailureDetectionEventListener)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.IFailureDetector.remove(InetAddress)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.IFailureDetector.report(InetAddress)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.IFailureDetector.unregisterFailureDetectionEventListener(IFailureDetectionEventListener)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.IFailureNotification.convict(InetAddress)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.IFailureNotification.revive(InetAddress)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.gms.PureRandom.PureRandom()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.gms.PureRandom.main(String[])",5,0,n/a,15,2,1,9,3
"org.apache.cassandra.gms.PureRandom.nextInt(int)",8,0,n/a,21,1,1,12,5
"org.apache.cassandra.gms.VersionGenerator.getNextVersion()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValue(String)",1,14,n/a,5,0,1,2,1
"org.apache.cassandra.gms.VersionedValue.VersionedValue(String,int)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.VersionedValueFactory(IPartitioner)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.bootstrapping(Token)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.datacenter(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.leaving(Token)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.left(Token)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.load(double)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.migration(UUID)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.moving(Token)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.normal(Token)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.rack(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.releaseVersion()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.removalCoordinator(Token)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.removedNonlocal(Token)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.removingNonlocal(Token)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory.rpcaddress(InetAddress)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueSerializer.deserialize(DataInputStream,int)",3,7,n/a,6,0,2,3,1
"org.apache.cassandra.gms.VersionedValue.VersionedValueSerializer.serialize(VersionedValue,DataOutputStream,int)",2,9,n/a,5,0,3,2,1
"org.apache.cassandra.gms.VersionedValue.compareTo(VersionedValue)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.gms.VersionedValue.toString()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat.SplitCallable.SplitCallable(TokenRange,Configuration)",0,2,n/a,5,0,2,2,1
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat.SplitCallable.call()",12,0,n/a,19,1,0,14,3
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat.createConnection(String,Integer,boolean)",6,2,n/a,14,1,3,6,3
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat.createRecordReader(InputSplit,TaskAttemptContext)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat.getRangeMap(Configuration)",14,1,n/a,41,2,1,19,7
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat.getSplits(JobContext)",47,0,n/a,72,4,1,37,7
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat.getSubSplits(String,String,TokenRange,Configuration)",10,1,n/a,26,2,4,10,5
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat.validateConfiguration(Configuration)",5,1,n/a,11,1,1,4,4
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.NullOutputCommitter.abortTask(TaskAttemptContext)",0,0,n/a,1,0,1,0,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.NullOutputCommitter.cleanupJob(JobContext)",0,0,n/a,1,0,1,0,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.NullOutputCommitter.commitTask(TaskAttemptContext)",0,0,n/a,1,0,1,0,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.NullOutputCommitter.needsTaskCommit(TaskAttemptContext)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.NullOutputCommitter.setupJob(JobContext)",0,0,n/a,1,0,1,0,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.NullOutputCommitter.setupTask(TaskAttemptContext)",0,0,n/a,1,0,1,0,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.checkOutputSpecs(Configuration)",3,0,n/a,7,1,1,2,3
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.checkOutputSpecs(FileSystem,JobConf)",1,0,n/a,6,0,2,1,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.checkOutputSpecs(JobContext)",2,0,n/a,13,0,1,1,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.createAuthenticatedClient(TSocket,Configuration)",14,0,n/a,29,1,2,11,2
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.getOutputCommitter(TaskAttemptContext)",1,0,n/a,14,0,1,1,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.getRecordWriter(FileSystem,JobConf,String,Progressable)",1,0,n/a,6,0,4,1,1
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.getRecordWriter(TaskAttemptContext)",1,0,n/a,13,0,1,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator.RowIterator()",12,1,n/a,29,1,0,13,6
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator.computeNext()",8,0,n/a,15,1,0,10,3
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator.maybeInit()",17,1,n/a,43,2,0,20,8
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator.rowsRead()",0,1,n/a,7,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator.unthriftify(ColumnOrSuperColumn)",4,1,n/a,11,0,1,8,4
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator.unthriftifyCounter(CounterColumn)",2,2,n/a,6,0,1,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator.unthriftifySimple(Column)",1,2,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator.unthriftifySuper(SuperColumn)",3,1,n/a,9,1,1,4,2
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator.unthriftifySuperCounter(CounterSuperColumn)",3,1,n/a,7,0,1,4,2
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.close()",2,0,n/a,9,1,0,4,3
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.getCurrentKey()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.getCurrentValue()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.getLocation()",9,1,n/a,34,3,0,13,6
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.getProgress()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.initialize(InputSplit,TaskAttemptContext)",27,0,n/a,38,2,2,25,5
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.nextKeyValue()",2,0,n/a,7,0,0,4,2
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.ColumnFamilyRecordWriter(Configuration)",12,0,n/a,12,0,1,6,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.ColumnFamilyRecordWriter(TaskAttemptContext)",2,0,n/a,11,0,1,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.RangeClient.RangeClient(List<InetAddress>)",1,1,n/a,9,0,1,2,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.RangeClient.close()",3,1,n/a,16,1,0,7,3
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.RangeClient.closeInternal()",1,2,n/a,9,1,0,4,2
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.RangeClient.put(Pair<ByteBuffer, Mutation>)",2,1,n/a,20,2,1,7,5
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.RangeClient.run()",24,0,n/a,71,4,0,33,13
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.RangeClient.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.close()",2,2,n/a,18,2,0,7,4
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.close(Reporter)",1,0,n/a,6,0,1,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.close(TaskAttemptContext)",1,0,n/a,12,0,1,1,1
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.write(ByteBuffer,List<Mutation>)",8,0,n/a,30,1,2,8,3
"org.apache.cassandra.hadoop.ColumnFamilySplit.ColumnFamilySplit()",0,1,n/a,2,0,0,0,1
"org.apache.cassandra.hadoop.ColumnFamilySplit.ColumnFamilySplit(String,String,String[])",0,0,n/a,8,0,3,5,1
"org.apache.cassandra.hadoop.ColumnFamilySplit.getEndToken()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilySplit.getLength()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilySplit.getLocations()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilySplit.getStartToken()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.hadoop.ColumnFamilySplit.read(DataInput)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.hadoop.ColumnFamilySplit.readFields(DataInput)",4,1,n/a,11,1,1,8,2
"org.apache.cassandra.hadoop.ColumnFamilySplit.toString()",1,0,n/a,9,0,0,1,2
"org.apache.cassandra.hadoop.ColumnFamilySplit.write(DataOutput)",4,0,n/a,12,1,1,5,2
"org.apache.cassandra.hadoop.ConfigHelper.getInitialAddress(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getInputColumnFamily(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getInputKeyRange(Configuration)",2,0,n/a,6,0,1,2,2
"org.apache.cassandra.hadoop.ConfigHelper.getInputKeyspace(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getInputKeyspacePassword(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getInputKeyspaceUserName(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getInputSlicePredicate(Configuration)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getInputSplitSize(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getOutputColumnFamily(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getOutputKeyspace(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getOutputKeyspacePassword(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getOutputKeyspaceUserName(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getPartitioner(Configuration)",3,0,n/a,11,1,1,3,2
"org.apache.cassandra.hadoop.ConfigHelper.getRangeBatchSize(Configuration)",1,0,n/a,13,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getRawInputSlicePredicate(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getReadConsistencyLevel(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getRpcPort(Configuration)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.getWriteConsistencyLevel(Configuration)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.hadoop.ConfigHelper.keyRangeFromString(String)",6,1,n/a,15,1,1,7,2
"org.apache.cassandra.hadoop.ConfigHelper.keyRangeToString(KeyRange)",5,1,n/a,13,1,1,5,2
"org.apache.cassandra.hadoop.ConfigHelper.predicateFromString(String)",6,1,n/a,15,1,1,7,2
"org.apache.cassandra.hadoop.ConfigHelper.predicateToString(SlicePredicate)",5,1,n/a,14,1,1,5,2
"org.apache.cassandra.hadoop.ConfigHelper.setInitialAddress(Configuration,String)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.hadoop.ConfigHelper.setInputColumnFamily(Configuration,String,String)",4,0,n/a,21,1,3,6,3
"org.apache.cassandra.hadoop.ConfigHelper.setInputRange(Configuration,String,String)",5,0,n/a,9,0,3,2,1
"org.apache.cassandra.hadoop.ConfigHelper.setInputSlicePredicate(Configuration,SlicePredicate)",2,0,n/a,10,0,2,1,1
"org.apache.cassandra.hadoop.ConfigHelper.setInputSplitSize(Configuration,int)",1,0,n/a,12,0,2,1,1
"org.apache.cassandra.hadoop.ConfigHelper.setOutputColumnFamily(Configuration,String,String)",4,0,n/a,20,1,3,6,3
"org.apache.cassandra.hadoop.ConfigHelper.setPartitioner(Configuration,String)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.hadoop.ConfigHelper.setRangeBatchSize(Configuration,int)",1,0,n/a,13,0,2,1,1
"org.apache.cassandra.hadoop.ConfigHelper.setRpcPort(Configuration,String)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.io.DeletionService.executeDelete(String)",4,1,n/a,4,2,1,3,1
"org.apache.cassandra.io.DeletionService.waitFor()",3,1,n/a,1,2,0,1,1
"org.apache.cassandra.io.IColumnSerializer.deserialize(DataInput,ColumnFamilyStore,boolean,int)",n/a,7,0,n/a,n/a,4,n/a,n/a
"org.apache.cassandra.io.ICompactSerializer.deserialize(DataInputStream,int)",n/a,7,29,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.io.ICompactSerializer.serialize(T,DataOutputStream,int)",n/a,9,29,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.io.ICompactSerializer2.deserialize(DataInput)",n/a,4,6,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.ICompactSerializer2.serialize(T,DataOutput)",n/a,6,6,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.io.ICompactSerializer3.serializedSize(T)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.SerDeUtils.createArray(int,Schema)",2,2,n/a,7,0,2,1,1
"org.apache.cassandra.io.SerDeUtils.createDataInputStream(ByteBuffer)",3,1,n/a,8,0,1,2,1
"org.apache.cassandra.io.SerDeUtils.deserialize(Schema,ByteBuffer,T)",6,1,n/a,14,0,3,4,1
"org.apache.cassandra.io.SerDeUtils.deserializeWithSchema(ByteBuffer,T)",10,1,n/a,14,0,2,5,1
"org.apache.cassandra.io.SerDeUtils.serialize(T)",8,2,n/a,13,0,1,6,1
"org.apache.cassandra.io.SerDeUtils.serializeWithSchema(T)",12,1,n/a,15,0,1,7,1
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.AbstractSSTableSimpleWriter(File,CFMetaData)",0,0,n/a,5,0,2,2,1
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.addColumn(ByteBuffer,ByteBuffer,long)",2,0,n/a,10,0,3,1,1
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.addColumn(IColumn)",4,3,n/a,7,0,1,4,4
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.addCounterColumn(ByteBuffer,long)",5,0,n/a,9,0,2,1,1
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.addExpiringColumn(ByteBuffer,ByteBuffer,long,int,long)",2,0,n/a,14,0,5,1,1
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.close()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.getColumnFamily()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.getWriter()",3,0,n/a,9,0,0,1,1
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.makeFilename(File,String,String)",9,1,n/a,10,2,3,13,5
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.newRow(ByteBuffer)",5,0,n/a,11,0,1,4,3
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.newSuperColumn(ByteBuffer)",4,0,n/a,11,0,1,4,2
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter.writeRow(DecoratedKey,ColumnFamily)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.io.sstable.BloomFilterTracker.addFalsePositive()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.BloomFilterTracker.addTruePositive()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.BloomFilterTracker.getFalsePositiveCount()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.BloomFilterTracker.getRecentFalsePositiveCount()",1,0,n/a,12,1,0,4,1
"org.apache.cassandra.io.sstable.BloomFilterTracker.getRecentTruePositiveCount()",1,0,n/a,12,1,0,4,1
"org.apache.cassandra.io.sstable.BloomFilterTracker.getTruePositiveCount()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.Component.Component(Type)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.Component.Component(Type,int)",1,7,n/a,6,0,2,3,1
"org.apache.cassandra.io.sstable.Component.Type.Type(String)",0,6,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.Component.Type.fromRepresentation(String)",2,1,n/a,7,0,1,4,3
"org.apache.cassandra.io.sstable.Component.equals(Object)",0,0,n/a,10,0,1,6,4
"org.apache.cassandra.io.sstable.Component.fromFilename(File,String)",10,0,n/a,36,1,2,31,9
"org.apache.cassandra.io.sstable.Component.hashCode()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.io.sstable.Component.name()",2,1,n/a,18,1,0,10,3
"org.apache.cassandra.io.sstable.Component.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.io.sstable.Descriptor.Descriptor(File,String,String,int,boolean)",1,0,n/a,7,0,5,1,1
"org.apache.cassandra.io.sstable.Descriptor.Descriptor(String,File,String,String,int,boolean)",6,3,n/a,16,0,6,13,4
"org.apache.cassandra.io.sstable.Descriptor.asTemporary(boolean)",1,0,n/a,7,0,1,1,1
"org.apache.cassandra.io.sstable.Descriptor.baseFilename()",12,2,n/a,12,0,0,9,3
"org.apache.cassandra.io.sstable.Descriptor.equals(Object)",3,0,n/a,10,0,1,6,6
"org.apache.cassandra.io.sstable.Descriptor.extractKeyspaceName(File)",5,1,n/a,19,1,1,3,2
"org.apache.cassandra.io.sstable.Descriptor.filenameFor(Component)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.Descriptor.filenameFor(String)",1,2,n/a,8,0,1,1,1
"org.apache.cassandra.io.sstable.Descriptor.fromFilename(File,String)",12,2,n/a,33,1,2,16,3
"org.apache.cassandra.io.sstable.Descriptor.fromFilename(String)",6,2,n/a,11,0,1,5,1
"org.apache.cassandra.io.sstable.Descriptor.hasReplayPosition()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.Descriptor.hashCode()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.io.sstable.Descriptor.isFromTheFuture()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.Descriptor.isSnapshotInPath(File)",3,1,n/a,14,1,1,6,3
"org.apache.cassandra.io.sstable.Descriptor.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.io.sstable.Descriptor.versionValidate(String)",4,1,n/a,12,0,1,6,5
"org.apache.cassandra.io.sstable.IndexHelper.IndexInfo.IndexInfo(ByteBuffer,ByteBuffer,long,long)",0,4,n/a,7,0,4,4,1
"org.apache.cassandra.io.sstable.IndexHelper.IndexInfo.deserialize(FileDataInput)",5,1,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.IndexHelper.IndexInfo.serialize(DataOutput)",4,1,n/a,7,0,1,4,1
"org.apache.cassandra.io.sstable.IndexHelper.IndexInfo.serializedSize()",2,2,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.IndexHelper.defreezeBloomFilter(FileDataInput,boolean)",1,1,n/a,4,0,2,1,1
"org.apache.cassandra.io.sstable.IndexHelper.defreezeBloomFilter(FileDataInput,long,boolean)",9,1,n/a,23,0,3,6,4
"org.apache.cassandra.io.sstable.IndexHelper.deserializeIndex(FileDataInput)",7,2,n/a,22,1,1,9,3
"org.apache.cassandra.io.sstable.IndexHelper.getComparator(AbstractType,boolean)",0,2,n/a,4,0,2,1,2
"org.apache.cassandra.io.sstable.IndexHelper.indexFor(ByteBuffer,List<IndexInfo>,AbstractType,boolean)",5,2,n/a,36,0,4,5,5
"org.apache.cassandra.io.sstable.IndexHelper.skipBloomFilter(FileDataInput)",2,2,n/a,12,0,1,2,1
"org.apache.cassandra.io.sstable.IndexHelper.skipIndex(FileDataInput)",2,1,n/a,12,0,1,2,1
"org.apache.cassandra.io.sstable.IndexSummary.IndexSummary(long)",4,0,n/a,8,0,1,4,2
"org.apache.cassandra.io.sstable.IndexSummary.KeyPosition.KeyPosition(DecoratedKey,long)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.io.sstable.IndexSummary.KeyPosition.compareTo(KeyPosition)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.IndexSummary.KeyPosition.toString()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.IndexSummary.addEntry(DecoratedKey,long)",2,1,n/a,4,0,2,1,1
"org.apache.cassandra.io.sstable.IndexSummary.complete()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.IndexSummary.getIndexPositions()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.IndexSummary.incrementRowid()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.IndexSummary.maybeAddEntry(DecoratedKey,long)",3,0,n/a,6,0,2,3,2
"org.apache.cassandra.io.sstable.IndexSummary.shouldAddEntry()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.KeyIterator.KeyIterator(Descriptor)",4,0,n/a,15,1,1,4,2
"org.apache.cassandra.io.sstable.KeyIterator.close()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.KeyIterator.computeNext()",7,0,n/a,15,1,0,7,3
"org.apache.cassandra.io.sstable.KeyIterator.getBytesRead()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.KeyIterator.getTotalBytes()",2,0,n/a,11,1,0,3,2
"org.apache.cassandra.io.sstable.ReducingKeyIterator.ReducingKeyIterator(Collection<SSTableReader>)",4,0,n/a,4,2,1,6,2
"org.apache.cassandra.io.sstable.ReducingKeyIterator.close()",2,1,n/a,7,1,0,2,2
"org.apache.cassandra.io.sstable.ReducingKeyIterator.getBytesRead()",2,1,n/a,9,1,0,4,2
"org.apache.cassandra.io.sstable.ReducingKeyIterator.getTaskType()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.ReducingKeyIterator.getTotalBytes()",2,1,n/a,9,1,0,4,2
"org.apache.cassandra.io.sstable.ReducingKeyIterator.hasNext()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.ReducingKeyIterator.next()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.ReducingKeyIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTable.SSTable(Descriptor,CFMetaData,ReplayPosition,IPartitioner)",2,0,n/a,4,0,4,1,1
"org.apache.cassandra.io.sstable.SSTable.SSTable(Descriptor,Set<Component>,CFMetaData,ReplayPosition,IPartitioner)",3,1,n/a,4,0,5,1,1
"org.apache.cassandra.io.sstable.SSTable.SSTable(Descriptor,Set<Component>,CFMetaData,ReplayPosition,IPartitioner,EstimatedHistogram,EstimatedHistogram)",2,1,n/a,21,0,7,16,2
"org.apache.cassandra.io.sstable.SSTable.bytesOnDisk()",3,0,n/a,9,1,0,4,2
"org.apache.cassandra.io.sstable.SSTable.componentsFor(Descriptor,boolean)",6,0,n/a,7,2,2,7,5
"org.apache.cassandra.io.sstable.SSTable.defaultColumnHistogram()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTable.defaultRowHistogram()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTable.delete(Descriptor,Set<Component>)",11,0,n/a,34,2,2,11,6
"org.apache.cassandra.io.sstable.SSTable.estimateRowsFromData(Descriptor,BufferedRandomAccessFile)",8,0,n/a,18,1,2,11,3
"org.apache.cassandra.io.sstable.SSTable.estimateRowsFromIndex(BufferedRandomAccessFile)",10,0,n/a,17,1,1,10,5
"org.apache.cassandra.io.sstable.SSTable.getColumnFamilyName()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTable.getEstimatedColumnCount()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTable.getEstimatedRowSize()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTable.getFilename()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTable.getTableName()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTable.getTotalBytes(Iterable<SSTableReader>)",1,0,n/a,9,1,1,4,2
"org.apache.cassandra.io.sstable.SSTable.toString()",3,0,n/a,7,0,0,1,1
"org.apache.cassandra.io.sstable.SSTable.tryComponentFromFilename(File,String)",4,1,n/a,16,1,2,5,4
"org.apache.cassandra.io.sstable.SSTableBoundedScanner.BoundedKeyScanningIterator.hasNext()",3,0,n/a,18,1,0,9,4
"org.apache.cassandra.io.sstable.SSTableBoundedScanner.SSTableBoundedScanner(SSTableReader,int,boolean,Range)",8,0,n/a,21,2,4,8,3
"org.apache.cassandra.io.sstable.SSTableBoundedScanner.hasNext()",4,0,n/a,7,0,0,3,3
"org.apache.cassandra.io.sstable.SSTableBoundedScanner.next()",4,0,n/a,7,0,0,3,3
"org.apache.cassandra.io.sstable.SSTableDeletingReference.CleanupTask.run()",9,0,n/a,21,2,0,9,3
"org.apache.cassandra.io.sstable.SSTableDeletingReference.SSTableDeletingReference(DataTracker,SSTableReader,ReferenceQueue<? super SSTableReader>)",2,0,n/a,8,0,3,5,1
"org.apache.cassandra.io.sstable.SSTableDeletingReference.cleanup()",2,0,n/a,10,1,0,2,2
"org.apache.cassandra.io.sstable.SSTableDeletingReference.deleteOnCleanup()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.SSTableIdentityIterator(CFMetaData,BufferedRandomAccessFile,DecoratedKey,long,long,boolean)",1,0,n/a,5,0,6,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.SSTableIdentityIterator(CFMetaData,BufferedRandomAccessFile,DecoratedKey,long,long,boolean,SSTableReader,boolean)",15,2,n/a,50,3,8,27,6
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.SSTableIdentityIterator(SSTableReader,BufferedRandomAccessFile,DecoratedKey,long,long)",1,0,n/a,14,0,5,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.SSTableIdentityIterator(SSTableReader,BufferedRandomAccessFile,DecoratedKey,long,long,boolean)",1,1,n/a,15,0,6,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.close()",0,1,n/a,4,0,0,0,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.compareTo(SSTableIdentityIterator)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.echoData(DataOutput)",4,1,n/a,8,1,1,3,2
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.getColumnFamily()",0,8,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.getColumnFamilyWithColumns()",6,1,n/a,18,2,0,8,3
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.getKey()",0,9,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.getPath()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.hasNext()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.next()",7,0,n/a,18,1,0,7,4
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableIdentityIterator.reset()",2,2,n/a,11,1,0,3,2
"org.apache.cassandra.io.sstable.SSTableLoader.Client.addRangeForEndpoint(Range,InetAddress)",4,2,n/a,10,1,2,5,2
"org.apache.cassandra.io.sstable.SSTableLoader.Client.getEndpointToRangesMap()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableLoader.Client.init(String)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.sstable.SSTableLoader.Client.stop()",0,1,n/a,4,0,0,0,1
"org.apache.cassandra.io.sstable.SSTableLoader.Client.validateColumnFamily(String,String)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.io.sstable.SSTableLoader.CountDownCallback.CountDownCallback(CountDownLatch,InetAddress)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.io.sstable.SSTableLoader.CountDownCallback.run()",6,0,n/a,8,0,0,4,2
"org.apache.cassandra.io.sstable.SSTableLoader.LoaderFuture.LoaderFuture(int)",2,2,n/a,5,0,1,2,1
"org.apache.cassandra.io.sstable.SSTableLoader.LoaderFuture.cancel(boolean)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.SSTableLoader.LoaderFuture.get()",1,3,n/a,5,0,0,2,1
"org.apache.cassandra.io.sstable.SSTableLoader.LoaderFuture.get(long,TimeUnit)",1,0,n/a,5,0,2,2,1
"org.apache.cassandra.io.sstable.SSTableLoader.LoaderFuture.getPendingFiles()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableLoader.LoaderFuture.isCancelled()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableLoader.LoaderFuture.isDone()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableLoader.LoaderFuture.setPendings(InetAddress,Collection<PendingFile>)",2,1,n/a,4,0,2,1,1
"org.apache.cassandra.io.sstable.SSTableLoader.OutputHandler.debug(String)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.sstable.SSTableLoader.OutputHandler.output(String)",n/a,6,2,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.sstable.SSTableLoader.SSTableLoader(File,Client,OutputHandler)",1,2,n/a,7,0,3,4,1
"org.apache.cassandra.io.sstable.SSTableLoader.names(Collection<SSTableReader>)",5,1,n/a,7,0,1,4,2
"org.apache.cassandra.io.sstable.SSTableLoader.openSSTables()",22,1,n/a,29,3,0,20,8
"org.apache.cassandra.io.sstable.SSTableLoader.stream()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableLoader.stream(Set<InetAddress>)",22,2,n/a,28,2,1,18,4
"org.apache.cassandra.io.sstable.SSTableReader.Operator.Equals.apply(int)",0,2,n/a,1,0,1,1,1
"org.apache.cassandra.io.sstable.SSTableReader.Operator.GreaterThan.apply(int)",0,2,n/a,1,0,1,1,2
"org.apache.cassandra.io.sstable.SSTableReader.Operator.GreaterThanOrEqualTo.apply(int)",0,2,n/a,1,0,1,1,2
"org.apache.cassandra.io.sstable.SSTableReader.Operator.apply(int)",n/a,2,3,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.sstable.SSTableReader.SSTableReader(Descriptor,Set<Component>,CFMetaData,ReplayPosition,IPartitioner,SegmentedFile,SegmentedFile,IndexSummary,Filter,long,EstimatedHistogram,EstimatedHistogram)",1,2,n/a,21,0,12,6,1
"org.apache.cassandra.io.sstable.SSTableReader.cacheKey(DecoratedKey,Long)",4,2,n/a,7,0,2,3,1
"org.apache.cassandra.io.sstable.SSTableReader.compareTo(SSTableReader)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.SSTableReader.createColumnFamily()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.createLinks(String)",5,1,n/a,9,1,1,4,2
"org.apache.cassandra.io.sstable.SSTableReader.decodeKey(IPartitioner,Descriptor,ByteBuffer)",2,4,n/a,9,0,3,3,2
"org.apache.cassandra.io.sstable.SSTableReader.estimatedKeys()",3,1,n/a,7,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.forceFilterFailures()",1,0,n/a,7,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getApproximateKeyCount(Iterable<SSTableReader>)",6,0,n/a,12,1,1,7,3
"org.apache.cassandra.io.sstable.SSTableReader.getBloomFilter()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getBloomFilterFalsePositiveCount()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getBloomFilterTruePositiveCount()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getCachedPosition(DecoratedKey)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getCachedPosition(Pair<Descriptor, DecoratedKey>)",2,2,n/a,6,0,1,3,3
"org.apache.cassandra.io.sstable.SSTableReader.getColumnComparator()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getColumnSerializer()",2,0,n/a,6,0,0,1,2
"org.apache.cassandra.io.sstable.SSTableReader.getDirectScanner(int)",1,1,n/a,9,0,1,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getDirectScanner(int,Range)",1,0,n/a,10,0,2,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getFileDataInput(DecoratedKey,int)",2,2,n/a,7,0,2,4,2
"org.apache.cassandra.io.sstable.SSTableReader.getIndexScanPosition(DecoratedKey)",10,1,n/a,19,1,1,8,4
"org.apache.cassandra.io.sstable.SSTableReader.getKeyCache()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getKeySamples()",3,2,n/a,4,2,0,2,1
"org.apache.cassandra.io.sstable.SSTableReader.getKeySamples(Range)",12,0,n/a,4,6,1,15,5
"org.apache.cassandra.io.sstable.SSTableReader.getPosition(DecoratedKey,Operator)",22,3,n/a,78,5,2,39,21
"org.apache.cassandra.io.sstable.SSTableReader.getPositionsForRanges(Collection<Range>)",12,1,n/a,25,1,1,12,6
"org.apache.cassandra.io.sstable.SSTableReader.getRecentBloomFilterFalsePositiveCount()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getRecentBloomFilterTruePositiveCount()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.getSampleIndexesForRanges(List<KeyPosition>,Collection<Range>)",16,1,n/a,37,2,2,21,9
"org.apache.cassandra.io.sstable.SSTableReader.getScanner(int,QueryFilter)",1,1,n/a,9,0,2,1,1
"org.apache.cassandra.io.sstable.SSTableReader.internalOpen(Descriptor,Set<Component>,CFMetaData,ReplayPosition,IPartitioner,SegmentedFile,SegmentedFile,IndexSummary,Filter,long,EstimatedHistogram,EstimatedHistogram)",1,0,n/a,9,0,12,2,6
"org.apache.cassandra.io.sstable.SSTableReader.length()",0,1,n/a,7,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableReader.load(boolean,Set<DecoratedKey>)",37,2,n/a,57,3,2,34,15
"org.apache.cassandra.io.sstable.SSTableReader.loadBloomFilter()",11,1,n/a,25,2,0,10,3
"org.apache.cassandra.io.sstable.SSTableReader.markCompacted()",9,1,n/a,15,1,0,7,4
"org.apache.cassandra.io.sstable.SSTableReader.newSince(long)",0,0,n/a,10,0,1,1,1
"org.apache.cassandra.io.sstable.SSTableReader.open(Descriptor)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.sstable.SSTableReader.open(Descriptor,CFMetaData)",3,1,n/a,4,0,2,1,1
"org.apache.cassandra.io.sstable.SSTableReader.open(Descriptor,Set<Component>,CFMetaData,IPartitioner)",2,1,n/a,4,0,4,1,1
"org.apache.cassandra.io.sstable.SSTableReader.open(Descriptor,Set<Component>,Set<DecoratedKey>,DataTracker,CFMetaData,IPartitioner)",37,1,n/a,53,2,6,33,8
"org.apache.cassandra.io.sstable.SSTableReader.readRowSize(DataInput,Descriptor)",2,2,n/a,6,0,2,3,2
"org.apache.cassandra.io.sstable.SSTableReader.setTrackedBy(DataTracker)",3,2,n/a,9,1,1,4,2
"org.apache.cassandra.io.sstable.SSTableScanner.KeyScanningIterator.hasNext()",3,0,n/a,13,1,0,5,3
"org.apache.cassandra.io.sstable.SSTableScanner.KeyScanningIterator.next()",9,0,n/a,28,2,0,13,4
"org.apache.cassandra.io.sstable.SSTableScanner.KeyScanningIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableScanner.KeyScanningIterator.toString()",2,0,n/a,6,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableScanner.SSTableScanner(SSTableReader,QueryFilter,int)",3,0,n/a,17,1,3,5,2
"org.apache.cassandra.io.sstable.SSTableScanner.SSTableScanner(SSTableReader,int,boolean)",4,0,n/a,15,1,3,4,2
"org.apache.cassandra.io.sstable.SSTableScanner.close()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableScanner.getFileLength()",2,1,n/a,11,1,0,3,2
"org.apache.cassandra.io.sstable.SSTableScanner.getFilePointer()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableScanner.hasNext()",4,0,n/a,6,0,0,3,3
"org.apache.cassandra.io.sstable.SSTableScanner.next()",4,0,n/a,6,0,0,3,3
"org.apache.cassandra.io.sstable.SSTableScanner.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableScanner.seekTo(DecoratedKey)",3,1,n/a,18,2,1,8,3
"org.apache.cassandra.io.sstable.SSTableScanner.toString()",2,0,n/a,8,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableSimpleUnsortedWriter.SSTableSimpleUnsortedWriter(File,String,String,AbstractType,AbstractType,int)",2,0,n/a,21,0,6,2,2
"org.apache.cassandra.io.sstable.SSTableSimpleUnsortedWriter.close()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableSimpleUnsortedWriter.getColumnFamily()",5,0,n/a,17,1,0,6,2
"org.apache.cassandra.io.sstable.SSTableSimpleUnsortedWriter.sync()",8,2,n/a,13,1,0,8,3
"org.apache.cassandra.io.sstable.SSTableSimpleUnsortedWriter.writeRow(DecoratedKey,ColumnFamily)",3,0,n/a,6,0,2,3,2
"org.apache.cassandra.io.sstable.SSTableSimpleWriter.SSTableSimpleWriter(File,CFMetaData)",2,1,n/a,5,0,2,2,1
"org.apache.cassandra.io.sstable.SSTableSimpleWriter.SSTableSimpleWriter(File,String,String,AbstractType,AbstractType)",2,0,n/a,17,0,5,1,2
"org.apache.cassandra.io.sstable.SSTableSimpleWriter.close()",2,0,n/a,6,0,0,3,2
"org.apache.cassandra.io.sstable.SSTableSimpleWriter.getColumnFamily()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableSimpleWriter.writeRow(DecoratedKey,ColumnFamily)",1,1,n/a,4,0,2,1,1
"org.apache.cassandra.io.sstable.SSTableWriter.Builder.Builder(Descriptor,OperationType)",2,1,n/a,6,0,2,3,1
"org.apache.cassandra.io.sstable.SSTableWriter.Builder.build()",14,0,n/a,15,0,0,11,2
"org.apache.cassandra.io.sstable.SSTableWriter.Builder.getCompactionInfo()",5,0,n/a,17,1,0,4,2
"org.apache.cassandra.io.sstable.SSTableWriter.Builder.maybeOpenIndexer()",5,2,n/a,18,1,0,7,4
"org.apache.cassandra.io.sstable.SSTableWriter.CommutativeRowIndexer.CommutativeRowIndexer(Descriptor,ColumnFamilyStore,OperationType)",7,1,n/a,5,0,3,2,1
"org.apache.cassandra.io.sstable.SSTableWriter.CommutativeRowIndexer.close()",2,2,n/a,6,0,0,2,1
"org.apache.cassandra.io.sstable.SSTableWriter.CommutativeRowIndexer.doIndexing()",26,1,n/a,35,1,0,22,3
"org.apache.cassandra.io.sstable.SSTableWriter.IndexWriter.IndexWriter(Descriptor,IPartitioner,long)",7,2,n/a,9,0,3,6,1
"org.apache.cassandra.io.sstable.SSTableWriter.IndexWriter.afterAppend(DecoratedKey,long)",8,3,n/a,11,0,2,8,2
"org.apache.cassandra.io.sstable.SSTableWriter.IndexWriter.close()",14,2,n/a,19,0,0,10,1
"org.apache.cassandra.io.sstable.SSTableWriter.IndexWriter.mark()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableWriter.IndexWriter.reset()",1,1,n/a,7,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableWriter.RowIndexer.RowIndexer(Descriptor,BufferedRandomAccessFile,ColumnFamilyStore,OperationType)",0,2,n/a,7,0,4,4,1
"org.apache.cassandra.io.sstable.SSTableWriter.RowIndexer.RowIndexer(Descriptor,ColumnFamilyStore,OperationType)",4,1,n/a,4,0,3,1,1
"org.apache.cassandra.io.sstable.SSTableWriter.RowIndexer.close()",2,2,n/a,5,0,0,2,1
"org.apache.cassandra.io.sstable.SSTableWriter.RowIndexer.doIndexing()",20,1,n/a,28,1,0,20,2
"org.apache.cassandra.io.sstable.SSTableWriter.RowIndexer.index()",3,1,n/a,18,2,0,5,2
"org.apache.cassandra.io.sstable.SSTableWriter.RowIndexer.prepareIndexing()",4,1,n/a,15,1,0,7,2
"org.apache.cassandra.io.sstable.SSTableWriter.RowIndexer.updateCache(DecoratedKey,long,AbstractCompactedRow)",12,2,n/a,48,4,3,20,6
"org.apache.cassandra.io.sstable.SSTableWriter.SSTableWriter(String,long)",4,2,n/a,4,0,2,1,1
"org.apache.cassandra.io.sstable.SSTableWriter.SSTableWriter(String,long,CFMetaData,IPartitioner,ReplayPosition)",12,1,n/a,13,0,5,4,1
"org.apache.cassandra.io.sstable.SSTableWriter.afterAppend(DecoratedKey,long)",4,3,n/a,8,0,2,5,2
"org.apache.cassandra.io.sstable.SSTableWriter.append(AbstractCompactedRow)",8,0,n/a,10,0,1,7,1
"org.apache.cassandra.io.sstable.SSTableWriter.append(DecoratedKey,ByteBuffer)",7,0,n/a,9,0,2,6,1
"org.apache.cassandra.io.sstable.SSTableWriter.append(DecoratedKey,ColumnFamily)",13,0,n/a,21,0,2,14,1
"org.apache.cassandra.io.sstable.SSTableWriter.beforeAppend(DecoratedKey)",8,3,n/a,15,1,1,8,5
"org.apache.cassandra.io.sstable.SSTableWriter.closeAndOpenReader()",2,4,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableWriter.closeAndOpenReader(long)",12,1,n/a,20,0,1,12,1
"org.apache.cassandra.io.sstable.SSTableWriter.createBuilder(Descriptor,OperationType)",4,0,n/a,9,0,2,3,2
"org.apache.cassandra.io.sstable.SSTableWriter.getFilePointer()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.sstable.SSTableWriter.mark()",2,0,n/a,5,0,0,2,1
"org.apache.cassandra.io.sstable.SSTableWriter.rename(Descriptor,Set<Component>)",10,2,n/a,16,1,2,7,3
"org.apache.cassandra.io.sstable.SSTableWriter.reset()",3,0,n/a,12,1,0,4,2
"org.apache.cassandra.io.sstable.SSTableWriter.writeMetadata(Descriptor,EstimatedHistogram,EstimatedHistogram,ReplayPosition)",7,3,n/a,11,0,4,5,1
"org.apache.cassandra.io.util.AbstractDataInput.getPosition()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.io.util.AbstractDataInput.readBoolean()",2,0,n/a,18,1,0,4,2
"org.apache.cassandra.io.util.AbstractDataInput.readByte()",2,0,n/a,18,1,0,4,2
"org.apache.cassandra.io.util.AbstractDataInput.readChar()",2,0,n/a,18,1,0,4,2
"org.apache.cassandra.io.util.AbstractDataInput.readDouble()",2,0,n/a,14,0,0,1,1
"org.apache.cassandra.io.util.AbstractDataInput.readFloat()",2,0,n/a,14,0,0,1,1
"org.apache.cassandra.io.util.AbstractDataInput.readFully(byte[])",1,0,n/a,18,0,1,1,1
"org.apache.cassandra.io.util.AbstractDataInput.readFully(byte[],int,int)",4,1,n/a,41,2,3,10,8
"org.apache.cassandra.io.util.AbstractDataInput.readInt()",2,1,n/a,19,1,0,4,2
"org.apache.cassandra.io.util.AbstractDataInput.readLine()",11,0,n/a,43,3,0,22,9
"org.apache.cassandra.io.util.AbstractDataInput.readLong()",3,1,n/a,24,1,0,5,2
"org.apache.cassandra.io.util.AbstractDataInput.readShort()",2,0,n/a,18,1,0,4,2
"org.apache.cassandra.io.util.AbstractDataInput.readUTF()",1,0,n/a,19,0,0,1,1
"org.apache.cassandra.io.util.AbstractDataInput.readUnsignedByte()",2,0,n/a,18,1,0,4,2
"org.apache.cassandra.io.util.AbstractDataInput.readUnsignedShort()",2,0,n/a,18,1,0,4,2
"org.apache.cassandra.io.util.AbstractDataInput.seekInternal(int)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.util.BufferedRandomAccessFile.BufferedRandomAccessFile(File,String)",1,0,n/a,9,0,2,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.BufferedRandomAccessFile(File,String,int)",1,3,n/a,4,0,3,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.BufferedRandomAccessFile(File,String,int,boolean)",9,14,n/a,15,0,4,10,3
"org.apache.cassandra.io.util.BufferedRandomAccessFile.BufferedRandomAccessFile(String,String)",2,0,n/a,9,0,2,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.BufferedRandomAccessFile(String,String,int)",2,2,n/a,4,0,3,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.BufferedRandomAccessFileMark.BufferedRandomAccessFileMark(long)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.bytesPastMark()",1,0,n/a,6,0,0,3,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.bytesPastMark(FileMark)",1,0,n/a,7,0,1,4,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.bytesRemaining()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.close()",3,10,n/a,11,1,0,5,3
"org.apache.cassandra.io.util.BufferedRandomAccessFile.flush()",5,4,n/a,34,3,0,14,6
"org.apache.cassandra.io.util.BufferedRandomAccessFile.getFilePointer()",0,41,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.getPath()",0,7,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.getUncachingReader(String)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.isEOF()",2,11,n/a,7,0,0,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.isReadOnly()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.length()",3,22,n/a,4,0,0,1,2
"org.apache.cassandra.io.util.BufferedRandomAccessFile.mark()",2,2,n/a,5,0,0,2,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.reBuffer()",6,6,n/a,26,1,0,19,7
"org.apache.cassandra.io.util.BufferedRandomAccessFile.read()",2,0,n/a,12,0,0,6,4
"org.apache.cassandra.io.util.BufferedRandomAccessFile.read(byte[])",1,0,n/a,5,0,1,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.read(byte[],int,int)",4,1,n/a,17,0,3,11,5
"org.apache.cassandra.io.util.BufferedRandomAccessFile.readBytes(int)",2,0,n/a,7,0,1,4,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.reset()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.reset(FileMark)",1,2,n/a,5,0,1,2,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.resetBuffer()",0,2,n/a,5,0,0,2,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.seek(long)",5,21,n/a,12,0,1,7,6
"org.apache.cassandra.io.util.BufferedRandomAccessFile.setLength(long)",5,1,n/a,31,2,1,13,5
"org.apache.cassandra.io.util.BufferedRandomAccessFile.skipBytes(int)",3,0,n/a,12,1,1,6,3
"org.apache.cassandra.io.util.BufferedRandomAccessFile.sync()",3,3,n/a,20,2,0,8,3
"org.apache.cassandra.io.util.BufferedRandomAccessFile.toString()",2,0,n/a,7,0,0,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.write(byte[])",1,1,n/a,5,0,1,1,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.write(byte[],int,int)",4,2,n/a,16,1,3,10,4
"org.apache.cassandra.io.util.BufferedRandomAccessFile.write(int)",1,0,n/a,6,0,1,2,1
"org.apache.cassandra.io.util.BufferedRandomAccessFile.writeAtMost(byte[],int,int)",4,1,n/a,18,0,3,10,2
"org.apache.cassandra.io.util.BufferedSegmentedFile.BufferedSegmentedFile(String,long)",1,1,n/a,4,0,2,1,1
"org.apache.cassandra.io.util.BufferedSegmentedFile.Builder.addPotentialBoundary(long)",0,0,n/a,9,0,1,0,1
"org.apache.cassandra.io.util.BufferedSegmentedFile.Builder.complete(String)",3,0,n/a,9,0,1,2,1
"org.apache.cassandra.io.util.BufferedSegmentedFile.getSegment(long,int)",3,0,n/a,13,1,2,5,2
"org.apache.cassandra.io.util.ColumnIterator.ColumnIterator(ColumnSerializer,DataInput,ColumnFamilyStore,int,boolean,int)",0,1,n/a,9,0,6,6,1
"org.apache.cassandra.io.util.ColumnIterator.deserializeNext()",2,1,n/a,12,1,0,4,2
"org.apache.cassandra.io.util.ColumnIterator.hasNext()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnIterator.next()",6,0,n/a,4,2,0,7,2
"org.apache.cassandra.io.util.ColumnIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSet.ColumnSet(ColumnSerializer,DataInput,ColumnFamilyStore,int,boolean,int)",0,1,n/a,9,0,6,6,1
"org.apache.cassandra.io.util.ColumnSet.add(Entry<ByteBuffer, IColumn>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSet.addAll(Collection<? extends Entry<ByteBuffer, IColumn>>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSet.clear()",0,0,n/a,3,0,0,0,1
"org.apache.cassandra.io.util.ColumnSet.contains(Object)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSet.containsAll(Collection<?>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSet.isEmpty()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSet.iterator()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSet.remove(Object)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSet.removeAll(Collection<?>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSet.retainAll(Collection<?>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSet.size()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSet.toArray()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSet.toArray(T[])",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.ColumnSortedMap(Comparator<ByteBuffer>,ColumnSerializer,DataInput,ColumnFamilyStore,int,boolean,int)",0,1,n/a,10,0,7,7,1
"org.apache.cassandra.io.util.ColumnSortedMap.clear()",0,0,n/a,3,0,0,0,1
"org.apache.cassandra.io.util.ColumnSortedMap.comparator()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.containsKey(Object)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.containsValue(Object)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.entrySet()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.firstKey()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.get(Object)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.headMap(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.isEmpty()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.keySet()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.lastKey()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.put(ByteBuffer,IColumn)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.putAll(Map<? extends ByteBuffer, ? extends IColumn>)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.remove(Object)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.size()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.subMap(ByteBuffer,ByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.tailMap(ByteBuffer)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.ColumnSortedMap.values()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.DataOutputBuffer.DataOutputBuffer()",1,18,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.DataOutputBuffer.DataOutputBuffer(int)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.DataOutputBuffer.asByteArray()",2,1,n/a,7,0,0,1,1
"org.apache.cassandra.io.util.DataOutputBuffer.buffer()",0,4,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.DataOutputBuffer.getData()",2,17,n/a,8,0,0,1,1
"org.apache.cassandra.io.util.DataOutputBuffer.getLength()",2,23,n/a,5,0,0,1,1
"org.apache.cassandra.io.util.DataOutputBuffer.reset()",2,1,n/a,7,0,0,3,1
"org.apache.cassandra.io.util.FileDataInput.bytesPastMark(FileMark)",n/a,4,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.util.FileDataInput.bytesRemaining()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.io.util.FileDataInput.getPath()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.io.util.FileDataInput.isEOF()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.io.util.FileDataInput.mark()",n/a,5,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.io.util.FileDataInput.readBytes(int)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.util.FileDataInput.reset(FileMark)",n/a,3,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.util.FileUtils.FileComparator.compare(File,File)",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.io.util.FileUtils.close(Iterable<? extends Closeable>)",2,1,n/a,19,2,1,9,5
"org.apache.cassandra.io.util.FileUtils.closeQuietly(Closeable)",2,13,n/a,12,1,1,4,3
"org.apache.cassandra.io.util.FileUtils.createDirectory(String)",4,6,n/a,11,2,1,4,3
"org.apache.cassandra.io.util.FileUtils.delete(File[])",1,0,n/a,7,1,1,2,2
"org.apache.cassandra.io.util.FileUtils.delete(List<String>)",6,1,n/a,16,2,1,11,4
"org.apache.cassandra.io.util.FileUtils.delete(String)",2,1,n/a,5,0,1,2,1
"org.apache.cassandra.io.util.FileUtils.deleteRecursive(File)",5,3,n/a,16,1,1,5,3
"org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(File)",8,4,n/a,10,1,1,5,3
"org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(String)",2,4,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.FileUtils.renameWithConfirm(File,File)",11,1,n/a,8,0,2,5,3
"org.apache.cassandra.io.util.FileUtils.skipBytesFully(DataInput,int)",2,1,n/a,11,1,2,6,3
"org.apache.cassandra.io.util.FileUtils.skipBytesFully(DataInput,long)",3,0,n/a,12,1,2,7,3
"org.apache.cassandra.io.util.FileUtils.stringifyFileSize(double)",5,2,n/a,33,1,1,19,5
"org.apache.cassandra.io.util.FileUtils.truncate(String,long)",5,2,n/a,20,1,2,7,2
"org.apache.cassandra.io.util.IIterableColumns.getComparator()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.io.util.IIterableColumns.getEstimatedColumnCount()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.io.util.MappedFileDataInput.MappedFileDataInput(FileInputStream,String,int)",3,0,n/a,7,0,3,4,1
"org.apache.cassandra.io.util.MappedFileDataInput.MappedFileDataInput(MappedByteBuffer,String,int)",0,0,n/a,7,0,3,4,1
"org.apache.cassandra.io.util.MappedFileDataInput.MappedFileDataInputMark.MappedFileDataInputMark(int)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.bytesPastMark(FileMark)",0,0,n/a,6,0,1,3,1
"org.apache.cassandra.io.util.MappedFileDataInput.bytesRemaining()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.getPath()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.getPosition()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.isEOF()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.mark()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.markSupported()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.read()",2,0,n/a,6,0,0,3,2
"org.apache.cassandra.io.util.MappedFileDataInput.readBytes(int)",8,0,n/a,17,0,1,7,2
"org.apache.cassandra.io.util.MappedFileDataInput.readFully(byte[])",1,0,n/a,5,0,1,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.readFully(byte[],int,int)",1,0,n/a,5,0,3,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.reset(FileMark)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.io.util.MappedFileDataInput.seekInternal(int)",0,1,n/a,5,0,1,1,1
"org.apache.cassandra.io.util.MappedFileDataInput.skipBytes(int)",2,0,n/a,10,0,1,7,2
"org.apache.cassandra.io.util.MappedFileDataInput.toString()",2,0,n/a,7,0,0,1,1
"org.apache.cassandra.io.util.MemoryInputStream.MemoryInputStream(FreeableMemory)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.MemoryInputStream.close()",0,0,n/a,4,0,0,0,1
"org.apache.cassandra.io.util.MemoryInputStream.getPosition()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.MemoryInputStream.read()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.MemoryInputStream.seekInternal(int)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.MemoryInputStream.skipBytes(int)",2,0,n/a,5,0,1,2,1
"org.apache.cassandra.io.util.MemoryOutputStream.MemoryOutputStream(Memory)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.MemoryOutputStream.position()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.MemoryOutputStream.write(int)",1,0,n/a,6,0,1,2,1
"org.apache.cassandra.io.util.MmappedSegmentedFile.Builder.Builder()",3,0,n/a,6,0,0,3,1
"org.apache.cassandra.io.util.MmappedSegmentedFile.Builder.addPotentialBoundary(long)",2,0,n/a,23,1,1,11,4
"org.apache.cassandra.io.util.MmappedSegmentedFile.Builder.complete(String)",6,0,n/a,8,0,1,3,1
"org.apache.cassandra.io.util.MmappedSegmentedFile.Builder.createSegments(String)",9,1,n/a,28,2,1,15,4
"org.apache.cassandra.io.util.MmappedSegmentedFile.MmappedSegmentedFile(String,long,Segment[])",1,1,n/a,5,0,3,2,1
"org.apache.cassandra.io.util.MmappedSegmentedFile.floor(long)",3,1,n/a,14,0,1,7,3
"org.apache.cassandra.io.util.MmappedSegmentedFile.getSegment(long,int)",5,0,n/a,24,1,2,8,3
"org.apache.cassandra.io.util.OutputBuffer.OutputBuffer()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.OutputBuffer.OutputBuffer(int)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.OutputBuffer.asByteArray()",1,2,n/a,11,0,0,3,2
"org.apache.cassandra.io.util.OutputBuffer.getData()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.OutputBuffer.getLength()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.OutputBuffer.write(DataInput,int)",3,0,n/a,12,1,2,7,2
"org.apache.cassandra.io.util.SegmentedFile.Builder.addPotentialBoundary(long)",n/a,4,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.util.SegmentedFile.Builder.complete(String)",n/a,4,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.io.util.SegmentedFile.Segment.Segment(long,MappedByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.io.util.SegmentedFile.Segment.compareTo(Segment)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.io.util.SegmentedFile.SegmentIterator.SegmentIterator(long,int)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.io.util.SegmentedFile.SegmentIterator.hasNext()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.io.util.SegmentedFile.SegmentIterator.next()",4,0,n/a,16,1,0,8,3
"org.apache.cassandra.io.util.SegmentedFile.SegmentIterator.remove()",1,0,n/a,1,0,0,1,1
"org.apache.cassandra.io.util.SegmentedFile.SegmentedFile(String,long)",0,0,n/a,8,0,2,2,1
"org.apache.cassandra.io.util.SegmentedFile.getBuilder(DiskAccessMode)",2,4,n/a,9,0,1,1,2
"org.apache.cassandra.io.util.SegmentedFile.getSegment(long,int)",n/a,2,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.io.util.SegmentedFile.iterator(long,int)",1,1,n/a,7,0,2,1,1
"org.apache.cassandra.io.util.SegmentedFile.toString()",2,0,n/a,6,0,0,1,1
"org.apache.cassandra.locator.AbstractEndpointSnitch.compareEndpoints(InetAddress,InetAddress,InetAddress)",3,0,n/a,4,0,3,1,1
"org.apache.cassandra.locator.AbstractEndpointSnitch.getSortedListByProximity(InetAddress,Collection<InetAddress>)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.locator.AbstractEndpointSnitch.gossiperStarting()",0,0,n/a,4,0,0,0,1
"org.apache.cassandra.locator.AbstractEndpointSnitch.sortByProximity(InetAddress,List<InetAddress>)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.locator.AbstractNetworkTopologySnitch.compareEndpoints(InetAddress,InetAddress,InetAddress)",18,1,n/a,22,0,3,19,13
"org.apache.cassandra.locator.AbstractNetworkTopologySnitch.getDatacenter(InetAddress)",n/a,3,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.locator.AbstractNetworkTopologySnitch.getRack(InetAddress)",n/a,3,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.locator.AbstractNetworkTopologySnitch.getSortedListByProximity(InetAddress,Collection<InetAddress>)",2,0,n/a,12,0,2,3,1
"org.apache.cassandra.locator.AbstractNetworkTopologySnitch.sortByProximity(InetAddress,List<InetAddress>)",3,1,n/a,4,2,2,2,1
"org.apache.cassandra.locator.AbstractReplicationStrategy.AbstractReplicationStrategy(String,TokenMetadata,IEndpointSnitch,Map<String, String>)",1,0,n/a,11,0,4,8,1
"org.apache.cassandra.locator.AbstractReplicationStrategy.cacheEndpoint(Token,ArrayList<InetAddress>)",1,1,n/a,4,0,2,1,1
"org.apache.cassandra.locator.AbstractReplicationStrategy.calculateNaturalEndpoints(Token,TokenMetadata)",n/a,9,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.locator.AbstractReplicationStrategy.clearEndpointCache()",2,1,n/a,5,0,0,2,1
"org.apache.cassandra.locator.AbstractReplicationStrategy.createReplicationStrategy(String,Class<? extends AbstractReplicationStrategy>,TokenMetadata,IEndpointSnitch,Map<String, String>)",4,1,n/a,22,1,5,8,2
"org.apache.cassandra.locator.AbstractReplicationStrategy.createReplicationStrategy(String,String,TokenMetadata,IEndpointSnitch,Map<String, String>)",2,1,n/a,10,0,5,2,1
"org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressRanges()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressRanges(TokenMetadata)",5,4,n/a,19,2,1,6,3
"org.apache.cassandra.locator.AbstractReplicationStrategy.getCachedEndpoints(Token)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.locator.AbstractReplicationStrategy.getClass(String)",2,3,n/a,5,0,1,2,2
"org.apache.cassandra.locator.AbstractReplicationStrategy.getHintedEndpoints(Collection<InetAddress>)",18,2,n/a,42,2,1,17,10
"org.apache.cassandra.locator.AbstractReplicationStrategy.getNaturalEndpoints(Token)",10,4,n/a,20,1,1,8,2
"org.apache.cassandra.locator.AbstractReplicationStrategy.getPendingAddressRanges(TokenMetadata,Token,InetAddress)",4,2,n/a,6,0,3,3,1
"org.apache.cassandra.locator.AbstractReplicationStrategy.getRangeAddresses(TokenMetadata)",5,3,n/a,13,2,1,6,3
"org.apache.cassandra.locator.AbstractReplicationStrategy.getReplicationFactor()",n/a,5,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.locator.AbstractReplicationStrategy.getWriteResponseHandler(Collection<InetAddress>,Multimap<InetAddress, InetAddress>,ConsistencyLevel)",3,2,n/a,15,1,3,5,3
"org.apache.cassandra.locator.AbstractReplicationStrategy.invalidateCachedTokenEndpointValues()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.AbstractReplicationStrategy.validateOptions()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.locator.AbstractReplicationStrategy.validateReplicationFactor(String)",3,0,n/a,14,2,1,4,3
"org.apache.cassandra.locator.AdaptiveLatencyTracker.AdaptiveLatencyTracker(int)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.locator.AdaptiveLatencyTracker.add(double)",3,1,n/a,15,2,1,4,3
"org.apache.cassandra.locator.AdaptiveLatencyTracker.clear()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.locator.AdaptiveLatencyTracker.iterator()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.AdaptiveLatencyTracker.score()",2,0,n/a,4,0,0,1,2
"org.apache.cassandra.locator.AdaptiveLatencyTracker.size()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.DynamicEndpointSnitch(IEndpointSnitch)",8,1,n/a,6,2,1,9,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.compareEndpoints(InetAddress,InetAddress,InetAddress)",6,1,n/a,21,1,3,13,5
"org.apache.cassandra.locator.DynamicEndpointSnitch.dumpTimings(String)",4,0,n/a,14,2,1,7,3
"org.apache.cassandra.locator.DynamicEndpointSnitch.getBadnessThreshold()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.getDatacenter(InetAddress)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.getRack(InetAddress)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.getResetInterval()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.getScores()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.getSortedListByProximity(InetAddress,Collection<InetAddress>)",2,0,n/a,6,0,2,3,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.getSubsnitchClassName()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.getUpdateInterval()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.gossiperStarting()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.receiveTiming(InetAddress,Double)",6,2,n/a,15,1,2,10,4
"org.apache.cassandra.locator.DynamicEndpointSnitch.registerMBean()",4,1,n/a,12,1,0,4,2
"org.apache.cassandra.locator.DynamicEndpointSnitch.reset()",2,1,n/a,7,1,0,2,2
"org.apache.cassandra.locator.DynamicEndpointSnitch.sortByProximity(InetAddress,List<InetAddress>)",4,1,n/a,12,1,2,4,2
"org.apache.cassandra.locator.DynamicEndpointSnitch.sortByProximityWithBadness(InetAddress,List<InetAddress>)",6,1,n/a,20,2,2,13,6
"org.apache.cassandra.locator.DynamicEndpointSnitch.sortByProximityWithScore(InetAddress,List<InetAddress>)",3,2,n/a,4,2,2,2,1
"org.apache.cassandra.locator.DynamicEndpointSnitch.unregisterMBean()",4,1,n/a,12,1,0,4,2
"org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores()",10,1,n/a,18,2,0,9,5
"org.apache.cassandra.locator.DynamicEndpointSnitchMBean.dumpTimings(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.locator.DynamicEndpointSnitchMBean.getBadnessThreshold()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.locator.DynamicEndpointSnitchMBean.getResetInterval()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.locator.DynamicEndpointSnitchMBean.getScores()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.locator.DynamicEndpointSnitchMBean.getSubsnitchClassName()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.locator.DynamicEndpointSnitchMBean.getUpdateInterval()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.locator.Ec2Snitch.Ec2Snitch()",3,0,n/a,8,0,0,4,2
"org.apache.cassandra.locator.Ec2Snitch.awsApiCall(String)",11,1,n/a,21,1,1,11,2
"org.apache.cassandra.locator.Ec2Snitch.getDatacenter(InetAddress)",4,0,n/a,6,0,1,3,2
"org.apache.cassandra.locator.Ec2Snitch.getRack(InetAddress)",4,0,n/a,6,0,1,3,2
"org.apache.cassandra.locator.Ec2Snitch.gossiperStarting()",5,0,n/a,8,0,0,3,1
"org.apache.cassandra.locator.EndpointSnitchInfo.create()",5,0,n/a,12,1,0,4,2
"org.apache.cassandra.locator.EndpointSnitchInfo.getDatacenter(String)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.locator.EndpointSnitchInfo.getRack(String)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.locator.EndpointSnitchInfoMBean.getDatacenter(String)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.locator.EndpointSnitchInfoMBean.getRack(String)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.locator.IEndpointSnitch.compareEndpoints(InetAddress,InetAddress,InetAddress)",n/a,0,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.locator.IEndpointSnitch.getDatacenter(InetAddress)",n/a,12,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.locator.IEndpointSnitch.getRack(InetAddress)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.locator.IEndpointSnitch.getSortedListByProximity(InetAddress,Collection<InetAddress>)",n/a,2,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.locator.IEndpointSnitch.gossiperStarting()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.locator.IEndpointSnitch.sortByProximity(InetAddress,List<InetAddress>)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.locator.ILatencySubscriber.receiveTiming(InetAddress,Double)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.locator.LocalStrategy.LocalStrategy(String,TokenMetadata,IEndpointSnitch,Map<String, String>)",1,0,n/a,4,0,4,1,1
"org.apache.cassandra.locator.LocalStrategy.calculateNaturalEndpoints(Token,TokenMetadata)",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.locator.LocalStrategy.getReplicationFactor()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.LocalStrategy.validateOptions()",0,0,n/a,4,0,0,0,1
"org.apache.cassandra.locator.NetworkTopologyStrategy.NetworkTopologyStrategy(String,TokenMetadata,IEndpointSnitch,Map<String, String>)",12,0,n/a,19,2,4,12,4
"org.apache.cassandra.locator.NetworkTopologyStrategy.calculateNaturalEndpoints(Token,TokenMetadata)",37,0,n/a,45,3,2,28,11
"org.apache.cassandra.locator.NetworkTopologyStrategy.getDatacenters()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.locator.NetworkTopologyStrategy.getReplicationFactor()",1,1,n/a,7,0,0,4,2
"org.apache.cassandra.locator.NetworkTopologyStrategy.getReplicationFactor(String)",1,3,n/a,4,0,1,1,1
"org.apache.cassandra.locator.NetworkTopologyStrategy.validateOptions()",3,0,n/a,7,1,0,2,2
"org.apache.cassandra.locator.OldNetworkTopologyStrategy.OldNetworkTopologyStrategy(String,TokenMetadata,IEndpointSnitch,Map<String, String>)",1,0,n/a,4,0,4,1,1
"org.apache.cassandra.locator.OldNetworkTopologyStrategy.calculateNaturalEndpoints(Token,TokenMetadata)",39,0,n/a,52,3,2,28,13
"org.apache.cassandra.locator.OldNetworkTopologyStrategy.getReplicationFactor()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.locator.OldNetworkTopologyStrategy.validateOptions()",4,0,n/a,8,1,0,3,3
"org.apache.cassandra.locator.PropertyFileSnitch.PropertyFileSnitch()",6,0,n/a,4,3,0,7,2
"org.apache.cassandra.locator.PropertyFileSnitch.getDatacenter(InetAddress)",1,0,n/a,10,0,1,1,1
"org.apache.cassandra.locator.PropertyFileSnitch.getEndpointInfo(InetAddress)",2,2,n/a,16,1,1,5,2
"org.apache.cassandra.locator.PropertyFileSnitch.getRack(InetAddress)",1,0,n/a,10,0,1,1,1
"org.apache.cassandra.locator.PropertyFileSnitch.reloadConfiguration()",22,2,n/a,50,3,0,27,7
"org.apache.cassandra.locator.RackInferringSnitch.getDatacenter(InetAddress)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.locator.RackInferringSnitch.getRack(InetAddress)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.locator.SeedProvider.getSeeds()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.locator.SimpleSeedProvider.SimpleSeedProvider(Map<String, String>)",6,0,n/a,17,2,1,6,3
"org.apache.cassandra.locator.SimpleSeedProvider.addSeed(InetAddress)",2,0,n/a,6,0,1,2,2
"org.apache.cassandra.locator.SimpleSeedProvider.getSeeds()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.SimpleSnitch.getDatacenter(InetAddress)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.locator.SimpleSnitch.getRack(InetAddress)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.locator.SimpleSnitch.getSortedListByProximity(InetAddress,Collection<InetAddress>)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.locator.SimpleSnitch.sortByProximity(InetAddress,List<InetAddress>)",0,0,n/a,3,0,2,0,1
"org.apache.cassandra.locator.SimpleStrategy.SimpleStrategy(String,TokenMetadata,IEndpointSnitch,Map<String, String>)",1,0,n/a,4,0,4,1,1
"org.apache.cassandra.locator.SimpleStrategy.calculateNaturalEndpoints(Token,TokenMetadata)",10,0,n/a,15,1,2,9,4
"org.apache.cassandra.locator.SimpleStrategy.getReplicationFactor()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.locator.SimpleStrategy.validateOptions()",4,0,n/a,8,1,0,3,3
"org.apache.cassandra.locator.TokenMetadata.TokenMetadata()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.locator.TokenMetadata.TokenMetadata(BiMap<Token, InetAddress>)",2,2,n/a,7,0,1,4,2
"org.apache.cassandra.locator.TokenMetadata.addBootstrapToken(Token,InetAddress)",13,1,n/a,22,1,2,14,5
"org.apache.cassandra.locator.TokenMetadata.addLeavingEndpoint(InetAddress)",5,4,n/a,13,1,1,5,1
"org.apache.cassandra.locator.TokenMetadata.addMovingEndpoint(Token,InetAddress)",6,1,n/a,18,1,2,5,1
"org.apache.cassandra.locator.TokenMetadata.clearUnsafe()",5,0,n/a,9,0,0,5,1
"org.apache.cassandra.locator.TokenMetadata.cloneAfterAllLeft()",6,3,n/a,21,1,0,7,2
"org.apache.cassandra.locator.TokenMetadata.cloneAfterAllSettled()",7,1,n/a,23,1,0,9,3
"org.apache.cassandra.locator.TokenMetadata.cloneOnlyTokenMap()",6,2,n/a,16,1,0,4,1
"org.apache.cassandra.locator.TokenMetadata.entrySet()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.locator.TokenMetadata.firstToken(ArrayList<Token>,Token)",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.locator.TokenMetadata.firstTokenIndex(ArrayList,Token,boolean)",3,2,n/a,13,1,3,7,4
"org.apache.cassandra.locator.TokenMetadata.getBootstrapTokens()",0,2,n/a,5,0,0,1,1
"org.apache.cassandra.locator.TokenMetadata.getEndpoint(Token)",5,9,n/a,12,1,1,4,1
"org.apache.cassandra.locator.TokenMetadata.getLeavingEndpoints()",0,4,n/a,5,0,0,1,1
"org.apache.cassandra.locator.TokenMetadata.getMovingEndpoints()",0,3,n/a,8,0,0,1,1
"org.apache.cassandra.locator.TokenMetadata.getPendingRanges(String)",2,2,n/a,5,0,1,1,1
"org.apache.cassandra.locator.TokenMetadata.getPendingRanges(String,InetAddress)",7,2,n/a,12,2,2,5,3
"org.apache.cassandra.locator.TokenMetadata.getPendingRangesMM(String)",3,2,n/a,12,1,1,7,3
"org.apache.cassandra.locator.TokenMetadata.getPredecessor(Token)",7,2,n/a,7,0,1,4,2
"org.apache.cassandra.locator.TokenMetadata.getPrimaryRangeFor(Token)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.locator.TokenMetadata.getSuccessor(Token)",7,1,n/a,7,0,1,4,2
"org.apache.cassandra.locator.TokenMetadata.getToken(InetAddress)",7,9,n/a,14,1,1,6,1
"org.apache.cassandra.locator.TokenMetadata.getTokenToEndpointMap()",5,2,n/a,10,0,0,4,1
"org.apache.cassandra.locator.TokenMetadata.getWriteEndpoints(Token,String,Collection<InetAddress>)",8,0,n/a,25,2,3,8,4
"org.apache.cassandra.locator.TokenMetadata.invalidateCaches()",1,5,n/a,7,1,0,2,2
"org.apache.cassandra.locator.TokenMetadata.isLeaving(InetAddress)",5,2,n/a,13,1,1,5,1
"org.apache.cassandra.locator.TokenMetadata.isMember(InetAddress)",6,13,n/a,13,1,1,5,1
"org.apache.cassandra.locator.TokenMetadata.isMoving(InetAddress)",5,1,n/a,18,2,1,8,3
"org.apache.cassandra.locator.TokenMetadata.pendingRangeChanges(InetAddress)",4,3,n/a,10,0,1,6,3
"org.apache.cassandra.locator.TokenMetadata.printPendingRanges()",10,2,n/a,13,2,0,6,3
"org.apache.cassandra.locator.TokenMetadata.register(AbstractReplicationStrategy)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.locator.TokenMetadata.removeBootstrapToken(Token)",5,1,n/a,13,1,1,5,1
"org.apache.cassandra.locator.TokenMetadata.removeEndpoint(InetAddress)",11,10,n/a,17,1,1,9,1
"org.apache.cassandra.locator.TokenMetadata.removeFromMoving(InetAddress)",7,2,n/a,25,3,1,9,3
"org.apache.cassandra.locator.TokenMetadata.ringIterator(ArrayList<Token>,Token,boolean)",16,1,n/a,22,3,3,16,10
"org.apache.cassandra.locator.TokenMetadata.setPendingRanges(String,Multimap<Range, InetAddress>)",1,2,n/a,4,0,2,1,1
"org.apache.cassandra.locator.TokenMetadata.sortTokens()",3,3,n/a,6,0,0,3,1
"org.apache.cassandra.locator.TokenMetadata.sortedTokens()",4,8,n/a,12,1,0,4,1
"org.apache.cassandra.locator.TokenMetadata.toString()",42,0,n/a,52,3,0,30,8
"org.apache.cassandra.locator.TokenMetadata.unregister(AbstractReplicationStrategy)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.locator.TokenMetadata.updateNormalToken(Token,InetAddress)",15,10,n/a,25,2,2,15,3
"org.apache.cassandra.net.AsyncResult.AsyncResult()",2,0,n/a,5,0,0,2,1
"org.apache.cassandra.net.AsyncResult.get(long,TimeUnit)",9,0,n/a,30,3,2,13,6
"org.apache.cassandra.net.AsyncResult.getFrom()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.net.AsyncResult.isLatencyForSnitch()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.net.AsyncResult.result(Message)",7,0,n/a,18,2,1,8,2
"org.apache.cassandra.net.CachingMessageProducer.CachingMessageProducer(MessageProducer)",0,5,n/a,4,0,1,1,1
"org.apache.cassandra.net.CachingMessageProducer.getMessage(Integer)",3,0,n/a,10,1,1,5,2
"org.apache.cassandra.net.CompactEndpointSerializationHelper.deserialize(DataInputStream)",3,4,n/a,6,0,1,3,1
"org.apache.cassandra.net.CompactEndpointSerializationHelper.serialize(InetAddress,DataOutputStream)",3,4,n/a,6,0,2,3,1
"org.apache.cassandra.net.Header.Header(InetAddress,Verb)",0,1,n/a,7,0,2,4,1
"org.apache.cassandra.net.Header.Header(InetAddress,Verb,Map<String, byte[]>)",1,1,n/a,5,0,3,2,1
"org.apache.cassandra.net.Header.getDetail(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.net.Header.getFrom()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.net.Header.getVerb()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.net.Header.removeDetail(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.net.Header.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.net.Header.setDetail(String,byte[])",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.net.HeaderSerializer.deserialize(DataInputStream,int)",9,7,n/a,17,1,2,13,2
"org.apache.cassandra.net.HeaderSerializer.serialize(Header,DataOutputStream,int)",12,9,n/a,16,1,3,10,2
"org.apache.cassandra.net.IAsyncCallback.response(Message)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.net.IAsyncResult.get(long,TimeUnit)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.net.IAsyncResult.getFrom()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.IAsyncResult.result(Message)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.net.IMessageCallback.isLatencyForSnitch()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.IVerbHandler.doVerb(Message,String)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.net.IncomingTcpConnection.IncomingTcpConnection(Socket)",0,0,n/a,5,0,1,2,1
"org.apache.cassandra.net.IncomingTcpConnection.close()",5,3,n/a,14,1,0,5,3
"org.apache.cassandra.net.IncomingTcpConnection.run()",52,0,n/a,108,4,0,58,15
"org.apache.cassandra.net.IncomingTcpConnection.stream(StreamHeader,DataInputStream)",5,1,n/a,7,0,2,3,2
"org.apache.cassandra.net.Message.Message(Header,byte[],int)",0,4,n/a,8,0,3,5,1
"org.apache.cassandra.net.Message.Message(InetAddress,Verb,byte[],int)",2,18,n/a,4,0,4,1,1
"org.apache.cassandra.net.Message.MessageSerializer.deserialize(DataInputStream,int)",5,7,n/a,8,0,2,5,1
"org.apache.cassandra.net.Message.MessageSerializer.serialize(Message,DataOutputStream,int)",6,9,n/a,8,0,3,5,1
"org.apache.cassandra.net.Message.getFrom()",1,38,n/a,4,0,0,1,1
"org.apache.cassandra.net.Message.getHeader(String)",1,4,n/a,4,0,1,1,1
"org.apache.cassandra.net.Message.getInternalReply(byte[],int)",3,3,n/a,5,0,2,2,1
"org.apache.cassandra.net.Message.getMessageBody()",0,21,n/a,4,0,0,1,1
"org.apache.cassandra.net.Message.getMessageType()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.net.Message.getReply(InetAddress,byte[],int)",2,4,n/a,7,0,3,2,1
"org.apache.cassandra.net.Message.getVerb()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.net.Message.getVersion()",0,31,n/a,4,0,0,1,1
"org.apache.cassandra.net.Message.removeHeader(String)",1,2,n/a,4,0,1,1,1
"org.apache.cassandra.net.Message.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.net.Message.setHeader(String,byte[])",1,2,n/a,4,0,2,1,1
"org.apache.cassandra.net.Message.toString()",12,0,n/a,12,0,0,4,1
"org.apache.cassandra.net.MessageDeliveryTask.MessageDeliveryTask(Message,String)",0,0,n/a,6,0,2,3,1
"org.apache.cassandra.net.MessageDeliveryTask.run()",10,0,n/a,17,1,0,9,4
"org.apache.cassandra.net.MessageProducer.getMessage(Integer)",n/a,2,8,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.net.MessagingService.MessagingService()",27,1,n/a,19,3,0,28,5
"org.apache.cassandra.net.MessagingService.SocketThread.SocketThread(ServerSocket,String)",1,1,n/a,5,0,2,2,1
"org.apache.cassandra.net.MessagingService.SocketThread.close()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.net.MessagingService.SocketThread.run()",5,0,n/a,21,2,0,7,4
"org.apache.cassandra.net.MessagingService.addCallback(IMessageCallback,String,InetAddress)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.net.MessagingService.addCallback(IMessageCallback,String,InetAddress,long)",2,2,n/a,5,0,4,2,1
"org.apache.cassandra.net.MessagingService.addLatency(InetAddress,double)",1,2,n/a,5,0,2,2,2
"org.apache.cassandra.net.MessagingService.constructStreamHeader(StreamHeader,boolean,int)",12,1,n/a,48,1,3,20,3
"org.apache.cassandra.net.MessagingService.convict(InetAddress)",3,1,n/a,6,0,1,2,1
"org.apache.cassandra.net.MessagingService.getBits(int,int,int)",0,0,n/a,4,0,3,1,1
"org.apache.cassandra.net.MessagingService.getCommandCompletedTasks()",7,0,n/a,7,0,0,4,2
"org.apache.cassandra.net.MessagingService.getCommandPendingTasks()",7,1,n/a,7,0,0,4,2
"org.apache.cassandra.net.MessagingService.getConnection(InetAddress,Message)",2,1,n/a,4,0,2,1,1
"org.apache.cassandra.net.MessagingService.getConnectionPool(InetAddress)",4,2,n/a,10,1,1,5,2
"org.apache.cassandra.net.MessagingService.getDefaultCallbackTimeout()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.net.MessagingService.getDroppedMessages()",7,0,n/a,7,0,0,4,2
"org.apache.cassandra.net.MessagingService.getRecentTimeoutsPerHost()",8,0,n/a,12,1,0,7,2
"org.apache.cassandra.net.MessagingService.getRecentTotalTimouts()",0,0,n/a,6,0,0,3,1
"org.apache.cassandra.net.MessagingService.getRecentlyDroppedMessages()",9,0,n/a,13,1,0,8,2
"org.apache.cassandra.net.MessagingService.getRegisteredCallbackAge(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.net.MessagingService.getResponseCompletedTasks()",7,0,n/a,7,0,0,4,2
"org.apache.cassandra.net.MessagingService.getResponsePendingTasks()",7,1,n/a,7,0,0,4,2
"org.apache.cassandra.net.MessagingService.getServerSocket(InetAddress)",20,1,n/a,32,2,1,17,6
"org.apache.cassandra.net.MessagingService.getTimeoutsPerHost()",6,0,n/a,9,1,0,4,2
"org.apache.cassandra.net.MessagingService.getTotalTimeouts()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.net.MessagingService.getVerbHandler(Verb)",1,0,n/a,10,0,1,1,1
"org.apache.cassandra.net.MessagingService.incrementDroppedMessages(Verb)",3,1,n/a,5,0,1,2,1
"org.apache.cassandra.net.MessagingService.instance()",0,76,n/a,4,0,0,1,1
"org.apache.cassandra.net.MessagingService.listen(InetAddress)",4,2,n/a,10,0,1,3,1
"org.apache.cassandra.net.MessagingService.logDroppedMessages()",9,1,n/a,18,2,0,11,4
"org.apache.cassandra.net.MessagingService.maybeAddLatency(IMessageCallback,InetAddress,double)",2,1,n/a,11,0,3,2,2
"org.apache.cassandra.net.MessagingService.nextId()",2,2,n/a,5,0,0,1,1
"org.apache.cassandra.net.MessagingService.packIt(byte[],boolean,int)",7,1,n/a,28,0,3,12,2
"org.apache.cassandra.net.MessagingService.receive(Message,String)",11,1,n/a,13,0,2,9,3
"org.apache.cassandra.net.MessagingService.register(ILatencySubscriber)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.net.MessagingService.registerVerbHandlers(Verb,IVerbHandler)",2,21,n/a,11,0,2,2,1
"org.apache.cassandra.net.MessagingService.removeRegisteredCallback(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.net.MessagingService.sendOneWay(Message,InetAddress)",2,14,n/a,4,0,2,1,1
"org.apache.cassandra.net.MessagingService.sendOneWay(Message,String,InetAddress)",19,3,n/a,42,1,3,19,5
"org.apache.cassandra.net.MessagingService.sendRR(Message,InetAddress)",2,1,n/a,6,0,2,3,1
"org.apache.cassandra.net.MessagingService.sendRR(Message,InetAddress,IMessageCallback)",1,0,n/a,7,0,3,1,1
"org.apache.cassandra.net.MessagingService.sendRR(Message,InetAddress,IMessageCallback,long)",3,2,n/a,18,0,4,4,1
"org.apache.cassandra.net.MessagingService.sendRR(MessageProducer,InetAddress,IAsyncCallback)",4,0,n/a,19,1,3,3,2
"org.apache.cassandra.net.MessagingService.sendReply(Message,String,InetAddress)",1,9,n/a,4,0,3,1,1
"org.apache.cassandra.net.MessagingService.shutdown()",6,3,n/a,15,1,0,7,2
"org.apache.cassandra.net.MessagingService.stream(StreamHeader,InetAddress)",5,2,n/a,15,0,2,4,3
"org.apache.cassandra.net.MessagingService.validateMagic(int)",1,0,n/a,5,0,1,2,2
"org.apache.cassandra.net.MessagingService.waitFor()",2,1,n/a,6,0,0,2,2
"org.apache.cassandra.net.MessagingService.waitUntilListening()",2,1,n/a,11,1,0,3,2
"org.apache.cassandra.net.MessagingServiceMBean.getCommandCompletedTasks()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.MessagingServiceMBean.getCommandPendingTasks()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.MessagingServiceMBean.getDroppedMessages()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.MessagingServiceMBean.getRecentTimeoutsPerHost()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.MessagingServiceMBean.getRecentTotalTimouts()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.MessagingServiceMBean.getRecentlyDroppedMessages()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.MessagingServiceMBean.getResponseCompletedTasks()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.MessagingServiceMBean.getResponsePendingTasks()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.MessagingServiceMBean.getTimeoutsPerHost()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.MessagingServiceMBean.getTotalTimeouts()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.net.OutboundTcpConnection.OutboundTcpConnection(InetAddress)",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.net.OutboundTcpConnection.closeSocket()",2,0,n/a,5,0,0,2,1
"org.apache.cassandra.net.OutboundTcpConnection.connect()",21,1,n/a,40,3,0,20,8
"org.apache.cassandra.net.OutboundTcpConnection.disconnect()",3,2,n/a,17,2,0,7,4
"org.apache.cassandra.net.OutboundTcpConnection.getCompletedMesssages()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.net.OutboundTcpConnection.getPendingMessages()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.net.OutboundTcpConnection.run()",5,0,n/a,17,2,0,8,5
"org.apache.cassandra.net.OutboundTcpConnection.take()",2,1,n/a,14,1,0,6,2
"org.apache.cassandra.net.OutboundTcpConnection.write(ByteBuffer)",2,1,n/a,11,1,1,3,2
"org.apache.cassandra.net.OutboundTcpConnection.writeConnected(ByteBuffer)",6,1,n/a,17,2,1,7,4
"org.apache.cassandra.net.OutboundTcpConnectionPool.OutboundTcpConnectionPool(InetAddress)",4,0,n/a,7,0,1,4,1
"org.apache.cassandra.net.OutboundTcpConnectionPool.getConnection(Message)",1,0,n/a,11,0,1,2,4
"org.apache.cassandra.net.OutboundTcpConnectionPool.reset()",1,0,n/a,5,0,0,2,2
"org.apache.cassandra.net.ResponseVerbHandler.doVerb(Message,String)",17,0,n/a,24,1,2,14,5
"org.apache.cassandra.net.sink.IMessageSink.handleMessage(Message,String,InetAddress)",n/a,0,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.net.sink.SinkManager.add(IMessageSink)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.net.sink.SinkManager.clear()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.net.sink.SinkManager.processClientMessage(Message,String,InetAddress)",2,1,n/a,12,1,3,7,4
"org.apache.cassandra.net.sink.SinkManager.processServerMessage(Message,String)",2,1,n/a,12,1,2,7,4
"org.apache.cassandra.scheduler.IRequestScheduler.queue(Thread,String)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.scheduler.IRequestScheduler.release()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.scheduler.NoScheduler.NoScheduler()",0,1,n/a,1,0,0,0,1
"org.apache.cassandra.scheduler.NoScheduler.NoScheduler(RequestSchedulerOptions)",0,0,n/a,1,0,1,0,1
"org.apache.cassandra.scheduler.NoScheduler.queue(Thread,String)",0,0,n/a,1,0,2,0,1
"org.apache.cassandra.scheduler.NoScheduler.release()",0,0,n/a,1,0,0,0,1
"org.apache.cassandra.scheduler.RoundRobinScheduler.RoundRobinScheduler(RequestSchedulerOptions)",7,0,n/a,7,3,1,12,2
"org.apache.cassandra.scheduler.RoundRobinScheduler.getTaskCount()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.scheduler.RoundRobinScheduler.getWeight(String)",2,1,n/a,6,0,1,1,3
"org.apache.cassandra.scheduler.RoundRobinScheduler.getWeightedQueue(String)",5,1,n/a,18,0,1,8,3
"org.apache.cassandra.scheduler.RoundRobinScheduler.queue(Thread,String)",4,0,n/a,13,1,2,5,2
"org.apache.cassandra.scheduler.RoundRobinScheduler.release()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.scheduler.RoundRobinScheduler.schedule()",8,1,n/a,25,3,0,16,4
"org.apache.cassandra.security.SSLFactory.createSSLContext(EncryptionOptions)",18,3,n/a,20,1,1,16,2
"org.apache.cassandra.security.SSLFactory.getServerSocket(EncryptionOptions,InetAddress,int)",7,1,n/a,9,0,3,6,1
"org.apache.cassandra.security.SSLFactory.getSocket(EncryptionOptions)",4,1,n/a,8,0,1,4,1
"org.apache.cassandra.security.SSLFactory.getSocket(EncryptionOptions,InetAddress,int,InetAddress,int)",4,1,n/a,8,0,5,4,1
"org.apache.cassandra.security.streaming.SSLFileStreamTask.SSLFileStreamTask(StreamHeader,InetAddress)",1,1,n/a,4,0,2,1,1
"org.apache.cassandra.security.streaming.SSLFileStreamTask.bind()",5,1,n/a,6,0,0,2,1
"org.apache.cassandra.security.streaming.SSLFileStreamTask.close()",1,1,n/a,5,0,0,1,1
"org.apache.cassandra.security.streaming.SSLFileStreamTask.connect()",5,1,n/a,6,0,0,2,1
"org.apache.cassandra.security.streaming.SSLFileStreamTask.write(FileChannel,Pair<Long, Long>,long,long)",10,1,n/a,12,0,4,8,1
"org.apache.cassandra.security.streaming.SSLFileStreamTask.writeHeader(ByteBuffer)",4,1,n/a,6,0,1,2,1
"org.apache.cassandra.security.streaming.SSLIncomingStreamReader.SSLIncomingStreamReader(StreamHeader,Socket,DataInputStream)",1,1,n/a,5,0,3,2,1
"org.apache.cassandra.security.streaming.SSLIncomingStreamReader.readnwrite(long,long,long,FileChannel)",7,1,n/a,11,0,4,7,1
"org.apache.cassandra.service.AbstractCassandraDaemon.CleaningThreadPool.CleaningThreadPool(ThreadLocal<ClientState>,int,int)",2,0,n/a,5,0,3,2,1
"org.apache.cassandra.service.AbstractCassandraDaemon.CleaningThreadPool.afterExecute(Runnable,Throwable)",4,0,n/a,7,0,2,3,1
"org.apache.cassandra.service.AbstractCassandraDaemon.activate()",12,0,n/a,29,2,0,14,4
"org.apache.cassandra.service.AbstractCassandraDaemon.deactivate()",2,0,n/a,8,0,0,2,1
"org.apache.cassandra.service.AbstractCassandraDaemon.destroy()",0,1,n/a,6,0,0,0,1
"org.apache.cassandra.service.AbstractCassandraDaemon.init(String[])",1,1,n/a,13,0,1,1,1
"org.apache.cassandra.service.AbstractCassandraDaemon.initLog4j()",17,1,n/a,40,2,0,17,6
"org.apache.cassandra.service.AbstractCassandraDaemon.isRPCServerRunning()",0,0,n/a,7,0,0,1,1
"org.apache.cassandra.service.AbstractCassandraDaemon.setup()",53,4,n/a,9,3,0,45,13
"org.apache.cassandra.service.AbstractCassandraDaemon.start()",4,2,n/a,19,1,0,3,2
"org.apache.cassandra.service.AbstractCassandraDaemon.startRPCServer()",1,1,n/a,11,1,0,3,2
"org.apache.cassandra.service.AbstractCassandraDaemon.startServer()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.AbstractCassandraDaemon.stop()",2,2,n/a,12,0,0,2,1
"org.apache.cassandra.service.AbstractCassandraDaemon.stopRPCServer()",1,1,n/a,11,1,0,3,2
"org.apache.cassandra.service.AbstractCassandraDaemon.stopServer()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.AbstractRowResolver.AbstractRowResolver(ByteBuffer,String)",2,0,n/a,5,0,2,2,1
"org.apache.cassandra.service.AbstractRowResolver.getMessages()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.AbstractRowResolver.injectPreProcessed(ReadResponse)",2,0,n/a,6,0,1,2,1
"org.apache.cassandra.service.AbstractRowResolver.preprocess(Message)",11,0,n/a,16,1,1,8,4
"org.apache.cassandra.service.AbstractWriteResponseHandler.AbstractWriteResponseHandler(Collection<InetAddress>,Multimap<InetAddress, InetAddress>,ConsistencyLevel)",1,0,n/a,7,0,3,4,1
"org.apache.cassandra.service.AbstractWriteResponseHandler.assureSufficientLiveNodes()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.AbstractWriteResponseHandler.get()",5,0,n/a,17,1,0,7,3
"org.apache.cassandra.service.AbstractWriteResponseHandler.response(Message)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.AntiEntropyService.AntiEntropyService()",1,1,n/a,7,0,0,1,1
"org.apache.cassandra.service.AntiEntropyService.CFPair.CFPair(String,String)",1,2,n/a,5,0,2,2,2
"org.apache.cassandra.service.AntiEntropyService.RepairFuture.RepairFuture(RepairSession)",1,1,n/a,5,0,1,2,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.Differencer.Callback.runMayThrow()",4,0,n/a,9,0,0,4,2
"org.apache.cassandra.service.AntiEntropyService.RepairSession.Differencer.Differencer(String,InetAddress,MerkleTree,MerkleTree)",1,1,n/a,8,0,4,5,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.Differencer.performStreamingRepair()",10,1,n/a,23,1,0,9,2
"org.apache.cassandra.service.AntiEntropyService.RepairSession.Differencer.run()",18,0,n/a,32,1,0,15,5
"org.apache.cassandra.service.AntiEntropyService.RepairSession.Differencer.toString()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.RepairJob.RepairJob(String)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.RepairJob.addTree(TreeRequest,MerkleTree)",4,1,n/a,11,0,2,4,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.RepairJob.completedSynchronizationJob(InetAddress)",2,1,n/a,5,0,1,2,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.RepairJob.sendTreeRequests()",5,1,n/a,11,0,0,4,2
"org.apache.cassandra.service.AntiEntropyService.RepairSession.RepairJob.submitDifferencers()",16,1,n/a,22,1,0,11,3
"org.apache.cassandra.service.AntiEntropyService.RepairSession.RepairSession(Range,String,String...)",2,1,n/a,4,0,3,1,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.RepairSession(String,Range,String,String[])",1,1,n/a,9,0,4,6,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.RepairSession(TreeRequest,String,String...)",3,1,n/a,5,0,3,2,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.completed(InetAddress,String)",6,2,n/a,11,1,2,6,3
"org.apache.cassandra.service.AntiEntropyService.RepairSession.convict(InetAddress,double)",4,2,n/a,13,0,2,7,4
"org.apache.cassandra.service.AntiEntropyService.RepairSession.failedNode(InetAddress)",7,1,n/a,11,0,1,7,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.getFuture()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.getName()",0,7,n/a,4,0,0,1,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.onAlive(InetAddress,EndpointState)",0,0,n/a,1,0,2,0,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.onChange(InetAddress,ApplicationState,VersionedValue)",0,0,n/a,1,0,3,0,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.onDead(InetAddress,EndpointState)",0,0,n/a,1,0,2,0,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.onJoin(InetAddress,EndpointState)",0,0,n/a,1,0,2,0,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.onRemove(InetAddress)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.onRestart(InetAddress,EndpointState)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession.runMayThrow()",23,0,n/a,49,2,0,25,7
"org.apache.cassandra.service.AntiEntropyService.TreePair.TreePair(MerkleTree,MerkleTree)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.service.AntiEntropyService.TreeRequest.TreeRequest(String,InetAddress,Range,CFPair)",0,4,n/a,7,0,4,4,1
"org.apache.cassandra.service.AntiEntropyService.TreeRequest.equals(Object)",4,0,n/a,9,0,1,4,5
"org.apache.cassandra.service.AntiEntropyService.TreeRequest.hashCode()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.service.AntiEntropyService.TreeRequest.toString()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.service.AntiEntropyService.TreeRequestVerbHandler.deserialize(DataInputStream,int)",13,9,n/a,12,0,2,8,2
"org.apache.cassandra.service.AntiEntropyService.TreeRequestVerbHandler.doVerb(Message,String)",13,0,n/a,22,1,2,10,2
"org.apache.cassandra.service.AntiEntropyService.TreeRequestVerbHandler.makeVerb(TreeRequest,int)",7,1,n/a,14,1,2,6,2
"org.apache.cassandra.service.AntiEntropyService.TreeRequestVerbHandler.serialize(TreeRequest,DataOutputStream,int)",6,11,n/a,9,0,3,6,2
"org.apache.cassandra.service.AntiEntropyService.TreeResponseVerbHandler.deserialize(DataInputStream,int)",4,8,n/a,12,1,2,4,2
"org.apache.cassandra.service.AntiEntropyService.TreeResponseVerbHandler.doVerb(Message,String)",9,0,n/a,16,1,2,7,2
"org.apache.cassandra.service.AntiEntropyService.TreeResponseVerbHandler.makeVerb(InetAddress,Validator)",8,1,n/a,17,1,2,6,2
"org.apache.cassandra.service.AntiEntropyService.TreeResponseVerbHandler.serialize(Validator,DataOutputStream,int)",3,10,n/a,6,0,3,3,1
"org.apache.cassandra.service.AntiEntropyService.Validator.Validator(TreeRequest)",4,1,n/a,7,0,1,1,1
"org.apache.cassandra.service.AntiEntropyService.Validator.Validator(TreeRequest,MerkleTree)",1,2,n/a,12,0,2,7,1
"org.apache.cassandra.service.AntiEntropyService.Validator.add(AbstractCompactedRow)",8,1,n/a,36,1,1,9,4
"org.apache.cassandra.service.AntiEntropyService.Validator.complete()",4,1,n/a,9,0,0,3,1
"org.apache.cassandra.service.AntiEntropyService.Validator.completeTree()",4,1,n/a,11,1,0,6,3
"org.apache.cassandra.service.AntiEntropyService.Validator.prepare(ColumnFamilyStore)",16,1,n/a,36,3,1,16,6
"org.apache.cassandra.service.AntiEntropyService.Validator.rowHash(AbstractCompactedRow)",4,1,n/a,8,0,1,4,1
"org.apache.cassandra.service.AntiEntropyService.Validator.run()",2,0,n/a,10,0,0,1,1
"org.apache.cassandra.service.AntiEntropyService.getNeighbors(String,Range)",13,1,n/a,25,2,2,13,4
"org.apache.cassandra.service.AntiEntropyService.rendezvous(TreeRequest,MerkleTree)",10,1,n/a,25,1,2,12,3
"org.apache.cassandra.service.AntiEntropyService.request(String,InetAddress,Range,String,String)",6,1,n/a,9,0,5,3,1
"org.apache.cassandra.service.AntiEntropyService.respond(Validator,InetAddress)",5,1,n/a,19,1,2,6,2
"org.apache.cassandra.service.AntiEntropyService.submitArtificialRepairSession(TreeRequest,String,String...)",3,0,n/a,6,0,3,3,1
"org.apache.cassandra.service.AntiEntropyService.submitRepairSession(Range,String,String...)",3,0,n/a,9,0,3,3,1
"org.apache.cassandra.service.AsyncRepairCallback.AsyncRepairCallback(RowRepairResolver,int)",0,0,n/a,5,0,2,2,1
"org.apache.cassandra.service.AsyncRepairCallback.isLatencyForSnitch()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.AsyncRepairCallback.response(Message)",6,0,n/a,4,3,1,4,2
"org.apache.cassandra.service.CassandraDaemon.activate()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.CassandraDaemon.deactivate()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.CassandraDaemon.destroy()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.CassandraDaemon.init(String[])",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.CassandraDaemon.isRPCServerRunning()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.CassandraDaemon.start()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.CassandraDaemon.startRPCServer()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.CassandraDaemon.stop()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.CassandraDaemon.stopRPCServer()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.ClientState.ClientState()",1,2,n/a,7,0,0,1,1
"org.apache.cassandra.service.ClientState.getKeyspace()",1,20,n/a,6,0,0,3,2
"org.apache.cassandra.service.ClientState.getSchedulingValue()",1,1,n/a,8,1,0,4,2
"org.apache.cassandra.service.ClientState.hasAccess(AuthenticatedUser,Set<Permission>,Permission,List<Object>)",4,3,n/a,9,0,4,3,2
"org.apache.cassandra.service.ClientState.hasColumnFamilyAccess(String,Permission)",8,18,n/a,14,0,2,7,1
"org.apache.cassandra.service.ClientState.hasColumnFamilySchemaAccess(Permission)",9,7,n/a,16,0,1,8,3
"org.apache.cassandra.service.ClientState.hasKeyspaceSchemaAccess(Permission)",5,7,n/a,10,0,1,4,1
"org.apache.cassandra.service.ClientState.login(Map<? extends CharSequence, ? extends CharSequence>)",4,1,n/a,10,0,1,4,2
"org.apache.cassandra.service.ClientState.logout()",3,0,n/a,6,0,0,3,2
"org.apache.cassandra.service.ClientState.reset()",3,2,n/a,6,0,0,3,1
"org.apache.cassandra.service.ClientState.resourceClear()",3,4,n/a,6,0,0,3,1
"org.apache.cassandra.service.ClientState.setKeyspace(String)",0,2,n/a,4,0,1,1,1
"org.apache.cassandra.service.ClientState.validateKeyspace()",1,2,n/a,5,0,0,2,2
"org.apache.cassandra.service.ClientState.validateLogin()",1,3,n/a,5,0,0,2,2
"org.apache.cassandra.service.DatacenterReadCallback.DatacenterReadCallback(IResponseResolver,ConsistencyLevel,IReadCommand,List<InetAddress>)",1,0,n/a,4,0,4,1,1
"org.apache.cassandra.service.DatacenterReadCallback.assureSufficientLiveNodes()",16,0,n/a,25,3,0,13,7
"org.apache.cassandra.service.DatacenterReadCallback.determineBlockFor(ConsistencyLevel,String)",3,0,n/a,6,0,2,2,1
"org.apache.cassandra.service.DatacenterReadCallback.preferredEndpoints(List<InetAddress>)",5,0,n/a,13,1,1,7,4
"org.apache.cassandra.service.DatacenterReadCallback.waitingFor(Message)",3,0,n/a,5,0,1,1,1
"org.apache.cassandra.service.DatacenterReadCallback.waitingFor(ReadResponse)",0,0,n/a,7,0,1,1,1
"org.apache.cassandra.service.DatacenterSyncWriteResponseHandler.DatacenterSyncWriteResponseHandler(Collection<InetAddress>,Multimap<InetAddress, InetAddress>,ConsistencyLevel,String)",7,1,n/a,12,1,4,6,2
"org.apache.cassandra.service.DatacenterSyncWriteResponseHandler.assureSufficientLiveNodes()",15,0,n/a,21,2,0,10,6
"org.apache.cassandra.service.DatacenterSyncWriteResponseHandler.create(Collection<InetAddress>,Multimap<InetAddress, InetAddress>,ConsistencyLevel,String)",1,0,n/a,4,0,4,1,1
"org.apache.cassandra.service.DatacenterSyncWriteResponseHandler.isLatencyForSnitch()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.DatacenterSyncWriteResponseHandler.response(Message)",7,0,n/a,14,1,1,6,4
"org.apache.cassandra.service.DatacenterWriteResponseHandler.DatacenterWriteResponseHandler(Collection<InetAddress>,Multimap<InetAddress, InetAddress>,ConsistencyLevel,String)",1,1,n/a,5,0,4,2,1
"org.apache.cassandra.service.DatacenterWriteResponseHandler.assureSufficientLiveNodes()",6,0,n/a,14,1,0,6,5
"org.apache.cassandra.service.DatacenterWriteResponseHandler.create(Collection<InetAddress>,Multimap<InetAddress, InetAddress>,ConsistencyLevel,String)",1,0,n/a,4,0,4,1,1
"org.apache.cassandra.service.DatacenterWriteResponseHandler.determineBlockFor(String)",3,0,n/a,6,0,1,2,1
"org.apache.cassandra.service.DatacenterWriteResponseHandler.response(Message)",5,0,n/a,9,1,1,3,4
"org.apache.cassandra.service.DigestMismatchException.DigestMismatchException(DecoratedKey,ByteBuffer,ByteBuffer)",5,0,n/a,7,0,3,1,1
"org.apache.cassandra.service.EmbeddedCassandraService.start()",3,0,n/a,6,0,0,3,1
"org.apache.cassandra.service.GCInspector.GCInspector()",7,1,n/a,17,2,0,7,3
"org.apache.cassandra.service.GCInspector.logGCResults()",29,1,n/a,50,3,0,37,13
"org.apache.cassandra.service.GCInspector.start()",4,0,n/a,4,2,0,5,2
"org.apache.cassandra.service.IReadCommand.getKeyspace()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.IResponseResolver.getData()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.IResponseResolver.getMessages()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.IResponseResolver.isDataPresent()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.IResponseResolver.preprocess(Message)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.IResponseResolver.resolve()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.IWriteResponseHandler.assureSufficientLiveNodes()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.IWriteResponseHandler.get()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.IndexScanVerbHandler.doVerb(Message,String)",15,0,n/a,18,1,2,10,3
"org.apache.cassandra.service.MigrationManager.announce(IColumn)",3,1,n/a,7,0,1,3,2
"org.apache.cassandra.service.MigrationManager.applyMigrations(UUID,UUID)",16,0,n/a,16,4,2,16,7
"org.apache.cassandra.service.MigrationManager.makeColumns(Message)",14,1,n/a,17,1,1,13,2
"org.apache.cassandra.service.MigrationManager.makeMigrationMessage(Collection<IColumn>,int)",12,1,n/a,22,1,2,10,2
"org.apache.cassandra.service.MigrationManager.onAlive(InetAddress,EndpointState)",3,0,n/a,10,1,2,4,2
"org.apache.cassandra.service.MigrationManager.onChange(InetAddress,ApplicationState,VersionedValue)",2,0,n/a,7,0,3,4,2
"org.apache.cassandra.service.MigrationManager.onDead(InetAddress,EndpointState)",0,0,n/a,1,0,2,0,1
"org.apache.cassandra.service.MigrationManager.onJoin(InetAddress,EndpointState)",0,0,n/a,2,0,2,0,1
"org.apache.cassandra.service.MigrationManager.onRemove(InetAddress)",0,0,n/a,1,0,1,0,1
"org.apache.cassandra.service.MigrationManager.onRestart(InetAddress,EndpointState)",0,0,n/a,1,0,2,0,1
"org.apache.cassandra.service.MigrationManager.passiveAnnounce(UUID)",3,2,n/a,7,0,1,2,1
"org.apache.cassandra.service.MigrationManager.pushMigrations(InetAddress,Collection<IColumn>)",5,2,n/a,12,1,2,4,2
"org.apache.cassandra.service.MigrationManager.rectify(UUID,InetAddress)",17,2,n/a,24,2,2,8,5
"org.apache.cassandra.service.RangeSliceResponseResolver.RangeSliceResponseResolver(String,List<InetAddress>)",0,0,n/a,5,0,2,2,1
"org.apache.cassandra.service.RangeSliceResponseResolver.RowIterator.RowIterator(Iterator<Row>,InetAddress)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.service.RangeSliceResponseResolver.RowIterator.computeNext()",4,0,n/a,4,0,0,1,2
"org.apache.cassandra.service.RangeSliceResponseResolver.getData()",5,0,n/a,6,0,0,3,1
"org.apache.cassandra.service.RangeSliceResponseResolver.getMessages()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.RangeSliceResponseResolver.isDataPresent()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.RangeSliceResponseResolver.preprocess(Message)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.service.RangeSliceResponseResolver.resolve()",32,0,n/a,24,5,0,23,7
"org.apache.cassandra.service.RangeSliceVerbHandler.doVerb(Message,String)",17,0,n/a,25,2,2,11,4
"org.apache.cassandra.service.ReadCallback.AsyncRepairRunner.runMayThrow()",8,1,n/a,17,1,0,9,4
"org.apache.cassandra.service.ReadCallback.ReadCallback(IResponseResolver<T>,ConsistencyLevel,IReadCommand,List<InetAddress>)",9,0,n/a,17,0,4,8,4
"org.apache.cassandra.service.ReadCallback.assureSufficientLiveNodes()",4,0,n/a,9,1,0,3,2
"org.apache.cassandra.service.ReadCallback.determineBlockFor(ConsistencyLevel,String)",7,1,n/a,19,1,2,14,7
"org.apache.cassandra.service.ReadCallback.get()",14,0,n/a,21,1,0,11,5
"org.apache.cassandra.service.ReadCallback.isLatencyForSnitch()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.ReadCallback.maybeResolveForRepair()",7,2,n/a,12,1,0,3,3
"org.apache.cassandra.service.ReadCallback.preferredEndpoints(List<InetAddress>)",3,1,n/a,4,0,1,1,1
"org.apache.cassandra.service.ReadCallback.randomlyReadRepair()",6,1,n/a,13,1,0,7,2
"org.apache.cassandra.service.ReadCallback.response(Message)",7,0,n/a,12,1,1,5,4
"org.apache.cassandra.service.ReadCallback.response(ReadResponse)",7,0,n/a,12,1,1,5,4
"org.apache.cassandra.service.ReadCallback.waitingFor(Message)",0,1,n/a,8,0,1,1,1
"org.apache.cassandra.service.ReadCallback.waitingFor(ReadResponse)",0,1,n/a,7,0,1,1,1
"org.apache.cassandra.service.RepairCallback.RepairCallback(IResponseResolver<T>,List<InetAddress>)",1,0,n/a,14,0,2,3,1
"org.apache.cassandra.service.RepairCallback.get()",6,0,n/a,13,1,0,5,3
"org.apache.cassandra.service.RepairCallback.isLatencyForSnitch()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.RepairCallback.response(Message)",4,0,n/a,6,0,1,3,2
"org.apache.cassandra.service.RowDigestResolver.RowDigestResolver(String,ByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.service.RowDigestResolver.getData()",5,0,n/a,10,1,0,5,3
"org.apache.cassandra.service.RowDigestResolver.isDataPresent()",2,0,n/a,9,1,0,4,3
"org.apache.cassandra.service.RowDigestResolver.resolve()",21,0,n/a,62,3,0,23,10
"org.apache.cassandra.service.RowRepairResolver.RowRepairResolver(String,ByteBuffer)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.service.RowRepairResolver.getData()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.RowRepairResolver.isDataPresent()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.RowRepairResolver.maybeScheduleRepairs(ColumnFamily,String,DecoratedKey,List<ColumnFamily>,List<InetAddress>)",12,1,n/a,26,2,5,13,4
"org.apache.cassandra.service.RowRepairResolver.resolve()",24,0,n/a,46,1,0,22,7
"org.apache.cassandra.service.RowRepairResolver.resolveSuperset(List<ColumnFamily>)",15,1,n/a,29,1,1,18,7
"org.apache.cassandra.service.SocketSessionManagementService.clear()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.SocketSessionManagementService.get(SocketAddress)",1,1,n/a,9,1,1,4,2
"org.apache.cassandra.service.SocketSessionManagementService.put(SocketAddress,ClientState)",1,1,n/a,7,1,2,2,3
"org.apache.cassandra.service.SocketSessionManagementService.remove(SocketAddress)",1,1,n/a,10,1,1,5,2
"org.apache.cassandra.service.StorageLoadBalancer.LoadBalancer.LoadBalancer()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.service.StorageLoadBalancer.LoadBalancer.run()",0,0,n/a,61,0,0,0,1
"org.apache.cassandra.service.StorageLoadBalancer.StorageLoadBalancer()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageLoadBalancer.averageSystemLoad()",5,3,n/a,14,1,0,9,4
"org.apache.cassandra.service.StorageLoadBalancer.findARandomLightNode()",10,0,n/a,26,2,0,12,4
"org.apache.cassandra.service.StorageLoadBalancer.getLoadInfo()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageLoadBalancer.isANeighbour(InetAddress)",6,1,n/a,10,0,1,7,3
"org.apache.cassandra.service.StorageLoadBalancer.isHeavyNode()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageLoadBalancer.isMoveable(InetAddress)",7,0,n/a,27,2,1,12,3
"org.apache.cassandra.service.StorageLoadBalancer.localLoad()",2,2,n/a,5,0,0,2,2
"org.apache.cassandra.service.StorageLoadBalancer.onAlive(InetAddress,EndpointState)",0,0,n/a,1,0,2,0,1
"org.apache.cassandra.service.StorageLoadBalancer.onChange(InetAddress,ApplicationState,VersionedValue)",2,1,n/a,17,0,3,3,2
"org.apache.cassandra.service.StorageLoadBalancer.onDead(InetAddress,EndpointState)",0,0,n/a,1,0,2,0,1
"org.apache.cassandra.service.StorageLoadBalancer.onJoin(InetAddress,EndpointState)",2,0,n/a,8,1,2,3,2
"org.apache.cassandra.service.StorageLoadBalancer.onRemove(InetAddress)",0,0,n/a,1,0,1,0,1
"org.apache.cassandra.service.StorageLoadBalancer.onRestart(InetAddress,EndpointState)",0,0,n/a,1,0,2,0,1
"org.apache.cassandra.service.StorageLoadBalancer.startBroadcasting()",7,0,n/a,7,2,0,5,2
"org.apache.cassandra.service.StorageLoadBalancer.waitForLoadInfo()",3,0,n/a,17,1,0,5,2
"org.apache.cassandra.service.StorageProxy.DroppableRunnable.DroppableRunnable(Verb)",0,4,n/a,4,0,1,1,1
"org.apache.cassandra.service.StorageProxy.DroppableRunnable.run()",6,0,n/a,16,1,0,6,3
"org.apache.cassandra.service.StorageProxy.DroppableRunnable.runMayThrow()",n/a,1,4,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxy.LocalReadRunnable.LocalReadRunnable(ReadCommand,ReadCallback<Row>)",1,2,n/a,6,0,2,3,1
"org.apache.cassandra.service.StorageProxy.LocalReadRunnable.runMayThrow()",10,1,n/a,9,0,0,6,2
"org.apache.cassandra.service.StorageProxy.StorageProxy()",0,2,n/a,1,0,0,0,1
"org.apache.cassandra.service.StorageProxy.WritePerformer.apply(IMutation,Multimap<InetAddress, InetAddress>,IWriteResponseHandler,String,ConsistencyLevel)",n/a,1,3,n/a,n/a,5,n/a,n/a
"org.apache.cassandra.service.StorageProxy.addHintHeader(Message,InetAddress)",9,1,n/a,12,1,2,7,2
"org.apache.cassandra.service.StorageProxy.applyCounterMutationOnCoordinator(CounterMutation,String)",2,1,n/a,6,0,2,1,1
"org.apache.cassandra.service.StorageProxy.applyCounterMutationOnLeader(CounterMutation,String)",2,1,n/a,6,0,2,1,1
"org.apache.cassandra.service.StorageProxy.counterWriteTask(IMutation,Multimap<InetAddress, InetAddress>,IWriteResponseHandler,String,ConsistencyLevel)",12,2,n/a,5,5,5,10,3
"org.apache.cassandra.service.StorageProxy.describeSchemaVersions()",50,3,n/a,4,2,0,37,12
"org.apache.cassandra.service.StorageProxy.fetchRows(List<ReadCommand>,ConsistencyLevel)",63,1,n/a,118,3,2,66,20
"org.apache.cassandra.service.StorageProxy.findSuitableEndpoint(String,ByteBuffer,String)",16,1,n/a,33,1,3,12,5
"org.apache.cassandra.service.StorageProxy.getHintedHandoffEnabled()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getMaxHintWindow()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getRangeOperations()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getRangeSlice(RangeSliceCommand,ConsistencyLevel)",45,2,n/a,80,5,2,38,17
"org.apache.cassandra.service.StorageProxy.getReadCallback(IResponseResolver<T>,IReadCommand,ConsistencyLevel,List<InetAddress>)",4,3,n/a,8,1,4,3,3
"org.apache.cassandra.service.StorageProxy.getReadOperations()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getRecentRangeLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getRecentRangeLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getRecentReadLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getRecentReadLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getRecentWriteLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getRecentWriteLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getRestrictedRanges(AbstractBounds)",20,2,n/a,35,1,1,21,12
"org.apache.cassandra.service.StorageProxy.getTotalRangeLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getTotalRangeLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getTotalReadLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getTotalReadLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getTotalWriteLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getTotalWriteLatencyMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.getWriteEndpoints(String,ByteBuffer)",5,2,n/a,6,0,2,3,1
"org.apache.cassandra.service.StorageProxy.getWriteOperations()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.insertLocal(RowMutation,IWriteResponseHandler)",9,1,n/a,5,2,2,6,2
"org.apache.cassandra.service.StorageProxy.isAnyHostDown()",2,1,n/a,8,0,0,1,1
"org.apache.cassandra.service.StorageProxy.isHintedHandoffEnabled()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageProxy.mutate(List<? extends IMutation>,ConsistencyLevel)",21,4,n/a,56,3,2,21,8
"org.apache.cassandra.service.StorageProxy.mutateCounter(CounterMutation,String)",24,1,n/a,38,1,2,14,3
"org.apache.cassandra.service.StorageProxy.performWrite(IMutation,ConsistencyLevel,String,WritePerformer)",9,3,n/a,24,0,4,8,1
"org.apache.cassandra.service.StorageProxy.read(List<ReadCommand>,ConsistencyLevel)",6,2,n/a,21,1,2,8,2
"org.apache.cassandra.service.StorageProxy.scan(String,String,IndexClause,SlicePredicate,ConsistencyLevel)",32,2,n/a,4,3,5,30,10
"org.apache.cassandra.service.StorageProxy.sendMessages(String,Map<String, Multimap<Message, InetAddress>>,IWriteResponseHandler)",27,1,n/a,47,4,3,20,8
"org.apache.cassandra.service.StorageProxy.sendToHintedEndpoints(RowMutation,Multimap<InetAddress, InetAddress>,IWriteResponseHandler,String,ConsistencyLevel)",40,2,n/a,55,4,5,26,12
"org.apache.cassandra.service.StorageProxy.setHintedHandoffEnabled(boolean)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.service.StorageProxy.setMaxHintWindow(int)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.service.StorageProxy.shouldHint(InetAddress)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.service.StorageProxy.truncateBlocking(String,String)",15,2,n/a,34,1,2,15,3
"org.apache.cassandra.service.StorageProxyMBean.getHintedHandoffEnabled()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getMaxHintWindow()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getRangeOperations()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getReadOperations()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getRecentRangeLatencyHistogramMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getRecentRangeLatencyMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getRecentReadLatencyHistogramMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getRecentReadLatencyMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getRecentWriteLatencyHistogramMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getRecentWriteLatencyMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getTotalRangeLatencyHistogramMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getTotalRangeLatencyMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getTotalReadLatencyHistogramMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getTotalReadLatencyMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getTotalWriteLatencyHistogramMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getTotalWriteLatencyMicros()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.getWriteOperations()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.setHintedHandoffEnabled(boolean)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageProxyMBean.setMaxHintWindow(int)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageService.StorageService()",68,1,n/a,38,1,0,27,3
"org.apache.cassandra.service.StorageService.bootstrap(Token)",10,1,n/a,17,1,1,9,2
"org.apache.cassandra.service.StorageService.bulkLoad(String)",18,0,n/a,1,3,1,16,6
"org.apache.cassandra.service.StorageService.calculatePendingRanges()",4,10,n/a,28,0,0,2,2
"org.apache.cassandra.service.StorageService.calculatePendingRanges(AbstractReplicationStrategy,String)",41,1,n/a,60,2,2,33,13
"org.apache.cassandra.service.StorageService.calculateStreamAndFetchRanges(Collection<Range>,Collection<Range>)",3,1,n/a,5,0,2,1,1
"org.apache.cassandra.service.StorageService.calculateStreamAndFetchRanges(Iterator<Range>,Iterator<Range>)",19,1,n/a,44,4,2,15,7
"org.apache.cassandra.service.StorageService.clearSnapshot(String,String...)",7,0,n/a,25,1,2,13,6
"org.apache.cassandra.service.StorageService.confirmReplication(InetAddress)",3,1,n/a,15,1,1,3,2
"org.apache.cassandra.service.StorageService.constructRangeToEndpointMap(String,List<Range>)",5,1,n/a,15,1,2,4,2
"org.apache.cassandra.service.StorageService.decommission()",24,0,n/a,8,2,0,18,6
"org.apache.cassandra.service.StorageService.deliverHints(InetAddress)",1,1,n/a,8,0,1,1,1
"org.apache.cassandra.service.StorageService.deliverHints(String)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.service.StorageService.drain()",27,1,n/a,39,1,0,27,4
"org.apache.cassandra.service.StorageService.excise(Token,InetAddress)",7,3,n/a,13,1,2,8,2
"org.apache.cassandra.service.StorageService.finishBootstrapping()",4,1,n/a,7,0,0,4,1
"org.apache.cassandra.service.StorageService.flushLargestMemtables()",13,0,n/a,40,2,0,22,11
"org.apache.cassandra.service.StorageService.forceRemoveCompletion()",11,0,n/a,22,2,0,7,4
"org.apache.cassandra.service.StorageService.forceTableCleanup(String,String...)",5,0,n/a,10,1,2,5,3
"org.apache.cassandra.service.StorageService.forceTableCompaction(String,String...)",2,0,n/a,7,1,2,2,2
"org.apache.cassandra.service.StorageService.forceTableFlush(String,String...)",7,0,n/a,17,1,2,5,2
"org.apache.cassandra.service.StorageService.forceTableRepair(Range,String,String...)",7,1,n/a,9,1,3,4,2
"org.apache.cassandra.service.StorageService.forceTableRepair(String,String...)",10,0,n/a,44,2,2,17,7
"org.apache.cassandra.service.StorageService.getAllDataFileLocations()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getAllDataFileLocationsForTable(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.service.StorageService.getAllRanges(List<Token>)",15,1,n/a,23,1,1,14,4
"org.apache.cassandra.service.StorageService.getBootstrapToken()",25,1,n/a,38,2,0,22,10
"org.apache.cassandra.service.StorageService.getChangedRangesForLeaving(String,InetAddress)",24,3,n/a,35,1,2,19,7
"org.apache.cassandra.service.StorageService.getCommitLogLocation()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getCompactionThroughputMbPerSec()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getCurrentGenerationNumber()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getDrainProgress()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getExceptionCount()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getJoiningNodes()",3,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getKeyspaces()",3,0,n/a,5,0,0,2,1
"org.apache.cassandra.service.StorageService.getLeavingNodes()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getLiveNaturalEndpoints(String,ByteBuffer)",2,0,n/a,11,0,2,1,1
"org.apache.cassandra.service.StorageService.getLiveNaturalEndpoints(String,Token)",6,0,n/a,11,1,2,6,3
"org.apache.cassandra.service.StorageService.getLiveNodes()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getLoad()",4,1,n/a,12,1,0,6,3
"org.apache.cassandra.service.StorageService.getLoadMap()",12,0,n/a,11,1,0,5,2
"org.apache.cassandra.service.StorageService.getLoadString()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getLocalPrimaryRange()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getLocalRanges(String)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.service.StorageService.getLocalToken()",1,7,n/a,6,0,0,3,1
"org.apache.cassandra.service.StorageService.getMovingNodes()",4,0,n/a,9,1,0,4,2
"org.apache.cassandra.service.StorageService.getNaturalEndpoints(String,ByteBuffer)",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.service.StorageService.getNaturalEndpoints(String,String,String)",7,0,n/a,14,0,3,2,1
"org.apache.cassandra.service.StorageService.getNaturalEndpoints(String,Token)",3,0,n/a,11,0,2,1,1
"org.apache.cassandra.service.StorageService.getNewSourceRanges(String,Set<Range>)",11,1,n/a,31,3,2,14,4
"org.apache.cassandra.service.StorageService.getOperationMode()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getOwnership()",5,0,n/a,6,0,0,3,1
"org.apache.cassandra.service.StorageService.getPartitioner()",0,56,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getPendingRangeToEndpointMap(String)",10,0,n/a,14,1,1,7,3
"org.apache.cassandra.service.StorageService.getPredecessor(InetAddress)",3,0,n/a,9,0,1,2,1
"org.apache.cassandra.service.StorageService.getPrimaryRangeForEndpoint(InetAddress)",2,1,n/a,9,0,1,1,1
"org.apache.cassandra.service.StorageService.getRangeToAddressMap(String)",5,4,n/a,9,0,1,4,2
"org.apache.cassandra.service.StorageService.getRangeToEndpointMap(String)",7,0,n/a,15,1,1,4,2
"org.apache.cassandra.service.StorageService.getRangeToRpcaddressMap(String)",9,0,n/a,20,2,1,7,3
"org.apache.cassandra.service.StorageService.getRangesForEndpoint(String,InetAddress)",4,3,n/a,9,0,2,1,1
"org.apache.cassandra.service.StorageService.getReleaseVersion()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getRemovalStatus()",3,0,n/a,12,1,0,3,2
"org.apache.cassandra.service.StorageService.getRpcaddress(InetAddress)",9,2,n/a,14,0,1,5,3
"org.apache.cassandra.service.StorageService.getSavedCachesLocation()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getSplits(String,String,Range,int)",16,3,n/a,29,2,4,18,5
"org.apache.cassandra.service.StorageService.getSuccessor(InetAddress)",3,0,n/a,9,0,1,2,1
"org.apache.cassandra.service.StorageService.getToken()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getTokenMetadata()",0,9,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getTokenToEndpointMap()",8,1,n/a,10,1,0,5,2
"org.apache.cassandra.service.StorageService.getUnreachableNodes()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.getValidColumnFamilies(String,String...)",7,7,n/a,21,2,2,11,4
"org.apache.cassandra.service.StorageService.getValidTable(String)",4,3,n/a,8,1,1,3,2
"org.apache.cassandra.service.StorageService.handleStateBootstrap(InetAddress,String[])",11,1,n/a,29,1,2,10,4
"org.apache.cassandra.service.StorageService.handleStateLeaving(InetAddress,String[])",14,1,n/a,31,1,2,13,4
"org.apache.cassandra.service.StorageService.handleStateLeft(InetAddress,String[])",6,1,n/a,14,0,2,5,2
"org.apache.cassandra.service.StorageService.handleStateMoving(InetAddress,String[])",7,1,n/a,15,0,2,6,2
"org.apache.cassandra.service.StorageService.handleStateNormal(InetAddress,String[])",24,1,n/a,48,1,2,24,9
"org.apache.cassandra.service.StorageService.handleStateRemoving(InetAddress,String[])",22,1,n/a,45,2,2,20,7
"org.apache.cassandra.service.StorageService.hasUnreclaimedSpace()",2,1,n/a,9,1,0,4,3
"org.apache.cassandra.service.StorageService.initClient()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.initClient(int)",13,1,n/a,26,1,1,15,4
"org.apache.cassandra.service.StorageService.initServer()",39,0,n/a,25,5,0,35,12
"org.apache.cassandra.service.StorageService.invalidateKeyCaches(String,String...)",2,0,n/a,7,1,2,2,2
"org.apache.cassandra.service.StorageService.invalidateRowCaches(String,String...)",2,0,n/a,7,1,2,2,2
"org.apache.cassandra.service.StorageService.isBootstrapMode()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.isClientMode()",0,12,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.isInitialized()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.isJoined()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageService.isRPCServerRunning()",1,0,n/a,8,1,0,3,2
"org.apache.cassandra.service.StorageService.joinRing()",2,0,n/a,8,1,0,3,2
"org.apache.cassandra.service.StorageService.joinTokenRing()",55,2,n/a,75,3,0,41,12
"org.apache.cassandra.service.StorageService.leaveRing()",10,1,n/a,16,1,0,8,2
"org.apache.cassandra.service.StorageService.loadNewSSTables(String,String)",1,0,n/a,7,0,2,1,1
"org.apache.cassandra.service.StorageService.move(String)",5,0,n/a,5,0,1,2,1
"org.apache.cassandra.service.StorageService.move(Token)",63,0,n/a,109,4,1,56,18
"org.apache.cassandra.service.StorageService.onAlive(InetAddress,EndpointState)",3,0,n/a,5,0,2,2,3
"org.apache.cassandra.service.StorageService.onChange(InetAddress,ApplicationState,VersionedValue)",15,1,n/a,58,1,3,21,10
"org.apache.cassandra.service.StorageService.onDead(InetAddress,EndpointState)",2,1,n/a,4,0,2,1,1
"org.apache.cassandra.service.StorageService.onJoin(InetAddress,EndpointState)",5,0,n/a,7,1,2,2,2
"org.apache.cassandra.service.StorageService.onRemove(InetAddress)",2,0,n/a,5,0,1,2,1
"org.apache.cassandra.service.StorageService.onRestart(InetAddress,EndpointState)",2,0,n/a,6,0,2,2,2
"org.apache.cassandra.service.StorageService.reduceCacheSizes()",2,0,n/a,5,0,0,2,2
"org.apache.cassandra.service.StorageService.registerDaemon(CassandraDaemon)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.service.StorageService.removeToken(String)",34,0,n/a,70,2,1,36,12
"org.apache.cassandra.service.StorageService.requestGC()",5,1,n/a,16,2,0,6,3
"org.apache.cassandra.service.StorageService.requestRanges(Map<String, Multimap<InetAddress, Range>>)",19,1,n/a,6,4,1,17,6
"org.apache.cassandra.service.StorageService.restoreReplicaCount(InetAddress,InetAddress)",29,2,n/a,9,5,2,25,9
"org.apache.cassandra.service.StorageService.saveCaches()",9,0,n/a,12,1,0,7,2
"org.apache.cassandra.service.StorageService.scrub(String,String...)",2,0,n/a,5,0,2,2,2
"org.apache.cassandra.service.StorageService.sendReplicationNotification(InetAddress,InetAddress)",10,1,n/a,27,2,2,9,4
"org.apache.cassandra.service.StorageService.setCompactionThroughputMbPerSec(int)",1,0,n/a,3,0,1,1,1
"org.apache.cassandra.service.StorageService.setLog4jLevel(String,String)",4,0,n/a,6,0,2,3,1
"org.apache.cassandra.service.StorageService.setMode(String,boolean)",2,16,n/a,8,0,2,4,2
"org.apache.cassandra.service.StorageService.setPartitionerUnsafe(IPartitioner)",1,0,n/a,8,0,1,4,1
"org.apache.cassandra.service.StorageService.setToken(Token)",9,4,n/a,10,0,1,6,2
"org.apache.cassandra.service.StorageService.setTokenMetadataUnsafe(TokenMetadata)",0,0,n/a,6,0,1,3,1
"org.apache.cassandra.service.StorageService.startGossiping()",3,0,n/a,10,1,0,4,2
"org.apache.cassandra.service.StorageService.startLeaving()",6,1,n/a,9,0,0,3,1
"org.apache.cassandra.service.StorageService.startRPCServer()",2,0,n/a,9,1,0,3,2
"org.apache.cassandra.service.StorageService.stopClient()",7,1,n/a,10,1,0,7,2
"org.apache.cassandra.service.StorageService.stopGossiping()",2,0,n/a,10,1,0,4,2
"org.apache.cassandra.service.StorageService.stopRPCServer()",2,0,n/a,9,1,0,3,2
"org.apache.cassandra.service.StorageService.streamRanges(Map<String, Multimap<Range, InetAddress>>)",21,2,n/a,5,5,1,18,5
"org.apache.cassandra.service.StorageService.stringify(Iterable<InetAddress>)",3,6,n/a,9,1,1,4,2
"org.apache.cassandra.service.StorageService.takeSnapshot(String,String...)",9,0,n/a,29,1,2,14,8
"org.apache.cassandra.service.StorageService.truncate(String,String)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.service.StorageService.unbootstrap(Runnable)",17,1,n/a,26,1,1,15,4
"org.apache.cassandra.service.StorageService.updateEfficientCrossDCWriteMode()",3,1,n/a,17,2,0,6,3
"org.apache.cassandra.service.StorageService.updateSnitch(String,Boolean,Integer,Integer,Double)",11,0,n/a,21,1,5,12,4
"org.apache.cassandra.service.StorageService.useEfficientCrossDCWrites()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.StorageServiceMBean.bulkLoad(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.clearSnapshot(String,String...)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.decommission()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.deliverHints(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.drain()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.forceRemoveCompletion()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.forceTableCleanup(String,String...)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.forceTableCompaction(String,String...)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.forceTableFlush(String,String...)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.forceTableRepair(String,String...)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getAllDataFileLocations()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getAllDataFileLocationsForTable(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getCommitLogLocation()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getCompactionThroughputMbPerSec()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getCurrentGenerationNumber()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getDrainProgress()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getExceptionCount()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getJoiningNodes()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getKeyspaces()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getLeavingNodes()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getLiveNodes()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getLoad()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getLoadMap()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getLoadString()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getMovingNodes()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getNaturalEndpoints(String,ByteBuffer)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getNaturalEndpoints(String,String,String)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getOperationMode()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getOwnership()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getPendingRangeToEndpointMap(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getRangeToEndpointMap(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getReleaseVersion()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getRemovalStatus()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getSavedCachesLocation()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getToken()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getTokenToEndpointMap()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.getUnreachableNodes()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.invalidateKeyCaches(String,String...)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.invalidateRowCaches(String,String...)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.isInitialized()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.isJoined()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.isRPCServerRunning()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.joinRing()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.loadNewSSTables(String,String)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.move(String)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.removeToken(String)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.saveCaches()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.scrub(String,String...)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.setCompactionThroughputMbPerSec(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.setLog4jLevel(String,String)",n/a,0,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.startGossiping()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.startRPCServer()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.stopGossiping()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.stopRPCServer()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.takeSnapshot(String,String...)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.truncate(String,String)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.service.StorageServiceMBean.updateSnitch(String,Boolean,Integer,Integer,Double)",n/a,0,0,n/a,n/a,5,n/a,n/a
"org.apache.cassandra.service.TruncateResponseHandler.TruncateResponseHandler(int)",1,0,n/a,8,0,1,3,1
"org.apache.cassandra.service.TruncateResponseHandler.get()",6,0,n/a,17,1,0,7,3
"org.apache.cassandra.service.TruncateResponseHandler.isLatencyForSnitch()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.TruncateResponseHandler.response(Message)",3,0,n/a,6,0,1,3,2
"org.apache.cassandra.service.WriteResponseHandler.WriteResponseHandler(Collection<InetAddress>,Multimap<InetAddress, InetAddress>,ConsistencyLevel,String)",3,1,n/a,5,0,4,2,1
"org.apache.cassandra.service.WriteResponseHandler.WriteResponseHandler(InetAddress)",6,1,n/a,7,0,1,2,1
"org.apache.cassandra.service.WriteResponseHandler.assureSufficientLiveNodes()",8,0,n/a,21,1,0,10,6
"org.apache.cassandra.service.WriteResponseHandler.create(Collection<InetAddress>,Multimap<InetAddress, InetAddress>,ConsistencyLevel,String)",1,0,n/a,4,0,4,1,1
"org.apache.cassandra.service.WriteResponseHandler.create(InetAddress)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.service.WriteResponseHandler.determineBlockFor(String)",8,1,n/a,20,1,1,15,8
"org.apache.cassandra.service.WriteResponseHandler.isLatencyForSnitch()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.service.WriteResponseHandler.response(Message)",2,0,n/a,5,0,1,2,2
"org.apache.cassandra.streaming.FileStreamTask.FileStreamTask(StreamHeader,InetAddress)",0,2,n/a,5,0,2,2,1
"org.apache.cassandra.streaming.FileStreamTask.bind()",5,1,n/a,6,0,0,2,1
"org.apache.cassandra.streaming.FileStreamTask.close()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.FileStreamTask.connect()",3,1,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.FileStreamTask.connectAttempt()",7,1,n/a,33,3,0,13,5
"org.apache.cassandra.streaming.FileStreamTask.runMayThrow()",7,1,n/a,24,2,0,9,4
"org.apache.cassandra.streaming.FileStreamTask.stream()",12,1,n/a,30,3,0,17,5
"org.apache.cassandra.streaming.FileStreamTask.write(FileChannel,Pair<Long, Long>,long,long)",2,1,n/a,5,0,4,2,1
"org.apache.cassandra.streaming.FileStreamTask.writeHeader(ByteBuffer)",2,1,n/a,5,0,1,2,1
"org.apache.cassandra.streaming.IncomingStreamReader.IncomingStreamReader(StreamHeader,Socket)",8,2,n/a,13,0,2,8,2
"org.apache.cassandra.streaming.IncomingStreamReader.read()",2,2,n/a,6,0,0,3,2
"org.apache.cassandra.streaming.IncomingStreamReader.readFile()",14,1,n/a,37,3,0,18,5
"org.apache.cassandra.streaming.IncomingStreamReader.readnwrite(long,long,long,FileChannel)",3,1,n/a,13,0,4,7,2
"org.apache.cassandra.streaming.PendingFile.PendingFile(Descriptor,PendingFile)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.streaming.PendingFile.PendingFile(SSTable,Descriptor,String,List<Pair<Long, Long>>,OperationType)",0,2,n/a,14,1,5,9,2
"org.apache.cassandra.streaming.PendingFile.PendingFileSerializer.deserialize(DataInputStream,int)",15,7,n/a,17,0,2,15,4
"org.apache.cassandra.streaming.PendingFile.PendingFileSerializer.serialize(PendingFile,DataOutputStream,int)",10,9,n/a,17,1,3,11,4
"org.apache.cassandra.streaming.PendingFile.equals(Object)",3,0,n/a,7,0,1,4,2
"org.apache.cassandra.streaming.PendingFile.getFilename()",1,4,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.PendingFile.hashCode()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.PendingFile.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.PendingFile.toString()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.ReplicationFinishedVerbHandler.doVerb(Message,String)",10,0,n/a,8,0,2,5,2
"org.apache.cassandra.streaming.StreamHeader.StreamHeader(String,long,PendingFile)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.streaming.StreamHeader.StreamHeader(String,long,PendingFile,Collection<PendingFile>)",0,2,n/a,7,0,4,4,1
"org.apache.cassandra.streaming.StreamHeader.StreamHeaderSerializer.deserialize(DataInputStream,int)",10,7,n/a,13,1,2,10,2
"org.apache.cassandra.streaming.StreamHeader.StreamHeaderSerializer.serialize(StreamHeader,DataOutputStream,int)",8,9,n/a,11,1,3,6,2
"org.apache.cassandra.streaming.StreamHeader.serializer()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.StreamIn.getContextMapping(PendingFile)",5,0,n/a,11,0,1,5,1
"org.apache.cassandra.streaming.StreamIn.requestRanges(InetAddress,String,Collection<Range>,Runnable,OperationType)",12,2,n/a,17,0,5,6,2
"org.apache.cassandra.streaming.StreamInSession.StreamInSession(Pair<InetAddress, Long>,Runnable)",0,2,n/a,5,0,2,2,1
"org.apache.cassandra.streaming.StreamInSession.addFiles(Collection<PendingFile>)",4,0,n/a,9,1,1,4,3
"org.apache.cassandra.streaming.StreamInSession.closeIfFinished()",37,0,n/a,44,3,0,24,10
"org.apache.cassandra.streaming.StreamInSession.create(InetAddress,Runnable)",4,0,n/a,7,0,2,4,1
"org.apache.cassandra.streaming.StreamInSession.finished(PendingFile,PendingFile)",15,0,n/a,13,0,2,9,3
"org.apache.cassandra.streaming.StreamInSession.get(InetAddress,long)",4,0,n/a,14,2,2,7,3
"org.apache.cassandra.streaming.StreamInSession.getHost()",0,8,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.StreamInSession.getIncomingFiles(InetAddress)",7,0,n/a,16,2,1,8,4
"org.apache.cassandra.streaming.StreamInSession.getSessionId()",0,4,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.StreamInSession.getSources()",4,0,n/a,10,1,0,4,2
"org.apache.cassandra.streaming.StreamInSession.retry(PendingFile)",10,0,n/a,6,0,1,3,1
"org.apache.cassandra.streaming.StreamInSession.setCurrentFile(PendingFile)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.streaming.StreamInSession.setTable(String)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.streaming.StreamOut.createPendingFiles(Collection<SSTableReader>,Collection<Range>,OperationType)",7,2,n/a,15,1,3,9,3
"org.apache.cassandra.streaming.StreamOut.flushSSTable(String)",6,2,n/a,26,2,1,8,4
"org.apache.cassandra.streaming.StreamOut.transferRanges(InetAddress,String,Collection<Range>,Runnable,OperationType)",9,0,n/a,21,1,5,8,2
"org.apache.cassandra.streaming.StreamOut.transferRangesForRequest(StreamOutSession,Collection<Range>,OperationType)",11,0,n/a,21,1,3,9,2
"org.apache.cassandra.streaming.StreamOut.transferSSTables(StreamOutSession,Collection<SSTableReader>,Collection<Range>,OperationType)",3,2,n/a,11,0,4,3,1
"org.apache.cassandra.streaming.StreamOutSession.StreamOutSession(String,Pair<InetAddress, Long>,Runnable)",0,1,n/a,6,0,3,3,1
"org.apache.cassandra.streaming.StreamOutSession.addFilesToStream(List<PendingFile>)",5,0,n/a,9,1,1,4,3
"org.apache.cassandra.streaming.StreamOutSession.await()",2,0,n/a,6,0,0,2,2
"org.apache.cassandra.streaming.StreamOutSession.begin()",16,0,n/a,9,0,0,6,3
"org.apache.cassandra.streaming.StreamOutSession.close()",2,0,n/a,6,0,0,3,2
"org.apache.cassandra.streaming.StreamOutSession.create(String,InetAddress,Runnable)",2,0,n/a,4,0,3,1,1
"org.apache.cassandra.streaming.StreamOutSession.create(String,InetAddress,long)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.streaming.StreamOutSession.create(String,InetAddress,long,Runnable)",3,2,n/a,7,0,4,4,1
"org.apache.cassandra.streaming.StreamOutSession.get(InetAddress,long)",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.streaming.StreamOutSession.getDestinations()",4,0,n/a,9,1,0,4,2
"org.apache.cassandra.streaming.StreamOutSession.getFiles()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.StreamOutSession.getHost()",0,4,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.StreamOutSession.getOutgoingFiles(InetAddress)",7,0,n/a,10,1,1,5,3
"org.apache.cassandra.streaming.StreamOutSession.getSessionId()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.StreamOutSession.retry()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.StreamOutSession.startNext()",7,0,n/a,8,0,0,5,2
"org.apache.cassandra.streaming.StreamOutSession.streamFile(PendingFile)",8,2,n/a,7,0,1,4,2
"org.apache.cassandra.streaming.StreamOutSession.validateCurrentFile(String)",3,0,n/a,5,0,1,2,2
"org.apache.cassandra.streaming.StreamReply.FileStatusSerializer.deserialize(DataInputStream,int)",5,7,n/a,7,0,2,4,1
"org.apache.cassandra.streaming.StreamReply.FileStatusSerializer.serialize(StreamReply,DataOutputStream,int)",4,9,n/a,6,0,3,3,1
"org.apache.cassandra.streaming.StreamReply.StreamReply(String,long,Status)",0,1,n/a,6,0,3,3,1
"org.apache.cassandra.streaming.StreamReply.getMessage(Integer)",6,2,n/a,7,0,1,4,1
"org.apache.cassandra.streaming.StreamReply.toString()",0,0,n/a,9,0,0,1,1
"org.apache.cassandra.streaming.StreamReplyVerbHandler.doVerb(Message,String)",19,0,n/a,37,2,2,25,7
"org.apache.cassandra.streaming.StreamRequestMessage.StreamRequestMessage(InetAddress,Collection<Range>,String,long,OperationType)",0,1,n/a,9,0,5,6,1
"org.apache.cassandra.streaming.StreamRequestMessage.StreamRequestMessage(InetAddress,PendingFile,long)",0,1,n/a,9,0,3,6,1
"org.apache.cassandra.streaming.StreamRequestMessage.StreamRequestMessageSerializer.deserialize(DataInputStream,int)",15,7,n/a,25,2,2,17,5
"org.apache.cassandra.streaming.StreamRequestMessage.StreamRequestMessageSerializer.serialize(StreamRequestMessage,DataOutputStream,int)",13,9,n/a,22,2,3,12,4
"org.apache.cassandra.streaming.StreamRequestMessage.getMessage(Integer)",8,2,n/a,14,1,1,6,2
"org.apache.cassandra.streaming.StreamRequestMessage.serializer()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.streaming.StreamRequestMessage.toString()",11,0,n/a,22,2,0,12,3
"org.apache.cassandra.streaming.StreamRequestVerbHandler.doVerb(Message,String)",16,0,n/a,19,1,2,11,4
"org.apache.cassandra.streaming.StreamingService.StreamingService()",4,1,n/a,12,1,0,4,2
"org.apache.cassandra.streaming.StreamingService.getIncomingFiles(String)",6,0,n/a,10,1,1,4,2
"org.apache.cassandra.streaming.StreamingService.getOutgoingFiles(String)",8,0,n/a,14,0,1,8,3
"org.apache.cassandra.streaming.StreamingService.getStatus()",20,0,n/a,23,2,0,12,5
"org.apache.cassandra.streaming.StreamingService.getStreamDestinations()",1,1,n/a,5,0,0,1,1
"org.apache.cassandra.streaming.StreamingService.getStreamSources()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.streaming.StreamingServiceMBean.getIncomingFiles(String)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.streaming.StreamingServiceMBean.getOutgoingFiles(String)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.streaming.StreamingServiceMBean.getStatus()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.streaming.StreamingServiceMBean.getStreamDestinations()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.streaming.StreamingServiceMBean.getStreamSources()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.thrift.CassandraDaemon.ThriftServer.ThriftServer(InetAddress,int)",70,1,n/a,87,2,2,30,6
"org.apache.cassandra.thrift.CassandraDaemon.ThriftServer.run()",2,0,n/a,5,0,0,2,1
"org.apache.cassandra.thrift.CassandraDaemon.ThriftServer.stopServer()",2,1,n/a,5,0,0,2,1
"org.apache.cassandra.thrift.CassandraDaemon.main(String[])",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.thrift.CassandraDaemon.startServer()",2,0,n/a,8,1,0,3,2
"org.apache.cassandra.thrift.CassandraDaemon.stopServer()",3,0,n/a,16,2,0,6,3
"org.apache.cassandra.thrift.CassandraServer.CassandraServer()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.thrift.CassandraServer.add(ByteBuffer,ColumnParent,CounterColumn,ConsistencyLevel)",20,0,n/a,27,1,4,15,4
"org.apache.cassandra.thrift.CassandraServer.applyMigrationOnStage(Migration)",8,6,n/a,6,2,1,8,3
"org.apache.cassandra.thrift.CassandraServer.batch_mutate(Map<ByteBuffer, Map<String, List<Mutation>>>,ConsistencyLevel)",2,0,n/a,6,0,2,2,1
"org.apache.cassandra.thrift.CassandraServer.describe_cluster_name()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.thrift.CassandraServer.describe_keyspace(String)",5,1,n/a,8,0,1,5,2
"org.apache.cassandra.thrift.CassandraServer.describe_keyspaces()",7,0,n/a,18,2,0,8,3
"org.apache.cassandra.thrift.CassandraServer.describe_partitioner()",3,0,n/a,4,0,0,1,1
"org.apache.cassandra.thrift.CassandraServer.describe_ring(String)",20,0,n/a,23,2,1,16,5
"org.apache.cassandra.thrift.CassandraServer.describe_schema_versions()",2,0,n/a,5,0,0,2,1
"org.apache.cassandra.thrift.CassandraServer.describe_snitch()",7,0,n/a,6,0,0,3,2
"org.apache.cassandra.thrift.CassandraServer.describe_splits(String,String,String,int)",12,0,n/a,13,1,4,6,2
"org.apache.cassandra.thrift.CassandraServer.describe_version()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.thrift.CassandraServer.doInsert(ConsistencyLevel,List<? extends IMutation>)",8,5,n/a,21,2,2,8,3
"org.apache.cassandra.thrift.CassandraServer.execute_cql_query(ByteBuffer,Compression)",23,0,n/a,60,3,2,33,12
"org.apache.cassandra.thrift.CassandraServer.get(ByteBuffer,ColumnPath,ConsistencyLevel)",2,0,n/a,6,0,3,2,1
"org.apache.cassandra.thrift.CassandraServer.getSlice(List<ReadCommand>,ConsistencyLevel)",7,1,n/a,14,1,2,8,3
"org.apache.cassandra.thrift.CassandraServer.get_count(ByteBuffer,ColumnParent,SlicePredicate,ConsistencyLevel)",5,0,n/a,7,0,4,3,1
"org.apache.cassandra.thrift.CassandraServer.get_indexed_slices(ColumnParent,IndexClause,SlicePredicate,ConsistencyLevel)",14,0,n/a,25,1,4,14,3
"org.apache.cassandra.thrift.CassandraServer.get_range_slices(ColumnParent,SlicePredicate,KeyRange,ConsistencyLevel)",25,0,n/a,48,2,4,26,4
"org.apache.cassandra.thrift.CassandraServer.get_slice(ByteBuffer,ColumnParent,SlicePredicate,ConsistencyLevel)",8,1,n/a,7,0,4,3,1
"org.apache.cassandra.thrift.CassandraServer.insert(ByteBuffer,ColumnParent,Column,ConsistencyLevel)",2,0,n/a,6,0,4,2,1
"org.apache.cassandra.thrift.CassandraServer.internal_batch_mutate(Map<ByteBuffer, Map<String, List<Mutation>>>,ConsistencyLevel)",30,1,n/a,57,4,2,33,14
"org.apache.cassandra.thrift.CassandraServer.internal_get(ByteBuffer,ColumnPath,ConsistencyLevel)",22,1,n/a,22,0,3,18,5
"org.apache.cassandra.thrift.CassandraServer.internal_insert(ByteBuffer,ColumnParent,Column,ConsistencyLevel)",20,1,n/a,25,1,4,13,4
"org.apache.cassandra.thrift.CassandraServer.internal_remove(ByteBuffer,ColumnPath,long,ConsistencyLevel,boolean)",18,2,n/a,16,0,5,11,3
"org.apache.cassandra.thrift.CassandraServer.login(AuthenticationRequest)",3,0,n/a,4,0,1,1,1
"org.apache.cassandra.thrift.CassandraServer.multigetSliceInternal(String,List<ByteBuffer>,ColumnParent,SlicePredicate,ConsistencyLevel)",12,3,n/a,27,2,5,14,4
"org.apache.cassandra.thrift.CassandraServer.multiget_count(List<ByteBuffer>,ColumnParent,SlicePredicate,ConsistencyLevel)",12,0,n/a,13,1,4,8,2
"org.apache.cassandra.thrift.CassandraServer.multiget_slice(List<ByteBuffer>,ColumnParent,SlicePredicate,ConsistencyLevel)",6,0,n/a,7,0,4,3,1
"org.apache.cassandra.thrift.CassandraServer.readColumnFamily(List<ReadCommand>,ConsistencyLevel)",8,2,n/a,36,2,2,14,5
"org.apache.cassandra.thrift.CassandraServer.release()",1,4,n/a,7,0,0,1,1
"org.apache.cassandra.thrift.CassandraServer.remove(ByteBuffer,ColumnPath,long,ConsistencyLevel)",2,0,n/a,6,0,4,2,1
"org.apache.cassandra.thrift.CassandraServer.remove_counter(ByteBuffer,ColumnPath,ConsistencyLevel)",3,0,n/a,6,0,3,2,1
"org.apache.cassandra.thrift.CassandraServer.schedule()",4,4,n/a,7,0,0,1,1
"org.apache.cassandra.thrift.CassandraServer.set_keyspace(String)",3,0,n/a,5,0,1,2,1
"org.apache.cassandra.thrift.CassandraServer.state()",5,41,n/a,19,2,0,9,3
"org.apache.cassandra.thrift.CassandraServer.system_add_column_family(CfDef)",17,0,n/a,26,1,1,14,3
"org.apache.cassandra.thrift.CassandraServer.system_add_keyspace(KsDef)",30,0,n/a,41,2,1,22,6
"org.apache.cassandra.thrift.CassandraServer.system_drop_column_family(String)",16,0,n/a,24,1,1,12,3
"org.apache.cassandra.thrift.CassandraServer.system_drop_keyspace(String)",14,0,n/a,24,1,1,12,3
"org.apache.cassandra.thrift.CassandraServer.system_update_column_family(CfDef)",22,0,n/a,34,1,1,21,6
"org.apache.cassandra.thrift.CassandraServer.system_update_keyspace(KsDef)",21,0,n/a,30,1,1,16,5
"org.apache.cassandra.thrift.CassandraServer.thriftifyColumnFamily(ColumnFamily,boolean,boolean)",17,3,n/a,23,1,3,12,7
"org.apache.cassandra.thrift.CassandraServer.thriftifyColumns(Collection<IColumn>,boolean)",23,2,n/a,31,3,2,14,6
"org.apache.cassandra.thrift.CassandraServer.thriftifyCounterSubColumns(Collection<IColumn>)",10,1,n/a,19,2,1,10,5
"org.apache.cassandra.thrift.CassandraServer.thriftifyCounterSuperColumns(Collection<IColumn>,boolean)",11,1,n/a,17,2,2,10,4
"org.apache.cassandra.thrift.CassandraServer.thriftifyKeySlices(List<Row>,ColumnParent,SlicePredicate)",5,2,n/a,11,1,3,6,3
"org.apache.cassandra.thrift.CassandraServer.thriftifySubColumns(Collection<IColumn>)",13,1,n/a,22,2,1,11,6
"org.apache.cassandra.thrift.CassandraServer.thriftifySuperColumns(Collection<IColumn>,boolean)",11,1,n/a,17,2,2,10,4
"org.apache.cassandra.thrift.CassandraServer.thriftifySuperColumns(Collection<IColumn>,boolean,boolean)",2,1,n/a,7,0,3,3,2
"org.apache.cassandra.thrift.CassandraServer.truncate(String)",14,0,n/a,22,1,1,8,3
"org.apache.cassandra.thrift.CassandraServer.validateSchemaAgreement()",6,6,n/a,8,0,0,3,2
"org.apache.cassandra.thrift.CustomTHsHaServer.CustomTHsHaServer(Args,ExecutorService,int)",3,0,n/a,14,0,3,6,2
"org.apache.cassandra.thrift.CustomTHsHaServer.Invocation.Invocation(FrameBuffer,SelectorThread)",0,1,n/a,5,0,2,2,1
"org.apache.cassandra.thrift.CustomTHsHaServer.Invocation.run()",6,0,n/a,8,0,0,4,1
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.SelectorThread(String)",5,1,n/a,14,1,1,6,2
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.cleanupSelectionkey(SelectionKey)",3,5,n/a,8,0,1,4,2
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.handleAccept()",8,1,n/a,29,1,0,14,5
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.handleRead(SelectionKey)",6,1,n/a,14,1,1,7,4
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.handleWrite(SelectionKey)",3,1,n/a,6,0,1,3,2
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.processInterestChanges()",2,1,n/a,9,1,0,4,2
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.requestSelectInterestChange(FrameBuffer)",2,1,n/a,9,1,1,3,1
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.run()",2,0,n/a,14,2,0,4,3
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.select()",17,1,n/a,27,2,0,16,6
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread.wakeupSelector()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.thrift.CustomTHsHaServer.joinSelector()",2,2,n/a,14,1,0,4,3
"org.apache.cassandra.thrift.CustomTHsHaServer.requestInvoke(FrameBuffer,SelectorThread)",3,1,n/a,14,1,2,6,2
"org.apache.cassandra.thrift.CustomTHsHaServer.requestSelectInterestChange(FrameBuffer)",0,0,n/a,7,0,1,0,1
"org.apache.cassandra.thrift.CustomTHsHaServer.serve()",7,0,n/a,14,0,0,9,3
"org.apache.cassandra.thrift.CustomTHsHaServer.startThreads()",1,1,n/a,8,0,0,4,2
"org.apache.cassandra.thrift.CustomTHsHaServer.stop()",3,0,n/a,12,0,0,5,2
"org.apache.cassandra.thrift.CustomTNonBlockingServer.CustomTNonBlockingServer(Args)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.thrift.CustomTNonBlockingServer.requestInvoke(FrameBuffer)",5,0,n/a,8,0,1,4,1
"org.apache.cassandra.thrift.CustomTThreadPoolServer.CustomTThreadPoolServer(Args,ExecutorService)",1,0,n/a,5,0,2,3,1
"org.apache.cassandra.thrift.CustomTThreadPoolServer.WorkerProcess.WorkerProcess(TTransport)",0,1,n/a,9,0,1,1,1
"org.apache.cassandra.thrift.CustomTThreadPoolServer.WorkerProcess.run()",14,0,n/a,52,2,0,22,8
"org.apache.cassandra.thrift.CustomTThreadPoolServer.serve()",17,0,n/a,67,3,0,31,10
"org.apache.cassandra.thrift.CustomTThreadPoolServer.stop()",1,0,n/a,5,0,0,2,1
"org.apache.cassandra.thrift.TBinaryProtocol.Factory.Factory()",1,8,n/a,4,0,0,1,1
"org.apache.cassandra.thrift.TBinaryProtocol.Factory.Factory(boolean,boolean)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.thrift.TBinaryProtocol.Factory.Factory(boolean,boolean,int)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.thrift.TBinaryProtocol.Factory.getProtocol(TTransport)",2,0,n/a,9,1,1,4,2
"org.apache.cassandra.thrift.TBinaryProtocol.TBinaryProtocol(TTransport)",1,2,n/a,4,0,1,1,1
"org.apache.cassandra.thrift.TBinaryProtocol.TBinaryProtocol(TTransport,boolean,boolean)",1,2,n/a,6,0,3,3,1
"org.apache.cassandra.thrift.TBinaryProtocol.writeBinary(ByteBuffer)",13,0,n/a,19,2,1,10,3
"org.apache.cassandra.thrift.TCustomNonblockingServerSocket.TCustomNonblockingServerSocket(InetSocketAddress,boolean,Integer,Integer)",1,0,n/a,7,0,4,4,1
"org.apache.cassandra.thrift.TCustomNonblockingServerSocket.acceptImpl()",14,0,n/a,40,2,0,17,8
"org.apache.cassandra.thrift.TCustomServerSocket.TCustomServerSocket(InetSocketAddress,boolean,Integer,Integer)",1,0,n/a,16,0,4,4,1
"org.apache.cassandra.thrift.TCustomServerSocket.acceptImpl()",10,0,n/a,37,2,0,14,6
"org.apache.cassandra.thrift.ThriftValidation.summarize(ByteBuffer)",4,1,n/a,11,0,1,4,2
"org.apache.cassandra.thrift.ThriftValidation.validateCfDef(CfDef,CFMetaData)",46,0,n/a,97,4,2,52,27
"org.apache.cassandra.thrift.ThriftValidation.validateColumnData(CFMetaData,Column,boolean)",22,2,n/a,35,1,3,15,10
"org.apache.cassandra.thrift.ThriftValidation.validateColumnFamily(String,String)",5,8,n/a,11,0,2,7,3
"org.apache.cassandra.thrift.ThriftValidation.validateColumnFamily(String,String,boolean)",7,1,n/a,15,1,3,7,4
"org.apache.cassandra.thrift.ThriftValidation.validateColumnNames(CFMetaData,ByteBuffer,Iterable<ByteBuffer>)",13,0,n/a,32,2,3,16,9
"org.apache.cassandra.thrift.ThriftValidation.validateColumnNames(CFMetaData,ColumnParent,Iterable<ByteBuffer>)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.thrift.ThriftValidation.validateColumnOrSuperColumn(CFMetaData,ColumnOrSuperColumn)",26,1,n/a,43,2,2,33,16
"org.apache.cassandra.thrift.ThriftValidation.validateColumnParent(CFMetaData,ColumnParent)",3,0,n/a,14,2,2,5,4
"org.apache.cassandra.thrift.ThriftValidation.validateColumnPath(CFMetaData,ColumnPath)",7,4,n/a,30,2,2,11,7
"org.apache.cassandra.thrift.ThriftValidation.validateColumnPathOrParent(CFMetaData,ColumnPath)",6,0,n/a,26,2,2,10,8
"org.apache.cassandra.thrift.ThriftValidation.validateCommutativeForWrite(CFMetaData,ConsistencyLevel)",3,1,n/a,11,1,2,4,4
"org.apache.cassandra.thrift.ThriftValidation.validateConsistencyLevel(String,ConsistencyLevel)",5,0,n/a,12,1,2,6,3
"org.apache.cassandra.thrift.ThriftValidation.validateDeletion(CFMetaData,Deletion)",11,1,n/a,25,1,2,13,8
"org.apache.cassandra.thrift.ThriftValidation.validateIndexClauses(CFMetaData,IndexClause)",22,0,n/a,38,2,2,16,7
"org.apache.cassandra.thrift.ThriftValidation.validateKey(CFMetaData,ByteBuffer)",9,0,n/a,21,1,2,7,5
"org.apache.cassandra.thrift.ThriftValidation.validateKeyRange(KeyRange)",12,0,n/a,32,2,1,16,9
"org.apache.cassandra.thrift.ThriftValidation.validateKeyspaceNotYetExisting(String)",3,0,n/a,11,1,1,3,3
"org.apache.cassandra.thrift.ThriftValidation.validateKsDef(KsDef)",7,0,n/a,12,0,1,7,2
"org.apache.cassandra.thrift.ThriftValidation.validateMemtableSettings(CfDef)",6,1,n/a,9,0,1,6,4
"org.apache.cassandra.thrift.ThriftValidation.validateMinMaxCompactionThresholds(CfDef)",8,1,n/a,30,2,1,9,10
"org.apache.cassandra.thrift.ThriftValidation.validateMutation(CFMetaData,Mutation)",3,0,n/a,21,1,2,12,5
"org.apache.cassandra.thrift.ThriftValidation.validatePredicate(CFMetaData,ColumnParent,SlicePredicate)",5,0,n/a,12,0,3,7,6
"org.apache.cassandra.thrift.ThriftValidation.validateRange(CFMetaData,ColumnParent,SliceRange)",11,2,n/a,22,1,3,10,7
"org.apache.cassandra.thrift.ThriftValidation.validateSlicePredicate(CFMetaData,ByteBuffer,SlicePredicate)",5,1,n/a,9,0,3,6,5
"org.apache.cassandra.thrift.ThriftValidation.validateTable(String)",3,1,n/a,7,1,1,2,2
"org.apache.cassandra.thrift.ThriftValidation.validateTtl(Column)",3,2,n/a,9,1,1,3,4
"org.apache.cassandra.tools.BulkLoader.CmdLineOptions.addOption(String,String,String)",2,5,n/a,11,0,3,1,1
"org.apache.cassandra.tools.BulkLoader.CmdLineOptions.addOption(String,String,String,String)",3,0,n/a,14,0,4,3,1
"org.apache.cassandra.tools.BulkLoader.ExternalClient.ExternalClient(OutputHandler)",1,1,n/a,5,0,1,2,1
"org.apache.cassandra.tools.BulkLoader.ExternalClient.createThriftClient(String,int)",5,1,n/a,8,0,2,5,1
"org.apache.cassandra.tools.BulkLoader.ExternalClient.init(String)",28,1,n/a,46,4,1,25,8
"org.apache.cassandra.tools.BulkLoader.ExternalClient.stop()",1,1,n/a,5,0,0,1,1
"org.apache.cassandra.tools.BulkLoader.ExternalClient.validateColumnFamily(String,String)",2,1,n/a,5,0,2,2,2
"org.apache.cassandra.tools.BulkLoader.LoaderOptions.LoaderOptions(File)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.tools.BulkLoader.LoaderOptions.debug(String)",1,1,n/a,5,0,1,2,2
"org.apache.cassandra.tools.BulkLoader.LoaderOptions.errorMsg(String,CmdLineOptions)",3,4,n/a,6,0,2,3,1
"org.apache.cassandra.tools.BulkLoader.LoaderOptions.getCmdLineOptions()",6,1,n/a,10,0,0,7,1
"org.apache.cassandra.tools.BulkLoader.LoaderOptions.output(String)",1,6,n/a,4,0,1,1,1
"org.apache.cassandra.tools.BulkLoader.LoaderOptions.parseArgs(String[])",31,1,n/a,58,4,1,35,10
"org.apache.cassandra.tools.BulkLoader.LoaderOptions.printUsage(Options)",13,4,n/a,14,0,1,11,1
"org.apache.cassandra.tools.BulkLoader.ProgressIndicator.ProgressIndicator(Map<InetAddress, Collection<PendingFile>>)",1,1,n/a,4,0,1,1,1
"org.apache.cassandra.tools.BulkLoader.ProgressIndicator.mbPerSec(long,long)",0,2,n/a,5,0,2,2,1
"org.apache.cassandra.tools.BulkLoader.ProgressIndicator.printProgress()",29,1,n/a,39,2,0,32,7
"org.apache.cassandra.tools.BulkLoader.ProgressIndicator.start()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.tools.BulkLoader.main(String[])",20,0,n/a,41,5,1,21,7
"org.apache.cassandra.tools.ColumnFamilyStoreMBeanIterator.ColumnFamilyStoreMBeanIterator(MBeanServerConnection)",3,1,n/a,7,0,1,3,1
"org.apache.cassandra.tools.ColumnFamilyStoreMBeanIterator.hasNext()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.ColumnFamilyStoreMBeanIterator.next()",4,0,n/a,7,0,0,4,1
"org.apache.cassandra.tools.ColumnFamilyStoreMBeanIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.GetVersion.main(String[])",2,0,n/a,3,0,1,1,1
"org.apache.cassandra.tools.NodeCmd.NodeCmd(NodeProbe)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeCmd.ToolCommandLine.ToolCommandLine(CommandLine)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeCmd.ToolCommandLine.getCommand()",6,1,n/a,14,1,0,6,3
"org.apache.cassandra.tools.NodeCmd.ToolCommandLine.getCommandArguments()",5,1,n/a,10,0,0,9,3
"org.apache.cassandra.tools.NodeCmd.ToolCommandLine.getOptionValue(String)",1,5,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeCmd.ToolCommandLine.getOptions()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeCmd.ToolCommandLine.hasOption(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeCmd.ToolOptions.addOption(Pair<String, String>,boolean,String)",1,4,n/a,4,0,3,1,1
"org.apache.cassandra.tools.NodeCmd.ToolOptions.addOption(Pair<String, String>,boolean,String,boolean)",1,2,n/a,4,0,4,1,1
"org.apache.cassandra.tools.NodeCmd.ToolOptions.addOption(String,String,boolean,String,boolean)",3,1,n/a,6,0,5,3,1
"org.apache.cassandra.tools.NodeCmd.addCmdHelp(StringBuilder,String,String)",8,33,n/a,8,0,3,7,3
"org.apache.cassandra.tools.NodeCmd.badUse(String)",3,14,n/a,6,0,1,3,1
"org.apache.cassandra.tools.NodeCmd.complainNonzeroArgs(String[],NodeCommand)",4,0,n/a,8,1,2,4,2
"org.apache.cassandra.tools.NodeCmd.err(Exception,String)",3,6,n/a,6,0,2,3,1
"org.apache.cassandra.tools.NodeCmd.handleSnapshots(NodeCommand,String,String[],NodeProbe)",12,1,n/a,27,1,4,19,7
"org.apache.cassandra.tools.NodeCmd.main(String[])",76,0,n/a,141,2,1,152,53
"org.apache.cassandra.tools.NodeCmd.optionalKSandCFs(NodeCommand,String[],NodeProbe)",20,1,n/a,43,3,3,41,19
"org.apache.cassandra.tools.NodeCmd.printCfHistograms(String,String,PrintStream)",14,1,n/a,24,1,3,13,7
"org.apache.cassandra.tools.NodeCmd.printColumnFamilyStats(PrintStream)",84,1,n/a,101,3,1,68,12
"org.apache.cassandra.tools.NodeCmd.printCompactionStats(PrintStream)",18,1,n/a,14,1,1,7,4
"org.apache.cassandra.tools.NodeCmd.printEndPoints(String,String,String,PrintStream)",3,1,n/a,8,1,4,3,2
"org.apache.cassandra.tools.NodeCmd.printInfo(PrintStream)",21,1,n/a,29,0,1,16,2
"org.apache.cassandra.tools.NodeCmd.printIsThriftServerRunning(PrintStream)",2,1,n/a,4,0,1,1,2
"org.apache.cassandra.tools.NodeCmd.printNetworkStats(InetAddress,PrintStream)",38,2,n/a,73,3,2,48,17
"org.apache.cassandra.tools.NodeCmd.printReleaseVersion(PrintStream)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeCmd.printRemovalStatus(PrintStream)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeCmd.printRing(PrintStream)",32,1,n/a,64,2,1,35,11
"org.apache.cassandra.tools.NodeCmd.printThreadPoolStats(PrintStream)",18,1,n/a,21,1,1,10,3
"org.apache.cassandra.tools.NodeCmd.printUsage()",41,2,n/a,50,0,0,39,1
"org.apache.cassandra.tools.NodeProbe.NodeProbe(String)",1,0,n/a,12,0,1,3,1
"org.apache.cassandra.tools.NodeProbe.NodeProbe(String,int)",1,1,n/a,13,0,2,3,1
"org.apache.cassandra.tools.NodeProbe.NodeProbe(String,int,String,String)",3,0,n/a,17,0,4,6,4
"org.apache.cassandra.tools.NodeProbe.clearSnapshot(String,String...)",1,0,n/a,7,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.close()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.connect()",17,3,n/a,36,1,0,19,3
"org.apache.cassandra.tools.NodeProbe.decommission()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.drain()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.forceRemoveCompletion()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.forceTableCleanup(String,String...)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.forceTableCompaction(String,String...)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.forceTableFlush(String,String...)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.forceTableRepair(String,String...)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.getCfsProxy(String,String)",4,3,n/a,16,1,2,6,2
"org.apache.cassandra.tools.NodeProbe.getColumnFamilyStoreMBeanProxies()",3,0,n/a,15,1,0,4,3
"org.apache.cassandra.tools.NodeProbe.getCompactionManagerProxy()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getCompactionThreshold(PrintStream,String,String)",4,0,n/a,12,0,3,2,1
"org.apache.cassandra.tools.NodeProbe.getCurrentGenerationNumber()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getDataCenter()",2,0,n/a,11,1,0,3,2
"org.apache.cassandra.tools.NodeProbe.getDroppedMessages()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getEndpointSnitchInfoProxy()",3,2,n/a,11,1,0,3,2
"org.apache.cassandra.tools.NodeProbe.getEndpoints(String,String,String)",1,0,n/a,4,0,3,1,1
"org.apache.cassandra.tools.NodeProbe.getExceptionCount()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getFilesDestinedFor(InetAddress)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeProbe.getHeapMemoryUsage()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getIncomingFiles(InetAddress)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeProbe.getJoiningNodes()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getKeyCacheMBean(String,String)",3,0,n/a,12,1,2,4,2
"org.apache.cassandra.tools.NodeProbe.getKeyspaces()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getLeavingNodes()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getLiveNodes()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getLoadMap()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getLoadString()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getMovingNodes()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getOperationMode()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getOwnership()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getRack()",2,0,n/a,11,1,0,3,2
"org.apache.cassandra.tools.NodeProbe.getReleaseVersion()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getRemovalStatus()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getRowCacheMBean(String,String)",3,0,n/a,12,1,2,4,2
"org.apache.cassandra.tools.NodeProbe.getStreamDestinations()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getStreamSources()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getThreadPoolMBeanProxies()",3,0,n/a,15,1,0,4,3
"org.apache.cassandra.tools.NodeProbe.getToken()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getTokenToEndpointMap()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getUnreachableNodes()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.getUptime()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.invalidateKeyCaches(String,String...)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.invalidateRowCaches(String,String...)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.isInitialized()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.isJoined()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.isThriftServerRunning()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.joinRing()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.loadNewSSTables(String,String)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.move(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeProbe.removeToken(String)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeProbe.scrub(String,String...)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.setCacheCapacities(String,String,int,int)",7,0,n/a,17,1,4,9,2
"org.apache.cassandra.tools.NodeProbe.setCompactionThreshold(String,String,int,int)",3,0,n/a,12,0,4,3,1
"org.apache.cassandra.tools.NodeProbe.setCompactionThroughput(int)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.tools.NodeProbe.startGossiping()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.startThriftServer()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.stopGossiping()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.stopThriftServer()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.NodeProbe.takeSnapshot(String,String...)",1,0,n/a,9,0,2,1,1
"org.apache.cassandra.tools.NodeProbe.truncate(String,String)",4,0,n/a,19,1,2,5,4
"org.apache.cassandra.tools.SSTableExport.enumeratekeys(String,PrintStream)",10,1,n/a,25,1,2,11,4
"org.apache.cassandra.tools.SSTableExport.export(SSTableReader,PrintStream,String[])",16,0,n/a,27,1,3,19,5
"org.apache.cassandra.tools.SSTableExport.export(String,PrintStream,Collection<String>,String[])",21,1,n/a,41,1,4,26,8
"org.apache.cassandra.tools.SSTableExport.export(String,PrintStream,String[])",12,0,n/a,28,1,3,10,2
"org.apache.cassandra.tools.SSTableExport.export(String,String[])",1,1,n/a,12,0,2,1,1
"org.apache.cassandra.tools.SSTableExport.main(String[])",28,0,n/a,52,1,1,25,7
"org.apache.cassandra.tools.SSTableExport.serializeColumn(IColumn,AbstractType,CFMetaData)",21,1,n/a,35,1,3,17,4
"org.apache.cassandra.tools.SSTableExport.serializeColumns(Iterator<IColumn>,PrintStream,AbstractType,CFMetaData)",6,2,n/a,17,1,4,4,3
"org.apache.cassandra.tools.SSTableExport.serializeRow(SSTableIdentityIterator,DecoratedKey,PrintStream)",29,2,n/a,39,2,3,23,6
"org.apache.cassandra.tools.SSTableExport.writeJSON(PrintStream,Object)",3,2,n/a,11,1,2,3,2
"org.apache.cassandra.tools.SSTableExport.writeKey(PrintStream,String)",2,4,n/a,11,0,2,2,1
"org.apache.cassandra.tools.SSTableImport.JsonColumn.JsonColumn(T,CFMetaData,boolean)",20,1,n/a,43,4,3,21,9
"org.apache.cassandra.tools.SSTableImport.JsonColumn.getName()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.tools.SSTableImport.JsonColumn.getValue()",1,4,n/a,4,0,0,1,1
"org.apache.cassandra.tools.SSTableImport.JsonColumn.isCounter()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.tools.SSTableImport.JsonColumn.isDeleted()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.tools.SSTableImport.JsonColumn.isExpiring()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.tools.SSTableImport.addColumnsToCF(List<?>,ByteBuffer,ColumnFamily)",19,2,n/a,33,2,3,12,5
"org.apache.cassandra.tools.SSTableImport.addToStandardCF(List<?>,ColumnFamily)",1,2,n/a,4,0,2,1,1
"org.apache.cassandra.tools.SSTableImport.addToSuperCF(Map<?, ?>,ColumnFamily)",7,2,n/a,22,1,2,6,2
"org.apache.cassandra.tools.SSTableImport.getParser(String)",3,3,n/a,10,0,1,1,1
"org.apache.cassandra.tools.SSTableImport.importJson(String,String,String,String)",6,1,n/a,19,0,4,5,3
"org.apache.cassandra.tools.SSTableImport.importSorted(String,ColumnFamily,String,IPartitioner<?>)",37,1,n/a,76,4,4,50,14
"org.apache.cassandra.tools.SSTableImport.importUnsorted(JsonParser,ColumnFamily,String,IPartitioner<?>)",25,1,n/a,40,2,4,25,7
"org.apache.cassandra.tools.SSTableImport.main(String[])",28,0,n/a,58,1,1,28,7
"org.apache.cassandra.tools.SSTableImport.printProgramUsage()",7,2,n/a,11,1,0,5,2
"org.apache.cassandra.tools.SSTableImport.setKeyCountToImport(Integer)",0,0,n/a,8,0,1,1,1
"org.apache.cassandra.tools.SSTableImport.stringAsType(String,AbstractType)",4,3,n/a,17,1,2,3,3
"org.apache.cassandra.tools.ThreadPoolProxyMBeanIterator.ThreadPoolProxyMBeanIterator(MBeanServerConnection)",6,1,n/a,8,0,1,4,1
"org.apache.cassandra.tools.ThreadPoolProxyMBeanIterator.hasNext()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.tools.ThreadPoolProxyMBeanIterator.next()",4,0,n/a,7,0,0,4,1
"org.apache.cassandra.tools.ThreadPoolProxyMBeanIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.AbstractStatsDeque.add(double)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.utils.AbstractStatsDeque.clear()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.utils.AbstractStatsDeque.iterator()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.utils.AbstractStatsDeque.mean()",2,2,n/a,4,0,0,1,1
"org.apache.cassandra.utils.AbstractStatsDeque.size()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.utils.AbstractStatsDeque.stdev()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.AbstractStatsDeque.sum()",0,1,n/a,9,1,0,4,2
"org.apache.cassandra.utils.AbstractStatsDeque.sumOfDeviations()",1,1,n/a,11,1,0,6,2
"org.apache.cassandra.utils.AbstractStatsDeque.variance()",2,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.BloomCalculations.BloomSpecification.BloomSpecification(int,int)",0,3,n/a,5,0,2,2,1
"org.apache.cassandra.utils.BloomCalculations.BloomSpecification.toString()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.BloomCalculations.computeBloomSpec(int)",1,0,n/a,13,0,1,3,1
"org.apache.cassandra.utils.BloomCalculations.computeBloomSpec(int,double)",4,0,n/a,41,1,2,15,5
"org.apache.cassandra.utils.BloomCalculations.maxBucketsPerElement(long)",3,0,n/a,15,1,1,5,2
"org.apache.cassandra.utils.BloomFilter.BloomFilter(int,OpenBitSet)",0,3,n/a,5,0,2,2,1
"org.apache.cassandra.utils.BloomFilter.add(ByteBuffer)",2,2,n/a,7,1,1,2,2
"org.apache.cassandra.utils.BloomFilter.buckets()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.BloomFilter.bucketsFor(long,int)",1,3,n/a,4,0,2,1,1
"org.apache.cassandra.utils.BloomFilter.clear()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.BloomFilter.emptyFilter()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.BloomFilter.getFilter(long,double)",4,0,n/a,13,0,2,4,1
"org.apache.cassandra.utils.BloomFilter.getFilter(long,int)",10,2,n/a,18,1,2,8,3
"org.apache.cassandra.utils.BloomFilter.getHashBuckets(ByteBuffer)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.utils.BloomFilter.getHashBuckets(ByteBuffer,int,long)",7,1,n/a,16,1,3,8,2
"org.apache.cassandra.utils.BloomFilter.isPresent(ByteBuffer)",2,0,n/a,11,2,1,4,3
"org.apache.cassandra.utils.BloomFilter.serializer()",0,2,n/a,4,0,0,1,1
"org.apache.cassandra.utils.BloomFilterSerializer.deserialize(DataInput)",5,4,n/a,10,0,1,9,2
"org.apache.cassandra.utils.BloomFilterSerializer.serialize(BloomFilter,DataOutput)",5,6,n/a,9,0,2,8,2
"org.apache.cassandra.utils.BoundedStatsDeque.BoundedStatsDeque(int)",1,1,n/a,5,0,1,2,1
"org.apache.cassandra.utils.BoundedStatsDeque.add(double)",3,1,n/a,8,1,1,3,2
"org.apache.cassandra.utils.BoundedStatsDeque.clear()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.BoundedStatsDeque.iterator()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.BoundedStatsDeque.size()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.ByteBufferUtil.arrayCopy(ByteBuffer,int,ByteBuffer,int,int)",12,0,n/a,30,2,5,8,6
"org.apache.cassandra.utils.ByteBufferUtil.arrayCopy(ByteBuffer,int,byte[],int,int)",7,0,n/a,7,0,5,3,2
"org.apache.cassandra.utils.ByteBufferUtil.bytes(String)",2,31,n/a,10,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.bytes(String,Charset)",2,2,n/a,11,0,2,1,1
"org.apache.cassandra.utils.ByteBufferUtil.bytes(double)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.bytes(float)",2,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.bytes(int)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.bytes(long)",2,4,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.bytesToHex(ByteBuffer)",4,29,n/a,13,1,1,10,2
"org.apache.cassandra.utils.ByteBufferUtil.clone(ByteBuffer)",13,15,n/a,22,1,1,9,3
"org.apache.cassandra.utils.ByteBufferUtil.compare(ByteBuffer,byte[])",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.utils.ByteBufferUtil.compare(byte[],ByteBuffer)",2,2,n/a,4,0,2,1,1
"org.apache.cassandra.utils.ByteBufferUtil.compareSubArrays(ByteBuffer,int,ByteBuffer,int,int)",4,1,n/a,31,1,5,17,7
"org.apache.cassandra.utils.ByteBufferUtil.compareUnsigned(ByteBuffer,ByteBuffer)",13,7,n/a,14,1,2,10,6
"org.apache.cassandra.utils.ByteBufferUtil.getArray(ByteBuffer)",12,6,n/a,19,1,1,9,5
"org.apache.cassandra.utils.ByteBufferUtil.hexToBytes(String)",2,5,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.inputStream(ByteBuffer)",9,0,n/a,5,2,1,11,3
"org.apache.cassandra.utils.ByteBufferUtil.lastIndexOf(ByteBuffer,byte,int)",5,1,n/a,27,1,3,11,5
"org.apache.cassandra.utils.ByteBufferUtil.read(DataInput,int)",3,2,n/a,15,1,2,7,2
"org.apache.cassandra.utils.ByteBufferUtil.readShortLength(DataInput)",2,2,n/a,6,0,1,2,1
"org.apache.cassandra.utils.ByteBufferUtil.readWithLength(DataInput)",3,3,n/a,9,1,1,4,2
"org.apache.cassandra.utils.ByteBufferUtil.readWithShortLength(DataInput)",2,19,n/a,9,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.skipShortLength(DataInput)",2,2,n/a,11,0,1,3,1
"org.apache.cassandra.utils.ByteBufferUtil.string(ByteBuffer)",1,15,n/a,11,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.string(ByteBuffer,Charset)",4,3,n/a,11,0,2,1,1
"org.apache.cassandra.utils.ByteBufferUtil.string(ByteBuffer,int,int)",1,3,n/a,13,0,3,1,1
"org.apache.cassandra.utils.ByteBufferUtil.string(ByteBuffer,int,int,Charset)",5,1,n/a,16,0,4,4,1
"org.apache.cassandra.utils.ByteBufferUtil.toDouble(ByteBuffer)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.toFloat(ByteBuffer)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.toInt(ByteBuffer)",2,2,n/a,11,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.toLong(ByteBuffer)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ByteBufferUtil.write(ByteBuffer,DataOutput)",10,6,n/a,14,2,2,6,3
"org.apache.cassandra.utils.ByteBufferUtil.writeWithLength(ByteBuffer,DataOutput)",3,5,n/a,5,0,2,2,1
"org.apache.cassandra.utils.ByteBufferUtil.writeWithShortLength(ByteBuffer,DataOutput)",5,17,n/a,15,1,2,7,3
"org.apache.cassandra.utils.CLibrary.CLibrary()",0,0,n/a,1,0,0,0,1
"org.apache.cassandra.utils.CLibrary.createHardLink(File,File)",7,0,n/a,29,1,2,7,4
"org.apache.cassandra.utils.CLibrary.createHardLinkWithExec(File,File)",17,1,n/a,31,2,2,13,4
"org.apache.cassandra.utils.CLibrary.errno(RuntimeException)",2,4,n/a,13,1,1,5,2
"org.apache.cassandra.utils.CLibrary.fcntl(int,int,long)",0,1,n/a,2,-1,3,0,1
"org.apache.cassandra.utils.CLibrary.getfd(FileDescriptor)",4,1,n/a,20,1,1,7,3
"org.apache.cassandra.utils.CLibrary.link(String,String)",0,1,n/a,1,-1,2,0,1
"org.apache.cassandra.utils.CLibrary.mlockall(int)",0,1,n/a,1,-1,1,0,1
"org.apache.cassandra.utils.CLibrary.munlockall()",0,0,n/a,1,-1,0,0,1
"org.apache.cassandra.utils.CLibrary.posix_fadvise(int,int,int,int)",0,1,n/a,2,-1,4,0,1
"org.apache.cassandra.utils.CLibrary.tryFcntl(int,int,int)",4,1,n/a,17,1,3,8,3
"org.apache.cassandra.utils.CLibrary.tryMlockall()",12,1,n/a,29,2,0,10,7
"org.apache.cassandra.utils.CLibrary.trySkipCache(int,int,int)",8,4,n/a,21,2,3,7,5
"org.apache.cassandra.utils.DefaultDouble.DefaultDouble(double)",0,0,n/a,5,0,1,2,1
"org.apache.cassandra.utils.DefaultDouble.isModified()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.DefaultDouble.set(double)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.DefaultDouble.value()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.DefaultInteger.DefaultInteger(int)",0,0,n/a,5,0,1,2,1
"org.apache.cassandra.utils.DefaultInteger.isModified()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.DefaultInteger.set(int)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.DefaultInteger.value()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.DestructivePQIterator.DestructivePQIterator(PriorityQueue<T>)",0,0,n/a,3,0,1,1,1
"org.apache.cassandra.utils.DestructivePQIterator.hasNext()",1,0,n/a,3,0,0,1,1
"org.apache.cassandra.utils.DestructivePQIterator.next()",1,0,n/a,3,0,0,1,1
"org.apache.cassandra.utils.DestructivePQIterator.remove()",1,0,n/a,3,0,0,1,1
"org.apache.cassandra.utils.EstimatedHistogram.EstimatedHistogram()",1,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.EstimatedHistogram.EstimatedHistogram(int)",2,3,n/a,5,0,1,2,1
"org.apache.cassandra.utils.EstimatedHistogram.EstimatedHistogram(long[],long[])",1,1,n/a,6,0,2,3,1
"org.apache.cassandra.utils.EstimatedHistogram.EstimatedHistogramSerializer.deserialize(DataInput)",4,4,n/a,11,1,1,9,3
"org.apache.cassandra.utils.EstimatedHistogram.EstimatedHistogramSerializer.serialize(EstimatedHistogram,DataOutput)",5,8,n/a,11,1,2,8,3
"org.apache.cassandra.utils.EstimatedHistogram.add(long)",2,4,n/a,15,1,1,4,2
"org.apache.cassandra.utils.EstimatedHistogram.get(int)",1,0,n/a,7,0,1,1,1
"org.apache.cassandra.utils.EstimatedHistogram.getBucketOffsets()",0,2,n/a,7,0,0,1,1
"org.apache.cassandra.utils.EstimatedHistogram.getBuckets(boolean)",5,1,n/a,14,0,1,11,4
"org.apache.cassandra.utils.EstimatedHistogram.isOverflowed()",2,0,n/a,7,0,0,1,1
"org.apache.cassandra.utils.EstimatedHistogram.makeOffsets(int)",1,1,n/a,14,1,1,11,3
"org.apache.cassandra.utils.EstimatedHistogram.max()",3,0,n/a,16,1,0,9,4
"org.apache.cassandra.utils.EstimatedHistogram.mean()",6,0,n/a,18,1,0,11,3
"org.apache.cassandra.utils.EstimatedHistogram.min()",2,0,n/a,12,1,0,6,4
"org.apache.cassandra.utils.ExpiringMap.CacheMonitor.run()",11,0,n/a,13,2,0,6,4
"org.apache.cassandra.utils.ExpiringMap.CacheableObject.CacheableObject(T,long)",1,1,n/a,7,0,2,4,1
"org.apache.cassandra.utils.ExpiringMap.CacheableObject.getValue()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.utils.ExpiringMap.CacheableObject.isReadyToDie(long)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ExpiringMap.ExpiringMap(long)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ExpiringMap.ExpiringMap(long,Function<Pair<K, V>, ?>)",4,1,n/a,15,1,2,6,2
"org.apache.cassandra.utils.ExpiringMap.containsKey(K)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ExpiringMap.get(K)",2,0,n/a,5,0,1,2,2
"org.apache.cassandra.utils.ExpiringMap.getAge(K)",1,0,n/a,5,0,1,2,2
"org.apache.cassandra.utils.ExpiringMap.isEmpty()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.ExpiringMap.keySet()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.ExpiringMap.put(K,V)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.utils.ExpiringMap.put(K,V,long)",3,1,n/a,5,0,3,2,2
"org.apache.cassandra.utils.ExpiringMap.remove(K)",2,0,n/a,5,0,1,2,2
"org.apache.cassandra.utils.ExpiringMap.shutdown()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.ExpiringMap.size()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.FBUtilities.absoluteFromFraction(double,long)",2,1,n/a,18,1,2,6,5
"org.apache.cassandra.utils.FBUtilities.atomicSetMax(AtomicInteger,int)",2,1,n/a,9,1,2,4,4
"org.apache.cassandra.utils.FBUtilities.atomicSetMax(AtomicLong,long)",2,1,n/a,9,1,2,4,4
"org.apache.cassandra.utils.FBUtilities.bytesToHex(byte...)",1,1,n/a,11,1,1,8,2
"org.apache.cassandra.utils.FBUtilities.classForName(String,String)",3,4,n/a,17,1,2,3,2
"org.apache.cassandra.utils.FBUtilities.compareUnsigned(byte[],byte[],int,int,int,int)",1,1,n/a,18,1,6,14,9
"org.apache.cassandra.utils.FBUtilities.construct(String,String)",13,6,n/a,32,1,2,9,6
"org.apache.cassandra.utils.FBUtilities.copyIntoBytes(byte[],int,int)",0,1,n/a,13,0,3,4,1
"org.apache.cassandra.utils.FBUtilities.copyIntoBytes(byte[],int,long)",0,1,n/a,17,0,3,8,1
"org.apache.cassandra.utils.FBUtilities.deserialize(TDeserializer,TBase,DataInput)",4,3,n/a,17,1,3,8,2
"org.apache.cassandra.utils.FBUtilities.encodedUTF8Length(String)",2,0,n/a,16,1,1,12,5
"org.apache.cassandra.utils.FBUtilities.getCollatingIterator()",3,2,n/a,4,2,0,2,1
"org.apache.cassandra.utils.FBUtilities.getLocalAddress()",4,88,n/a,15,1,0,5,4
"org.apache.cassandra.utils.FBUtilities.getProtectedConstructor(Class,Class...)",2,1,n/a,21,1,2,6,2
"org.apache.cassandra.utils.FBUtilities.getProtectedField(Class,String)",3,0,n/a,20,1,2,6,2
"org.apache.cassandra.utils.FBUtilities.getReleaseVersionString()",6,4,n/a,19,2,0,9,3
"org.apache.cassandra.utils.FBUtilities.hash(ByteBuffer...)",4,1,n/a,9,1,1,4,2
"org.apache.cassandra.utils.FBUtilities.hashToBigInteger(ByteBuffer)",3,2,n/a,6,0,1,3,1
"org.apache.cassandra.utils.FBUtilities.hexToBytes(String)",4,6,n/a,11,1,1,8,3
"org.apache.cassandra.utils.FBUtilities.midpoint(BigInteger,BigInteger,int)",12,3,n/a,30,1,3,11,2
"org.apache.cassandra.utils.FBUtilities.newCacheProvider(String)",2,5,n/a,6,0,1,3,2
"org.apache.cassandra.utils.FBUtilities.newMessageDigest(String)",2,1,n/a,11,1,1,3,2
"org.apache.cassandra.utils.FBUtilities.newPartitioner(String)",2,3,n/a,6,0,1,3,2
"org.apache.cassandra.utils.FBUtilities.parseDoubleOrPercent(String)",5,0,n/a,14,1,1,3,2
"org.apache.cassandra.utils.FBUtilities.renameWithConfirm(String,String)",4,2,n/a,7,1,2,2,2
"org.apache.cassandra.utils.FBUtilities.resourceToFile(String)",4,1,n/a,8,0,1,5,2
"org.apache.cassandra.utils.FBUtilities.serialize(TSerializer,TBase,DataOutput)",4,3,n/a,18,1,3,9,2
"org.apache.cassandra.utils.FBUtilities.singleton(T)",2,1,n/a,4,0,1,1,1
"org.apache.cassandra.utils.FBUtilities.sortSampledKeys(List<DecoratedKey>,Range)",10,2,n/a,10,4,2,8,6
"org.apache.cassandra.utils.FBUtilities.threadLocalMD5Digest()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.utils.FBUtilities.threadLocalRandom()",1,3,n/a,4,0,0,1,1
"org.apache.cassandra.utils.FBUtilities.timestampMicros()",1,5,n/a,6,0,0,1,1
"org.apache.cassandra.utils.FBUtilities.toByteArray(int)",1,0,n/a,10,0,1,3,1
"org.apache.cassandra.utils.FBUtilities.toByteArray(long)",1,0,n/a,10,0,1,3,1
"org.apache.cassandra.utils.FBUtilities.toString(Map<?, ?>)",3,4,n/a,5,0,1,2,1
"org.apache.cassandra.utils.FBUtilities.waitOnFutures(Iterable<Future<?>>)",3,5,n/a,18,2,1,5,4
"org.apache.cassandra.utils.FBUtilities.wrapCharArray(char[])",2,1,n/a,21,2,1,7,5
"org.apache.cassandra.utils.FBUtilities.xor(byte[],byte[])",1,0,n/a,22,1,2,12,5
"org.apache.cassandra.utils.Filter.add(ByteBuffer)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.utils.Filter.getHashCount()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.Filter.isPresent(ByteBuffer)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.utils.GuidGenerator.convertToStandardFormat(String)",17,2,n/a,14,0,1,4,1
"org.apache.cassandra.utils.GuidGenerator.guid()",10,0,n/a,11,1,0,10,3
"org.apache.cassandra.utils.GuidGenerator.guidAsBytes()",15,2,n/a,14,0,0,7,1
"org.apache.cassandra.utils.GuidGenerator.guidToString(byte[])",6,0,n/a,10,1,1,9,3
"org.apache.cassandra.utils.LatencyTracker.addMicro(long)",4,1,n/a,7,0,1,4,1
"org.apache.cassandra.utils.LatencyTracker.addNano(long)",1,0,n/a,6,0,1,1,1
"org.apache.cassandra.utils.LatencyTracker.getOpCount()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.LatencyTracker.getRecentLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.LatencyTracker.getRecentLatencyMicros()",2,0,n/a,15,1,0,6,1
"org.apache.cassandra.utils.LatencyTracker.getTotalLatencyHistogramMicros()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.LatencyTracker.getTotalLatencyMicros()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.utils.LegacyBloomFilter.LegacyBloomFilter(int,BitSet)",0,3,n/a,5,0,2,2,1
"org.apache.cassandra.utils.LegacyBloomFilter.add(ByteBuffer)",2,0,n/a,12,1,1,2,2
"org.apache.cassandra.utils.LegacyBloomFilter.alwaysMatchingBloomFilter()",3,0,n/a,7,0,0,3,1
"org.apache.cassandra.utils.LegacyBloomFilter.buckets()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.utils.LegacyBloomFilter.bucketsFor(long,int)",2,2,n/a,5,0,2,2,1
"org.apache.cassandra.utils.LegacyBloomFilter.clear()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.LegacyBloomFilter.emptyBuckets()",2,0,n/a,12,2,0,7,3
"org.apache.cassandra.utils.LegacyBloomFilter.getBitSet()",0,0,n/a,3,0,0,1,1
"org.apache.cassandra.utils.LegacyBloomFilter.getFilter(long,double)",4,0,n/a,13,0,2,4,1
"org.apache.cassandra.utils.LegacyBloomFilter.getFilter(long,int)",8,0,n/a,16,1,2,6,2
"org.apache.cassandra.utils.LegacyBloomFilter.getHashBuckets(ByteBuffer)",2,2,n/a,4,0,1,1,1
"org.apache.cassandra.utils.LegacyBloomFilter.getHashBuckets(ByteBuffer,int,int)",7,1,n/a,16,1,3,8,2
"org.apache.cassandra.utils.LegacyBloomFilter.isPresent(ByteBuffer)",2,0,n/a,11,2,1,4,3
"org.apache.cassandra.utils.LegacyBloomFilter.serializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.LegacyBloomFilter.toString()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.LegacyBloomFilter.tserializer()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.LegacyBloomFilterSerializer.deserialize(DataInputStream,int)",5,7,n/a,13,1,2,6,2
"org.apache.cassandra.utils.LegacyBloomFilterSerializer.serialize(LegacyBloomFilter,DataOutputStream,int)",1,9,n/a,9,0,3,1,1
"org.apache.cassandra.utils.MerkleTree.Hashable.Hashable(byte[])",0,4,n/a,4,0,1,1,1
"org.apache.cassandra.utils.MerkleTree.Hashable.HashableSerializer.deserialize(DataInputStream,int)",4,7,n/a,10,0,2,6,3
"org.apache.cassandra.utils.MerkleTree.Hashable.HashableSerializer.serialize(Hashable,DataOutputStream,int)",7,9,n/a,15,1,3,7,3
"org.apache.cassandra.utils.MerkleTree.Hashable.addHash(byte[])",1,1,n/a,11,0,1,3,2
"org.apache.cassandra.utils.MerkleTree.Hashable.binaryHash(byte[],byte[])",1,3,n/a,8,0,2,1,1
"org.apache.cassandra.utils.MerkleTree.Hashable.hash()",0,7,n/a,4,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.Hashable.hash(byte[])",0,2,n/a,4,0,1,1,1
"org.apache.cassandra.utils.MerkleTree.Hashable.hash(byte[],byte[])",1,1,n/a,9,0,2,1,1
"org.apache.cassandra.utils.MerkleTree.Hashable.toString(StringBuilder,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.apache.cassandra.utils.MerkleTree.Hashable.toString(byte[])",1,3,n/a,6,0,1,3,2
"org.apache.cassandra.utils.MerkleTree.Inner.Inner(Token,Hashable,Hashable)",1,3,n/a,10,0,3,4,1
"org.apache.cassandra.utils.MerkleTree.Inner.InnerSerializer.deserialize(DataInputStream,int)",7,7,n/a,11,0,2,8,3
"org.apache.cassandra.utils.MerkleTree.Inner.InnerSerializer.serialize(Inner,DataOutputStream,int)",7,9,n/a,13,1,3,7,2
"org.apache.cassandra.utils.MerkleTree.Inner.lchild()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.Inner.lchild(Hashable)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.utils.MerkleTree.Inner.rchild()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.Inner.rchild(Hashable)",0,1,n/a,4,0,1,1,1
"org.apache.cassandra.utils.MerkleTree.Inner.toString()",3,0,n/a,7,0,0,3,1
"org.apache.cassandra.utils.MerkleTree.Inner.toString(StringBuilder,int)",18,4,n/a,27,1,2,14,4
"org.apache.cassandra.utils.MerkleTree.Leaf.Leaf()",1,4,n/a,7,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.Leaf.Leaf(byte[])",1,2,n/a,4,0,1,1,1
"org.apache.cassandra.utils.MerkleTree.Leaf.Leaf(byte[],byte[])",2,0,n/a,4,0,2,1,1
"org.apache.cassandra.utils.MerkleTree.Leaf.LeafSerializer.deserialize(DataInputStream,int)",3,7,n/a,8,0,2,5,3
"org.apache.cassandra.utils.MerkleTree.Leaf.LeafSerializer.serialize(Leaf,DataOutputStream,int)",3,9,n/a,10,1,3,4,2
"org.apache.cassandra.utils.MerkleTree.Leaf.toString()",2,1,n/a,5,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.Leaf.toString(StringBuilder,int)",2,3,n/a,4,0,2,1,1
"org.apache.cassandra.utils.MerkleTree.MerkleTree(IPartitioner,Range,byte,long)",1,1,n/a,17,0,4,7,1
"org.apache.cassandra.utils.MerkleTree.MerkleTreeSerializer.deserialize(DataInputStream,int)",8,7,n/a,25,2,2,12,3
"org.apache.cassandra.utils.MerkleTree.MerkleTreeSerializer.serialize(MerkleTree,DataOutputStream,int)",6,9,n/a,15,1,3,7,2
"org.apache.cassandra.utils.MerkleTree.RowHash.RowHash(Token,byte[])",0,0,n/a,5,0,2,2,1
"org.apache.cassandra.utils.MerkleTree.RowHash.toString()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.StopRecursion.BadRange.BadRange()",1,2,n/a,1,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.StopRecursion.InvalidHash.InvalidHash()",1,0,n/a,1,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.StopRecursion.TooDeep.TooDeep()",1,2,n/a,1,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.TreeRange.TreeRange(MerkleTree,Token,Token,byte,Hashable)",1,7,n/a,7,0,5,4,1
"org.apache.cassandra.utils.MerkleTree.TreeRange.addAll(Iterator<RowHash>)",3,0,n/a,5,0,1,2,2
"org.apache.cassandra.utils.MerkleTree.TreeRange.addHash(RowHash)",1,1,n/a,9,0,1,3,1
"org.apache.cassandra.utils.MerkleTree.TreeRange.hash()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.TreeRange.hash(byte[])",1,0,n/a,5,0,1,2,1
"org.apache.cassandra.utils.MerkleTree.TreeRange.toString()",7,1,n/a,7,0,0,3,1
"org.apache.cassandra.utils.MerkleTree.TreeRangeIterator.TreeRangeIterator(MerkleTree)",3,1,n/a,6,0,1,3,1
"org.apache.cassandra.utils.MerkleTree.TreeRangeIterator.computeNext()",15,0,n/a,36,2,0,15,6
"org.apache.cassandra.utils.MerkleTree.TreeRangeIterator.iterator()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.difference(MerkleTree,MerkleTree)",10,0,n/a,22,1,2,12,8
"org.apache.cassandra.utils.MerkleTree.differenceHelper(MerkleTree,MerkleTree,List<TreeRange>,TreeRange)",16,3,n/a,49,1,4,30,13
"org.apache.cassandra.utils.MerkleTree.get(Token)",1,0,n/a,8,0,1,1,1
"org.apache.cassandra.utils.MerkleTree.getHelper(Hashable,Token,Token,byte,Token)",6,3,n/a,15,1,5,6,3
"org.apache.cassandra.utils.MerkleTree.hash(Range)",2,6,n/a,21,1,1,3,2
"org.apache.cassandra.utils.MerkleTree.hashHelper(Hashable,Range,Range)",19,5,n/a,38,1,3,19,7
"org.apache.cassandra.utils.MerkleTree.inc(byte)",0,10,n/a,5,0,1,2,1
"org.apache.cassandra.utils.MerkleTree.init()",5,0,n/a,14,0,0,4,1
"org.apache.cassandra.utils.MerkleTree.initHelper(Token,Token,byte,byte)",10,3,n/a,12,0,4,8,4
"org.apache.cassandra.utils.MerkleTree.invalidate(Token)",1,0,n/a,8,0,1,1,1
"org.apache.cassandra.utils.MerkleTree.invalidateHelper(Hashable,Token,Token)",4,3,n/a,14,0,3,7,3
"org.apache.cassandra.utils.MerkleTree.invalids()",1,0,n/a,10,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.maxsize()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.maxsize(long)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.MerkleTree.partitioner()",0,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.partitioner(IPartitioner)",0,0,n/a,7,0,1,1,1
"org.apache.cassandra.utils.MerkleTree.root()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.size()",0,0,n/a,8,0,0,1,1
"org.apache.cassandra.utils.MerkleTree.split(Token)",1,0,n/a,21,1,1,6,3
"org.apache.cassandra.utils.MerkleTree.splitHelper(Hashable,Token,Token,byte,Token)",15,3,n/a,26,1,5,13,6
"org.apache.cassandra.utils.MerkleTree.toString()",5,0,n/a,9,0,0,5,1
"org.apache.cassandra.utils.MurmurHash.hash32(ByteBuffer,int,int,int)",7,0,n/a,46,2,4,34,6
"org.apache.cassandra.utils.MurmurHash.hash64(ByteBuffer,int,int,long)",15,0,n/a,45,1,4,37,10
"org.apache.cassandra.utils.Mx4jTool.getAddress()",3,1,n/a,4,0,0,1,1
"org.apache.cassandra.utils.Mx4jTool.getPort()",3,1,n/a,10,1,0,5,3
"org.apache.cassandra.utils.Mx4jTool.maybeLoad()",24,1,n/a,36,1,0,20,3
"org.apache.cassandra.utils.NodeId.LocalNodeIdHistory.LocalNodeIdHistory()",11,1,n/a,19,1,0,10,2
"org.apache.cassandra.utils.NodeId.LocalNodeIdHistory.renewCurrent()",7,1,n/a,9,0,0,6,1
"org.apache.cassandra.utils.NodeId.NodeId(ByteBuffer)",2,3,n/a,6,0,1,3,2
"org.apache.cassandra.utils.NodeId.NodeIdRecord.NodeIdRecord(NodeId,long)",0,2,n/a,5,0,2,2,1
"org.apache.cassandra.utils.NodeId.NodeIdRecord.equals(Object)",3,0,n/a,10,0,1,6,5
"org.apache.cassandra.utils.NodeId.NodeIdRecord.toString()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.NodeId.OneShotRenewer.OneShotRenewer()",1,1,n/a,5,0,0,2,1
"org.apache.cassandra.utils.NodeId.OneShotRenewer.maybeRenew(CounterColumn)",2,0,n/a,8,1,1,3,3
"org.apache.cassandra.utils.NodeId.bytes()",0,4,n/a,8,0,0,1,1
"org.apache.cassandra.utils.NodeId.compareTo(NodeId)",3,1,n/a,4,0,1,1,1
"org.apache.cassandra.utils.NodeId.equals(Object)",3,6,n/a,10,0,1,6,4
"org.apache.cassandra.utils.NodeId.fromInt(int)",4,0,n/a,11,0,1,2,1
"org.apache.cassandra.utils.NodeId.generate()",5,3,n/a,4,0,0,1,1
"org.apache.cassandra.utils.NodeId.getLocalId()",2,5,n/a,4,0,0,1,1
"org.apache.cassandra.utils.NodeId.getOldLocalNodeIds()",1,1,n/a,9,0,0,1,1
"org.apache.cassandra.utils.NodeId.hashCode()",1,0,n/a,5,0,0,1,1
"org.apache.cassandra.utils.NodeId.isLocalId()",2,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.NodeId.localIds()",0,3,n/a,4,0,0,1,1
"org.apache.cassandra.utils.NodeId.renewLocalId()",2,2,n/a,9,0,0,1,1
"org.apache.cassandra.utils.NodeId.toString()",2,2,n/a,5,0,0,1,1
"org.apache.cassandra.utils.NodeId.wrap(ByteBuffer)",1,3,n/a,7,0,1,1,1
"org.apache.cassandra.utils.NodeId.wrap(ByteBuffer,int)",5,2,n/a,7,0,2,4,1
"org.apache.cassandra.utils.Pair.Pair(T1,T2)",0,24,n/a,5,0,2,2,1
"org.apache.cassandra.utils.Pair.create(X,Y)",1,0,n/a,4,0,2,1,1
"org.apache.cassandra.utils.Pair.equals(Object)",2,0,n/a,9,0,1,4,3
"org.apache.cassandra.utils.Pair.hashCode()",2,0,n/a,6,0,0,2,3
"org.apache.cassandra.utils.Pair.toString()",0,0,n/a,5,0,0,1,1
"org.apache.cassandra.utils.ReducingIterator.ReducingIterator(Iterator<T1>)",0,6,n/a,4,0,1,1,1
"org.apache.cassandra.utils.ReducingIterator.computeNext()",8,0,n/a,22,2,0,15,8
"org.apache.cassandra.utils.ReducingIterator.getReduced()",n/a,1,6,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.utils.ReducingIterator.isEqual(T1,T1)",1,1,n/a,5,0,2,1,1
"org.apache.cassandra.utils.ReducingIterator.iterator()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.ReducingIterator.onKeyChange()",0,1,n/a,5,0,0,0,1
"org.apache.cassandra.utils.ReducingIterator.reduce(T1)",n/a,1,6,n/a,n/a,1,n/a,n/a
"org.apache.cassandra.utils.ResourceWatcher.WatchedResource.WatchedResource(String,Runnable)",0,1,n/a,6,0,2,3,1
"org.apache.cassandra.utils.ResourceWatcher.WatchedResource.run()",7,0,n/a,17,2,0,7,3
"org.apache.cassandra.utils.ResourceWatcher.watch(String,Runnable,int)",2,1,n/a,4,0,3,1,1
"org.apache.cassandra.utils.SimpleCondition.await()",1,0,n/a,5,0,0,2,2
"org.apache.cassandra.utils.SimpleCondition.await(long,TimeUnit)",5,4,n/a,11,1,2,5,7
"org.apache.cassandra.utils.SimpleCondition.awaitNanos(long)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.SimpleCondition.awaitUninterruptibly()",1,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.SimpleCondition.awaitUntil(Date)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.SimpleCondition.isSignaled()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.SimpleCondition.reset()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.SimpleCondition.signal()",1,4,n/a,5,0,0,2,1
"org.apache.cassandra.utils.SimpleCondition.signalAll()",1,0,n/a,5,0,0,2,1
"org.apache.cassandra.utils.SkipNullRepresenter.representJavaBeanProperty(Object,Property,Object,Tag)",1,0,n/a,11,1,4,3,2
"org.apache.cassandra.utils.StatusLogger.log()",38,1,n/a,48,1,0,22,6
"org.apache.cassandra.utils.UUIDGen.UUIDGen()",1,1,n/a,5,0,0,2,2
"org.apache.cassandra.utils.UUIDGen.createTime(long)",0,2,n/a,9,0,1,6,1
"org.apache.cassandra.utils.UUIDGen.createTimeSafe()",2,2,n/a,11,0,0,5,2
"org.apache.cassandra.utils.UUIDGen.createTimeUUIDBytes(long)",1,2,n/a,10,0,1,11,3
"org.apache.cassandra.utils.UUIDGen.createTimeUnsafe(long)",1,1,n/a,5,0,1,2,1
"org.apache.cassandra.utils.UUIDGen.decompose(UUID)",2,14,n/a,13,1,1,9,2
"org.apache.cassandra.utils.UUIDGen.getAdjustedTimestamp(UUID)",4,0,n/a,13,0,1,3,2
"org.apache.cassandra.utils.UUIDGen.getClockSeqAndNode()",3,1,n/a,11,1,0,3,2
"org.apache.cassandra.utils.UUIDGen.getClockSeqAndNode(InetAddress)",1,2,n/a,10,0,1,6,1
"org.apache.cassandra.utils.UUIDGen.getTimeUUIDBytes()",2,1,n/a,10,0,0,1,1
"org.apache.cassandra.utils.UUIDGen.getTimeUUIDBytes(long)",2,4,n/a,14,0,1,1,1
"org.apache.cassandra.utils.UUIDGen.getUUID(ByteBuffer)",5,10,n/a,5,0,1,1,1
"org.apache.cassandra.utils.UUIDGen.makeNode(InetAddress)",8,1,n/a,14,0,1,11,3
"org.apache.cassandra.utils.UUIDGen.makeType1UUIDFromHost(InetAddress)",3,10,n/a,11,0,1,1,1
"org.apache.cassandra.utils.WrappedRunnable.run()",2,0,n/a,11,1,0,3,2
"org.apache.cassandra.utils.WrappedRunnable.runMayThrow()",n/a,1,16,n/a,n/a,0,n/a,n/a
"org.apache.cassandra.utils.XMLUtils.XMLUtils(String)",6,0,n/a,9,0,1,6,1
"org.apache.cassandra.utils.XMLUtils.getAttributeValue(Node,String)",3,0,n/a,10,1,2,5,2
"org.apache.cassandra.utils.XMLUtils.getNodeValue(String)",3,0,n/a,5,0,1,2,2
"org.apache.cassandra.utils.XMLUtils.getNodeValues(String)",6,0,n/a,14,1,1,11,2
"org.apache.cassandra.utils.XMLUtils.getRequestedNodeList(String)",2,0,n/a,6,0,1,3,1
"org.apache.cassandra.utils.obs.ArrayUtil.grow(long[])",1,0,n/a,3,0,1,1,1
"org.apache.cassandra.utils.obs.ArrayUtil.grow(long[],int)",2,1,n/a,8,1,2,5,2
"org.apache.cassandra.utils.obs.BitUtil.isPowerOfTwo(int)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.obs.BitUtil.isPowerOfTwo(long)",0,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.obs.BitUtil.nextHighestPowerOfTwo(int)",0,0,n/a,11,0,1,8,1
"org.apache.cassandra.utils.obs.BitUtil.nextHighestPowerOfTwo(long)",0,0,n/a,12,0,1,9,1
"org.apache.cassandra.utils.obs.BitUtil.ntz(int)",0,0,n/a,15,0,1,10,4
"org.apache.cassandra.utils.obs.BitUtil.ntz(long)",0,0,n/a,37,1,1,23,8
"org.apache.cassandra.utils.obs.BitUtil.ntz2(long)",0,0,n/a,12,1,1,12,4
"org.apache.cassandra.utils.obs.BitUtil.ntz3(long)",0,0,n/a,17,1,1,18,6
"org.apache.cassandra.utils.obs.BitUtil.pop(long)",0,35,n/a,23,0,1,7,1
"org.apache.cassandra.utils.obs.BitUtil.pop_andnot(long[],long[],int,int)",7,0,n/a,109,2,4,66,5
"org.apache.cassandra.utils.obs.BitUtil.pop_array(long[],int,int)",7,0,n/a,125,2,3,66,5
"org.apache.cassandra.utils.obs.BitUtil.pop_intersect(long[],long[],int,int)",7,0,n/a,104,2,4,66,5
"org.apache.cassandra.utils.obs.BitUtil.pop_union(long[],long[],int,int)",7,0,n/a,109,2,4,66,5
"org.apache.cassandra.utils.obs.BitUtil.pop_xor(long[],long[],int,int)",7,0,n/a,105,2,4,66,5
"org.apache.cassandra.utils.obs.OpenBitSet.OpenBitSet()",1,0,n/a,3,0,0,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.OpenBitSet(BitSet)",2,0,n/a,5,0,1,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.OpenBitSet(long)",1,2,n/a,8,0,1,2,1
"org.apache.cassandra.utils.obs.OpenBitSet.OpenBitSet(long[],int)",0,1,n/a,17,0,2,2,1
"org.apache.cassandra.utils.obs.OpenBitSet.and(OpenBitSet)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.andNot(OpenBitSet)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.andNotCount(OpenBitSet,OpenBitSet)",3,0,n/a,11,1,2,4,2
"org.apache.cassandra.utils.obs.OpenBitSet.bits2words(long)",0,2,n/a,4,0,1,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.capacity()",0,1,n/a,2,0,0,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.cardinality()",1,2,n/a,4,0,0,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.clear(int,int)",2,0,n/a,28,1,2,18,5
"org.apache.cassandra.utils.obs.OpenBitSet.clear(long)",0,0,n/a,8,0,1,6,2
"org.apache.cassandra.utils.obs.OpenBitSet.clear(long,long)",2,1,n/a,28,1,2,18,5
"org.apache.cassandra.utils.obs.OpenBitSet.clone()",3,0,n/a,10,1,0,5,2
"org.apache.cassandra.utils.obs.OpenBitSet.ensureCapacity(long)",2,1,n/a,6,0,1,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.ensureCapacityWords(int)",1,3,n/a,8,1,1,2,2
"org.apache.cassandra.utils.obs.OpenBitSet.equals(Object)",0,0,n/a,22,1,1,21,8
"org.apache.cassandra.utils.obs.OpenBitSet.expandingWordNum(long)",1,4,n/a,8,1,1,5,2
"org.apache.cassandra.utils.obs.OpenBitSet.fastClear(int)",0,0,n/a,16,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.fastClear(long)",0,0,n/a,9,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.fastFlip(int)",0,0,n/a,9,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.fastFlip(long)",0,0,n/a,9,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.fastGet(int)",0,0,n/a,11,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.fastGet(long)",0,0,n/a,9,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.fastSet(int)",0,0,n/a,9,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.fastSet(long)",0,0,n/a,9,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.flip(long)",1,0,n/a,7,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.flip(long,long)",1,0,n/a,29,1,2,15,4
"org.apache.cassandra.utils.obs.OpenBitSet.flipAndGet(int)",0,0,n/a,10,0,1,5,1
"org.apache.cassandra.utils.obs.OpenBitSet.flipAndGet(long)",0,0,n/a,10,0,1,5,1
"org.apache.cassandra.utils.obs.OpenBitSet.get(int)",0,0,n/a,10,0,1,6,2
"org.apache.cassandra.utils.obs.OpenBitSet.get(long)",0,1,n/a,9,0,1,6,2
"org.apache.cassandra.utils.obs.OpenBitSet.getAndSet(int)",0,0,n/a,11,0,1,6,1
"org.apache.cassandra.utils.obs.OpenBitSet.getAndSet(long)",0,0,n/a,11,0,1,6,1
"org.apache.cassandra.utils.obs.OpenBitSet.getBit(int)",0,0,n/a,8,0,1,3,1
"org.apache.cassandra.utils.obs.OpenBitSet.getBits()",0,0,n/a,2,0,0,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.getNumWords()",0,0,n/a,2,0,0,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.hashCode()",0,0,n/a,13,1,0,6,2
"org.apache.cassandra.utils.obs.OpenBitSet.intersect(OpenBitSet)",2,1,n/a,16,1,1,9,3
"org.apache.cassandra.utils.obs.OpenBitSet.intersectionCount(OpenBitSet,OpenBitSet)",2,0,n/a,6,0,2,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.intersects(OpenBitSet)",1,0,n/a,10,1,1,7,3
"org.apache.cassandra.utils.obs.OpenBitSet.isEmpty()",1,0,n/a,2,0,0,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.length()",0,0,n/a,4,0,0,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.nextSetBit(int)",2,0,n/a,17,1,1,12,5
"org.apache.cassandra.utils.obs.OpenBitSet.nextSetBit(long)",2,0,n/a,17,1,1,12,5
"org.apache.cassandra.utils.obs.OpenBitSet.or(OpenBitSet)",1,0,n/a,4,0,1,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.remove(OpenBitSet)",1,1,n/a,9,1,1,5,2
"org.apache.cassandra.utils.obs.OpenBitSet.set(long)",1,1,n/a,7,0,1,4,1
"org.apache.cassandra.utils.obs.OpenBitSet.set(long,long)",2,0,n/a,21,1,2,12,3
"org.apache.cassandra.utils.obs.OpenBitSet.setBits(long[])",0,0,n/a,2,0,1,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.setNumWords(int)",0,0,n/a,2,0,1,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.size()",1,2,n/a,7,0,0,1,1
"org.apache.cassandra.utils.obs.OpenBitSet.trimTrailingZeros()",0,0,n/a,8,0,0,4,3
"org.apache.cassandra.utils.obs.OpenBitSet.union(OpenBitSet)",4,1,n/a,15,1,1,10,3
"org.apache.cassandra.utils.obs.OpenBitSet.unionCount(OpenBitSet,OpenBitSet)",4,0,n/a,12,1,2,6,3
"org.apache.cassandra.utils.obs.OpenBitSet.xor(OpenBitSet)",4,0,n/a,15,1,1,10,3
"org.apache.cassandra.utils.obs.OpenBitSet.xorCount(OpenBitSet,OpenBitSet)",4,0,n/a,12,1,2,6,3

Class,CBO,CSA,CSO,CSOA,Dcy*,DIT,Inner,LCOM,LOC,NCLOC,NOC,NOIC,NOOC,OCavg,Query,RFC,WMC
"org.apache.cassandra.auth.AllowAllAuthenticator",2,1,3,4,1,0,0,2,16,15,0,0,0,"1,00",2,3,3
"org.apache.cassandra.auth.AllowAllAuthority",2,0,2,2,1,0,0,2,11,10,0,0,0,"1,00",1,2,2
"org.apache.cassandra.auth.AuthenticatedUser",1,2,3,5,0,0,0,0,23,20,0,0,0,"1,00",1,3,3
"org.apache.cassandra.auth.IAuthenticator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.cassandra.auth.IAuthority",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.auth.Permission",5,4,0,4,0,n/a,0,0,12,7,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.auth.Resources",2,2,1,3,201,0,0,0,23,18,0,0,0,"3,00",1,2,3
"org.apache.cassandra.auth.SimpleAuthenticator",8,4,4,8,202,0,0,2,94,91,0,0,0,"3,50",3,10,14
"org.apache.cassandra.auth.SimpleAuthenticator.PasswordMode",1,2,0,2,0,n/a,0,0,4,4,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.auth.SimpleAuthority",1,3,2,5,1,0,0,1,111,104,0,0,0,"10,00",1,3,20
"org.apache.cassandra.cache.AutoSavingCache",11,6,11,17,200,0,0,2,132,126,0,0,0,"1,90",7,19,19
"org.apache.cassandra.cache.AutoSavingCache.Writer",9,4,4,8,200,0,1,1,67,65,0,0,0,"3,00",1,10,9
"org.apache.cassandra.cache.AutoSavingKeyCache",6,0,3,3,200,0,0,2,17,17,0,0,0,"1,33",2,4,4
"org.apache.cassandra.cache.AutoSavingRowCache",4,0,3,3,200,0,0,2,17,17,0,0,0,"1,33",2,4,4
"org.apache.cassandra.cache.ConcurrentLinkedHashCache",1,2,12,14,0,0,0,3,61,59,0,0,0,"1,00",7,12,12
"org.apache.cassandra.cache.ConcurrentLinkedHashCacheProvider",2,0,1,1,201,0,0,1,7,7,0,0,0,"1,00",1,1,1
"org.apache.cassandra.cache.FreeableMemory",1,1,6,7,0,0,0,2,48,40,0,0,0,"1,67",2,6,10
"org.apache.cassandra.cache.ICache",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,9,n/a
"org.apache.cassandra.cache.IRowCacheProvider",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.cache.InstrumentingCache",1,6,17,23,0,0,0,1,110,106,0,0,0,"1,12",11,17,19
"org.apache.cassandra.cache.InstrumentingCacheMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.apache.cassandra.cache.SerializingCache",3,4,13,17,4,0,0,2,123,120,0,0,0,"1,43",8,16,20
"org.apache.cassandra.cache.SerializingCacheProvider",3,0,2,2,201,0,0,1,18,18,0,0,0,"1,00",1,4,2
"org.apache.cassandra.cli.CliClient",17,11,81,92,228,0,0,3,2.252,1.930,0,0,0,"4,33",36,103,355
"org.apache.cassandra.cli.CliClient.AddKeyspaceArgument",1,3,0,3,0,n/a,0,0,9,5,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.cli.CliClient.CfDefNamesComparator",1,0,1,1,0,0,0,1,7,7,0,0,0,"1,00",1,1,1
"org.apache.cassandra.cli.CliClient.ColumnFamilyArgument",1,20,0,20,0,n/a,0,0,27,23,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.cli.CliClient.Function",2,9,3,12,1,n/a,0,2,35,31,n/a,0,0,"1,67",2,4,5
"org.apache.cassandra.cli.CliClient.KsDefNamesComparator",1,0,1,1,0,0,0,1,7,7,0,0,0,"1,00",1,1,1
"org.apache.cassandra.cli.CliCommandHelp",0,2,0,2,0,0,0,0,5,5,0,0,0,n/a,0,0,0
"org.apache.cassandra.cli.CliCompiler",1,0,8,8,1,0,0,8,90,80,0,0,0,"2,00",8,9,16
"org.apache.cassandra.cli.CliCompiler.ANTLRNoCaseStringStream",1,0,2,2,0,0,0,1,28,20,0,0,0,"2,00",1,2,4
"org.apache.cassandra.cli.CliCompleter",0,2,2,4,0,0,0,1,61,61,0,0,0,"1,00",1,2,2
"org.apache.cassandra.cli.CliMain",1,7,8,15,203,0,0,1,316,285,0,0,0,"4,88",2,8,39
"org.apache.cassandra.cli.CliOptions",1,16,2,18,1,0,0,1,155,135,0,0,0,"8,00",0,4,16
"org.apache.cassandra.cli.CliOptions.CLIOptions",1,0,2,2,0,0,0,2,28,13,0,0,0,"1,00",2,2,2
"org.apache.cassandra.cli.CliSessionState",1,15,5,20,213,0,0,3,54,48,0,0,0,"1,00",2,6,5
"org.apache.cassandra.cli.CliUserHelp",0,3,0,3,0,0,0,0,6,6,0,0,0,n/a,0,0,0
"org.apache.cassandra.cli.CliUtils",0,0,4,4,0,0,0,4,63,46,0,0,0,"2,75",4,4,11
"org.apache.cassandra.client.RingCache",5,6,5,11,202,0,0,1,83,75,0,0,0,"2,20",3,9,11
"org.apache.cassandra.concurrent.AIOExecutorService",0,1,14,15,0,0,0,2,270,64,0,0,0,"1,00",11,14,14
"org.apache.cassandra.concurrent.Context",0,1,4,5,0,0,0,1,23,20,0,0,0,"1,00",2,4,4
"org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor",4,2,8,10,0,0,0,4,107,83,1,0,0,"1,78",0,8,16
"org.apache.cassandra.concurrent.IExecutorMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.cassandra.concurrent.JMXConfigurableThreadPoolExecutor",0,0,1,1,0,0,0,0,12,12,0,0,0,"1,00",0,1,1
"org.apache.cassandra.concurrent.JMXConfigurableThreadPoolExecutorMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor",4,3,16,19,0,0,0,4,128,113,0,0,0,"1,12",5,16,18
"org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutorMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.concurrent.NamedThreadFactory",3,3,3,6,0,0,0,1,27,22,0,0,0,"1,00",1,3,3
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor",3,0,4,4,1,0,0,1,20,20,0,0,0,"1,00",1,5,4
"org.apache.cassandra.concurrent.RetryingScheduledThreadPoolExecutor.LoggingScheduledFuture",1,1,10,11,0,0,0,1,57,52,0,0,0,"1,10",8,10,11
"org.apache.cassandra.concurrent.Stage",11,11,2,13,0,n/a,0,2,44,44,n/a,0,0,"3,00",2,2,6
"org.apache.cassandra.concurrent.StageManager",12,2,4,6,200,0,0,2,61,48,0,0,0,"1,25",3,7,5
"org.apache.cassandra.config.CFMetaData",57,50,77,127,200,0,0,3,887,833,0,0,0,"2,23",66,84,172
"org.apache.cassandra.config.ColumnDefinition",7,6,16,22,200,0,0,5,128,128,0,0,0,"2,31",11,19,37
"org.apache.cassandra.config.Config",5,63,0,63,3,0,0,0,72,66,0,0,0,n/a,0,0,0
"org.apache.cassandra.config.Config.CommitLogSync",2,2,0,2,0,n/a,0,0,4,4,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.config.Config.DiskAccessMode",2,4,0,4,0,n/a,0,0,6,6,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.config.Config.RequestSchedulerId",3,1,0,1,0,n/a,0,0,4,4,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.config.ConfigurationException",54,0,2,2,0,0,0,0,11,11,0,0,0,"1,00",0,2,2
"org.apache.cassandra.config.DatabaseDescriptor",95,18,96,114,200,0,0,16,899,842,0,0,0,"1,80",84,106,175
"org.apache.cassandra.config.EncryptionOptions",5,6,0,6,1,0,0,0,9,9,0,0,0,n/a,0,0,0
"org.apache.cassandra.config.EncryptionOptions.InternodeEncryption",4,2,0,2,0,n/a,0,0,5,5,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.config.KSMetaData",15,5,16,21,200,0,0,3,166,159,0,0,0,"1,94",12,18,31
"org.apache.cassandra.config.ReplicationStrategy",0,2,0,2,0,0,0,0,5,5,0,0,0,n/a,0,0,0
"org.apache.cassandra.config.RequestSchedulerOptions",2,5,0,5,0,0,0,0,11,8,0,0,0,n/a,0,0,0
"org.apache.cassandra.config.SeedProviderDef",0,2,1,3,0,0,0,0,27,10,0,0,0,"1,00",0,1,1
"org.apache.cassandra.cql.AbstractModification",2,6,10,16,206,0,0,6,75,49,0,0,0,"1,25",8,10,10
"org.apache.cassandra.cql.AlterTableStatement",6,4,4,8,202,0,0,1,71,68,0,0,0,"3,00",2,11,12
"org.apache.cassandra.cql.AlterTableStatement.OperationType",1,3,0,3,0,n/a,0,0,4,4,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.cql.Attributes",0,3,9,12,0,0,0,3,45,42,0,0,0,"1,00",4,9,9
"org.apache.cassandra.cql.BatchStatement",2,4,7,11,206,0,0,3,57,42,0,0,0,"1,14",6,7,8
"org.apache.cassandra.cql.CQLStatement",0,2,1,3,0,0,0,0,10,10,0,0,0,"1,00",0,1,1
"org.apache.cassandra.cql.CreateColumnFamilyStatement",8,23,16,39,201,0,0,1,301,273,0,0,0,"2,50",10,41,40
"org.apache.cassandra.cql.CreateIndexStatement",0,3,4,7,0,0,0,3,28,24,0,0,0,"1,00",3,4,4
"org.apache.cassandra.cql.CreateKeyspaceStatement",4,4,5,9,201,0,0,1,66,47,0,0,0,"1,80",3,8,9
"org.apache.cassandra.cql.DeleteStatement",10,2,8,10,218,0,0,2,74,65,0,0,0,"1,62",6,16,13
"org.apache.cassandra.cql.DropIndexStatement",5,1,3,4,202,0,0,1,38,38,0,0,0,"3,00",2,7,9
"org.apache.cassandra.cql.EntityType",1,2,0,2,0,n/a,0,0,4,4,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.cql.Operation",1,3,4,7,1,0,0,1,29,27,0,0,0,"1,25",2,4,5
"org.apache.cassandra.cql.Operation.OperationType",2,2,0,2,0,n/a,0,0,2,2,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.cql.QueryProcessor",18,3,25,28,214,0,0,1,819,780,0,0,0,"4,19",12,47,109
"org.apache.cassandra.cql.Relation",2,4,7,11,2,0,0,4,51,39,0,0,0,"1,14",6,8,8
"org.apache.cassandra.cql.RelationType",1,5,1,6,0,n/a,0,1,18,18,n/a,0,0,"6,00",1,1,6
"org.apache.cassandra.cql.SelectExpression",0,7,13,20,0,0,0,5,98,70,0,0,0,"1,00",8,13,13
"org.apache.cassandra.cql.SelectStatement",3,6,24,30,201,0,0,6,116,111,0,0,0,"1,04",22,26,25
"org.apache.cassandra.cql.StatementType",0,16,0,16,0,n/a,0,0,8,7,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.cql.Term",7,2,10,12,206,0,0,1,121,87,0,0,0,"2,50",7,16,25
"org.apache.cassandra.cql.TermType",1,4,1,5,0,n/a,0,1,17,16,n/a,0,0,"5,00",1,1,5
"org.apache.cassandra.cql.UpdateStatement",12,4,14,18,221,0,0,3,211,154,0,0,0,"2,29",12,26,32
"org.apache.cassandra.cql.WhereClause",2,8,16,24,201,0,0,2,129,101,0,0,0,"1,50",9,17,24
"org.apache.cassandra.db.BinaryMemtable",6,9,8,17,209,0,0,1,105,98,0,0,0,"1,30",4,11,13
"org.apache.cassandra.db.BinaryVerbHandler",3,1,2,3,201,0,1,1,23,23,0,0,0,"2,00",0,6,2
"org.apache.cassandra.db.Column",7,5,27,32,200,0,0,7,189,169,0,0,0,"1,59",20,34,43
"org.apache.cassandra.db.ColumnFamily",28,7,54,61,200,0,1,6,386,358,0,0,0,"1,67",34,61,87
"org.apache.cassandra.db.ColumnFamilyNotDefinedException",0,0,1,1,0,0,0,0,7,7,0,0,0,"1,00",0,1,1
"org.apache.cassandra.db.ColumnFamilySerializer",4,1,10,11,202,0,1,3,104,86,0,0,0,"1,67",6,10,15
"org.apache.cassandra.db.ColumnFamilyStore",44,33,152,185,200,0,0,6,1.983,1.654,0,0,0,"2,22",106,206,347
"org.apache.cassandra.db.ColumnFamilyStore.CacheType",5,3,2,5,0,n/a,0,0,15,15,n/a,0,0,"1,00",1,2,2
"org.apache.cassandra.db.ColumnFamilyStoreMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,51,n/a
"org.apache.cassandra.db.ColumnFamilyType",3,2,1,3,0,n/a,0,1,20,16,n/a,0,0,"2,00",1,2,2
"org.apache.cassandra.db.ColumnIndexer",7,0,4,4,203,0,0,1,102,85,0,0,0,"3,00",0,17,12
"org.apache.cassandra.db.ColumnSerializer",7,5,5,10,200,0,1,2,93,86,0,0,0,"3,50",3,11,14
"org.apache.cassandra.db.ColumnSerializer.CorruptColumnException",1,0,1,1,0,0,0,0,7,7,0,0,0,"1,00",0,1,1
"org.apache.cassandra.db.CounterColumn",11,3,20,23,200,0,0,2,220,195,0,0,0,"1,90",13,36,38
"org.apache.cassandra.db.CounterMutation",8,4,16,20,202,0,0,3,173,168,0,0,0,"2,44",13,21,39
"org.apache.cassandra.db.CounterMutationSerializer",2,0,4,4,202,0,1,2,14,14,0,0,0,"1,00",1,5,2
"org.apache.cassandra.db.CounterMutationVerbHandler",3,1,1,2,208,0,0,1,35,31,0,0,0,"2,00",0,4,2
"org.apache.cassandra.db.CounterUpdateColumn",2,0,7,7,201,0,0,3,54,42,0,0,0,"1,29",5,10,9
"org.apache.cassandra.db.DBConstants",2,5,0,5,0,0,0,0,8,8,0,0,0,n/a,0,0,0
"org.apache.cassandra.db.DataTracker",9,5,35,40,200,0,0,1,347,318,0,0,0,"1,97",20,52,69
"org.apache.cassandra.db.DataTracker.View",2,4,7,11,200,0,0,1,50,45,0,0,0,"1,00",6,7,7
"org.apache.cassandra.db.DecoratedKey",41,4,6,10,200,0,0,1,60,51,0,0,0,"1,57",5,12,11
"org.apache.cassandra.db.DefinitionsUpdateVerbHandler",9,1,2,3,201,0,1,1,53,47,0,0,0,"3,00",0,8,6
"org.apache.cassandra.db.DefsTable",9,1,3,4,200,0,0,2,76,65,0,0,0,"2,25",2,18,9
"org.apache.cassandra.db.DeletedColumn",3,0,9,9,201,0,0,6,52,52,0,0,0,"1,33",6,12,12
"org.apache.cassandra.db.EchoedRow",3,3,10,13,203,1,0,2,36,30,0,0,0,"1,00",2,11,5
"org.apache.cassandra.db.ExpiringColumn",5,2,12,14,201,0,0,2,109,94,0,0,0,"1,25",8,17,15
"org.apache.cassandra.db.HintedHandOffManager",14,8,16,24,200,0,0,2,367,314,0,0,0,"2,39",8,36,43
"org.apache.cassandra.db.HintedHandOffManagerMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.cassandra.db.IColumn",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,20,n/a
"org.apache.cassandra.db.IColumnContainer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.apache.cassandra.db.IFlushable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.db.IMutation",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.apache.cassandra.db.IndexScanCommand",8,6,4,10,204,0,1,1,39,39,0,0,0,"1,00",2,11,3
"org.apache.cassandra.db.IndexScanCommand.IndexScanCommandSerializer",5,0,4,4,204,0,1,2,24,24,0,0,0,"1,00",1,9,2
"org.apache.cassandra.db.KeyspaceNotDefinedException",0,0,1,1,0,0,0,0,7,7,0,0,0,"1,00",0,1,1
"org.apache.cassandra.db.Memtable",8,14,23,37,215,0,0,3,305,273,0,0,0,"1,61",16,25,53
"org.apache.cassandra.db.MemtableAllocator",2,4,3,7,4,0,0,1,93,48,0,0,0,"3,33",2,7,10
"org.apache.cassandra.db.MemtableAllocator.Region",1,5,4,9,0,0,0,1,92,46,0,0,0,"2,00",2,4,8
"org.apache.cassandra.db.MeteredFlusher",1,1,2,3,201,0,0,1,82,75,0,0,0,"4,33",1,5,13
"org.apache.cassandra.db.RangeSliceCommand",10,7,8,15,205,0,2,2,53,53,0,0,0,"1,00",4,15,6
"org.apache.cassandra.db.RangeSliceCommandSerializer",7,0,5,5,205,0,1,2,39,39,0,0,0,"2,33",2,11,7
"org.apache.cassandra.db.RangeSliceReply",5,1,4,5,201,0,0,2,38,38,0,0,0,"1,50",3,10,6
"org.apache.cassandra.db.ReadCommand",11,8,12,20,203,0,2,5,51,51,0,0,0,"1,00",8,13,8
"org.apache.cassandra.db.ReadCommandSerializer",2,1,4,5,203,0,1,1,20,20,0,0,0,"1,00",1,2,2
"org.apache.cassandra.db.ReadRepairVerbHandler",2,0,2,2,201,0,1,1,17,17,0,0,0,"1,00",0,3,1
"org.apache.cassandra.db.ReadResponse",6,3,6,9,5,0,0,3,43,38,0,0,0,"1,00",4,6,6
"org.apache.cassandra.db.ReadResponseSerializer",3,0,4,4,5,0,1,2,33,32,0,0,0,"4,00",1,7,8
"org.apache.cassandra.db.ReadVerbHandler",9,2,3,5,202,0,1,1,57,53,0,0,0,"3,50",1,14,7
"org.apache.cassandra.db.ReadVerbHandler.ReadContext",2,2,0,2,1,0,0,0,5,5,0,0,0,n/a,0,1,0
"org.apache.cassandra.db.Row",5,3,3,6,202,0,0,1,25,24,0,0,0,"1,00",2,3,3
"org.apache.cassandra.db.RowIterator",2,2,5,7,201,0,0,2,40,32,0,0,0,"1,40",2,5,7
"org.apache.cassandra.db.RowIteratorFactory",8,2,1,3,204,0,0,1,104,86,0,0,0,"1,57",1,5,11
"org.apache.cassandra.db.RowIteratorFactory.ConvertToColumnIterator",4,2,2,4,201,0,0,1,17,14,0,0,0,"1,00",1,3,2
"org.apache.cassandra.db.RowMutation",14,7,29,36,202,0,1,1,283,253,0,0,0,"1,86",14,41,52
"org.apache.cassandra.db.RowMutation.RowMutationSerializer",3,0,5,5,202,0,1,2,37,36,0,0,0,"2,00",2,8,6
"org.apache.cassandra.db.RowMutationVerbHandler",6,1,3,4,201,0,1,1,65,59,0,0,0,"5,00",0,13,10
"org.apache.cassandra.db.RowSerializer",4,0,5,5,202,0,1,2,17,17,0,0,0,"1,00",2,7,3
"org.apache.cassandra.db.SchemaCheckVerbHandler",4,1,2,3,201,0,1,1,27,10,0,0,0,"1,00",0,7,1
"org.apache.cassandra.db.SliceByNamesReadCommand",5,1,5,6,201,0,0,1,35,35,0,0,0,"1,00",3,8,5
"org.apache.cassandra.db.SliceByNamesReadCommandSerializer",3,0,2,2,202,0,0,2,37,37,0,0,0,"2,50",1,5,5
"org.apache.cassandra.db.SliceFromReadCommand",5,4,5,9,201,0,0,1,42,42,0,0,0,"1,00",3,9,5
"org.apache.cassandra.db.SliceFromReadCommandSerializer",3,0,2,2,202,0,0,2,30,30,0,0,0,"1,00",1,5,2
"org.apache.cassandra.db.SuperColumn",8,5,32,37,200,0,0,6,291,269,0,0,0,"1,84",23,39,59
"org.apache.cassandra.db.SuperColumnSerializer",5,1,8,9,200,0,1,2,65,64,0,0,0,"1,43",5,14,10
"org.apache.cassandra.db.SystemTable",15,15,18,33,200,0,0,1,375,331,0,0,0,"2,00",8,35,36
"org.apache.cassandra.db.Table",43,10,33,43,200,0,0,3,575,493,0,0,0,"2,86",20,54,103
"org.apache.cassandra.db.Table.IndexBuilder",5,3,4,7,200,0,1,1,54,53,0,0,0,"2,00",1,12,6
"org.apache.cassandra.db.TruncateResponse",3,4,3,7,202,0,0,1,28,24,0,0,0,"1,00",2,7,3
"org.apache.cassandra.db.TruncateResponse.TruncateResponseSerializer",2,0,4,4,202,0,1,2,16,16,0,0,0,"1,00",1,3,2
"org.apache.cassandra.db.TruncateVerbHandler",3,1,3,4,201,0,1,1,39,39,0,0,0,"1,00",0,8,2
"org.apache.cassandra.db.Truncation",7,3,6,9,202,0,1,2,41,34,0,0,0,"1,00",3,8,5
"org.apache.cassandra.db.TruncationSerializer",2,0,4,4,202,0,1,2,14,14,0,0,0,"1,00",1,3,2
"org.apache.cassandra.db.UnserializableColumnFamilyException",0,1,1,2,0,0,0,0,26,9,0,0,0,"1,00",0,1,1
"org.apache.cassandra.db.WriteResponse",3,4,6,10,202,0,0,4,40,35,0,0,0,"1,00",5,10,6
"org.apache.cassandra.db.WriteResponse.WriteResponseSerializer",3,0,4,4,202,0,1,2,16,16,0,0,0,"1,00",1,8,2
"org.apache.cassandra.db.columniterator.IColumnIterator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.cassandra.db.columniterator.IdentityQueryFilter",5,4,10,14,200,1,0,1,15,11,0,7,0,"1,00",1,3,2
"org.apache.cassandra.db.columniterator.IndexedSliceReader",11,9,6,15,206,0,0,4,82,77,0,0,0,"2,67",4,13,16
"org.apache.cassandra.db.columniterator.IndexedSliceReader.BlockFetcher",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.db.columniterator.IndexedSliceReader.IndexedBlockFetcher",10,2,3,5,206,0,1,1,52,49,0,0,0,"5,50",1,9,11
"org.apache.cassandra.db.columniterator.IndexedSliceReader.SimpleBlockFetcher",5,0,3,3,206,0,1,1,27,26,0,0,0,"3,50",1,5,7
"org.apache.cassandra.db.columniterator.SSTableNamesIterator",17,5,8,13,206,0,0,2,142,136,0,0,0,"2,88",3,31,23
"org.apache.cassandra.db.columniterator.SSTableSliceIterator",8,3,9,12,200,0,0,5,79,64,0,0,0,"1,44",5,16,13
"org.apache.cassandra.db.columniterator.SimpleAbstractColumnIterator",1,0,1,1,201,0,0,1,4,4,1,0,0,"1,00",0,1,1
"org.apache.cassandra.db.columniterator.SimpleSliceReader",9,7,5,12,203,0,0,3,58,58,0,0,0,"1,40",3,13,7
"org.apache.cassandra.db.commitlog.AbstractCommitLogExecutorService",0,1,7,8,0,0,0,7,46,40,0,0,0,"1,00",6,7,7
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService",2,5,10,15,202,0,0,3,130,124,0,0,0,"1,58",4,14,19
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorService.CheaterFutureTask",1,1,3,4,0,0,0,2,18,18,0,0,0,"1,00",1,3,3
"org.apache.cassandra.db.commitlog.BatchCommitLogExecutorServiceMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.cassandra.db.commitlog.CommitLog",19,6,16,22,200,0,0,1,431,335,0,0,0,"2,57",6,31,54
"org.apache.cassandra.db.commitlog.CommitLog.LogRecordAdder",1,1,3,4,200,0,0,1,29,26,0,0,0,"1,33",1,5,4
"org.apache.cassandra.db.commitlog.CommitLogSegment",7,5,17,22,203,0,0,3,165,155,0,0,0,"1,41",11,30,24
"org.apache.cassandra.db.commitlog.ICommitLogExecutorService",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorService",1,4,8,12,201,0,0,3,112,112,0,0,0,"1,33",4,8,16
"org.apache.cassandra.db.commitlog.PeriodicCommitLogExecutorServiceMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.cassandra.db.commitlog.ReplayPosition",11,5,6,11,200,0,0,1,73,64,0,0,0,"1,62",5,6,13
"org.apache.cassandra.db.commitlog.ReplayPosition.ReplayPositionSerializer",4,0,4,4,200,0,1,2,12,12,0,0,0,"1,00",1,3,2
"org.apache.cassandra.db.compaction.AbstractCompactedRow",3,1,5,6,200,0,0,4,29,12,1,0,0,"1,00",2,5,1
"org.apache.cassandra.db.compaction.CompactionController",8,7,11,18,203,0,0,3,97,85,0,0,0,"1,82",8,21,20
"org.apache.cassandra.db.compaction.CompactionInfo",5,5,8,13,0,0,0,3,50,48,0,0,0,"1,00",7,8,8
"org.apache.cassandra.db.compaction.CompactionInfo.Holder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.db.compaction.CompactionIterator",9,13,18,31,204,1,0,3,140,128,0,4,1,"1,82",6,21,20
"org.apache.cassandra.db.compaction.CompactionManager",25,7,33,40,200,0,0,4,1.071,961,0,0,0,"3,39",22,59,149
"org.apache.cassandra.db.compaction.CompactionManager.CleanupInfo",1,2,2,4,0,0,0,1,25,25,0,0,0,"1,00",1,2,2
"org.apache.cassandra.db.compaction.CompactionManager.CompactionExecutor",5,1,13,14,200,1,0,1,34,33,1,4,0,"1,00",1,10,6
"org.apache.cassandra.db.compaction.CompactionManager.ScrubInfo",2,2,2,4,4,0,0,1,25,25,0,0,0,"1,00",1,4,2
"org.apache.cassandra.db.compaction.CompactionManager.SimpleFuture",1,1,6,7,0,0,0,4,30,30,0,0,0,"1,00",5,6,6
"org.apache.cassandra.db.compaction.CompactionManager.ValidationCompactionIterator",2,0,2,2,200,0,0,1,18,18,0,0,0,"1,50",1,3,3
"org.apache.cassandra.db.compaction.CompactionManager.ValidationExecutor",2,0,13,13,200,2,0,0,7,7,0,6,0,"1,00",0,2,1
"org.apache.cassandra.db.compaction.CompactionManagerMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.apache.cassandra.db.compaction.CompactionType",3,11,2,13,0,n/a,0,0,22,22,n/a,0,0,"1,00",1,2,2
"org.apache.cassandra.db.compaction.LazilyCompactedRow",6,9,10,19,203,0,1,1,119,103,0,0,0,"2,25",5,14,18
"org.apache.cassandra.db.compaction.LazilyCompactedRow.LazyColumnIterator",2,5,11,16,203,1,0,2,33,33,0,4,1,"1,25",2,5,5
"org.apache.cassandra.db.compaction.PrecompactedRow",8,3,10,13,205,0,0,4,104,94,0,0,0,"1,50",6,26,15
"org.apache.cassandra.db.context.CounterContext",14,7,16,23,200,0,0,2,563,434,0,0,0,"5,31",13,41,85
"org.apache.cassandra.db.context.CounterContext.ContextState",3,5,20,25,200,0,0,1,133,116,0,0,0,"1,15",11,24,23
"org.apache.cassandra.db.context.CounterContext.LazyHolder",1,1,0,1,200,0,0,0,5,4,0,0,0,n/a,0,0,0
"org.apache.cassandra.db.context.IContext",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.cassandra.db.context.IContext.ContextRelationship",2,4,0,4,0,n/a,0,0,7,7,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.db.filter.AbstractColumnIterator",1,0,5,5,201,0,1,2,9,9,1,0,0,"1,00",0,2,2
"org.apache.cassandra.db.filter.IFilter",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.apache.cassandra.db.filter.NamesQueryFilter",7,1,9,10,207,0,0,4,55,55,0,0,0,"1,44",6,12,13
"org.apache.cassandra.db.filter.QueryFilter",21,5,14,19,200,0,0,7,158,124,0,0,0,"1,71",12,16,29
"org.apache.cassandra.db.filter.QueryPath",20,3,9,12,3,0,0,3,59,59,0,0,0,"1,67",3,11,15
"org.apache.cassandra.db.filter.SliceQueryFilter",7,5,8,13,200,0,0,2,97,91,1,0,0,"2,38",6,10,19
"org.apache.cassandra.db.marshal.AbstractCommutativeType",3,0,12,12,201,0,0,12,51,48,0,0,0,"1,00",12,14,11
"org.apache.cassandra.db.marshal.AbstractCompositeType",1,0,24,24,1,0,0,13,216,194,0,0,0,"2,21",22,27,42
"org.apache.cassandra.db.marshal.AbstractCompositeType.ParsedComparator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.apache.cassandra.db.marshal.AbstractType",43,5,21,26,200,0,0,17,139,115,0,0,0,"1,46",19,22,19
"org.apache.cassandra.db.marshal.AbstractUUIDType",0,0,8,8,0,0,0,8,35,35,0,0,0,"1,00",8,8,8
"org.apache.cassandra.db.marshal.AsciiType",3,1,16,17,3,0,0,12,78,77,0,0,0,"1,12",14,19,18
"org.apache.cassandra.db.marshal.BooleanType",1,1,16,17,3,0,0,13,86,86,0,0,0,"1,75",14,16,28
"org.apache.cassandra.db.marshal.BytesType",5,1,17,18,200,0,0,14,80,79,0,0,0,"1,12",15,20,19
"org.apache.cassandra.db.marshal.CompositeType",2,2,9,11,2,0,0,3,74,52,0,0,0,"1,33",8,11,12
"org.apache.cassandra.db.marshal.CompositeType.StaticParsedComparator",1,2,5,7,0,0,0,4,23,23,0,0,0,"1,00",3,5,5
"org.apache.cassandra.db.marshal.CounterColumnType",1,1,7,8,3,0,0,5,35,32,0,0,0,"1,43",5,10,10
"org.apache.cassandra.db.marshal.DateType",2,3,16,19,201,0,0,13,122,117,0,0,0,"1,62",14,19,26
"org.apache.cassandra.db.marshal.DoubleType",1,1,16,17,3,0,0,11,94,93,0,0,0,"1,50",14,17,24
"org.apache.cassandra.db.marshal.DynamicCompositeType",3,3,10,13,6,0,0,4,148,126,0,0,0,"1,80",9,12,18
"org.apache.cassandra.db.marshal.DynamicCompositeType.DynamicParsedComparator",4,4,5,9,6,0,0,3,59,56,0,0,0,"2,20",3,6,11
"org.apache.cassandra.db.marshal.FloatType",2,1,16,17,3,0,0,11,94,93,0,0,0,"1,50",14,17,24
"org.apache.cassandra.db.marshal.IntegerType",2,1,17,18,3,0,0,13,150,135,0,0,0,"2,12",15,18,36
"org.apache.cassandra.db.marshal.LexicalUUIDType",3,1,9,10,5,0,0,6,65,63,0,0,0,"1,78",7,11,16
"org.apache.cassandra.db.marshal.LocalByPartionerType",5,1,16,17,200,0,0,14,70,68,0,0,0,"1,00",14,19,16
"org.apache.cassandra.db.marshal.LongType",1,1,16,17,3,0,0,13,97,96,0,0,0,"1,50",14,18,24
"org.apache.cassandra.db.marshal.MarshalException",14,0,2,2,0,0,0,0,11,11,0,0,0,"1,00",0,2,2
"org.apache.cassandra.db.marshal.ReversedType",1,2,19,21,1,0,0,3,102,99,0,0,0,"1,26",17,20,24
"org.apache.cassandra.db.marshal.TimeUUIDType",5,3,10,13,200,0,0,6,152,147,0,0,0,"3,20",8,15,32
"org.apache.cassandra.db.marshal.TypeParser",7,4,22,26,200,0,0,4,341,314,0,0,0,"2,55",19,24,56
"org.apache.cassandra.db.marshal.UTF8Type",2,1,16,17,5,0,0,12,73,73,0,0,0,"1,06",14,20,17
"org.apache.cassandra.db.marshal.UTF8Type.UTF8Validator",2,0,1,1,1,0,0,1,105,88,0,0,0,"28,00",1,1,28
"org.apache.cassandra.db.marshal.UTF8Type.UTF8Validator.State",1,8,0,8,0,n/a,0,0,10,10,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.db.marshal.UUIDType",3,1,10,11,201,0,0,6,196,171,0,0,0,"3,30",8,14,33
"org.apache.cassandra.db.migration.AddColumnFamily",4,1,7,8,201,0,0,1,88,67,0,0,0,"1,86",2,12,13
"org.apache.cassandra.db.migration.AddKeyspace",8,1,6,7,201,0,0,1,58,54,0,0,0,"2,00",1,20,12
"org.apache.cassandra.db.migration.DropColumnFamily",10,2,7,9,201,0,0,1,89,69,0,0,0,"1,43",2,22,10
"org.apache.cassandra.db.migration.DropKeyspace",10,1,6,7,201,0,0,1,68,64,0,0,0,"1,50",1,22,9
"org.apache.cassandra.db.migration.Migration",17,10,16,26,200,0,0,2,242,192,0,0,0,"1,85",8,37,24
"org.apache.cassandra.db.migration.RenameColumnFamily",8,4,7,11,201,0,0,1,89,79,0,0,0,"1,71",2,20,12
"org.apache.cassandra.db.migration.RenameKeyspace",8,2,8,10,201,0,0,1,100,91,0,0,0,"2,62",2,23,21
"org.apache.cassandra.db.migration.UpdateColumnFamily",6,1,6,7,201,0,0,1,67,61,0,0,0,"1,83",1,11,11
"org.apache.cassandra.db.migration.UpdateKeyspace",7,2,6,8,201,0,0,1,72,52,0,0,0,"1,33",1,20,8
"org.apache.cassandra.dht.AbstractBounds",11,5,9,14,4,0,0,2,62,48,0,0,0,"1,33",8,10,8
"org.apache.cassandra.dht.AbstractBounds.AbstractBoundsSerializer",3,0,4,4,4,0,1,1,15,15,0,0,0,"2,00",1,2,4
"org.apache.cassandra.dht.AbstractBounds.Type",1,2,0,2,0,n/a,0,0,5,5,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.dht.AbstractByteOrderedPartitioner",9,3,11,14,201,0,0,7,157,141,0,0,0,"1,73",11,16,26
"org.apache.cassandra.dht.BigIntegerToken",0,1,3,4,0,0,0,1,16,15,0,0,0,"1,00",1,3,3
"org.apache.cassandra.dht.BootStrapper",16,5,9,14,205,0,0,1,189,175,0,0,0,"3,18",7,32,35
"org.apache.cassandra.dht.BootStrapper.BootstrapTokenCallback",5,2,4,6,203,0,1,2,27,27,0,0,0,"1,33",2,5,4
"org.apache.cassandra.dht.BootStrapper.BootstrapTokenVerbHandler",4,0,2,2,201,0,1,1,10,10,0,0,0,"1,00",0,8,1
"org.apache.cassandra.dht.Bounds",2,0,7,7,201,0,0,3,37,35,0,0,0,"1,14",5,8,8
"org.apache.cassandra.dht.ByteOrderedPartitioner",0,0,1,1,0,0,0,1,9,9,0,0,0,"2,00",1,1,2
"org.apache.cassandra.dht.BytesToken",2,1,6,7,201,0,0,1,37,37,0,0,0,"1,33",4,8,8
"org.apache.cassandra.dht.CollatingOrderPreservingPartitioner",1,1,2,3,3,0,0,2,20,20,0,0,0,"1,50",2,3,3
"org.apache.cassandra.dht.IPartitioner",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,9,n/a
"org.apache.cassandra.dht.LocalPartitioner",3,1,10,11,201,0,0,5,44,44,0,0,0,"1,00",9,11,10
"org.apache.cassandra.dht.LocalToken",2,2,5,7,200,0,0,1,35,35,0,0,0,"1,40",4,5,7
"org.apache.cassandra.dht.OrderPreservingPartitioner",9,3,11,14,203,0,0,7,155,139,0,0,0,"1,75",11,18,28
"org.apache.cassandra.dht.RandomPartitioner",8,4,9,13,200,0,0,6,132,120,0,0,0,"1,64",9,14,23
"org.apache.cassandra.dht.Range",30,1,21,22,200,0,0,2,293,220,1,0,0,"2,38",19,23,50
"org.apache.cassandra.dht.StringToken",0,1,2,3,0,0,0,1,12,12,0,0,0,"1,00",1,2,2
"org.apache.cassandra.dht.Token",27,3,6,9,200,0,0,2,33,30,0,0,0,"1,20",5,6,6
"org.apache.cassandra.dht.Token.TokenFactory",3,0,5,5,201,0,0,4,8,8,0,0,0,n/a,4,5,0
"org.apache.cassandra.dht.Token.TokenSerializer",5,0,4,4,200,0,1,2,17,17,0,0,0,"1,00",1,4,2
"org.apache.cassandra.gms.ApplicationState",2,13,0,13,0,n/a,0,0,17,16,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.gms.ArrivalWindow",2,4,10,14,1,0,0,1,66,61,0,0,0,"1,20",7,15,12
"org.apache.cassandra.gms.EndpointState",2,7,14,21,2,0,0,5,84,71,0,0,0,"1,00",7,14,14
"org.apache.cassandra.gms.EndpointStateSerializer",2,1,4,5,2,0,1,2,39,37,0,0,0,"3,00",1,5,6
"org.apache.cassandra.gms.EndpointStatesSerializationHelper",1,1,2,3,2,0,0,2,27,27,0,0,0,"2,00",1,4,4
"org.apache.cassandra.gms.FailureDetector",7,6,13,19,200,0,0,4,142,130,0,0,0,"1,85",4,20,24
"org.apache.cassandra.gms.FailureDetectorMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.apache.cassandra.gms.GossipDigest",2,4,7,11,4,0,0,3,53,49,0,0,0,"1,14",6,7,8
"org.apache.cassandra.gms.GossipDigestAck2Message",2,2,3,5,2,0,0,2,25,21,0,0,0,"1,00",2,3,3
"org.apache.cassandra.gms.GossipDigestAck2MessageSerializer",2,0,4,4,2,0,1,2,13,12,0,0,0,"1,00",1,3,2
"org.apache.cassandra.gms.GossipDigestAck2VerbHandler",2,1,2,3,201,0,1,1,25,24,0,0,0,"2,00",0,4,2
"org.apache.cassandra.gms.GossipDigestAckMessage",2,3,4,7,2,0,0,3,31,27,0,0,0,"1,00",3,4,4
"org.apache.cassandra.gms.GossipDigestAckMessageSerializer",2,0,4,4,2,0,1,2,16,16,0,0,0,"1,00",1,3,2
"org.apache.cassandra.gms.GossipDigestAckVerbHandler",3,1,2,3,201,0,1,1,48,46,0,0,0,"8,00",0,6,8
"org.apache.cassandra.gms.GossipDigestSerializationHelper",1,1,2,3,0,0,0,2,23,23,0,0,0,"2,00",1,2,4
"org.apache.cassandra.gms.GossipDigestSerializer",3,0,4,4,4,0,1,2,16,16,0,0,0,"1,00",1,5,2
"org.apache.cassandra.gms.GossipDigestSynMessage",2,3,3,6,3,0,0,2,27,23,0,0,0,"1,00",2,3,3
"org.apache.cassandra.gms.GossipDigestSynMessageSerializer",3,0,4,4,3,0,1,2,14,14,0,0,0,"1,00",1,5,2
"org.apache.cassandra.gms.GossipDigestSynVerbHandler",4,1,3,4,201,0,1,1,94,76,0,0,0,"6,50",0,8,13
"org.apache.cassandra.gms.Gossiper",24,19,50,69,200,0,0,4,821,657,0,0,0,"2,80",18,61,143
"org.apache.cassandra.gms.Gossiper.GossipTask",5,0,1,1,200,0,0,1,52,36,0,0,0,"3,00",0,9,6
"org.apache.cassandra.gms.HeartBeatState",2,3,7,10,2,0,0,3,42,39,0,0,0,"1,00",3,7,7
"org.apache.cassandra.gms.HeartBeatStateSerializer",2,0,4,4,2,0,1,2,12,12,0,0,0,"1,00",1,5,2
"org.apache.cassandra.gms.IEndpointStateChangeSubscriber",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.apache.cassandra.gms.IFailureDetectionEventListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.gms.IFailureDetector",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.apache.cassandra.gms.IFailureNotification",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.gms.PureRandom",0,2,3,5,0,0,0,2,50,44,0,0,0,"3,00",1,3,9
"org.apache.cassandra.gms.VersionGenerator",0,1,1,2,0,0,0,1,12,8,0,0,0,"1,00",1,1,1
"org.apache.cassandra.gms.VersionedValue",4,13,4,17,2,0,0,1,49,35,0,0,0,"1,00",2,4,4
"org.apache.cassandra.gms.VersionedValue.VersionedValueFactory",4,1,15,16,203,0,0,7,64,64,0,0,0,"1,00",14,18,15
"org.apache.cassandra.gms.VersionedValue.VersionedValueSerializer",2,0,4,4,2,0,1,2,14,14,0,0,0,"1,00",1,3,2
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat",5,3,6,9,203,0,0,2,191,169,0,0,0,"3,00",5,13,18
"org.apache.cassandra.hadoop.ColumnFamilyInputFormat.SplitCallable",2,2,2,4,203,0,0,1,33,27,0,0,0,"2,00",1,3,4
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat",2,3,7,10,204,0,0,7,116,56,0,0,0,"1,29",4,7,9
"org.apache.cassandra.hadoop.ColumnFamilyOutputFormat.NullOutputCommitter",1,0,6,6,0,0,0,6,15,12,0,0,0,"1,00",1,6,6
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader",3,11,7,18,204,0,0,1,115,109,0,0,0,"2,00",5,9,14
"org.apache.cassandra.hadoop.ColumnFamilyRecordReader.RowIterator",8,7,9,16,204,0,0,1,141,130,0,0,0,"2,56",7,13,23
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter",4,6,6,12,204,0,0,1,123,67,0,0,0,"1,67",0,13,10
"org.apache.cassandra.hadoop.ColumnFamilyRecordWriter.RangeClient",2,7,6,13,204,0,0,1,149,124,0,0,0,"3,00",1,6,18
"org.apache.cassandra.hadoop.ColumnFamilySplit",1,3,10,13,1,0,0,2,72,67,0,0,0,"1,30",6,10,13
"org.apache.cassandra.hadoop.ConfigHelper",4,20,31,51,203,0,0,15,267,214,0,0,0,"1,16",22,34,36
"org.apache.cassandra.io.DeletionService",5,2,2,4,2,0,0,1,20,20,0,0,0,"1,00",0,3,4
"org.apache.cassandra.io.IColumnSerializer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.io.ICompactSerializer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.io.ICompactSerializer2",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.io.ICompactSerializer3",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.io.SerDeUtils",6,1,6,7,4,0,0,5,79,47,0,0,0,"1,00",6,9,6
"org.apache.cassandra.io.sstable.AbstractSSTableSimpleWriter",6,6,12,18,201,0,0,2,115,80,0,0,0,"1,80",3,16,18
"org.apache.cassandra.io.sstable.BloomFilterTracker",0,4,6,10,0,0,0,2,47,47,0,0,0,"1,00",4,6,6
"org.apache.cassandra.io.sstable.Component",2,9,7,16,2,0,0,1,102,85,0,0,0,"2,71",5,9,19
"org.apache.cassandra.io.sstable.Component.Type",1,7,2,9,2,n/a,0,1,28,21,n/a,0,0,"2,00",1,2,4
"org.apache.cassandra.io.sstable.Descriptor",9,14,16,30,200,0,0,2,195,145,0,0,0,"1,75",14,17,28
"org.apache.cassandra.io.sstable.IndexHelper",9,0,7,7,202,0,0,5,119,54,0,0,0,"2,14",5,12,15
"org.apache.cassandra.io.sstable.IndexHelper.IndexInfo",7,4,4,8,1,0,0,2,29,29,0,0,0,"1,00",2,4,4
"org.apache.cassandra.io.sstable.IndexSummary",3,2,7,9,202,0,0,1,44,38,0,0,0,"1,29",2,9,9
"org.apache.cassandra.io.sstable.IndexSummary.KeyPosition",2,2,3,5,201,0,0,1,24,18,0,0,0,"1,00",2,4,3
"org.apache.cassandra.io.sstable.KeyIterator",4,2,5,7,201,0,0,1,54,54,0,0,0,"1,20",3,12,6
"org.apache.cassandra.io.sstable.ReducingKeyIterator",5,2,8,10,200,0,0,4,66,66,0,0,0,"1,40",5,10,14
"org.apache.cassandra.io.sstable.SSTable",10,13,18,31,200,0,0,9,214,176,0,0,0,"1,53",15,23,29
"org.apache.cassandra.io.sstable.SSTableBoundedScanner",4,2,3,5,202,0,0,2,43,40,0,0,0,"2,67",2,3,8
"org.apache.cassandra.io.sstable.SSTableBoundedScanner.BoundedKeyScanningIterator",2,0,1,1,202,0,0,1,21,21,0,0,0,"4,00",1,1,4
"org.apache.cassandra.io.sstable.SSTableDeletingReference",4,7,3,10,200,0,0,1,32,29,0,0,0,"1,33",0,3,4
"org.apache.cassandra.io.sstable.SSTableDeletingReference.CleanupTask",4,1,1,2,200,0,0,1,25,23,0,0,0,"3,00",0,2,3
"org.apache.cassandra.io.sstable.SSTableIdentityIterator",13,12,18,30,201,0,1,3,183,160,0,0,0,"1,33",7,27,20
"org.apache.cassandra.io.sstable.SSTableLoader",8,4,5,9,200,0,0,1,94,89,0,0,0,"2,33",4,11,14
"org.apache.cassandra.io.sstable.SSTableLoader.Client",5,1,5,6,200,0,0,4,38,21,2,0,0,"1,33",2,5,4
"org.apache.cassandra.io.sstable.SSTableLoader.CountDownCallback",3,2,2,4,200,0,0,1,18,17,0,0,0,"1,50",0,4,3
"org.apache.cassandra.io.sstable.SSTableLoader.LoaderFuture",3,2,8,10,0,0,0,4,41,40,0,0,0,"1,00",6,8,8
"org.apache.cassandra.io.sstable.SSTableLoader.OutputHandler",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.io.sstable.SSTableReader",36,12,41,53,200,0,0,12,640,542,0,0,0,"2,30",33,67,108
"org.apache.cassandra.io.sstable.SSTableReader.Operator",4,3,1,4,3,0,0,1,14,7,3,0,0,n/a,1,1,0
"org.apache.cassandra.io.sstable.SSTableReader.Operator.Equals",1,0,2,2,3,1,0,1,4,4,0,0,0,"1,00",1,1,1
"org.apache.cassandra.io.sstable.SSTableReader.Operator.GreaterThan",1,0,2,2,3,1,0,1,4,4,0,0,0,"2,00",1,1,2
"org.apache.cassandra.io.sstable.SSTableReader.Operator.GreaterThanOrEqualTo",1,0,2,2,3,1,0,1,4,4,0,0,0,"2,00",1,1,2
"org.apache.cassandra.io.sstable.SSTableScanner",7,7,10,17,202,0,0,2,103,96,0,0,0,"1,50",5,15,15
"org.apache.cassandra.io.sstable.SSTableScanner.KeyScanningIterator",6,1,4,5,202,0,0,2,55,55,0,0,0,"1,75",3,10,7
"org.apache.cassandra.io.sstable.SSTableSimpleUnsortedWriter",2,3,5,8,201,0,0,1,76,53,0,0,0,"2,00",1,6,10
"org.apache.cassandra.io.sstable.SSTableSimpleWriter",2,1,5,6,201,0,0,2,51,32,0,0,0,"1,40",1,6,7
"org.apache.cassandra.io.sstable.SSTableWriter",25,6,15,21,208,0,0,2,170,158,0,0,0,"1,40",7,41,21
"org.apache.cassandra.io.sstable.SSTableWriter.Builder",8,4,4,8,208,0,0,1,67,59,0,0,0,"1,75",2,14,7
"org.apache.cassandra.io.sstable.SSTableWriter.CommutativeRowIndexer",12,6,10,16,208,1,0,1,61,45,0,3,2,"1,67",1,18,5
"org.apache.cassandra.io.sstable.SSTableWriter.IndexWriter",14,7,5,12,208,0,0,1,63,51,0,0,0,"1,20",0,20,6
"org.apache.cassandra.io.sstable.SSTableWriter.RowIndexer",14,5,7,12,208,0,0,1,133,119,1,0,0,"1,86",3,25,13
"org.apache.cassandra.io.util.AbstractDataInput",1,0,16,16,1,0,0,5,308,127,0,0,0,"2,43",13,16,34
"org.apache.cassandra.io.util.BufferedRandomAccessFile",20,17,34,51,3,0,0,3,384,316,0,0,0,"2,00",17,37,68
"org.apache.cassandra.io.util.BufferedRandomAccessFile.BufferedRandomAccessFileMark",1,1,1,2,0,0,0,0,11,8,0,0,0,"1,00",0,1,1
"org.apache.cassandra.io.util.BufferedSegmentedFile",1,0,2,2,0,0,0,1,20,20,0,0,0,"1,00",1,2,2
"org.apache.cassandra.io.util.BufferedSegmentedFile.Builder",1,0,2,2,1,0,0,2,21,11,0,0,0,"1,00",1,3,2
"org.apache.cassandra.io.util.ColumnIterator",5,7,5,12,200,0,0,2,62,62,0,0,0,"1,12",3,6,9
"org.apache.cassandra.io.util.ColumnSet",5,6,14,20,200,0,0,12,69,69,0,0,0,"1,00",12,15,14
"org.apache.cassandra.io.util.ColumnSortedMap",5,7,19,26,200,0,0,17,96,91,0,0,0,"1,00",16,20,19
"org.apache.cassandra.io.util.DataOutputBuffer",14,0,7,7,0,0,0,1,46,33,0,0,0,"1,00",5,7,7
"org.apache.cassandra.io.util.FileDataInput",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.apache.cassandra.io.util.FileMark",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.cassandra.io.util.FileUtils",22,6,14,20,0,0,0,7,193,187,0,0,0,"2,71",3,14,38
"org.apache.cassandra.io.util.FileUtils.FileComparator",1,0,1,1,0,0,0,1,7,7,0,0,0,"1,00",1,1,1
"org.apache.cassandra.io.util.IIterableColumns",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.io.util.MappedFileDataInput",1,3,17,20,1,0,0,5,111,104,0,0,0,"1,18",11,18,20
"org.apache.cassandra.io.util.MappedFileDataInput.MappedFileDataInputMark",1,1,1,2,0,0,0,0,8,8,0,0,0,"1,00",0,1,1
"org.apache.cassandra.io.util.MemoryInputStream",2,2,6,8,1,0,0,2,30,29,0,0,0,"1,00",3,7,6
"org.apache.cassandra.io.util.MemoryOutputStream",1,2,3,5,0,0,0,1,22,19,0,0,0,"1,00",1,3,3
"org.apache.cassandra.io.util.MmappedSegmentedFile",1,2,3,5,0,0,0,1,54,38,0,0,0,"1,67",2,3,5
"org.apache.cassandra.io.util.MmappedSegmentedFile.Builder",1,3,4,7,1,0,0,1,78,66,0,0,0,"2,25",2,5,9
"org.apache.cassandra.io.util.OutputBuffer",1,0,6,6,0,0,0,4,45,37,0,0,0,"1,33",3,6,8
"org.apache.cassandra.io.util.SegmentedFile",7,2,5,7,6,0,0,3,45,27,0,0,0,"1,25",4,6,5
"org.apache.cassandra.io.util.SegmentedFile.Builder",4,0,2,2,6,0,0,2,17,5,0,0,0,n/a,1,2,0
"org.apache.cassandra.io.util.SegmentedFile.Segment",1,2,6,8,1,1,0,1,11,11,0,3,0,"1,00",1,3,2
"org.apache.cassandra.io.util.SegmentedFile.SegmentIterator",1,2,4,6,6,0,0,2,34,31,0,0,0,"1,25",2,5,5
"org.apache.cassandra.locator.AbstractEndpointSnitch",0,1,4,5,0,0,0,4,14,13,0,0,0,"1,00",2,4,2
"org.apache.cassandra.locator.AbstractNetworkTopologySnitch",0,0,5,5,0,0,0,1,71,43,0,0,0,"2,50",4,5,10
"org.apache.cassandra.locator.AbstractReplicationStrategy",14,6,19,25,200,0,0,5,227,181,0,0,0,"2,06",13,23,33
"org.apache.cassandra.locator.AdaptiveLatencyTracker",2,1,15,16,1,1,0,1,40,38,0,5,0,"1,33",3,7,8
"org.apache.cassandra.locator.DynamicEndpointSnitch",5,11,20,31,200,0,0,4,221,216,0,0,0,"1,87",10,30,43
"org.apache.cassandra.locator.DynamicEndpointSnitchMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.apache.cassandra.locator.Ec2Snitch",6,4,5,9,201,0,0,2,60,52,0,0,0,"1,80",3,9,9
"org.apache.cassandra.locator.EndpointSnitchInfo",1,0,3,3,201,0,0,3,23,23,0,0,0,"1,00",2,4,3
"org.apache.cassandra.locator.EndpointSnitchInfoMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.locator.IEndpointSnitch",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.apache.cassandra.locator.ILatencySubscriber",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.locator.LocalStrategy",3,0,4,4,201,0,0,3,19,18,0,0,0,"1,00",2,5,4
"org.apache.cassandra.locator.NetworkTopologyStrategy",7,3,6,9,200,0,0,2,105,89,0,0,0,"3,17",4,8,19
"org.apache.cassandra.locator.OldNetworkTopologyStrategy",2,0,4,4,201,0,0,2,78,65,0,0,0,"3,50",2,5,14
"org.apache.cassandra.locator.PropertyFileSnitch",7,4,5,9,200,0,0,1,123,95,0,0,0,"1,83",3,12,11
"org.apache.cassandra.locator.RackInferringSnitch",0,0,2,2,0,0,0,2,15,11,0,0,0,"1,00",2,2,2
"org.apache.cassandra.locator.SeedProvider",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.locator.SimpleSeedProvider",0,2,3,5,0,0,0,1,32,30,0,0,0,"1,67",1,3,5
"org.apache.cassandra.locator.SimpleSnitch",1,0,4,4,0,0,0,4,23,18,0,0,0,"1,00",3,4,4
"org.apache.cassandra.locator.SimpleStrategy",2,0,4,4,201,0,0,2,40,33,0,0,0,"1,75",2,5,7
"org.apache.cassandra.locator.TokenMetadata",9,9,42,51,200,0,0,2,583,511,0,0,0,"2,02",28,45,87
"org.apache.cassandra.net.AsyncResult",0,7,5,12,0,0,0,2,71,71,0,0,0,"1,60",3,5,8
"org.apache.cassandra.net.CachingMessageProducer",1,2,2,4,0,0,0,1,19,19,0,0,0,"1,50",1,2,3
"org.apache.cassandra.net.CompactEndpointSerializationHelper",5,0,2,2,1,0,0,1,15,15,0,0,0,"1,00",1,2,2
"org.apache.cassandra.net.Header",3,4,8,12,202,0,0,4,48,47,0,0,0,"1,00",4,8,8
"org.apache.cassandra.net.HeaderSerializer",4,0,4,4,202,0,1,2,36,34,0,0,0,"2,00",1,5,4
"org.apache.cassandra.net.HeaderTypes",0,2,0,2,0,0,0,0,5,5,0,0,0,n/a,0,0,0
"org.apache.cassandra.net.IAsyncCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.net.IAsyncResult",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.cassandra.net.IMessageCallback",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.net.IVerbHandler",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.net.IncomingTcpConnection",8,3,4,7,203,0,0,1,140,123,0,0,0,"4,25",0,13,17
"org.apache.cassandra.net.Message",59,4,14,18,200,0,0,6,83,81,0,0,0,"1,00",10,15,14
"org.apache.cassandra.net.Message.MessageSerializer",3,0,4,4,200,0,1,2,19,19,0,0,0,"1,00",1,5,2
"org.apache.cassandra.net.MessageDeliveryTask",2,4,2,6,201,0,0,1,30,30,0,0,0,"2,00",0,3,4
"org.apache.cassandra.net.MessageProducer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.net.MessagingService",55,24,46,70,200,0,0,9,576,463,0,0,0,"1,62",26,66,78
"org.apache.cassandra.net.MessagingService.MSHandle",1,1,0,1,200,0,0,0,4,4,0,0,0,n/a,0,1,0
"org.apache.cassandra.net.MessagingService.SocketThread",1,1,3,4,200,0,0,1,34,33,0,0,0,"1,33",0,3,4
"org.apache.cassandra.net.MessagingServiceMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,10,n/a
"org.apache.cassandra.net.OutboundTcpConnection",6,8,10,18,201,0,0,1,145,143,0,0,0,"2,10",4,16,21
"org.apache.cassandra.net.OutboundTcpConnectionPool",1,2,3,5,1,0,0,1,28,24,0,0,0,"1,67",1,3,5
"org.apache.cassandra.net.ProtocolHeader",0,7,0,7,0,0,0,0,10,10,0,0,0,n/a,0,0,0
"org.apache.cassandra.net.ResponseVerbHandler",2,1,1,2,1,0,0,1,28,28,0,0,0,"5,00",0,1,5
"org.apache.cassandra.net.io.SerializerType",1,4,0,4,0,n/a,0,0,7,7,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.net.sink.IMessageSink",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.net.sink.SinkManager",2,1,4,5,200,0,0,1,36,36,0,0,0,"2,50",2,4,10
"org.apache.cassandra.scheduler.IRequestScheduler",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.scheduler.NoScheduler",2,0,4,4,1,0,0,2,11,7,0,0,0,"1,00",0,4,4
"org.apache.cassandra.scheduler.RoundRobinScheduler",2,7,7,14,2,0,0,1,110,94,0,0,0,"1,88",3,8,15
"org.apache.cassandra.security.SSLFactory",4,3,4,7,2,0,0,1,55,49,0,0,0,"1,00",4,4,4
"org.apache.cassandra.security.streaming.SSLFileStreamTask",7,5,17,22,200,2,0,1,49,44,0,2,5,"1,00",1,11,6
"org.apache.cassandra.security.streaming.SSLIncomingStreamReader",4,5,6,11,202,1,0,1,25,20,0,2,1,"1,00",1,3,2
"org.apache.cassandra.service.AbstractCassandraDaemon",12,5,13,18,200,0,0,2,284,197,0,0,0,"2,25",1,29,27
"org.apache.cassandra.service.AbstractCassandraDaemon.CleaningThreadPool",1,1,2,3,1,0,0,1,20,16,0,0,0,"1,00",0,3,2
"org.apache.cassandra.service.AbstractRowResolver",6,5,4,9,205,0,0,1,39,38,0,0,0,"1,50",1,11,6
"org.apache.cassandra.service.AbstractWriteResponseHandler",3,5,4,9,202,0,0,3,35,34,0,0,0,"1,50",0,6,3
"org.apache.cassandra.service.AntiEntropyService",13,4,7,11,200,0,0,3,152,90,0,0,0,"1,71",4,20,12
"org.apache.cassandra.service.AntiEntropyService.CFPair",3,0,1,1,0,0,0,0,11,8,0,0,0,"1,00",0,1,1
"org.apache.cassandra.service.AntiEntropyService.RepairFuture",2,1,1,2,200,0,0,0,9,9,0,0,0,"1,00",0,1,1
"org.apache.cassandra.service.AntiEntropyService.RepairSession",9,11,15,26,200,0,0,6,140,127,0,0,0,"1,67",2,20,25
"org.apache.cassandra.service.AntiEntropyService.RepairSession.Differencer",12,5,4,9,200,0,0,1,78,62,0,0,0,"1,75",1,10,7
"org.apache.cassandra.service.AntiEntropyService.RepairSession.Differencer.Callback",3,1,1,2,200,0,0,1,18,11,0,0,0,"2,00",0,2,2
"org.apache.cassandra.service.AntiEntropyService.RepairSession.RepairJob",4,4,5,9,200,0,0,1,60,46,0,0,0,"1,60",2,8,8
"org.apache.cassandra.service.AntiEntropyService.TreePair",0,0,1,1,0,0,0,0,10,7,0,0,0,"1,00",0,1,1
"org.apache.cassandra.service.AntiEntropyService.TreeRequest",9,4,4,8,200,0,0,0,36,32,0,0,0,"1,25",3,4,5
"org.apache.cassandra.service.AntiEntropyService.TreeRequestVerbHandler",17,1,7,8,200,0,2,1,65,57,0,0,0,"1,50",2,19,6
"org.apache.cassandra.service.AntiEntropyService.TreeResponseVerbHandler",7,1,7,8,200,0,2,1,59,54,0,0,0,"1,00",2,13,4
"org.apache.cassandra.service.AntiEntropyService.Validator",10,8,8,16,200,0,0,2,150,102,0,0,0,"2,12",1,13,17
"org.apache.cassandra.service.AsyncRepairCallback",4,3,4,7,202,0,1,2,29,29,0,0,0,"1,25",1,4,5
"org.apache.cassandra.service.CassandraDaemon",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,9,n/a
"org.apache.cassandra.service.ClientState",14,4,14,18,204,0,0,1,125,101,0,0,0,"1,57",2,21,22
"org.apache.cassandra.service.DatacenterReadCallback",7,2,6,8,203,0,0,2,68,63,0,0,0,"2,50",4,13,15
"org.apache.cassandra.service.DatacenterSyncWriteResponseHandler",6,4,5,9,201,0,0,3,69,62,0,0,0,"2,80",2,13,14
"org.apache.cassandra.service.DatacenterWriteResponseHandler",6,2,5,7,201,0,0,2,50,47,0,0,0,"2,00",2,12,10
"org.apache.cassandra.service.DigestMismatchException",2,0,1,1,201,0,0,0,10,10,0,0,0,"1,00",0,3,1
"org.apache.cassandra.service.EmbeddedCassandraService",1,1,1,2,201,0,0,1,28,10,0,0,0,"1,00",0,1,1
"org.apache.cassandra.service.GCInspector",2,10,3,13,203,0,0,1,94,92,0,0,0,"4,25",0,6,17
"org.apache.cassandra.service.IReadCommand",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.service.IResponseResolver",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.apache.cassandra.service.IWriteResponseHandler",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.cassandra.service.IndexScanVerbHandler",4,1,2,3,201,0,1,1,22,22,0,0,0,"2,00",0,5,2
"org.apache.cassandra.service.MigrationManager",13,2,13,15,200,0,0,6,172,143,0,0,0,"1,64",2,27,23
"org.apache.cassandra.service.RangeSliceResponseResolver",7,4,6,10,205,0,0,1,95,86,0,0,0,"1,60",4,12,16
"org.apache.cassandra.service.RangeSliceResponseResolver.RowIterator",3,2,2,4,203,0,0,1,14,14,0,0,0,"1,50",1,3,3
"org.apache.cassandra.service.RangeSliceVerbHandler",8,1,2,3,207,0,1,1,29,28,0,0,0,"3,00",0,12,3
"org.apache.cassandra.service.ReadCallback",13,8,13,21,209,0,1,3,149,134,0,0,0,"2,50",7,24,30
"org.apache.cassandra.service.ReadCallback.AsyncRepairRunner",5,0,3,3,209,1,0,1,20,20,0,1,0,"3,00",0,2,3
"org.apache.cassandra.service.RepairCallback",4,5,5,10,203,0,1,2,45,37,0,0,0,"1,50",2,7,6
"org.apache.cassandra.service.RowDigestResolver",4,0,4,4,205,0,0,3,88,66,0,0,0,"4,25",3,9,17
"org.apache.cassandra.service.RowRepairResolver",6,0,6,6,201,0,0,3,116,94,0,0,0,"3,33",4,13,20
"org.apache.cassandra.service.SocketSessionManagementService",4,3,4,7,0,0,0,1,36,36,0,0,0,"1,75",2,4,7
"org.apache.cassandra.service.StorageLoadBalancer",2,8,16,24,201,0,0,6,201,143,0,0,0,"1,82",7,17,31
"org.apache.cassandra.service.StorageLoadBalancer.LoadBalancer",1,0,2,2,202,0,0,1,96,10,0,0,0,"1,00",0,2,2
"org.apache.cassandra.service.StorageProxy",23,11,43,54,207,0,0,2,910,760,0,0,0,"2,62",34,76,136
"org.apache.cassandra.service.StorageProxy.DroppableRunnable",3,2,3,5,201,0,0,1,26,26,4,0,0,"1,50",0,6,3
"org.apache.cassandra.service.StorageProxy.LocalReadRunnable",3,5,5,10,207,1,0,1,21,21,0,1,0,"1,50",0,5,3
"org.apache.cassandra.service.StorageProxy.WritePerformer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.cassandra.service.StorageProxyMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,19,n/a
"org.apache.cassandra.service.StorageService",87,22,130,152,200,0,0,23,2.210,1.794,0,0,0,"2,59",65,226,362
"org.apache.cassandra.service.StorageService.Verb",15,28,0,28,0,n/a,0,0,35,32,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.service.StorageServiceMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,57,n/a
"org.apache.cassandra.service.TruncateResponseHandler",4,5,5,10,203,0,1,2,43,41,0,0,0,"1,50",1,7,6
"org.apache.cassandra.service.WriteResponseHandler",3,2,8,10,201,0,0,5,78,73,0,0,0,"2,62",4,11,21
"org.apache.cassandra.streaming.FileStreamTask",9,6,11,17,200,1,0,1,127,116,1,1,0,"1,89",1,16,17
"org.apache.cassandra.streaming.IncomingStreamReader",4,5,4,9,2,0,0,1,77,70,1,0,0,"2,50",1,5,10
"org.apache.cassandra.streaming.OperationType",7,5,0,5,0,n/a,0,0,11,8,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.streaming.PendingFile",5,8,7,15,202,0,0,2,56,52,0,0,0,"1,29",5,8,9
"org.apache.cassandra.streaming.PendingFile.PendingFileSerializer",5,0,4,4,202,0,1,1,37,36,0,0,0,"4,00",1,6,8
"org.apache.cassandra.streaming.ReplicationFinishedVerbHandler",4,1,2,3,201,0,1,1,12,12,0,0,0,"2,00",0,7,2
"org.apache.cassandra.streaming.StreamHeader",6,5,3,8,2,0,0,1,30,27,0,0,0,"1,00",1,3,3
"org.apache.cassandra.streaming.StreamHeader.StreamHeaderSerializer",2,0,4,4,2,0,1,2,27,27,0,0,0,"2,00",1,3,4
"org.apache.cassandra.streaming.StreamIn",10,1,2,3,200,0,0,2,37,26,0,0,0,"1,50",1,10,3
"org.apache.cassandra.streaming.StreamInSession",7,8,13,21,201,0,0,1,152,145,0,0,0,"2,31",6,20,30
"org.apache.cassandra.streaming.StreamOut",7,1,5,6,200,0,0,1,132,78,0,0,0,"1,60",2,9,8
"org.apache.cassandra.streaming.StreamOutSession",3,7,18,25,200,0,0,1,124,119,0,0,0,"1,67",9,21,30
"org.apache.cassandra.streaming.StreamReply",8,4,4,8,203,0,1,1,29,29,0,0,0,"1,00",2,6,3
"org.apache.cassandra.streaming.StreamReply.FileStatusSerializer",3,0,4,4,203,0,1,2,16,16,0,0,0,"1,00",1,4,2
"org.apache.cassandra.streaming.StreamReply.Status",2,3,0,3,0,n/a,0,0,6,6,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.streaming.StreamReplyVerbHandler",2,1,2,3,201,0,1,1,41,41,0,0,0,"6,00",0,4,6
"org.apache.cassandra.streaming.StreamRequestMessage",8,7,6,13,202,0,1,1,81,72,0,0,0,"1,40",3,8,7
"org.apache.cassandra.streaming.StreamRequestMessage.StreamRequestMessageSerializer",7,0,4,4,202,0,1,1,50,50,0,0,0,"4,50",1,9,9
"org.apache.cassandra.streaming.StreamRequestVerbHandler",2,1,2,3,201,0,1,1,27,23,0,0,0,"3,00",0,4,3
"org.apache.cassandra.streaming.StreamingService",1,2,6,8,0,0,0,4,74,68,0,0,0,"2,17",5,6,13
"org.apache.cassandra.streaming.StreamingServiceMBean",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.apache.cassandra.thrift.CassandraDaemon",4,6,3,9,200,0,0,2,49,41,0,0,0,"1,67",0,6,5
"org.apache.cassandra.thrift.CassandraDaemon.ThriftServer",4,1,3,4,200,0,0,1,105,92,0,0,0,"2,00",0,14,6
"org.apache.cassandra.thrift.CassandraServer",13,6,53,59,216,0,0,5,977,947,0,0,0,"2,36",36,83,130
"org.apache.cassandra.thrift.CustomTHsHaServer",2,4,7,11,3,0,0,2,97,74,0,0,0,"1,86",2,10,13
"org.apache.cassandra.thrift.CustomTHsHaServer.Invocation",3,2,2,4,3,0,0,1,21,17,0,0,0,"1,00",0,3,2
"org.apache.cassandra.thrift.CustomTHsHaServer.SelectorThread",2,3,10,13,3,0,0,1,143,130,0,0,0,"2,40",0,11,24
"org.apache.cassandra.thrift.CustomTNonBlockingServer",1,0,2,2,1,0,0,1,15,15,0,0,0,"1,00",1,2,2
"org.apache.cassandra.thrift.CustomTThreadPoolServer",1,5,3,8,1,0,0,1,97,80,0,0,0,"2,67",0,4,8
"org.apache.cassandra.thrift.CustomTThreadPoolServer.WorkerProcess",1,1,2,3,1,0,0,1,68,53,0,0,0,"2,50",0,2,5
"org.apache.cassandra.thrift.TBinaryProtocol",3,0,3,3,0,0,0,1,37,32,0,0,0,"1,67",0,3,5
"org.apache.cassandra.thrift.TBinaryProtocol.Factory",4,0,4,4,1,0,0,1,24,24,0,0,0,"1,25",1,5,5
"org.apache.cassandra.thrift.TCustomNonblockingServerSocket",1,4,2,6,1,0,0,1,54,53,0,0,0,"2,50",1,3,5
"org.apache.cassandra.thrift.TCustomServerSocket",0,4,2,6,0,0,0,1,64,52,0,0,0,"2,00",1,2,4
"org.apache.cassandra.thrift.ThriftValidation",14,1,27,28,202,0,0,13,611,572,0,0,0,"5,41",3,38,146
"org.apache.cassandra.tools.BulkLoader",5,6,1,7,208,0,0,1,50,49,0,0,0,"5,00",0,11,5
"org.apache.cassandra.tools.BulkLoader.CmdLineOptions",1,0,2,2,0,0,0,2,28,13,0,0,0,"1,00",2,2,2
"org.apache.cassandra.tools.BulkLoader.ExternalClient",9,3,10,13,202,1,0,1,74,72,0,2,1,"2,00",2,15,10
"org.apache.cassandra.tools.BulkLoader.LoaderOptions",4,5,9,14,208,0,1,2,109,109,0,0,0,"2,14",2,8,15
"org.apache.cassandra.tools.BulkLoader.ProgressIndicator",2,4,4,8,203,0,0,1,60,59,0,0,0,"2,50",2,4,10
"org.apache.cassandra.tools.ColumnFamilyStoreMBeanIterator",2,2,4,6,2,0,0,2,27,27,0,0,0,"1,00",2,4,4
"org.apache.cassandra.tools.GetVersion",1,0,1,1,201,0,0,1,5,5,0,0,0,"1,00",0,2,1
"org.apache.cassandra.tools.NodeCmd",14,8,20,28,209,0,0,1,659,626,0,0,0,"6,70",0,68,134
"org.apache.cassandra.tools.NodeCmd.NodeCommand",2,33,0,33,0,n/a,0,0,9,9,n/a,0,0,n/a,0,0,0
"org.apache.cassandra.tools.NodeCmd.ToolCommandLine",2,1,6,7,1,0,0,1,44,44,0,0,0,"1,50",5,7,9
"org.apache.cassandra.tools.NodeCmd.ToolOptions",2,0,3,3,1,0,0,1,17,17,0,0,0,"1,00",0,3,3
"org.apache.cassandra.tools.NodeProbe",17,15,66,81,212,0,0,1,470,423,0,0,0,"1,02",36,122,67
"org.apache.cassandra.tools.SSTableExport",10,6,11,17,201,0,0,2,326,243,0,0,0,"3,45",1,24,38
"org.apache.cassandra.tools.SSTableImport",11,9,11,20,210,0,0,1,325,267,0,0,0,"3,82",4,27,42
"org.apache.cassandra.tools.SSTableImport.JsonColumn",3,7,6,13,210,0,0,3,75,72,0,0,0,"2,33",5,7,14
"org.apache.cassandra.tools.ThreadPoolProxyMBeanIterator",2,2,4,6,1,0,0,2,28,28,0,0,0,"1,00",2,4,4
"org.apache.cassandra.utils.AbstractStatsDeque",1,0,9,9,0,0,0,4,42,39,1,0,0,"1,40",7,9,7
"org.apache.cassandra.utils.BloomCalculations",2,5,3,8,2,0,0,1,134,84,0,0,0,"3,67",3,4,11
"org.apache.cassandra.utils.BloomCalculations.BloomSpecification",1,2,2,4,0,0,0,0,18,14,0,0,0,"1,00",1,2,2
"org.apache.cassandra.utils.BloomFilter",4,4,12,16,3,0,0,3,101,86,0,0,0,"1,50",9,17,18
"org.apache.cassandra.utils.BloomFilterSerializer",3,0,4,4,3,0,1,2,22,22,0,0,0,"2,00",1,3,4
"org.apache.cassandra.utils.BoundedStatsDeque",1,2,5,7,0,0,0,1,33,30,0,0,0,"1,20",2,5,6
"org.apache.cassandra.utils.ByteBufferUtil",85,1,34,35,2,0,0,22,439,298,0,0,0,"1,81",29,36,67
"org.apache.cassandra.utils.CLibrary",2,14,13,27,0,0,0,2,204,183,0,0,0,"2,38",8,13,24
"org.apache.cassandra.utils.CloseableIterator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.cassandra.utils.DefaultDouble",0,2,4,6,0,0,0,1,39,22,0,0,0,"1,00",2,4,4
"org.apache.cassandra.utils.DefaultInteger",0,2,4,6,0,0,0,1,39,22,0,0,0,"1,00",2,4,4
"org.apache.cassandra.utils.DestructivePQIterator",0,1,4,5,0,0,0,2,15,15,0,0,0,"1,00",2,4,4
"org.apache.cassandra.utils.EstimatedHistogram",7,3,12,15,3,0,0,1,143,101,0,0,0,"2,17",7,12,26
"org.apache.cassandra.utils.EstimatedHistogram.EstimatedHistogramSerializer",4,0,4,4,3,0,1,2,25,25,0,0,0,"3,00",1,5,6
"org.apache.cassandra.utils.ExpiringMap",2,5,12,17,2,0,0,2,71,67,0,0,0,"1,42",9,14,17
"org.apache.cassandra.utils.ExpiringMap.CacheMonitor",2,0,1,1,2,0,0,1,16,16,0,0,0,"4,00",0,1,4
"org.apache.cassandra.utils.ExpiringMap.CacheableObject",2,3,3,6,0,0,0,2,21,21,0,0,0,"1,00",2,3,3
"org.apache.cassandra.utils.FBUtilities",86,9,38,47,200,0,0,26,590,489,0,0,0,"2,05",29,41,88
"org.apache.cassandra.utils.Filter",1,1,3,4,0,0,0,3,10,10,0,0,0,"1,00",2,3,1
"org.apache.cassandra.utils.GuidGenerator",2,3,4,7,1,0,0,1,72,68,0,0,0,"2,25",4,4,9
"org.apache.cassandra.utils.LatencyTracker",0,6,7,13,0,0,0,1,54,50,0,0,0,"1,00",5,7,7
"org.apache.cassandra.utils.LegacyBloomFilter",1,4,16,20,1,0,0,4,131,110,0,0,0,"1,44",13,16,23
"org.apache.cassandra.utils.LegacyBloomFilterSerializer",1,0,4,4,1,0,1,2,25,21,0,0,0,"1,00",1,2,2
"org.apache.cassandra.utils.MerkleTree",12,12,22,34,214,0,0,2,363,242,0,0,0,"2,27",16,43,50
"org.apache.cassandra.utils.MerkleTree.Hashable",10,3,8,11,206,0,0,1,56,40,2,0,0,"1,29",3,8,9
"org.apache.cassandra.utils.MerkleTree.Hashable.HashableSerializer",4,0,4,4,206,0,1,1,28,28,0,0,0,"3,00",1,4,6
"org.apache.cassandra.utils.MerkleTree.Inner",7,7,13,20,206,1,0,2,73,63,0,4,0,"1,43",3,11,10
"org.apache.cassandra.utils.MerkleTree.Inner.InnerSerializer",6,0,4,4,206,0,1,1,27,27,0,0,0,"2,50",1,8,5
"org.apache.cassandra.utils.MerkleTree.Leaf",7,4,11,15,206,1,0,0,39,27,0,4,0,"1,00",1,9,5
"org.apache.cassandra.utils.MerkleTree.Leaf.LeafSerializer",4,0,4,4,206,0,1,2,21,21,0,0,0,"2,50",1,3,5
"org.apache.cassandra.utils.MerkleTree.MerkleTreeSerializer",4,0,4,4,214,0,1,1,43,43,0,0,0,"2,00",1,5,4
"org.apache.cassandra.utils.MerkleTree.RowHash",3,2,2,4,207,0,0,0,20,15,0,0,0,"1,00",1,3,2
"org.apache.cassandra.utils.MerkleTree.StopRecursion",4,0,0,0,0,0,0,0,7,3,3,0,0,n/a,0,0,0
"org.apache.cassandra.utils.MerkleTree.StopRecursion.BadRange",2,0,1,1,1,1,0,0,4,4,0,0,0,"1,00",0,1,1
"org.apache.cassandra.utils.MerkleTree.StopRecursion.InvalidHash",1,0,1,1,1,1,0,0,4,4,0,0,0,"1,00",0,1,1
"org.apache.cassandra.utils.MerkleTree.StopRecursion.TooDeep",2,0,1,1,1,1,0,0,4,4,0,0,0,"1,00",0,1,1
"org.apache.cassandra.utils.MerkleTree.TreeRange",7,4,20,24,214,1,0,1,52,41,0,10,1,"1,17",2,11,7
"org.apache.cassandra.utils.MerkleTree.TreeRangeIterator",5,2,3,5,214,0,0,2,61,42,0,0,0,"2,33",2,6,7
"org.apache.cassandra.utils.MurmurHash",0,0,2,2,0,0,0,2,103,93,0,0,0,"8,00",2,2,16
"org.apache.cassandra.utils.Mx4jTool",1,1,3,4,0,0,0,1,60,50,0,0,0,"1,33",3,3,4
"org.apache.cassandra.utils.NodeId",10,3,15,18,200,0,0,4,103,80,0,0,0,"1,20",13,16,18
"org.apache.cassandra.utils.NodeId.LocalIds",2,1,0,1,200,0,0,0,6,4,0,0,0,n/a,0,1,0
"org.apache.cassandra.utils.NodeId.LocalNodeIdHistory",4,2,2,4,200,0,0,1,33,32,0,0,0,"1,50",0,7,3
"org.apache.cassandra.utils.NodeId.NodeIdRecord",4,2,3,5,200,0,0,0,24,24,0,0,0,"1,67",2,5,5
"org.apache.cassandra.utils.NodeId.OneShotRenewer",4,2,2,4,200,0,0,1,18,18,0,0,0,"1,50",0,5,3
"org.apache.cassandra.utils.Pair",37,2,5,7,0,0,0,1,34,33,1,0,0,"1,60",4,5,8
"org.apache.cassandra.utils.ReducingIterator",6,2,7,9,0,0,0,2,52,42,6,0,0,"2,00",4,7,10
"org.apache.cassandra.utils.ResourceWatcher",3,0,1,1,200,0,0,1,7,7,0,0,0,"1,00",0,2,1
"org.apache.cassandra.utils.ResourceWatcher.WatchedResource",1,4,2,6,0,0,0,1,30,30,0,0,0,"1,50",0,2,3
"org.apache.cassandra.utils.SimpleCondition",5,1,9,10,0,0,0,4,53,49,0,0,0,"1,22",4,9,11
"org.apache.cassandra.utils.SkipNullRepresenter",0,0,1,1,0,0,0,1,32,14,0,0,0,"2,00",1,1,2
"org.apache.cassandra.utils.StatusLogger",5,1,1,2,202,0,0,1,52,49,0,0,0,"5,00",0,13,5
"org.apache.cassandra.utils.UUIDGen",16,5,14,19,1,0,0,3,154,111,0,0,0,"1,57",13,14,22
"org.apache.cassandra.utils.WrappedRunnable",2,0,2,2,0,0,0,1,15,15,16,0,0,"1,00",0,2,1
"org.apache.cassandra.utils.XMLUtils",0,2,5,7,0,0,0,2,49,49,0,0,0,"1,60",4,5,8
"org.apache.cassandra.utils.obs.ArrayUtil",1,0,2,2,1,0,0,1,18,13,0,0,0,"1,50",2,2,3
"org.apache.cassandra.utils.obs.BitUtil",0,1,14,15,0,0,0,7,704,552,0,0,0,"3,71",14,14,52
"org.apache.cassandra.utils.obs.OpenBitSet",3,2,57,59,1,0,0,1,661,404,0,0,0,"1,86",28,58,106

Package,C(rec),LOC(rec),METH(rec)
"",722,70.117,4.691
"avro",n/a,123,n/a
"java",722,69.055,4.691
"java.org",722,69.055,4.691
"java.org.apache",722,69.055,4.691
"java.org.apache.cassandra",722,69.055,4.691
"java.org.apache.cassandra.auth",10,567,20
"java.org.apache.cassandra.cache",15,962,89
"java.org.apache.cassandra.cli",17,3.950,120
"java.org.apache.cassandra.client",1,122,5
"java.org.apache.cassandra.concurrent",14,1.035,74
"java.org.apache.cassandra.config",15,2.492,209
"java.org.apache.cassandra.cql",25,3.496,183
"java.org.apache.cassandra.db",216,19.811,1.531
"java.org.apache.cassandra.db.columniterator",10,695,39
"java.org.apache.cassandra.db.commitlog",25,1.291,89
"java.org.apache.cassandra.db.compaction",28,2.107,128
"java.org.apache.cassandra.db.context",5,793,39
"java.org.apache.cassandra.db.filter",7,604,51
"java.org.apache.cassandra.db.marshal",33,3.307,345
"java.org.apache.cassandra.db.migration",9,1.092,69
"java.org.apache.cassandra.dht",28,1.790,152
"java.org.apache.cassandra.gms",34,2.481,178
"java.org.apache.cassandra.hadoop",10,1.447,90
"java.org.apache.cassandra.io",79,5.898,450
"java.org.apache.cassandra.io.sstable",45,3.544,254
"java.org.apache.cassandra.io.util",26,2.059,180
"java.org.apache.cassandra.locator",27,2.263,158
"java.org.apache.cassandra.net",28,1.975,128
"java.org.apache.cassandra.net.io",1,25,0
"java.org.apache.cassandra.net.sink",2,82,5
"java.org.apache.cassandra.scheduler",4,211,14
"java.org.apache.cassandra.security",3,218,12
"java.org.apache.cassandra.security.streaming",2,130,8
"java.org.apache.cassandra.service",75,7.434,500
"java.org.apache.cassandra.streaming",21,1.632,91
"java.org.apache.cassandra.thrift",16,2.672,125
"java.org.apache.cassandra.tools",21,2.536,151
"java.org.apache.cassandra.utils",63,6.063,411
"java.org.apache.cassandra.utils.obs",3,1.437,73
"resources",n/a,939,n/a
"resources.org",n/a,939,n/a
"resources.org.apache",n/a,939,n/a
"resources.org.apache.cassandra",n/a,939,n/a
"resources.org.apache.cassandra.cli",n/a,939,n/a

Project,C,L(J),LOCp,METH
"project",722,67.924,70.117,4.568

