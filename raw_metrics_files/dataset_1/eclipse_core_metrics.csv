SmellMetrics,Ter, 12 jun 2018 17:41:05 BRT
Method,CALL,CALLED,IMP,LOC,NBD,NP,STAT,v(G)
"null.accept(CompletionProposal)",52,48,n/a,96,3,1,45,15
"null.accept(File,String)",1,0,n/a,3,0,2,1,1
"null.createBuffer(IOpenable)",1,1,n/a,6,0,1,1,1
"null.genericTypeArguments()",0,14,n/a,1,0,0,1,1
"null.getClasspathEntries()",0,7,n/a,1,0,0,1,1
"null.getDescription()",0,6,n/a,1,0,0,1,1
"null.getKind()",0,2,n/a,1,0,0,1,1
"null.getPath()",0,0,n/a,1,0,0,1,1
"null.isSuperAccess()",0,6,n/a,1,0,0,1,1
"null.isTypeAccess()",0,1,n/a,1,0,0,1,1
"null.preferenceChange(PreferenceChangeEvent)",7,0,n/a,12,3,1,6,4
"null.setActualReceiverType(ReferenceBinding)",0,5,n/a,1,0,1,0,1
"null.setDepth(int)",0,9,n/a,1,0,1,0,1
"null.setFieldIndex(int)",0,6,n/a,1,0,1,0,1
"null.sourceEnd()",0,3,n/a,1,0,0,1,1
"null.sourceStart()",0,4,n/a,1,0,0,1,1
"null.toString()",1,0,n/a,1,0,0,1,1
"org.eclipse.jdt.core.BufferChangedEvent.BufferChangedEvent(IBuffer,int,int,String)",1,4,n/a,14,0,4,4,1
"org.eclipse.jdt.core.BufferChangedEvent.getBuffer()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getLength()",0,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getOffset()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getText()",0,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.ClasspathContainerInitializer()",0,0,n/a,6,0,0,0,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.canUpdateClasspathContainer(IPath,IJavaProject)",0,1,n/a,14,0,2,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.getComparisonID(IPath,IJavaProject)",1,0,n/a,22,1,2,3,2
"org.eclipse.jdt.core.ClasspathContainerInitializer.getDescription(IPath,IJavaProject)",2,4,n/a,15,0,2,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.initialize(IPath,IJavaProject)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ClasspathContainerInitializer.requestClasspathContainerUpdate(IPath,IJavaProject,IClasspathContainer)",0,1,n/a,25,0,3,0,1
"org.eclipse.jdt.core.ClasspathVariableInitializer.ClasspathVariableInitializer()",0,0,n/a,6,0,0,0,1
"org.eclipse.jdt.core.ClasspathVariableInitializer.initialize(String)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.CompletionProposal.CompletionProposal(int,int)",2,1,n/a,23,1,2,6,5
"org.eclipse.jdt.core.CompletionProposal.create(int,int)",1,1,n/a,16,0,2,1,1
"org.eclipse.jdt.core.CompletionProposal.findParameterNames(IProgressMonitor)",4,14,n/a,61,3,1,15,6
"org.eclipse.jdt.core.CompletionProposal.getCompletion()",13,23,n/a,40,5,0,23,6
"org.eclipse.jdt.core.CompletionProposal.getCompletionLocation()",0,1,n/a,12,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getDeclarationSignature()",0,31,n/a,35,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getFlags()",0,36,n/a,47,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getKind()",0,18,n/a,17,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getName()",0,26,n/a,28,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getRelevance()",0,23,n/a,8,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getReplaceEnd()",0,25,n/a,13,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getReplaceStart()",0,25,n/a,24,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getSignature()",0,35,n/a,35,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getTokenEnd()",0,1,n/a,12,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.getTokenStart()",0,1,n/a,16,0,0,1,1
"org.eclipse.jdt.core.CompletionProposal.setCompletion(char[])",0,34,n/a,18,0,1,1,1
"org.eclipse.jdt.core.CompletionProposal.setDeclarationSignature(char[])",0,26,n/a,17,0,1,1,1
"org.eclipse.jdt.core.CompletionProposal.setFlags(int)",0,30,n/a,16,0,1,1,1
"org.eclipse.jdt.core.CompletionProposal.setName(char[])",0,15,n/a,18,0,1,1,1
"org.eclipse.jdt.core.CompletionProposal.setParameterNames(char[][])",0,6,n/a,15,0,1,2,1
"org.eclipse.jdt.core.CompletionProposal.setRelevance(int)",1,34,n/a,18,1,1,3,2
"org.eclipse.jdt.core.CompletionProposal.setReplaceRange(int,int)",1,35,n/a,25,1,2,4,3
"org.eclipse.jdt.core.CompletionProposal.setSignature(char[])",0,31,n/a,16,0,1,1,1
"org.eclipse.jdt.core.CompletionProposal.setTokenRange(int,int)",1,0,n/a,23,1,2,4,3
"org.eclipse.jdt.core.CompletionRequestor.CompletionRequestor()",0,3,n/a,8,0,0,0,1
"org.eclipse.jdt.core.CompletionRequestor.accept(CompletionProposal)",n/a,48,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.CompletionRequestor.beginReporting()",0,2,n/a,11,0,0,0,1
"org.eclipse.jdt.core.CompletionRequestor.completionFailure(IProblem)",0,7,n/a,13,0,1,0,1
"org.eclipse.jdt.core.CompletionRequestor.endReporting()",0,2,n/a,11,0,0,0,1
"org.eclipse.jdt.core.CompletionRequestor.isIgnored(int)",1,37,n/a,18,1,1,3,3
"org.eclipse.jdt.core.CompletionRequestor.setIgnored(int,boolean)",1,1,n/a,22,1,2,5,4
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptAnonymousType(char[],char[],char[][],char[][],char[][],char[],int,int,int,int)",0,2,n/a,16,0,10,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptClass(char[],char[],char[],int,int,int,int)",0,2,n/a,13,0,7,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptError(IProblem)",0,1,n/a,6,0,1,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptField(char[],char[],char[],char[],char[],char[],int,int,int,int)",0,2,n/a,16,0,10,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptInterface(char[],char[],char[],int,int,int,int)",0,2,n/a,13,0,7,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptKeyword(char[],int,int,int)",0,1,n/a,10,0,4,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptLabel(char[],int,int,int)",0,1,n/a,10,0,4,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptLocalVariable(char[],char[],char[],int,int,int,int)",0,4,n/a,13,0,7,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptMethod(char[],char[],char[],char[][],char[][],char[][],char[],char[],char[],int,int,int,int)",0,2,n/a,19,0,13,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptMethodDeclaration(char[],char[],char[],char[][],char[][],char[][],char[],char[],char[],int,int,int,int)",0,2,n/a,19,0,13,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptModifier(char[],int,int,int)",0,0,n/a,10,0,4,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptPackage(char[],char[],int,int,int)",0,2,n/a,11,0,5,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptType(char[],char[],char[],int,int,int)",0,0,n/a,12,0,6,0,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptVariableName(char[],char[],char[],char[],int,int,int)",0,0,n/a,13,0,7,0,1
"org.eclipse.jdt.core.CorrectionEngine.CorrectionEngine(Map)",0,0,n/a,10,0,1,0,1
"org.eclipse.jdt.core.CorrectionEngine.computeCorrections(ICompilationUnit,int,int,int,String[],ICorrectionRequestor)",4,2,n/a,69,2,6,34,13
"org.eclipse.jdt.core.CorrectionEngine.computeCorrections(IMarker,ICompilationUnit,int,ICorrectionRequestor)",8,0,n/a,30,0,4,9,3
"org.eclipse.jdt.core.CorrectionEngine.computeCorrections(IProblem,ICompilationUnit,ICorrectionRequestor)",7,0,n/a,28,1,3,3,2
"org.eclipse.jdt.core.CorrectionEngine.correct(char[])",14,1,n/a,45,3,1,33,9
"org.eclipse.jdt.core.CorrectionEngine.getProblemArguments(IMarker)",2,0,n/a,14,0,1,2,1
"org.eclipse.jdt.core.ElementChangedEvent.ElementChangedEvent(IJavaElementDelta,int)",1,1,n/a,10,0,2,2,1
"org.eclipse.jdt.core.ElementChangedEvent.getDelta()",0,4,n/a,8,0,0,1,1
"org.eclipse.jdt.core.ElementChangedEvent.getType()",0,0,n/a,12,0,0,1,1
"org.eclipse.jdt.core.Flags.Flags()",0,0,n/a,6,0,0,0,1
"org.eclipse.jdt.core.Flags.isAbstract(int)",0,1,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isAnnotation(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.Flags.isBridge(int)",0,0,n/a,12,0,1,1,1
"org.eclipse.jdt.core.Flags.isDeprecated(int)",0,1,n/a,10,0,1,1,1
"org.eclipse.jdt.core.Flags.isEnum(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.Flags.isFinal(int)",0,2,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isInterface(int)",0,2,n/a,10,0,1,1,1
"org.eclipse.jdt.core.Flags.isNative(int)",0,1,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isPrivate(int)",0,1,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isProtected(int)",0,1,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isPublic(int)",0,3,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isStatic(int)",0,10,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isStrictfp(int)",0,1,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isSynchronized(int)",0,1,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isSynthetic(int)",0,0,n/a,10,0,1,1,1
"org.eclipse.jdt.core.Flags.isTransient(int)",0,1,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.isVarargs(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.Flags.isVolatile(int)",0,1,n/a,9,0,1,1,1
"org.eclipse.jdt.core.Flags.toString(int)",26,3,n/a,66,0,1,28,13
"org.eclipse.jdt.core.IBuffer.addBufferChangedListener(IBufferChangedListener)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IBuffer.append(String)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IBuffer.append(char[])",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IBuffer.close()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IBuffer.getChar(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IBuffer.getCharacters()",n/a,17,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IBuffer.getContents()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IBuffer.getLength()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IBuffer.getOwner()",n/a,7,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IBuffer.getText(int,int)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IBuffer.getUnderlyingResource()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IBuffer.hasUnsavedChanges()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IBuffer.isClosed()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IBuffer.isReadOnly()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IBuffer.removeBufferChangedListener(IBufferChangedListener)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IBuffer.replace(int,int,String)",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IBuffer.replace(int,int,char[])",n/a,3,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IBuffer.save(IProgressMonitor,boolean)",n/a,3,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IBuffer.setContents(String)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IBuffer.setContents(char[])",n/a,8,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IBufferChangedListener.bufferChanged(BufferChangedEvent)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IBufferFactory.createBuffer(IOpenable)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IClassFile.getElementAt(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IClassFile.getType()",n/a,10,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClassFile.getWorkingCopy(IProgressMonitor,IBufferFactory)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IClassFile.getWorkingCopy(WorkingCopyOwner,IProgressMonitor)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IClassFile.isClass()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClassFile.isInterface()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathContainer.getClasspathEntries()",n/a,7,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathContainer.getDescription()",n/a,5,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathContainer.getKind()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathContainer.getPath()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.getContentKind()",n/a,11,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.getEntryKind()",n/a,58,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.getExclusionPatterns()",n/a,32,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.getInclusionPatterns()",n/a,24,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.getOutputLocation()",n/a,18,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.getPath()",n/a,103,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.getResolvedEntry()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.getSourceAttachmentPath()",n/a,16,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.getSourceAttachmentRootPath()",n/a,12,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IClasspathEntry.isExported()",n/a,21,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICodeAssist.codeComplete(int,CompletionRequestor)",n/a,4,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ICodeAssist.codeComplete(int,CompletionRequestor,WorkingCopyOwner)",n/a,1,3,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.ICodeAssist.codeComplete(int,ICodeCompletionRequestor)",n/a,3,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ICodeAssist.codeComplete(int,ICompletionRequestor)",n/a,4,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ICodeAssist.codeComplete(int,ICompletionRequestor,WorkingCopyOwner)",n/a,3,3,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.ICodeAssist.codeSelect(int,int)",n/a,3,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ICodeAssist.codeSelect(int,int,WorkingCopyOwner)",n/a,3,3,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptClass(char[],char[],char[],int,int,int)",n/a,3,0,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptError(IMarker)",n/a,3,0,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptField(char[],char[],char[],char[],char[],char[],int,int,int)",n/a,3,0,n/a,n/a,9,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptInterface(char[],char[],char[],int,int,int)",n/a,3,0,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptKeyword(char[],int,int)",n/a,3,0,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptLabel(char[],int,int)",n/a,3,0,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptLocalVariable(char[],char[],char[],int,int,int)",n/a,0,0,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptMethod(char[],char[],char[],char[][],char[][],char[],char[],char[],int,int,int)",n/a,3,0,n/a,n/a,11,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptModifier(char[],int,int)",n/a,3,0,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptPackage(char[],char[],int,int)",n/a,3,0,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor.acceptType(char[],char[],char[],int,int)",n/a,3,0,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.ICodeFormatter.format(String,int,int[],String)",n/a,0,1,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.becomeWorkingCopy(IProblemRequestor,IProgressMonitor)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.commitWorkingCopy(boolean,IProgressMonitor)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.createImport(String,IJavaElement,IProgressMonitor)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.createImport(String,IJavaElement,int,IProgressMonitor)",n/a,2,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.createPackageDeclaration(String,IProgressMonitor)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.createType(String,IJavaElement,boolean,IProgressMonitor)",n/a,1,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.discardWorkingCopy()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.findElements(IJavaElement)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.findPrimaryType()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.findWorkingCopy(WorkingCopyOwner)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getAllTypes()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getElementAt(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getImport(String)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getImportContainer()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getImports()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getOwner()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getPackageDeclaration(String)",n/a,4,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getPackageDeclarations()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getPrimary()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getType(String)",n/a,13,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getTypes()",n/a,10,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getWorkingCopy(IProgressMonitor)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.getWorkingCopy(WorkingCopyOwner,IProblemRequestor,IProgressMonitor)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.hasResourceChanged()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.isWorkingCopy()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.reconcile(int,boolean,WorkingCopyOwner,IProgressMonitor)",n/a,4,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.ICompilationUnit.restore()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptAnonymousType(char[],char[],char[][],char[][],char[][],char[],int,int,int,int)",n/a,2,4,n/a,n/a,10,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptClass(char[],char[],char[],int,int,int,int)",n/a,2,4,n/a,n/a,7,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptError(IProblem)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptField(char[],char[],char[],char[],char[],char[],int,int,int,int)",n/a,2,4,n/a,n/a,10,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptInterface(char[],char[],char[],int,int,int,int)",n/a,2,4,n/a,n/a,7,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptKeyword(char[],int,int,int)",n/a,1,4,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptLabel(char[],int,int,int)",n/a,1,4,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptLocalVariable(char[],char[],char[],int,int,int,int)",n/a,4,4,n/a,n/a,7,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptMethod(char[],char[],char[],char[][],char[][],char[][],char[],char[],char[],int,int,int,int)",n/a,2,4,n/a,n/a,13,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptMethodDeclaration(char[],char[],char[],char[][],char[][],char[][],char[],char[],char[],int,int,int,int)",n/a,2,4,n/a,n/a,13,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptModifier(char[],int,int,int)",n/a,0,4,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptPackage(char[],char[],int,int,int)",n/a,2,4,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptType(char[],char[],char[],int,int,int)",n/a,0,4,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.ICompletionRequestor.acceptVariableName(char[],char[],char[],char[],int,int,int)",n/a,0,4,n/a,n/a,7,n/a,n/a
"org.eclipse.jdt.core.ICorrectionRequestor.acceptClass(char[],char[],char[],int,int,int)",n/a,2,0,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.ICorrectionRequestor.acceptField(char[],char[],char[],char[],char[],char[],int,int,int)",n/a,1,0,n/a,n/a,9,n/a,n/a
"org.eclipse.jdt.core.ICorrectionRequestor.acceptInterface(char[],char[],char[],int,int,int)",n/a,0,0,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.ICorrectionRequestor.acceptLocalVariable(char[],char[],char[],int,int,int)",n/a,1,0,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.ICorrectionRequestor.acceptMethod(char[],char[],char[],char[][],char[][],char[][],char[],char[],char[],int,int,int)",n/a,1,0,n/a,n/a,12,n/a,n/a
"org.eclipse.jdt.core.ICorrectionRequestor.acceptPackage(char[],char[],int,int)",n/a,1,0,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.IElementChangedListener.elementChanged(ElementChangedEvent)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IField.getConstant()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IField.getElementName()",n/a,81,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IField.getTypeSignature()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IImportContainer.getImport(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IImportDeclaration.getElementName()",n/a,74,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IImportDeclaration.getFlags()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IImportDeclaration.isOnDemand()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.exists()",n/a,37,8,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getAncestor(int)",n/a,13,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getCorrespondingResource()",n/a,3,7,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getElementName()",n/a,73,13,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getElementType()",n/a,103,19,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getHandleIdentifier()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getJavaModel()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getJavaProject()",n/a,30,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getOpenable()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getParent()",n/a,93,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getPath()",n/a,72,10,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getPrimaryElement()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getResource()",n/a,57,10,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getSchedulingRule()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.getUnderlyingResource()",n/a,5,10,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.isReadOnly()",n/a,7,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElement.isStructureKnown()",n/a,4,5,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getAddedChildren()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getAffectedChildren()",n/a,8,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getChangedChildren()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getElement()",n/a,9,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getFlags()",n/a,9,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getKind()",n/a,15,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getMovedFromElement()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getMovedToElement()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getRemovedChildren()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaElementDelta.getResourceDeltas()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.contains(IResource)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.copy(IJavaElement[],IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",n/a,3,1,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.delete(IJavaElement[],boolean,IProgressMonitor)",n/a,3,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.getJavaProject(String)",n/a,3,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.getJavaProjects()",n/a,11,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.getNonJavaResources()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.getWorkspace()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.move(IJavaElement[],IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",n/a,3,1,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.refreshExternalArchives(IJavaElement[],IProgressMonitor)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IJavaModel.rename(IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",n/a,3,1,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.IJavaModelStatus.getElements()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaModelStatus.getPath()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaModelStatus.getString()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaModelStatus.isDoesNotExist()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.findElement(IPath)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.findElement(IPath,WorkingCopyOwner)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.findPackageFragment(IPath)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.findPackageFragmentRoot(IPath)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.findPackageFragmentRoots(IClasspathEntry)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.findType(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.findType(String,String)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.findType(String,String,WorkingCopyOwner)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.findType(String,WorkingCopyOwner)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getAllPackageFragmentRoots()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getNonJavaResources()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getOption(String,boolean)",n/a,12,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getOptions(boolean)",n/a,17,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getOutputLocation()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getPackageFragmentRoot(IResource)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getPackageFragmentRoot(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getPackageFragmentRoots()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getPackageFragmentRoots(IClasspathEntry)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getPackageFragments()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getProject()",n/a,22,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getRawClasspath()",n/a,11,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getRequiredProjectNames()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.getResolvedClasspath(boolean)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.hasBuildState()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.hasClasspathCycle(IClasspathEntry[])",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.isOnClasspath(IJavaElement)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.isOnClasspath(IResource)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.newEvaluationContext()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.newTypeHierarchy(IRegion,IProgressMonitor)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.newTypeHierarchy(IRegion,WorkingCopyOwner,IProgressMonitor)",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.newTypeHierarchy(IType,IRegion,IProgressMonitor)",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.newTypeHierarchy(IType,IRegion,WorkingCopyOwner,IProgressMonitor)",n/a,0,1,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.readOutputLocation()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.readRawClasspath()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.setOption(String,String)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.setOptions(Map)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.setOutputLocation(IPath,IProgressMonitor)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.setRawClasspath(IClasspathEntry[],IPath,IProgressMonitor)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IJavaProject.setRawClasspath(IClasspathEntry[],IProgressMonitor)",n/a,5,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ILocalVariable.getElementName()",n/a,73,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ILocalVariable.getNameRange()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ILocalVariable.getTypeSignature()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMember.getClassFile()",n/a,17,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMember.getCompilationUnit()",n/a,28,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMember.getDeclaringType()",n/a,22,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMember.getFlags()",n/a,10,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMember.getNameRange()",n/a,6,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMember.getType(String,int)",n/a,4,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IMember.isBinary()",n/a,29,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.getElementName()",n/a,89,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.getExceptionTypes()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.getNumberOfParameters()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.getParameterNames()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.getParameterTypes()",n/a,15,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.getReturnType()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.getSignature()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.getTypeParameter(String)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IMethod.getTypeParameterSignatures()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.getTypeParameters()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.isConstructor()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.isMainMethod()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IMethod.isSimilar(IMethod)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IOpenable.close()",n/a,8,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IOpenable.getBuffer()",n/a,14,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IOpenable.hasUnsavedChanges()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IOpenable.isConsistent()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IOpenable.isOpen()",n/a,6,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IOpenable.makeConsistent(IProgressMonitor)",n/a,4,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IOpenable.open(IProgressMonitor)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IOpenable.save(IProgressMonitor,boolean)",n/a,4,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IPackageDeclaration.getElementName()",n/a,75,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.containsJavaResources()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.createCompilationUnit(String,String,boolean,IProgressMonitor)",n/a,0,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.getClassFile(String)",n/a,13,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.getClassFiles()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.getCompilationUnit(String)",n/a,11,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.getCompilationUnits()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.getCompilationUnits(WorkingCopyOwner)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.getElementName()",n/a,87,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.getKind()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.getNonJavaResources()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.hasSubpackages()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragment.isDefaultPackage()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.attachSource(IPath,IPath,IProgressMonitor)",n/a,2,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.copy(IPath,int,int,IClasspathEntry,IProgressMonitor)",n/a,0,1,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.createPackageFragment(String,boolean,IProgressMonitor)",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.delete(int,int,IProgressMonitor)",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.getKind()",n/a,10,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.getNonJavaResources()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.getPackageFragment(String)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.getRawClasspathEntry()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.getSourceAttachmentPath()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.getSourceAttachmentRootPath()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.isArchive()",n/a,12,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.isExternal()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot.move(IPath,int,int,IClasspathEntry,IProgressMonitor)",n/a,0,1,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.IParent.getChildren()",n/a,20,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IParent.hasChildren()",n/a,0,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IProblemRequestor.acceptProblem(IProblem)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IProblemRequestor.beginReporting()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IProblemRequestor.endReporting()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IProblemRequestor.isActive()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IRegion.add(IJavaElement)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IRegion.contains(IJavaElement)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IRegion.getElements()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IRegion.remove(IJavaElement)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ISourceManipulation.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",n/a,2,5,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.ISourceManipulation.delete(boolean,IProgressMonitor)",n/a,2,4,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ISourceManipulation.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",n/a,3,5,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.ISourceManipulation.rename(String,boolean,IProgressMonitor)",n/a,3,6,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.ISourceRange.getLength()",n/a,11,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ISourceRange.getOffset()",n/a,19,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ISourceReference.exists()",n/a,0,5,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ISourceReference.getSource()",n/a,9,5,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ISourceReference.getSourceRange()",n/a,4,7,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor)",n/a,1,2,n/a,n/a,8,n/a,n/a
"org.eclipse.jdt.core.IType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,WorkingCopyOwner)",n/a,1,2,n/a,n/a,9,n/a,n/a
"org.eclipse.jdt.core.IType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor)",n/a,1,2,n/a,n/a,8,n/a,n/a
"org.eclipse.jdt.core.IType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor,WorkingCopyOwner)",n/a,1,2,n/a,n/a,9,n/a,n/a
"org.eclipse.jdt.core.IType.createField(String,IJavaElement,boolean,IProgressMonitor)",n/a,0,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.IType.createInitializer(String,IJavaElement,IProgressMonitor)",n/a,0,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IType.createMethod(String,IJavaElement,boolean,IProgressMonitor)",n/a,0,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.IType.createType(String,IJavaElement,boolean,IProgressMonitor)",n/a,0,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.IType.findMethods(IMethod)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.getElementName()",n/a,117,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getField(String)",n/a,13,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.getFields()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getFullyQualifiedName()",n/a,17,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getFullyQualifiedName(char)",n/a,6,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.getInitializer(int)",n/a,7,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.getInitializers()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getMethod(String,String[])",n/a,17,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IType.getMethods()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getPackageFragment()",n/a,18,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getSuperInterfaceNames()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getSuperInterfaceTypeSignatures()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getSuperclassName()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getSuperclassTypeSignature()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getType(String)",n/a,13,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.getTypeParameter(String)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.getTypeParameterSignatures()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getTypeParameters()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getTypeQualifiedName()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.getTypeQualifiedName(char)",n/a,10,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.getTypes()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.isAnnotation()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.isAnonymous()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.isClass()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.isEnum()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.isInterface()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.isLocal()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.isMember()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IType.loadTypeHierachy(InputStream,IProgressMonitor)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IType.newSupertypeHierarchy(ICompilationUnit[],IProgressMonitor)",n/a,0,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IType.newSupertypeHierarchy(IProgressMonitor)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.newSupertypeHierarchy(IWorkingCopy[],IProgressMonitor)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IType.newSupertypeHierarchy(WorkingCopyOwner,IProgressMonitor)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IType.newTypeHierarchy(ICompilationUnit[],IProgressMonitor)",n/a,0,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IType.newTypeHierarchy(IJavaProject,IProgressMonitor)",n/a,0,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IType.newTypeHierarchy(IJavaProject,WorkingCopyOwner,IProgressMonitor)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IType.newTypeHierarchy(IProgressMonitor)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.newTypeHierarchy(IWorkingCopy[],IProgressMonitor)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IType.newTypeHierarchy(WorkingCopyOwner,IProgressMonitor)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IType.resolveType(String)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IType.resolveType(String,WorkingCopyOwner)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.addTypeHierarchyChangedListener(ITypeHierarchyChangedListener)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.contains(IType)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.exists()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getAllClasses()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getAllInterfaces()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getAllSubtypes(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getAllSuperInterfaces(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getAllSuperclasses(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getAllSupertypes(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getAllTypes()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getCachedFlags(IType)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getExtendingInterfaces(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getImplementingClasses(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getRootClasses()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getRootInterfaces()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getSubclasses(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getSubtypes(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getSuperInterfaces(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getSuperclass(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getSupertypes(IType)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.getType()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.refresh(IProgressMonitor)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.removeTypeHierarchyChangedListener(ITypeHierarchyChangedListener)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchy.store(OutputStream,IProgressMonitor)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.ITypeHierarchyChangedListener.typeHierarchyChanged(ITypeHierarchy)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.ITypeParameter.getBounds()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ITypeParameter.getDeclaringMember()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.ITypeParameter.getNameRange()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.commit(boolean,IProgressMonitor)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.destroy()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.findElements(IJavaElement)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.findPrimaryType()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.findSharedWorkingCopy(IBufferFactory)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.getOriginal(IJavaElement)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.getOriginalElement()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.getSharedWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",n/a,2,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.getWorkingCopy()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.getWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",n/a,2,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.isBasedOn(IResource)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.isWorkingCopy()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.reconcile()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.reconcile(boolean,IProgressMonitor)",n/a,0,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.IWorkingCopy.restore()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.JavaConventions.JavaConventions()",0,0,n/a,3,0,0,0,1
"org.eclipse.jdt.core.JavaConventions.isOverlappingRoots(IPath,IPath)",8,0,n/a,26,1,2,9,10
"org.eclipse.jdt.core.JavaConventions.scannedIdentifier(String)",7,4,n/a,36,2,1,17,8
"org.eclipse.jdt.core.JavaConventions.validateClassFileName(String)",14,2,n/a,41,1,1,17,6
"org.eclipse.jdt.core.JavaConventions.validateClasspath(IJavaProject,IClasspathEntry[],IPath)",1,0,n/a,34,0,3,1,1
"org.eclipse.jdt.core.JavaConventions.validateClasspathEntry(IJavaProject,IClasspathEntry,boolean)",1,0,n/a,14,0,3,1,1
"org.eclipse.jdt.core.JavaConventions.validateCompilationUnitName(String)",15,6,n/a,45,2,1,18,7
"org.eclipse.jdt.core.JavaConventions.validateFieldName(String)",1,2,n/a,14,0,1,1,1
"org.eclipse.jdt.core.JavaConventions.validateIdentifier(String)",3,6,n/a,19,1,1,3,2
"org.eclipse.jdt.core.JavaConventions.validateImportDeclaration(String)",13,1,n/a,25,2,1,7,5
"org.eclipse.jdt.core.JavaConventions.validateJavaTypeName(String)",27,0,n/a,52,2,1,25,10
"org.eclipse.jdt.core.JavaConventions.validateMethodName(String)",1,0,n/a,15,0,1,1,1
"org.eclipse.jdt.core.JavaConventions.validatePackageName(String)",35,8,n/a,63,3,1,33,20
"org.eclipse.jdt.core.JavaCore.JavaCore()",1,0,n/a,13,0,0,2,1
"org.eclipse.jdt.core.JavaCore.addElementChangedListener(IElementChangedListener)",1,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.JavaCore.addElementChangedListener(IElementChangedListener,int)",2,1,n/a,29,0,2,1,1
"org.eclipse.jdt.core.JavaCore.addJavaElementMarkerAttributes(Map,IJavaElement)",3,0,n/a,16,0,2,4,4
"org.eclipse.jdt.core.JavaCore.addPreProcessingResourceChangedListener(IResourceChangeListener)",2,0,n/a,15,0,1,1,1
"org.eclipse.jdt.core.JavaCore.configureJavaElementMarker(IMarker,IJavaElement)",3,0,n/a,15,0,2,4,4
"org.eclipse.jdt.core.JavaCore.create(IFile)",1,45,n/a,22,0,1,1,1
"org.eclipse.jdt.core.JavaCore.create(IFolder)",1,45,n/a,16,0,1,1,1
"org.eclipse.jdt.core.JavaCore.create(IProject)",3,45,n/a,18,1,1,4,2
"org.eclipse.jdt.core.JavaCore.create(IResource)",1,45,n/a,26,0,1,1,1
"org.eclipse.jdt.core.JavaCore.create(IWorkspaceRoot)",2,45,n/a,12,1,1,3,2
"org.eclipse.jdt.core.JavaCore.create(String)",1,45,n/a,11,0,1,1,1
"org.eclipse.jdt.core.JavaCore.create(String,WorkingCopyOwner)",4,2,n/a,22,1,2,5,2
"org.eclipse.jdt.core.JavaCore.createClassFileFrom(IFile)",1,0,n/a,12,0,1,1,1
"org.eclipse.jdt.core.JavaCore.createCompilationUnitFrom(IFile)",1,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.JavaCore.createJarPackageFragmentRootFrom(IFile)",1,0,n/a,12,0,1,1,1
"org.eclipse.jdt.core.JavaCore.getClasspathContainer(IPath,IJavaProject)",3,9,n/a,40,1,2,5,2
"org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer(String)",13,3,n/a,51,6,1,25,11
"org.eclipse.jdt.core.JavaCore.getClasspathVariable(String)",18,5,n/a,74,3,1,32,13
"org.eclipse.jdt.core.JavaCore.getClasspathVariableInitializer(String)",13,1,n/a,49,6,1,25,10
"org.eclipse.jdt.core.JavaCore.getClasspathVariableNames()",2,0,n/a,13,0,0,1,1
"org.eclipse.jdt.core.JavaCore.getDefaultOptions()",12,159,n/a,742,1,0,13,3
"org.eclipse.jdt.core.JavaCore.getDefaultPreferences()",2,7,n/a,9,1,0,3,2
"org.eclipse.jdt.core.JavaCore.getEncoding()",4,3,n/a,20,2,0,5,3
"org.eclipse.jdt.core.JavaCore.getInstancePreferences()",2,10,n/a,9,1,0,3,2
"org.eclipse.jdt.core.JavaCore.getJavaCore()",1,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.JavaCore.getOption(String)",9,3,n/a,30,1,1,10,6
"org.eclipse.jdt.core.JavaCore.getOptions()",12,18,n/a,34,2,0,13,3
"org.eclipse.jdt.core.JavaCore.getPlugin()",0,15,n/a,8,0,0,1,1
"org.eclipse.jdt.core.JavaCore.getResolvedClasspathEntry(IClasspathEntry)",51,3,n/a,93,4,1,30,15
"org.eclipse.jdt.core.JavaCore.getResolvedVariablePath(IPath)",5,9,n/a,23,1,1,12,5
"org.eclipse.jdt.core.JavaCore.getSharedWorkingCopies(IBufferFactory)",4,0,n/a,16,0,1,3,2
"org.eclipse.jdt.core.JavaCore.getUserLibraryNames()",1,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.JavaCore.getWorkingCopies(WorkingCopyOwner)",2,1,n/a,16,0,1,7,3
"org.eclipse.jdt.core.JavaCore.initializeDefaultPreferences()",90,4,n/a,98,1,0,85,3
"org.eclipse.jdt.core.JavaCore.isReferencedBy(IJavaElement,IMarker)",9,0,n/a,38,3,2,23,10
"org.eclipse.jdt.core.JavaCore.isReferencedBy(IJavaElement,IMarkerDelta)",9,0,n/a,38,3,2,23,10
"org.eclipse.jdt.core.JavaCore.newContainerEntry(IPath)",1,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.JavaCore.newContainerEntry(IPath,IPath[],IPath[],boolean)",6,6,n/a,113,1,4,5,3
"org.eclipse.jdt.core.JavaCore.newContainerEntry(IPath,boolean)",1,1,n/a,23,0,2,1,1
"org.eclipse.jdt.core.JavaCore.newLibraryEntry(IPath,IPath,IPath)",1,2,n/a,28,0,3,1,1
"org.eclipse.jdt.core.JavaCore.newLibraryEntry(IPath,IPath,IPath,IPath[],IPath[],boolean)",8,10,n/a,104,2,6,10,6
"org.eclipse.jdt.core.JavaCore.newLibraryEntry(IPath,IPath,IPath,boolean)",1,1,n/a,32,0,4,1,1
"org.eclipse.jdt.core.JavaCore.newProjectEntry(IPath)",1,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.JavaCore.newProjectEntry(IPath,IPath[],IPath[],boolean)",3,7,n/a,83,0,4,3,2
"org.eclipse.jdt.core.JavaCore.newProjectEntry(IPath,boolean)",3,2,n/a,21,0,2,3,2
"org.eclipse.jdt.core.JavaCore.newRegion()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath)",1,2,n/a,18,0,1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[])",1,0,n/a,22,0,2,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[],IPath)",1,0,n/a,24,0,3,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[],IPath[],IPath)",6,9,n/a,87,0,4,9,5
"org.eclipse.jdt.core.JavaCore.newVariableEntry(IPath,IPath,IPath)",1,1,n/a,22,0,3,1,1
"org.eclipse.jdt.core.JavaCore.newVariableEntry(IPath,IPath,IPath,IPath[],IPath[],boolean)",6,5,n/a,107,1,6,5,3
"org.eclipse.jdt.core.JavaCore.newVariableEntry(IPath,IPath,IPath,boolean)",1,1,n/a,32,0,4,1,1
"org.eclipse.jdt.core.JavaCore.removeClasspathVariable(String)",1,0,n/a,18,0,1,1,1
"org.eclipse.jdt.core.JavaCore.removeClasspathVariable(String,IProgressMonitor)",2,1,n/a,23,1,2,2,2
"org.eclipse.jdt.core.JavaCore.removeElementChangedListener(IElementChangedListener)",2,2,n/a,9,0,1,1,1
"org.eclipse.jdt.core.JavaCore.removePreProcessingResourceChangedListener(IResourceChangeListener)",2,1,n/a,11,0,1,1,1
"org.eclipse.jdt.core.JavaCore.run(IWorkspaceRunnable,IProgressMonitor)",3,0,n/a,31,0,2,1,1
"org.eclipse.jdt.core.JavaCore.run(IWorkspaceRunnable,ISchedulingRule,IProgressMonitor)",6,3,n/a,44,1,3,4,2
"org.eclipse.jdt.core.JavaCore.setClasspathContainer(IPath,IJavaProject[],IClasspathContainer[],IProgressMonitor)",52,8,n/a,22,5,4,89,31
"org.eclipse.jdt.core.JavaCore.setClasspathVariable(String,IPath)",1,4,n/a,21,0,2,1,1
"org.eclipse.jdt.core.JavaCore.setClasspathVariable(String,IPath,IProgressMonitor)",2,2,n/a,25,0,3,3,2
"org.eclipse.jdt.core.JavaCore.setClasspathVariables(String[],IPath[],IProgressMonitor)",3,2,n/a,33,0,3,3,2
"org.eclipse.jdt.core.JavaCore.setOptions(Hashtable)",15,18,n/a,40,4,1,18,8
"org.eclipse.jdt.core.JavaCore.start(BundleContext)",39,0,n/a,9,7,1,33,6
"org.eclipse.jdt.core.JavaCore.startIndexing()",3,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.JavaCore.stop(BundleContext)",8,0,n/a,19,1,1,7,1
"org.eclipse.jdt.core.JavaModelException.JavaModelException(CoreException)",2,47,n/a,11,0,1,2,1
"org.eclipse.jdt.core.JavaModelException.JavaModelException(IJavaModelStatus)",1,100,n/a,8,0,1,1,1
"org.eclipse.jdt.core.JavaModelException.JavaModelException(Throwable,int)",2,17,n/a,14,0,2,1,1
"org.eclipse.jdt.core.JavaModelException.getException()",2,7,n/a,13,1,0,3,2
"org.eclipse.jdt.core.JavaModelException.getJavaModelStatus()",2,11,n/a,16,1,0,4,2
"org.eclipse.jdt.core.JavaModelException.isDoesNotExist()",2,1,n/a,17,0,0,2,2
"org.eclipse.jdt.core.JavaModelException.printStackTrace(PrintStream)",4,0,n/a,16,2,1,6,2
"org.eclipse.jdt.core.JavaModelException.printStackTrace(PrintWriter)",4,0,n/a,16,2,1,6,2
"org.eclipse.jdt.core.JavaModelException.toString()",20,0,n/a,22,2,0,12,3
"org.eclipse.jdt.core.NamingConventions.NamingConventions()",0,0,n/a,3,0,0,0,1
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithPrefix(char[],boolean)",2,1,n/a,25,2,2,9,4
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithPrefixAndSuffix(char[],boolean,boolean)",4,1,n/a,47,2,3,19,9
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithSuffix(char[],boolean)",2,1,n/a,25,2,2,9,4
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithoutPrefixAndSuffix(char[])",1,2,n/a,12,1,1,4,2
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.getResults()",9,3,n/a,32,0,0,21,1
"org.eclipse.jdt.core.NamingConventions.convertCharsToString(char[][])",1,3,n/a,8,1,1,7,3
"org.eclipse.jdt.core.NamingConventions.convertStringToChars(String[])",1,5,n/a,12,2,1,9,4
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffix(char[],char[][],char[][])",7,3,n/a,37,5,3,28,15
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForArgumentName(IJavaProject,String)",3,0,n/a,26,0,2,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForArgumentName(IJavaProject,char[])",3,0,n/a,30,0,2,2,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForFieldName(IJavaProject,String,int)",3,0,n/a,30,0,3,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForFieldName(IJavaProject,char[],int)",4,3,n/a,35,0,3,3,3
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForLocalVariableName(IJavaProject,String)",3,0,n/a,26,0,2,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForLocalVariableName(IJavaProject,char[])",3,0,n/a,30,0,2,2,1
"org.eclipse.jdt.core.NamingConventions.suggestAccessorName(IJavaProject,char[],int)",3,5,n/a,7,1,3,4,3
"org.eclipse.jdt.core.NamingConventions.suggestArgumentNames(IJavaProject,String,String,int,String[])",5,0,n/a,37,0,5,1,1
"org.eclipse.jdt.core.NamingConventions.suggestArgumentNames(IJavaProject,char[],char[],int,char[][])",3,0,n/a,39,0,5,3,1
"org.eclipse.jdt.core.NamingConventions.suggestFieldNames(IJavaProject,String,String,int,int,String[])",5,0,n/a,42,0,6,1,1
"org.eclipse.jdt.core.NamingConventions.suggestFieldNames(IJavaProject,char[],char[],int,int,char[][])",3,0,n/a,44,0,6,3,1
"org.eclipse.jdt.core.NamingConventions.suggestGetterName(IJavaProject,String,int,boolean,String[])",4,0,n/a,40,0,5,1,1
"org.eclipse.jdt.core.NamingConventions.suggestGetterName(IJavaProject,char[],int,boolean,char[][])",10,0,n/a,51,2,5,7,5
"org.eclipse.jdt.core.NamingConventions.suggestLocalVariableNames(IJavaProject,String,String,int,String[])",5,0,n/a,37,0,5,1,1
"org.eclipse.jdt.core.NamingConventions.suggestLocalVariableNames(IJavaProject,char[],char[],int,char[][])",3,0,n/a,39,0,5,3,1
"org.eclipse.jdt.core.NamingConventions.suggestNewName(char[],char[][])",4,6,n/a,17,2,2,11,4
"org.eclipse.jdt.core.NamingConventions.suggestSetterName(IJavaProject,String,int,boolean,String[])",4,0,n/a,39,0,5,1,1
"org.eclipse.jdt.core.NamingConventions.suggestSetterName(IJavaProject,char[],int,boolean,char[][])",13,0,n/a,54,2,5,8,5
"org.eclipse.jdt.core.Signature.Signature()",0,0,n/a,3,0,0,0,1
"org.eclipse.jdt.core.Signature.appendArgumentSimpleNames(char[],int,int,StringBuffer)",6,3,n/a,34,3,4,30,10
"org.eclipse.jdt.core.Signature.appendArrayTypeSignature(char[],int,boolean,StringBuffer)",1,2,n/a,16,0,4,1,1
"org.eclipse.jdt.core.Signature.appendArrayTypeSignature(char[],int,boolean,StringBuffer,boolean)",8,2,n/a,32,1,5,10,4
"org.eclipse.jdt.core.Signature.appendClassTypeSignature(char[],int,boolean,StringBuffer)",11,2,n/a,82,3,4,41,16
"org.eclipse.jdt.core.Signature.appendSimpleName(char[],int,int,StringBuffer)",13,2,n/a,50,3,4,45,16
"org.eclipse.jdt.core.Signature.appendTypeArgumentSignature(char[],int,boolean,StringBuffer)",7,3,n/a,34,1,4,15,6
"org.eclipse.jdt.core.Signature.appendTypeArgumentSignatures(char[],int,boolean,StringBuffer)",7,2,n/a,44,2,4,20,7
"org.eclipse.jdt.core.Signature.appendTypeSignature(char[],int,boolean,StringBuffer)",1,8,n/a,17,0,4,1,1
"org.eclipse.jdt.core.Signature.appendTypeSignature(char[],int,boolean,StringBuffer,boolean)",19,2,n/a,92,2,5,67,19
"org.eclipse.jdt.core.Signature.checkArrayDimension(char[],int,int)",0,1,n/a,23,3,3,20,9
"org.eclipse.jdt.core.Signature.checkName(char[],char[],int,int)",2,13,n/a,20,2,4,17,6
"org.eclipse.jdt.core.Signature.checkNextChar(char[],char,int,int,boolean)",3,7,n/a,7,0,5,6,4
"org.eclipse.jdt.core.Signature.consumeWhitespace(char[],int,int)",1,8,n/a,10,2,3,6,4
"org.eclipse.jdt.core.Signature.createArraySignature(String,int)",3,0,n/a,11,0,2,1,1
"org.eclipse.jdt.core.Signature.createArraySignature(char[],int)",1,0,n/a,20,1,2,10,3
"org.eclipse.jdt.core.Signature.createCharArrayTypeSignature(char[],boolean)",10,8,n/a,30,0,2,13,4
"org.eclipse.jdt.core.Signature.createMethodSignature(String[],String)",4,1,n/a,19,1,2,7,2
"org.eclipse.jdt.core.Signature.createMethodSignature(char[][],char[])",2,2,n/a,30,1,2,20,3
"org.eclipse.jdt.core.Signature.createTypeParameterSignature(String,String[])",4,2,n/a,17,1,2,7,2
"org.eclipse.jdt.core.Signature.createTypeParameterSignature(char[],char[][])",3,2,n/a,30,1,2,20,4
"org.eclipse.jdt.core.Signature.createTypeSignature(String,boolean)",2,4,n/a,27,0,2,1,2
"org.eclipse.jdt.core.Signature.createTypeSignature(char[],boolean)",2,17,n/a,19,0,2,1,1
"org.eclipse.jdt.core.Signature.encodeArrayDimension(char[],int,int,StringBuffer)",3,10,n/a,8,1,4,5,3
"org.eclipse.jdt.core.Signature.encodeQualifiedName(char[],int,int,StringBuffer)",8,1,n/a,43,4,4,37,10
"org.eclipse.jdt.core.Signature.encodeTypeSignature(char[],int,boolean,int,StringBuffer)",52,5,n/a,129,3,5,107,29
"org.eclipse.jdt.core.Signature.getArrayCount(String)",2,0,n/a,11,0,1,1,1
"org.eclipse.jdt.core.Signature.getArrayCount(char[])",1,1,n/a,21,2,1,6,3
"org.eclipse.jdt.core.Signature.getElementType(String)",3,0,n/a,19,0,1,1,1
"org.eclipse.jdt.core.Signature.getElementType(char[])",2,0,n/a,26,0,1,7,2
"org.eclipse.jdt.core.Signature.getParameterCount(String)",2,1,n/a,11,0,1,1,1
"org.eclipse.jdt.core.Signature.getParameterCount(char[])",5,2,n/a,34,3,1,15,6
"org.eclipse.jdt.core.Signature.getParameterTypes(String)",3,2,n/a,13,0,1,2,1
"org.eclipse.jdt.core.Signature.getParameterTypes(char[])",7,9,n/a,41,3,1,20,7
"org.eclipse.jdt.core.Signature.getQualifier(String)",3,1,n/a,24,0,1,4,2
"org.eclipse.jdt.core.Signature.getQualifier(char[])",3,0,n/a,28,1,1,5,3
"org.eclipse.jdt.core.Signature.getReturnType(String)",3,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.Signature.getReturnType(char[])",4,7,n/a,21,1,1,5,2
"org.eclipse.jdt.core.Signature.getSignatureQualifier(String)",3,0,n/a,19,0,1,1,2
"org.eclipse.jdt.core.Signature.getSignatureQualifier(char[])",2,17,n/a,43,3,1,25,10
"org.eclipse.jdt.core.Signature.getSignatureSimpleName(String)",3,0,n/a,19,0,1,1,2
"org.eclipse.jdt.core.Signature.getSignatureSimpleName(char[])",2,24,n/a,43,3,1,25,10
"org.eclipse.jdt.core.Signature.getSimpleName(String)",9,5,n/a,55,3,1,34,11
"org.eclipse.jdt.core.Signature.getSimpleName(char[])",7,1,n/a,54,3,1,35,11
"org.eclipse.jdt.core.Signature.getSimpleNames(String)",3,1,n/a,22,0,1,1,1
"org.eclipse.jdt.core.Signature.getSimpleNames(char[])",2,0,n/a,52,2,1,28,9
"org.eclipse.jdt.core.Signature.getThrownExceptionTypes(String)",3,1,n/a,13,0,1,2,1
"org.eclipse.jdt.core.Signature.getThrownExceptionTypes(char[])",9,0,n/a,30,1,1,16,4
"org.eclipse.jdt.core.Signature.getTypeArguments(String)",3,0,n/a,14,0,1,2,1
"org.eclipse.jdt.core.Signature.getTypeArguments(char[])",8,2,n/a,47,2,1,29,11
"org.eclipse.jdt.core.Signature.getTypeErasure(String)",3,0,n/a,14,0,1,1,1
"org.eclipse.jdt.core.Signature.getTypeErasure(char[])",6,1,n/a,44,3,1,34,9
"org.eclipse.jdt.core.Signature.getTypeParameterBounds(String)",3,0,n/a,15,0,1,2,1
"org.eclipse.jdt.core.Signature.getTypeParameterBounds(char[])",7,1,n/a,44,1,1,21,6
"org.eclipse.jdt.core.Signature.getTypeParameters(String)",3,0,n/a,15,0,1,2,1
"org.eclipse.jdt.core.Signature.getTypeParameters(char[])",10,4,n/a,45,4,1,29,11
"org.eclipse.jdt.core.Signature.getTypeSignatureKind(String)",4,4,n/a,38,1,1,23,7
"org.eclipse.jdt.core.Signature.getTypeSignatureKind(char[])",2,0,n/a,38,1,1,23,7
"org.eclipse.jdt.core.Signature.getTypeVariable(String)",3,3,n/a,13,0,1,1,1
"org.eclipse.jdt.core.Signature.getTypeVariable(char[])",3,1,n/a,18,1,1,4,2
"org.eclipse.jdt.core.Signature.scanArrayTypeSignature(char[],int)",3,3,n/a,25,1,2,6,3
"org.eclipse.jdt.core.Signature.scanBaseTypeSignature(char[],int)",3,1,n/a,29,1,2,6,3
"org.eclipse.jdt.core.Signature.scanClassTypeSignature(char[],int)",4,2,n/a,48,2,2,19,10
"org.eclipse.jdt.core.Signature.scanIdentifier(char[],int)",1,2,n/a,27,2,2,10,10
"org.eclipse.jdt.core.Signature.scanTypeArgumentSignature(char[],int)",3,3,n/a,34,1,2,8,5
"org.eclipse.jdt.core.Signature.scanTypeArgumentSignatures(char[],int)",4,2,n/a,40,2,2,14,6
"org.eclipse.jdt.core.Signature.scanTypeSignature(char[],int)",6,11,n/a,45,1,2,23,7
"org.eclipse.jdt.core.Signature.scanTypeVariableSignature(char[],int)",4,2,n/a,31,1,2,10,4
"org.eclipse.jdt.core.Signature.toCharArray(char[])",6,24,n/a,40,1,1,8,4
"org.eclipse.jdt.core.Signature.toCharArray(char[],char[],char[][],boolean,boolean)",1,3,n/a,29,0,5,1,1
"org.eclipse.jdt.core.Signature.toCharArray(char[],char[],char[][],boolean,boolean,boolean)",19,4,n/a,67,2,6,28,8
"org.eclipse.jdt.core.Signature.toQualifiedName(String[])",3,0,n/a,24,1,1,7,2
"org.eclipse.jdt.core.Signature.toQualifiedName(char[][])",1,1,n/a,40,2,1,23,6
"org.eclipse.jdt.core.Signature.toString(String)",3,23,n/a,30,0,1,1,1
"org.eclipse.jdt.core.Signature.toString(String,String,String[],boolean,boolean)",1,0,n/a,20,0,5,1,1
"org.eclipse.jdt.core.Signature.toString(String,String,String[],boolean,boolean,boolean)",5,1,n/a,32,2,6,10,4
"org.eclipse.jdt.core.ToolFactory.createCodeFormatter()",7,2,n/a,34,5,0,18,7
"org.eclipse.jdt.core.ToolFactory.createCodeFormatter(Map)",2,2,n/a,14,0,1,3,2
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileBytesDisassembler()",1,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileDisassembler()",1,0,n/a,13,1,0,2,1
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(IClassFile,int)",13,0,n/a,42,4,2,19,5
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(String,String,int)",9,2,n/a,45,3,3,17,8
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(String,int)",3,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.ToolFactory.createDefaultCodeFormatter(Map)",2,3,n/a,18,0,1,3,2
"org.eclipse.jdt.core.ToolFactory.createScanner(boolean,boolean,boolean,String)",2,0,n/a,43,0,4,7,2
"org.eclipse.jdt.core.ToolFactory.createScanner(boolean,boolean,boolean,boolean)",1,2,n/a,39,0,4,3,2
"org.eclipse.jdt.core.WorkingCopyOwner.createBuffer(ICompilationUnit)",2,5,n/a,18,0,1,1,1
"org.eclipse.jdt.core.WorkingCopyOwner.setPrimaryBufferProvider(WorkingCopyOwner)",0,0,n/a,15,0,1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.append(char[],char)",1,3,n/a,31,0,2,6,2
"org.eclipse.jdt.core.compiler.CharOperation.append(char[],int,char[],int,int)",2,0,n/a,53,1,5,7,2
"org.eclipse.jdt.core.compiler.CharOperation.arrayConcat(char[][],char[])",1,10,n/a,43,0,2,9,3
"org.eclipse.jdt.core.compiler.CharOperation.arrayConcat(char[][],char[][])",2,2,n/a,50,0,2,10,3
"org.eclipse.jdt.core.compiler.CharOperation.charArrayToStringArray(char[][])",1,8,n/a,18,0,1,11,4
"org.eclipse.jdt.core.compiler.CharOperation.charToString(char[])",1,10,n/a,10,0,1,3,2
"org.eclipse.jdt.core.compiler.CharOperation.compareWith(char[],char[])",1,0,n/a,70,1,2,12,4
"org.eclipse.jdt.core.compiler.CharOperation.concat(char,char[],char)",1,2,n/a,38,0,3,8,2
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char,char[],char,char[])",6,7,n/a,83,0,5,16,4
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char[])",2,83,n/a,44,0,2,10,3
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char[],char)",2,75,n/a,58,0,3,15,5
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char[],char[])",6,20,n/a,71,0,3,14,4
"org.eclipse.jdt.core.compiler.CharOperation.concatWith(char[],char[][],char)",3,3,n/a,62,2,3,23,9
"org.eclipse.jdt.core.compiler.CharOperation.concatWith(char[][],char)",1,96,n/a,54,2,2,20,9
"org.eclipse.jdt.core.compiler.CharOperation.concatWith(char[][],char[],char)",3,10,n/a,62,2,3,23,9
"org.eclipse.jdt.core.compiler.CharOperation.contains(char,char[])",0,4,n/a,32,0,2,5,3
"org.eclipse.jdt.core.compiler.CharOperation.contains(char,char[][])",0,0,n/a,35,1,2,8,4
"org.eclipse.jdt.core.compiler.CharOperation.deepCopy(char[][])",1,1,n/a,18,1,1,11,2
"org.eclipse.jdt.core.compiler.CharOperation.endsWith(char[],char[])",0,4,n/a,37,0,2,8,4
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[])",0,280,n/a,48,0,2,11,7
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[],boolean)",3,26,n/a,64,1,3,13,8
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[],int,int)",0,2,n/a,60,0,4,11,7
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[][],char[][])",1,46,n/a,48,0,2,11,7
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[][],char[][],boolean)",2,1,n/a,63,1,3,13,8
"org.eclipse.jdt.core.compiler.CharOperation.fragmentEquals(char[],char[],int,boolean)",2,2,n/a,74,1,4,14,7
"org.eclipse.jdt.core.compiler.CharOperation.hashCode(char[])",0,22,n/a,22,1,1,14,4
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char,char[])",0,16,n/a,33,0,2,6,3
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char,char[],int)",0,54,n/a,45,0,3,6,3
"org.eclipse.jdt.core.compiler.CharOperation.isWhitespace(char)",0,14,n/a,33,1,1,9,3
"org.eclipse.jdt.core.compiler.CharOperation.lastIndexOf(char,char[])",0,39,n/a,34,0,2,5,3
"org.eclipse.jdt.core.compiler.CharOperation.lastIndexOf(char,char[],int)",0,1,n/a,48,0,3,5,3
"org.eclipse.jdt.core.compiler.CharOperation.lastIndexOf(char,char[],int,int)",0,1,n/a,53,0,4,5,3
"org.eclipse.jdt.core.compiler.CharOperation.lastSegment(char[],char)",2,16,n/a,20,0,2,4,2
"org.eclipse.jdt.core.compiler.CharOperation.match(char[],char[],boolean)",1,21,n/a,57,0,3,5,3
"org.eclipse.jdt.core.compiler.CharOperation.match(char[],int,int,char[],int,int,boolean)",2,4,n/a,116,3,7,42,23
"org.eclipse.jdt.core.compiler.CharOperation.occurencesOf(char,char[])",0,6,n/a,33,0,2,7,3
"org.eclipse.jdt.core.compiler.CharOperation.occurencesOf(char,char[],int)",0,0,n/a,41,0,3,7,3
"org.eclipse.jdt.core.compiler.CharOperation.pathMatch(char[],char[],boolean,char)",16,2,n/a,185,3,4,84,49
"org.eclipse.jdt.core.compiler.CharOperation.prefixEquals(char[],char[])",0,16,n/a,37,0,2,8,4
"org.eclipse.jdt.core.compiler.CharOperation.prefixEquals(char[],char[],boolean)",2,28,n/a,52,1,3,14,7
"org.eclipse.jdt.core.compiler.CharOperation.replace(char[],char,char)",0,23,n/a,39,2,3,6,4
"org.eclipse.jdt.core.compiler.CharOperation.replace(char[],char[],char[])",5,0,n/a,82,3,3,35,9
"org.eclipse.jdt.core.compiler.CharOperation.replaceOnCopy(char[],char,char)",1,21,n/a,50,3,3,15,6
"org.eclipse.jdt.core.compiler.CharOperation.splitAndTrimOn(char,char[])",2,15,n/a,79,2,2,31,15
"org.eclipse.jdt.core.compiler.CharOperation.splitOn(char,char[])",2,40,n/a,56,2,2,21,7
"org.eclipse.jdt.core.compiler.CharOperation.splitOn(char,char[],int,int)",2,8,n/a,54,2,4,21,8
"org.eclipse.jdt.core.compiler.CharOperation.subarray(char[],int,int)",1,118,n/a,45,0,3,11,5
"org.eclipse.jdt.core.compiler.CharOperation.subarray(char[][],int,int)",1,64,n/a,45,0,3,11,5
"org.eclipse.jdt.core.compiler.CharOperation.toLowerCase(char[])",2,34,n/a,45,3,1,14,7
"org.eclipse.jdt.core.compiler.CharOperation.toString(char[][])",2,23,n/a,25,0,1,2,1
"org.eclipse.jdt.core.compiler.CharOperation.toStrings(char[][])",1,16,n/a,16,0,1,11,4
"org.eclipse.jdt.core.compiler.CharOperation.trim(char[])",1,0,n/a,37,1,1,10,8
"org.eclipse.jdt.core.compiler.IProblem.getArguments()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.getID()",n/a,22,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.getMessage()",n/a,16,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.getOriginatingFileName()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.getSourceEnd()",n/a,19,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.getSourceLineNumber()",n/a,15,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.getSourceStart()",n/a,27,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.isError()",n/a,20,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.isWarning()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.setSourceEnd(int)",n/a,11,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.setSourceLineNumber(int)",n/a,12,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.compiler.IProblem.setSourceStart(int)",n/a,11,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getCurrentTokenEndPosition()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getCurrentTokenSource()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getCurrentTokenStartPosition()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getLineEnd(int)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getLineEnds()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getLineNumber(int)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getLineStart(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getNextToken()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getRawTokenSource()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.getSource()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.resetTo(int,int)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.compiler.IScanner.setSource(char[])",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.compiler.InvalidInputException.InvalidInputException()",1,11,n/a,6,0,0,1,1
"org.eclipse.jdt.core.compiler.InvalidInputException.InvalidInputException(String)",1,112,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.AST.AST()",2,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.AST(Map)",5,0,n/a,41,1,1,8,3
"org.eclipse.jdt.core.dom.AST.AST(int)",2,2,n/a,23,1,1,4,3
"org.eclipse.jdt.core.dom.AST.apiLevel()",0,66,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.convertCompilationUnit(int,CompilationUnitDeclaration,char[],Map,boolean,WorkingCopyOwner,IProgressMonitor)",12,2,n/a,38,0,7,11,2
"org.eclipse.jdt.core.dom.AST.createInstance(Class)",7,1,n/a,37,1,1,10,6
"org.eclipse.jdt.core.dom.AST.createInstance(int)",2,1,n/a,19,0,1,2,1
"org.eclipse.jdt.core.dom.AST.disableEvents()",0,12,n/a,14,1,0,2,1
"org.eclipse.jdt.core.dom.AST.getBindingResolver()",0,43,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.AST.getDefaultNodeFlag()",0,2,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.getEventHandler()",0,1,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.modificationCount()",0,8,n/a,28,0,0,1,1
"org.eclipse.jdt.core.dom.AST.modifying()",0,4,n/a,25,1,0,3,2
"org.eclipse.jdt.core.dom.AST.newAST(int)",2,6,n/a,19,1,1,3,3
"org.eclipse.jdt.core.dom.AST.newAnnotationTypeDeclaration()",1,1,n/a,14,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newAnnotationTypeMemberDeclaration()",1,1,n/a,15,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newAnonymousClassDeclaration()",1,2,n/a,10,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newArrayAccess()",1,1,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newArrayCreation()",1,1,n/a,43,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newArrayInitializer()",1,1,n/a,10,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newArrayType(Type)",2,3,n/a,18,0,1,3,1
"org.eclipse.jdt.core.dom.AST.newArrayType(Type,int)",6,11,n/a,33,1,2,11,6
"org.eclipse.jdt.core.dom.AST.newAssertStatement()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newAssignment()",1,2,n/a,12,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newBlock()",1,7,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newBlockComment()",1,1,n/a,17,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newBooleanLiteral(boolean)",2,2,n/a,22,0,1,3,1
"org.eclipse.jdt.core.dom.AST.newBreakStatement()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newCastExpression()",1,1,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newCatchClause()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newCharacterLiteral()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newClassInstanceCreation()",1,2,n/a,13,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newCompilationUnit()",1,3,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newConditionalExpression()",1,1,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newConstructorInvocation()",1,1,n/a,16,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newContinueStatement()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newDoStatement()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newEmptyStatement()",1,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newEnhancedForStatement()",1,1,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newEnumConstantDeclaration()",1,1,n/a,15,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newEnumDeclaration()",1,1,n/a,16,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newExpressionStatement(Expression)",2,2,n/a,25,0,1,3,1
"org.eclipse.jdt.core.dom.AST.newFieldAccess()",1,1,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newFieldDeclaration(VariableDeclarationFragment)",4,3,n/a,30,1,1,5,2
"org.eclipse.jdt.core.dom.AST.newForStatement()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newIfStatement()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newImportDeclaration()",1,1,n/a,16,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newInfixExpression()",1,7,n/a,12,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newInitializer()",1,5,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newInstanceofExpression()",1,1,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newJavadoc()",1,2,n/a,12,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newLabeledStatement()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newLineComment()",1,1,n/a,17,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newMarkerAnnotation()",1,1,n/a,13,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newMemberRef()",1,1,n/a,16,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newMemberValuePair()",1,1,n/a,13,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newMethodDeclaration()",2,3,n/a,19,0,0,3,1
"org.eclipse.jdt.core.dom.AST.newMethodInvocation()",1,1,n/a,12,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newMethodRef()",1,1,n/a,17,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newMethodRefParameter()",1,1,n/a,16,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newModifier(ModifierKeyword)",2,12,n/a,16,0,1,3,1
"org.eclipse.jdt.core.dom.AST.newModifiers(int)",35,0,n/a,55,1,1,26,13
"org.eclipse.jdt.core.dom.AST.newName(String[])",4,14,n/a,28,1,1,10,3
"org.eclipse.jdt.core.dom.AST.newNormalAnnotation()",1,1,n/a,14,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newNullLiteral()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newNumberLiteral()",1,0,n/a,10,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newNumberLiteral(String)",3,6,n/a,15,1,1,5,2
"org.eclipse.jdt.core.dom.AST.newPackageDeclaration()",1,1,n/a,16,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newParameterizedType(Type)",2,3,n/a,20,0,1,3,1
"org.eclipse.jdt.core.dom.AST.newParenthesizedExpression()",1,1,n/a,10,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newPostfixExpression()",1,1,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newPrefixExpression()",1,2,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newPrimitiveType(Code)",2,31,n/a,14,0,1,3,1
"org.eclipse.jdt.core.dom.AST.newQualifiedName(Name,SimpleName)",3,6,n/a,21,0,2,4,1
"org.eclipse.jdt.core.dom.AST.newQualifiedType(Type,SimpleName)",3,1,n/a,22,0,2,4,1
"org.eclipse.jdt.core.dom.AST.newReturnStatement()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newSimpleName(String)",3,54,n/a,17,1,1,5,2
"org.eclipse.jdt.core.dom.AST.newSimpleType(Name)",2,17,n/a,21,0,1,3,1
"org.eclipse.jdt.core.dom.AST.newSingleMemberAnnotation()",1,1,n/a,13,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newSingleVariableDeclaration()",1,4,n/a,12,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newStringLiteral()",1,2,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newSuperConstructorInvocation()",1,1,n/a,17,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newSuperFieldAccess()",1,1,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newSuperMethodInvocation()",1,1,n/a,12,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newSwitchCase()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newSwitchStatement()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newSynchronizedStatement()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newTagElement()",1,8,n/a,15,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newTextElement()",1,3,n/a,15,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newThisExpression()",1,2,n/a,10,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newThrowStatement()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newTryStatement()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newTypeDeclaration()",2,6,n/a,21,0,0,3,1
"org.eclipse.jdt.core.dom.AST.newTypeDeclarationStatement(AbstractTypeDeclaration)",3,2,n/a,30,1,1,6,3
"org.eclipse.jdt.core.dom.AST.newTypeDeclarationStatement(TypeDeclaration)",2,1,n/a,24,0,1,3,1
"org.eclipse.jdt.core.dom.AST.newTypeLiteral()",1,1,n/a,10,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newTypeParameter()",1,1,n/a,13,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newVariableDeclarationExpression(VariableDeclarationFragment)",4,1,n/a,31,1,1,5,2
"org.eclipse.jdt.core.dom.AST.newVariableDeclarationFragment()",1,8,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.AST.newVariableDeclarationStatement(VariableDeclarationFragment)",4,1,n/a,31,1,1,5,2
"org.eclipse.jdt.core.dom.AST.newWhileStatement()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AST.newWildcardType()",1,1,n/a,18,0,0,2,1
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(IClassFile,boolean)",6,0,n/a,76,1,2,9,3
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(ICompilationUnit,boolean)",5,0,n/a,72,1,2,7,2
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(char[])",4,0,n/a,44,1,1,6,2
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(char[],String,IJavaProject)",6,0,n/a,79,1,3,8,2
"org.eclipse.jdt.core.dom.AST.postAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",3,2,n/a,28,2,3,7,2
"org.eclipse.jdt.core.dom.AST.postCloneNodeEvent(ASTNode,ASTNode)",3,1,n/a,26,2,2,7,2
"org.eclipse.jdt.core.dom.AST.postRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",3,2,n/a,28,2,3,7,2
"org.eclipse.jdt.core.dom.AST.postReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",3,2,n/a,29,2,4,7,2
"org.eclipse.jdt.core.dom.AST.postValueChangeEvent(ASTNode,SimplePropertyDescriptor)",3,1,n/a,28,2,2,7,2
"org.eclipse.jdt.core.dom.AST.preAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",3,2,n/a,28,2,3,7,2
"org.eclipse.jdt.core.dom.AST.preCloneNodeEvent(ASTNode)",3,1,n/a,25,2,1,7,2
"org.eclipse.jdt.core.dom.AST.preRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",3,2,n/a,28,2,3,7,2
"org.eclipse.jdt.core.dom.AST.preReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",3,2,n/a,29,2,4,7,2
"org.eclipse.jdt.core.dom.AST.preValueChangeEvent(ASTNode,SimplePropertyDescriptor)",3,1,n/a,28,2,2,7,2
"org.eclipse.jdt.core.dom.AST.recordModifications(CompilationUnit)",8,1,n/a,31,1,1,10,5
"org.eclipse.jdt.core.dom.AST.reenableEvents()",0,12,n/a,13,1,0,2,1
"org.eclipse.jdt.core.dom.AST.resolveWellKnownType(String)",3,1,n/a,42,1,1,3,2
"org.eclipse.jdt.core.dom.AST.rewrite(IDocument,Map)",3,1,n/a,31,1,2,5,3
"org.eclipse.jdt.core.dom.AST.setBindingResolver(BindingResolver)",1,4,n/a,11,1,1,3,2
"org.eclipse.jdt.core.dom.AST.setDefaultNodeFlag(int)",0,13,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.AST.setEventHandler(NodeEventHandler)",1,1,n/a,12,1,1,3,2
"org.eclipse.jdt.core.dom.AST.setOriginalModificationCount(long)",0,8,n/a,8,0,1,1,1
"org.eclipse.jdt.core.dom.AST.supportedOnlyIn2()",1,0,n/a,11,1,0,2,2
"org.eclipse.jdt.core.dom.AST.unsupportedIn2()",1,1,n/a,11,1,0,2,2
"org.eclipse.jdt.core.dom.ASTConverter.ASTConverter(Map,boolean,IProgressMonitor)",6,4,n/a,20,1,3,10,3
"org.eclipse.jdt.core.dom.ASTConverter.adjustSourcePositionsForParent(Expression)",3,1,n/a,28,4,1,19,7
"org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(TypeDeclaration,AbstractTypeDeclaration)",17,2,n/a,68,3,2,49,20
"org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(TypeDeclaration,AnonymousClassDeclaration)",16,2,n/a,66,3,2,48,20
"org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(TypeDeclaration,EnumDeclaration)",15,1,n/a,63,3,2,47,19
"org.eclipse.jdt.core.dom.ASTConverter.buildCommentsTable(CompilationUnit,int[][])",4,4,n/a,23,2,2,14,4
"org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(FieldDeclaration[],int,List)",14,3,n/a,26,2,3,14,5
"org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(Statement[],int,List)",9,2,n/a,19,2,3,8,4
"org.eclipse.jdt.core.dom.ASTConverter.checkCanceled()",2,6,n/a,4,0,0,2,3
"org.eclipse.jdt.core.dom.ASTConverter.completeRecord(ArrayType,ASTNode)",4,3,n/a,11,2,2,9,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(AND_AND_Expression)",9,1,n/a,13,1,1,10,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ASTNode[])",29,1,n/a,51,3,1,32,13
"org.eclipse.jdt.core.dom.ASTConverter.convert(AbstractMethodDeclaration)",72,4,n/a,140,5,1,110,39
"org.eclipse.jdt.core.dom.ASTConverter.convert(AllocationExpression)",16,1,n/a,34,3,1,29,10
"org.eclipse.jdt.core.dom.ASTConverter.convert(Annotation)",3,7,n/a,9,1,1,5,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(AnnotationMethodDeclaration)",17,1,n/a,35,1,1,27,6
"org.eclipse.jdt.core.dom.ASTConverter.convert(Argument)",23,2,n/a,47,2,1,33,9
"org.eclipse.jdt.core.dom.ASTConverter.convert(ArrayAllocationExpression)",23,1,n/a,48,3,1,39,11
"org.eclipse.jdt.core.dom.ASTConverter.convert(ArrayInitializer)",7,2,n/a,19,3,1,15,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(ArrayReference)",7,1,n/a,10,1,1,7,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(AssertStatement)",7,1,n/a,14,1,1,11,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Assignment)",9,1,n/a,13,1,1,10,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(BinaryExpression)",84,1,n/a,144,5,1,129,39
"org.eclipse.jdt.core.dom.ASTConverter.convert(Block)",7,7,n/a,18,3,1,13,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(BreakStatement)",7,1,n/a,11,1,1,8,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CaseStatement)",6,1,n/a,12,1,1,8,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CastExpression)",10,1,n/a,16,1,1,12,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(CharLiteral)",7,1,n/a,14,1,1,11,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ClassLiteralAccess)",5,1,n/a,9,1,1,6,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CompilationUnitDeclaration,char[])",21,3,n/a,57,3,2,43,12
"org.eclipse.jdt.core.dom.ASTConverter.convert(CompoundAssignment)",18,1,n/a,44,1,1,41,12
"org.eclipse.jdt.core.dom.ASTConverter.convert(ConditionalExpression)",9,1,n/a,11,1,1,8,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ContinueStatement)",7,1,n/a,11,1,1,8,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(DoStatement)",7,1,n/a,8,0,1,6,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(DoubleLiteral)",6,1,n/a,13,1,1,10,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(EmptyStatement)",2,1,n/a,5,0,1,3,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(EqualExpression)",10,1,n/a,19,1,1,15,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(ExplicitConstructorCall)",25,2,n/a,60,4,1,52,17
"org.eclipse.jdt.core.dom.ASTConverter.convert(Expression)",35,67,n/a,109,1,1,71,36
"org.eclipse.jdt.core.dom.ASTConverter.convert(ExtendedStringLiteral)",6,1,n/a,10,1,1,7,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(FalseLiteral)",3,1,n/a,8,1,1,5,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(FieldDeclaration)",22,3,n/a,40,3,1,32,7
"org.eclipse.jdt.core.dom.ASTConverter.convert(FieldReference)",24,1,n/a,42,3,1,32,8
"org.eclipse.jdt.core.dom.ASTConverter.convert(FloatLiteral)",6,1,n/a,13,1,1,10,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ForStatement)",22,1,n/a,43,4,1,35,10
"org.eclipse.jdt.core.dom.ASTConverter.convert(ForeachStatement)",10,1,n/a,17,1,1,14,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(IfStatement)",8,1,n/a,10,1,1,7,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(InstanceOfExpression)",8,1,n/a,12,1,1,9,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(IntLiteral)",6,1,n/a,13,1,1,10,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(IntLiteralMinValue)",6,1,n/a,13,1,1,10,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Javadoc,BodyDeclaration)",13,7,n/a,22,5,2,13,10
"org.eclipse.jdt.core.dom.ASTConverter.convert(LabeledStatement)",8,1,n/a,10,0,1,8,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(LongLiteral)",6,1,n/a,13,1,1,10,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(LongLiteralMinValue)",6,1,n/a,13,1,1,10,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(MarkerAnnotation)",3,1,n/a,8,0,1,6,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(MemberValuePair)",8,1,n/a,13,0,1,11,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(MessageSend)",45,2,n/a,117,4,1,91,28
"org.eclipse.jdt.core.dom.ASTConverter.convert(NameReference)",2,2,n/a,7,1,1,3,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(NormalAnnotation)",6,1,n/a,14,2,1,12,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(NullLiteral)",3,1,n/a,8,1,1,5,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(OR_OR_Expression)",9,1,n/a,13,1,1,10,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(PostfixExpression)",7,1,n/a,17,1,1,13,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(PrefixExpression)",7,1,n/a,17,1,1,13,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedAllocationExpression)",28,1,n/a,58,3,1,48,14
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedNameReference)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedSuperReference)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedThisReference)",6,1,n/a,10,1,1,7,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Reference)",4,1,n/a,15,1,1,9,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(ReturnStatement)",5,1,n/a,9,1,1,6,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(SingleMemberAnnotation)",5,1,n/a,9,0,1,7,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(SingleNameReference)",4,1,n/a,8,1,1,5,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Statement)",50,11,n/a,112,4,1,83,32
"org.eclipse.jdt.core.dom.ASTConverter.convert(StringLiteral)",7,1,n/a,16,1,1,12,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(StringLiteralConcatenation)",12,2,n/a,16,1,1,14,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(SwitchStatement)",7,1,n/a,13,2,1,11,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(SynchronizedStatement)",6,1,n/a,7,0,1,5,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(ThisReference)",7,1,n/a,18,2,1,12,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(ThrowStatement)",5,1,n/a,7,0,1,5,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(TrueLiteral)",3,1,n/a,8,1,1,5,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(TryStatement)",15,1,n/a,24,2,1,21,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(TypeDeclaration)",32,6,n/a,74,3,1,60,19
"org.eclipse.jdt.core.dom.ASTConverter.convert(TypeParameter)",20,2,n/a,33,2,1,29,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(TypeReference)",6,8,n/a,18,1,1,12,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(UnaryExpression)",9,1,n/a,22,1,1,18,6
"org.eclipse.jdt.core.dom.ASTConverter.convert(WhileStatement)",6,1,n/a,8,0,1,6,1
"org.eclipse.jdt.core.dom.ASTConverter.convertImport(ImportReference)",14,1,n/a,37,3,1,28,7
"org.eclipse.jdt.core.dom.ASTConverter.convertPackage(CompilationUnitDeclaration)",14,1,n/a,35,3,1,29,7
"org.eclipse.jdt.core.dom.ASTConverter.convertToAnnotationDeclaration(TypeDeclaration)",12,1,n/a,22,1,1,17,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToEnumDeclaration(TypeDeclaration)",15,1,n/a,27,2,1,23,5
"org.eclipse.jdt.core.dom.ASTConverter.convertToExpression(Statement)",1,2,n/a,7,1,1,3,2
"org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(FieldDeclaration)",10,2,n/a,16,1,1,12,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(Expression)",7,2,n/a,15,1,1,11,2
"org.eclipse.jdt.core.dom.ASTConverter.convertToSingleVariableDeclaration(LocalDeclaration)",17,1,n/a,28,1,1,20,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToType(NameReference)",6,1,n/a,9,1,1,6,2
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationExpression(LocalDeclaration)",8,1,n/a,14,1,1,10,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(FieldDeclaration)",17,3,n/a,23,1,1,17,4
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(LocalDeclaration)",16,4,n/a,26,2,1,18,5
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(LocalDeclaration)",8,3,n/a,14,1,1,10,3
"org.eclipse.jdt.core.dom.ASTConverter.convertType(TypeReference)",95,28,n/a,213,7,1,174,36
"org.eclipse.jdt.core.dom.ASTConverter.createComment(int[])",5,1,n/a,22,2,1,16,4
"org.eclipse.jdt.core.dom.ASTConverter.createFakeEmptyStatement(Statement)",4,6,n/a,8,0,1,6,1
"org.eclipse.jdt.core.dom.ASTConverter.createModifier(ModifierKeyword)",4,55,n/a,11,0,1,6,1
"org.eclipse.jdt.core.dom.ASTConverter.getOperatorFor(int)",0,2,n/a,43,1,1,40,20
"org.eclipse.jdt.core.dom.ASTConverter.getPrimitiveTypeCode(char[])",0,1,n/a,75,2,1,35,51
"org.eclipse.jdt.core.dom.ASTConverter.isPrimitiveType(char[])",0,1,n/a,76,2,1,36,51
"org.eclipse.jdt.core.dom.ASTConverter.lookupForScopes()",12,1,n/a,14,2,0,10,5
"org.eclipse.jdt.core.dom.ASTConverter.lookupScope(ASTNode)",11,2,n/a,45,3,1,25,18
"org.eclipse.jdt.core.dom.ASTConverter.recordName(Name,ASTNode)",7,6,n/a,20,4,2,14,5
"org.eclipse.jdt.core.dom.ASTConverter.recordNodes(ASTNode,ASTNode)",2,121,n/a,3,0,2,1,1
"org.eclipse.jdt.core.dom.ASTConverter.recordNodes(Javadoc,TagElement)",51,2,n/a,95,7,2,64,27
"org.eclipse.jdt.core.dom.ASTConverter.recordPendingNameScopeResolution(Name)",2,14,n/a,6,1,1,3,2
"org.eclipse.jdt.core.dom.ASTConverter.recordPendingThisExpressionScopeResolution(ThisExpression)",2,2,n/a,6,1,1,3,2
"org.eclipse.jdt.core.dom.ASTConverter.removeLeadingAndTrailingCommentsFromLiteral(ASTNode)",5,7,n/a,31,4,1,20,6
"org.eclipse.jdt.core.dom.ASTConverter.removeTrailingCommentFromExpressionEndingWithAParen(ASTNode)",5,3,n/a,26,4,1,15,6
"org.eclipse.jdt.core.dom.ASTConverter.retrieveClosingAngleBracketPosition(int)",2,4,n/a,23,3,1,12,5
"org.eclipse.jdt.core.dom.ASTConverter.retrieveColonPosition(ASTNode)",5,1,n/a,23,3,1,11,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEllipsisStartPosition(int,int)",2,1,n/a,18,3,2,8,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndBlockPosition(int,int)",2,1,n/a,26,4,2,14,6
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndOfDimensionsPosition(int,int)",2,1,n/a,31,3,2,17,6
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndOfElementTypeNamePosition(int,int)",2,3,n/a,26,3,2,15,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndOfRightParenthesisPosition(int,int)",2,1,n/a,19,3,2,8,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndingSemiColonPosition(int,int)",2,1,n/a,36,4,2,28,11
"org.eclipse.jdt.core.dom.ASTConverter.retrieveExtraDimension(int,int)",2,5,n/a,31,3,2,16,5
"org.eclipse.jdt.core.dom.ASTConverter.retrieveIdentifierAndSetPositions(int,int,Name)",3,3,n/a,16,3,3,9,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveIdentifierEndPosition(int,int)",3,2,n/a,19,3,2,8,4
"org.eclipse.jdt.core.dom.ASTConverter.retrievePositionBeforeNextCommaOrSemiColon(int,int)",2,2,n/a,41,4,2,29,11
"org.eclipse.jdt.core.dom.ASTConverter.retrieveProperRightBracketPosition(int,int)",2,6,n/a,18,4,2,10,5
"org.eclipse.jdt.core.dom.ASTConverter.retrieveRightBrace(int,int)",2,1,n/a,19,3,2,8,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveRightBraceOrSemiColonPosition(int,int)",2,1,n/a,21,3,2,10,5
"org.eclipse.jdt.core.dom.ASTConverter.retrieveRightBracketPosition(int,int)",2,1,n/a,19,3,2,8,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveSemiColonPosition(ASTNode)",5,7,n/a,44,4,1,31,11
"org.eclipse.jdt.core.dom.ASTConverter.retrieveStartBlockPosition(int,int)",2,4,n/a,19,3,2,8,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveStartingCatchPosition(int,int)",2,1,n/a,19,3,2,8,4
"org.eclipse.jdt.core.dom.ASTConverter.setAST(AST)",1,4,n/a,4,0,1,2,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(AnnotationTypeDeclaration,TypeDeclaration)",2,1,n/a,4,0,2,2,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(AnnotationTypeMemberDeclaration,AnnotationMethodDeclaration)",2,1,n/a,4,0,2,2,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(BodyDeclaration,Annotation[])",17,7,n/a,61,4,2,48,18
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(EnumDeclaration,TypeDeclaration)",2,1,n/a,4,0,2,2,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(FieldDeclaration,FieldDeclaration)",5,1,n/a,17,2,2,9,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(Initializer,Initializer)",5,2,n/a,17,2,2,9,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(MethodDeclaration,AbstractMethodDeclaration)",5,1,n/a,17,2,2,9,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(SingleVariableDeclaration,Argument)",20,1,n/a,71,5,2,55,21
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(SingleVariableDeclaration,LocalDeclaration)",17,1,n/a,58,4,2,48,18
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(TypeDeclaration,TypeDeclaration)",5,1,n/a,17,2,2,9,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(VariableDeclarationExpression,LocalDeclaration)",20,1,n/a,71,5,2,55,21
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(VariableDeclarationStatement,LocalDeclaration)",20,1,n/a,71,5,2,55,21
"org.eclipse.jdt.core.dom.ASTConverter.setQualifiedNameNameAndSourceRanges(char[][],long[],ASTNode)",25,7,n/a,48,2,3,44,5
"org.eclipse.jdt.core.dom.ASTConverter.setQualifiedNameNameAndSourceRanges(char[][],long[],int,int,ASTNode)",25,1,n/a,48,2,5,44,5
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForField(FieldDeclaration,Type,int)",21,1,n/a,40,4,3,26,6
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForMethodDeclaration(AnnotationTypeMemberDeclaration,Type,int)",1,1,n/a,3,0,3,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForMethodDeclaration(MethodDeclaration,Type,int)",22,1,n/a,63,4,3,47,13
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForSingleVariableDeclaration(SingleVariableDeclaration,Type,int)",18,3,n/a,35,4,3,23,5
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForVariableDeclarationExpression(VariableDeclarationExpression,Type,int)",18,1,n/a,35,4,3,23,5
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForVariableDeclarationStatement(VariableDeclarationStatement,Type,int)",18,1,n/a,35,4,3,23,5
"org.eclipse.jdt.core.dom.ASTConverter.setTypeNameForAnnotation(Annotation,Annotation)",6,3,n/a,21,1,2,15,3
"org.eclipse.jdt.core.dom.ASTConverter.trimWhiteSpacesAndComments(Expression)",3,2,n/a,47,4,1,30,9
"org.eclipse.jdt.core.dom.ASTConverter.updateInnerPositions(Type,int)",6,6,n/a,15,2,2,10,3
"org.eclipse.jdt.core.dom.ASTMatcher.ASTMatcher()",1,1,n/a,12,0,0,1,1
"org.eclipse.jdt.core.dom.ASTMatcher.ASTMatcher(boolean)",0,4,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.ASTMatcher.compareDeprecatedComment(Javadoc,Javadoc)",4,1,n/a,13,1,2,3,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(AnnotationTypeDeclaration,Object)",12,1,n/a,26,1,2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(AnnotationTypeMemberDeclaration,Object)",15,1,n/a,27,1,2,4,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(AnonymousClassDeclaration,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayAccess,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayCreation,Object)",9,1,n/a,24,1,2,4,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayInitializer,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayType,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(AssertStatement,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(Assignment,Object)",9,1,n/a,24,1,2,4,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(Block,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(BlockComment,Object)",0,1,n/a,21,1,2,3,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(BooleanLiteral,Object)",2,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(BreakStatement,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(CastExpression,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(CatchClause,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(CharacterLiteral,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ClassInstanceCreation,Object)",19,1,n/a,40,2,2,13,9
"org.eclipse.jdt.core.dom.ASTMatcher.match(CompilationUnit,Object)",9,1,n/a,24,1,2,4,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ConditionalExpression,Object)",9,1,n/a,24,1,2,4,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ConstructorInvocation,Object)",7,1,n/a,26,2,2,7,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ContinueStatement,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(DoStatement,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(EmptyStatement,Object)",0,1,n/a,20,1,2,3,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(EnhancedForStatement,Object)",9,1,n/a,25,1,2,4,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(EnumConstantDeclaration,Object)",18,1,n/a,38,1,2,4,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(EnumDeclaration,Object)",18,1,n/a,30,1,2,4,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(ExpressionStatement,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(FieldAccess,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(FieldDeclaration,Object)",15,1,n/a,35,2,2,11,8
"org.eclipse.jdt.core.dom.ASTMatcher.match(ForStatement,Object)",12,1,n/a,25,1,2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(IfStatement,Object)",9,1,n/a,24,1,2,4,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ImportDeclaration,Object)",8,1,n/a,28,2,2,7,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(InfixExpression,Object)",16,1,n/a,33,2,2,9,8
"org.eclipse.jdt.core.dom.ASTMatcher.match(Initializer,Object)",12,1,n/a,34,2,2,11,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(InstanceofExpression,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(Javadoc,Object)",4,2,n/a,37,1,2,6,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(LabeledStatement,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(LineComment,Object)",0,1,n/a,21,1,2,3,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(MarkerAnnotation,Object)",3,1,n/a,22,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(MemberRef,Object)",6,1,n/a,24,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(MemberValuePair,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodDeclaration,Object)",34,1,n/a,57,2,2,17,15
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodInvocation,Object)",13,1,n/a,29,2,2,7,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodRef,Object)",9,1,n/a,25,1,2,4,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodRefParameter,Object)",6,1,n/a,24,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(Modifier,Object)",2,1,n/a,22,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(NormalAnnotation,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(NullLiteral,Object)",0,1,n/a,20,1,2,3,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(NumberLiteral,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(PackageDeclaration,Object)",10,1,n/a,29,2,2,9,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(ParameterizedType,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(ParenthesizedExpression,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(PostfixExpression,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(PrefixExpression,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(PrimitiveType,Object)",2,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(QualifiedName,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(QualifiedType,Object)",6,1,n/a,24,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(ReturnStatement,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SimpleName,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SimpleType,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SingleMemberAnnotation,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(SingleVariableDeclaration,Object)",19,1,n/a,43,2,2,13,10
"org.eclipse.jdt.core.dom.ASTMatcher.match(StringLiteral,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperConstructorInvocation,Object)",10,1,n/a,28,2,2,7,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperFieldAccess,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperMethodInvocation,Object)",13,1,n/a,29,2,2,7,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(SwitchCase,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SwitchStatement,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(SynchronizedStatement,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(TagElement,Object)",6,1,n/a,24,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(TextElement,Object)",3,1,n/a,22,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ThisExpression,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ThrowStatement,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(TryStatement,Object)",9,1,n/a,24,1,2,4,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeDeclaration,Object)",32,1,n/a,51,2,2,21,14
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeDeclarationStatement,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeLiteral,Object)",3,1,n/a,21,1,2,4,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeParameter,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(VariableDeclarationExpression,Object)",12,1,n/a,33,2,2,11,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(VariableDeclarationFragment,Object)",8,1,n/a,27,1,2,4,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(VariableDeclarationStatement,Object)",12,1,n/a,33,2,2,11,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(WhileStatement,Object)",6,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(WildcardType,Object)",5,1,n/a,23,1,2,4,3
"org.eclipse.jdt.core.dom.ASTMatcher.safeEquals(Object,Object)",1,6,n/a,20,1,2,5,4
"org.eclipse.jdt.core.dom.ASTMatcher.safeSubtreeListMatch(List,List)",8,55,n/a,31,2,2,11,4
"org.eclipse.jdt.core.dom.ASTMatcher.safeSubtreeMatch(Object,Object)",1,119,n/a,29,1,2,5,5
"org.eclipse.jdt.core.dom.ASTNode.ASTNode(AST)",5,19,n/a,22,1,1,5,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.hasNext()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.next()",1,1,n/a,8,0,0,3,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.remove()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.update(int,int)",0,1,n/a,14,1,2,2,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.NodeList(ChildListPropertyDescriptor)",1,46,n/a,12,0,1,2,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.add(int,Object)",8,0,n/a,21,1,2,11,3
"org.eclipse.jdt.core.dom.ASTNode.NodeList.get(int)",1,0,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.listSize()",5,55,n/a,14,1,0,6,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.memSize()",1,1,n/a,21,0,0,4,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.newCursor()",3,1,n/a,23,2,0,6,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.releaseCursor(Cursor)",2,1,n/a,20,2,1,4,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.remove(int)",8,0,n/a,22,1,1,11,3
"org.eclipse.jdt.core.dom.ASTNode.NodeList.set(int,Object)",10,0,n/a,30,1,2,17,5
"org.eclipse.jdt.core.dom.ASTNode.NodeList.size()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.updateCursors(int,int)",4,2,n/a,22,1,2,6,3
"org.eclipse.jdt.core.dom.ASTNode.accept(ASTVisitor)",4,301,n/a,17,1,1,5,2
"org.eclipse.jdt.core.dom.ASTNode.accept0(ASTVisitor)",n/a,1,83,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTVisitor,ASTNode)",1,121,n/a,19,1,2,3,2
"org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTVisitor,NodeList)",5,56,n/a,26,2,2,6,2
"org.eclipse.jdt.core.dom.ASTNode.addProperty(StructuralPropertyDescriptor,List)",4,245,n/a,15,1,2,4,2
"org.eclipse.jdt.core.dom.ASTNode.appendDebugString(StringBuffer)",1,4,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ASTNode.appendPrintString(StringBuffer)",4,4,n/a,11,0,1,3,1
"org.eclipse.jdt.core.dom.ASTNode.checkModifiable()",2,4,n/a,11,1,0,3,2
"org.eclipse.jdt.core.dom.ASTNode.checkNewChild(ASTNode,ASTNode,boolean,Class)",9,3,n/a,47,1,4,11,8
"org.eclipse.jdt.core.dom.ASTNode.clone(AST)",3,65,n/a,19,0,1,4,1
"org.eclipse.jdt.core.dom.ASTNode.clone0(AST)",n/a,1,83,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.ASTNode.copySubtree(AST,ASTNode)",6,56,n/a,32,1,2,8,4
"org.eclipse.jdt.core.dom.ASTNode.copySubtrees(AST,List)",7,55,n/a,26,1,2,7,2
"org.eclipse.jdt.core.dom.ASTNode.createPropertyList(Class,List)",1,99,n/a,11,0,2,1,1
"org.eclipse.jdt.core.dom.ASTNode.delete()",8,0,n/a,27,1,0,9,4
"org.eclipse.jdt.core.dom.ASTNode.equals(Object)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getAST()",0,86,n/a,12,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.getFlags()",0,38,n/a,25,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.getLength()",0,168,n/a,17,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.getLocationInParent()",0,8,n/a,27,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.getNodeType()",0,24,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.getNodeType0()",n/a,1,83,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ASTNode.getParent()",0,34,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.getProperty(String)",3,3,n/a,27,2,1,10,5
"org.eclipse.jdt.core.dom.ASTNode.getRoot()",1,4,n/a,17,2,0,6,3
"org.eclipse.jdt.core.dom.ASTNode.getStartPosition()",0,275,n/a,17,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.getStructuralProperty(StructuralPropertyDescriptor)",10,9,n/a,37,2,1,14,6
"org.eclipse.jdt.core.dom.ASTNode.internalGetChildListProperty(ChildListPropertyDescriptor)",1,33,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",1,8,n/a,20,0,3,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",1,67,n/a,20,0,3,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",1,10,n/a,20,0,3,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",1,15,n/a,21,0,3,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalStructuralPropertiesForType(int)",n/a,1,83,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.ASTNode.memSize()",n/a,0,87,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ASTNode.nodeClassForType(int)",1,1,n/a,181,1,1,168,84
"org.eclipse.jdt.core.dom.ASTNode.postLazyInit(ASTNode,ChildPropertyDescriptor)",2,79,n/a,17,0,2,2,1
"org.eclipse.jdt.core.dom.ASTNode.postReplaceChild(ASTNode,ASTNode,ChildPropertyDescriptor)",3,108,n/a,19,2,3,5,3
"org.eclipse.jdt.core.dom.ASTNode.postValueChange(SimplePropertyDescriptor)",1,27,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.ASTNode.preLazyInit()",1,79,n/a,24,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.preReplaceChild(ASTNode,ASTNode,ChildPropertyDescriptor)",8,109,n/a,70,2,3,15,8
"org.eclipse.jdt.core.dom.ASTNode.preValueChange(SimplePropertyDescriptor)",3,28,n/a,34,1,1,4,2
"org.eclipse.jdt.core.dom.ASTNode.properties()",2,0,n/a,23,1,0,7,4
"org.eclipse.jdt.core.dom.ASTNode.reapPropertyList(List)",5,99,n/a,16,0,1,4,1
"org.eclipse.jdt.core.dom.ASTNode.setFlags(int)",1,32,n/a,29,0,1,3,1
"org.eclipse.jdt.core.dom.ASTNode.setNodeType(int)",0,1,n/a,10,0,1,2,1
"org.eclipse.jdt.core.dom.ASTNode.setParent(ASTNode,StructuralPropertyDescriptor)",1,17,n/a,21,0,2,3,1
"org.eclipse.jdt.core.dom.ASTNode.setProperty(String,Object)",12,9,n/a,78,3,2,33,10
"org.eclipse.jdt.core.dom.ASTNode.setSourceRange(int,int)",3,285,n/a,31,1,2,7,5
"org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(StructuralPropertyDescriptor,Object)",13,3,n/a,49,3,2,23,10
"org.eclipse.jdt.core.dom.ASTNode.standardToString()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.stringSize(String)",1,8,n/a,19,1,1,5,2
"org.eclipse.jdt.core.dom.ASTNode.structuralPropertiesForType()",1,2,n/a,16,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.subtreeBytes()",1,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.ASTNode.subtreeMatch(ASTMatcher,Object)",1,6,n/a,12,0,2,1,1
"org.eclipse.jdt.core.dom.ASTNode.subtreeMatch0(ASTMatcher,Object)",n/a,1,83,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2()",1,15,n/a,11,1,0,2,2
"org.eclipse.jdt.core.dom.ASTNode.toString()",8,0,n/a,20,1,0,8,2
"org.eclipse.jdt.core.dom.ASTNode.treeSize()",n/a,77,83,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ASTNode.unsupportedIn2()",1,40,n/a,11,1,0,2,2
"org.eclipse.jdt.core.dom.ASTParser.ASTParser(int)",2,1,n/a,17,1,1,4,3
"org.eclipse.jdt.core.dom.ASTParser.createAST(IProgressMonitor)",3,5,n/a,30,2,1,7,4
"org.eclipse.jdt.core.dom.ASTParser.createASTs(ICompilationUnit[],String[],ASTRequestor,IProgressMonitor)",4,1,n/a,73,2,4,7,3
"org.eclipse.jdt.core.dom.ASTParser.initializeDefaults()",1,3,n/a,17,0,0,12,1
"org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(IProgressMonitor)",29,1,n/a,90,5,1,46,21
"org.eclipse.jdt.core.dom.ASTParser.internalCreateASTForKind()",51,1,n/a,163,4,0,77,16
"org.eclipse.jdt.core.dom.ASTParser.newParser(int)",1,4,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTParser.propagateErrors(ASTNode,IProblem[])",2,3,n/a,4,0,2,2,1
"org.eclipse.jdt.core.dom.ASTParser.rootNodeToCompilationUnit(AST,CompilationUnit,ASTNode,RecordedParsingInformation)",35,3,n/a,55,4,4,43,10
"org.eclipse.jdt.core.dom.ASTParser.setCompilerOptions(Map)",1,1,n/a,16,1,1,3,2
"org.eclipse.jdt.core.dom.ASTParser.setFocalPosition(int)",0,2,n/a,40,0,1,2,1
"org.eclipse.jdt.core.dom.ASTParser.setKind(int)",1,2,n/a,81,1,1,3,5
"org.eclipse.jdt.core.dom.ASTParser.setProject(IJavaProject)",1,3,n/a,22,1,1,3,2
"org.eclipse.jdt.core.dom.ASTParser.setResolveBindings(boolean)",0,3,n/a,52,0,1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setSource(IClassFile)",2,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.ASTParser.setSource(ICompilationUnit)",2,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.ASTParser.setSource(char[])",0,4,n/a,12,0,1,3,1
"org.eclipse.jdt.core.dom.ASTParser.setSourceRange(int,int)",1,2,n/a,16,1,2,4,3
"org.eclipse.jdt.core.dom.ASTParser.setUnitName(String)",0,3,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setWorkingCopyOwner(WorkingCopyOwner)",0,1,n/a,14,1,1,3,2
"org.eclipse.jdt.core.dom.ASTRequestor.ASTRequestor()",0,0,n/a,6,0,0,0,1
"org.eclipse.jdt.core.dom.ASTRequestor.acceptAST(ICompilationUnit,CompilationUnit)",0,2,n/a,14,0,2,0,1
"org.eclipse.jdt.core.dom.ASTRequestor.acceptBinding(String,IBinding)",0,2,n/a,16,0,2,0,1
"org.eclipse.jdt.core.dom.ASTRequestor.createBindings(String[])",1,0,n/a,35,2,1,9,3
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.ASTSyntaxErrorPropagator(IProblem[])",1,2,n/a,5,0,1,2,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.checkAndTagAsMalformed(ASTNode)",10,6,n/a,43,3,1,39,8
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(CompilationUnit)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(FieldDeclaration)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(ImportDeclaration)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(Initializer)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(MethodDeclaration)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(PackageDeclaration)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.ASTVisitor()",1,5,n/a,12,0,0,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.ASTVisitor(boolean)",0,5,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AnnotationTypeDeclaration)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AnnotationTypeMemberDeclaration)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AnonymousClassDeclaration)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayAccess)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayCreation)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayInitializer)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayType)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AssertStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Assignment)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Block)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(BlockComment)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(BooleanLiteral)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(BreakStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CastExpression)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CatchClause)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CharacterLiteral)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ClassInstanceCreation)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CompilationUnit)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ConditionalExpression)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ConstructorInvocation)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ContinueStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(DoStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EmptyStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EnhancedForStatement)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EnumConstantDeclaration)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EnumDeclaration)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ExpressionStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(FieldAccess)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(FieldDeclaration)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ForStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(IfStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ImportDeclaration)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(InfixExpression)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Initializer)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(InstanceofExpression)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Javadoc)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(LabeledStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(LineComment)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MarkerAnnotation)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MemberRef)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MemberValuePair)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodDeclaration)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodInvocation)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodRef)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodRefParameter)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Modifier)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NormalAnnotation)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NullLiteral)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NumberLiteral)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PackageDeclaration)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ParameterizedType)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ParenthesizedExpression)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PostfixExpression)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PrefixExpression)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PrimitiveType)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(QualifiedName)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(QualifiedType)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ReturnStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SimpleName)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SimpleType)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SingleMemberAnnotation)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SingleVariableDeclaration)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(StringLiteral)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperConstructorInvocation)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperFieldAccess)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperMethodInvocation)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SwitchCase)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SwitchStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SynchronizedStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TagElement)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TextElement)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ThisExpression)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ThrowStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TryStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeDeclaration)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeDeclarationStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeLiteral)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeParameter)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(VariableDeclarationExpression)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(VariableDeclarationFragment)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(VariableDeclarationStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(WhileStatement)",0,1,n/a,11,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(WildcardType)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.postVisit(ASTNode)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.preVisit(ASTNode)",0,1,n/a,12,0,1,0,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AnnotationTypeDeclaration)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AnnotationTypeMemberDeclaration)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AnonymousClassDeclaration)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayAccess)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayCreation)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayInitializer)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayType)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AssertStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Assignment)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Block)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(BlockComment)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(BooleanLiteral)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(BreakStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CastExpression)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CatchClause)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CharacterLiteral)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ClassInstanceCreation)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CompilationUnit)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ConditionalExpression)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ConstructorInvocation)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ContinueStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(DoStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EmptyStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EnhancedForStatement)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EnumConstantDeclaration)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EnumDeclaration)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ExpressionStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(FieldAccess)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(FieldDeclaration)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ForStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(IfStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ImportDeclaration)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(InfixExpression)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Initializer)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(InstanceofExpression)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Javadoc)",0,4,n/a,21,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(LabeledStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(LineComment)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MarkerAnnotation)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MemberRef)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MemberValuePair)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodDeclaration)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodInvocation)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodRef)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodRefParameter)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Modifier)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NormalAnnotation)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NullLiteral)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NumberLiteral)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PackageDeclaration)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ParameterizedType)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ParenthesizedExpression)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PostfixExpression)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PrefixExpression)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PrimitiveType)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(QualifiedName)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(QualifiedType)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ReturnStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SimpleName)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SimpleType)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SingleMemberAnnotation)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SingleVariableDeclaration)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(StringLiteral)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperConstructorInvocation)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperFieldAccess)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperMethodInvocation)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SwitchCase)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SwitchStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SynchronizedStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TagElement)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TextElement)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ThisExpression)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ThrowStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TryStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeDeclaration)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeDeclarationStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeLiteral)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeParameter)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(VariableDeclarationExpression)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(VariableDeclarationFragment)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(VariableDeclarationStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(WhileStatement)",0,1,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(WildcardType)",0,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.AbstractTypeDeclaration(AST)",3,3,n/a,15,0,1,2,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.bodyDeclarations()",0,44,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.getBodyDeclarationsProperty()",1,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.getName()",4,23,n/a,19,3,0,7,3
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.getNameProperty()",1,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.internalBodyDeclarationPropertyFactory(Class)",1,3,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.internalBodyDeclarationsProperty()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.internalNameProperty()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.internalNamePropertyFactory(Class)",1,2,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.internalResolveBinding()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.isLocalTypeDeclaration()",1,0,n/a,15,0,0,2,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.isMemberTypeDeclaration()",1,0,n/a,20,0,0,2,3
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.isPackageMemberTypeDeclaration()",1,0,n/a,16,0,0,2,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.memSize()",1,9,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.resolveBinding()",1,5,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.setName(SimpleName)",4,11,n/a,22,1,1,7,2
"org.eclipse.jdt.core.dom.Annotation.Annotation(AST)",1,3,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Annotation.getTypeName()",4,21,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.Annotation.getTypeNameProperty()",1,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Annotation.internalTypeNameProperty()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.Annotation.internalTypeNamePropertyFactory(Class)",1,3,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.Annotation.isAnnotation()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Annotation.isMarkerAnnotation()",0,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Annotation.isModifier()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Annotation.isNormalAnnotation()",0,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Annotation.isSingleMemberAnnotation()",0,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Annotation.memSize()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Annotation.setTypeName(Name)",4,7,n/a,20,1,1,7,2
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.AnnotationTypeDeclaration(AST)",2,2,n/a,17,0,1,2,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.accept0(ASTVisitor)",8,1,n/a,14,1,1,7,2
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.clone0(AST)",18,1,n/a,13,0,1,7,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalBodyDeclarationsProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalJavadocProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalModifiers2Property()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalModifiersProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalNameProperty()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalResolveBinding()",2,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.memSize()",1,10,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.treeSize()",7,77,n/a,11,0,0,1,3
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.AnnotationTypeMemberDeclaration(AST)",2,2,n/a,17,0,1,2,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.accept0(ASTVisitor)",11,1,n/a,15,1,1,8,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.clone0(AST)",20,1,n/a,14,0,1,8,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getDefault()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getName()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getType()",3,7,n/a,19,3,0,7,3
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",11,67,n/a,47,2,3,26,11
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalJavadocProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalModifiers2Property()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalModifiersProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.memSize()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.resolveBinding()",2,1,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.setDefault(Expression)",2,3,n/a,19,0,1,4,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.setName(SimpleName)",3,4,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.setType(Type)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.treeSize()",10,77,n/a,12,0,0,1,5
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.AnonymousClassDeclaration(AST)",1,2,n/a,14,0,1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(ASTVisitor)",3,1,n/a,11,1,1,4,2
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.bodyDeclarations()",0,11,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.clone0(AST)",8,1,n/a,10,0,1,4,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.resolveBinding()",2,2,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.treeSize()",2,79,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.ArrayAccess(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.ArrayAccess.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.ArrayAccess.getArray()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ArrayAccess.getIndex()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ArrayAccess.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.ArrayAccess.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.setArray(Expression)",3,3,n/a,22,1,1,6,2
"org.eclipse.jdt.core.dom.ArrayAccess.setIndex(Expression)",3,3,n/a,22,1,1,6,2
"org.eclipse.jdt.core.dom.ArrayAccess.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.ArrayCreation.ArrayCreation(AST)",1,2,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.accept0(ASTVisitor)",7,1,n/a,13,1,1,6,2
"org.eclipse.jdt.core.dom.ArrayCreation.clone0(AST)",14,1,n/a,12,0,1,6,1
"org.eclipse.jdt.core.dom.ArrayCreation.dimensions()",0,7,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.getInitializer()",0,8,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.getType()",4,7,n/a,19,3,0,7,3
"org.eclipse.jdt.core.dom.ArrayCreation.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.ArrayCreation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.ArrayCreation.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.setInitializer(ArrayInitializer)",2,3,n/a,20,0,1,4,1
"org.eclipse.jdt.core.dom.ArrayCreation.setType(ArrayType)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.ArrayCreation.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.treeSize()",6,77,n/a,10,0,0,2,3
"org.eclipse.jdt.core.dom.ArrayInitializer.ArrayInitializer(AST)",1,2,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.accept0(ASTVisitor)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.ArrayInitializer.clone0(AST)",8,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.ArrayInitializer.expressions()",0,7,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.ArrayInitializer.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.treeSize()",2,78,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayType.ArrayType(AST)",1,3,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayType.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.ArrayType.clone0(AST)",7,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.ArrayType.getComponentType()",3,19,n/a,19,3,0,7,3
"org.eclipse.jdt.core.dom.ArrayType.getDimensions()",3,12,n/a,18,1,0,6,2
"org.eclipse.jdt.core.dom.ArrayType.getElementType()",3,9,n/a,17,1,0,4,2
"org.eclipse.jdt.core.dom.ArrayType.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.ArrayType.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayType.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ArrayType.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ArrayType.setComponentType(Type)",3,4,n/a,21,1,1,6,2
"org.eclipse.jdt.core.dom.ArrayType.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ArrayType.treeSize()",3,78,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.AssertStatement.AssertStatement(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.AssertStatement.clone0(AST)",11,1,n/a,13,0,1,6,1
"org.eclipse.jdt.core.dom.AssertStatement.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.AssertStatement.getMessage()",0,8,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.AssertStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AssertStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.AssertStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.AssertStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.setExpression(Expression)",3,3,n/a,21,1,1,6,2
"org.eclipse.jdt.core.dom.AssertStatement.setMessage(Expression)",2,3,n/a,19,0,1,4,1
"org.eclipse.jdt.core.dom.AssertStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.AssertStatement.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.Assignment.Assignment(AST)",1,2,n/a,10,0,1,1,1
"org.eclipse.jdt.core.dom.Assignment.Operator.Operator(String)",0,12,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Assignment.Operator.toOperator(String)",1,0,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.Assignment.Operator.toString()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.Assignment.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.Assignment.clone0(AST)",12,1,n/a,11,0,1,6,1
"org.eclipse.jdt.core.dom.Assignment.getLeftHandSide()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.Assignment.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Assignment.getOperator()",0,5,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.Assignment.getRightHandSide()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.Assignment.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.Assignment.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.Assignment.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.Assignment.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.Assignment.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.Assignment.setLeftHandSide(Expression)",3,4,n/a,21,1,1,6,2
"org.eclipse.jdt.core.dom.Assignment.setOperator(Operator)",3,14,n/a,14,1,1,5,2
"org.eclipse.jdt.core.dom.Assignment.setRightHandSide(Expression)",3,4,n/a,21,1,1,6,2
"org.eclipse.jdt.core.dom.Assignment.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.Assignment.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(Binding,Binding,boolean)",7,2,n/a,45,2,3,25,13
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(FieldBinding,FieldBinding)",3,1,n/a,6,0,2,1,4
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(MethodBinding,MethodBinding)",1,1,n/a,4,0,2,1,1
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(MethodBinding,MethodBinding,boolean)",10,2,n/a,18,1,3,3,14
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding,TypeBinding)",1,3,n/a,8,0,2,1,1
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding,TypeBinding,boolean)",52,11,n/a,89,4,3,47,41
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding[],TypeBinding[])",1,0,n/a,8,0,2,1,1
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding[],TypeBinding[],boolean)",1,10,n/a,24,3,3,14,6
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeVariableBinding[],TypeVariableBinding[])",4,0,n/a,30,3,2,17,9
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(VariableBinding,VariableBinding)",2,2,n/a,5,0,2,1,3
"org.eclipse.jdt.core.dom.BindingKey.BindingKey(String,CompilationUnitResolver)",3,2,n/a,6,0,2,4,1
"org.eclipse.jdt.core.dom.BindingKey.compoundName()",7,2,n/a,29,2,0,16,6
"org.eclipse.jdt.core.dom.BindingKey.getArrayBinding(int,TypeBinding)",1,3,n/a,10,0,2,5,3
"org.eclipse.jdt.core.dom.BindingKey.getBaseTypeBinding(char[])",0,1,n/a,24,1,1,21,11
"org.eclipse.jdt.core.dom.BindingKey.getBinaryBinding()",2,1,n/a,9,0,0,2,1
"org.eclipse.jdt.core.dom.BindingKey.getCompilationUnitDeclaration()",3,2,n/a,12,0,0,7,3
"org.eclipse.jdt.core.dom.BindingKey.getCompilerBinding()",6,6,n/a,15,1,0,6,4
"org.eclipse.jdt.core.dom.BindingKey.getCompilerBinding(CompilationUnitDeclaration)",25,2,n/a,58,4,1,39,18
"org.eclipse.jdt.core.dom.BindingKey.getFieldBinding(FieldBinding[])",2,1,n/a,15,1,1,10,4
"org.eclipse.jdt.core.dom.BindingKey.getGenericTypeBinding(SourceTypeBinding)",5,1,n/a,16,1,1,11,4
"org.eclipse.jdt.core.dom.BindingKey.getKey()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BindingKey.getLocalVariableBinding(BlockScope)",8,2,n/a,20,2,1,17,7
"org.eclipse.jdt.core.dom.BindingKey.getMethodBinding(MethodBinding[])",7,1,n/a,20,2,1,15,7
"org.eclipse.jdt.core.dom.BindingKey.getParameterizedGenericMethodBinding(MethodBinding)",4,1,n/a,16,1,1,11,3
"org.eclipse.jdt.core.dom.BindingKey.getParameterizedTypeBinding(ReferenceBinding,ReferenceBinding)",13,2,n/a,31,2,2,21,6
"org.eclipse.jdt.core.dom.BindingKey.getTypeBinding(CompilationUnitDeclaration,TypeDeclaration[],char[])",11,2,n/a,32,3,3,23,11
"org.eclipse.jdt.core.dom.BindingKey.getWildCardBinding(ReferenceBinding,int)",7,1,n/a,24,1,2,24,7
"org.eclipse.jdt.core.dom.BindingKey.reset()",0,5,n/a,7,0,0,2,1
"org.eclipse.jdt.core.dom.BindingKey.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.core.dom.BindingKeyScanner.BindingKeyScanner(char[])",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.BindingKeyScanner.getTokenSource()",1,11,n/a,6,0,0,4,1
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtFieldOrMethodStart()",0,1,n/a,5,0,0,1,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtLocalVariableStart()",0,2,n/a,5,0,0,1,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtMemberTypeStart()",0,3,n/a,6,0,0,1,4
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtParametersStart()",0,2,n/a,8,0,0,2,4
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtTypeParameterStart()",0,1,n/a,5,0,0,1,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtTypeStart()",1,1,n/a,3,0,0,1,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.isAtWildCardStart()",1,2,n/a,3,0,0,1,2
"org.eclipse.jdt.core.dom.BindingKeyScanner.nextToken()",0,9,n/a,119,4,0,102,32
"org.eclipse.jdt.core.dom.BindingKeyScanner.skipMethodSignature()",0,1,n/a,5,0,0,3,4
"org.eclipse.jdt.core.dom.BindingKeyScanner.skipParametersEnd()",0,1,n/a,5,0,0,3,3
"org.eclipse.jdt.core.dom.BindingKeyScanner.toString()",26,0,n/a,51,2,0,44,13
"org.eclipse.jdt.core.dom.BindingResolver.BindingResolver()",0,6,n/a,6,0,0,0,1
"org.eclipse.jdt.core.dom.BindingResolver.findDeclaringNode(IBinding)",0,2,n/a,42,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.findDeclaringNode(String)",0,1,n/a,14,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getCorrespondingNode(ASTNode)",0,3,n/a,14,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getMethodBinding(MethodBinding)",0,3,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getPackageBinding(PackageBinding)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getTypeBinding(TypeBinding)",0,20,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getVariableBinding(VariableBinding)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.recordScope(ASTNode,BlockScope)",0,3,n/a,11,0,2,0,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(ClassInstanceCreation)",0,1,n/a,21,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(ConstructorInvocation)",0,1,n/a,21,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(SuperConstructorInvocation)",0,1,n/a,21,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveExpressionType(Expression)",0,1,n/a,21,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveField(FieldAccess)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveField(SuperFieldAccess)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveImport(ImportDeclaration)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMember(AnnotationTypeMemberDeclaration)",0,1,n/a,22,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(MethodDeclaration)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(MethodInvocation)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(SuperMethodInvocation)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveName(Name)",0,1,n/a,19,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolvePackage(PackageDeclaration)",0,1,n/a,18,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveReference(MemberRef)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveReference(MethodRef)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(AnnotationTypeDeclaration)",0,2,n/a,22,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(AnonymousClassDeclaration)",0,1,n/a,21,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(EnumDeclaration)",0,1,n/a,22,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(Type)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(TypeDeclaration)",0,1,n/a,22,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveTypeParameter(TypeParameter)",0,1,n/a,22,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveVariable(EnumConstantDeclaration)",0,1,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveVariable(VariableDeclaration)",0,1,n/a,23,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveWellKnownType(String)",0,2,n/a,20,0,1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.store(ASTNode,ASTNode)",0,1,n/a,14,0,2,0,1
"org.eclipse.jdt.core.dom.BindingResolver.updateKey(ASTNode,ASTNode)",0,10,n/a,14,0,2,0,1
"org.eclipse.jdt.core.dom.Block.Block(AST)",1,11,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Block.accept0(ASTVisitor)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.Block.clone0(AST)",9,1,n/a,11,0,1,5,1
"org.eclipse.jdt.core.dom.Block.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Block.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.Block.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.Block.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Block.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.Block.statements()",0,17,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.Block.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.Block.treeSize()",2,83,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BlockComment.BlockComment(AST)",1,2,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.BlockComment.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.BlockComment.clone0(AST)",4,1,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.BlockComment.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BlockComment.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.BlockComment.memSize()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BlockComment.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.BlockComment.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.BlockComment.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.BodyDeclaration(AST)",3,6,n/a,15,1,1,3,2
"org.eclipse.jdt.core.dom.BodyDeclaration.getJavadoc()",0,67,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.getJavadocProperty()",1,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.getModifiers()",6,24,n/a,29,3,0,9,4
"org.eclipse.jdt.core.dom.BodyDeclaration.getModifiersProperty()",1,0,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalJavadocProperty()",n/a,2,8,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.BodyDeclaration.internalJavadocPropertyFactory(Class)",1,8,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalModifiers2Property()",n/a,2,8,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.BodyDeclaration.internalModifiers2PropertyFactory(Class)",1,8,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalModifiersProperty()",n/a,1,8,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.BodyDeclaration.internalModifiersPropertyFactory(Class)",1,4,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.memSize()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.modifiers()",1,50,n/a,17,1,0,3,2
"org.eclipse.jdt.core.dom.BodyDeclaration.setJavadoc(Javadoc)",3,17,n/a,13,0,1,5,1
"org.eclipse.jdt.core.dom.BodyDeclaration.setModifiers(int)",4,19,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.BooleanLiteral.BooleanLiteral(AST)",1,2,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.BooleanLiteral.booleanValue()",0,7,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.clone0(AST)",6,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.BooleanLiteral.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,8,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.BooleanLiteral.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.setBooleanValue(boolean)",2,3,n/a,12,0,1,3,1
"org.eclipse.jdt.core.dom.BooleanLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BreakStatement.BreakStatement(AST)",1,2,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.BreakStatement.clone0(AST)",8,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.BreakStatement.getLabel()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.BreakStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BreakStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.BreakStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.BreakStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.setLabel(SimpleName)",2,3,n/a,17,0,1,4,1
"org.eclipse.jdt.core.dom.BreakStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.BreakStatement.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.CastExpression.CastExpression(AST)",1,2,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.CastExpression.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.CastExpression.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.CastExpression.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.CastExpression.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.CastExpression.getType()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.CastExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.CastExpression.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.CastExpression.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.CastExpression.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.CastExpression.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.CastExpression.setType(Type)",3,4,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.CastExpression.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.CastExpression.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.CatchClause.CatchClause(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.CatchClause.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.CatchClause.clone0(AST)",10,1,n/a,11,0,1,5,1
"org.eclipse.jdt.core.dom.CatchClause.getBody()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.CatchClause.getException()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.CatchClause.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.CatchClause.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.CatchClause.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.CatchClause.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.CatchClause.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.CatchClause.setBody(Block)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.CatchClause.setException(SingleVariableDeclaration)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.CatchClause.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.CatchClause.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.CharacterLiteral.CharacterLiteral(AST)",1,2,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.CharacterLiteral.charValue()",21,0,n/a,90,4,0,55,34
"org.eclipse.jdt.core.dom.CharacterLiteral.clone0(AST)",6,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.CharacterLiteral.getEscapedValue()",0,6,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.CharacterLiteral.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.memSize()",1,1,n/a,7,0,0,2,1
"org.eclipse.jdt.core.dom.CharacterLiteral.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.setCharValue(char)",22,0,n/a,72,1,1,55,18
"org.eclipse.jdt.core.dom.CharacterLiteral.setEscapedValue(String)",9,4,n/a,36,2,1,17,5
"org.eclipse.jdt.core.dom.CharacterLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor.ChildListPropertyDescriptor(Class,String,Class,boolean)",2,46,n/a,20,1,4,5,2
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor.cycleRisk()",0,0,n/a,21,0,0,1,1
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor.getElementType()",0,0,n/a,12,0,0,1,1
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.ChildPropertyDescriptor(Class,String,Class,boolean,boolean)",3,110,n/a,23,1,5,6,3
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.cycleRisk()",0,0,n/a,21,0,0,1,1
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.getChildType()",0,0,n/a,12,0,0,1,1
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.isMandatory()",0,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.ClassInstanceCreation(AST)",2,2,n/a,19,1,1,3,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ASTVisitor)",12,1,n/a,20,2,1,11,4
"org.eclipse.jdt.core.dom.ClassInstanceCreation.arguments()",0,8,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.clone0(AST)",24,1,n/a,21,1,1,11,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getAnonymousClassDeclaration()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getExpression()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getName()",4,7,n/a,23,3,0,8,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getType()",4,7,n/a,23,3,0,8,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",9,67,n/a,39,2,3,21,9
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.resolveConstructorBinding()",2,0,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setAnonymousClassDeclaration(AnonymousClassDeclaration)",2,3,n/a,13,0,1,4,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setExpression(Expression)",2,3,n/a,20,0,1,4,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setName(Name)",4,4,n/a,24,1,1,7,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setType(Type)",4,4,n/a,24,1,1,7,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.treeSize()",11,77,n/a,16,0,0,1,7
"org.eclipse.jdt.core.dom.ClassInstanceCreation.typeArguments()",1,9,n/a,23,1,0,3,2
"org.eclipse.jdt.core.dom.Comment.Comment(AST)",1,3,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.Comment.getAlternateRoot()",0,2,n/a,22,0,0,1,1
"org.eclipse.jdt.core.dom.Comment.isBlockComment()",0,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Comment.isDocComment()",0,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Comment.isLineComment()",0,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Comment.memSize()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Comment.setAlternateRoot(ASTNode)",1,2,n/a,16,0,1,2,1
"org.eclipse.jdt.core.dom.CompilationUnit.CompilationUnit(AST)",1,2,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.accept0(ASTVisitor)",6,1,n/a,13,1,1,6,2
"org.eclipse.jdt.core.dom.CompilationUnit.clone0(AST)",15,1,n/a,13,0,1,6,1
"org.eclipse.jdt.core.dom.CompilationUnit.findDeclaringNode(IBinding)",2,0,n/a,48,0,1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.findDeclaringNode(String)",2,1,n/a,48,0,1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getCommentList()",0,6,n/a,50,0,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getCommentMapper()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getExtendedLength(ASTNode)",1,3,n/a,19,1,1,3,2
"org.eclipse.jdt.core.dom.CompilationUnit.getExtendedStartPosition(ASTNode)",1,3,n/a,19,1,1,3,2
"org.eclipse.jdt.core.dom.CompilationUnit.getMessages()",4,3,n/a,32,3,0,13,4
"org.eclipse.jdt.core.dom.CompilationUnit.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getPackage()",0,8,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getProblems()",0,3,n/a,18,0,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.imports()",0,7,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.initCommentMapper(Scanner)",2,1,n/a,11,0,1,2,1
"org.eclipse.jdt.core.dom.CompilationUnit.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.CompilationUnit.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.CompilationUnit.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.lineNumber(int)",2,2,n/a,70,2,1,18,8
"org.eclipse.jdt.core.dom.CompilationUnit.memSize()",0,1,n/a,14,1,0,6,3
"org.eclipse.jdt.core.dom.CompilationUnit.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.recordModifications()",2,3,n/a,19,0,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.rewrite(IDocument,Map)",2,2,n/a,39,0,2,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.setCommentTable(Comment[])",8,1,n/a,39,3,1,18,7
"org.eclipse.jdt.core.dom.CompilationUnit.setLineEndTable(int[])",2,6,n/a,19,1,1,4,2
"org.eclipse.jdt.core.dom.CompilationUnit.setPackage(PackageDeclaration)",2,3,n/a,19,0,1,4,1
"org.eclipse.jdt.core.dom.CompilationUnit.setProblems(IProblem[])",1,7,n/a,12,1,1,3,2
"org.eclipse.jdt.core.dom.CompilationUnit.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.treeSize()",9,77,n/a,21,3,0,13,6
"org.eclipse.jdt.core.dom.CompilationUnit.types()",0,10,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.CompilationUnitResolver(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory)",1,2,n/a,43,0,5,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.accept(ISourceType[],PackageBinding,AccessRestriction)",3,2,n/a,9,0,3,2,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.beginToCompile(ICompilationUnit[],String[])",24,1,n/a,67,3,2,41,8
"org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitDeclaration,char[],int,Map,boolean,WorkingCopyOwner,BindingTables,IProgressMonitor)",12,2,n/a,19,1,8,15,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.createBinding(String)",7,1,n/a,13,1,1,10,4
"org.eclipse.jdt.core.dom.CompilationUnitResolver.getHandlingPolicy()",1,2,n/a,3,2,0,3,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.getRequestor()",1,2,n/a,3,2,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.handleInternalException(AbortCompilation,CompilationUnitDeclaration)",2,5,n/a,11,1,2,3,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.handleInternalException(Throwable,CompilationUnitDeclaration,CompilationResult)",2,10,n/a,12,1,3,3,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.initializeParser()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.parse(ICompilationUnit,NodeSearcher,Map)",15,2,n/a,52,3,3,32,12
"org.eclipse.jdt.core.dom.CompilationUnitResolver.parse(ICompilationUnit[],ASTRequestor,int,Map,IProgressMonitor)",12,2,n/a,31,2,5,19,5
"org.eclipse.jdt.core.dom.CompilationUnitResolver.removeUnresolvedBindings(CompilationUnitDeclaration)",1,2,n/a,12,2,1,6,3
"org.eclipse.jdt.core.dom.CompilationUnitResolver.removeUnresolvedBindings(TypeDeclaration)",1,2,n/a,27,3,1,22,13
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitDeclaration,ICompilationUnit,NodeSearcher,boolean,boolean,boolean)",21,3,n/a,79,6,6,42,20
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitDeclaration,ICompilationUnit,boolean,boolean,boolean)",1,2,n/a,17,0,5,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit,IJavaProject,NodeSearcher,Map,WorkingCopyOwner,IProgressMonitor)",8,1,n/a,42,2,6,15,4
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit,boolean,boolean,boolean)",1,2,n/a,16,0,4,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit[],String[],ASTRequestor,int,Map,IJavaProject,WorkingCopyOwner,IProgressMonitor)",9,1,n/a,36,2,8,14,5
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit[],String[],ASTRequestor,int,Map,WorkingCopyOwner,IProgressMonitor)",37,1,n/a,80,5,7,60,13
"org.eclipse.jdt.core.dom.ConditionalExpression.ConditionalExpression(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.accept0(ASTVisitor)",8,1,n/a,13,1,1,6,2
"org.eclipse.jdt.core.dom.ConditionalExpression.clone0(AST)",13,1,n/a,13,0,1,6,1
"org.eclipse.jdt.core.dom.ConditionalExpression.getElseExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ConditionalExpression.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ConditionalExpression.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.getThenExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ConditionalExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,67,n/a,31,2,3,16,7
"org.eclipse.jdt.core.dom.ConditionalExpression.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.setElseExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.ConditionalExpression.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.ConditionalExpression.setThenExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.ConditionalExpression.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.treeSize()",7,77,n/a,10,0,0,1,4
"org.eclipse.jdt.core.dom.ConstructorInvocation.ConstructorInvocation(AST)",2,2,n/a,12,1,1,3,2
"org.eclipse.jdt.core.dom.ConstructorInvocation.accept0(ASTVisitor)",4,1,n/a,13,2,1,6,3
"org.eclipse.jdt.core.dom.ConstructorInvocation.arguments()",0,7,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.clone0(AST)",13,1,n/a,13,1,1,7,2
"org.eclipse.jdt.core.dom.ConstructorInvocation.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.ConstructorInvocation.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.memSize()",0,21,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.ConstructorInvocation.resolveConstructorBinding()",2,0,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.treeSize()",3,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.ConstructorInvocation.typeArguments()",1,8,n/a,23,1,0,3,2
"org.eclipse.jdt.core.dom.ContinueStatement.ContinueStatement(AST)",1,2,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.ContinueStatement.clone0(AST)",8,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.ContinueStatement.getLabel()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.ContinueStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.setLabel(SimpleName)",2,3,n/a,17,0,1,4,1
"org.eclipse.jdt.core.dom.ContinueStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.DefaultASTVisitor.DefaultASTVisitor()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(AnonymousClassDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayAccess)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayCreation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayInitializer)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayType)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(AssertStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Assignment)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Block)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(BlockComment)",1,1,n/a,4,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(BooleanLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(BreakStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CastExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CatchClause)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CharacterLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ClassInstanceCreation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CompilationUnit)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ConditionalExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ConstructorInvocation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ContinueStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(DoStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(EmptyStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ExpressionStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(FieldAccess)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(FieldDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ForStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(IfStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ImportDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(InfixExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Initializer)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(InstanceofExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Javadoc)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(LabeledStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(LineComment)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MemberRef)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodInvocation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodRef)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodRefParameter)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(NullLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(NumberLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PackageDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ParenthesizedExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PostfixExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PrefixExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PrimitiveType)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(QualifiedName)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ReturnStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SimpleName)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SimpleType)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SingleVariableDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(StringLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperConstructorInvocation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperFieldAccess)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperMethodInvocation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SwitchCase)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SwitchStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SynchronizedStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TagElement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TextElement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ThisExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ThrowStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TryStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeDeclarationStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(VariableDeclarationExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(VariableDeclarationFragment)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(VariableDeclarationStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(WhileStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisitNode(ASTNode)",0,69,n/a,3,0,1,0,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(AnonymousClassDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayAccess)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayCreation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayInitializer)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayType)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(AssertStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Assignment)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Block)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(BlockComment)",1,1,n/a,4,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(BooleanLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(BreakStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CastExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CatchClause)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CharacterLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ClassInstanceCreation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CompilationUnit)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ConditionalExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ConstructorInvocation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ContinueStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(DoStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(EmptyStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ExpressionStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(FieldAccess)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(FieldDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ForStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(IfStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ImportDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(InfixExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Initializer)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(InstanceofExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Javadoc)",2,4,n/a,7,1,1,3,2
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(LabeledStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(LineComment)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MemberRef)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodInvocation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodRef)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodRefParameter)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(NullLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(NumberLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PackageDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ParenthesizedExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PostfixExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PrefixExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PrimitiveType)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(QualifiedName)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ReturnStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SimpleName)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SimpleType)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SingleVariableDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(StringLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperConstructorInvocation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperFieldAccess)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperMethodInvocation)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SwitchCase)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SwitchStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SynchronizedStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TagElement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TextElement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ThisExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ThrowStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TryStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeDeclaration)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeDeclarationStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeLiteral)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(VariableDeclarationExpression)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(VariableDeclarationFragment)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(VariableDeclarationStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(WhileStatement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visitNode(ASTNode)",0,69,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.BindingTables.BindingTables()",2,3,n/a,4,0,0,2,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.DefaultBindingResolver(CompilationUnitScope,WorkingCopyOwner,BindingTables)",3,4,n/a,12,0,3,7,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.DefaultBindingResolver(LookupEnvironment,WorkingCopyOwner,BindingTables)",3,2,n/a,8,0,3,6,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.findDeclaringNode(IBinding)",1,2,n/a,9,1,1,3,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.findDeclaringNode(String)",2,1,n/a,9,1,1,6,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getBinding(Binding)",5,3,n/a,17,1,1,14,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getCorrespondingNode(ASTNode)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getMethodBinding(MethodBinding)",9,21,n/a,40,6,1,24,8
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getPackageBinding(PackageBinding)",4,9,n/a,15,1,1,8,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getTypeBinding(TypeBinding)",8,73,n/a,35,5,1,23,9
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getVariableBinding(VariableBinding)",9,17,n/a,41,6,1,25,8
"org.eclipse.jdt.core.dom.DefaultBindingResolver.recordScope(ASTNode,BlockScope)",1,3,n/a,6,0,2,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(ClassInstanceCreation)",3,1,n/a,13,1,1,7,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(ConstructorInvocation)",2,1,n/a,11,1,1,5,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(SuperConstructorInvocation)",2,1,n/a,11,1,1,5,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveExpressionType(Expression)",65,5,n/a,142,4,1,114,43
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveField(FieldAccess)",2,1,n/a,13,2,1,6,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveField(SuperFieldAccess)",2,1,n/a,13,2,1,6,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveImport(ImportDeclaration)",10,1,n/a,41,6,1,21,11
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMember(AnnotationTypeMemberDeclaration)",5,1,n/a,22,3,1,13,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(MethodDeclaration)",5,1,n/a,22,3,1,13,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(MethodInvocation)",2,1,n/a,13,2,1,6,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(SuperMethodInvocation)",2,1,n/a,13,2,1,6,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName(Name)",61,2,n/a,244,10,1,166,68
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolvePackage(PackageDeclaration)",8,1,n/a,29,4,1,15,7
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveReference(MemberRef)",4,1,n/a,18,2,1,9,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveReference(MethodRef)",3,1,n/a,14,1,1,6,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(AnnotationTypeDeclaration)",1,2,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(AnonymousClassDeclaration)",5,1,n/a,22,3,1,13,6
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(EnumDeclaration)",5,1,n/a,22,3,1,13,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(Type)",17,1,n/a,46,4,1,27,14
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(TypeDeclaration)",5,1,n/a,22,3,1,13,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveTypeParameter(TypeParameter)",5,1,n/a,19,3,1,13,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveVariable(EnumConstantDeclaration)",5,1,n/a,20,2,1,12,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveVariable(VariableDeclaration)",9,1,n/a,33,3,1,22,7
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveWellKnownType(String)",42,2,n/a,38,1,1,23,20
"org.eclipse.jdt.core.dom.DefaultBindingResolver.store(ASTNode,ASTNode)",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.updateKey(ASTNode,ASTNode)",2,10,n/a,9,1,2,3,2
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.endVisitNode(ASTNode)",4,69,n/a,11,2,1,4,3
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.visit(CompilationUnit)",0,1,n/a,4,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.visitNode(ASTNode)",7,69,n/a,25,2,1,10,4
"org.eclipse.jdt.core.dom.DefaultCommentMapper.DefaultCommentMapper(Comment[])",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getComment(int)",1,1,n/a,20,1,1,9,4
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getCommentIndex(int,int,int)",4,3,n/a,40,2,3,23,12
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getExtendedEnd(ASTNode)",4,2,n/a,17,2,1,12,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getExtendedLength(ASTNode)",2,2,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getExtendedStartPosition(ASTNode)",2,3,n/a,24,2,1,10,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getLeadingComments(ASTNode)",1,0,n/a,20,2,1,13,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getTrailingComments(ASTNode)",1,0,n/a,20,2,1,13,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.hasSameTable(Comment[])",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.initialize(CompilationUnit,Scanner)",6,1,n/a,50,3,2,27,10
"org.eclipse.jdt.core.dom.DefaultCommentMapper.storeLeadingComments(ASTNode,int)",21,1,n/a,115,5,2,60,26
"org.eclipse.jdt.core.dom.DefaultCommentMapper.storeTrailingComments(ASTNode,int,boolean)",20,2,n/a,149,5,3,93,28
"org.eclipse.jdt.core.dom.DoStatement.DoStatement(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.DoStatement.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.DoStatement.clone0(AST)",11,1,n/a,11,0,1,6,1
"org.eclipse.jdt.core.dom.DoStatement.getBody()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.DoStatement.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.DoStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.DoStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.DoStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.DoStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.DoStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.DoStatement.setBody(Statement)",3,3,n/a,28,1,1,6,2
"org.eclipse.jdt.core.dom.DoStatement.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.DoStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.DoStatement.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.DocCommentParser.DocCommentParser(AST,Scanner,boolean)",2,1,n/a,8,0,3,6,1
"org.eclipse.jdt.core.dom.DocCommentParser.createArgumentReference(char[],int,Object,long[],long)",17,2,n/a,43,3,5,30,8
"org.eclipse.jdt.core.dom.DocCommentParser.createFieldReference(Object)",12,1,n/a,27,2,1,17,3
"org.eclipse.jdt.core.dom.DocCommentParser.createMethodReference(Object,List)",16,2,n/a,39,3,2,21,5
"org.eclipse.jdt.core.dom.DocCommentParser.createTag()",20,15,n/a,58,2,0,42,15
"org.eclipse.jdt.core.dom.DocCommentParser.createTypeReference(int)",17,1,n/a,71,2,1,58,15
"org.eclipse.jdt.core.dom.DocCommentParser.parse(int,int)",4,1,n/a,15,1,2,9,3
"org.eclipse.jdt.core.dom.DocCommentParser.parse(int[])",1,1,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.parseReturn()",1,1,n/a,7,0,0,2,1
"org.eclipse.jdt.core.dom.DocCommentParser.parseTag(int)",34,1,n/a,207,4,1,164,31
"org.eclipse.jdt.core.dom.DocCommentParser.pushParamName(boolean)",24,1,n/a,37,1,1,26,3
"org.eclipse.jdt.core.dom.DocCommentParser.pushSeeRef(Object)",18,2,n/a,39,2,1,29,6
"org.eclipse.jdt.core.dom.DocCommentParser.pushText(int,int)",22,11,n/a,34,3,2,23,5
"org.eclipse.jdt.core.dom.DocCommentParser.pushThrowName(Object)",8,1,n/a,18,1,1,12,3
"org.eclipse.jdt.core.dom.DocCommentParser.refreshInlineTagPosition(int)",11,4,n/a,19,4,1,10,5
"org.eclipse.jdt.core.dom.DocCommentParser.setComment(int,int)",2,1,n/a,9,0,2,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.toString()",7,2,n/a,6,0,0,4,1
"org.eclipse.jdt.core.dom.DocCommentParser.updateDocComment()",2,1,n/a,8,1,0,4,2
"org.eclipse.jdt.core.dom.EmptyStatement.EmptyStatement(AST)",1,3,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.EmptyStatement.clone0(AST)",5,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.EmptyStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.EnhancedForStatement(AST)",2,2,n/a,11,0,1,2,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.accept0(ASTVisitor)",8,1,n/a,13,1,1,6,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.clone0(AST)",14,1,n/a,13,0,1,7,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.getBody()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.EnhancedForStatement.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.EnhancedForStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.getParameter()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.EnhancedForStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,67,n/a,31,2,3,16,7
"org.eclipse.jdt.core.dom.EnhancedForStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.resolveBinding()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.setBody(Statement)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.setParameter(SingleVariableDeclaration)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.treeSize()",7,77,n/a,10,0,0,1,4
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.EnumConstantDeclaration(AST)",2,2,n/a,17,0,1,2,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.accept0(ASTVisitor)",11,1,n/a,16,1,1,9,2
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.appendDebugString(StringBuffer)",28,4,n/a,31,3,1,22,7
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.arguments()",0,10,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.bodyDeclarations()",0,3,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.clone0(AST)",25,1,n/a,17,0,1,9,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.getAnonymousClassDeclaration()",0,10,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.getName()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",4,33,n/a,16,1,1,7,4
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,67,n/a,31,2,3,16,7
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalJavadocProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalModifiers2Property()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalModifiersProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.memSize()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.obsoleteBodyDeclarations()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.resolveVariable()",2,1,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.setAnonymousClassDeclaration(AnonymousClassDeclaration)",2,3,n/a,14,0,1,4,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.setName(SimpleName)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.treeSize()",10,77,n/a,13,0,0,1,4
"org.eclipse.jdt.core.dom.EnumDeclaration.EnumDeclaration(AST)",2,2,n/a,17,0,1,2,1
"org.eclipse.jdt.core.dom.EnumDeclaration.accept0(ASTVisitor)",10,1,n/a,16,1,1,9,2
"org.eclipse.jdt.core.dom.EnumDeclaration.clone0(AST)",26,1,n/a,18,0,1,9,1
"org.eclipse.jdt.core.dom.EnumDeclaration.enumConstants()",0,8,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalBodyDeclarationsProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",5,33,n/a,19,1,1,9,5
"org.eclipse.jdt.core.dom.EnumDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.EnumDeclaration.internalJavadocProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalModifiers2Property()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalModifiersProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalNameProperty()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalResolveBinding()",2,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.memSize()",1,10,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.superInterfaceTypes()",0,8,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.treeSize()",9,77,n/a,12,0,0,1,3
"org.eclipse.jdt.core.dom.Expression.Expression(AST)",1,26,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.Expression.resolveTypeBinding()",2,0,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.ExpressionStatement(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.ExpressionStatement.clone0(AST)",8,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.ExpressionStatement.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ExpressionStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.ExpressionStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.ExpressionStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.FieldAccess.FieldAccess(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.FieldAccess.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.FieldAccess.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.FieldAccess.getName()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.FieldAccess.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.FieldAccess.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.FieldAccess.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.FieldAccess.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.resolveFieldBinding()",2,0,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.FieldAccess.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.FieldAccess.setName(SimpleName)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.FieldAccess.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.FieldAccess.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.FieldDeclaration.FieldDeclaration(AST)",1,2,n/a,14,0,1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.accept0(ASTVisitor)",8,1,n/a,16,2,1,8,3
"org.eclipse.jdt.core.dom.FieldDeclaration.appendDebugString(StringBuffer)",14,4,n/a,17,2,1,11,3
"org.eclipse.jdt.core.dom.FieldDeclaration.clone0(AST)",20,1,n/a,19,1,1,10,3
"org.eclipse.jdt.core.dom.FieldDeclaration.fragments()",0,11,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.getType()",3,8,n/a,23,3,0,7,3
"org.eclipse.jdt.core.dom.FieldDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.FieldDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.FieldDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,10,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.FieldDeclaration.internalJavadocProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.internalModifiers2Property()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.internalModifiersProperty()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.memSize()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.FieldDeclaration.setType(Type)",3,14,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.FieldDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.treeSize()",7,77,n/a,11,0,0,1,4
"org.eclipse.jdt.core.dom.ForStatement.ForStatement(AST)",1,2,n/a,10,0,1,1,1
"org.eclipse.jdt.core.dom.ForStatement.accept0(ASTVisitor)",8,1,n/a,14,1,1,7,2
"org.eclipse.jdt.core.dom.ForStatement.clone0(AST)",19,1,n/a,15,0,1,8,1
"org.eclipse.jdt.core.dom.ForStatement.getBody()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ForStatement.getExpression()",0,8,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.ForStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ForStatement.initializers()",0,8,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.ForStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.ForStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.ForStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ForStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ForStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ForStatement.setBody(Statement)",3,3,n/a,28,1,1,6,2
"org.eclipse.jdt.core.dom.ForStatement.setExpression(Expression)",2,3,n/a,18,0,1,4,1
"org.eclipse.jdt.core.dom.ForStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ForStatement.treeSize()",7,77,n/a,11,0,0,1,3
"org.eclipse.jdt.core.dom.ForStatement.updaters()",0,7,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.IBinding.equals(Object)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.IBinding.getJavaElement()",n/a,6,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IBinding.getKey()",n/a,15,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IBinding.getKind()",n/a,5,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IBinding.getModifiers()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IBinding.getName()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IBinding.isDeprecated()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IBinding.isEqualTo(IBinding)",n/a,2,4,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.IBinding.isSynthetic()",n/a,3,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IBinding.toString()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IExtendedModifier.isAnnotation()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IExtendedModifier.isModifier()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.getDeclaringClass()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.getErasure()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.getExceptionTypes()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.getName()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.getParameterTypes()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.getReturnType()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.getTypeArguments()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.getTypeParameters()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.isConstructor()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.isDefaultConstructor()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.isGenericMethod()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.isParameterizedMethod()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.isRawMethod()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.isVarargs()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IMethodBinding.overrides(IMethodBinding)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.IPackageBinding.getName()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IPackageBinding.getNameComponents()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IPackageBinding.isUnnamed()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getBinaryName()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getBound()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getDeclaredFields()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getDeclaredMethods()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getDeclaredModifiers()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getDeclaredTypes()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getDeclaringClass()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getDimensions()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getElementType()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getErasure()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getInterfaces()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getModifiers()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getName()",n/a,7,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getPackage()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getQualifiedName()",n/a,9,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getSuperclass()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getTypeArguments()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getTypeBounds()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.getTypeParameters()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isAnnotation()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isAnonymous()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isArray()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isAssignmentCompatible(ITypeBinding)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isCastCompatible(ITypeBinding)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isClass()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isEnum()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isFromSource()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isGenericType()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isInterface()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isLocal()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isMember()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isNested()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isNullType()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isParameterizedType()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isPrimitive()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isRawType()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isSubTypeCompatible(ITypeBinding)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isTopLevel()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isTypeVariable()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isUpperbound()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.ITypeBinding.isWildcardType()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IVariableBinding.getConstantValue()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IVariableBinding.getDeclaringClass()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IVariableBinding.getDeclaringMethod()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IVariableBinding.getName()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IVariableBinding.getType()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IVariableBinding.getVariableId()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IVariableBinding.isField()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.IfStatement.IfStatement(AST)",1,2,n/a,14,0,1,1,1
"org.eclipse.jdt.core.dom.IfStatement.accept0(ASTVisitor)",8,1,n/a,13,1,1,6,2
"org.eclipse.jdt.core.dom.IfStatement.clone0(AST)",14,1,n/a,14,0,1,7,1
"org.eclipse.jdt.core.dom.IfStatement.getElseStatement()",0,8,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.IfStatement.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.IfStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.IfStatement.getThenStatement()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.IfStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,67,n/a,31,2,3,16,7
"org.eclipse.jdt.core.dom.IfStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.IfStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.IfStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.IfStatement.setElseStatement(Statement)",2,3,n/a,31,0,1,4,1
"org.eclipse.jdt.core.dom.IfStatement.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.IfStatement.setThenStatement(Statement)",3,3,n/a,28,1,1,6,2
"org.eclipse.jdt.core.dom.IfStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.IfStatement.treeSize()",7,77,n/a,10,0,0,1,4
"org.eclipse.jdt.core.dom.ImportDeclaration.ImportDeclaration(AST)",1,2,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.ImportDeclaration.clone0(AST)",11,1,n/a,13,1,1,7,2
"org.eclipse.jdt.core.dom.ImportDeclaration.getName()",5,7,n/a,26,3,0,7,3
"org.eclipse.jdt.core.dom.ImportDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",5,8,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.ImportDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.ImportDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.isOnDemand()",0,5,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.isStatic()",1,5,n/a,19,0,0,2,1
"org.eclipse.jdt.core.dom.ImportDeclaration.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.ImportDeclaration.resolveBinding()",2,0,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.setName(Name)",3,3,n/a,26,1,1,6,2
"org.eclipse.jdt.core.dom.ImportDeclaration.setOnDemand(boolean)",2,3,n/a,12,0,1,3,1
"org.eclipse.jdt.core.dom.ImportDeclaration.setStatic(boolean)",3,3,n/a,21,0,1,4,1
"org.eclipse.jdt.core.dom.ImportDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.InfixExpression.InfixExpression(AST)",1,2,n/a,10,0,1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.Operator.Operator(String)",0,19,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.Operator.toOperator(String)",1,0,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.Operator.toString()",0,3,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.InfixExpression.accept0(ASTVisitor)",7,1,n/a,16,2,1,7,3
"org.eclipse.jdt.core.dom.InfixExpression.clone0(AST)",16,1,n/a,16,1,1,8,2
"org.eclipse.jdt.core.dom.InfixExpression.extendedOperands()",1,13,n/a,27,1,0,3,2
"org.eclipse.jdt.core.dom.InfixExpression.getLeftOperand()",3,11,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.InfixExpression.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.InfixExpression.getOperator()",0,6,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.InfixExpression.getRightOperand()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.InfixExpression.hasExtendedOperands()",1,4,n/a,10,0,0,1,2
"org.eclipse.jdt.core.dom.InfixExpression.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.InfixExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.InfixExpression.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.InfixExpression.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.InfixExpression.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.setLeftOperand(Expression)",3,11,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.InfixExpression.setOperator(Operator)",3,28,n/a,14,1,1,5,2
"org.eclipse.jdt.core.dom.InfixExpression.setRightOperand(Expression)",3,10,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.InfixExpression.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.InfixExpression.treeSize()",6,77,n/a,10,0,0,1,4
"org.eclipse.jdt.core.dom.Initializer.Initializer(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.Initializer.accept0(ASTVisitor)",7,1,n/a,14,2,1,7,3
"org.eclipse.jdt.core.dom.Initializer.clone0(AST)",16,1,n/a,17,1,1,9,3
"org.eclipse.jdt.core.dom.Initializer.getBody()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.Initializer.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Initializer.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.Initializer.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.Initializer.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,10,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.Initializer.internalJavadocProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Initializer.internalModifiers2Property()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Initializer.internalModifiersProperty()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Initializer.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.Initializer.memSize()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Initializer.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.Initializer.setBody(Block)",3,6,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.Initializer.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.Initializer.treeSize()",6,77,n/a,10,0,0,1,4
"org.eclipse.jdt.core.dom.InstanceofExpression.InstanceofExpression(AST)",1,2,n/a,10,0,1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.InstanceofExpression.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.InstanceofExpression.getLeftOperand()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.InstanceofExpression.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.getRightOperand()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.InstanceofExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.InstanceofExpression.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.setLeftOperand(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.InstanceofExpression.setRightOperand(Type)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.InstanceofExpression.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.InternalASTRewrite.InternalASTRewrite(CompilationUnit)",4,1,n/a,10,0,1,4,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.getListEvent(ASTNode,StructuralPropertyDescriptor)",1,4,n/a,3,0,2,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.getNodeEvent(ASTNode,StructuralPropertyDescriptor)",1,5,n/a,3,0,2,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.getRootNode()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.markAsMoveOrCopyTarget(ASTNode,ASTNode)",12,4,n/a,24,2,2,10,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.postAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",9,2,n/a,19,2,3,13,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.postCloneNodeEvent(ASTNode,ASTNode)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.postValueChangeEvent(ASTNode,SimplePropertyDescriptor)",3,2,n/a,4,0,2,2,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.preAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",6,2,n/a,12,2,3,7,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.preCloneNodeEvent(ASTNode)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.preRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",10,2,n/a,15,2,3,10,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.preReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",10,2,n/a,17,2,4,12,5
"org.eclipse.jdt.core.dom.InternalASTRewrite.preValueChangeEvent(ASTNode,SimplePropertyDescriptor)",1,2,n/a,4,0,2,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.rewriteAST(IDocument,Map)",4,1,n/a,17,1,2,6,2
"org.eclipse.jdt.core.dom.InternalASTRewrite.toString()",5,0,n/a,6,0,0,4,1
"org.eclipse.jdt.core.dom.Javadoc.Javadoc(AST)",1,2,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.Javadoc.accept0(ASTVisitor)",3,1,n/a,11,1,1,4,2
"org.eclipse.jdt.core.dom.Javadoc.clone0(AST)",10,1,n/a,12,1,1,6,2
"org.eclipse.jdt.core.dom.Javadoc.getComment()",1,4,n/a,15,0,0,2,1
"org.eclipse.jdt.core.dom.Javadoc.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Javadoc.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.Javadoc.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.Javadoc.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.Javadoc.memSize()",2,4,n/a,11,1,0,4,2
"org.eclipse.jdt.core.dom.Javadoc.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.Javadoc.setComment(String)",11,3,n/a,47,4,1,25,8
"org.eclipse.jdt.core.dom.Javadoc.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.Javadoc.tags()",0,12,n/a,28,0,0,1,1
"org.eclipse.jdt.core.dom.Javadoc.treeSize()",2,86,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.LabeledStatement(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.LabeledStatement.clone0(AST)",10,1,n/a,12,0,1,5,1
"org.eclipse.jdt.core.dom.LabeledStatement.getBody()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.LabeledStatement.getLabel()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.LabeledStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.LabeledStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.setBody(Statement)",3,3,n/a,28,1,1,6,2
"org.eclipse.jdt.core.dom.LabeledStatement.setLabel(SimpleName)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.LabeledStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.LineComment.LineComment(AST)",1,2,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.LineComment.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.LineComment.clone0(AST)",4,1,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.LineComment.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.LineComment.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.LineComment.memSize()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.LineComment.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.LineComment.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.LineComment.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.MarkerAnnotation(AST)",2,2,n/a,14,0,1,2,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.accept0(ASTVisitor)",4,1,n/a,11,1,1,4,2
"org.eclipse.jdt.core.dom.MarkerAnnotation.clone0(AST)",7,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.MarkerAnnotation.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.internalTypeNameProperty()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.memSize()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.MemberRef.MemberRef(AST)",1,2,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.MemberRef.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.MemberRef.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.MemberRef.getName()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.MemberRef.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MemberRef.getQualifier()",0,10,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.MemberRef.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.MemberRef.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.MemberRef.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MemberRef.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.MemberRef.resolveBinding()",2,0,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.MemberRef.setName(SimpleName)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.MemberRef.setQualifier(Name)",2,3,n/a,17,0,1,4,1
"org.eclipse.jdt.core.dom.MemberRef.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.MemberRef.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.MemberValuePair.MemberValuePair(AST)",2,2,n/a,14,0,1,2,1
"org.eclipse.jdt.core.dom.MemberValuePair.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.MemberValuePair.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.MemberValuePair.getName()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.MemberValuePair.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.getValue()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.MemberValuePair.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.MemberValuePair.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.propertyDescriptors(int)",0,1,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.setName(SimpleName)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.MemberValuePair.setValue(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.MemberValuePair.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.Message.Message(String,int)",2,0,n/a,21,1,2,7,3
"org.eclipse.jdt.core.dom.Message.Message(String,int,int)",2,1,n/a,28,1,3,9,4
"org.eclipse.jdt.core.dom.Message.getLength()",0,2,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.Message.getMessage()",0,0,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.Message.getSourcePosition()",1,0,n/a,12,0,0,1,1
"org.eclipse.jdt.core.dom.Message.getStartPosition()",0,2,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.MethodBinding.MethodBinding(BindingResolver,MethodBinding)",0,2,n/a,4,0,2,2,1
"org.eclipse.jdt.core.dom.MethodBinding.getDeclaringClass()",1,3,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.MethodBinding.getErasure()",2,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getExceptionTypes()",1,0,n/a,19,2,0,12,4
"org.eclipse.jdt.core.dom.MethodBinding.getFullyQualifiedName(Type,StringBuffer)",36,5,n/a,45,2,2,37,12
"org.eclipse.jdt.core.dom.MethodBinding.getJavaElement()",25,6,n/a,42,2,0,35,10
"org.eclipse.jdt.core.dom.MethodBinding.getKey()",2,15,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.MethodBinding.getKind()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getModifiers()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getName()",4,2,n/a,13,2,0,5,3
"org.eclipse.jdt.core.dom.MethodBinding.getParameterTypes()",1,0,n/a,19,2,0,12,4
"org.eclipse.jdt.core.dom.MethodBinding.getReturnType()",1,1,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.MethodBinding.getSignature(Type)",4,1,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.MethodBinding.getTypeArguments()",1,2,n/a,28,4,0,17,6
"org.eclipse.jdt.core.dom.MethodBinding.getTypeParameters()",2,1,n/a,23,3,0,14,5
"org.eclipse.jdt.core.dom.MethodBinding.isConstructor()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isDefaultConstructor()",1,2,n/a,10,1,0,3,2
"org.eclipse.jdt.core.dom.MethodBinding.isDeprecated()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isEqualTo(IBinding)",1,2,n/a,19,1,1,8,4
"org.eclipse.jdt.core.dom.MethodBinding.isGenericMethod()",1,5,n/a,12,1,0,4,3
"org.eclipse.jdt.core.dom.MethodBinding.isParameterizedMethod()",0,5,n/a,7,0,0,1,2
"org.eclipse.jdt.core.dom.MethodBinding.isRawMethod()",0,5,n/a,7,0,0,1,2
"org.eclipse.jdt.core.dom.MethodBinding.isSynthetic()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isVarargs()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.MethodBinding.overrides(IMethodBinding)",3,0,n/a,14,0,1,10,4
"org.eclipse.jdt.core.dom.MethodBinding.toString()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.MethodDeclaration(AST)",2,2,n/a,21,1,1,3,2
"org.eclipse.jdt.core.dom.MethodDeclaration.accept0(ASTVisitor)",16,1,n/a,23,2,1,13,3
"org.eclipse.jdt.core.dom.MethodDeclaration.appendDebugString(StringBuffer)",17,4,n/a,18,2,1,12,4
"org.eclipse.jdt.core.dom.MethodDeclaration.clone0(AST)",41,1,n/a,31,1,1,17,3
"org.eclipse.jdt.core.dom.MethodDeclaration.getBody()",0,8,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getExtraDimensions()",0,5,n/a,18,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getName()",3,8,n/a,20,3,0,7,3
"org.eclipse.jdt.core.dom.MethodDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getReturnType()",4,6,n/a,30,3,0,8,3
"org.eclipse.jdt.core.dom.MethodDeclaration.getReturnType2()",4,7,n/a,33,3,0,9,5
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",5,33,n/a,19,1,1,9,5
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,8,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",11,67,n/a,47,2,3,26,11
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",5,10,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.MethodDeclaration.internalJavadocProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalModifiers2Property()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalModifiersProperty()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.isConstructor()",0,7,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.isVarargs()",8,0,n/a,30,1,0,6,3
"org.eclipse.jdt.core.dom.MethodDeclaration.memSize()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.parameters()",0,13,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.propertyDescriptors(int)",0,1,n/a,16,1,1,3,2
"org.eclipse.jdt.core.dom.MethodDeclaration.resolveBinding()",2,2,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setBody(Block)",2,4,n/a,25,0,1,4,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setConstructor(boolean)",2,6,n/a,11,0,1,3,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setExtraDimensions(int)",3,3,n/a,25,1,1,5,2
"org.eclipse.jdt.core.dom.MethodDeclaration.setName(SimpleName)",3,5,n/a,21,1,1,6,2
"org.eclipse.jdt.core.dom.MethodDeclaration.setReturnType(Type)",4,11,n/a,29,1,1,7,2
"org.eclipse.jdt.core.dom.MethodDeclaration.setReturnType2(Type)",3,7,n/a,30,0,1,6,1
"org.eclipse.jdt.core.dom.MethodDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.thrownExceptions()",0,10,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.treeSize()",12,77,n/a,15,0,0,1,7
"org.eclipse.jdt.core.dom.MethodDeclaration.typeParameters()",1,8,n/a,23,1,0,3,2
"org.eclipse.jdt.core.dom.MethodInvocation.MethodInvocation(AST)",2,3,n/a,13,1,1,3,2
"org.eclipse.jdt.core.dom.MethodInvocation.accept0(ASTVisitor)",8,1,n/a,16,2,1,8,3
"org.eclipse.jdt.core.dom.MethodInvocation.arguments()",0,7,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.clone0(AST)",18,1,n/a,15,1,1,8,2
"org.eclipse.jdt.core.dom.MethodInvocation.getExpression()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.getName()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.MethodInvocation.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.MethodInvocation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.MethodInvocation.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.MethodInvocation.resolveMethodBinding()",2,0,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.setExpression(Expression)",2,3,n/a,18,0,1,4,1
"org.eclipse.jdt.core.dom.MethodInvocation.setName(SimpleName)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.MethodInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.treeSize()",7,77,n/a,11,0,0,1,5
"org.eclipse.jdt.core.dom.MethodInvocation.typeArguments()",1,8,n/a,23,1,0,3,2
"org.eclipse.jdt.core.dom.MethodRef.MethodRef(AST)",1,2,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.MethodRef.accept0(ASTVisitor)",7,1,n/a,13,1,1,6,2
"org.eclipse.jdt.core.dom.MethodRef.clone0(AST)",14,1,n/a,12,0,1,6,1
"org.eclipse.jdt.core.dom.MethodRef.getName()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.MethodRef.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodRef.getQualifier()",0,10,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.MethodRef.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.MethodRef.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.MethodRef.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.MethodRef.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodRef.parameters()",0,8,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.MethodRef.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.MethodRef.resolveBinding()",2,0,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.MethodRef.setName(SimpleName)",3,3,n/a,21,1,1,6,2
"org.eclipse.jdt.core.dom.MethodRef.setQualifier(Name)",2,3,n/a,17,0,1,4,1
"org.eclipse.jdt.core.dom.MethodRef.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.MethodRef.treeSize()",6,77,n/a,10,0,0,1,3
"org.eclipse.jdt.core.dom.MethodRefParameter.MethodRefParameter(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.MethodRefParameter.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.MethodRefParameter.getName()",0,8,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.getType()",3,12,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.MethodRefParameter.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.MethodRefParameter.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.setName(SimpleName)",2,3,n/a,17,0,1,4,1
"org.eclipse.jdt.core.dom.MethodRefParameter.setType(Type)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.MethodRefParameter.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.Modifier.Modifier(AST)",2,2,n/a,14,0,1,2,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.ModifierKeyword(String,int)",0,11,n/a,14,0,2,2,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.fromFlagValue(int)",5,1,n/a,22,2,1,6,3
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.toFlagValue()",0,6,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.toKeyword(String)",1,1,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.toString()",0,3,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.Modifier.accept0(ASTVisitor)",2,1,n/a,8,0,1,2,1
"org.eclipse.jdt.core.dom.Modifier.clone0(AST)",6,1,n/a,10,0,1,4,1
"org.eclipse.jdt.core.dom.Modifier.getKeyword()",0,9,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.Modifier.getNodeType0()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.Modifier.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.Modifier.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isAbstract(int)",0,5,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isAnnotation()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Modifier.isFinal(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isModifier()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.Modifier.isNative(int)",0,5,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isPrivate(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isProtected(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isPublic(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isStatic(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isStrictfp(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isSynchronized(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isTransient(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.isVolatile(int)",0,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.memSize()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.Modifier.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.Modifier.setKeyword(ModifierKeyword)",3,4,n/a,15,1,1,5,2
"org.eclipse.jdt.core.dom.Modifier.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,8,0,2,1,1
"org.eclipse.jdt.core.dom.Modifier.treeSize()",1,77,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.NaiveASTFlattener()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.getResult()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.printIndent()",1,32,n/a,4,0,0,4,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.printModifiers(List)",5,11,n/a,14,1,1,5,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.printModifiers(int)",22,7,n/a,41,1,1,22,12
"org.eclipse.jdt.core.dom.NaiveASTFlattener.reset()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(AnnotationTypeDeclaration)",16,1,n/a,20,1,1,13,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(AnnotationTypeMemberDeclaration)",17,1,n/a,21,1,1,13,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(AnonymousClassDeclaration)",8,1,n/a,15,1,1,10,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ArrayAccess)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ArrayCreation)",16,1,n/a,25,1,1,19,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ArrayInitializer)",9,1,n/a,15,2,1,9,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ArrayType)",3,1,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(AssertStatement)",9,1,n/a,14,1,1,8,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Assignment)",7,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Block)",8,1,n/a,15,1,1,10,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(BlockComment)",2,1,n/a,9,0,1,3,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(BooleanLiteral)",3,1,n/a,11,1,1,4,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(BreakStatement)",7,1,n/a,13,1,1,7,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(CastExpression)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(CatchClause)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(CharacterLiteral)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ClassInstanceCreation)",36,1,n/a,40,4,1,28,10
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(CompilationUnit)",13,1,n/a,17,1,1,11,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ConditionalExpression)",8,1,n/a,11,0,1,6,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ConstructorInvocation)",23,1,n/a,29,4,1,20,7
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ContinueStatement)",7,1,n/a,13,1,1,7,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(DoStatement)",8,1,n/a,12,0,1,7,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(EmptyStatement)",2,1,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(EnhancedForStatement)",10,1,n/a,14,0,1,8,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(EnumConstantDeclaration)",22,1,n/a,27,3,1,17,6
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(EnumDeclaration)",38,1,n/a,45,3,1,31,9
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ExpressionStatement)",4,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(FieldAccess)",5,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(FieldDeclaration)",23,1,n/a,26,2,1,17,6
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ForStatement)",20,1,n/a,23,1,1,17,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(IfStatement)",11,1,n/a,15,1,1,9,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ImportDeclaration)",11,1,n/a,18,2,1,10,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(InfixExpression)",17,1,n/a,16,1,1,11,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Initializer)",13,1,n/a,16,1,1,8,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(InstanceofExpression)",5,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Javadoc)",8,4,n/a,13,1,1,8,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(LabeledStatement)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(LineComment)",1,1,n/a,8,0,1,2,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MarkerAnnotation)",3,1,n/a,9,0,1,3,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MemberRef)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MemberValuePair)",5,1,n/a,10,0,1,4,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MethodDeclaration)",61,1,n/a,69,4,1,49,17
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MethodInvocation)",28,1,n/a,33,4,1,23,8
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MethodRef)",15,1,n/a,21,2,1,13,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(MethodRefParameter)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(Modifier)",3,1,n/a,8,0,1,2,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(NormalAnnotation)",12,1,n/a,18,2,1,11,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(NullLiteral)",1,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(NumberLiteral)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(PackageDeclaration)",16,1,n/a,20,2,1,13,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ParameterizedType)",11,1,n/a,17,2,1,10,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ParenthesizedExpression)",4,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(PostfixExpression)",5,1,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(PrefixExpression)",5,1,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(PrimitiveType)",3,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(QualifiedName)",5,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(QualifiedType)",5,1,n/a,10,0,1,4,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ReturnStatement)",7,1,n/a,13,1,1,7,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SimpleName)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SimpleType)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SingleMemberAnnotation)",7,1,n/a,12,0,1,6,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SingleVariableDeclaration)",24,1,n/a,28,2,1,19,7
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(StringLiteral)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SuperConstructorInvocation)",27,1,n/a,33,4,1,23,8
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SuperFieldAccess)",7,1,n/a,12,1,1,6,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SuperMethodInvocation)",29,1,n/a,34,4,1,24,8
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SwitchCase)",6,1,n/a,14,1,1,7,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SwitchStatement)",12,1,n/a,19,1,1,14,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(SynchronizedStatement)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TagElement)",15,1,n/a,39,2,1,22,10
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TextElement)",2,1,n/a,8,0,1,2,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ThisExpression)",5,1,n/a,11,1,1,5,2
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(ThrowStatement)",5,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TryStatement)",14,1,n/a,18,1,1,12,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TypeDeclaration)",77,1,n/a,88,4,1,62,24
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TypeDeclarationStatement)",8,1,n/a,12,1,1,5,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TypeLiteral)",3,1,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(TypeParameter)",12,1,n/a,18,3,1,10,4
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(VariableDeclarationExpression)",18,1,n/a,21,2,1,13,5
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(VariableDeclarationFragment)",8,1,n/a,14,1,1,9,3
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(VariableDeclarationStatement)",20,1,n/a,23,2,1,15,5
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(WhileStatement)",7,1,n/a,11,0,1,6,1
"org.eclipse.jdt.core.dom.NaiveASTFlattener.visit(WildcardType)",6,1,n/a,17,2,1,8,3
"org.eclipse.jdt.core.dom.Name.Name(AST)",1,2,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.Name.appendName(StringBuffer)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.Name.getFullyQualifiedName()",5,2,n/a,20,1,0,5,2
"org.eclipse.jdt.core.dom.Name.isQualifiedName()",0,2,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Name.isSimpleName()",0,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Name.resolveBinding()",2,0,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.NodeEventHandler()",0,2,n/a,6,0,0,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",0,2,n/a,14,0,3,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postCloneNodeEvent(ASTNode,ASTNode)",0,2,n/a,14,0,2,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",0,2,n/a,14,0,3,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",0,2,n/a,15,0,4,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postValueChangeEvent(ASTNode,SimplePropertyDescriptor)",0,2,n/a,14,0,2,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",0,2,n/a,18,0,3,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preCloneNodeEvent(ASTNode)",0,2,n/a,13,0,1,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",0,2,n/a,14,0,3,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",0,2,n/a,16,0,4,0,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preValueChangeEvent(ASTNode,SimplePropertyDescriptor)",0,2,n/a,14,0,2,0,1
"org.eclipse.jdt.core.dom.NodeSearcher.NodeSearcher(int)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.NodeSearcher.visit(ConstructorDeclaration,ClassScope)",0,2,n/a,10,1,2,4,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(FieldDeclaration,MethodScope)",0,1,n/a,10,1,2,4,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(Initializer,MethodScope)",0,2,n/a,8,1,2,4,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(MethodDeclaration,ClassScope)",0,2,n/a,10,1,2,4,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(TypeDeclaration,ClassScope)",0,2,n/a,10,1,2,4,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(TypeDeclaration,CompilationUnitScope)",0,2,n/a,10,1,2,4,3
"org.eclipse.jdt.core.dom.NormalAnnotation.NormalAnnotation(AST)",2,2,n/a,15,0,1,2,1
"org.eclipse.jdt.core.dom.NormalAnnotation.accept0(ASTVisitor)",5,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.NormalAnnotation.clone0(AST)",11,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.NormalAnnotation.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.NormalAnnotation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.NormalAnnotation.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.internalTypeNameProperty()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.memSize()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.treeSize()",4,77,n/a,9,0,0,1,2
"org.eclipse.jdt.core.dom.NormalAnnotation.values()",0,7,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.NullLiteral.NullLiteral(AST)",1,2,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.NullLiteral.clone0(AST)",4,1,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.NullLiteral.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.NullLiteral.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.NullLiteral.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.NullLiteral.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.NumberLiteral(AST)",1,3,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.NumberLiteral.clone0(AST)",6,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.NumberLiteral.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.getToken()",0,5,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.NumberLiteral.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.memSize()",1,1,n/a,7,0,0,2,1
"org.eclipse.jdt.core.dom.NumberLiteral.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.setToken(String)",12,3,n/a,50,3,1,35,9
"org.eclipse.jdt.core.dom.NumberLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PackageBinding.PackageBinding(PackageBinding)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.computeNameAndComponents()",7,2,n/a,18,2,0,15,4
"org.eclipse.jdt.core.dom.PackageBinding.getJavaElement()",2,6,n/a,12,0,0,10,4
"org.eclipse.jdt.core.dom.PackageBinding.getKey()",2,15,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PackageBinding.getKind()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PackageBinding.getModifiers()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PackageBinding.getName()",1,2,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.PackageBinding.getNameComponents()",1,0,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.PackageBinding.isDeprecated()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PackageBinding.isEqualTo(IBinding)",1,2,n/a,19,1,1,8,4
"org.eclipse.jdt.core.dom.PackageBinding.isSynthetic()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PackageBinding.isUnnamed()",2,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PackageBinding.toString()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.PackageDeclaration(AST)",2,2,n/a,18,1,1,3,2
"org.eclipse.jdt.core.dom.PackageDeclaration.accept0(ASTVisitor)",7,1,n/a,14,2,1,7,3
"org.eclipse.jdt.core.dom.PackageDeclaration.annotations()",1,7,n/a,23,1,0,3,2
"org.eclipse.jdt.core.dom.PackageDeclaration.clone0(AST)",14,1,n/a,13,1,1,7,2
"org.eclipse.jdt.core.dom.PackageDeclaration.getJavadoc()",1,8,n/a,15,1,0,3,2
"org.eclipse.jdt.core.dom.PackageDeclaration.getName()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.PackageDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.PackageDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.PackageDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.PackageDeclaration.resolveBinding()",2,0,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.setJavadoc(Javadoc)",3,2,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.PackageDeclaration.setName(Name)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.PackageDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.treeSize()",6,78,n/a,10,0,0,1,4
"org.eclipse.jdt.core.dom.ParameterizedType.ParameterizedType(AST)",2,2,n/a,14,0,1,2,1
"org.eclipse.jdt.core.dom.ParameterizedType.accept0(ASTVisitor)",5,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.ParameterizedType.clone0(AST)",11,1,n/a,11,0,1,5,1
"org.eclipse.jdt.core.dom.ParameterizedType.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.getType()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ParameterizedType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.ParameterizedType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.ParameterizedType.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.setType(Type)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.ParameterizedType.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.treeSize()",4,77,n/a,9,0,0,1,2
"org.eclipse.jdt.core.dom.ParameterizedType.typeArguments()",0,10,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.ParenthesizedExpression(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.ParenthesizedExpression.clone0(AST)",7,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.getExpression()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ParenthesizedExpression.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.ParenthesizedExpression.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.ParenthesizedExpression.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.PostfixExpression.Operator.Operator(String)",0,2,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.Operator.toOperator(String)",1,0,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.Operator.toString()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.PostfixExpression(AST)",1,2,n/a,10,0,1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.PostfixExpression.clone0(AST)",9,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.PostfixExpression.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.getOperand()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.PostfixExpression.getOperator()",0,5,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.PostfixExpression.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.PostfixExpression.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.setOperand(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.PostfixExpression.setOperator(Operator)",3,4,n/a,14,1,1,5,2
"org.eclipse.jdt.core.dom.PostfixExpression.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.PrefixExpression.Operator.Operator(String)",0,6,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.Operator.toOperator(String)",1,0,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.Operator.toString()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.PrefixExpression(AST)",1,2,n/a,10,0,1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.accept0(ASTVisitor)",4,1,n/a,11,1,1,4,2
"org.eclipse.jdt.core.dom.PrefixExpression.clone0(AST)",9,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.PrefixExpression.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.getOperand()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.PrefixExpression.getOperator()",0,5,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.PrefixExpression.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.PrefixExpression.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.setOperand(Expression)",3,4,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.PrefixExpression.setOperator(Operator)",3,8,n/a,14,1,1,5,2
"org.eclipse.jdt.core.dom.PrefixExpression.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.PrimitiveType.Code.Code(String)",0,9,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.Code.toString()",0,4,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.PrimitiveType(AST)",1,2,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.PrimitiveType.clone0(AST)",6,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.PrimitiveType.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.getPrimitiveTypeCode()",0,7,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.PrimitiveType.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.setPrimitiveTypeCode(Code)",3,3,n/a,15,1,1,5,2
"org.eclipse.jdt.core.dom.PrimitiveType.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.toCode(String)",1,0,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.QualifiedName.QualifiedName(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.QualifiedName.appendName(StringBuffer)",5,2,n/a,8,0,1,3,1
"org.eclipse.jdt.core.dom.QualifiedName.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.QualifiedName.getName()",3,10,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.QualifiedName.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.QualifiedName.getQualifier()",3,10,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.QualifiedName.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.QualifiedName.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.QualifiedName.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.setName(SimpleName)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.QualifiedName.setQualifier(Name)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.QualifiedName.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.QualifiedName.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.QualifiedType.QualifiedType(AST)",2,2,n/a,13,0,1,2,1
"org.eclipse.jdt.core.dom.QualifiedType.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.QualifiedType.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.QualifiedType.getName()",3,8,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.QualifiedType.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.QualifiedType.getQualifier()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.QualifiedType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.QualifiedType.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.QualifiedType.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.setName(SimpleName)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.QualifiedType.setQualifier(Type)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.QualifiedType.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.QualifiedType.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.ReturnStatement.ReturnStatement(AST)",1,2,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.ReturnStatement.clone0(AST)",8,1,n/a,11,0,1,5,1
"org.eclipse.jdt.core.dom.ReturnStatement.getExpression()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.ReturnStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.setExpression(Expression)",2,3,n/a,18,0,1,4,1
"org.eclipse.jdt.core.dom.ReturnStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.SimpleName.SimpleName(AST)",1,52,n/a,14,0,1,1,1
"org.eclipse.jdt.core.dom.SimpleName.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.SimpleName.appendName(StringBuffer)",2,3,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.SimpleName.clone0(AST)",6,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.SimpleName.getIdentifier()",0,11,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.SimpleName.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SimpleName.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.SimpleName.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.SimpleName.isDeclaration()",3,0,n/a,67,1,0,24,12
"org.eclipse.jdt.core.dom.SimpleName.memSize()",1,1,n/a,11,1,0,4,2
"org.eclipse.jdt.core.dom.SimpleName.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.SimpleName.setIdentifier(String)",9,3,n/a,36,2,1,17,5
"org.eclipse.jdt.core.dom.SimpleName.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SimpleName.treeSize()",1,99,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor.SimplePropertyDescriptor(Class,String,Class,boolean)",3,27,n/a,20,1,4,5,3
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor.getValueType()",0,4,n/a,12,0,0,1,1
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor.isMandatory()",0,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.SimpleType.SimpleType(AST)",1,7,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.SimpleType.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.SimpleType.clone0(AST)",7,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.SimpleType.getName()",3,9,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.SimpleType.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SimpleType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.SimpleType.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.SimpleType.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.SimpleType.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.SimpleType.setName(Name)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.SimpleType.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SimpleType.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.SingleMemberAnnotation(AST)",2,2,n/a,14,0,1,2,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.getValue()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.internalTypeNameProperty()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.memSize()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.propertyDescriptors(int)",0,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.setValue(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.SingleVariableDeclaration(AST)",2,3,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.accept0(ASTVisitor)",9,1,n/a,16,2,1,8,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.clone0(AST)",23,1,n/a,19,1,1,11,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getExtraDimensions()",0,5,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getInitializer()",0,8,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getModifiers()",6,5,n/a,29,3,0,9,4
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getName()",3,9,n/a,16,3,0,7,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getType()",3,9,n/a,19,3,0,7,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalExtraDimensionsProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,8,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,67,n/a,31,2,3,16,7
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",5,10,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalInitializerProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalNameProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.isVarargs()",1,7,n/a,23,1,0,3,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.modifiers()",1,9,n/a,21,1,0,3,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setExtraDimensions(int)",3,4,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setInitializer(Expression)",2,2,n/a,11,0,1,4,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setModifiers(int)",3,3,n/a,20,0,1,4,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setName(SimpleName)",3,5,n/a,12,1,1,6,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setType(Type)",3,10,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setVarargs(boolean)",3,3,n/a,23,1,1,5,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.treeSize()",8,79,n/a,11,0,0,1,5
"org.eclipse.jdt.core.dom.Statement.Statement(AST)",1,22,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.Statement.copyLeadingComment(Statement)",2,21,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.Statement.getLeadingComment()",0,2,n/a,25,0,0,1,1
"org.eclipse.jdt.core.dom.Statement.memSize()",2,20,n/a,7,0,0,2,1
"org.eclipse.jdt.core.dom.Statement.setLeadingComment(String)",8,1,n/a,67,5,1,24,8
"org.eclipse.jdt.core.dom.StringLiteral.StringLiteral(AST)",1,2,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.StringLiteral.clone0(AST)",6,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.StringLiteral.getEscapedValue()",0,6,n/a,12,0,0,1,1
"org.eclipse.jdt.core.dom.StringLiteral.getLiteralValue()",13,0,n/a,41,2,0,16,7
"org.eclipse.jdt.core.dom.StringLiteral.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.StringLiteral.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.StringLiteral.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.memSize()",1,1,n/a,7,0,0,2,1
"org.eclipse.jdt.core.dom.StringLiteral.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.setEscapedValue(String)",9,4,n/a,38,2,1,17,5
"org.eclipse.jdt.core.dom.StringLiteral.setLiteralValue(String)",25,1,n/a,85,2,1,62,20
"org.eclipse.jdt.core.dom.StringLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.StringLiteral.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.StructuralPropertyDescriptor(Class,String)",1,3,n/a,17,1,2,4,3
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.getId()",0,5,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.getNodeClass()",0,1,n/a,12,0,0,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.isChildListProperty()",0,15,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.isChildProperty()",0,7,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.isSimpleProperty()",0,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.toString()",14,0,n/a,26,1,0,15,6
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.SuperConstructorInvocation(AST)",2,2,n/a,13,1,1,3,2
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.accept0(ASTVisitor)",6,1,n/a,15,2,1,7,3
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.arguments()",0,7,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.clone0(AST)",16,1,n/a,15,1,1,8,2
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.getExpression()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.memSize()",0,21,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.resolveConstructorBinding()",2,0,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.setExpression(Expression)",2,3,n/a,19,0,1,4,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.treeSize()",5,77,n/a,9,0,0,1,4
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.typeArguments()",1,8,n/a,23,1,0,3,2
"org.eclipse.jdt.core.dom.SuperFieldAccess.SuperFieldAccess(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.SuperFieldAccess.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.getName()",3,7,n/a,19,3,0,7,3
"org.eclipse.jdt.core.dom.SuperFieldAccess.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.getQualifier()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.SuperFieldAccess.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.resolveFieldBinding()",2,0,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.setName(SimpleName)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.SuperFieldAccess.setQualifier(Name)",2,3,n/a,17,0,1,4,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.SuperMethodInvocation(AST)",2,2,n/a,13,1,1,3,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.accept0(ASTVisitor)",8,1,n/a,16,2,1,8,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.arguments()",0,7,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.clone0(AST)",18,1,n/a,14,1,1,8,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.getName()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.getQualifier()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.SuperMethodInvocation.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.resolveMethodBinding()",2,0,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.setName(SimpleName)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.setQualifier(Name)",2,3,n/a,17,0,1,4,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.treeSize()",7,77,n/a,11,0,0,1,5
"org.eclipse.jdt.core.dom.SuperMethodInvocation.typeArguments()",1,8,n/a,23,1,0,3,2
"org.eclipse.jdt.core.dom.SwitchCase.SwitchCase(AST)",1,2,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.SwitchCase.clone0(AST)",8,1,n/a,11,0,1,5,1
"org.eclipse.jdt.core.dom.SwitchCase.getExpression()",3,7,n/a,20,3,0,8,3
"org.eclipse.jdt.core.dom.SwitchCase.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SwitchCase.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.SwitchCase.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.isDefault()",1,1,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.SwitchCase.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SwitchCase.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.setExpression(Expression)",2,4,n/a,20,0,1,5,1
"org.eclipse.jdt.core.dom.SwitchCase.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SwitchCase.treeSize()",2,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.SwitchStatement.SwitchStatement(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.accept0(ASTVisitor)",5,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.SwitchStatement.clone0(AST)",12,1,n/a,11,0,1,6,1
"org.eclipse.jdt.core.dom.SwitchStatement.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.SwitchStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.SwitchStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.SwitchStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.SwitchStatement.statements()",0,7,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.treeSize()",4,77,n/a,9,0,0,1,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.SynchronizedStatement(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.clone0(AST)",11,1,n/a,11,0,1,6,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.getBody()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.SynchronizedStatement.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.SynchronizedStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.SynchronizedStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.setBody(Block)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.TagElement.TagElement(AST)",1,2,n/a,14,0,1,1,1
"org.eclipse.jdt.core.dom.TagElement.accept0(ASTVisitor)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.TagElement.clone0(AST)",10,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.TagElement.fragments()",0,24,n/a,46,0,0,1,1
"org.eclipse.jdt.core.dom.TagElement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TagElement.getTagName()",0,6,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.TagElement.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.TagElement.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.TagElement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.TagElement.isNested()",1,2,n/a,20,0,0,1,1
"org.eclipse.jdt.core.dom.TagElement.memSize()",1,1,n/a,7,0,0,2,1
"org.eclipse.jdt.core.dom.TagElement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.TagElement.setTagName(String)",2,10,n/a,17,0,1,3,1
"org.eclipse.jdt.core.dom.TagElement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.TagElement.treeSize()",2,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TextElement.TextElement(AST)",1,2,n/a,14,0,1,1,1
"org.eclipse.jdt.core.dom.TextElement.accept0(ASTVisitor)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.core.dom.TextElement.clone0(AST)",6,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.TextElement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TextElement.getText()",0,5,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.TextElement.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,15,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.TextElement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.TextElement.memSize()",1,1,n/a,11,1,0,4,2
"org.eclipse.jdt.core.dom.TextElement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.TextElement.setText(String)",5,5,n/a,24,1,1,7,3
"org.eclipse.jdt.core.dom.TextElement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.TextElement.treeSize()",1,77,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ThisExpression.ThisExpression(AST)",1,2,n/a,9,0,1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.ThisExpression.clone0(AST)",7,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.ThisExpression.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ThisExpression.getQualifier()",0,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.ThisExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.ThisExpression.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.ThisExpression.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.setQualifier(Name)",2,3,n/a,17,0,1,4,1
"org.eclipse.jdt.core.dom.ThisExpression.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ThisExpression.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.ThrowStatement.ThrowStatement(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.ThrowStatement.clone0(AST)",8,1,n/a,10,0,1,5,1
"org.eclipse.jdt.core.dom.ThrowStatement.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.ThrowStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.ThrowStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.ThrowStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.TryStatement.TryStatement(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.TryStatement.accept0(ASTVisitor)",7,1,n/a,13,1,1,6,2
"org.eclipse.jdt.core.dom.TryStatement.catchClauses()",0,7,n/a,9,0,0,1,1
"org.eclipse.jdt.core.dom.TryStatement.clone0(AST)",15,1,n/a,14,0,1,7,1
"org.eclipse.jdt.core.dom.TryStatement.getBody()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.TryStatement.getFinally()",0,8,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.TryStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TryStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.TryStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.TryStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.TryStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TryStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.TryStatement.setBody(Block)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.TryStatement.setFinally(Block)",2,4,n/a,18,0,1,4,1
"org.eclipse.jdt.core.dom.TryStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.TryStatement.treeSize()",6,77,n/a,10,0,0,1,3
"org.eclipse.jdt.core.dom.Type.Type(AST)",1,6,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.Type.isArrayType()",0,18,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Type.isParameterizedType()",0,1,n/a,11,0,0,1,1
"org.eclipse.jdt.core.dom.Type.isPrimitiveType()",0,2,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Type.isQualifiedType()",0,1,n/a,27,0,0,1,1
"org.eclipse.jdt.core.dom.Type.isSimpleType()",0,3,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.Type.isWildcardType()",0,1,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.Type.resolveBinding()",2,1,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.TypeBinding(BindingResolver,TypeBinding)",0,3,n/a,4,0,2,2,1
"org.eclipse.jdt.core.dom.TypeBinding.getBinaryName()",3,0,n/a,10,0,0,5,2
"org.eclipse.jdt.core.dom.TypeBinding.getBound()",2,4,n/a,12,2,0,5,3
"org.eclipse.jdt.core.dom.TypeBinding.getClassFile(char[])",6,1,n/a,15,0,1,10,4
"org.eclipse.jdt.core.dom.TypeBinding.getCompilationUnit(char[])",7,2,n/a,19,1,1,14,5
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredFields()",5,1,n/a,24,3,0,12,6
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredMethods()",7,1,n/a,31,4,0,17,8
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredModifiers()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredTypes()",5,1,n/a,24,3,0,12,6
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaringClass()",5,2,n/a,21,2,0,7,5
"org.eclipse.jdt.core.dom.TypeBinding.getDimensions()",1,3,n/a,10,1,0,4,2
"org.eclipse.jdt.core.dom.TypeBinding.getElementType()",2,3,n/a,10,1,0,4,2
"org.eclipse.jdt.core.dom.TypeBinding.getErasure()",2,7,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getInterfaces()",4,0,n/a,32,2,0,17,8
"org.eclipse.jdt.core.dom.TypeBinding.getJavaElement()",35,6,n/a,59,2,0,43,18
"org.eclipse.jdt.core.dom.TypeBinding.getKey()",2,15,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.TypeBinding.getKind()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getModifiers()",7,2,n/a,25,2,0,15,5
"org.eclipse.jdt.core.dom.TypeBinding.getName()",38,9,n/a,62,4,0,51,16
"org.eclipse.jdt.core.dom.TypeBinding.getPackage()",4,1,n/a,11,1,0,4,3
"org.eclipse.jdt.core.dom.TypeBinding.getPackageFragment(char[],int)",22,2,n/a,31,2,2,24,8
"org.eclipse.jdt.core.dom.TypeBinding.getQualifiedName()",60,9,n/a,86,4,0,65,23
"org.eclipse.jdt.core.dom.TypeBinding.getSuperclass()",6,0,n/a,24,1,0,10,7
"org.eclipse.jdt.core.dom.TypeBinding.getTypeArguments()",2,4,n/a,18,3,0,12,4
"org.eclipse.jdt.core.dom.TypeBinding.getTypeBounds()",4,1,n/a,33,4,0,23,8
"org.eclipse.jdt.core.dom.TypeBinding.getTypeParameters()",2,1,n/a,17,3,0,11,4
"org.eclipse.jdt.core.dom.TypeBinding.isAnnotation()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isAnonymous()",4,3,n/a,10,1,0,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isArray()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isAssignmentCompatible(ITypeBinding)",1,0,n/a,8,0,1,4,2
"org.eclipse.jdt.core.dom.TypeBinding.isCastCompatible(ITypeBinding)",2,0,n/a,3,2,1,3,1
"org.eclipse.jdt.core.dom.TypeBinding.isClass()",2,11,n/a,6,0,0,1,2
"org.eclipse.jdt.core.dom.TypeBinding.isDeprecated()",4,0,n/a,10,1,0,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isEnum()",1,11,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isEqualTo(IBinding)",1,2,n/a,20,1,1,8,4
"org.eclipse.jdt.core.dom.TypeBinding.isFromSource()",4,0,n/a,10,1,0,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isGenericType()",1,6,n/a,9,0,0,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isInterface()",1,11,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isLocal()",5,2,n/a,10,1,0,4,5
"org.eclipse.jdt.core.dom.TypeBinding.isMember()",4,1,n/a,10,1,0,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isNested()",4,0,n/a,10,1,0,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isNullType()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isParameterizedType()",1,7,n/a,6,0,0,1,2
"org.eclipse.jdt.core.dom.TypeBinding.isPrimitive()",2,2,n/a,6,0,0,1,2
"org.eclipse.jdt.core.dom.TypeBinding.isRawType()",1,8,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isSubTypeCompatible(ITypeBinding)",3,0,n/a,10,0,1,8,4
"org.eclipse.jdt.core.dom.TypeBinding.isSynthetic()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isTopLevel()",4,0,n/a,10,1,0,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isTypeVariable()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isUpperbound()",1,2,n/a,6,0,0,1,2
"org.eclipse.jdt.core.dom.TypeBinding.isWildcardType()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeBinding.shouldBeRemoved(MethodBinding)",4,1,n/a,3,0,1,1,4
"org.eclipse.jdt.core.dom.TypeBinding.toString()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.TypeDeclaration(AST)",4,3,n/a,24,1,1,6,3
"org.eclipse.jdt.core.dom.TypeDeclaration.accept0(ASTVisitor)",20,1,n/a,26,2,1,17,4
"org.eclipse.jdt.core.dom.TypeDeclaration.appendDebugString(StringBuffer)",15,4,n/a,19,2,1,11,4
"org.eclipse.jdt.core.dom.TypeDeclaration.clone0(AST)",40,1,n/a,30,1,1,16,3
"org.eclipse.jdt.core.dom.TypeDeclaration.getFields()",7,0,n/a,31,2,0,14,5
"org.eclipse.jdt.core.dom.TypeDeclaration.getMethods()",7,0,n/a,30,2,0,14,5
"org.eclipse.jdt.core.dom.TypeDeclaration.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.getSuperclass()",1,8,n/a,19,0,0,2,1
"org.eclipse.jdt.core.dom.TypeDeclaration.getSuperclassType()",1,8,n/a,19,0,0,2,1
"org.eclipse.jdt.core.dom.TypeDeclaration.getTypes()",7,0,n/a,29,2,0,14,5
"org.eclipse.jdt.core.dom.TypeDeclaration.internalBodyDeclarationsProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",6,33,n/a,22,1,1,11,6
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,8,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",9,67,n/a,39,2,3,21,9
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,10,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.TypeDeclaration.internalJavadocProperty()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalModifiers2Property()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalModifiersProperty()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalNameProperty()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalResolveBinding()",2,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.isInterface()",0,8,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.memSize()",1,10,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.TypeDeclaration.setInterface(boolean)",2,6,n/a,13,0,1,3,1
"org.eclipse.jdt.core.dom.TypeDeclaration.setSuperclass(Name)",3,5,n/a,27,0,1,5,1
"org.eclipse.jdt.core.dom.TypeDeclaration.setSuperclassType(Type)",3,3,n/a,26,0,1,5,1
"org.eclipse.jdt.core.dom.TypeDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.superInterfaceTypes()",1,8,n/a,19,1,0,3,2
"org.eclipse.jdt.core.dom.TypeDeclaration.superInterfaces()",1,10,n/a,20,1,0,3,2
"org.eclipse.jdt.core.dom.TypeDeclaration.treeSize()",14,77,n/a,15,0,0,1,9
"org.eclipse.jdt.core.dom.TypeDeclaration.typeParameters()",1,8,n/a,23,1,0,3,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.TypeDeclarationStatement(AST)",1,3,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.clone0(AST)",8,1,n/a,12,0,1,5,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.getDeclaration()",3,10,n/a,20,3,0,7,3
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.getTypeDeclaration()",2,5,n/a,13,0,0,2,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.internalStructuralPropertiesForType(int)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.resolveBinding()",3,0,n/a,23,1,0,6,3
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.setDeclaration(AbstractTypeDeclaration)",3,5,n/a,24,1,1,6,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.setTypeDeclaration(TypeDeclaration)",2,2,n/a,20,0,1,2,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.TypeLiteral.TypeLiteral(AST)",1,2,n/a,12,0,1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.accept0(ASTVisitor)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.core.dom.TypeLiteral.clone0(AST)",7,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.TypeLiteral.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.getType()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.TypeLiteral.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.TypeLiteral.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.setType(Type)",3,3,n/a,19,1,1,6,2
"org.eclipse.jdt.core.dom.TypeLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.TypeParameter.TypeParameter(AST)",2,2,n/a,14,0,1,2,1
"org.eclipse.jdt.core.dom.TypeParameter.accept0(ASTVisitor)",5,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.TypeParameter.clone0(AST)",11,1,n/a,11,0,1,5,1
"org.eclipse.jdt.core.dom.TypeParameter.getName()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.TypeParameter.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.TypeParameter.internalGetChildListProperty(ChildListPropertyDescriptor)",2,33,n/a,10,1,1,3,2
"org.eclipse.jdt.core.dom.TypeParameter.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.TypeParameter.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.TypeParameter.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.resolveBinding()",2,1,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.TypeParameter.setName(SimpleName)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.TypeParameter.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.TypeParameter.treeSize()",4,77,n/a,9,0,0,1,2
"org.eclipse.jdt.core.dom.TypeParameter.typeBounds()",0,9,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.VariableBinding.VariableBinding(BindingResolver,VariableBinding)",0,4,n/a,4,0,2,2,1
"org.eclipse.jdt.core.dom.VariableBinding.getConstantValue()",20,0,n/a,30,1,0,25,12
"org.eclipse.jdt.core.dom.VariableBinding.getDeclaringClass()",2,1,n/a,14,2,0,6,3
"org.eclipse.jdt.core.dom.VariableBinding.getDeclaringMethod()",5,3,n/a,21,3,0,14,7
"org.eclipse.jdt.core.dom.VariableBinding.getJavaElement()",23,6,n/a,37,1,0,31,7
"org.eclipse.jdt.core.dom.VariableBinding.getKey()",2,15,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.VariableBinding.getKind()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.VariableBinding.getModifiers()",3,0,n/a,12,1,0,5,3
"org.eclipse.jdt.core.dom.VariableBinding.getName()",1,1,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.VariableBinding.getType()",1,3,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.VariableBinding.getVariableId()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.VariableBinding.isDeprecated()",2,0,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.VariableBinding.isEqualTo(IBinding)",5,2,n/a,38,4,1,20,9
"org.eclipse.jdt.core.dom.VariableBinding.isField()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.VariableBinding.isSynthetic()",2,3,n/a,9,1,0,3,2
"org.eclipse.jdt.core.dom.VariableBinding.toString()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.VariableDeclaration(AST)",1,2,n/a,11,0,1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getExtraDimensions()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.VariableDeclaration.getExtraDimensionsProperty()",1,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getInitializer()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.VariableDeclaration.getInitializerProperty()",1,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getName()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.VariableDeclaration.getNameProperty()",1,0,n/a,10,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.internalExtraDimensionsProperty()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.VariableDeclaration.internalInitializerProperty()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.VariableDeclaration.internalNameProperty()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.VariableDeclaration.resolveBinding()",2,5,n/a,14,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.setExtraDimensions(int)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.VariableDeclaration.setInitializer(Expression)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.VariableDeclaration.setName(SimpleName)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.VariableDeclarationExpression(AST)",2,2,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.accept0(ASTVisitor)",6,1,n/a,15,2,1,7,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.clone0(AST)",17,1,n/a,18,1,1,9,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.fragments()",0,9,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.getModifiers()",6,5,n/a,29,3,0,9,4
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.getType()",3,8,n/a,23,3,0,7,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,10,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.modifiers()",1,8,n/a,27,1,0,3,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.setModifiers(int)",3,3,n/a,19,0,1,4,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.setType(Type)",3,6,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.treeSize()",5,77,n/a,10,0,0,1,3
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.VariableDeclarationFragment(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.clone0(AST)",12,1,n/a,12,0,1,6,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.getExtraDimensions()",0,8,n/a,17,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.getInitializer()",0,8,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.getName()",3,9,n/a,16,3,0,7,3
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalExtraDimensionsProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,10,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalInitializerProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalNameProperty()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.memSize()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.setExtraDimensions(int)",3,4,n/a,21,1,1,5,2
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.setInitializer(Expression)",2,4,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.setName(SimpleName)",3,7,n/a,12,1,1,6,2
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.VariableDeclarationStatement(AST)",2,2,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(ASTVisitor)",6,1,n/a,15,2,1,7,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.clone0(AST)",18,1,n/a,19,1,1,10,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.fragments()",0,9,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.getModifiers()",6,5,n/a,29,3,0,9,4
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.getType()",3,7,n/a,23,3,0,7,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",3,33,n/a,13,1,1,5,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,10,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.modifiers()",1,8,n/a,21,1,0,3,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.propertyDescriptors(int)",0,1,n/a,17,1,1,3,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.setModifiers(int)",3,3,n/a,19,0,1,4,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.setType(Type)",3,6,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.treeSize()",5,77,n/a,10,0,0,1,3
"org.eclipse.jdt.core.dom.WhileStatement.WhileStatement(AST)",1,2,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.accept0(ASTVisitor)",6,1,n/a,12,1,1,5,2
"org.eclipse.jdt.core.dom.WhileStatement.clone0(AST)",11,1,n/a,11,0,1,6,1
"org.eclipse.jdt.core.dom.WhileStatement.getBody()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.WhileStatement.getExpression()",3,7,n/a,18,3,0,7,3
"org.eclipse.jdt.core.dom.WhileStatement.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.WhileStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,67,n/a,23,2,3,11,5
"org.eclipse.jdt.core.dom.WhileStatement.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.memSize()",1,21,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.WhileStatement.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.setBody(Statement)",3,3,n/a,28,1,1,6,2
"org.eclipse.jdt.core.dom.WhileStatement.setExpression(Expression)",3,3,n/a,20,1,1,6,2
"org.eclipse.jdt.core.dom.WhileStatement.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.WhileStatement.treeSize()",5,77,n/a,9,0,0,1,3
"org.eclipse.jdt.core.dom.WildcardType.WildcardType(AST)",2,2,n/a,13,0,1,2,1
"org.eclipse.jdt.core.dom.WildcardType.accept0(ASTVisitor)",4,1,n/a,11,1,1,4,2
"org.eclipse.jdt.core.dom.WildcardType.clone0(AST)",8,1,n/a,9,0,1,4,1
"org.eclipse.jdt.core.dom.WildcardType.getBound()",0,10,n/a,13,0,0,1,1
"org.eclipse.jdt.core.dom.WildcardType.getNodeType0()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.WildcardType.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,8,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.WildcardType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,67,n/a,15,2,3,6,3
"org.eclipse.jdt.core.dom.WildcardType.internalStructuralPropertiesForType(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.core.dom.WildcardType.isUpperBound()",0,8,n/a,15,0,0,1,1
"org.eclipse.jdt.core.dom.WildcardType.memSize()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.dom.WildcardType.propertyDescriptors(int)",0,1,n/a,13,0,1,1,1
"org.eclipse.jdt.core.dom.WildcardType.setBound(Type)",2,4,n/a,18,0,1,4,1
"org.eclipse.jdt.core.dom.WildcardType.setBound(Type,boolean)",2,2,n/a,21,0,2,2,1
"org.eclipse.jdt.core.dom.WildcardType.setUpperBound(boolean)",2,2,n/a,13,0,1,3,1
"org.eclipse.jdt.core.dom.WildcardType.subtreeMatch0(ASTMatcher,Object)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.core.dom.WildcardType.treeSize()",3,77,n/a,8,0,0,1,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.ASTRewrite(AST)",2,1,n/a,11,0,1,3,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.create(AST)",1,1,n/a,10,0,1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createCopyTarget(ASTNode)",1,8,n/a,15,0,1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createGroupNode(ASTNode[])",5,0,n/a,27,1,1,9,4
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createMoveTarget(ASTNode)",1,4,n/a,16,0,1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createStringPlaceholder(String,int)",6,7,n/a,24,1,2,7,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createTargetNode(ASTNode,boolean)",14,2,n/a,13,1,2,9,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getAST()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getListRewrite(ASTNode,ChildListPropertyDescriptor)",3,4,n/a,18,1,2,4,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getNodeStore()",0,6,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getRewriteEventStore()",0,4,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getRootNode()",18,1,n/a,36,3,0,29,14
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.remove(ASTNode,TextEditGroup)",8,0,n/a,23,1,2,6,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.replace(ASTNode,ASTNode,TextEditGroup)",8,0,n/a,28,1,3,6,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.rewriteAST(IDocument,Map)",8,0,n/a,38,1,2,10,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.set(ASTNode,StructuralPropertyDescriptor,Object,TextEditGroup)",6,2,n/a,33,1,4,8,4
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.toString()",5,0,n/a,14,1,0,5,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.track(ASTNode)",5,1,n/a,24,1,1,7,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validateIsInsideAST(ASTNode)",5,2,n/a,8,1,1,4,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validateIsListProperty(StructuralPropertyDescriptor)",3,1,n/a,6,1,1,3,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validatePropertyType(StructuralPropertyDescriptor,Object)",2,1,n/a,17,1,2,3,2
"org.eclipse.jdt.core.dom.rewrite.ITrackedNodePosition.getLength()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.rewrite.ITrackedNodePosition.getStartPosition()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.ListRewrite(ASTRewrite,ASTNode,StructuralPropertyDescriptor)",0,1,n/a,5,0,3,3,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.createCopyTarget(ASTNode,ASTNode)",2,0,n/a,21,1,2,3,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.createTargetNode(ASTNode,ASTNode,boolean)",10,1,n/a,14,1,3,9,4
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getASTRewrite()",0,0,n/a,8,0,0,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getEvent()",2,7,n/a,3,0,0,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getOriginalList()",3,0,n/a,10,0,0,2,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getRewriteStore()",1,6,n/a,3,0,0,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getRewrittenList()",3,0,n/a,11,0,0,2,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertAfter(ASTNode,ASTNode,TextEditGroup)",5,0,n/a,32,1,3,6,4
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertAt(ASTNode,int,TextEditGroup)",3,2,n/a,30,1,3,3,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertBefore(ASTNode,ASTNode,TextEditGroup)",5,0,n/a,32,1,3,6,4
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertFirst(ASTNode,TextEditGroup)",2,0,n/a,19,1,2,3,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertLast(ASTNode,TextEditGroup)",2,1,n/a,19,1,2,3,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.internalInsertAt(ASTNode,int,boolean,TextEditGroup)",6,5,n/a,9,1,4,5,3
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.isInsertBoundToPreviousByDefault(ASTNode)",0,1,n/a,6,0,1,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.remove(ASTNode,TextEditGroup)",5,1,n/a,22,1,2,5,3
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.replace(ASTNode,ASTNode,TextEditGroup)",5,1,n/a,30,1,3,5,3
"org.eclipse.jdt.core.eval.ICodeSnippetRequestor.acceptClassFiles(byte[][],String[][],String)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.eval.ICodeSnippetRequestor.acceptProblem(IMarker,String,int)",n/a,6,0,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.allVariables()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.codeComplete(String,int,CompletionRequestor)",n/a,2,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.codeComplete(String,int,CompletionRequestor,WorkingCopyOwner)",n/a,2,1,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.codeComplete(String,int,ICodeCompletionRequestor)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.codeComplete(String,int,ICompletionRequestor)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.codeComplete(String,int,ICompletionRequestor,WorkingCopyOwner)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.codeSelect(String,int,int)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.codeSelect(String,int,int,WorkingCopyOwner)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.deleteVariable(IGlobalVariable)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.evaluateCodeSnippet(String,ICodeSnippetRequestor,IProgressMonitor)",n/a,2,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.evaluateCodeSnippet(String,String[],String[],int[],IType,boolean,boolean,ICodeSnippetRequestor,IProgressMonitor)",n/a,2,1,n/a,n/a,9,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.evaluateVariable(IGlobalVariable,ICodeSnippetRequestor,IProgressMonitor)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.getImports()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.getPackageName()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.getProject()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.newVariable(String,String,String)",n/a,2,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.setImports(String[])",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.setPackageName(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext.validateImports(ICodeSnippetRequestor)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.eval.IGlobalVariable.getInitializer()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.eval.IGlobalVariable.getName()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.eval.IGlobalVariable.getTypeName()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.formatter.CodeFormatter.format(int,String,int,int,int,String)",n/a,7,1,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.createAlignmentValue(boolean,int,int)",1,34,n/a,41,1,3,26,9
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getEclipse21Settings()",2,1,n/a,10,0,0,1,1
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getForceWrapping(String)",1,0,n/a,23,1,1,6,3
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getIndentStyle(String)",1,0,n/a,29,2,1,10,5
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getJavaConventionsSettings()",2,3,n/a,9,0,0,1,1
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getWrappingStyle(String)",1,0,n/a,36,2,1,18,9
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.setForceWrapping(String,boolean)",2,0,n/a,29,2,2,9,4
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.setIndentStyle(String,int)",2,0,n/a,45,2,2,20,7
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.setWrappingStyle(String,int)",2,0,n/a,61,2,2,33,10
"org.eclipse.jdt.core.jdom.DOMException.DOMException()",0,0,n/a,6,0,0,0,1
"org.eclipse.jdt.core.jdom.DOMException.DOMException(String)",1,10,n/a,8,0,1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.DOMFactory()",0,13,n/a,6,0,0,0,1
"org.eclipse.jdt.core.jdom.DOMFactory.createClass()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createCompilationUnit()",2,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createCompilationUnit(String,String)",4,7,n/a,9,1,2,3,2
"org.eclipse.jdt.core.jdom.DOMFactory.createCompilationUnit(char[],String)",3,4,n/a,9,1,2,3,2
"org.eclipse.jdt.core.jdom.DOMFactory.createField()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createField(String)",3,6,n/a,9,1,1,3,2
"org.eclipse.jdt.core.jdom.DOMFactory.createImport()",2,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createImport(String)",3,2,n/a,9,1,1,3,2
"org.eclipse.jdt.core.jdom.DOMFactory.createInitializer()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createInitializer(String)",3,4,n/a,9,1,1,3,2
"org.eclipse.jdt.core.jdom.DOMFactory.createInterface()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createMethod()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createMethod(String)",3,4,n/a,9,1,1,3,2
"org.eclipse.jdt.core.jdom.DOMFactory.createPackage()",2,2,n/a,6,0,0,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createPackage(String)",3,3,n/a,9,1,1,3,2
"org.eclipse.jdt.core.jdom.DOMFactory.createType()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createType(String)",3,6,n/a,9,1,1,3,2
"org.eclipse.jdt.core.jdom.IDOMCompilationUnit.getHeader()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMCompilationUnit.getName()",n/a,14,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMCompilationUnit.setHeader(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMCompilationUnit.setName(String)",n/a,10,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createClass()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createCompilationUnit()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createCompilationUnit(String,String)",n/a,5,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createCompilationUnit(char[],String)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createField()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createField(String)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createImport()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createImport(String)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createInitializer()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createInitializer(String)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createInterface()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createMethod()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createMethod(String)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createPackage()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createPackage(String)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createType()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory.createType(String)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMField.getInitializer()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMField.getName()",n/a,12,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMField.getType()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMField.setInitializer(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMField.setName(String)",n/a,10,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMField.setType(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMImport.getFlags()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMImport.getName()",n/a,12,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMImport.isOnDemand()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMImport.setFlags(int)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMImport.setName(String)",n/a,10,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMInitializer.getBody()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMInitializer.getName()",n/a,12,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMInitializer.setBody(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMInitializer.setName(String)",n/a,10,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMember.getComment()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMember.getFlags()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMember.setComment(String)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMember.setFlags(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.addException(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.addParameter(String,String)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.getBody()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.getDefault()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.getExceptions()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.getName()",n/a,14,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.getParameterNames()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.getParameterTypes()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.getReturnType()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.getTypeParameters()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.isConstructor()",n/a,8,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.setBody(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.setConstructor(boolean)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.setDefault(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.setExceptions(String[])",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.setName(String)",n/a,10,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.setParameters(String[],String[])",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.setReturnType(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod.setTypeParameters(String[])",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.addChild(IDOMNode)",n/a,5,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.canHaveChildren()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.clone()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getCharacters()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getChild(String)",n/a,3,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getChildren()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getContents()",n/a,7,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getFirstChild()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getJavaElement(IJavaElement)",n/a,7,7,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getName()",n/a,12,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getNextNode()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getNodeType()",n/a,31,7,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getParent()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.getPreviousNode()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.insertSibling(IDOMNode)",n/a,7,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.isAllowableChild(IDOMNode)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.isSignatureEqual(IDOMNode)",n/a,3,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.remove()",n/a,7,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMNode.setName(String)",n/a,9,8,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMPackage.getName()",n/a,13,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMPackage.setName(String)",n/a,11,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.addSuperInterface(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.getName()",n/a,13,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.getSuperInterfaces()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.getSuperclass()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.getTypeParameters()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.isAnnotation()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.isClass()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.isEnum()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.setAnnotation(boolean)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.setClass(boolean)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.setEnum(boolean)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.setName(String)",n/a,9,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.setSuperInterfaces(String[])",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.setSuperclass(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.jdom.IDOMType.setTypeParameters(String[])",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.search.FieldDeclarationMatch.FieldDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,2,n/a,13,0,6,1,1
"org.eclipse.jdt.core.search.FieldReferenceMatch.FieldReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,SearchParticipant,IResource)",2,1,n/a,20,0,9,4,1
"org.eclipse.jdt.core.search.FieldReferenceMatch.isReadAccess()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.search.FieldReferenceMatch.isWriteAccess()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.search.IJavaSearchResultCollector.aboutToStart()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchResultCollector.accept(IResource,int,int,IJavaElement,int)",n/a,1,0,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchResultCollector.done()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchResultCollector.getProgressMonitor()",n/a,5,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchScope.encloses(IJavaElement)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchScope.encloses(String)",n/a,2,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchScope.enclosingProjectsAndJars()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchScope.includesBinaries()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchScope.includesClasspaths()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchScope.setIncludesBinaries(boolean)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.search.IJavaSearchScope.setIncludesClasspaths(boolean)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.search.ITypeNameRequestor.acceptClass(char[],char[],char[][],String)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.search.ITypeNameRequestor.acceptInterface(char[],char[],char[][],String)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.search.LocalVariableDeclarationMatch.LocalVariableDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,n/a,13,0,6,1,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch.LocalVariableReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,SearchParticipant,IResource)",2,1,n/a,20,0,9,4,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch.isReadAccess()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch.isWriteAccess()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.search.MethodDeclarationMatch.MethodDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,2,n/a,13,0,6,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.MethodReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",2,1,n/a,16,0,7,2,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.MethodReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,SearchParticipant,IResource)",1,1,n/a,22,0,9,3,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.isConstructor()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.isSynthetic()",0,0,n/a,11,0,0,1,1
"org.eclipse.jdt.core.search.PackageDeclarationMatch.PackageDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,2,n/a,13,0,6,1,1
"org.eclipse.jdt.core.search.PackageReferenceMatch.PackageReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",2,1,n/a,16,0,7,2,1
"org.eclipse.jdt.core.search.SearchDocument.SearchDocument(String,SearchParticipant)",0,3,n/a,12,0,2,2,1
"org.eclipse.jdt.core.search.SearchDocument.addIndexEntry(char[],char[])",1,4,n/a,11,0,2,1,1
"org.eclipse.jdt.core.search.SearchDocument.getByteContents()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.SearchDocument.getCharContents()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.SearchDocument.getEncoding()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.SearchDocument.getParticipant()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.search.SearchDocument.getPath()",0,17,n/a,11,0,0,1,1
"org.eclipse.jdt.core.search.SearchDocument.removeAllIndexEntries()",1,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.ResultCollectorAdapter(IJavaSearchResultCollector)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.acceptSearchMatch(SearchMatch)",7,4,n/a,12,0,1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.beginReporting()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.endReporting()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine(ICompilationUnit[])",1,2,n/a,15,0,1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine(IWorkingCopy[])",2,0,n/a,19,0,1,4,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine(WorkingCopyOwner)",1,1,n/a,11,0,1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchPatternAdapter.SearchPatternAdapter(SearchPattern)",0,3,n/a,3,0,1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createHierarchyScope(IType)",1,1,n/a,12,0,1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createHierarchyScope(IType,WorkingCopyOwner)",1,1,n/a,16,0,2,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IJavaElement[])",1,9,n/a,23,0,1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IJavaElement[],boolean)",1,2,n/a,23,0,2,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IJavaElement[],int)",1,1,n/a,34,0,2,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IResource[])",2,0,n/a,21,1,1,7,2
"org.eclipse.jdt.core.search.SearchEngine.createOrSearchPattern(ISearchPattern,ISearchPattern)",2,0,n/a,15,0,2,4,1
"org.eclipse.jdt.core.search.SearchEngine.createSearchPattern(IJavaElement,int)",2,2,n/a,24,0,2,1,1
"org.eclipse.jdt.core.search.SearchEngine.createSearchPattern(String,int,int,boolean)",4,1,n/a,50,0,4,3,4
"org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope()",1,11,n/a,8,0,0,1,1
"org.eclipse.jdt.core.search.SearchEngine.getDefaultSearchParticipant()",1,8,n/a,9,0,0,1,1
"org.eclipse.jdt.core.search.SearchEngine.search(IWorkspace,IJavaElement,int,IJavaSearchScope,IJavaSearchResultCollector)",2,0,n/a,29,0,5,1,1
"org.eclipse.jdt.core.search.SearchEngine.search(IWorkspace,ISearchPattern,IJavaSearchScope,IJavaSearchResultCollector)",5,1,n/a,29,1,4,5,3
"org.eclipse.jdt.core.search.SearchEngine.search(IWorkspace,String,int,int,IJavaSearchScope,IJavaSearchResultCollector)",8,0,n/a,50,1,6,6,5
"org.eclipse.jdt.core.search.SearchEngine.search(SearchPattern,SearchParticipant[],IJavaSearchScope,SearchRequestor,IProgressMonitor)",1,6,n/a,19,0,5,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(IWorkspace,char[],char[],int,boolean,int,IJavaSearchScope,ITypeNameRequestor,int,IProgressMonitor)",1,0,n/a,65,0,10,1,2
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(char[],char[],int,int,IJavaSearchScope,ITypeNameRequestor,int,IProgressMonitor)",2,4,n/a,57,0,8,2,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfAccessedFields(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,n/a,40,0,3,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfAccessedFields(IWorkspace,IJavaElement,IJavaSearchResultCollector)",4,0,n/a,41,0,3,2,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,n/a,40,0,3,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(IWorkspace,IJavaElement,IJavaSearchResultCollector)",4,0,n/a,41,0,3,2,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfSentMessages(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,n/a,43,0,3,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfSentMessages(IWorkspace,IJavaElement,IJavaSearchResultCollector)",4,0,n/a,44,0,3,2,1
"org.eclipse.jdt.core.search.SearchMatch.SearchMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",0,10,n/a,28,0,6,6,1
"org.eclipse.jdt.core.search.SearchMatch.getAccuracy()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.search.SearchMatch.getElement()",0,3,n/a,10,0,0,1,1
"org.eclipse.jdt.core.search.SearchMatch.getLength()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.search.SearchMatch.getOffset()",0,3,n/a,8,0,0,1,1
"org.eclipse.jdt.core.search.SearchMatch.getParticipant()",0,0,n/a,8,0,0,1,1
"org.eclipse.jdt.core.search.SearchMatch.getResource()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.core.search.SearchMatch.isInsideDocComment()",0,0,n/a,11,0,0,1,1
"org.eclipse.jdt.core.search.SearchMatch.setAccuracy(int)",0,0,n/a,8,0,1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setElement(Object)",0,0,n/a,9,0,1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setInsideDocComment(boolean)",0,5,n/a,10,0,1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setLength(int)",0,0,n/a,8,0,1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setOffset(int)",0,0,n/a,8,0,1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setParticipant(SearchParticipant)",0,0,n/a,8,0,1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setResource(IResource)",0,0,n/a,8,0,1,1,1
"org.eclipse.jdt.core.search.SearchMatch.toString()",14,0,n/a,19,1,0,13,3
"org.eclipse.jdt.core.search.SearchParticipant.SearchParticipant()",0,0,n/a,6,0,0,0,1
"org.eclipse.jdt.core.search.SearchParticipant.beginSearching()",0,2,n/a,10,0,0,0,1
"org.eclipse.jdt.core.search.SearchParticipant.doneSearching()",0,2,n/a,10,0,0,0,1
"org.eclipse.jdt.core.search.SearchParticipant.getDescription()",0,2,n/a,12,0,0,1,1
"org.eclipse.jdt.core.search.SearchParticipant.getDocument(String)",n/a,7,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.search.SearchParticipant.indexDocument(SearchDocument,IPath)",n/a,5,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.search.SearchParticipant.locateMatches(SearchDocument[],SearchPattern,IJavaSearchScope,SearchRequestor,IProgressMonitor)",n/a,3,1,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.search.SearchParticipant.scheduleDocumentIndexing(SearchDocument,IPath)",12,1,n/a,25,0,2,8,2
"org.eclipse.jdt.core.search.SearchParticipant.selectIndexes(SearchPattern,IJavaSearchScope)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.search.SearchPattern.SearchPattern(int)",0,2,n/a,12,0,1,1,1
"org.eclipse.jdt.core.search.SearchPattern.createAndPattern(SearchPattern,SearchPattern)",1,0,n/a,12,0,2,1,1
"org.eclipse.jdt.core.search.SearchPattern.createConstructorPattern(String,int,int)",27,1,n/a,150,4,3,102,38
"org.eclipse.jdt.core.search.SearchPattern.createFieldPattern(String,int,int)",30,1,n/a,166,4,3,91,37
"org.eclipse.jdt.core.search.SearchPattern.createMethodPattern(String,int,int)",39,1,n/a,219,4,3,143,55
"org.eclipse.jdt.core.search.SearchPattern.createOrPattern(SearchPattern,SearchPattern)",1,2,n/a,12,0,2,1,1
"org.eclipse.jdt.core.search.SearchPattern.createPackagePattern(String,int,int)",9,3,n/a,14,1,3,8,4
"org.eclipse.jdt.core.search.SearchPattern.createPattern(IJavaElement,int)",101,3,n/a,360,4,2,143,40
"org.eclipse.jdt.core.search.SearchPattern.createPattern(String,int,int,int)",6,4,n/a,59,1,4,14,8
"org.eclipse.jdt.core.search.SearchPattern.createTypePattern(String,int,int)",24,1,n/a,102,3,3,62,23
"org.eclipse.jdt.core.search.SearchPattern.createTypePattern(char[],char[],char[][],String,boolean,int)",9,2,n/a,39,1,6,10,5
"org.eclipse.jdt.core.search.SearchPattern.decodeIndexKey(char[])",0,4,n/a,13,0,1,0,1
"org.eclipse.jdt.core.search.SearchPattern.enclosingTypeNames(IType)",16,6,n/a,31,1,1,18,7
"org.eclipse.jdt.core.search.SearchPattern.getBlankPattern()",n/a,3,10,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.search.SearchPattern.getIndexCategories()",0,2,n/a,15,0,0,1,1
"org.eclipse.jdt.core.search.SearchPattern.getIndexKey()",0,2,n/a,15,0,0,1,1
"org.eclipse.jdt.core.search.SearchPattern.getMatchRule()",0,10,n/a,11,0,0,1,1
"org.eclipse.jdt.core.search.SearchPattern.matchesDecodedKey(SearchPattern)",0,4,n/a,13,0,1,1,1
"org.eclipse.jdt.core.search.SearchPattern.matchesName(char[],char[])",4,4,n/a,32,2,2,17,9
"org.eclipse.jdt.core.search.SearchPattern.toString()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.core.search.SearchRequestor.acceptSearchMatch(SearchMatch)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.search.SearchRequestor.beginReporting()",0,4,n/a,12,0,0,0,1
"org.eclipse.jdt.core.search.SearchRequestor.endReporting()",0,4,n/a,12,0,0,0,1
"org.eclipse.jdt.core.search.SearchRequestor.enterParticipant(SearchParticipant)",0,1,n/a,13,0,1,0,1
"org.eclipse.jdt.core.search.SearchRequestor.exitParticipant(SearchParticipant)",0,1,n/a,13,0,1,0,1
"org.eclipse.jdt.core.search.TypeDeclarationMatch.TypeDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,2,n/a,13,0,6,1,1
"org.eclipse.jdt.core.search.TypeReferenceMatch.TypeReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",2,1,n/a,16,0,7,2,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aaload(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aastore(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aconst_null(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._anewarray(int,int,IConstantPoolEntry)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._areturn(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._arraylength(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._athrow(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._baload(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._bastore(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._bipush(int,byte)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._breakpoint(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._caload(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._castore(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._checkcast(int,int,IConstantPoolEntry)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._d2f(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._d2i(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._d2l(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dadd(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._daload(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dastore(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dcmpg(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dcmpl(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dconst_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dconst_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ddiv(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dmul(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dneg(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._drem(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dreturn(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dsub(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup2_x1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup2_x2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup_x1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup_x2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._f2d(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._f2i(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._f2l(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fadd(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._faload(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fastore(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fcmpg(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fcmpl(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fconst_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fconst_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fconst_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fdiv(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fmul(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fneg(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._frem(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._freturn(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fsub(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._getfield(int,int,IConstantPoolEntry)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._getstatic(int,int,IConstantPoolEntry)",0,3,n/a,9,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._goto(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._goto_w(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2b(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2c(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2d(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2f(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2l(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2s(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iadd(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iaload(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iand(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iastore(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_4(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_5(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_m1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._idiv(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_acmpeq(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_acmpne(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpeq(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpge(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpgt(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmple(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmplt(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpne(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifeq(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifge(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifgt(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifle(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iflt(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifne(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifnonnull(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifnull(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iinc(int,int,int)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._impdep1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._impdep2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._imul(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ineg(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._instanceof(int,int,IConstantPoolEntry)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokeinterface(int,int,byte,IConstantPoolEntry)",0,3,n/a,10,0,4,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokespecial(int,int,IConstantPoolEntry)",0,3,n/a,9,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokestatic(int,int,IConstantPoolEntry)",0,3,n/a,9,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokevirtual(int,int,IConstantPoolEntry)",0,3,n/a,9,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ior(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._irem(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ireturn(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ishl(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ishr(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._isub(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iushr(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ixor(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._jsr(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._jsr_w(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._l2d(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._l2f(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._l2i(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ladd(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._laload(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._land(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lastore(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lcmp(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lconst_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lconst_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldc(int,int,IConstantPoolEntry)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldc2_w(int,int,IConstantPoolEntry)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldc_w(int,int,IConstantPoolEntry)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldiv(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lmul(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lneg(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lookupswitch(int,int,int,int[][])",0,3,n/a,10,0,4,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lor(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lrem(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lreturn(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lshl(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lshr(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_0(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_1(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_3(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lsub(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lushr(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lxor(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._monitorenter(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._monitorexit(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._multianewarray(int,int,int,IConstantPoolEntry)",0,3,n/a,10,0,4,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._new(int,int,IConstantPoolEntry)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._newarray(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._nop(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._pop(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._pop2(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._putfield(int,int,IConstantPoolEntry)",0,3,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._putstatic(int,int,IConstantPoolEntry)",0,3,n/a,9,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ret(int,int)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._return(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._saload(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._sastore(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._sipush(int,short)",0,3,n/a,6,0,2,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._swap(int)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._tableswitch(int,int,int,int,int[])",0,3,n/a,11,0,5,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._wide(int,int,int)",0,4,n/a,6,0,3,0,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._wide(int,int,int,int)",0,2,n/a,6,0,4,0,1
"org.eclipse.jdt.core.util.ClassFileBytesDisassembler.disassemble(byte[],String)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.ClassFileBytesDisassembler.disassemble(byte[],String,int)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.ClassFileBytesDisassembler.getDescription()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ClassFormatException.ClassFormatException(String)",1,0,n/a,7,0,1,1,1
"org.eclipse.jdt.core.util.ClassFormatException.ClassFormatException(int)",0,51,n/a,7,0,1,0,1
"org.eclipse.jdt.core.util.CompilationUnitSorter.CompilationUnitSorter()",0,0,n/a,6,0,0,0,1
"org.eclipse.jdt.core.util.CompilationUnitSorter.sort(ICompilationUnit,int[],Comparator,int,IProgressMonitor)",3,1,n/a,109,1,5,5,3
"org.eclipse.jdt.core.util.IAnnotation.getComponents()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotation.getComponentsNumber()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotation.getTypeIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotation.getTypeName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponent.getComponentName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponent.getComponentNameIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponent.getComponentValue()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getAnnotationComponentValues()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getAnnotationValue()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getAttributeValue()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getClassInfo()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getClassInfoIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getConstantValue()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getConstantValueIndex()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getEnumConstantName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getEnumConstantNameIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getEnumConstantTypeName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getEnumConstantTypeNameIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getTag()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue.getValuesNumber()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IAnnotationDefaultAttribute.getMemberValue()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._aaload(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._aastore(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._aconst_null(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._aload(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._aload_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._aload_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._aload_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._aload_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._anewarray(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._areturn(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._arraylength(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._astore(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._astore_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._astore_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._astore_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._astore_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._athrow(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._baload(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._bastore(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._bipush(int,byte)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._breakpoint(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._caload(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._castore(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._checkcast(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._d2f(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._d2i(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._d2l(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dadd(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._daload(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dastore(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dcmpg(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dcmpl(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dconst_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dconst_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ddiv(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dload(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dload_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dload_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dload_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dload_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dmul(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dneg(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._drem(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dreturn(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dstore(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dstore_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dstore_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dstore_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dstore_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dsub(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dup(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dup2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dup2_x1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dup2_x2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dup_x1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._dup_x2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._f2d(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._f2i(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._f2l(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fadd(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._faload(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fastore(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fcmpg(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fcmpl(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fconst_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fconst_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fconst_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fdiv(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fload(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fload_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fload_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fload_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fload_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fmul(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fneg(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._frem(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._freturn(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fstore(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fstore_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fstore_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fstore_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fstore_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._fsub(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._getfield(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._getstatic(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._goto(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._goto_w(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._i2b(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._i2c(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._i2d(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._i2f(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._i2l(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._i2s(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iadd(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iaload(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iand(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iastore(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iconst_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iconst_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iconst_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iconst_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iconst_4(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iconst_5(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iconst_m1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._idiv(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._if_acmpeq(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._if_acmpne(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._if_icmpeq(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._if_icmpge(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._if_icmpgt(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._if_icmple(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._if_icmplt(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._if_icmpne(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ifeq(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ifge(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ifgt(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ifle(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iflt(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ifne(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ifnonnull(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ifnull(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iinc(int,int,int)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iload(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iload_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iload_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iload_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iload_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._impdep1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._impdep2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._imul(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ineg(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._instanceof(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._invokeinterface(int,int,byte,IConstantPoolEntry)",n/a,3,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._invokespecial(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._invokestatic(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._invokevirtual(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ior(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._irem(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ireturn(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ishl(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ishr(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._istore(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._istore_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._istore_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._istore_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._istore_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._isub(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._iushr(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ixor(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._jsr(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._jsr_w(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._l2d(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._l2f(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._l2i(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ladd(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._laload(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._land(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lastore(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lcmp(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lconst_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lconst_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ldc(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ldc2_w(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ldc_w(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ldiv(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lload(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lload_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lload_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lload_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lload_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lmul(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lneg(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lookupswitch(int,int,int,int[][])",n/a,3,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lor(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lrem(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lreturn(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lshl(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lshr(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lstore(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lstore_0(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lstore_1(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lstore_2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lstore_3(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lsub(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lushr(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._lxor(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._monitorenter(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._monitorexit(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._multianewarray(int,int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._new(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._newarray(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._nop(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._pop(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._pop2(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._putfield(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._putstatic(int,int,IConstantPoolEntry)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._ret(int,int)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._return(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._saload(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._sastore(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._sipush(int,short)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._swap(int)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._tableswitch(int,int,int,int,int[])",n/a,3,2,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._wide(int,int,int)",n/a,4,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor._wide(int,int,int,int)",n/a,2,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileAttribute.getAttributeLength()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileAttribute.getAttributeName()",n/a,16,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileAttribute.getAttributeNameIndex()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileDisassembler.disassemble(IClassFileReader,String)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileDisassembler.disassemble(IClassFileReader,String,int)",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getAccessFlags()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getAttributeCount()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getAttributes()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getClassIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getClassName()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getConstantPool()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getFieldInfos()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getFieldsCount()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getInnerClassesAttribute()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getInterfaceIndexes()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getInterfaceNames()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getMagic()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getMajorVersion()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getMethodInfos()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getMethodsCount()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getMinorVersion()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getSourceFileAttribute()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getSuperclassIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.getSuperclassName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.isClass()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IClassFileReader.isInterface()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getAttributes()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getAttributesCount()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getBytecodes()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getCodeLength()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getExceptionTable()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getExceptionTableLength()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getLineNumberAttribute()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getLocalVariableAttribute()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getMaxLocals()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.getMaxStack()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ICodeAttribute.traverse(IBytecodeVisitor)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPool.decodeEntry(int)",n/a,50,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPool.getConstantPoolCount()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPool.getEntryKind(int)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getClassIndex()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getClassInfoName()",n/a,8,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getClassInfoNameIndex()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getClassName()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getDoubleValue()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getFieldDescriptor()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getFieldName()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getFloatValue()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getIntegerValue()",n/a,18,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getKind()",n/a,59,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getLongValue()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getMethodDescriptor()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getMethodName()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getNameAndTypeIndex()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getNameAndTypeInfoDescriptorIndex()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getNameAndTypeInfoNameIndex()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getStringIndex()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getStringValue()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getUtf8Length()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry.getUtf8Value()",n/a,29,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantValueAttribute.getConstantValue()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IConstantValueAttribute.getConstantValueIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IEnclosingMethodAttribute.getEnclosingClass()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IEnclosingMethodAttribute.getEnclosingClassIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IEnclosingMethodAttribute.getMethodDescriptor()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IEnclosingMethodAttribute.getMethodDescriptorIndex()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IEnclosingMethodAttribute.getMethodName()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IEnclosingMethodAttribute.getMethodNameAndTypeIndex()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IEnclosingMethodAttribute.getMethodNameIndex()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IExceptionAttribute.getExceptionIndexes()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IExceptionAttribute.getExceptionNames()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IExceptionAttribute.getExceptionsNumber()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IExceptionTableEntry.getCatchType()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IExceptionTableEntry.getCatchTypeIndex()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IExceptionTableEntry.getEndPC()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IExceptionTableEntry.getHandlerPC()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IExceptionTableEntry.getStartPC()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.getAccessFlags()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.getAttributeCount()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.getAttributes()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.getConstantValueAttribute()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.getDescriptor()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.getDescriptorIndex()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.getName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.getNameIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.hasConstantValueAttribute()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.isDeprecated()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IFieldInfo.isSynthetic()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttribute.getInnerClassAttributesEntries()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttribute.getNumberOfClasses()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttributeEntry.getAccessFlags()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttributeEntry.getInnerClassName()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttributeEntry.getInnerClassNameIndex()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttributeEntry.getInnerName()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttributeEntry.getInnerNameIndex()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttributeEntry.getOuterClassName()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttributeEntry.getOuterClassNameIndex()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILineNumberAttribute.getLineNumberTable()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILineNumberAttribute.getLineNumberTableLength()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableAttribute.getLocalVariableTable()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableAttribute.getLocalVariableTableLength()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTableEntry.getDescriptor()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTableEntry.getDescriptorIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTableEntry.getIndex()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTableEntry.getLength()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTableEntry.getName()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTableEntry.getNameIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTableEntry.getStartPC()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableAttribute.getLocalVariableTypeTable()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableAttribute.getLocalVariableTypeTableLength()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry.getIndex()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry.getLength()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry.getName()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry.getNameIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry.getSignature()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry.getSignatureIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry.getStartPC()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.getAccessFlags()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.getAttributeCount()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.getAttributes()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.getCodeAttribute()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.getDescriptor()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.getDescriptorIndex()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.getExceptionAttribute()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.getName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.getNameIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.isClinit()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.isConstructor()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.isDeprecated()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IMethodInfo.isSynthetic()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IParameterAnnotation.getAnnotations()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IParameterAnnotation.getAnnotationsNumber()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute.getAnnotations()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute.getAnnotationsNumber()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute.getParameterAnnotations()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute.getParametersNumber()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute.getAnnotations()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute.getAnnotationsNumber()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute.getParameterAnnotations()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute.getParametersNumber()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ISignatureAttribute.getSignature()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ISignatureAttribute.getSignatureIndex()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ISourceAttribute.getSourceFileIndex()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.ISourceAttribute.getSourceFileName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IVerificationTypeInfo.getClassTypeName()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IVerificationTypeInfo.getConstantPoolIndex()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IVerificationTypeInfo.getOffset()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.core.util.IVerificationTypeInfo.getTag()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.ASTVisitor.acceptProblem(IProblem)",0,3,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AND_AND_Expression,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AllocationExpression,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AnnotationMethodDeclaration,ClassScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Argument,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayAllocationExpression,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayInitializer,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayQualifiedTypeReference,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayQualifiedTypeReference,ClassScope)",0,2,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayTypeReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayTypeReference,ClassScope)",0,2,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AssertStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Assignment,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(BinaryExpression,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Block,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(BreakStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CaseStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CastExpression,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CharLiteral,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ClassLiteralAccess,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Clinit,ClassScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CompilationUnitDeclaration,CompilationUnitScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CompoundAssignment,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ConditionalExpression,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ConstructorDeclaration,ClassScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ContinueStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(DoStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(DoubleLiteral,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(EmptyStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(EqualExpression,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ExplicitConstructorCall,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ExtendedStringLiteral,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FalseLiteral,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FieldDeclaration,MethodScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FieldReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FloatLiteral,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ForStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ForeachStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(IfStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ImportReference,CompilationUnitScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Initializer,MethodScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(InstanceOfExpression,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(IntLiteral,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArgumentExpression,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArrayQualifiedTypeReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArraySingleTypeReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocFieldReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocMessageSend,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocQualifiedTypeReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocReturnStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocSingleNameReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocSingleTypeReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LabeledStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LocalDeclaration,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LongLiteral,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MarkerAnnotation,BlockScope)",0,1,n/a,8,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MarkerAnnotation,CompilationUnitScope)",0,1,n/a,8,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MemberValuePair,BlockScope)",0,1,n/a,7,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MemberValuePair,CompilationUnitScope)",0,1,n/a,7,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MessageSend,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MethodDeclaration,ClassScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(NormalAnnotation,BlockScope)",0,1,n/a,8,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(NormalAnnotation,CompilationUnitScope)",0,1,n/a,8,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(NullLiteral,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(OR_OR_Expression,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedQualifiedTypeReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedQualifiedTypeReference,ClassScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedSingleTypeReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedSingleTypeReference,ClassScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(PostfixExpression,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(PrefixExpression,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedAllocationExpression,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedNameReference,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedSuperReference,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedThisReference,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedTypeReference,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedTypeReference,ClassScope)",0,2,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ReturnStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleMemberAnnotation,BlockScope)",0,1,n/a,8,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleMemberAnnotation,CompilationUnitScope)",0,1,n/a,8,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleNameReference,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleTypeReference,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleTypeReference,ClassScope)",0,2,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(StringLiteral,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(StringLiteralConcatenation,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SuperReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SwitchStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SynchronizedStatement,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ThisReference,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ThrowStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TrueLiteral,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TryStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeDeclaration,BlockScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeDeclaration,ClassScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeDeclaration,CompilationUnitScope)",0,1,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeParameter,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeParameter,ClassScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(UnaryExpression,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(WhileStatement,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Wildcard,BlockScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Wildcard,ClassScope)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AND_AND_Expression,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AllocationExpression,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AnnotationMethodDeclaration,ClassScope)",0,1,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Argument,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayAllocationExpression,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayInitializer,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayQualifiedTypeReference,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayQualifiedTypeReference,ClassScope)",0,3,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayReference,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayTypeReference,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayTypeReference,ClassScope)",0,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AssertStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Assignment,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(BinaryExpression,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Block,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(BreakStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CaseStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CastExpression,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CharLiteral,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ClassLiteralAccess,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Clinit,ClassScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CompilationUnitDeclaration,CompilationUnitScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CompoundAssignment,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ConditionalExpression,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ConstructorDeclaration,ClassScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ContinueStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(DoStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(DoubleLiteral,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(EmptyStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(EqualExpression,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ExplicitConstructorCall,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ExtendedStringLiteral,BlockScope)",0,1,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FalseLiteral,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FieldDeclaration,MethodScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FieldReference,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FloatLiteral,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ForStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ForeachStatement,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(IfStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ImportReference,CompilationUnitScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Initializer,MethodScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(InstanceOfExpression,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(IntLiteral,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArgumentExpression,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArrayQualifiedTypeReference,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArraySingleTypeReference,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocFieldReference,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocMessageSend,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocQualifiedTypeReference,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocReturnStatement,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocSingleNameReference,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocSingleTypeReference,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LabeledStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LocalDeclaration,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LongLiteral,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MarkerAnnotation,BlockScope)",0,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MarkerAnnotation,CompilationUnitScope)",0,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MemberValuePair,BlockScope)",0,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MemberValuePair,CompilationUnitScope)",0,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MessageSend,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MethodDeclaration,ClassScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(NormalAnnotation,BlockScope)",0,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(NormalAnnotation,CompilationUnitScope)",0,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(NullLiteral,BlockScope)",0,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(OR_OR_Expression,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedQualifiedTypeReference,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedQualifiedTypeReference,ClassScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedSingleTypeReference,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedSingleTypeReference,ClassScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(PostfixExpression,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(PrefixExpression,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedAllocationExpression,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedNameReference,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedSuperReference,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedThisReference,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedTypeReference,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedTypeReference,ClassScope)",0,3,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ReturnStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleMemberAnnotation,BlockScope)",0,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleMemberAnnotation,CompilationUnitScope)",0,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleNameReference,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleTypeReference,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleTypeReference,ClassScope)",0,3,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(StringLiteral,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(StringLiteralConcatenation,BlockScope)",0,1,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SuperReference,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SwitchStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SynchronizedStatement,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ThisReference,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ThrowStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TrueLiteral,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TryStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeDeclaration,BlockScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeDeclaration,ClassScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeDeclaration,CompilationUnitScope)",0,2,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeParameter,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeParameter,ClassScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(UnaryExpression,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(WhileStatement,BlockScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Wildcard,BlockScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Wildcard,ClassScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.ClassFile()",0,2,n/a,7,0,0,0,1
"org.eclipse.jdt.internal.compiler.ClassFile.ClassFile(SourceTypeBinding,ClassFile,boolean)",19,2,n/a,88,1,3,53,8
"org.eclipse.jdt.internal.compiler.ClassFile.addAbstractMethod(AbstractMethodDeclaration,MethodBinding)",3,2,n/a,17,0,2,5,1
"org.eclipse.jdt.internal.compiler.ClassFile.addAttributes()",45,4,n/a,206,4,0,134,28
"org.eclipse.jdt.internal.compiler.ClassFile.addDefaultAbstractMethods()",4,2,n/a,15,1,0,8,2
"org.eclipse.jdt.internal.compiler.ClassFile.addFieldAttributes(FieldBinding,int)",31,1,n/a,145,6,2,100,25
"org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfo(FieldBinding)",6,2,n/a,36,1,1,19,3
"org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfos()",8,4,n/a,29,2,0,17,6
"org.eclipse.jdt.internal.compiler.ClassFile.addInnerClasses(ReferenceBinding)",1,5,n/a,23,1,1,9,4
"org.eclipse.jdt.internal.compiler.ClassFile.addMissingAbstractProblemMethod(MethodDeclaration,MethodBinding,IProblem,CompilationResult)",15,1,n/a,25,0,4,16,1
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemClinit(IProblem[])",16,2,n/a,54,4,1,33,7
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemConstructor(AbstractMethodDeclaration,MethodBinding,IProblem[])",18,4,n/a,58,4,3,29,7
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemConstructor(AbstractMethodDeclaration,MethodBinding,IProblem[],int)",1,2,n/a,20,0,4,3,1
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemMethod(AbstractMethodDeclaration,MethodBinding,IProblem[])",23,4,n/a,65,4,3,32,11
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemMethod(AbstractMethodDeclaration,MethodBinding,IProblem[],int)",1,2,n/a,20,0,4,3,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSpecialMethods()",14,2,n/a,56,3,0,36,10
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticConstructorAccessMethod(SyntheticMethodBinding)",7,1,n/a,35,0,1,15,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticEnumValueOfMethod(SyntheticMethodBinding)",6,1,n/a,35,0,1,8,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticEnumValuesMethod(SyntheticMethodBinding)",6,1,n/a,35,0,1,8,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticFieldReadAccessMethod(SyntheticMethodBinding)",7,1,n/a,36,0,1,15,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticFieldWriteAccessMethod(SyntheticMethodBinding)",7,1,n/a,36,0,1,15,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticMethodAccessMethod(SyntheticMethodBinding)",7,1,n/a,35,0,1,15,1
"org.eclipse.jdt.internal.compiler.ClassFile.buildAllDirectoriesInto(String,String)",37,1,n/a,62,3,2,26,8
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(int)",35,2,n/a,305,5,1,225,39
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForClinit(int)",30,1,n/a,267,6,1,191,34
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForClinit(int,int[],int)",9,1,n/a,110,2,3,62,8
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForMissingAbstractProblemMethod(MethodBinding,int,int[],int)",5,1,n/a,76,2,4,47,5
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForProblemMethod(AbstractMethodDeclaration,MethodBinding,int,int[],int)",39,2,n/a,306,7,5,230,39
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForSyntheticMethod(SyntheticMethodBinding,int,int[])",22,6,n/a,205,5,3,148,21
"org.eclipse.jdt.internal.compiler.ClassFile.completeMethodInfo(int,int)",0,9,n/a,14,0,2,2,1
"org.eclipse.jdt.internal.compiler.ClassFile.createProblemType(TypeDeclaration,CompilationResult)",22,4,n/a,100,7,2,64,25
"org.eclipse.jdt.internal.compiler.ClassFile.fileName()",1,6,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.generateAnnotation(Annotation,int)",9,5,n/a,61,4,2,46,11
"org.eclipse.jdt.internal.compiler.ClassFile.generateCodeAttributeHeader()",2,13,n/a,17,1,0,6,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateElementValue(Expression,TypeBinding,int)",6,4,n/a,25,3,3,13,7
"org.eclipse.jdt.internal.compiler.ClassFile.generateElementValue(int,Expression,Constant,TypeBinding)",22,1,n/a,83,3,4,61,14
"org.eclipse.jdt.internal.compiler.ClassFile.generateElementValueForNonConstantExpression(Expression,int,TypeBinding)",15,1,n/a,67,4,3,49,16
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoAttribute(MethodBinding)",1,7,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoAttribute(MethodBinding,AnnotationMethodDeclaration)",3,1,n/a,23,2,2,17,3
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoAttribute(MethodBinding,boolean)",17,3,n/a,126,4,2,73,18
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoHeader(MethodBinding)",1,12,n/a,13,0,1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoHeader(MethodBinding,int)",5,4,n/a,34,1,2,15,4
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoHeaderForClinit()",3,2,n/a,28,1,0,13,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateMissingAbstractMethods(MethodDeclaration[],CompilationResult)",6,1,n/a,27,4,2,15,7
"org.eclipse.jdt.internal.compiler.ClassFile.generateRuntimeAnnotations(Annotation[])",10,3,n/a,93,4,1,79,18
"org.eclipse.jdt.internal.compiler.ClassFile.generateRuntimeAnnotationsForParameters(Argument[])",12,1,n/a,125,7,1,107,26
"org.eclipse.jdt.internal.compiler.ClassFile.getBytes()",2,7,n/a,15,0,0,4,1
"org.eclipse.jdt.internal.compiler.ClassFile.getCompoundName()",2,3,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.initByteArrays()",3,2,n/a,15,2,0,10,3
"org.eclipse.jdt.internal.compiler.ClassFile.isRuntimeInvisible(Annotation)",0,4,n/a,10,1,1,7,3
"org.eclipse.jdt.internal.compiler.ClassFile.isRuntimeVisible(Annotation)",0,4,n/a,10,1,1,7,3
"org.eclipse.jdt.internal.compiler.ClassFile.outerMostEnclosingClassFile()",0,3,n/a,12,0,0,4,2
"org.eclipse.jdt.internal.compiler.ClassFile.recordEnclosingTypeAttributes(ReferenceBinding)",5,4,n/a,30,2,1,19,5
"org.eclipse.jdt.internal.compiler.ClassFile.recordNestedLocalAttribute(ReferenceBinding)",5,4,n/a,29,2,1,19,5
"org.eclipse.jdt.internal.compiler.ClassFile.recordNestedMemberAttribute(ReferenceBinding)",1,4,n/a,10,0,1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.resizeContents(int)",1,67,n/a,10,0,1,5,2
"org.eclipse.jdt.internal.compiler.ClassFile.searchLineNumber(int[],int)",0,4,n/a,32,2,2,15,6
"org.eclipse.jdt.internal.compiler.ClassFile.setForMethodInfos()",0,4,n/a,9,0,0,2,1
"org.eclipse.jdt.internal.compiler.ClassFile.writeToDisk(boolean,String,String,byte[])",17,2,n/a,56,3,4,21,5
"org.eclipse.jdt.internal.compiler.CompilationResult.CompilationResult(ICompilationUnit,int,int,int)",1,22,n/a,11,0,4,5,1
"org.eclipse.jdt.internal.compiler.CompilationResult.CompilationResult(char[],int,int,int)",0,15,n/a,10,0,4,4,1
"org.eclipse.jdt.internal.compiler.CompilationResult.computePriority(IProblem)",5,3,n/a,28,3,1,20,8
"org.eclipse.jdt.internal.compiler.CompilationResult.getAllProblems()",4,7,n/a,50,4,0,35,12
"org.eclipse.jdt.internal.compiler.CompilationResult.getClassFiles()",4,3,n/a,9,1,0,6,2
"org.eclipse.jdt.internal.compiler.CompilationResult.getCompilationUnit()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.getErrors()",3,2,n/a,17,1,0,17,6
"org.eclipse.jdt.internal.compiler.CompilationResult.getFileName()",0,10,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.getProblems()",4,6,n/a,24,2,0,9,5
"org.eclipse.jdt.internal.compiler.CompilationResult.getTasks()",2,3,n/a,18,2,0,5,3
"org.eclipse.jdt.internal.compiler.CompilationResult.hasErrors()",1,2,n/a,8,1,0,7,4
"org.eclipse.jdt.internal.compiler.CompilationResult.hasProblems()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.hasSyntaxError()",2,5,n/a,9,1,0,8,5
"org.eclipse.jdt.internal.compiler.CompilationResult.hasTasks()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.hasWarnings()",1,0,n/a,8,1,0,7,4
"org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(IProblem[],int,int)",5,3,n/a,24,2,3,20,8
"org.eclipse.jdt.internal.compiler.CompilationResult.quickSort(IProblem[],int,int)",5,4,n/a,24,2,3,20,8
"org.eclipse.jdt.internal.compiler.CompilationResult.record(IProblem,ReferenceContext)",9,4,n/a,18,1,2,16,9
"org.eclipse.jdt.internal.compiler.CompilationResult.record(char[],ClassFile)",3,4,n/a,10,1,2,4,3
"org.eclipse.jdt.internal.compiler.CompilationResult.recordTask(IProblem)",1,1,n/a,8,1,1,5,3
"org.eclipse.jdt.internal.compiler.CompilationResult.tagAsAccepted()",0,7,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.CompilationResult.toString()",19,0,n/a,25,2,0,18,6
"org.eclipse.jdt.internal.compiler.Compiler.Compiler(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory)",8,6,n/a,6,4,5,10,3
"org.eclipse.jdt.internal.compiler.Compiler.Compiler(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory,boolean)",8,2,n/a,6,4,6,10,3
"org.eclipse.jdt.internal.compiler.Compiler.accept(IBinaryType,PackageBinding,AccessRestriction)",5,2,n/a,15,1,3,3,2
"org.eclipse.jdt.internal.compiler.Compiler.accept(ICompilationUnit,AccessRestriction)",13,3,n/a,41,2,2,15,5
"org.eclipse.jdt.internal.compiler.Compiler.accept(ISourceType[],PackageBinding,AccessRestriction)",6,2,n/a,10,0,3,1,1
"org.eclipse.jdt.internal.compiler.Compiler.addCompilationUnit(ICompilationUnit,CompilationUnitDeclaration)",1,3,n/a,15,0,2,4,2
"org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(ICompilationUnit[])",12,3,n/a,41,3,1,18,4
"org.eclipse.jdt.internal.compiler.Compiler.compile(ICompilationUnit[])",27,3,n/a,60,3,1,26,9
"org.eclipse.jdt.internal.compiler.Compiler.handleInternalException(AbortCompilation,CompilationUnitDeclaration)",7,3,n/a,58,5,2,30,18
"org.eclipse.jdt.internal.compiler.Compiler.handleInternalException(Throwable,CompilationUnitDeclaration,CompilationResult)",12,6,n/a,48,2,3,17,8
"org.eclipse.jdt.internal.compiler.Compiler.initializeParser()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.Compiler.process(CompilationUnitDeclaration,int)",8,3,n/a,23,0,2,11,5
"org.eclipse.jdt.internal.compiler.Compiler.reset()",2,1,n/a,6,0,0,5,2
"org.eclipse.jdt.internal.compiler.Compiler.resolve(CompilationUnitDeclaration,ICompilationUnit,boolean,boolean,boolean)",15,2,n/a,60,3,5,27,12
"org.eclipse.jdt.internal.compiler.Compiler.resolve(ICompilationUnit,boolean,boolean,boolean)",1,2,n/a,15,0,4,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.ConfigurableOption(String,String,Locale,int)",14,0,n/a,70,3,4,40,13
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getCategory()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getComponentName()",0,0,n/a,11,0,0,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getCurrentValueIndex()",0,0,n/a,12,0,0,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getDefaultValueIndex()",0,0,n/a,12,0,0,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getDescription()",0,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getID()",0,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getName()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getOptionName()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.getPossibleValues()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.setValueIndex(int)",0,0,n/a,10,0,1,1,1
"org.eclipse.jdt.internal.compiler.ConfigurableOption.toString()",25,0,n/a,28,2,0,22,5
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.exitAfterAllProblems()",1,6,n/a,3,2,0,3,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.exitOnFirstError()",1,0,n/a,3,2,0,3,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.proceedOnFirstError()",1,0,n/a,3,2,0,3,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.proceedWithAllProblems()",1,13,n/a,3,2,0,3,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.DocumentElementParser(IDocumentElementRequestor,IProblemFactory,CompilerOptions)",4,1,n/a,3,2,3,6,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.checkComment()",4,12,n/a,39,2,0,20,7
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassBodyDeclaration()",2,4,n/a,19,0,0,3,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassDeclaration()",3,4,n/a,14,1,0,4,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassHeader()",8,4,n/a,68,2,0,26,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassHeaderName1()",5,2,n/a,45,2,0,26,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeCompilationUnit()",1,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeConstructorDeclaration()",3,2,n/a,14,1,0,5,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeConstructorHeader()",6,3,n/a,78,2,0,48,6
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeConstructorHeaderName()",3,3,n/a,30,1,0,16,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeDefaultModifiers()",6,1,n/a,9,0,0,6,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeDiet()",3,2,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeEnterCompilationUnit()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeEnterVariable()",15,3,n/a,101,2,0,51,11
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeExitVariableWithInitialization()",1,5,n/a,13,0,0,4,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeExitVariableWithoutInitialization()",1,3,n/a,8,0,0,4,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeFieldDeclaration()",3,2,n/a,17,1,0,7,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeFormalParameter(boolean)",5,4,n/a,50,2,1,22,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInterfaceDeclaration()",3,3,n/a,14,1,0,4,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInterfaceHeader()",5,4,n/a,48,2,0,25,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInterfaceHeaderName1()",5,2,n/a,45,2,0,26,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeLocalVariableDeclaration()",1,4,n/a,10,0,0,2,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodDeclaration(boolean)",3,4,n/a,15,1,1,5,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeader()",7,6,n/a,84,2,0,50,7
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeaderExtendedDims()",3,2,n/a,27,2,0,18,4
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeaderName(boolean)",5,5,n/a,36,1,1,19,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeModifiers()",5,2,n/a,8,0,0,5,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePackageDeclarationName()",6,3,n/a,16,0,0,4,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePackageDeclarationNameWithModifiers()",6,3,n/a,16,0,0,4,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePushModifiers()",8,1,n/a,15,1,0,9,4
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePushRealModifiers()",7,1,n/a,14,1,0,8,4
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeSingleStaticImportDeclarationName()",6,5,n/a,15,0,0,4,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeSingleTypeImportDeclarationName()",6,5,n/a,19,0,0,4,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeStaticImportOnDemandDeclarationName()",6,5,n/a,15,0,0,4,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeStaticInitializer()",2,3,n/a,19,0,0,3,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeStaticOnly()",6,2,n/a,11,0,0,7,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeTypeImportOnDemandDeclarationName()",6,5,n/a,19,0,0,4,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.endParse(int)",3,4,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.flushCommentsDefinedPriorTo(int)",1,32,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.initialize()",1,20,n/a,6,0,0,2,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.isLocalDeclaration()",0,10,n/a,14,2,0,6,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseCompilationUnit(ICompilationUnit)",9,1,n/a,22,1,1,8,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseConstructor(char[])",8,0,n/a,21,1,1,7,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseField(char[])",8,2,n/a,21,1,1,7,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseImport(char[])",8,1,n/a,21,1,1,7,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseInitializer(char[])",8,1,n/a,24,1,1,7,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseMethod(char[])",8,1,n/a,21,1,1,7,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parsePackage(char[])",8,1,n/a,21,1,1,7,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseType(char[])",8,1,n/a,21,1,1,7,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.problemReporter()",0,76,n/a,11,0,0,2,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.pushOnIntArrayStack(int[])",1,8,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.resetModifiers()",1,18,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.resumeOnSyntaxError()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.returnTypeName(TypeReference)",6,4,n/a,21,2,1,10,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.toString()",5,3,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.typeReference(int,int,int)",7,0,n/a,57,3,3,23,6
"org.eclipse.jdt.internal.compiler.ICompilerRequestor.acceptResult(CompilationResult)",n/a,9,8,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDebugRequestor.acceptDebugResult(CompilationResult)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDebugRequestor.activate()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDebugRequestor.deactivate()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDebugRequestor.isActive()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDebugRequestor.reset()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.acceptImport(int,int,int[],char[],int,boolean,int)",n/a,5,1,n/a,n/a,7,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.acceptInitializer(int,int,int[],int,int,int,int)",n/a,3,1,n/a,n/a,7,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.acceptLineSeparatorPositions(int[])",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.acceptPackage(int,int,int[],char[],int)",n/a,3,1,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.acceptProblem(IProblem)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.enterClass(int,int[],int,int,int,char[],int,int,char[],int,int,char[][],int[],int[],int)",n/a,4,1,n/a,n/a,15,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.enterCompilationUnit()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.enterConstructor(int,int[],int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,char[][],int[],int[],int)",n/a,1,1,n/a,n/a,18,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.enterField(int,int[],int,int,char[],int,int,int,char[],int,int,int,int)",n/a,2,1,n/a,n/a,13,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.enterInterface(int,int[],int,int,int,char[],int,int,char[][],int[],int[],int)",n/a,2,1,n/a,n/a,12,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.enterMethod(int,int[],int,int,char[],int,int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,int,int,char[][],int[],int[],int)",n/a,1,1,n/a,n/a,24,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.exitClass(int,int)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.exitCompilationUnit(int)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.exitConstructor(int,int)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.exitField(int,int)",n/a,3,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.exitInterface(int,int)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor.exitMethod(int,int)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy.proceedOnErrors()",n/a,0,7,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy.stopOnFirstError()",n/a,1,7,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.IProblemFactory.createProblem(char[],int,String[],String[],int,int,int,int)",n/a,4,4,n/a,n/a,8,n/a,n/a
"org.eclipse.jdt.internal.compiler.IProblemFactory.getLocale()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.IProblemFactory.getLocalizedMessage(int,String[])",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptConstructorReference(char[],int,int)",n/a,9,3,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptFieldReference(char[],int)",n/a,5,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptImport(int,int,char[],boolean,int)",n/a,3,5,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptLineSeparatorPositions(int[])",n/a,5,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptMethodReference(char[],int,int)",n/a,9,3,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptPackage(int,int,char[])",n/a,3,5,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptProblem(IProblem)",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptTypeReference(char[],int)",n/a,8,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptTypeReference(char[][],int,int)",n/a,12,3,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptUnknownReference(char[],int)",n/a,5,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.acceptUnknownReference(char[][],int,int)",n/a,5,3,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.enterClass(TypeInfo)",n/a,4,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.enterCompilationUnit()",n/a,4,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.enterConstructor(MethodInfo)",n/a,3,7,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.enterEnum(TypeInfo)",n/a,4,5,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.enterField(FieldInfo)",n/a,4,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.enterInitializer(int,int)",n/a,4,6,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.enterInterface(TypeInfo)",n/a,3,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.enterMethod(MethodInfo)",n/a,3,7,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.exitClass(int)",n/a,5,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.exitCompilationUnit(int)",n/a,4,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.exitConstructor(int)",n/a,5,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.exitEnum(int)",n/a,4,5,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.exitField(int,int,int)",n/a,4,6,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.exitInitializer(int)",n/a,4,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.exitInterface(int)",n/a,4,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.exitMethod(int,int,int)",n/a,5,6,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.peekDeclaringType()",2,2,n/a,6,0,0,6,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.popDeclaringType()",2,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.pushDeclaringType(TypeDeclaration)",2,1,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.visit(TypeDeclaration,BlockScope)",2,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor.visit(TypeDeclaration,ClassScope)",2,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.SourceElementParser(ISourceElementRequestor,IProblemFactory,CompilerOptions)",5,2,n/a,4,2,3,8,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.SourceElementParser(ISourceElementRequestor,IProblemFactory,CompilerOptions,boolean)",2,4,n/a,10,1,4,3,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.acceptJavadocTypeReference(Expression)",2,4,n/a,9,1,1,6,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.addUnknownRef(NameReference)",1,4,n/a,12,1,1,3,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.checkComment()",18,7,n/a,73,5,0,57,35
"org.eclipse.jdt.internal.compiler.SourceElementParser.classInstanceCreation(boolean)",4,6,n/a,16,1,1,8,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.collectAnnotationPositions(Annotation[])",0,7,n/a,10,1,1,10,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeConstructorHeaderName()",2,3,n/a,8,0,0,6,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeConstructorHeaderNameWithTypeParameters()",2,2,n/a,8,0,0,6,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeEnumConstantNoClassBody()",2,2,n/a,7,1,0,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeEnumConstantWithClassBody()",2,2,n/a,7,1,0,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeExitVariableWithInitialization()",2,5,n/a,10,1,0,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeExitVariableWithoutInitialization()",2,3,n/a,9,1,0,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeFieldAccess(boolean)",2,6,n/a,13,1,1,4,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodHeaderName(boolean)",2,5,n/a,8,0,1,6,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodHeaderNameWithTypeParameters(boolean)",2,4,n/a,8,0,1,6,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationName()",2,5,n/a,17,1,0,5,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationNameWithTypeArguments()",2,4,n/a,13,1,0,5,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationPrimary()",2,4,n/a,15,1,0,5,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationPrimaryWithTypeArguments()",2,4,n/a,15,1,0,5,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationSuper()",2,4,n/a,16,1,0,5,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationSuperWithTypeArguments()",2,4,n/a,12,1,0,5,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeSingleStaticImportDeclarationName()",4,5,n/a,19,2,0,11,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeSingleTypeImportDeclarationName()",2,5,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeStaticImportOnDemandDeclarationName()",2,5,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeTypeImportOnDemandDeclarationName()",2,5,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.convertToMethodDeclaration(ConstructorDeclaration,CompilationResult)",3,2,n/a,7,0,2,5,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.endParse(int)",6,5,n/a,24,2,1,18,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeParameterInfos(TypeParameter[])",7,6,n/a,36,4,1,32,6
"org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(int)",16,48,n/a,87,4,1,49,16
"org.eclipse.jdt.internal.compiler.SourceElementParser.getUnspecifiedReference()",6,7,n/a,32,2,0,15,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.getUnspecifiedReferenceOptimized()",6,15,n/a,45,2,0,19,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifyAllUnknownReferences()",8,1,n/a,38,4,0,21,8
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(AbstractMethodDeclaration)",32,2,n/a,147,4,1,108,33
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(CompilationUnitDeclaration)",8,4,n/a,82,4,1,54,24
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(FieldDeclaration,TypeDeclaration)",13,1,n/a,79,3,2,38,23
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(ImportReference,boolean)",6,2,n/a,17,1,2,3,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(TypeDeclaration,boolean,TypeDeclaration)",40,4,n/a,204,4,3,159,46
"org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(ICompilationUnit,boolean)",6,6,n/a,32,2,2,21,6
"org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(ICompilationUnit,int,int,boolean)",6,0,n/a,30,2,4,17,6
"org.eclipse.jdt.internal.compiler.SourceElementParser.parseTypeMemberDeclarations(ISourceType,ICompilationUnit,int,int,boolean)",12,0,n/a,56,2,5,26,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.parseTypeMemberDeclarations(char[],int,int)",6,0,n/a,29,1,3,14,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.quickSort(ASTNode[],int,int)",2,3,n/a,29,2,3,18,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.sourceEnd(TypeDeclaration)",0,4,n/a,10,1,1,6,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.visitIfNeeded(AbstractMethodDeclaration)",2,3,n/a,16,3,1,11,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.visitIfNeeded(FieldDeclaration,TypeDeclaration)",3,1,n/a,13,3,2,6,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.visitIfNeeded(Initializer)",1,1,n/a,8,2,1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptConstructorReference(char[],int,int)",0,9,n/a,9,0,3,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptFieldReference(char[],int)",0,5,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptImport(int,int,char[],boolean,int)",0,3,n/a,11,0,5,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptLineSeparatorPositions(int[])",0,5,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptMethodReference(char[],int,int)",0,9,n/a,9,0,3,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptPackage(int,int,char[])",0,3,n/a,9,0,3,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptProblem(IProblem)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptTypeReference(char[],int)",0,8,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptTypeReference(char[][],int,int)",0,12,n/a,9,0,3,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptUnknownReference(char[],int)",0,5,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptUnknownReference(char[][],int,int)",0,5,n/a,9,0,3,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterClass(TypeInfo)",0,4,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterCompilationUnit()",0,4,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterConstructor(MethodInfo)",0,3,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterEnum(TypeInfo)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterField(FieldInfo)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterInitializer(int,int)",0,4,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterInterface(TypeInfo)",0,3,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterMethod(MethodInfo)",0,3,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitClass(int)",0,5,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitCompilationUnit(int)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitConstructor(int)",0,5,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitEnum(int)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitField(int,int,int)",0,4,n/a,6,0,3,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitInitializer(int)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitInterface(int)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitMethod(int,int,int)",0,5,n/a,6,0,3,0,1
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.AND_AND_Expression(Expression,Expression,int)",1,3,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.analyseCode(BlockScope,FlowContext,FlowInfo)",30,70,n/a,36,1,3,20,5
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateCode(BlockScope,CodeStream,boolean)",40,206,n/a,97,4,3,61,21
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",25,61,n/a,81,4,5,46,25
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.isCompactableOperation()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.traverse(ASTVisitor,BlockScope)",4,195,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.ASTNode.ASTNode()",1,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.checkInvocationArgument(BlockScope,Expression,TypeBinding,TypeBinding)",7,3,n/a,9,0,4,7,8
"org.eclipse.jdt.internal.compiler.ast.ASTNode.checkInvocationArguments(BlockScope,Expression,TypeBinding,MethodBinding,Expression[],TypeBinding[],boolean,InvocationSite)",29,5,n/a,49,3,8,45,25
"org.eclipse.jdt.internal.compiler.ast.ASTNode.concreteStatement()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isFieldUseDeprecated(FieldBinding,Scope,boolean)",6,9,n/a,15,1,3,9,8
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isImplicitThis()",0,16,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isMethodUseDeprecated(MethodBinding,Scope)",7,8,n/a,15,1,2,9,7
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isSuper()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isThis()",0,18,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isTypeUseDeprecated(TypeBinding,Scope)",15,13,n/a,26,2,2,18,11
"org.eclipse.jdt.internal.compiler.ast.ASTNode.print(int,StringBuffer)",n/a,3,18,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.ASTNode.printAnnotations(Annotation[],StringBuffer)",2,6,n/a,8,1,2,7,2
"org.eclipse.jdt.internal.compiler.ast.ASTNode.printIndent(int,StringBuffer)",1,61,n/a,4,0,2,5,2
"org.eclipse.jdt.internal.compiler.ast.ASTNode.printModifiers(int,StringBuffer)",10,10,n/a,23,0,2,21,11
"org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations(BlockScope,Annotation[],Binding)",5,6,n/a,31,3,3,26,8
"org.eclipse.jdt.internal.compiler.ast.ASTNode.sourceEnd()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.sourceStart()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.toString()",3,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.traverse(ASTVisitor,BlockScope)",0,45,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.AbstractMethodDeclaration(CompilationResult)",0,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.abort(int,IProblem)",4,2,n/a,15,1,2,9,5
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.analyseCode(ClassScope,InitializationFlowContext,FlowInfo)",n/a,3,3,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.bindArguments()",3,3,n/a,18,3,0,11,7
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.bindThrownExceptions()",4,1,n/a,38,5,0,24,11
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.checkArgumentsSize()",2,1,n/a,15,2,0,11,5
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.compilationResult()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(ClassFile)",19,2,n/a,40,3,1,31,10
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(ClassScope,ClassFile)",14,2,n/a,52,3,2,30,6
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.hasErrors()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isAbstract()",1,14,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isAnnotationMethod()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isClinit()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isConstructor()",0,20,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isDefaultConstructor()",0,15,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isInitializationMethod()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isMethod()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isNative()",1,5,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isStatic()",1,4,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",n/a,4,4,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.print(int,StringBuffer)",19,5,n/a,33,2,2,34,10
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.printBody(int,StringBuffer)",8,3,n/a,14,2,2,12,6
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.printReturnType(int,StringBuffer)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(ClassScope)",5,2,n/a,14,1,1,9,3
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveJavadoc()",4,2,n/a,10,1,0,7,5
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements()",3,3,n/a,9,2,0,7,4
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.tagAsHavingErrors()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.traverse(ASTVisitor,ClassScope)",0,7,n/a,5,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.typeParameters()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.analyseCode(BlockScope,FlowContext,FlowInfo)",0,13,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.getKind()",n/a,6,5,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.isSuperAccess()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.isTypeAccess()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.printStatement(int,StringBuffer)",12,13,n/a,22,2,2,17,7
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.resolve(BlockScope)",0,13,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.setActualReceiverType(ReferenceBinding)",0,5,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.setDepth(int)",0,9,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.setFieldIndex(int)",0,6,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",7,70,n/a,29,2,3,12,4
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.checkCapturedLocalInitializationIfNecessary(ReferenceBinding,BlockScope,FlowInfo)",7,2,n/a,17,3,3,13,9
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.enclosingInstance()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.generateCode(BlockScope,CodeStream,boolean)",17,206,n/a,51,2,3,23,7
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isSuperAccess()",0,7,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isTypeAccess()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",8,1,n/a,23,2,2,7,5
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",10,2,n/a,16,2,2,8,5
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.printExpression(int,StringBuffer)",11,63,n/a,26,2,2,23,8
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(BlockScope)",15,55,n/a,65,3,1,48,18
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setActualReceiverType(ReferenceBinding)",0,5,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setDepth(int)",0,9,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setFieldIndex(int)",0,6,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.traverse(ASTVisitor,BlockScope)",5,195,n/a,17,3,2,14,7
"org.eclipse.jdt.internal.compiler.ast.Annotation.detectStandardAnnotation(Scope,ReferenceBinding,MemberValuePair)",8,1,n/a,69,8,3,50,23
"org.eclipse.jdt.internal.compiler.ast.Annotation.getRetentionPolicy(char[])",3,2,n/a,19,1,1,16,9
"org.eclipse.jdt.internal.compiler.ast.Annotation.getTargetElementType(char[])",8,3,n/a,37,1,1,34,18
"org.eclipse.jdt.internal.compiler.ast.Annotation.memberValuePairs()",n/a,4,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Annotation.printExpression(int,StringBuffer)",2,64,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.Annotation.resolveType(BlockScope)",27,55,n/a,127,5,1,113,40
"org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(ASTVisitor,BlockScope)",n/a,200,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(ASTVisitor,CompilationUnitScope)",n/a,5,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.AnnotationMethodDeclaration(CompilationResult)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.generateCode(ClassFile)",3,2,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.isAnnotationMethod()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.isMethod()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",0,4,n/a,4,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.print(int,StringBuffer)",21,5,n/a,37,2,2,37,11
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.resolveStatements()",21,4,n/a,49,3,0,38,13
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.traverse(ASTVisitor,ClassScope)",5,8,n/a,18,2,2,12,6
"org.eclipse.jdt.internal.compiler.ast.Argument.Argument(char[],long,TypeReference,int)",1,9,n/a,7,0,4,5,1
"org.eclipse.jdt.internal.compiler.ast.Argument.bind(MethodScope,TypeBinding,boolean)",12,3,n/a,32,4,3,20,11
"org.eclipse.jdt.internal.compiler.ast.Argument.getKind()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.isVarArgs()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.print(int,StringBuffer)",7,26,n/a,11,1,2,8,3
"org.eclipse.jdt.internal.compiler.ast.Argument.printStatement(int,StringBuffer)",2,13,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.resolveForCatch(BlockScope)",22,1,n/a,33,2,1,24,10
"org.eclipse.jdt.internal.compiler.ast.Argument.traverse(ASTVisitor,BlockScope)",4,52,n/a,9,1,2,6,4
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.ArrayAllocationExpression()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,70,n/a,15,2,3,9,4
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.generateCode(BlockScope,CodeStream,boolean)",8,206,n/a,33,1,3,18,6
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.printExpression(int,StringBuffer)",7,62,n/a,15,2,2,13,4
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.resolveType(BlockScope)",18,54,n/a,58,3,1,35,18
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.traverse(ASTVisitor,BlockScope)",5,195,n/a,13,2,2,11,5
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.ArrayInitializer()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.analyseCode(BlockScope,FlowContext,FlowInfo)",2,71,n/a,8,2,3,6,3
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(BlockScope,CodeStream,boolean)",27,207,n/a,67,5,3,53,17
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.printExpression(int,StringBuffer)",6,63,n/a,17,3,2,15,5
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.resolveTypeExpecting(BlockScope,TypeBinding)",26,17,n/a,71,4,2,48,22
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.traverse(ASTVisitor,BlockScope)",3,197,n/a,10,2,2,8,4
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.ArrayQualifiedTypeReference(char[][],int,long[])",1,8,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.dimensions()",0,13,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.getParameterizedTypeName()",2,19,n/a,17,1,0,13,2
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.getTypeBinding(Scope)",6,5,n/a,14,1,1,9,4
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.printExpression(int,StringBuffer)",4,63,n/a,14,2,2,12,4
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",2,251,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",2,26,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.ArrayReference(Expression,Expression)",0,4,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",6,2,n/a,17,1,5,3,2
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.analyseCode(BlockScope,FlowContext,FlowInfo)",3,72,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",7,1,n/a,17,1,4,8,4
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generateCode(BlockScope,CodeStream,boolean)",9,206,n/a,28,2,3,12,6
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",13,1,n/a,34,2,6,16,5
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",12,1,n/a,29,2,4,14,6
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.printExpression(int,StringBuffer)",4,62,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.resolveType(BlockScope)",9,54,n/a,21,2,1,13,6
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.traverse(ASTVisitor,BlockScope)",4,195,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.ArrayTypeReference(char[],int,long)",1,17,n/a,11,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.dimensions()",0,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.getParameterizedTypeName()",1,19,n/a,13,1,0,9,2
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.getTypeBinding(Scope)",4,5,n/a,8,1,1,6,3
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.printExpression(int,StringBuffer)",4,63,n/a,14,2,2,12,4
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ASTVisitor,BlockScope)",2,251,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ASTVisitor,ClassScope)",2,26,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.AssertStatement(Expression,Expression,int)",0,1,n/a,9,0,3,4,1
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.AssertStatement(Expression,int)",0,1,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",16,13,n/a,34,2,3,17,8
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.generateCode(BlockScope,CodeStream)",16,13,n/a,29,2,2,21,5
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",10,1,n/a,22,2,2,18,7
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.printStatement(int,StringBuffer)",6,13,n/a,10,1,2,7,2
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.resolve(BlockScope)",4,13,n/a,25,3,1,20,6
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.traverse(ASTVisitor,BlockScope)",4,45,n/a,9,2,2,5,3
"org.eclipse.jdt.internal.compiler.ast.Assignment.Assignment(Expression,Expression,int)",0,4,n/a,9,0,3,5,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.analyseCode(BlockScope,FlowContext,FlowInfo)",7,70,n/a,27,2,3,14,6
"org.eclipse.jdt.internal.compiler.ast.Assignment.checkAssignment(BlockScope,TypeBinding,TypeBinding)",12,2,n/a,11,1,3,7,11
"org.eclipse.jdt.internal.compiler.ast.Assignment.checkAssignmentEffect(BlockScope)",5,1,n/a,7,1,1,4,3
"org.eclipse.jdt.internal.compiler.ast.Assignment.generateCode(BlockScope,CodeStream,boolean)",3,206,n/a,19,2,3,6,3
"org.eclipse.jdt.internal.compiler.ast.Assignment.getDirectBinding(Expression)",1,2,n/a,11,2,1,7,5
"org.eclipse.jdt.internal.compiler.ast.Assignment.getLastField(Expression)",0,1,n/a,17,2,1,11,7
"org.eclipse.jdt.internal.compiler.ast.Assignment.nullStatus(FlowInfo)",1,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.print(int,StringBuffer)",2,74,n/a,5,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.printExpression(int,StringBuffer)",3,62,n/a,5,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.printExpressionNoParenthesis(int,StringBuffer)",3,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.printStatement(int,StringBuffer)",2,13,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.resolveType(BlockScope)",19,54,n/a,31,1,1,21,11
"org.eclipse.jdt.internal.compiler.ast.Assignment.resolveTypeExpecting(BlockScope,TypeBinding)",4,15,n/a,19,1,2,9,5
"org.eclipse.jdt.internal.compiler.ast.Assignment.traverse(ASTVisitor,BlockScope)",4,195,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.BinaryExpression(Expression,Expression,int)",0,16,n/a,7,0,3,5,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",4,70,n/a,11,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.computeConstant(BlockScope,int,int)",2,1,n/a,26,2,3,6,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateCode(BlockScope,CodeStream,boolean)",236,206,n/a,525,5,3,375,145
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",10,61,n/a,84,1,5,26,10
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedGreaterThan(BlockScope,CodeStream,Label,Label,boolean)",28,2,n/a,112,5,5,62,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedGreaterThanOrEqual(BlockScope,CodeStream,Label,Label,boolean)",28,2,n/a,112,5,5,62,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLessThan(BlockScope,CodeStream,Label,Label,boolean)",28,2,n/a,108,5,5,62,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLessThanOrEqual(BlockScope,CodeStream,Label,Label,boolean)",28,2,n/a,112,5,5,62,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLogicalAnd(BlockScope,CodeStream,Label,Label,boolean)",30,2,n/a,136,6,5,47,19
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLogicalOr(BlockScope,CodeStream,Label,Label,boolean)",30,2,n/a,134,6,5,47,19
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLogicalXor(BlockScope,CodeStream,Label,Label,boolean)",20,2,n/a,108,4,5,31,13
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedStringConcatenation(BlockScope,CodeStream,int)",7,5,n/a,31,2,3,11,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedStringConcatenationCreation(BlockScope,CodeStream,int)",10,3,n/a,34,2,3,13,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.isCompactableOperation()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.optimizedBooleanConstant()",0,35,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.optimizedBooleanConstant(int,int,int)",10,1,n/a,47,4,3,31,19
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.printExpressionNoParenthesis(int,StringBuffer)",6,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType(BlockScope)",24,54,n/a,109,3,1,81,38
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.traverse(ASTVisitor,BlockScope)",4,195,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.Block.Block(int)",0,21,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.Block.analyseCode(BlockScope,FlowContext,FlowInfo)",2,18,n/a,17,2,3,11,4
"org.eclipse.jdt.internal.compiler.ast.Block.branchChainTo(Label)",1,2,n/a,8,1,1,2,2
"org.eclipse.jdt.internal.compiler.ast.Block.generateCode(BlockScope,CodeStream)",3,23,n/a,18,2,2,11,5
"org.eclipse.jdt.internal.compiler.ast.Block.isEmptyBlock()",0,13,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Block.printBody(int,StringBuffer)",2,2,n/a,8,1,2,8,3
"org.eclipse.jdt.internal.compiler.ast.Block.printStatement(int,StringBuffer)",5,18,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.compiler.ast.Block.resolve(BlockScope)",4,14,n/a,14,2,1,8,5
"org.eclipse.jdt.internal.compiler.ast.Block.resolveUsing(BlockScope)",3,4,n/a,12,2,1,8,4
"org.eclipse.jdt.internal.compiler.ast.Block.traverse(ASTVisitor,BlockScope)",3,56,n/a,11,2,2,7,4
"org.eclipse.jdt.internal.compiler.ast.BranchStatement.BranchStatement(char[],int,int)",0,2,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.BranchStatement.generateCode(BlockScope,CodeStream)",8,13,n/a,28,3,2,17,5
"org.eclipse.jdt.internal.compiler.ast.BranchStatement.resolve(BlockScope)",0,13,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.BreakStatement(char[],int,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",15,13,n/a,50,3,3,29,11
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.printStatement(int,StringBuffer)",4,13,n/a,5,0,2,4,2
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.traverse(ASTVisitor,BlockScope)",2,45,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.CaseStatement(Expression,int,int)",0,2,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",3,13,n/a,12,2,3,5,4
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.generateCode(BlockScope,CodeStream)",2,13,n/a,12,1,2,5,2
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.printStatement(int,StringBuffer)",6,13,n/a,10,1,2,6,2
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.resolve(BlockScope)",0,13,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.resolveCase(BlockScope,TypeBinding,SwitchStatement)",14,2,n/a,42,4,3,23,12
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.traverse(ASTVisitor,BlockScope)",3,45,n/a,8,1,2,4,3
"org.eclipse.jdt.internal.compiler.ast.CastExpression.CastExpression(Expression,Expression)",0,10,n/a,15,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,70,n/a,8,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkAlternateBinding(BlockScope,Expression,TypeBinding,MethodBinding,Expression[],TypeBinding[],TypeBinding[],InvocationSite)",10,1,n/a,1,3,8,16,6
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCast(BlockScope,int,int,Expression,int)",5,1,n/a,32,2,5,14,7
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCasts(BlockScope,Expression,TypeBinding,MethodBinding,Expression[],TypeBinding[],InvocationSite)",7,2,n/a,37,4,7,23,11
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCasts(BlockScope,int,int,Expression,int,boolean,Expression,int,boolean)",14,2,n/a,62,3,9,42,23
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForEnclosingInstanceCast(BlockScope,Expression,TypeBinding,TypeBinding)",10,1,n/a,20,2,4,14,8
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkUnsafeCast(Scope,TypeBinding,TypeBinding,TypeBinding,boolean)",15,6,n/a,25,3,5,18,14
"org.eclipse.jdt.internal.compiler.ast.CastExpression.generateCode(BlockScope,CodeStream,boolean)",10,206,n/a,42,3,3,20,10
"org.eclipse.jdt.internal.compiler.ast.CastExpression.innermostCastedExpression()",0,7,n/a,7,1,0,4,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.localVariableBinding()",1,10,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.nullStatus(FlowInfo)",1,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.printExpression(int,StringBuffer)",4,62,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.reportIllegalCast(Scope,TypeBinding,TypeBinding)",2,11,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.resolveType(BlockScope)",11,54,n/a,30,4,1,19,10
"org.eclipse.jdt.internal.compiler.ast.CastExpression.setExpectedType(TypeBinding)",0,9,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.tagAsNeedCheckCast()",0,9,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.tagAsUnnecessaryCast(Scope,TypeBinding)",0,12,n/a,7,0,2,3,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.traverse(ASTVisitor,BlockScope)",4,195,n/a,9,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.usedForGenericMethodReturnTypeInference()",0,1,n/a,17,2,0,8,6
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.CharLiteral(char[],int,int)",2,1,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.computeConstant()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.computeValue()",4,1,n/a,46,2,0,38,13
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,14,1,3,4,2
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.literalType(BlockScope)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.ClassLiteralAccess(int,TypeReference)",0,5,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.analyseCode(BlockScope,FlowContext,FlowInfo)",6,70,n/a,15,1,3,4,4
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,18,1,3,4,2
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.printExpression(int,StringBuffer)",2,62,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.resolveType(BlockScope)",11,55,n/a,20,1,1,13,6
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.traverse(ASTVisitor,BlockScope)",3,195,n/a,8,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.Clinit.Clinit(CompilationResult)",1,1,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.analyseCode(ClassScope,InitializationFlowContext,FlowInfo)",14,3,n/a,39,3,3,15,7
"org.eclipse.jdt.internal.compiler.ast.Clinit.generateCode(ClassScope,ClassFile)",2,2,n/a,42,3,2,16,5
"org.eclipse.jdt.internal.compiler.ast.Clinit.generateCode(ClassScope,ClassFile,int)",39,2,n/a,116,5,3,76,20
"org.eclipse.jdt.internal.compiler.ast.Clinit.isClinit()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.isInitializationMethod()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.isStatic()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.parseStatements(Parser,CompilationUnitDeclaration)",0,4,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.print(int,StringBuffer)",3,5,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.resolve(ClassScope)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.setAssertionSupport(FieldBinding,boolean)",3,1,n/a,10,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.Clinit.traverse(ASTVisitor,ClassScope)",2,7,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.CompilationUnitDeclaration(ProblemReporter,CompilationResult,int)",0,14,n/a,10,0,3,4,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.abort(int,IProblem)",3,1,n/a,13,1,2,7,4
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode()",2,3,n/a,19,3,0,11,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.checkUnusedImports()",2,1,n/a,11,3,0,8,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.cleanUp()",2,8,n/a,25,2,0,18,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.cleanUp(TypeDeclaration)",1,2,n/a,11,2,1,7,4
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.compilationResult()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.declarationOfType(char[][])",1,0,n/a,15,2,1,7,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode()",2,3,n/a,23,3,0,14,7
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.getFileName()",1,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.getMainTypeName()",7,1,n/a,14,1,0,10,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.hasErrors()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.isEmpty()",0,2,n/a,3,0,0,1,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.print(int,StringBuffer)",10,4,n/a,17,2,2,15,6
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.propagateInnerEmulationForAllLocalTypes()",2,1,n/a,13,2,0,7,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.record(LocalTypeBinding)",1,2,n/a,12,1,1,5,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve()",7,10,n/a,19,3,0,13,8
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.tagAsHavingErrors()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(ASTVisitor,CompilationUnitScope)",5,6,n/a,28,4,2,19,9
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.CompoundAssignment(Expression,Expression,int,int)",1,4,n/a,8,0,4,4,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.analyseCode(BlockScope,FlowContext,FlowInfo)",2,70,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.generateCode(BlockScope,CodeStream,boolean)",3,206,n/a,11,1,3,5,2
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.nullStatus(FlowInfo)",0,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.operatorToString()",0,3,n/a,27,1,0,24,12
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.printExpressionNoParenthesis(int,StringBuffer)",6,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.resolveType(BlockScope)",25,54,n/a,72,3,1,48,28
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.restrainUsageToNumericTypes()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.traverse(ASTVisitor,BlockScope)",4,195,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.ConditionalExpression(Expression,Expression,Expression)",0,2,n/a,10,0,3,5,1
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",45,70,n/a,55,1,3,42,19
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(BlockScope,CodeStream,boolean)",24,206,n/a,79,3,3,37,20
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",22,58,n/a,66,2,5,29,17
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.optimizedBooleanConstant()",0,35,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.printExpressionNoParenthesis(int,StringBuffer)",5,1,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.resolveType(BlockScope)",57,54,n/a,139,3,1,81,53
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.traverse(ASTVisitor,BlockScope)",5,195,n/a,8,1,2,5,2
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.ConstructorDeclaration(CompilationResult)",1,8,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.analyseCode(ClassScope,InitializationFlowContext,FlowInfo)",31,3,n/a,96,5,3,54,27
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateCode(ClassScope,ClassFile)",14,2,n/a,48,3,2,29,6
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateSyntheticFieldInitializationsIfNecessary(MethodScope,CodeStream,ReferenceBinding)",9,2,n/a,25,2,3,21,8
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.internalGenerateCode(ClassScope,ClassFile)",28,2,n/a,87,5,2,62,22
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isConstructor()",0,21,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isDefaultConstructor()",0,17,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isInitializationMethod()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isRecursive(ArrayList)",9,2,n/a,25,1,1,12,9
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",2,4,n/a,12,1,2,8,4
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.printBody(int,StringBuffer)",8,3,n/a,16,2,2,13,5
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveJavadoc()",3,2,n/a,7,1,0,4,4
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveStatements()",13,3,n/a,30,3,0,13,10
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.traverse(ASTVisitor,ClassScope)",8,8,n/a,35,3,2,34,13
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.typeParameters()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.ContinueStatement(char[],int,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",17,13,n/a,54,3,3,32,12
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.printStatement(int,StringBuffer)",4,13,n/a,5,0,2,4,2
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.traverse(ASTVisitor,BlockScope)",2,45,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.DoStatement.DoStatement(Expression,Statement,int,int)",0,1,n/a,8,0,4,6,2
"org.eclipse.jdt.internal.compiler.ast.DoStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",24,13,n/a,53,2,3,21,11
"org.eclipse.jdt.internal.compiler.ast.DoStatement.generateCode(BlockScope,CodeStream)",11,13,n/a,38,1,2,18,6
"org.eclipse.jdt.internal.compiler.ast.DoStatement.printStatement(int,StringBuffer)",9,13,n/a,11,1,2,7,2
"org.eclipse.jdt.internal.compiler.ast.DoStatement.resolve(BlockScope)",3,13,n/a,6,0,1,4,2
"org.eclipse.jdt.internal.compiler.ast.DoStatement.traverse(ASTVisitor,BlockScope)",4,45,n/a,9,2,2,5,3
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.DoubleLiteral(char[],int,int)",1,1,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.computeConstant()",7,1,n/a,67,4,0,45,14
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,14,1,3,4,2
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.literalType(BlockScope)",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.EmptyStatement(int,int)",0,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",0,13,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.complainIfUnreachable(FlowInfo,BlockScope,boolean)",2,10,n/a,8,1,3,3,2
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.generateCode(BlockScope,CodeStream)",0,13,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.printStatement(int,StringBuffer)",2,13,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.resolve(BlockScope)",4,13,n/a,7,1,1,3,2
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.traverse(ASTVisitor,BlockScope)",2,45,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.EqualExpression(Expression,Expression,int)",1,3,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",29,70,n/a,47,3,3,19,14
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.checkNullComparison(BlockScope,FlowContext,FlowInfo,FlowInfo,FlowInfo)",6,1,n/a,10,1,5,6,3
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.checkVariableComparison(BlockScope,FlowContext,FlowInfo,FlowInfo,FlowInfo,LocalVariableBinding,int,Expression)",7,2,n/a,20,2,8,14,5
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.computeConstant(TypeBinding,TypeBinding)",3,2,n/a,15,1,2,5,4
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateCode(BlockScope,CodeStream,boolean)",16,206,n/a,46,3,3,23,6
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",5,62,n/a,23,2,5,10,5
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateOptimizedBooleanEqual(BlockScope,CodeStream,Label,Label,boolean)",9,2,n/a,38,3,5,17,11
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateOptimizedNonBooleanEqual(BlockScope,CodeStream,Label,Label,boolean)",40,2,n/a,171,6,5,96,45
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.isCompactableOperation()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.resolveType(BlockScope)",25,54,n/a,92,4,1,62,34
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.traverse(ASTVisitor,BlockScope)",4,195,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.ExplicitConstructorCall(int)",0,7,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.analyseCode(BlockScope,FlowContext,FlowInfo)",8,14,n/a,41,3,3,16,6
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.generateCode(BlockScope,CodeStream)",14,14,n/a,55,3,2,24,9
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.isImplicitSuper()",0,7,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.isSuperAccess()",0,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.isTypeAccess()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",8,1,n/a,21,2,2,7,5
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",9,1,n/a,16,2,2,8,5
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.printStatement(int,StringBuffer)",13,14,n/a,26,2,2,24,8
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.resolve(BlockScope)",32,18,n/a,98,4,1,64,26
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.setActualReceiverType(ReferenceBinding)",0,5,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.setDepth(int)",0,9,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.setFieldIndex(int)",0,6,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.traverse(ASTVisitor,BlockScope)",5,49,n/a,17,3,2,14,7
"org.eclipse.jdt.internal.compiler.ast.Expression.Expression()",1,13,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.analyseCode(BlockScope,FlowContext,FlowInfo)",0,70,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",1,4,n/a,3,0,4,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.checkCastTypesCompatibility(BlockScope,TypeBinding,TypeBinding,Expression)",71,8,n/a,193,5,4,118,53
"org.eclipse.jdt.internal.compiler.ast.Expression.checkNullComparison(BlockScope,FlowContext,FlowInfo,FlowInfo,FlowInfo)",0,1,n/a,3,0,5,0,1
"org.eclipse.jdt.internal.compiler.ast.Expression.checkNullStatus(BlockScope,FlowContext,FlowInfo,int)",5,6,n/a,18,2,4,14,5
"org.eclipse.jdt.internal.compiler.ast.Expression.checkUnsafeCast(Scope,TypeBinding,TypeBinding,TypeBinding,boolean)",6,6,n/a,14,2,5,11,8
"org.eclipse.jdt.internal.compiler.ast.Expression.computeConversion(Scope,TypeBinding,TypeBinding)",7,67,n/a,44,2,3,28,12
"org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(BlockScope,CodeStream)",1,13,n/a,13,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(BlockScope,CodeStream,boolean)",4,206,n/a,21,1,3,5,2
"org.eclipse.jdt.internal.compiler.ast.Expression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",9,58,n/a,62,5,5,22,14
"org.eclipse.jdt.internal.compiler.ast.Expression.generateOptimizedStringConcatenation(BlockScope,CodeStream,int)",4,5,n/a,15,1,3,4,4
"org.eclipse.jdt.internal.compiler.ast.Expression.generateOptimizedStringConcatenationCreation(BlockScope,CodeStream,int)",16,3,n/a,39,3,3,21,6
"org.eclipse.jdt.internal.compiler.ast.Expression.getAllInheritedMethods(ReferenceBinding)",4,2,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.ast.Expression.getAllInheritedMethods0(ReferenceBinding,ArrayList)",5,2,n/a,11,1,2,12,4
"org.eclipse.jdt.internal.compiler.ast.Expression.isCompactableOperation()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.isConstantValueOfTypeAssignableToType(TypeBinding,TypeBinding)",5,11,n/a,20,2,2,8,8
"org.eclipse.jdt.internal.compiler.ast.Expression.isConstantValueRepresentable(Constant,int,int)",84,1,n/a,146,2,3,131,66
"org.eclipse.jdt.internal.compiler.ast.Expression.isTypeReference()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.localVariableBinding()",0,10,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.nullStatus(FlowInfo)",3,6,n/a,13,1,1,10,6
"org.eclipse.jdt.internal.compiler.ast.Expression.optimizedBooleanConstant()",0,35,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.print(int,StringBuffer)",2,73,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.Expression.printExpression(int,StringBuffer)",n/a,62,68,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Expression.printStatement(int,StringBuffer)",2,13,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.reportIllegalCast(Scope,TypeBinding,TypeBinding)",0,10,n/a,3,0,3,0,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolve(BlockScope)",1,15,n/a,5,0,1,2,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveType(BlockScope)",0,54,n/a,4,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveType(ClassScope)",0,5,n/a,4,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveTypeExpecting(BlockScope,TypeBinding)",7,15,n/a,17,2,2,12,5
"org.eclipse.jdt.internal.compiler.ast.Expression.setExpectedType(TypeBinding)",0,9,n/a,8,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.Expression.tagAsNeedCheckCast()",0,9,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.ast.Expression.tagAsUnnecessaryCast(Scope,TypeBinding)",0,10,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.Expression.toTypeReference()",0,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.traverse(ASTVisitor,BlockScope)",0,195,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.Expression.traverse(ASTVisitor,ClassScope)",0,4,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.Expression.traverse(ASTVisitor,CompilationUnitScope)",0,4,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.ExtendedStringLiteral(StringLiteral,CharLiteral)",2,1,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.ExtendedStringLiteral(StringLiteral,StringLiteral)",2,1,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.extendWith(CharLiteral)",1,3,n/a,12,0,1,5,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.extendWith(StringLiteral)",2,3,n/a,17,0,1,5,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.printExpression(int,StringBuffer)",3,63,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.FalseLiteral(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.computeConstant()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,14,1,3,4,2
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",2,58,n/a,13,3,5,6,4
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.literalType(BlockScope)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.source()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.FieldDeclaration()",0,7,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.FieldDeclaration(char[],int,int)",0,3,n/a,11,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.analyseCode(MethodScope,FlowContext,FlowInfo)",21,2,n/a,41,2,3,18,18
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.generateCode(BlockScope,CodeStream)",7,17,n/a,31,2,2,12,7
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.getKind()",0,33,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.isStatic()",1,12,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(MethodScope)",45,3,n/a,97,6,1,55,34
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.traverse(ASTVisitor,MethodScope)",5,10,n/a,15,2,2,12,6
"org.eclipse.jdt.internal.compiler.ast.FieldReference.FieldReference(char[],long)",0,5,n/a,8,0,2,5,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",24,2,n/a,53,3,5,16,15
"org.eclipse.jdt.internal.compiler.ast.FieldReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,70,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",4,5,n/a,13,1,4,7,3
"org.eclipse.jdt.internal.compiler.ast.FieldReference.computeConversion(Scope,TypeBinding,TypeBinding)",4,67,n/a,18,3,3,8,8
"org.eclipse.jdt.internal.compiler.ast.FieldReference.fieldBinding()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",5,1,n/a,20,1,4,5,3
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generateCode(BlockScope,CodeStream,boolean)",17,206,n/a,52,6,3,26,12
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",14,1,n/a,51,2,6,20,9
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",15,1,n/a,49,3,4,22,13
"org.eclipse.jdt.internal.compiler.ast.FieldReference.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.getConstantFor(FieldBinding,Reference,boolean,Scope)",8,12,n/a,48,2,4,18,11
"org.eclipse.jdt.internal.compiler.ast.FieldReference.isSuperAccess()",1,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.isTypeAccess()",1,1,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.ast.FieldReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",26,3,n/a,58,2,3,28,22
"org.eclipse.jdt.internal.compiler.ast.FieldReference.printExpression(int,StringBuffer)",3,64,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.resolveType(BlockScope)",18,55,n/a,50,2,1,29,14
"org.eclipse.jdt.internal.compiler.ast.FieldReference.setActualReceiverType(ReferenceBinding)",0,5,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.setDepth(int)",0,9,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.compiler.ast.FieldReference.setFieldIndex(int)",0,6,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.traverse(ASTVisitor,BlockScope)",3,195,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.FloatLiteral(char[],int,int)",1,1,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.computeConstant()",7,1,n/a,67,4,0,45,14
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,14,1,3,4,2
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.literalType(BlockScope)",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ForStatement.ForStatement(Statement[],Expression,Statement[],Statement,boolean,int,int)",0,1,n/a,18,0,7,9,2
"org.eclipse.jdt.internal.compiler.ast.ForStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",49,13,n/a,101,3,3,60,30
"org.eclipse.jdt.internal.compiler.ast.ForStatement.generateCode(BlockScope,CodeStream)",22,13,n/a,78,3,2,43,21
"org.eclipse.jdt.internal.compiler.ast.ForStatement.printStatement(int,StringBuffer)",14,13,n/a,31,2,2,25,9
"org.eclipse.jdt.internal.compiler.ast.ForStatement.resolve(BlockScope)",6,13,n/a,16,1,1,16,8
"org.eclipse.jdt.internal.compiler.ast.ForStatement.traverse(ASTVisitor,BlockScope)",6,45,n/a,21,2,2,18,8
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.ForeachStatement(LocalDeclaration,Expression,int)",0,1,n/a,9,0,3,4,1
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",31,13,n/a,63,2,3,35,12
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.generateCode(BlockScope,CodeStream)",54,13,n/a,136,3,2,91,23
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.printStatement(int,StringBuffer)",9,13,n/a,14,1,2,9,2
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.resolve(BlockScope)",50,13,n/a,97,6,1,68,24
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.traverse(ASTVisitor,BlockScope)",5,45,n/a,12,2,2,6,3
"org.eclipse.jdt.internal.compiler.ast.IfStatement.IfStatement(Expression,Statement,Statement,int,int)",0,1,n/a,10,0,5,9,3
"org.eclipse.jdt.internal.compiler.ast.IfStatement.IfStatement(Expression,Statement,int,int)",0,1,n/a,8,0,4,6,2
"org.eclipse.jdt.internal.compiler.ast.IfStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",25,13,n/a,56,2,3,25,12
"org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode(BlockScope,CodeStream)",24,13,n/a,83,2,2,33,16
"org.eclipse.jdt.internal.compiler.ast.IfStatement.printStatement(int,StringBuffer)",9,13,n/a,12,1,2,9,2
"org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(BlockScope)",4,13,n/a,8,0,1,6,3
"org.eclipse.jdt.internal.compiler.ast.IfStatement.traverse(ASTVisitor,BlockScope)",5,45,n/a,12,1,2,7,4
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.ImplicitDocTypeReference(char[],int)",1,2,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.copyDims(int)",0,6,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.getTypeBinding(Scope)",1,3,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.getTypeName()",0,26,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.isThis()",0,18,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.printExpression(int,StringBuffer)",1,62,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.traverse(ASTVisitor,BlockScope)",0,251,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference.traverse(ASTVisitor,ClassScope)",0,26,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.ImportReference(char[][],long[],boolean,int)",0,14,n/a,12,0,4,6,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.getImportName()",0,10,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.isStatic()",0,21,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.print(int,StringBuffer)",1,4,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.print(int,StringBuffer,boolean)",3,2,n/a,11,1,3,9,5
"org.eclipse.jdt.internal.compiler.ast.ImportReference.traverse(ASTVisitor,CompilationUnitScope)",3,3,n/a,9,1,2,8,3
"org.eclipse.jdt.internal.compiler.ast.Initializer.Initializer(Block,int)",0,7,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.analyseCode(MethodScope,FlowContext,FlowInfo)",1,2,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.generateCode(BlockScope,CodeStream)",2,17,n/a,15,1,2,5,2
"org.eclipse.jdt.internal.compiler.ast.Initializer.getKind()",0,33,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.isStatic()",0,15,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements(Parser,TypeDeclaration,CompilationUnitDeclaration)",1,3,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.printStatement(int,StringBuffer)",8,13,n/a,13,1,2,10,3
"org.eclipse.jdt.internal.compiler.ast.Initializer.resolve(MethodScope)",7,3,n/a,19,2,1,12,4
"org.eclipse.jdt.internal.compiler.ast.Initializer.traverse(ASTVisitor,MethodScope)",3,14,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.InstanceOfExpression(Expression,TypeReference,int)",0,2,n/a,10,0,3,5,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",3,70,n/a,10,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.generateCode(BlockScope,CodeStream,boolean)",4,206,n/a,18,0,3,6,2
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.printExpressionNoParenthesis(int,StringBuffer)",3,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.reportIllegalCast(Scope,TypeBinding,TypeBinding)",2,10,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.resolveType(BlockScope)",8,54,n/a,13,1,1,9,6
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.tagAsUnnecessaryCast(Scope,TypeBinding)",2,10,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.traverse(ASTVisitor,BlockScope)",4,195,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.IntLiteral(char[],int,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.IntLiteral(char[],int,int,int)",1,2,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.IntLiteral(int)",2,0,n/a,10,0,1,3,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.computeConstant()",5,1,n/a,39,3,0,44,14
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,14,1,3,4,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.literalType(BlockScope)",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.mayRepresentMIN_VALUE()",0,1,n/a,16,0,0,1,11
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.printExpression(int,StringBuffer)",3,63,n/a,7,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.resolveType(BlockScope)",3,56,n/a,12,1,1,7,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue.IntLiteralMinValue()",1,1,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue.computeConstant()",0,1,n/a,2,0,0,0,1
"org.eclipse.jdt.internal.compiler.ast.Javadoc.Javadoc(int,int)",0,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.Javadoc.getNodeStartingAt(int)",2,4,n/a,81,7,1,60,28
"org.eclipse.jdt.internal.compiler.ast.Javadoc.print(int,StringBuffer)",24,3,n/a,36,2,2,30,10
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolve(ClassScope)",8,1,n/a,40,2,1,31,10
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolve(MethodScope)",19,2,n/a,79,7,1,42,39
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveParamTags(MethodScope,boolean)",11,1,n/a,62,5,2,48,21
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveReference(Expression,Scope)",16,2,n/a,53,3,2,32,20
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveThrowsTags(MethodScope,boolean)",19,1,n/a,96,5,2,75,41
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveTypeParameterTags(Scope,boolean)",17,2,n/a,90,6,2,71,29
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.JavadocAllocationExpression(long)",0,2,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.internalResolveType(Scope)",19,2,n/a,59,3,1,38,13
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.isSuperAccess()",0,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.resolveType(BlockScope)",1,55,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.resolveType(ClassScope)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.JavadocArgumentExpression(char[],int,int,TypeReference)",1,1,n/a,8,0,4,6,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.internalResolveType(Scope)",11,2,n/a,25,3,1,16,7
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.printExpression(int,StringBuffer)",2,62,n/a,11,2,2,5,3
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.resolve(BlockScope)",1,15,n/a,5,1,1,2,2
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.resolveType(BlockScope)",1,54,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.resolveType(ClassScope)",1,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.traverse(ASTVisitor,BlockScope)",3,195,n/a,12,2,2,4,3
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.JavadocArrayQualifiedTypeReference(JavadocQualifiedTypeReference,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.reportDeprecatedType(Scope)",3,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.reportInvalidType(Scope)",3,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",2,251,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",2,26,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.JavadocArraySingleTypeReference(char[],int,long)",1,1,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.reportDeprecatedType(Scope)",3,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.reportInvalidType(Scope)",3,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.traverse(ASTVisitor,BlockScope)",2,251,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.traverse(ASTVisitor,ClassScope)",2,26,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.JavadocFieldReference(char[],long)",1,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.internalResolveType(Scope)",24,2,n/a,59,4,1,39,17
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.isSuperAccess()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.printExpression(int,StringBuffer)",3,64,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.resolveType(BlockScope)",1,55,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.resolveType(ClassScope)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.traverse(ASTVisitor,BlockScope)",3,195,n/a,12,2,2,4,3
"org.eclipse.jdt.internal.compiler.ast.JavadocImportReference.JavadocImportReference(char[][],long[],int,int)",1,0,n/a,12,0,4,4,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.JavadocMessageSend(char[],long)",0,2,n/a,7,0,2,5,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.JavadocMessageSend(char[],long,JavadocArgumentExpression[])",1,1,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.internalResolveType(Scope)",27,2,n/a,82,3,1,52,22
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.isSuperAccess()",0,11,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.printExpression(int,StringBuffer)",7,62,n/a,13,2,2,11,5
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.resolveType(BlockScope)",1,55,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.resolveType(ClassScope)",1,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.traverse(ASTVisitor,BlockScope)",4,196,n/a,17,2,2,10,5
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.JavadocQualifiedTypeReference(char[][],long[],int,int)",1,1,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.internalResolveType(Scope,boolean)",8,2,n/a,22,2,2,13,6
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.reportDeprecatedType(Scope)",3,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.reportInvalidType(Scope)",3,7,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.resolveType(BlockScope,boolean)",1,24,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.resolveType(ClassScope)",1,11,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",2,251,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",2,26,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.JavadocReturnStatement(int,int,char[])",1,1,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.printStatement(int,StringBuffer)",4,13,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.resolve(BlockScope)",5,14,n/a,18,1,1,7,6
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.traverse(ASTVisitor,BlockScope)",2,45,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.JavadocSingleNameReference(char[],long,int,int)",1,1,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.resolve(BlockScope)",1,16,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.resolve(BlockScope,boolean)",7,2,n/a,19,2,2,9,6
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.traverse(ASTVisitor,BlockScope)",2,195,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.JavadocSingleTypeReference(char[],long,int,int)",1,2,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.internalResolveType(Scope)",8,3,n/a,20,2,1,14,6
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.reportDeprecatedType(Scope)",3,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.reportInvalidType(Scope)",3,7,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.resolveType(BlockScope,boolean)",1,24,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.resolveType(ClassScope)",1,11,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.traverse(ASTVisitor,BlockScope)",2,251,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.traverse(ASTVisitor,ClassScope)",2,26,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.LabeledStatement(char[],Statement,int,int)",0,1,n/a,11,0,4,6,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",6,13,n/a,28,1,3,6,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.concreteStatement()",0,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.generateCode(BlockScope,CodeStream)",6,13,n/a,24,2,2,10,4
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.printStatement(int,StringBuffer)",5,13,n/a,8,0,2,5,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.resolve(BlockScope)",1,13,n/a,5,1,1,2,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.traverse(ASTVisitor,BlockScope)",3,45,n/a,8,1,2,4,3
"org.eclipse.jdt.internal.compiler.ast.Literal.Literal(int,int)",0,3,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.Literal.analyseCode(BlockScope,FlowContext,FlowInfo)",0,70,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.Literal.computeConstant()",n/a,1,11,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Literal.literalType(BlockScope)",n/a,4,9,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Literal.printExpression(int,StringBuffer)",2,63,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.Literal.resolveType(BlockScope)",4,56,n/a,11,1,1,6,2
"org.eclipse.jdt.internal.compiler.ast.Literal.source()",n/a,2,7,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.LocalDeclaration(char[],int,int)",0,7,n/a,9,0,3,4,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.analyseCode(BlockScope,FlowContext,FlowInfo)",7,14,n/a,26,1,3,15,5
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.checkModifiers()",0,1,n/a,8,0,0,2,2
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.generateCode(BlockScope,CodeStream)",14,13,n/a,59,4,2,25,14
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.getKind()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(BlockScope)",40,19,n/a,79,5,1,47,27
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(ASTVisitor,BlockScope)",4,46,n/a,8,1,2,5,3
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.LongLiteral(char[],int,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.LongLiteral(char[],int,int,long)",1,1,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.computeConstant()",6,1,n/a,44,3,0,52,17
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,14,1,3,4,2
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.literalType(BlockScope)",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.mayRepresentMIN_VALUE()",0,1,n/a,25,0,0,1,20
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.resolveType(BlockScope)",3,56,n/a,12,1,1,7,2
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue.LongLiteralMinValue()",1,1,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue.computeConstant()",0,1,n/a,2,0,0,0,1
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral.MagicLiteral(int,int)",1,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral.isValidJavaStatement()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral.source()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.MarkerAnnotation(TypeReference,int)",0,2,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.memberValuePairs()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.traverse(ASTVisitor,BlockScope)",2,200,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.traverse(ASTVisitor,CompilationUnitScope)",2,5,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.MemberValuePair(char[],int,int,Expression)",0,4,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.print(int,StringBuffer)",3,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.resolveTypeExpecting(BlockScope,TypeBinding)",32,3,n/a,83,6,2,60,30
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.traverse(ASTVisitor,BlockScope)",3,48,n/a,8,2,2,4,3
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.traverse(ASTVisitor,CompilationUnitScope)",3,3,n/a,8,2,2,4,3
"org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode(BlockScope,FlowContext,FlowInfo)",8,70,n/a,18,2,3,15,5
"org.eclipse.jdt.internal.compiler.ast.MessageSend.computeConversion(Scope,TypeBinding,TypeBinding)",7,67,n/a,25,3,3,10,13
"org.eclipse.jdt.internal.compiler.ast.MessageSend.generateCode(BlockScope,CodeStream,boolean)",21,206,n/a,61,4,3,31,14
"org.eclipse.jdt.internal.compiler.ast.MessageSend.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isSuperAccess()",1,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isTypeAccess()",1,1,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",29,1,n/a,44,2,2,22,15
"org.eclipse.jdt.internal.compiler.ast.MessageSend.nullStatus(FlowInfo)",0,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.printExpression(int,StringBuffer)",13,62,n/a,21,2,2,21,7
"org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(BlockScope)",46,55,n/a,145,3,1,89,46
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setActualReceiverType(ReferenceBinding)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setDepth(int)",0,9,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setExpectedType(TypeBinding)",0,9,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setFieldIndex(int)",0,6,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(ASTVisitor,BlockScope)",5,196,n/a,16,3,2,14,6
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.MethodDeclaration(CompilationResult)",1,11,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(ClassScope,InitializationFlowContext,FlowInfo)",18,3,n/a,61,4,3,34,20
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.isMethod()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",1,4,n/a,6,0,2,3,2
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.printReturnType(int,StringBuffer)",2,3,n/a,4,0,2,3,2
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements()",13,4,n/a,36,2,0,20,16
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(ASTVisitor,ClassScope)",8,8,n/a,35,3,2,34,13
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.typeParameters()",0,9,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.NameReference()",1,2,n/a,11,0,0,2,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.fieldBinding()",0,6,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.isSuperAccess()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.isTypeAccess()",0,1,n/a,4,0,0,1,2
"org.eclipse.jdt.internal.compiler.ast.NameReference.isTypeReference()",0,7,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.setActualReceiverType(ReferenceBinding)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.setDepth(int)",0,11,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.compiler.ast.NameReference.setFieldIndex(int)",0,6,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.unboundReferenceErrorName()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.NormalAnnotation(TypeReference,int)",0,2,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.memberValuePairs()",0,4,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.printExpression(int,StringBuffer)",5,64,n/a,14,3,2,11,4
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.traverse(ASTVisitor,BlockScope)",3,200,n/a,10,2,2,8,4
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.traverse(ASTVisitor,CompilationUnitScope)",3,5,n/a,10,2,2,8,4
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.NullLiteral(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.computeConstant()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,13,0,3,4,2
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.literalType(BlockScope)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.nullStatus(FlowInfo)",0,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.source()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.NumberLiteral(char[],int,int)",1,6,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.NumberLiteral(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.isValidJavaStatement()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.source()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.OR_OR_Expression(Expression,Expression,int)",1,3,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.analyseCode(BlockScope,FlowContext,FlowInfo)",30,70,n/a,39,1,3,20,5
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.generateCode(BlockScope,CodeStream,boolean)",40,206,n/a,97,4,3,61,21
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",25,61,n/a,78,5,5,47,25
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.isCompactableOperation()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.traverse(ASTVisitor,BlockScope)",4,195,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.OperatorExpression()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.classInitialize()",18,1,n/a,20,0,0,18,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.generateTableTestCase()",19,0,n/a,23,3,0,115,49
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_AND()",0,3,n/a,177,0,0,28,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_AND_AND()",0,2,n/a,177,0,0,3,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_DIVIDE()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_EQUAL_EQUAL()",0,1,n/a,186,0,0,61,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_GREATER()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_GREATER_EQUAL()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_LEFT_SHIFT()",0,3,n/a,177,0,0,27,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_LESS()",0,4,n/a,177,0,0,51,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_LESS_EQUAL()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_MINUS()",2,4,n/a,34,0,0,27,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_MULTIPLY()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_OR()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_OR_OR()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_PLUS()",0,2,n/a,177,0,0,72,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_REMAINDER()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_RIGHT_SHIFT()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_UNSIGNED_RIGHT_SHIFT()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_XOR()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.nullStatus(FlowInfo)",0,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.operatorToString()",0,6,n/a,51,1,0,48,24
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.printExpression(int,StringBuffer)",3,62,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.printExpressionNoParenthesis(int,StringBuffer)",n/a,1,4,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.ParameterizedQualifiedTypeReference(char[][],TypeReference[][],int,long[])",1,5,n/a,9,0,4,2,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.checkBounds(ReferenceBinding,Scope,int)",8,2,n/a,15,2,3,13,7
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.checkBounds(Scope)",2,4,n/a,7,0,1,3,2
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.copyDims(int)",0,6,n/a,6,0,1,2,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.getParameterizedTypeName()",11,19,n/a,36,3,0,32,7
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.getTypeBinding(Scope)",0,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.internalResolveType(Scope,boolean)",59,2,n/a,111,4,2,83,47
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.printExpression(int,StringBuffer)",16,63,n/a,41,3,2,40,9
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.resolveType(BlockScope,boolean)",1,26,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.resolveType(ClassScope)",1,13,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",3,251,n/a,12,4,2,10,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",3,26,n/a,12,4,2,10,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.ParameterizedSingleTypeReference(char[],TypeReference[],int,long)",1,3,n/a,5,0,4,3,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.checkBounds(Scope)",6,4,n/a,14,2,1,13,7
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.copyDims(int)",0,6,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.getParameterizedTypeName()",11,19,n/a,26,2,0,23,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.getTypeBinding(Scope)",0,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType(Scope,ReferenceBinding,boolean)",38,3,n/a,88,3,3,69,28
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.printExpression(int,StringBuffer)",9,63,n/a,22,2,2,21,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(BlockScope,boolean)",1,25,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(ClassScope)",1,12,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",1,4,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.traverse(ASTVisitor,BlockScope)",3,251,n/a,8,2,2,6,3
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.traverse(ASTVisitor,ClassScope)",3,26,n/a,8,2,2,6,3
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.PostfixExpression(Expression,Expression,int,int)",1,1,n/a,5,0,4,3,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.generateCode(BlockScope,CodeStream,boolean)",3,206,n/a,21,1,3,5,2
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.operatorToString()",0,4,n/a,9,1,0,6,3
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.printExpressionNoParenthesis(int,StringBuffer)",4,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.restrainUsageToNumericTypes()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.traverse(ASTVisitor,BlockScope)",3,195,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.PrefixExpression(Expression,Expression,int,int)",1,3,n/a,11,0,4,3,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.operatorToString()",0,4,n/a,9,1,0,6,3
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.printExpressionNoParenthesis(int,StringBuffer)",4,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.restrainUsageToNumericTypes()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.traverse(ASTVisitor,BlockScope)",3,195,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.QualifiedAllocationExpression()",0,6,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.QualifiedAllocationExpression(TypeDeclaration)",0,8,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",8,70,n/a,38,2,3,17,7
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.enclosingInstance()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.generateCode(BlockScope,CodeStream,boolean)",17,206,n/a,53,2,3,24,8
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.isSuperAccess()",0,7,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",8,2,n/a,21,2,2,7,5
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.printExpression(int,StringBuffer)",4,65,n/a,9,1,2,6,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(BlockScope)",62,56,n/a,150,3,1,107,43
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.traverse(ASTVisitor,BlockScope)",7,195,n/a,21,3,2,19,9
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.QualifiedNameReference(char[][],long[],int,int)",1,7,n/a,11,0,4,5,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",36,2,n/a,127,3,5,61,36
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,70,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",15,5,n/a,55,3,4,29,19
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.checkFieldAccess(BlockScope)",7,0,n/a,18,1,1,8,7
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.computeConversion(Scope,TypeBinding,TypeBinding)",5,67,n/a,27,3,3,14,12
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",4,1,n/a,13,1,4,5,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateCode(BlockScope,CodeStream,boolean)",21,206,n/a,51,6,3,28,14
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",14,1,n/a,49,2,6,20,7
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",16,1,n/a,50,3,4,22,11
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateReadSequence(BlockScope,CodeStream)",29,4,n/a,86,7,2,55,26
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateReceiver(CodeStream)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getCodegenBinding(int)",0,3,n/a,8,1,1,3,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getGenericCast(int)",0,1,n/a,9,1,1,5,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getOtherFieldBindings(BlockScope)",30,3,n/a,92,4,1,55,23
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",2,2,n/a,10,1,2,6,5
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.manageSyntheticAccessIfNecessary(BlockScope,FieldBinding,TypeBinding,int,FlowInfo)",32,6,n/a,57,2,5,22,31
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.printExpression(int,StringBuffer)",2,62,n/a,7,1,2,7,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.reportError(BlockScope)",6,9,n/a,13,1,1,6,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType(BlockScope)",27,54,n/a,59,5,1,34,20
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setCodegenBinding(int,FieldBinding)",1,2,n/a,12,2,2,6,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setFieldIndex(int)",0,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setGenericCast(int,TypeBinding)",0,2,n/a,11,2,2,5,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setSyntheticAccessor(FieldBinding,int,SyntheticMethodBinding)",0,2,n/a,11,2,3,5,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.unboundReferenceErrorName()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.QualifiedSuperReference(TypeReference,int,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.isSuper()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.isThis()",0,18,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.printExpression(int,StringBuffer)",2,63,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.resolveType(BlockScope)",6,57,n/a,14,1,1,10,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.traverse(ASTVisitor,BlockScope)",3,195,n/a,8,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.QualifiedThisReference(TypeReference,int,int)",1,2,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.analyseCode(BlockScope,FlowContext,FlowInfo)",0,70,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",0,4,n/a,7,0,4,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.generateCode(BlockScope,CodeStream,boolean)",4,206,n/a,24,2,3,7,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.printExpression(int,StringBuffer)",2,62,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.resolveType(BlockScope)",9,56,n/a,30,1,1,20,8
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.traverse(ASTVisitor,BlockScope)",3,195,n/a,8,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.QualifiedTypeReference(char[][],long[])",0,13,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.copyDims(int)",1,6,n/a,5,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.findNextTypeBinding(int,Scope,PackageBinding)",7,2,n/a,20,3,3,10,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(Scope)",12,4,n/a,28,2,1,23,14
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeName()",0,28,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.printExpression(int,StringBuffer)",2,63,n/a,7,1,2,7,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.traverse(ASTVisitor,BlockScope)",2,251,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.traverse(ASTVisitor,ClassScope)",2,26,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.Reference.Reference()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",n/a,2,5,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Reference.analyseCode(BlockScope,FlowContext,FlowInfo)",0,70,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.fieldBinding()",0,0,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.fieldStore(CodeStream,FieldBinding,MethodBinding,boolean)",9,18,n/a,29,3,4,15,10
"org.eclipse.jdt.internal.compiler.ast.Reference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",n/a,1,8,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Reference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",n/a,1,7,n/a,n/a,6,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Reference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",n/a,1,8,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Reference.nullStatus(FlowInfo)",3,6,n/a,12,1,1,9,6
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.ReturnStatement(Expression,int,int)",0,5,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",11,14,n/a,62,4,3,41,20
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateCode(BlockScope,CodeStream)",14,13,n/a,41,3,2,25,10
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateReturnBytecode(CodeStream)",7,1,n/a,33,2,1,23,8
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateStoreSaveValueIfNecessary(CodeStream)",1,2,n/a,3,0,1,2,2
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.needValue()",0,1,n/a,3,0,0,1,3
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.prepareSaveValueLocation(TryStatement)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.printStatement(int,StringBuffer)",4,13,n/a,6,0,2,4,2
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.resolve(BlockScope)",22,13,n/a,45,2,1,33,16
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.traverse(ASTVisitor,BlockScope)",3,45,n/a,7,1,2,4,3
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.SingleMemberAnnotation(TypeReference,int)",0,2,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.memberValuePairs()",1,4,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.printExpression(int,StringBuffer)",4,64,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.traverse(ASTVisitor,BlockScope)",3,200,n/a,8,2,2,4,3
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.traverse(ASTVisitor,CompilationUnitScope)",3,5,n/a,8,2,2,4,3
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.SingleNameReference(char[],long)",1,14,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",36,2,n/a,77,4,5,48,25
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,70,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",11,5,n/a,31,3,4,20,11
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.checkFieldAccess(BlockScope)",14,2,n/a,27,2,1,16,10
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.computeConversion(Scope,TypeBinding,TypeBinding)",4,67,n/a,18,3,3,8,9
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",24,1,n/a,85,5,4,45,31
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCode(BlockScope,CodeStream,boolean)",20,206,n/a,57,6,3,35,15
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",1,1,n/a,16,0,6,1,2
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCompoundAssignment(BlockScope,CodeStream,MethodBinding,Expression,int,int,boolean)",32,5,n/a,107,5,7,63,29
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",30,1,n/a,74,4,4,46,22
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateReceiver(CodeStream)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.localVariableBinding()",0,10,n/a,13,1,0,6,3
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",2,2,n/a,8,1,2,6,5
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",20,4,n/a,40,2,3,16,18
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.printExpression(int,StringBuffer)",1,64,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.reportError(BlockScope)",6,4,n/a,12,1,1,7,3
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.resolveType(BlockScope)",18,54,n/a,44,5,1,29,12
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.unboundReferenceErrorName()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.SingleTypeReference(char[],long)",0,23,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.copyDims(int)",1,6,n/a,5,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding(Scope)",3,5,n/a,9,0,1,7,5
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeName()",0,27,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.printExpression(int,StringBuffer)",1,63,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",8,4,n/a,11,1,2,8,3
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(ASTVisitor,BlockScope)",2,251,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(ASTVisitor,ClassScope)",2,26,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.Statement.analyseCode(BlockScope,FlowContext,FlowInfo)",n/a,13,47,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Statement.branchChainTo(Label)",0,2,n/a,7,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.Statement.complainIfUnreachable(FlowInfo,BlockScope,boolean)",3,10,n/a,12,2,3,7,4
"org.eclipse.jdt.internal.compiler.ast.Statement.generateArguments(MethodBinding,Expression[],BlockScope,CodeStream)",15,4,n/a,48,4,4,33,10
"org.eclipse.jdt.internal.compiler.ast.Statement.generateCode(BlockScope,CodeStream)",n/a,13,23,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Statement.isEmptyBlock()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.isValidJavaStatement()",0,0,n/a,13,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.print(int,StringBuffer)",1,20,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.printStatement(int,StringBuffer)",n/a,13,33,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Statement.resolve(BlockScope)",n/a,13,31,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.Statement.resolveCase(BlockScope,TypeBinding,SwitchStatement)",1,2,n/a,8,0,3,2,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.StringLiteral(char[],int,int)",1,5,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.StringLiteral(int,int)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.computeConstant()",2,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.extendWith(CharLiteral)",1,2,n/a,4,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.extendWith(StringLiteral)",1,2,n/a,4,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.extendsWith(StringLiteral)",1,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.generateCode(BlockScope,CodeStream,boolean)",3,206,n/a,9,0,3,4,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.literalType(BlockScope)",1,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.printExpression(int,StringBuffer)",11,63,n/a,36,2,2,33,11
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.source()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.StringLiteralConcatenation(StringLiteral,StringLiteral)",2,1,n/a,11,0,2,6,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.extendsWith(StringLiteral)",3,3,n/a,22,1,1,9,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.printExpression(int,StringBuffer)",4,63,n/a,8,1,2,7,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.source()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.traverse(ASTVisitor,BlockScope)",3,195,n/a,8,2,2,6,3
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.enterAnyExceptionHandler(CodeStream)",2,4,n/a,9,1,1,6,2
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.exitAnyExceptionHandler()",2,5,n/a,11,1,0,7,3
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.generateSubRoutineInvocation(BlockScope,CodeStream)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.isSubRoutineEscaping()",n/a,8,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.placeAllAnyExceptionHandlers()",1,2,n/a,5,1,0,4,2
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.reenterExceptionHandlers(SubRoutineStatement[],int,CodeStream)",1,4,n/a,7,1,3,8,4
"org.eclipse.jdt.internal.compiler.ast.SuperReference.SuperReference(int,int)",1,9,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.implicitSuperConstructorCall()",1,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isImplicitThis()",0,20,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isSuper()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isThis()",0,18,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.printExpression(int,StringBuffer)",1,63,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.resolveType(BlockScope)",5,56,n/a,11,1,1,8,3
"org.eclipse.jdt.internal.compiler.ast.SuperReference.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",20,13,n/a,54,4,3,33,9
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.branchChainTo(Label)",2,2,n/a,13,1,1,2,2
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.generateCode(BlockScope,CodeStream)",23,13,n/a,100,6,2,61,21
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.printStatement(int,StringBuffer)",10,13,n/a,16,3,2,12,4
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.resolve(BlockScope)",22,13,n/a,76,9,1,62,20
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.traverse(ASTVisitor,BlockScope)",4,45,n/a,13,2,2,9,4
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.SynchronizedStatement(Expression,Block,int,int)",0,2,n/a,10,0,4,4,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",4,13,n/a,17,0,3,4,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.generateCode(BlockScope,CodeStream)",25,13,n/a,60,2,2,35,9
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.generateSubRoutineInvocation(BlockScope,CodeStream)",2,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.isSubRoutineEscaping()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.printStatement(int,StringBuffer)",6,13,n/a,7,0,2,5,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.resolve(BlockScope)",13,13,n/a,31,1,1,26,5
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.traverse(ASTVisitor,BlockScope)",4,45,n/a,9,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.ThisReference.ThisReference(int,int)",0,5,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",0,2,n/a,6,0,5,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.checkAccess(MethodScope)",4,3,n/a,13,1,1,7,3
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",0,1,n/a,6,0,4,0,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,6,0,3,5,3
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",0,1,n/a,6,0,6,0,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",0,1,n/a,6,0,4,0,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.implicitThis()",1,4,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.isImplicitThis()",0,20,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.isThis()",0,18,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.nullStatus(FlowInfo)",0,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.printExpression(int,StringBuffer)",2,62,n/a,4,0,2,3,2
"org.eclipse.jdt.internal.compiler.ast.ThisReference.resolveType(BlockScope)",4,55,n/a,7,1,1,4,3
"org.eclipse.jdt.internal.compiler.ast.ThisReference.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.ThrowStatement(Expression,int)",0,1,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",2,13,n/a,6,0,3,3,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.generateCode(BlockScope,CodeStream)",3,13,n/a,14,0,2,6,2
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.printStatement(int,StringBuffer)",4,13,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.resolve(BlockScope)",6,13,n/a,9,1,1,4,3
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.traverse(ASTVisitor,BlockScope)",3,45,n/a,5,0,2,3,2
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.TrueLiteral(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.computeConstant()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.generateCode(BlockScope,CodeStream,boolean)",2,206,n/a,14,1,3,4,2
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",2,58,n/a,14,3,5,6,4
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.literalType(BlockScope)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.source()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.traverse(ASTVisitor,BlockScope)",2,195,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.TryStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",43,13,n/a,120,3,3,52,14
"org.eclipse.jdt.internal.compiler.ast.TryStatement.generateCode(BlockScope,CodeStream)",63,13,n/a,214,5,2,146,38
"org.eclipse.jdt.internal.compiler.ast.TryStatement.generateSubRoutineInvocation(BlockScope,CodeStream)",4,2,n/a,18,2,2,5,3
"org.eclipse.jdt.internal.compiler.ast.TryStatement.isSubRoutineEscaping()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TryStatement.printStatement(int,StringBuffer)",13,13,n/a,19,1,2,15,4
"org.eclipse.jdt.internal.compiler.ast.TryStatement.resolve(BlockScope)",30,13,n/a,90,5,1,57,18
"org.eclipse.jdt.internal.compiler.ast.TryStatement.traverse(ASTVisitor,BlockScope)",6,45,n/a,16,3,2,11,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.TypeDeclaration(CompilationResult)",0,19,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.abort(int,IProblem)",4,1,n/a,15,1,2,9,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.addClinit()",3,6,n/a,36,2,0,14,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.addMissingAbstractMethodFor(MethodBinding)",8,2,n/a,60,2,1,23,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(BlockScope,FlowContext,FlowInfo)",7,14,n/a,24,2,3,12,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(ClassScope)",3,1,n/a,15,1,1,6,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(ClassScope,FlowContext,FlowInfo)",7,1,n/a,23,2,3,11,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(CompilationUnitScope)",2,1,n/a,13,1,1,5,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.checkConstructors(Parser)",7,5,n/a,33,5,1,15,8
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.compilationResult()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.createDefaultConstructor(boolean,boolean)",3,5,n/a,46,2,2,19,7
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.createDefaultConstructorWithBinding(MethodBinding)",12,1,n/a,70,2,1,40,8
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOf(FieldBinding)",0,2,n/a,13,2,1,8,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOf(MemberTypeBinding)",0,0,n/a,13,2,1,8,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOf(MethodBinding)",0,3,n/a,13,2,1,8,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOfType(char[][])",3,2,n/a,25,2,1,14,6
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(BlockScope,CodeStream)",3,14,n/a,13,1,2,9,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(ClassFile)",22,3,n/a,61,3,1,36,13
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(ClassScope,ClassFile)",2,2,n/a,8,0,2,5,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(CompilationUnitScope)",1,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.hasErrors()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(FlowContext,FlowInfo)",52,4,n/a,86,4,2,46,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.kind()",0,35,n/a,9,1,0,7,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",13,1,n/a,26,3,2,11,9
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.manageEnclosingInstanceAccessIfNecessary(ClassScope,FlowInfo)",3,1,n/a,14,0,2,4,2
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.needClassInitMethod()",2,2,n/a,22,1,0,14,7
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethod(Parser,CompilationUnitDeclaration)",4,7,n/a,30,3,2,24,9
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.print(int,StringBuffer)",3,25,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printBody(int,StringBuffer)",10,1,n/a,29,3,2,24,10
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printHeader(int,StringBuffer)",19,1,n/a,48,2,2,46,16
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printStatement(int,StringBuffer)",1,13,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve()",38,3,n/a,105,5,0,76,44
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(BlockScope)",5,14,n/a,12,1,1,6,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(ClassScope)",4,1,n/a,10,1,1,4,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(CompilationUnitScope)",2,1,n/a,5,0,1,2,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.tagAsHavingErrors()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(ASTVisitor,BlockScope)",10,46,n/a,54,5,2,45,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(ASTVisitor,ClassScope)",11,5,n/a,54,5,2,46,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(ASTVisitor,CompilationUnitScope)",11,3,n/a,56,5,2,46,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.updateMaxFieldCount()",2,6,n/a,20,1,0,6,3
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.checkBounds(Scope)",2,2,n/a,10,2,1,7,4
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.generateCode(BlockScope,CodeStream)",0,13,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.getKind()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.printStatement(int,StringBuffer)",5,13,n/a,17,2,2,11,4
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.resolve(ClassScope)",0,0,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.traverse(ASTVisitor,BlockScope)",4,51,n/a,14,3,2,10,5
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.traverse(ASTVisitor,ClassScope)",4,5,n/a,14,3,2,10,5
"org.eclipse.jdt.internal.compiler.ast.TypeReference.TypeReference()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.aboutToResolve(Scope)",0,1,n/a,4,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.analyseCode(BlockScope,FlowContext,FlowInfo)",0,70,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.baseTypeReference(int,int)",18,8,n/a,47,2,2,39,20
"org.eclipse.jdt.internal.compiler.ast.TypeReference.checkBounds(Scope)",0,4,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.copyDims(int)",n/a,6,7,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.TypeReference.dimensions()",0,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getParameterizedTypeName()",1,19,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getTypeBinding(Scope)",n/a,3,12,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getTypeName()",n/a,26,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.TypeReference.isTypeReference()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.reportDeprecatedType(Scope)",2,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.reportInvalidType(Scope)",2,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType(ClassScope)",5,1,n/a,10,1,1,7,3
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(BlockScope)",1,55,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(BlockScope,boolean)",7,24,n/a,16,1,2,12,6
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(ClassScope)",7,11,n/a,16,1,1,12,6
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveTypeArgument(BlockScope,ReferenceBinding,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveTypeArgument(ClassScope,ReferenceBinding,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.traverse(ASTVisitor,BlockScope)",n/a,251,12,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.TypeReference.traverse(ASTVisitor,ClassScope)",n/a,26,12,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.UnaryExpression(Expression,int)",0,3,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",3,70,n/a,12,1,3,3,2
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.generateCode(BlockScope,CodeStream,boolean)",35,206,n/a,111,4,3,72,26
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.generateOptimizedBoolean(BlockScope,CodeStream,Label,Label,boolean)",4,58,n/a,35,1,5,6,4
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.optimizedBooleanConstant()",0,35,n/a,5,0,0,1,2
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.printExpressionNoParenthesis(int,StringBuffer)",4,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.resolveType(BlockScope)",13,54,n/a,94,3,1,71,24
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.traverse(ASTVisitor,BlockScope)",3,195,n/a,8,1,2,3,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.WhileStatement(Expression,Statement,int,int)",0,1,n/a,8,0,4,6,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",44,13,n/a,85,3,3,44,15
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.generateCode(BlockScope,CodeStream)",18,13,n/a,69,2,2,28,13
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.printStatement(int,StringBuffer)",6,13,n/a,9,0,2,6,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.resolve(BlockScope)",3,13,n/a,6,0,1,4,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.traverse(ASTVisitor,BlockScope)",4,45,n/a,10,1,2,5,3
"org.eclipse.jdt.internal.compiler.ast.Wildcard.Wildcard(int)",1,15,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.getParameterizedTypeName()",6,19,n/a,10,1,0,7,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.getTypeName()",6,27,n/a,10,1,0,7,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.internalResolveType(Scope,ReferenceBinding,int)",4,2,n/a,13,2,3,7,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.printExpression(int,StringBuffer)",7,63,n/a,16,1,2,13,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.resolveTypeArgument(BlockScope,ReferenceBinding,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.resolveTypeArgument(ClassScope,ReferenceBinding,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.traverse(ASTVisitor,BlockScope)",3,251,n/a,8,2,2,4,3
"org.eclipse.jdt.internal.compiler.ast.Wildcard.traverse(ASTVisitor,ClassScope)",3,26,n/a,8,2,2,4,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.ClassFileReader(byte[],char[])",1,11,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.ClassFileReader(byte[],char[],boolean)",43,1,n/a,200,7,3,155,42
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.accessFlags()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeAnnotation(int)",15,4,n/a,58,5,1,51,16
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeElementValue(int)",4,1,n/a,35,2,1,33,7
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeElementValueForJavaLangAnnotationRetention(int)",8,2,n/a,39,2,1,37,7
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeElementValueForJavaLangAnnotationTarget(int)",8,3,n/a,43,3,1,39,8
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeStandardAnnotations(int)",2,1,n/a,11,1,1,6,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getConstantClassNameAt(int)",3,3,n/a,11,0,1,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getConstantPoolOffsets()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getEnclosingTypeName()",2,3,n/a,10,1,0,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getFields()",0,5,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getFileName()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getGenericSignature()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getInnerSourceName()",1,1,n/a,26,0,0,3,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getInterfaceNames()",0,7,n/a,11,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getKind()",1,20,n/a,9,0,0,6,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getMemberTypes()",2,4,n/a,55,3,0,21,11
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getMethods()",0,6,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getModifiers()",1,12,n/a,12,1,0,3,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getName()",0,11,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getSuperclassName()",0,10,n/a,11,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getTagBits()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getVersion()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasNonSyntheticFieldChanges(FieldInfo[],FieldInfo[])",5,1,n/a,23,2,2,21,14
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasNonSyntheticMethodChanges(MethodInfo[],MethodInfo[])",9,1,n/a,24,2,2,22,18
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralChanges(byte[])",1,1,n/a,18,0,1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralChanges(byte[],boolean,boolean)",27,1,n/a,113,3,3,84,50
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralFieldChanges(FieldInfo,FieldInfo)",38,3,n/a,39,2,2,35,17
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralMethodChanges(MethodInfo,MethodInfo)",14,3,n/a,22,1,2,21,11
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.initialize()",5,3,n/a,23,3,0,17,6
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isAnonymous()",1,8,n/a,10,0,0,4,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isBinaryType()",0,5,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isLocal()",2,5,n/a,11,0,0,6,4
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isMember()",2,4,n/a,11,0,0,6,4
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isNestedType()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(File)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(File,boolean)",5,3,n/a,8,1,2,5,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(String)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(String,boolean)",2,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(ZipFile,String)",1,6,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(ZipFile,String,boolean)",5,1,n/a,15,1,3,8,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.reset()",1,5,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.sourceFileName()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.toString()",18,0,n/a,10,0,0,8,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.ClassFileStruct(byte[],int)",0,4,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.ClassFileStruct(byte[],int,boolean)",0,0,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.doubleAt(int)",2,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.floatAt(int)",2,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i1At(int)",0,0,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i2At(int)",0,0,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i4At(int)",0,6,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i8At(int)",0,2,n/a,11,0,1,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.printTypeModifiers(int)",10,1,n/a,12,0,1,16,7
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.reset()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u1At(int)",0,8,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u2At(int)",0,101,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u4At(int)",0,8,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.utf8At(int,int)",1,30,n/a,24,3,2,17,5
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.utf8At(int,int,boolean)",9,0,n/a,56,4,3,38,21
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.verifyMethodNameAndSignature(char[],char[])",7,0,n/a,20,3,2,8,9
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.ClassFormatException(RuntimeException,char[])",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.ClassFormatException(int)",0,23,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.ClassFormatException(int,int)",0,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getBufferPosition()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getErrorCode()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getException()",0,2,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.printStackTrace()",1,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.printStackTrace(PrintStream)",7,0,n/a,23,3,1,10,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.printStackTrace(PrintWriter)",7,0,n/a,23,3,1,10,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.FieldInfo(byte[],int[],int)",10,1,n/a,33,4,3,22,7
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.compareTo(Object)",6,0,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.decodeAnnotation(int)",9,2,n/a,24,3,1,20,5
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.decodeElementValue(int)",4,2,n/a,35,2,1,33,7
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.decodeStandardAnnotations(int)",2,1,n/a,11,1,1,6,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getConstant()",1,8,n/a,12,1,0,3,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getGenericSignature()",2,2,n/a,10,2,0,5,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getModifiers()",2,8,n/a,14,1,0,4,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getName()",3,11,n/a,12,1,0,4,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getTagBits()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getTypeName()",3,9,n/a,19,1,0,4,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getWrappedConstantValue()",20,0,n/a,40,3,0,31,12
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.hasConstant()",1,4,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.initialize()",6,1,n/a,12,0,0,6,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.isSynthetic()",1,4,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readConstantAttribute()",30,1,n/a,62,5,0,51,16
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readModifierRelatedAttributes()",7,1,n/a,22,3,0,18,7
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.reset()",1,5,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.sizeInBytes()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.throwFormatException()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.toString()",16,0,n/a,22,0,0,3,9
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.InnerClassInfo(byte[],int[],int)",4,1,n/a,7,0,3,5,1
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getEnclosingTypeName()",3,6,n/a,21,2,0,6,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getModifiers()",1,4,n/a,12,1,0,3,2
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getName()",3,8,n/a,19,2,0,7,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getSourceName()",2,8,n/a,16,2,0,6,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.initialize()",5,1,n/a,11,0,0,5,1
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.reset()",1,5,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.toString()",13,0,n/a,19,1,0,10,4
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.MethodInfo(byte[],int[],int)",10,1,n/a,33,4,3,22,7
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.compareTo(Object)",11,0,n/a,9,1,1,7,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeAnnotation(int)",9,2,n/a,24,3,1,20,5
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeElementValue(int)",4,2,n/a,35,2,1,33,7
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeStandardAnnotations(int)",2,1,n/a,11,1,1,6,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getArgumentNames()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getExceptionTypeNames()",1,7,n/a,14,1,0,3,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getGenericSignature()",2,9,n/a,10,2,0,5,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getMethodDescriptor()",3,17,n/a,17,1,0,4,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getModifiers()",2,10,n/a,14,1,0,4,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getSelector()",3,16,n/a,14,1,0,4,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getTagBits()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.initialize()",6,1,n/a,12,0,0,6,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.isClinit()",1,5,n/a,8,0,0,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.isConstructor()",1,12,n/a,8,0,0,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.isSynthetic()",1,4,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.readExceptionAttributes()",11,1,n/a,32,4,0,22,6
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.readModifierRelatedAttributes()",8,1,n/a,26,3,0,22,9
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.reset()",1,5,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.sizeInBytes()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.toString()",13,0,n/a,22,0,0,6,10
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.CaseLabel(CodeStream)",1,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.branch()",2,24,n/a,13,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.branchWide()",2,2,n/a,12,1,0,4,2
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.isStandardLabel()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.place()",2,89,n/a,16,2,0,9,3
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.placeInstruction()",1,4,n/a,14,2,0,9,4
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.CharArrayCache()",1,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.CharArrayCache(int)",0,5,n/a,12,0,1,4,1
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.clear()",0,0,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.containsKey(char[])",2,0,n/a,14,1,1,6,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.get(char[])",2,14,n/a,15,1,1,6,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.hashCodeChar(char[])",0,4,n/a,9,1,1,8,2
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.put(char[],int)",3,15,n/a,23,1,2,10,4
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.rehash()",2,1,n/a,14,0,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.remove(char[])",2,5,n/a,15,2,1,7,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.returnKeyFor(int)",0,1,n/a,14,2,1,5,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.size()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.toString()",9,0,n/a,20,2,0,12,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.CodeStream(ClassFile,long)",1,2,n/a,8,1,2,5,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aaload()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aastore()",2,6,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aconst_null()",2,23,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addDefinitelyAssignedVariables(Scope,int)",2,23,n/a,33,4,2,10,8
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addLabel(Label)",1,2,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addVisibleLocalVariable(LocalVariableBinding)",1,5,n/a,7,0,1,5,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload(int)",4,3,n/a,27,2,1,20,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_0()",2,26,n/a,16,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_1()",2,5,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_2()",2,4,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_3()",2,4,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.anewarray(TypeBinding)",5,2,n/a,10,1,1,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.areturn()",2,6,n/a,11,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.arrayAt(int)",8,4,n/a,28,1,1,25,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.arrayAtPut(int,boolean)",16,9,n/a,44,1,2,41,17
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.arraylength()",2,7,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore(int)",4,3,n/a,24,2,1,18,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_0()",2,4,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_1()",2,4,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_2()",2,4,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_3()",2,4,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.athrow()",2,8,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.baload()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.bastore()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.bipush(byte)",2,4,n/a,13,1,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.caload()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.castore()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.checkcast(TypeBinding)",6,20,n/a,10,1,1,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.d2f()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.d2i()",2,4,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.d2l()",2,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dadd()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.daload()",2,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dastore()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dcmpg()",2,4,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dcmpl()",2,6,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dconst_0()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dconst_1()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ddiv()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.decrStackSize(int)",0,12,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload(int)",4,2,n/a,27,2,1,20,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_0()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_1()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_2()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_3()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dmul()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dneg()",2,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.drem()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dreturn()",2,3,n/a,11,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore(int)",4,2,n/a,24,2,1,18,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_0()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_1()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_2()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_3()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dsub()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup()",2,71,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup2()",2,18,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup2_x1()",2,10,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup2_x2()",2,10,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup_x1()",2,16,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup_x2()",2,20,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.exitUserScope(BlockScope)",1,8,n/a,15,3,1,10,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.f2d()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.f2i()",2,4,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.f2l()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fadd()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.faload()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fastore()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fcmpg()",2,4,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fcmpl()",2,6,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fconst_0()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fconst_1()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fconst_2()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fdiv()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload(int)",4,2,n/a,26,2,1,20,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_0()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_1()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_2()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_3()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fmul()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fneg()",2,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.frem()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.freturn()",2,3,n/a,11,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore(int)",4,2,n/a,24,2,1,18,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_0()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_1()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_2()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_3()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fsub()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateBoxingConversion(int)",8,2,n/a,83,1,1,24,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateClassLiteralAccessForType(TypeBinding,FieldBinding)",26,4,n/a,76,2,2,33,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateCodeAttributeForProblemMethod(String)",5,4,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateConstant(Constant,int)",37,57,n/a,68,2,2,59,20
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateFieldAccess(byte,int,char[],char[],char[])",3,13,n/a,39,2,5,27,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateImplicitConversion(int)",35,69,n/a,116,1,1,103,27
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(boolean)",2,2,n/a,6,0,1,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(byte)",8,2,n/a,30,2,1,26,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(char)",9,2,n/a,32,2,1,27,12
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(double)",5,3,n/a,14,1,1,9,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(float)",6,3,n/a,18,1,1,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(int)",10,28,n/a,35,2,1,30,13
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(long)",3,3,n/a,11,1,1,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(short)",9,2,n/a,31,2,1,27,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateOuterAccess(Object[],ASTNode,Binding,Scope)",14,19,n/a,35,2,4,26,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateStringConcatenationAppend(BlockScope,Expression,Expression)",10,12,n/a,29,1,3,14,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding)",11,1,n/a,44,2,1,37,14
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForEnumValueOf(SyntheticMethodBinding)",32,1,n/a,44,0,1,34,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForEnumValues(SyntheticMethodBinding)",17,1,n/a,29,0,1,20,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding)",12,1,n/a,27,1,1,18,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForFieldWriteAccess(SyntheticMethodBinding)",8,1,n/a,13,1,1,9,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForMethodAccess(SyntheticMethodBinding)",22,1,n/a,67,3,1,44,19
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticEnclosingInstanceValues(BlockScope,ReferenceBinding,Expression,ASTNode)",18,4,n/a,48,4,4,25,14
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticOuterArgumentValues(BlockScope,ReferenceBinding,ASTNode)",3,4,n/a,16,2,3,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateUnboxingConversion(int)",8,1,n/a,83,1,1,24,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateWideRevertedConditionalBranch(byte,Label)",5,16,n/a,19,1,2,8,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getContents()",1,0,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getTYPE(int)",18,5,n/a,95,1,1,47,19
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getfield(FieldBinding)",4,26,n/a,13,1,1,6,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getstatic(FieldBinding)",4,26,n/a,13,1,1,6,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.goto_(Label)",5,43,n/a,44,1,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.goto_w(Label)",3,2,n/a,9,1,1,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2b()",2,4,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2c()",2,4,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2d()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2f()",2,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2l()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2s()",2,4,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iadd()",2,3,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iaload()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iand()",2,3,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iastore()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_0()",2,37,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_1()",2,27,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_2()",2,4,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_3()",2,4,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_4()",2,4,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_5()",2,4,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_m1()",2,4,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.idiv()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_acmpeq(Label)",4,1,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_acmpne(Label)",4,1,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpeq(Label)",4,2,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpge(Label)",4,2,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpgt(Label)",4,2,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmple(Label)",4,2,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmplt(Label)",4,3,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpne(Label)",4,2,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifeq(Label)",4,10,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifge(Label)",4,11,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifgt(Label)",4,10,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifle(Label)",4,10,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iflt(Label)",4,10,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifne(Label)",4,12,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifnonnull(Label)",4,3,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifnull(Label)",4,2,n/a,15,2,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iinc(int,int)",5,11,n/a,22,2,2,17,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload(int)",4,5,n/a,26,2,1,20,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_0()",2,5,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_1()",2,6,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_2()",2,8,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_3()",2,5,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.imul()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.incrStackSize(int)",0,4,n/a,4,0,1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.incrementTemp(LocalVariableBinding,int)",5,0,n/a,10,1,2,7,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.indexOfSameLineEntrySincePC(int,int)",0,1,n/a,7,1,2,6,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ineg()",2,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.init(ClassFile)",4,9,n/a,38,1,1,32,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.initializeMaxLocals(MethodBinding)",7,8,n/a,46,4,1,31,17
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.insertionIndex(int[],int,int)",0,2,n/a,34,2,3,16,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.instance_of(TypeBinding)",5,1,n/a,14,1,1,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invoke(int,int,int,char[],char[],char[])",9,55,n/a,38,2,6,31,8
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeClassForName()",2,8,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeEnumOrdinal(char[])",3,1,n/a,11,0,1,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangAssertionErrorConstructor(int)",2,1,n/a,42,1,1,33,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangAssertionErrorDefaultConstructor()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangClassDesiredAssertionStatus()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangClassGetComponentType()",2,0,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangEnumname(TypeBinding)",3,1,n/a,11,0,1,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangErrorConstructor()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangIllegalArgumentExceptionStringConstructor()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaUtilIteratorHasNext()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaUtilIteratorNext()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeNoClassDefFoundErrorStringConstructor()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeObjectGetClass()",2,15,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationAppendForType(int)",3,4,n/a,104,2,1,72,19
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationDefaultConstructor()",3,2,n/a,21,2,0,8,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationStringConstructor()",3,4,n/a,20,2,0,8,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationToString()",3,2,n/a,20,2,0,8,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringEquals()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringIntern()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringValueOf(int)",2,3,n/a,42,1,1,33,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeSystemArraycopy()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeThrowableGetMessage()",2,1,n/a,11,0,0,3,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeinterface(MethodBinding)",4,4,n/a,34,2,1,25,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokespecial(MethodBinding)",8,12,n/a,51,4,1,40,20
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokestatic(MethodBinding)",4,23,n/a,28,1,1,23,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokevirtual(MethodBinding)",4,5,n/a,27,1,1,23,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ior()",2,3,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.irem()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ireturn()",2,15,n/a,11,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.isDefinitelyAssigned(Scope,int,LocalVariableBinding)",1,2,n/a,22,1,3,15,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ishl()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ishr()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore(int)",4,3,n/a,24,2,1,18,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_0()",2,3,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_1()",2,4,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_2()",2,4,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_3()",2,3,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.isub()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iushr()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ixor()",2,4,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.jsr(Label)",4,3,n/a,14,1,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.jsr_w(Label)",3,1,n/a,10,1,1,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.l2d()",2,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.l2f()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.l2i()",2,4,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ladd()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.laload()",2,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.land()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lastore()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lcmp()",2,10,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lconst_0()",2,3,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lconst_1()",2,1,n/a,12,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(String)",35,7,n/a,162,5,1,107,29
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(TypeBinding)",7,1,n/a,26,2,1,20,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(float)",6,2,n/a,26,2,1,20,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(int)",6,3,n/a,26,2,1,20,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc2_w(double)",4,2,n/a,15,1,1,12,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc2_w(long)",4,2,n/a,15,1,1,12,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldiv()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload(int)",4,2,n/a,26,2,1,20,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_0()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_1()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_2()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_3()",2,2,n/a,15,1,0,12,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lmul()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lneg()",2,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.load(LocalVariableBinding)",30,31,n/a,125,2,1,103,39
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.load(TypeBinding,int)",30,7,n/a,120,2,2,101,39
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.loadInt(int)",5,0,n/a,19,1,1,15,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.loadObject(int)",5,0,n/a,18,1,1,15,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lookupswitch(CaseLabel,int[],int[],CaseLabel[])",9,2,n/a,29,2,4,29,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lor()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lrem()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lreturn()",2,3,n/a,11,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lshl()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lshr()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore(int)",4,2,n/a,24,2,1,18,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_0()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_1()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_2()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_3()",2,2,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lsub()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lushr()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lxor()",2,3,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.monitorenter()",2,2,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.monitorexit()",2,4,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.multianewarray(TypeBinding,int)",5,1,n/a,12,1,2,10,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(ArrayBinding)",10,11,n/a,31,1,1,28,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newJavaLangAssertionError()",4,1,n/a,14,1,0,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newJavaLangError()",4,1,n/a,14,1,0,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newJavaLangIllegalArgumentException()",4,1,n/a,14,1,0,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newNoClassDefFoundError()",4,1,n/a,14,1,0,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newStringContatenation()",7,5,n/a,26,2,0,15,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newWrapperFor(int)",28,0,n/a,48,1,1,53,21
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.new_(TypeBinding)",6,4,n/a,16,1,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newarray(int)",2,10,n/a,10,1,1,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.nop()",2,0,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.pop()",2,42,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.pop2()",2,10,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.putfield(FieldBinding)",4,5,n/a,13,1,1,6,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.putstatic(FieldBinding)",4,6,n/a,13,1,1,6,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.record(LocalVariableBinding)",1,2,n/a,11,1,1,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.recordPositionsFrom(int,int)",7,104,n/a,93,6,2,40,19
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.registerExceptionHandler(ExceptionLabel)",1,1,n/a,13,1,1,5,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.removeExceptionHandler(ExceptionLabel)",0,1,n/a,9,2,1,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.removeNotDefinitelyAssignedVariables(Scope,int)",2,34,n/a,24,4,2,10,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.reset(AbstractMethodDeclaration,ClassFile)",3,5,n/a,10,0,2,4,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.resetForProblemClinit(ClassFile)",1,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.resizeByteArray()",1,236,n/a,9,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ret(int)",4,1,n/a,20,2,1,15,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.return_()",2,8,n/a,10,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.saload()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sastore()",2,1,n/a,10,1,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sendOperator(int,int)",32,21,n/a,121,2,2,110,37
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sipush(int)",3,3,n/a,13,1,1,11,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sort(int[],int,int,int[])",3,3,n/a,40,3,4,18,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.store(LocalVariableBinding,boolean)",30,23,n/a,113,2,2,100,36
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.store(TypeBinding,int)",25,0,n/a,99,2,2,83,34
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.storeInt(int)",5,0,n/a,18,1,1,15,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.storeObject(int)",5,0,n/a,18,1,1,15,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.swap()",2,10,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.swap(int[],int,int,int[])",0,1,n/a,9,0,4,7,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.tableswitch(CaseLabel,int,int,int[],int[],CaseLabel[])",10,1,n/a,40,2,6,36,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.toString()",10,0,n/a,12,0,0,10,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.updateLastRecordedEndPC(int)",1,45,n/a,17,0,1,4,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.updateLocalVariablesAttribute(int)",0,2,n/a,13,4,1,8,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedShort(int)",1,3,n/a,13,1,1,5,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedShort(int,int)",1,4,n/a,8,1,2,5,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedWord(int)",1,7,n/a,11,1,1,7,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedWord(int,int)",1,5,n/a,10,1,2,7,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeUnsignedShort(int)",0,56,n/a,9,0,1,3,1
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ConstantPool(ClassFile)",5,2,n/a,15,0,1,9,1
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.dumpBytes()",1,0,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.getFromCache(char[],char[],char[])",3,4,n/a,11,1,3,7,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.getFromNameAndTypeCache(char[],char[])",2,4,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(FieldBinding)",14,0,n/a,26,2,1,14,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(MethodBinding)",17,4,n/a,32,2,1,15,4
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(String)",9,1,n/a,23,2,1,10,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(byte[],char[])",8,1,n/a,31,2,2,17,4
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(char[])",16,93,n/a,58,3,1,33,9
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(char[],byte[])",8,2,n/a,17,2,2,10,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(double)",9,3,n/a,39,2,1,18,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(float)",9,3,n/a,35,2,1,16,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(int)",8,8,n/a,34,2,1,15,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(long)",8,3,n/a,37,2,1,16,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForField(char[],char[])",10,1,n/a,16,2,2,11,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForField(char[],char[],char[])",17,1,n/a,30,3,3,18,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForFields(int,int,char[],char[])",8,1,n/a,25,2,4,9,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForLdc(char[])",17,1,n/a,69,4,1,39,11
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethod(char[],char[])",10,2,n/a,16,2,2,11,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethod(char[],char[],char[],boolean)",17,3,n/a,30,3,4,18,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethods(int,int,char[],char[])",8,1,n/a,24,2,4,9,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForType(char[])",8,47,n/a,19,2,1,9,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.putInCache(char[],char[],char[],int)",11,4,n/a,27,2,4,14,3
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.putInNameAndTypeCache(char[],char[],int)",5,4,n/a,11,1,3,7,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.resetForClinit(int,int)",6,2,n/a,19,1,2,8,4
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.resizePoolContents(int)",1,9,n/a,10,0,1,5,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.writeU1(int)",1,33,n/a,11,1,1,3,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.writeU2(int)",1,22,n/a,13,1,1,4,2
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.DoubleCache()",1,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.DoubleCache(int)",0,2,n/a,11,0,1,3,1
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.clear()",0,0,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.containsKey(double)",2,0,n/a,26,3,1,17,10
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.get(double)",2,1,n/a,27,3,1,17,10
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.put(double,int)",2,1,n/a,19,1,2,7,2
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.toString()",8,0,n/a,20,2,0,12,6
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.ExceptionLabel(CodeStream,TypeBinding)",2,4,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.isStandardLabel()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.place()",2,91,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.placeEnd()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.placeStart()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.FieldNameAndTypeCache()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.FieldNameAndTypeCache(int)",0,2,n/a,12,0,1,4,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.clear()",0,0,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.containsKey(FieldBinding)",2,0,n/a,14,1,1,6,3
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.equalsForNameAndType(FieldBinding,FieldBinding)",1,3,n/a,6,0,2,1,2
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.get(FieldBinding)",2,0,n/a,15,1,1,6,3
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.hashCode(FieldBinding)",2,3,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.put(FieldBinding,int)",3,1,n/a,23,1,2,10,4
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.rehash()",2,1,n/a,14,0,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.size()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache.toString()",9,0,n/a,20,2,0,12,4
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.FloatCache()",1,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.FloatCache(int)",0,2,n/a,11,0,1,3,1
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.clear()",0,0,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.containsKey(float)",2,0,n/a,26,3,1,17,10
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.get(float)",2,1,n/a,27,3,1,17,10
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.put(float,int)",2,1,n/a,19,1,2,7,2
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.toString()",8,0,n/a,20,2,0,12,6
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.IntegerCache()",1,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.IntegerCache(int)",0,3,n/a,12,0,1,4,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.clear()",0,0,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.containsKey(int)",1,0,n/a,14,1,1,6,5
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.get(int)",1,1,n/a,15,1,1,6,5
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.hash(int)",0,3,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.put(int,int)",2,2,n/a,23,1,2,10,6
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.rehash()",2,1,n/a,18,2,0,10,5
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.size()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.toString()",9,0,n/a,20,2,0,12,6
"org.eclipse.jdt.internal.compiler.codegen.Label.Label()",0,11,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.codegen.Label.Label(CodeStream)",0,54,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.codegen.Label.addForwardReference(int)",1,4,n/a,9,0,1,4,2
"org.eclipse.jdt.internal.compiler.codegen.Label.appendForwardReferencesFrom(Label)",2,2,n/a,15,1,1,9,3
"org.eclipse.jdt.internal.compiler.codegen.Label.branch()",4,19,n/a,20,2,0,8,4
"org.eclipse.jdt.internal.compiler.codegen.Label.branchWide()",2,2,n/a,14,1,0,6,2
"org.eclipse.jdt.internal.compiler.codegen.Label.hasForwardReferences()",0,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.Label.initialize(CodeStream)",0,11,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.codegen.Label.inlineForwardReferencesFromLabelsTargeting(int)",2,1,n/a,31,2,1,8,4
"org.eclipse.jdt.internal.compiler.codegen.Label.isStandardLabel()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.Label.place()",13,87,n/a,103,8,0,66,30
"org.eclipse.jdt.internal.compiler.codegen.Label.toString()",16,0,n/a,17,0,0,14,3
"org.eclipse.jdt.internal.compiler.codegen.LongCache.LongCache()",1,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.LongCache(int)",0,3,n/a,12,0,1,4,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.clear()",0,0,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.LongCache.containsKey(long)",1,0,n/a,14,1,1,6,5
"org.eclipse.jdt.internal.compiler.codegen.LongCache.get(long)",1,1,n/a,15,1,1,6,5
"org.eclipse.jdt.internal.compiler.codegen.LongCache.hash(long)",0,3,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.put(long,int)",2,2,n/a,23,1,2,10,6
"org.eclipse.jdt.internal.compiler.codegen.LongCache.rehash()",2,1,n/a,18,2,0,10,5
"org.eclipse.jdt.internal.compiler.codegen.LongCache.size()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.toString()",9,0,n/a,20,2,0,12,6
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.MethodNameAndTypeCache()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.MethodNameAndTypeCache(int)",0,2,n/a,12,0,1,4,1
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.clear()",0,0,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.containsKey(MethodBinding)",2,0,n/a,14,1,1,6,3
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.equalsForNameAndType(MethodBinding,MethodBinding)",4,3,n/a,7,0,2,1,2
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.get(MethodBinding)",2,0,n/a,15,1,1,6,3
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.hashCode(MethodBinding)",1,3,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.put(MethodBinding,int)",3,1,n/a,23,1,2,10,4
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.rehash()",2,1,n/a,14,0,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.size()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache.toString()",9,0,n/a,20,2,0,12,4
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.ObjectCache()",1,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.ObjectCache(int)",0,2,n/a,12,0,1,4,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.clear()",0,0,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.containsKey(Object)",1,0,n/a,14,1,1,6,3
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.get(Object)",1,4,n/a,15,1,1,6,3
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.hashCode(Object)",1,3,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.put(Object,int)",2,2,n/a,23,1,2,10,4
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.rehash()",2,1,n/a,14,0,0,8,3
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.size()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.toString()",9,0,n/a,20,2,0,12,4
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.AccessRestriction(String,char[][],char[][],AccessRestriction)",0,4,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.equals(Object)",4,5,n/a,39,2,1,33,20
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.getExclusionPatterns()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.getInclusionPatterns()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.getMessageTemplate()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.getViolatedRestriction(char[],char[])",2,7,n/a,16,2,2,4,5
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.toString()",13,0,n/a,15,1,0,5,2
"org.eclipse.jdt.internal.compiler.env.IBinaryField.getConstant()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryField.getGenericSignature()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryField.getTagBits()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryField.getTypeName()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryMethod.getExceptionTypeNames()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryMethod.getGenericSignature()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryMethod.getMethodDescriptor()",n/a,10,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryMethod.getTagBits()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryMethod.isClinit()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryNestedType.getEnclosingTypeName()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryNestedType.getModifiers()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryNestedType.getName()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.getEnclosingTypeName()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.getFields()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.getGenericSignature()",n/a,4,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.getInterfaceNames()",n/a,5,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.getMemberTypes()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.getMethods()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.getName()",n/a,9,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.getSuperclassName()",n/a,5,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.getTagBits()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.isAnonymous()",n/a,4,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.isLocal()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.isMember()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType.sourceFileName()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ICompilationUnit.getContents()",n/a,21,12,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ICompilationUnit.getMainTypeName()",n/a,4,12,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ICompilationUnit.getPackageName()",n/a,4,12,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IDependent.getFileName()",n/a,31,19,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericField.getModifiers()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericField.getName()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericMethod.getArgumentNames()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericMethod.getModifiers()",n/a,5,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericMethod.getSelector()",n/a,7,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericMethod.isConstructor()",n/a,11,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericType.getKind()",n/a,19,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericType.getModifiers()",n/a,5,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericType.isBinaryType()",n/a,5,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.INameEnvironment.cleanup()",n/a,8,5,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.INameEnvironment.findType(char[],char[][])",n/a,5,6,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.INameEnvironment.findType(char[][])",n/a,5,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.INameEnvironment.isPackage(char[][],char[])",n/a,7,5,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceField.getDeclarationSourceEnd()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceField.getDeclarationSourceStart()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceField.getInitializationSource()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceField.getNameSourceEnd()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceField.getNameSourceStart()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceField.getTypeName()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceImport.getDeclarationSourceEnd()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceImport.getDeclarationSourceStart()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceImport.getModifiers()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceImport.getName()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceImport.onDemand()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod.getArgumentTypeNames()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod.getDeclarationSourceEnd()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod.getDeclarationSourceStart()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod.getExceptionTypeNames()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod.getNameSourceEnd()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod.getNameSourceStart()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod.getReturnTypeName()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod.getTypeParameterBounds()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod.getTypeParameterNames()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getDeclarationSourceEnd()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getDeclarationSourceStart()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getEnclosingType()",n/a,8,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getFields()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getImports()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getInterfaceNames()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getMemberTypes()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getMethods()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getName()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getNameSourceEnd()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getNameSourceStart()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getPackageName()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getSuperclassName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getTypeParameterBounds()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType.getTypeParameterNames()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.NameEnvironmentAnswer(IBinaryType,AccessRestriction)",0,11,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.NameEnvironmentAnswer(ICompilationUnit,AccessRestriction)",0,5,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.NameEnvironmentAnswer(ISourceType[],AccessRestriction)",0,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getAccessRestriction()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getBinaryType()",0,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getCompilationUnit()",0,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getSourceTypes()",0,3,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isBinaryType()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isCompilationUnit()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isSourceType()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.ConditionalFlowInfo(FlowInfo,FlowInfo)",0,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.addInitializationsFrom(FlowInfo)",2,12,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.addPotentialInitializationsFrom(FlowInfo)",2,13,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.asNegatedCondition()",0,6,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.copy()",3,47,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.initsWhenFalse()",0,14,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.initsWhenTrue()",0,13,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyAssigned(FieldBinding)",2,11,n/a,7,0,1,1,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyAssigned(LocalVariableBinding)",2,9,n/a,7,0,1,1,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNonNull(FieldBinding)",2,2,n/a,7,0,1,1,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNonNull(LocalVariableBinding)",2,7,n/a,7,0,1,1,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNull(FieldBinding)",2,2,n/a,7,0,1,1,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNull(LocalVariableBinding)",2,8,n/a,7,0,1,1,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isPotentiallyAssigned(FieldBinding)",2,7,n/a,7,0,1,1,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isPotentiallyAssigned(LocalVariableBinding)",2,5,n/a,7,0,1,1,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isReachable()",2,45,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyAssigned(FieldBinding)",2,8,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyAssigned(LocalVariableBinding)",2,8,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNonNull(FieldBinding)",2,2,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNonNull(LocalVariableBinding)",2,9,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNotAssigned(FieldBinding)",2,2,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNotAssigned(LocalVariableBinding)",2,2,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNull(FieldBinding)",2,2,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNull(LocalVariableBinding)",2,7,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.mergedWith(UnconditionalFlowInfo)",2,14,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.reachMode()",2,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.setReachMode(int)",2,22,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.toString()",2,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.unconditionalInits()",4,92,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.ExceptionHandlingFlowContext(FlowContext,ASTNode,ReferenceBinding[],BlockScope,UnconditionalFlowInfo)",7,5,n/a,28,2,5,19,3
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.complainIfUnusedExceptionHandlers(AbstractMethodDeclaration)",4,2,n/a,20,2,1,11,5
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.complainIfUnusedExceptionHandlers(BlockScope,TryStatement)",5,1,n/a,21,3,2,10,4
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.individualToString()",16,2,n/a,21,3,0,16,4
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.initsOnException(ReferenceBinding)",1,1,n/a,7,1,1,4,2
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.initsOnReturn()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.mergeUnhandledException(TypeBinding)",7,2,n/a,28,2,1,21,8
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.recordHandlingException(ReferenceBinding,UnconditionalFlowInfo,TypeBinding,ASTNode,boolean)",6,4,n/a,19,1,5,7,3
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.recordReturnFrom(FlowInfo)",6,5,n/a,8,1,1,5,3
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.FinallyFlowContext(FlowContext,ASTNode)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.complainOnDeferredChecks(FlowInfo,BlockScope)",12,1,n/a,60,3,2,37,14
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.individualToString()",8,2,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.isSubRoutine()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.recordFinalAssignment(VariableBinding,Reference)",2,1,n/a,25,1,2,9,3
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.recordNullReference(Expression,int)",2,1,n/a,14,2,2,9,3
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.removeFinalAssignmentIfAny(Reference)",0,2,n/a,9,2,1,7,3
"org.eclipse.jdt.internal.compiler.flow.FlowContext.FlowContext(FlowContext,ASTNode)",0,5,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.breakLabel()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.checkExceptionHandlers(TypeBinding,ASTNode,FlowInfo,BlockScope)",20,3,n/a,84,5,4,39,18
"org.eclipse.jdt.internal.compiler.flow.FlowContext.checkExceptionHandlers(TypeBinding[],ASTNode,FlowInfo,BlockScope)",21,4,n/a,132,8,4,80,33
"org.eclipse.jdt.internal.compiler.flow.FlowContext.continueLabel()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForBreakLabel(char[])",3,1,n/a,21,2,1,11,6
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForContinueLabel(char[])",5,1,n/a,31,3,1,17,9
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForDefaultBreak()",3,1,n/a,18,2,0,10,6
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForDefaultContinue()",2,1,n/a,19,2,0,10,5
"org.eclipse.jdt.internal.compiler.flow.FlowContext.individualToString()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.initsOnBreak()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.initsOnReturn()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isBreakable()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isContinuable()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isNonReturningContext()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isSubRoutine()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.labelName()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordBreakFrom(FlowInfo)",0,1,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordContinueFrom(FlowInfo)",0,1,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordFinalAssignment(VariableBinding,Reference)",0,1,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordNullReference(Expression,int)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordReturnFrom(FlowInfo)",0,5,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordSettingFinal(VariableBinding,Reference,FlowInfo)",2,4,n/a,14,2,3,7,4
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordUsingNullReference(Scope,LocalVariableBinding,Expression,int,FlowInfo)",11,9,n/a,28,2,5,21,9
"org.eclipse.jdt.internal.compiler.flow.FlowContext.removeFinalAssignmentIfAny(Reference)",0,2,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.subRoutine()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.toString()",11,0,n/a,25,1,0,26,6
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.addInitializationsFrom(FlowInfo)",n/a,12,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.addPotentialInitializationsFrom(FlowInfo)",n/a,13,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.asNegatedCondition()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.conditional(FlowInfo,FlowInfo)",1,3,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.copy()",n/a,47,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.initial(int)",1,4,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.initsWhenFalse()",n/a,14,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.initsWhenTrue()",n/a,13,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.isDefinitelyAssigned(FieldBinding)",n/a,11,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.isDefinitelyAssigned(LocalVariableBinding)",n/a,9,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.isDefinitelyNonNull(FieldBinding)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.isDefinitelyNonNull(LocalVariableBinding)",n/a,7,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.isDefinitelyNull(FieldBinding)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.isDefinitelyNull(LocalVariableBinding)",n/a,8,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.isPotentiallyAssigned(FieldBinding)",n/a,7,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.isPotentiallyAssigned(LocalVariableBinding)",n/a,5,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.isReachable()",n/a,45,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.markAsDefinitelyAssigned(FieldBinding)",n/a,8,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.markAsDefinitelyAssigned(LocalVariableBinding)",n/a,8,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.markAsDefinitelyNonNull(FieldBinding)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.markAsDefinitelyNonNull(LocalVariableBinding)",n/a,9,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.markAsDefinitelyNotAssigned(FieldBinding)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.markAsDefinitelyNotAssigned(LocalVariableBinding)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.markAsDefinitelyNull(FieldBinding)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.markAsDefinitelyNull(LocalVariableBinding)",n/a,7,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.mergedOptimizedBranches(FlowInfo,boolean,FlowInfo,boolean,boolean)",7,5,n/a,22,2,5,11,7
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.mergedWith(UnconditionalFlowInfo)",n/a,14,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.reachMode()",n/a,8,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.setReachMode(int)",n/a,22,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.toString()",1,3,n/a,6,1,0,3,2
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.unconditionalInits()",n/a,89,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.InitializationFlowContext(FlowContext,ASTNode,BlockScope)",1,2,n/a,11,0,3,1,1
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.checkInitializerExceptions(BlockScope,FlowContext,FlowInfo)",1,2,n/a,12,1,3,4,2
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.individualToString()",9,2,n/a,8,1,0,7,2
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.recordHandlingException(ReferenceBinding,UnconditionalFlowInfo,TypeBinding,ASTNode,boolean)",4,4,n/a,32,1,5,8,2
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.InsideSubRoutineFlowContext(FlowContext,ASTNode)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.individualToString()",6,2,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.initsOnReturn()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.isNonReturningContext()",2,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.recordReturnFrom(FlowInfo)",6,5,n/a,8,1,1,5,3
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.subRoutine()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.LabelFlowContext(FlowContext,ASTNode,char[],Label,BlockScope)",2,1,n/a,10,0,5,3,1
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.checkLabelValidity(BlockScope)",4,1,n/a,12,2,1,6,4
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.individualToString()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.labelName()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.LoopingFlowContext(FlowContext,ASTNode,Label,Label,Scope)",1,8,n/a,10,0,5,3,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.complainOnDeferredChecks(BlockScope,FlowInfo)",12,9,n/a,53,3,2,37,14
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.continueLabel()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.individualToString()",16,2,n/a,8,0,0,6,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.isContinuable()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.isContinuedTo()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordContinueFrom(FlowInfo)",6,1,n/a,8,1,1,5,3
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordFinalAssignment(VariableBinding,Reference)",2,1,n/a,33,2,2,14,6
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordNullReference(Expression,int)",2,1,n/a,14,2,2,9,3
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.removeFinalAssignmentIfAny(Reference)",0,2,n/a,9,2,1,7,3
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.SwitchFlowContext(FlowContext,ASTNode,Label)",1,3,n/a,7,0,3,2,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.breakLabel()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.individualToString()",6,2,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.isBreakable()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.recordBreakFrom(FlowInfo)",5,1,n/a,7,1,1,3,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.UnconditionalFlowInfo()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addInitializationsFrom(FlowInfo)",7,14,n/a,62,4,1,42,11
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addPotentialInitializationsFrom(FlowInfo)",6,14,n/a,55,4,1,35,10
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.copy()",5,54,n/a,25,1,0,16,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.discardFieldInitializations()",0,3,n/a,35,1,0,30,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.discardNonFieldInitializations()",0,2,n/a,31,1,0,26,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.discardNullRelatedInitializations()",0,7,n/a,10,1,0,9,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.initsWhenFalse()",0,14,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.initsWhenTrue()",0,13,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(FieldBinding)",1,11,n/a,10,0,1,3,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(LocalVariableBinding)",2,9,n/a,14,1,1,5,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(int)",0,2,n/a,19,1,1,8,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNonNull(FieldBinding)",1,2,n/a,10,0,1,3,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNonNull(LocalVariableBinding)",2,7,n/a,14,1,1,5,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNonNull(int)",0,2,n/a,19,1,1,8,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNull(FieldBinding)",1,2,n/a,10,0,1,3,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNull(LocalVariableBinding)",1,8,n/a,10,0,1,3,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNull(int)",0,2,n/a,19,1,1,8,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyAssigned(FieldBinding)",1,7,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyAssigned(LocalVariableBinding)",2,5,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyAssigned(int)",0,2,n/a,19,1,1,8,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isReachable()",0,50,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyAssigned(FieldBinding)",1,8,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyAssigned(LocalVariableBinding)",1,8,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyAssigned(int)",4,3,n/a,41,4,1,25,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNonNull(FieldBinding)",1,2,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNonNull(LocalVariableBinding)",1,9,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNonNull(int)",0,2,n/a,22,2,1,9,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNotAssigned(FieldBinding)",1,2,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNotAssigned(LocalVariableBinding)",1,2,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNotAssigned(int)",0,2,n/a,33,3,1,17,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNull(FieldBinding)",1,2,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNull(LocalVariableBinding)",1,7,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNull(int)",0,1,n/a,22,2,1,9,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.mergedWith(UnconditionalFlowInfo)",5,25,n/a,79,4,1,49,14
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.numberOfEnclosingFields(ReferenceBinding)",3,0,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.reachMode()",0,9,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.setReachMode(int)",0,28,n/a,14,3,1,11,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.toString()",0,9,n/a,11,1,0,3,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.unconditionalInits()",0,93,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.BooleanConstant(boolean)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.booleanValue()",0,94,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.stringValue()",2,64,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.typeID()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.ByteConstant(byte)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.byteValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.charValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.doubleValue()",0,171,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.floatValue()",0,170,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.intValue()",0,252,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.longValue()",0,237,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.shortValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.stringValue()",2,64,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.toString()",0,0,n/a,2,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.typeID()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.CharConstant(char)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.byteValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.charValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.doubleValue()",0,171,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.floatValue()",0,170,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.intValue()",0,252,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.longValue()",0,237,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.shortValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.stringValue()",2,64,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.impl.CharConstant.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.typeID()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.CompilerOptions()",0,3,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.CompilerOptions(Map)",1,21,n/a,8,0,1,3,2
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getMap()",124,3,n/a,74,1,0,71,26
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getSeverity(long)",0,53,n/a,7,0,1,5,3
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getSeverityString(long)",0,68,n/a,7,0,1,5,3
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getVisibilityString(int)",0,6,n/a,12,1,1,9,5
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.set(Map)",179,1,n/a,309,4,1,260,142
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.toString()",181,0,n/a,70,0,0,68,29
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.updateSeverity(long,Object)",3,36,n/a,12,1,2,9,4
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.versionFromJdkLevel(long)",0,8,n/a,14,1,1,11,6
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.versionToJdkLevel(Object)",5,18,n/a,14,1,1,11,6
"org.eclipse.jdt.internal.compiler.impl.Constant.booleanValue()",3,94,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.byteValue()",3,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.castTo(int)",84,3,n/a,155,1,1,108,54
"org.eclipse.jdt.internal.compiler.impl.Constant.charValue()",3,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperation(Constant,int,int)",22,1,n/a,38,3,3,38,18
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperation(Constant,int,int,Constant,int)",17,1,n/a,22,1,5,37,19
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationAND(Constant,int,Constant,int)",78,1,n/a,50,2,4,68,32
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationAND_AND(Constant,int,Constant,int)",3,1,n/a,3,0,4,1,2
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationDIVIDE(Constant,int,Constant,int)",147,1,n/a,82,2,4,120,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationEQUAL_EQUAL(Constant,int,Constant,int)",155,1,n/a,101,3,4,134,64
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationGREATER(Constant,int,Constant,int)",147,1,n/a,81,2,4,120,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationGREATER_EQUAL(Constant,int,Constant,int)",147,1,n/a,81,2,4,120,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationLEFT_SHIFT(Constant,int,Constant,int)",75,1,n/a,49,2,4,66,31
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationLESS(Constant,int,Constant,int)",147,1,n/a,81,2,4,120,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationLESS_EQUAL(Constant,int,Constant,int)",147,1,n/a,81,2,4,120,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationMINUS(Constant,int,Constant,int)",147,2,n/a,81,2,4,120,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationMULTIPLY(Constant,int,Constant,int)",147,1,n/a,81,2,4,120,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationOR(Constant,int,Constant,int)",78,1,n/a,50,2,4,68,32
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationOR_OR(Constant,int,Constant,int)",3,1,n/a,3,0,4,1,2
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationPLUS(Constant,int,Constant,int)",225,2,n/a,122,2,4,181,87
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationREMAINDER(Constant,int,Constant,int)",147,1,n/a,81,2,4,120,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationRIGHT_SHIFT(Constant,int,Constant,int)",75,1,n/a,49,2,4,66,31
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationUNSIGNED_RIGHT_SHIFT(Constant,int,Constant,int)",75,1,n/a,49,2,4,66,31
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationXOR(Constant,int,Constant,int)",78,1,n/a,50,2,4,68,32
"org.eclipse.jdt.internal.compiler.impl.Constant.doubleValue()",3,171,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.floatValue()",3,170,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(String)",1,0,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(boolean)",1,260,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(byte)",1,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(char)",1,8,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(double)",1,75,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(float)",1,65,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(int)",1,229,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(long)",1,97,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.fromValue(short)",1,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.intValue()",3,252,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.longValue()",3,237,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.shortValue()",3,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.stringValue()",3,64,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.toString()",1,0,n/a,3,0,0,3,2
"org.eclipse.jdt.internal.compiler.impl.Constant.typeID()",n/a,35,9,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.impl.Constant.typeName()",1,9,n/a,15,1,0,23,12
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.DoubleConstant(double)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.byteValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.charValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.doubleValue()",0,171,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.floatValue()",0,170,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.intValue()",0,252,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.longValue()",0,237,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.shortValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.stringValue()",1,64,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.toString()",0,0,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.typeID()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.FloatConstant(float)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.byteValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.charValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.doubleValue()",0,171,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.floatValue()",0,170,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.intValue()",0,252,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.longValue()",0,237,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.shortValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.stringValue()",1,64,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.typeID()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ITypeRequestor.accept(IBinaryType,PackageBinding,AccessRestriction)",n/a,2,4,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.impl.ITypeRequestor.accept(ICompilationUnit,AccessRestriction)",n/a,2,4,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.impl.ITypeRequestor.accept(ISourceType[],PackageBinding,AccessRestriction)",n/a,2,7,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.compiler.impl.IntConstant.IntConstant(int)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.byteValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.charValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.doubleValue()",0,171,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.floatValue()",0,170,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.intValue()",0,252,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.longValue()",0,237,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.shortValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.stringValue()",2,64,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.impl.IntConstant.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.typeID()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.LongConstant(long)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.byteValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.charValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.doubleValue()",0,171,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.floatValue()",0,170,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.intValue()",0,252,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.longValue()",0,237,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.shortValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.stringValue()",2,64,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.impl.LongConstant.toString()",0,0,n/a,2,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.typeID()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ReferenceContext.abort(int,IProblem)",n/a,1,3,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.impl.ReferenceContext.compilationResult()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.impl.ReferenceContext.hasErrors()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.impl.ReferenceContext.tagAsHavingErrors()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.ShortConstant(short)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.byteValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.charValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.doubleValue()",0,171,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.floatValue()",0,170,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.intValue()",0,252,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.longValue()",0,237,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.shortValue()",0,226,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.stringValue()",2,64,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.toString()",0,0,n/a,2,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.typeID()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.StringConstant(String)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.compileTimeEqual(StringConstant)",1,1,n/a,8,1,1,3,2
"org.eclipse.jdt.internal.compiler.impl.StringConstant.stringValue()",0,66,n/a,12,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.toString()",0,0,n/a,2,0,0,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.typeID()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.ArrayBinding(TypeBinding,int,LookupEnvironment)",1,5,n/a,10,0,3,7,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.collectSubstitutes(TypeBinding,Map)",7,10,n/a,15,2,2,7,4
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.computeUniqueKey()",2,16,n/a,9,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.constantPoolName()",2,18,n/a,12,0,0,8,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.debugName()",4,14,n/a,6,0,0,5,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.dimensions()",0,29,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.elementsType()",1,17,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.environment()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.erasure()",2,131,n/a,9,0,0,4,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.genericTypeSignature()",2,24,n/a,8,1,0,8,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.getPackage()",1,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.hashCode()",2,0,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.isCompatibleWith(TypeBinding)",7,66,n/a,30,2,1,20,9
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.kind()",0,30,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.leafComponentType()",0,57,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.problemId()",1,80,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.qualifiedSourceName()",2,21,n/a,13,1,0,7,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.readableName()",2,132,n/a,8,1,0,7,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.shortReadableName()",2,121,n/a,8,1,0,7,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.sourceName()",2,28,n/a,8,1,0,7,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",3,1,n/a,6,1,3,3,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.toString()",1,0,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.BaseTypeBinding(int,char[],char[])",0,10,n/a,6,0,3,4,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.constantPoolName()",0,18,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.getPackage()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isCompatibleWith(TypeBinding)",1,66,n/a,59,2,1,50,17
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isNarrowing(int,int)",0,8,n/a,31,1,2,26,16
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isWidening(int,int)",0,7,n/a,32,1,2,27,17
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.qualifiedSourceName()",0,21,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.readableName()",0,132,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.shortReadableName()",0,121,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.sourceName()",0,32,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.BinaryTypeBinding(PackageBinding,IBinaryType,LookupEnvironment)",12,1,n/a,31,1,3,23,10
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableFields()",2,2,n/a,14,2,0,10,3
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableMethods()",2,7,n/a,16,2,0,12,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(IBinaryType,boolean)",29,1,n/a,88,3,2,65,17
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createFields(IBinaryField[],long)",10,1,n/a,29,4,2,17,7
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethod(IBinaryMethod,long)",38,2,n/a,112,4,2,90,40
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethods(IBinaryMethod[],long)",4,1,n/a,40,4,2,32,15
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createTypeVariables(SignatureWrapper,Binding)",7,2,n/a,40,4,2,35,12
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.enclosingType()",2,150,n/a,9,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.fields()",1,10,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getExactConstructor(TypeBinding[])",1,3,n/a,15,2,1,15,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",7,8,n/a,34,3,3,29,13
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getField(char[],boolean)",2,10,n/a,9,1,2,7,5
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMemberType(char[])",3,8,n/a,18,2,1,12,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMethods(char[])",3,15,n/a,26,2,1,24,9
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getTypeVariable(char[])",2,3,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.hasMemberTypes()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.initializeTypeVariable(TypeVariableBinding,TypeVariableBinding[],SignatureWrapper)",8,1,n/a,33,2,3,22,7
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.isEquivalentTo(TypeBinding)",3,10,n/a,15,1,1,10,5
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.isGenericType()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.kind()",0,30,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.memberTypes()",2,8,n/a,10,0,0,10,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.methods()",1,11,n/a,8,0,0,7,3
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(ReferenceBinding,LookupEnvironment,boolean)",8,15,n/a,11,0,3,9,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(TypeBinding,LookupEnvironment,ParameterizedTypeBinding,int)",8,8,n/a,22,1,4,19,9
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypeFor(FieldBinding)",1,3,n/a,7,0,1,5,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypesFor(MethodBinding)",5,7,n/a,14,0,1,15,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveUnresolvedType(ReferenceBinding,LookupEnvironment,boolean)",5,8,n/a,10,0,3,7,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superInterfaces()",2,58,n/a,10,0,0,10,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass()",2,60,n/a,9,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()",17,0,n/a,59,3,0,58,31
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.typeVariables()",1,38,n/a,8,0,0,7,3
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.unResolvedMethods()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.computeUniqueKey()",0,6,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.isValidBinding()",1,171,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.kind()",n/a,12,14,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.Binding.problemId()",0,80,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.readableName()",n/a,132,13,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.Binding.shortReadableName()",1,121,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(BlockScope)",1,8,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(BlockScope,boolean)",2,2,n/a,6,0,2,5,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(BlockScope,int)",2,2,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(int,Scope)",1,4,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addAnonymousType(TypeDeclaration,ReferenceBinding)",3,1,n/a,10,0,2,2,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addLocalType(TypeDeclaration)",12,1,n/a,24,2,1,14,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addLocalVariable(LocalVariableBinding)",3,11,n/a,19,0,1,6,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addSubscope(Scope)",1,4,n/a,10,0,1,3,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.allowBlankFinalFieldAssignment(FieldBinding)",5,11,n/a,14,0,1,6,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.basicToString(int)",1,1,n/a,12,0,1,13,3
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.checkAndSetModifiersForVariable(LocalVariableBinding)",4,1,n/a,12,1,1,8,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.computeLocalVariablePositions(int,int,CodeStream)",11,2,n/a,73,4,3,37,24
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.emulateOuterAccess(LocalVariableBinding)",7,3,n/a,24,2,1,8,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.findLocalType(char[])",3,2,n/a,32,2,1,11,6
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.findVariable(char[])",1,2,n/a,11,1,1,10,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getBinding(char[][],InvocationSite)",35,2,n/a,93,4,2,48,20
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getBinding(char[][],int,InvocationSite,boolean)",42,1,n/a,126,4,4,52,22
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getEmulationPath(LocalVariableBinding)",7,5,n/a,42,2,1,13,7
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getEmulationPath(ReferenceBinding,boolean,boolean)",19,14,n/a,100,4,3,54,37
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.isDuplicateLocalVariable(char[])",1,0,n/a,13,2,1,10,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.maxShiftedOffset()",0,1,n/a,10,2,0,9,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.problemReporter()",2,385,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.propagateInnerEmulation(ReferenceBinding,boolean)",3,4,n/a,18,3,2,8,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.referenceType()",2,4,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.scopeIndex()",0,1,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.startIndex()",0,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.toString(int)",2,2,n/a,7,0,1,7,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.ClassScope(Scope,TypeDeclaration)",1,5,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildAnonymousTypeBinding(SourceTypeBinding,ReferenceBinding)",9,1,n/a,15,1,2,11,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFields()",21,1,n/a,84,6,0,70,20
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFieldsAndMethods()",6,4,n/a,10,0,0,10,4
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildLocalType(SourceTypeBinding,PackageBinding)",20,3,n/a,50,4,2,40,9
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildLocalTypeBinding(SourceTypeBinding)",7,1,n/a,7,0,1,5,1
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildMemberTypes(AccessRestriction)",16,1,n/a,40,4,1,31,12
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildMethods()",7,1,n/a,39,2,0,31,13
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildType(SourceTypeBinding,PackageBinding,AccessRestriction)",13,2,n/a,22,1,3,16,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildTypeVariables()",4,2,n/a,16,1,0,11,4
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkAndSetModifiers()",55,2,n/a,174,6,0,114,61
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkAndSetModifiersForField(FieldBinding,FieldDeclaration)",15,1,n/a,65,3,2,38,17
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkForInheritedMemberTypes(SourceTypeBinding)",8,1,n/a,53,5,1,44,19
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkParameterizedTypeBounds()",3,1,n/a,19,2,0,15,6
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectEnumSuperclass()",11,1,n/a,25,1,0,15,4
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectMemberTypes()",1,2,n/a,6,0,0,6,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperInterfaces()",18,2,n/a,78,3,0,59,16
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass()",24,2,n/a,49,2,0,32,15
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy()",11,5,n/a,21,1,0,15,5
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchyWithoutMembers()",8,4,n/a,21,1,0,15,7
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectAnnotationCycle(TypeBinding,TypeBinding,TypeReference)",3,1,n/a,10,1,3,6,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(SourceTypeBinding,ReferenceBinding,TypeReference)",26,7,n/a,78,4,3,58,20
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(TypeBinding,TypeReference,TypeBinding[])",8,5,n/a,25,2,3,19,11
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.findAmbiguousInterface(ReferenceBinding,ReferenceBinding)",7,1,n/a,30,3,2,28,11
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype(TypeReference)",7,2,n/a,13,1,1,9,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.problemReporter()",3,187,n/a,15,1,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.referenceType()",0,33,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.toString()",1,0,n/a,6,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.CompilationUnitScope(CompilationUnitDeclaration,LookupEnvironment)",5,1,n/a,18,1,2,14,3
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.buildFieldsAndMethods()",1,2,n/a,4,0,0,4,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.buildTypeBindings(AccessRestriction)",24,1,n/a,65,3,1,43,22
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.checkAndSetImports()",14,4,n/a,45,2,0,39,17
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.computeConstantPoolName(LocalTypeBinding)",25,3,n/a,55,3,1,20,8
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy()",1,3,n/a,4,0,0,4,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports()",42,1,n/a,104,6,0,87,31
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes()",2,10,n/a,5,0,0,5,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(char[][],int)",18,5,n/a,42,3,2,34,15
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(char[][],boolean)",5,3,n/a,15,1,2,10,6
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleStaticImport(char[][])",12,1,n/a,22,1,1,19,11
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.getDefaultImports()",7,3,n/a,11,0,0,8,5
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.getImport(char[][],boolean,boolean)",2,5,n/a,6,0,3,3,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.problemReporter()",0,107,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordQualifiedReference(char[][])",7,20,n/a,51,3,1,15,6
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordReference(ReferenceBinding,char[])",2,4,n/a,5,0,2,3,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordReference(char[][],char[])",2,4,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordSimpleReference(char[])",2,9,n/a,5,0,1,4,3
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordSuperTypeReference(TypeBinding)",3,5,n/a,6,0,1,5,4
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeConversion(TypeBinding,TypeBinding)",1,7,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReference(TypeBinding)",3,19,n/a,6,0,1,5,4
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReferences(TypeBinding[])",3,11,n/a,11,1,1,10,7
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.resolveSingleImport(ImportBinding)",3,2,n/a,16,3,1,13,7
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.storeDependencyInfo()",18,1,n/a,38,2,0,39,13
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.toString()",2,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.typeToRecord(TypeBinding)",4,4,n/a,17,1,1,14,6
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.verifyMethods(MethodVerifier)",1,4,n/a,4,0,1,4,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding(FieldBinding,ReferenceBinding)",2,1,n/a,6,0,2,3,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding(FieldDeclaration,TypeBinding,int,ReferenceBinding)",1,1,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding(char[],TypeBinding,int,ReferenceBinding,Constant)",3,7,n/a,8,0,5,5,4
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.canBeSeenBy(PackageBinding)",3,3,n/a,6,0,1,5,3
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.canBeSeenBy(TypeBinding,InvocationSite,Scope)",20,20,n/a,79,4,3,61,29
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.computeUniqueKey()",3,9,n/a,14,0,0,8,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.genericSignature()",1,1,n/a,7,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.getAccessFlags()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isDefault()",3,0,n/a,3,0,0,1,3
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isDeprecated()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isPrivate()",0,9,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isPrivateUsed()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isProtected()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isPublic()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isStatic()",0,116,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isSynthetic()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isTransient()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isViewedAsDeprecated()",0,3,n/a,4,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isVolatile()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.kind()",0,12,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.original()",0,11,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.sourceField()",0,1,n/a,15,1,0,11,5
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.ImportBinding(char[][],boolean,Binding,ImportReference)",0,5,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.isStatic()",1,11,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.kind()",0,12,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.readableName()",4,135,n/a,6,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.toString()",2,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency.InnerEmulationDependency(BlockScope,boolean)",0,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.genericTypeArguments()",n/a,14,13,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.isSuperAccess()",n/a,6,16,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.isTypeAccess()",n/a,1,12,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.setActualReceiverType(ReferenceBinding)",n/a,5,12,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.setDepth(int)",n/a,9,12,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.setFieldIndex(int)",n/a,6,13,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.sourceEnd()",n/a,3,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.sourceStart()",n/a,4,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.LocalTypeBinding(ClassScope,SourceTypeBinding,CaseStatement)",2,1,n/a,11,0,3,5,2
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.addInnerEmulationDependent(BlockScope,boolean)",2,3,n/a,15,1,2,12,4
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.constantPoolName()",0,54,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.createArrayType(int)",5,1,n/a,14,1,1,11,4
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.readableName()",19,266,n/a,27,2,0,23,7
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.setAsMemberType()",0,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.setConstantPoolName(char[])",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.shortReadableName()",19,254,n/a,27,2,0,23,7
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.sourceName()",5,126,n/a,9,1,0,5,3
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.toString()",9,5,n/a,7,0,0,5,3
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.updateInnerEmulationDependents()",1,3,n/a,9,2,0,6,3
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.LocalVariableBinding(LocalDeclaration,TypeBinding,int,boolean)",1,3,n/a,5,0,4,2,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.LocalVariableBinding(char[],TypeBinding,int,boolean)",1,11,n/a,7,0,4,2,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.computeUniqueKey()",11,6,n/a,31,2,0,19,6
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.getScopeKey(BlockScope,StringBuffer)",4,2,n/a,8,1,2,5,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.isSecret()",0,1,n/a,4,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.kind()",0,12,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.recordInitializationEndPC(int)",0,2,n/a,4,0,1,2,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.recordInitializationStartPC(int)",1,8,n/a,15,2,1,10,5
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.toString()",5,7,n/a,25,2,0,22,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.LookupEnvironment(ITypeRequestor,CompilerOptions,ProblemReporter,INameEnvironment)",6,6,n/a,15,0,4,13,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(PackageBinding,char[])",14,4,n/a,20,1,2,14,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(char[][])",16,3,n/a,19,0,1,10,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.buildTypeBindings(CompilationUnitDeclaration,AccessRestriction)",3,20,n/a,8,0,2,6,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(IBinaryType,AccessRestriction)",1,7,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(IBinaryType,boolean,AccessRestriction)",5,1,n/a,8,0,3,5,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings()",3,6,n/a,18,1,0,19,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration)",3,2,n/a,15,1,1,9,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration,boolean)",3,12,n/a,8,0,2,7,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.computeBoxingType(TypeBinding)",18,16,n/a,60,1,1,66,28
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.computePackageFrom(char[][])",7,4,n/a,17,2,1,14,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createArrayType(TypeBinding,int)",5,13,n/a,37,1,2,21,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(IBinaryType,PackageBinding,AccessRestriction)",1,4,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(IBinaryType,PackageBinding,boolean,AccessRestriction)",7,2,n/a,15,1,4,10,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createPackage(char[][])",9,1,n/a,28,2,1,17,10
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding)",9,10,n/a,55,4,3,48,18
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createRawType(ReferenceBinding,ReferenceBinding)",6,23,n/a,30,2,2,23,6
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createWildcard(ReferenceBinding,int,TypeBinding,int)",5,18,n/a,32,2,4,27,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getAccessRestriction(TypeBinding)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getCachedType(char[][])",4,6,n/a,22,1,1,13,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getPackage0(char[])",1,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTopLevelPackage(char[])",5,4,n/a,14,1,1,10,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getType(char[][])",11,35,n/a,36,3,1,30,16
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeArgumentsFromSignature(SignatureWrapper,TypeVariableBinding[],ReferenceBinding,ReferenceBinding)",5,2,n/a,11,1,4,8,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromConstantPoolName(char[],int,int,boolean)",9,7,n/a,18,1,4,14,6
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromSignature(char[],int,int,boolean,TypeBinding)",3,4,n/a,50,2,5,42,15
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(SignatureWrapper,TypeVariableBinding[],ReferenceBinding)",19,12,n/a,53,3,3,40,16
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromVariantTypeSignature(SignatureWrapper,TypeVariableBinding[],ReferenceBinding,ReferenceBinding,int)",6,1,n/a,29,1,5,14,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.isBoxingCompatibleWith(TypeBinding,TypeBinding)",4,1,n/a,6,0,2,4,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.isPackage(char[][],char[])",2,1,n/a,7,0,2,3,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.methodVerifier()",2,7,n/a,7,0,0,3,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.reset()",6,4,n/a,23,1,0,21,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.setAccessRestriction(ReferenceBinding,AccessRestriction)",1,2,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.updateCaches(UnresolvedReferenceBinding,ReferenceBinding)",2,1,n/a,22,3,2,16,7
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.MemberTypeBinding(char[][],ClassScope,SourceTypeBinding)",1,1,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.checkSyntheticArgsAndFields()",3,1,n/a,5,0,0,5,3
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.constantPoolName()",3,51,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.toString()",3,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding()",0,7,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding(MethodBinding,ReferenceBinding)",0,1,n/a,9,0,2,6,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding(int,TypeBinding[],ReferenceBinding[],ReferenceBinding)",1,3,n/a,3,0,4,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding(int,char[],TypeBinding,TypeBinding[],ReferenceBinding[],ReferenceBinding)",5,11,n/a,16,1,6,12,11
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areParameterErasuresEqual(MethodBinding)",2,6,n/a,14,0,1,12,6
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areParametersCompatibleWith(TypeBinding[])",5,3,n/a,26,2,1,25,13
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areParametersEqual(MethodBinding)",0,18,n/a,14,0,1,12,5
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.canBeSeenBy(InvocationSite,Scope)",10,5,n/a,29,2,2,22,8
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.canBeSeenBy(PackageBinding)",3,2,n/a,6,0,1,5,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.canBeSeenBy(TypeBinding,InvocationSite,Scope)",20,12,n/a,85,4,3,61,29
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey()",1,11,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding)",6,2,n/a,18,0,1,13,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.constantPoolDeclaringClass()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.constantPoolName()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.genericSignature()",15,5,n/a,42,2,0,35,10
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getAccessFlags()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getTypeVariable(char[])",1,1,n/a,6,0,1,5,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.hasSubstitutedParameters()",0,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.hasSubstitutedReturnType()",0,1,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isAbstract()",0,19,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isBridge()",0,0,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isConstructor()",0,39,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDefault()",3,2,n/a,5,0,0,1,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDefaultAbstract()",0,12,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDeprecated()",0,3,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isFinal()",0,2,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isImplementing()",0,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isMain()",3,1,n/a,15,2,0,5,8
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isNative()",0,6,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isOverriding()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isPrivate()",0,21,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isPrivateUsed()",0,2,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isProtected()",0,8,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isPublic()",0,10,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isRequiredToClearPrivateModifier()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isStatic()",0,42,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isStrictfp()",0,1,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isSynchronized()",0,0,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isSynthetic()",0,10,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isVarargs()",0,143,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isViewedAsDeprecated()",0,5,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.kind()",0,12,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.original()",0,49,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.readableName()",12,144,n/a,17,2,0,14,5
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.setSelector(char[])",0,2,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.shortReadableName()",12,130,n/a,23,2,0,17,5
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature()",23,9,n/a,53,2,0,42,16
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceEnd()",1,10,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceMethod()",0,12,n/a,13,1,0,10,4
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceStart()",1,13,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.tagForClearingPrivateModifier()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.tiebreakMethod()",0,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.toString()",4,4,n/a,31,3,0,25,13
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.typeVariables()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.MethodScope(ClassScope,ReferenceContext,boolean)",1,8,n/a,7,0,3,5,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.basicToString(int)",1,1,n/a,16,0,1,17,3
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.checkAndSetModifiersForConstructor(MethodBinding)",11,1,n/a,48,2,1,29,15
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.checkAndSetModifiersForMethod(MethodBinding)",21,1,n/a,84,3,1,35,20
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.computeLocalVariablePositions(int,CodeStream)",14,5,n/a,63,3,2,36,23
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.createMethod(AbstractMethodDeclaration)",16,1,n/a,44,2,1,28,12
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.findField(TypeBinding,char[],InvocationSite,boolean)",6,9,n/a,42,1,4,16,9
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isInsideConstructor()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isInsideInitializer()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isInsideInitializerOrConstructor()",0,3,n/a,4,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.problemReporter()",3,466,n/a,15,1,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.recordInitializationStates(FlowInfo)",5,31,n/a,53,6,1,29,13
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.referenceMethod()",0,10,n/a,6,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.referenceType()",0,15,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.MethodVerifier(LookupEnvironment)",0,2,n/a,25,0,1,6,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areMethodsEqual(MethodBinding,MethodBinding)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areParametersEqual(MethodBinding,MethodBinding)",1,3,n/a,10,0,2,13,5
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areReturnTypesEqual(MethodBinding,MethodBinding)",1,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areTypesEqual(TypeBinding,TypeBinding)",0,2,n/a,12,0,2,7,4
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkAbstractMethod(MethodBinding)",6,2,n/a,11,2,1,6,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkAgainstInheritedMethods(MethodBinding,MethodBinding[],int)",26,1,n/a,43,4,3,33,19
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkExceptions(MethodBinding,MethodBinding)",9,2,n/a,18,2,2,10,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkForBridgeMethod(MethodBinding,MethodBinding)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkInheritedMethods(MethodBinding[],int)",20,1,n/a,50,5,2,39,19
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkMethods()",16,1,n/a,77,6,0,57,31
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkPackagePrivateAbstractMethod(MethodBinding)",11,1,n/a,23,3,1,21,11
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeInheritedMethods()",42,1,n/a,132,6,0,105,42
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeMethods()",7,1,n/a,18,2,0,13,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeSubstituteMethod(MethodBinding,MethodBinding)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.doesMethodOverride(MethodBinding,MethodBinding)",2,6,n/a,3,0,2,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.errorException()",1,1,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isAsVisible(MethodBinding,MethodBinding)",5,1,n/a,8,0,2,11,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isInterfaceMethodImplemented(MethodBinding,MethodBinding,ReferenceBinding)",2,2,n/a,4,0,3,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isSameClassOrSubclassOf(ReferenceBinding,ReferenceBinding)",1,1,n/a,6,1,2,4,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.mustImplementAbstractMethod(ReferenceBinding)",11,2,n/a,18,2,1,12,9
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.problemReporter()",1,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.problemReporter(MethodBinding)",2,10,n/a,6,0,1,4,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.resolvedExceptionTypesFor(MethodBinding)",1,2,n/a,10,0,1,9,4
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.runtimeException()",1,1,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.toString()",8,0,n/a,9,0,0,7,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.verify(SourceTypeBinding)",3,1,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.MethodVerifier15(LookupEnvironment)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.areMethodsEqual(MethodBinding,MethodBinding)",8,2,n/a,22,4,2,19,10
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.areReturnTypesEqual(MethodBinding,MethodBinding)",7,3,n/a,11,0,2,7,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.areTypesEqual(TypeBinding,TypeBinding)",2,3,n/a,15,1,2,7,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkForBridgeMethod(MethodBinding,MethodBinding)",18,1,n/a,30,4,2,21,11
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.computeSubstituteMethod(MethodBinding,MethodBinding)",8,4,n/a,28,1,2,27,10
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.detectNameClash(MethodBinding,MethodBinding,boolean)",6,2,n/a,10,1,3,6,5
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.doParametersClash(MethodBinding,MethodBinding)",6,1,n/a,15,2,2,12,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.doTypeVariablesClash(MethodBinding,MethodBinding)",1,1,n/a,6,0,2,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.doesMethodOverride(MethodBinding,MethodBinding)",2,6,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.hasBoundedParameters(ParameterizedTypeBinding)",2,0,n/a,14,1,1,15,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.isInterfaceMethodImplemented(MethodBinding,MethodBinding,ReferenceBinding)",2,2,n/a,5,0,3,2,2
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.NestedTypeBinding(char[][],ClassScope,SourceTypeBinding)",1,2,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgument(LocalVariableBinding)",6,2,n/a,28,2,1,20,6
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgument(ReferenceBinding)",6,2,n/a,27,2,1,19,7
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgumentAndField(LocalVariableBinding)",2,1,n/a,10,0,1,6,3
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgumentAndField(ReferenceBinding)",2,3,n/a,10,0,1,6,3
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.computeSyntheticArgumentSlotSizes()",3,2,n/a,34,2,0,23,10
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.enclosingType()",0,154,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.getSyntheticArgument(LocalVariableBinding)",0,1,n/a,9,0,1,7,4
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.getSyntheticArgument(ReferenceBinding,boolean)",1,2,n/a,20,1,2,14,9
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticEnclosingInstanceTypes()",0,6,n/a,9,0,0,9,3
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticEnclosingInstances()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticOuterLocalVariables()",0,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.updateInnerEmulationDependents()",0,2,n/a,7,0,0,0,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding(LookupEnvironment)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding(char[],LookupEnvironment)",1,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding(char[][],PackageBinding,LookupEnvironment)",1,6,n/a,7,0,3,5,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addNotFoundPackage(char[])",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addNotFoundType(char[])",2,2,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addPackage(PackageBinding)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addType(ReferenceBinding)",2,3,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.computeUniqueKey()",1,7,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.findPackage(char[])",4,2,n/a,8,0,1,6,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getPackage(char[])",3,1,n/a,14,1,1,9,4
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getPackage0(char[])",1,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getType(char[])",6,1,n/a,16,2,1,11,5
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getType0(char[])",1,11,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(char[])",11,11,n/a,28,2,1,20,11
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.kind()",0,12,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.readableName()",1,134,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.toString()",1,2,n/a,6,0,0,3,3
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.ParameterizedFieldBinding(ParameterizedTypeBinding,FieldBinding)",3,1,n/a,9,0,2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.constant()",1,24,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.isConstantValue()",1,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.original()",1,11,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.setConstant(Constant)",1,18,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.ParameterizedGenericMethodBinding(MethodBinding,RawTypeBinding,LookupEnvironment)",8,3,n/a,31,1,3,20,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.ParameterizedGenericMethodBinding(MethodBinding,TypeBinding[],LookupEnvironment)",3,4,n/a,17,0,3,12,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(MethodBinding,TypeBinding[],Scope,InvocationSite)",26,1,n/a,92,4,4,68,23
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeUniqueKey()",11,13,n/a,22,1,0,17,3
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.hasSubstitutedParameters()",2,4,n/a,10,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.hasSubstitutedReturnType()",2,2,n/a,9,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.inferFromExpectedType(TypeBinding,Scope)",13,1,n/a,46,3,2,39,11
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.substitute(TypeBinding)",23,12,n/a,87,4,1,66,24
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.tiebreakMethod()",1,2,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.ParameterizedMethodBinding()",0,3,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.ParameterizedMethodBinding(ParameterizedTypeBinding,MethodBinding,boolean)",4,1,n/a,20,0,3,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.computeUniqueKey()",2,13,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.hasSubstitutedParameters()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.hasSubstitutedReturnType()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.instantiateGetClass(TypeBinding,MethodBinding,Scope)",6,2,n/a,19,0,3,11,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.original()",1,53,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.ParameterizedTypeBinding(ReferenceBinding,TypeBinding[],ReferenceBinding,LookupEnvironment)",3,3,n/a,12,1,4,11,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.canBeInstantiated()",1,7,n/a,7,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.collectSubstitutes(TypeBinding,Map)",10,10,n/a,46,2,2,37,13
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.computeId()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.constantPoolName()",1,51,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.createParameterizedMethod(MethodBinding)",2,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.debugName()",9,26,n/a,16,2,0,12,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.enclosingType()",5,167,n/a,12,1,0,4,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.erasure()",1,133,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.fieldCount()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.fields()",2,10,n/a,21,2,0,13,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.genericTypeSignature()",19,24,n/a,29,3,0,26,8
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getExactConstructor(TypeBinding[])",1,3,n/a,31,3,1,28,11
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",9,8,n/a,55,4,3,50,21
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getField(char[],boolean)",2,10,n/a,13,1,2,8,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getMemberType(char[])",2,8,n/a,13,1,1,8,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getMethods(char[])",10,17,n/a,48,3,1,39,12
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.hasMemberTypes()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.implementsMethod(MethodBinding)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initialize(ReferenceBinding,TypeBinding[])",1,2,n/a,28,3,2,19,6
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initializeArguments()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isEquivalentTo(TypeBinding)",11,10,n/a,34,2,1,31,18
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isParameterizedType()",0,60,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.kind()",0,30,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.memberTypes()",2,9,n/a,21,2,0,13,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.methods()",2,10,n/a,22,1,0,15,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.qualifiedPackageName()",1,67,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.qualifiedSourceName()",1,51,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.readableName()",15,266,n/a,23,2,0,17,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.resolve()",7,2,n/a,26,3,0,21,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.shortReadableName()",14,254,n/a,23,2,0,17,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.signature()",1,34,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.sourceName()",1,126,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substitute(TypeBinding)",22,12,n/a,87,4,1,66,24
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.superInterfaces()",2,59,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.superclass()",2,61,n/a,12,1,0,6,3
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",4,1,n/a,17,3,3,13,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.syntheticEnclosingInstanceTypes()",1,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.syntheticOuterLocalVariables()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.toString()",46,0,n/a,62,3,0,50,26
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.typeVariables()",1,37,n/a,7,1,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[],ReferenceBinding,int)",1,2,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[],int)",0,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[][],ReferenceBinding,int)",2,3,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[][],int)",2,5,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.kind()",0,12,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.problemId()",0,82,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.readableName()",0,132,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.ProblemFieldBinding(FieldBinding,ReferenceBinding,char[],int)",0,13,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.ProblemFieldBinding(ReferenceBinding,char[],int)",1,10,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.ProblemFieldBinding(ReferenceBinding,char[][],int)",2,8,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.problemId()",0,89,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.ProblemMethodBinding(MethodBinding,char[],TypeBinding[],int)",1,29,n/a,5,0,4,4,2
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.ProblemMethodBinding(char[],TypeBinding[],ReferenceBinding,int)",0,2,n/a,6,0,4,4,3
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.ProblemMethodBinding(char[],TypeBinding[],int)",0,18,n/a,5,0,3,3,3
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.problemId()",0,82,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding.ProblemPackageBinding(char[],int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding.ProblemPackageBinding(char[][],int)",0,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding.problemId()",0,80,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.ProblemReferenceBinding(char[],ReferenceBinding,int)",1,5,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.ProblemReferenceBinding(char[],int)",1,17,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.ProblemReferenceBinding(char[][],ReferenceBinding,int)",0,17,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.ProblemReferenceBinding(char[][],int)",1,48,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.problemId()",0,80,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.shortReadableName()",1,254,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.RawTypeBinding(ReferenceBinding,ReferenceBinding,LookupEnvironment)",1,1,n/a,10,0,3,3,3
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.createParameterizedMethod(MethodBinding)",3,4,n/a,9,1,1,3,3
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.debugName()",5,26,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.genericTypeSignature()",14,24,n/a,20,2,0,14,5
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.initializeArguments()",2,1,n/a,9,1,0,8,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isEquivalentTo(TypeBinding)",4,10,n/a,7,0,1,7,4
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isParameterizedType()",0,60,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isRawType()",0,30,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.kind()",0,30,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.readableName()",5,266,n/a,12,1,0,5,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.shortReadableName()",4,254,n/a,12,1,0,5,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.substitute(TypeBinding)",18,17,n/a,65,3,1,43,17
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.availableFields()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.availableMethods()",1,7,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeInstantiated()",0,7,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy(PackageBinding)",2,9,n/a,6,0,1,5,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy(ReferenceBinding,SourceTypeBinding)",21,4,n/a,65,5,2,52,26
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy(Scope)",13,20,n/a,46,2,1,34,13
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.computeId()",45,3,n/a,149,3,0,143,70
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.constantPoolName()",1,51,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.debugName()",2,25,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.depth()",1,2,n/a,7,0,0,5,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.enclosingTypeAt(int)",1,16,n/a,6,0,1,4,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.fieldCount()",1,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.fields()",0,9,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.findSuperTypeErasingTo(ReferenceBinding)",10,20,n/a,37,3,1,31,13
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.findSuperTypeErasingTo(int,boolean)",9,2,n/a,42,3,2,31,13
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getAccessFlags()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getExactConstructor(TypeBinding[])",0,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getExactMethod(char[],TypeBinding[])",1,6,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",0,8,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getField(char[],boolean)",0,10,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getFileName()",0,35,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getMemberType(char[])",2,8,n/a,7,0,1,6,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getMethods(char[])",0,15,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getPackage()",0,17,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getTypeVariable(char[])",2,3,n/a,7,0,1,6,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hasMemberTypes()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hasRestrictedAccess()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hashCode()",2,1,n/a,7,0,0,1,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.implementsInterface(ReferenceBinding,boolean)",6,14,n/a,34,3,2,26,11
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.implementsMethod(MethodBinding)",3,3,n/a,11,1,1,9,4
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isAbstract()",0,19,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isAnnotationType()",0,16,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isAnonymousType()",0,26,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isBinaryBinding()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isClass()",0,37,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith(TypeBinding)",6,75,n/a,20,1,1,16,8
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isDefault()",0,0,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isDeprecated()",0,11,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isEnum()",0,23,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isFinal()",0,9,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isHierarchyBeingConnected()",0,3,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isInterface()",0,62,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isPrivate()",0,12,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isPrivateUsed()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isProtected()",0,9,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isPublic()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isStatic()",0,37,n/a,4,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isStrictfp()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isSuperclassOf(ReferenceBinding)",2,20,n/a,6,1,1,4,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isViewedAsDeprecated()",0,8,n/a,4,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.memberTypes()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.methods()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.needsUncheckedConversion(TypeBinding)",8,5,n/a,18,2,1,13,10
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.qualifiedSourceName()",6,51,n/a,10,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.readableName()",15,266,n/a,22,2,0,19,5
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.shortReadableName()",14,254,n/a,22,2,0,19,5
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.signature()",2,34,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.sourceName()",0,123,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.superInterfaces()",0,58,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.superclass()",0,60,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.syntheticEnclosingInstanceTypes()",2,6,n/a,7,0,0,6,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.syntheticOuterLocalVariables()",0,7,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.unResolvedMethods()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.Scope(int,Scope)",0,3,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.boxing(TypeBinding)",27,2,n/a,45,1,1,48,19
"org.eclipse.jdt.internal.compiler.lookup.Scope.boxing(int)",0,0,n/a,26,1,1,20,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.classScope()",0,2,n/a,9,1,0,6,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.compareTypes(TypeBinding,TypeBinding)",2,5,n/a,13,0,2,5,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.compareUncheckedException(ReferenceBinding)",4,1,n/a,11,0,1,4,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.compilationUnitScope()",0,47,n/a,9,1,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(MethodBinding,TypeBinding[],InvocationSite)",8,14,n/a,42,3,3,28,16
"org.eclipse.jdt.internal.compiler.lookup.Scope.connectTypeVariables(TypeParameter[])",24,3,n/a,82,5,1,70,24
"org.eclipse.jdt.internal.compiler.lookup.Scope.convertToRawType(TypeBinding)",11,9,n/a,21,2,1,15,9
"org.eclipse.jdt.internal.compiler.lookup.Scope.createArrayType(TypeBinding,int)",5,17,n/a,6,0,2,3,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.createParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding)",6,15,n/a,9,1,3,10,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.createTypeVariables(TypeParameter[],Binding)",13,2,n/a,59,5,2,36,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingClassScope()",0,1,n/a,7,1,0,5,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingMethodScope()",0,3,n/a,7,1,0,5,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingSourceType()",0,117,n/a,11,1,0,6,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.environment()",0,123,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.findDefaultAbstractMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite,ReferenceBinding,MethodBinding,ObjectVector)",12,7,n/a,64,3,7,55,16
"org.eclipse.jdt.internal.compiler.lookup.Scope.findDirectMemberType(char[],ReferenceBinding)",9,1,n/a,18,1,2,12,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.findExactMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",11,3,n/a,27,3,4,12,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.findField(TypeBinding,char[],InvocationSite,boolean)",30,9,n/a,112,6,4,85,32
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMemberType(char[],ReferenceBinding)",27,7,n/a,101,6,2,80,28
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",40,6,n/a,205,6,4,169,60
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethodForArray(ArrayBinding,char[],TypeBinding[],InvocationSite)",20,1,n/a,55,4,4,32,17
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethodInSuperInterfaces(ReferenceBinding,char[],ObjectVector,MethodBinding)",9,3,n/a,55,6,4,41,15
"org.eclipse.jdt.internal.compiler.lookup.Scope.findType(char[],PackageBinding,PackageBinding)",6,3,n/a,15,1,3,8,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.findVariable(char[])",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getBaseType(char[])",0,5,n/a,61,2,1,37,53
"org.eclipse.jdt.internal.compiler.lookup.Scope.getBinding(char[],int,InvocationSite,boolean)",44,11,n/a,230,9,4,127,62
"org.eclipse.jdt.internal.compiler.lookup.Scope.getConstructor(ReferenceBinding,TypeBinding[],InvocationSite)",17,7,n/a,57,3,3,43,16
"org.eclipse.jdt.internal.compiler.lookup.Scope.getCurrentPackage()",0,3,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getDeclarationModifiers()",4,20,n/a,31,2,0,20,8
"org.eclipse.jdt.internal.compiler.lookup.Scope.getField(TypeBinding,char[],InvocationSite)",4,16,n/a,13,1,3,7,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.getImplicitMethod(char[],TypeBinding[],InvocationSite)",41,5,n/a,207,10,3,117,60
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaIoSerializable()",7,2,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangAnnotationAnnotation()",7,2,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangAssertionError()",7,1,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangClass()",7,6,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangCloneable()",7,2,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangEnum()",7,1,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangError()",7,6,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangIterable()",7,0,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangObject()",7,29,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangRuntimeException()",7,6,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangString()",7,8,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangThrowable()",7,6,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaUtilIterator()",7,2,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getMemberType(char[],ReferenceBinding)",2,6,n/a,7,0,2,4,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod(TypeBinding,char[],TypeBinding[],InvocationSite)",19,7,n/a,34,2,4,27,11
"org.eclipse.jdt.internal.compiler.lookup.Scope.getPackage(char[][])",13,2,n/a,32,1,1,20,8
"org.eclipse.jdt.internal.compiler.lookup.Scope.getType(char[])",2,5,n/a,12,0,1,4,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getType(char[],PackageBinding)",11,1,n/a,24,0,2,11,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.getType(char[][],int)",27,10,n/a,69,3,2,40,17
"org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(char[],int)",38,5,n/a,165,7,2,123,63
"org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(char[][])",30,11,n/a,66,2,1,40,22
"org.eclipse.jdt.internal.compiler.lookup.Scope.greaterLowerBound(TypeBinding[])",2,3,n/a,31,4,1,32,11
"org.eclipse.jdt.internal.compiler.lookup.Scope.isBoxingCompatibleWith(TypeBinding,TypeBinding)",4,15,n/a,3,0,2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInField(FieldBinding)",0,1,n/a,15,2,1,8,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInMethod(MethodBinding)",0,2,n/a,15,2,1,9,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInSameUnit(ReferenceBinding)",1,4,n/a,18,0,1,12,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInType(ReferenceBinding)",0,2,n/a,12,1,1,7,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.isInsideDeprecatedCode()",8,3,n/a,27,2,0,20,12
"org.eclipse.jdt.internal.compiler.lookup.Scope.leastContainingInvocation(TypeBinding,List)",12,1,n/a,30,3,2,34,12
"org.eclipse.jdt.internal.compiler.lookup.Scope.leastContainingTypeArgument(TypeBinding,TypeBinding,ReferenceBinding,int)",26,2,n/a,67,4,4,57,25
"org.eclipse.jdt.internal.compiler.lookup.Scope.lowerUpperBound(TypeBinding[])",3,7,n/a,10,1,1,6,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.methodScope()",0,68,n/a,9,1,0,6,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.minimalErasedCandidate(TypeBinding[],List)",49,1,n/a,134,5,2,123,36
"org.eclipse.jdt.internal.compiler.lookup.Scope.mostSpecificClassMethodBinding(MethodBinding[],int,InvocationSite)",5,3,n/a,30,2,3,23,9
"org.eclipse.jdt.internal.compiler.lookup.Scope.mostSpecificInterfaceMethodBinding(MethodBinding[],int,InvocationSite)",4,3,n/a,43,2,3,18,6
"org.eclipse.jdt.internal.compiler.lookup.Scope.mostSpecificMethodBinding(MethodBinding[],int,TypeBinding[],InvocationSite)",11,3,n/a,29,6,4,31,14
"org.eclipse.jdt.internal.compiler.lookup.Scope.outerMostClassScope()",0,2,n/a,10,1,0,7,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.outerMostMethodScope()",0,6,n/a,10,1,0,7,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(MethodBinding,TypeBinding[])",11,2,n/a,48,4,2,38,18
"org.eclipse.jdt.internal.compiler.lookup.Scope.problemReporter()",n/a,89,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.Scope.referenceCompilationUnit()",0,61,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.startIndex()",0,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.substitute(Substitution,ReferenceBinding[])",2,6,n/a,20,3,2,13,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.substitute(Substitution,TypeBinding[])",2,9,n/a,20,3,2,13,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.switchCase()",0,1,n/a,12,1,0,6,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.unboxing(TypeBinding)",0,0,n/a,26,1,1,20,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.unboxing(int)",0,0,n/a,26,1,1,20,10
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.SignatureWrapper(char[])",0,3,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.atEnd()",0,4,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.computeEnd()",2,2,n/a,21,1,0,18,8
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.nextWord()",4,1,n/a,11,0,0,9,6
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.SourceTypeBinding(char[][],PackageBinding,ClassScope)",3,2,n/a,12,0,3,9,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addDefaultAbstractMethod(MethodBinding)",2,1,n/a,13,0,1,5,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addDefaultAbstractMethods()",9,1,n/a,30,5,0,29,12
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticBridgeMethod(MethodBinding,MethodBinding)",17,1,n/a,43,4,2,25,13
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticEnumMethod(char[])",5,2,n/a,21,2,1,14,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForAssert(BlockScope)",9,1,n/a,44,4,1,24,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForClassLiteral(TypeBinding,BlockScope)",14,2,n/a,35,3,2,19,7
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForEnumValues()",10,1,n/a,44,4,0,24,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForInnerclass(LocalVariableBinding)",10,1,n/a,41,4,1,24,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForInnerclass(ReferenceBinding)",12,1,n/a,34,3,1,19,7
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethod(FieldBinding,boolean)",5,7,n/a,21,2,2,14,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethod(MethodBinding,boolean)",5,5,n/a,21,2,2,14,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.collectSubstitutes(TypeBinding,Map)",9,10,n/a,48,2,2,38,13
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForFieldsAndMethods()",3,4,n/a,6,0,0,6,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.fields()",1,15,n/a,25,3,0,20,7
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.genericSignature()",17,1,n/a,34,3,0,26,9
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.genericTypeSignature()",10,26,n/a,25,3,0,19,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getDefaultAbstractMethods()",2,2,n/a,13,0,0,14,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getExactConstructor(TypeBinding[])",1,3,n/a,28,3,1,28,11
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",7,8,n/a,48,4,3,43,18
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getField(char[],boolean)",4,15,n/a,29,5,2,19,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getMethods(char[])",12,20,n/a,36,4,1,31,14
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getSyntheticBridgeMethod(MethodBinding)",1,0,n/a,10,0,1,8,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getSyntheticField(LocalVariableBinding)",1,1,n/a,4,0,1,3,3
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getSyntheticField(ReferenceBinding,boolean)",7,4,n/a,18,2,2,12,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedFieldBinding(FieldBinding,ReferenceBinding)",7,10,n/a,19,1,2,13,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedMethodBinding(MethodBinding,ReferenceBinding)",7,2,n/a,19,1,2,13,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.hasMemberTypes()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isEquivalentTo(TypeBinding)",10,10,n/a,36,2,1,31,18
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isGenericType()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.kind()",0,30,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.memberTypes()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.methods()",17,15,n/a,77,8,0,59,26
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypeFor(FieldBinding)",8,2,n/a,44,3,1,32,12
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypesFor(MethodBinding)",27,2,n/a,98,4,1,80,32
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.sourceEnd()",0,26,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.sourceStart()",0,30,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.superInterfaces()",0,63,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.superclass()",0,66,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.syntheticFields()",8,1,n/a,28,2,0,23,9
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.syntheticMethods()",9,7,n/a,42,2,0,40,17
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()",61,5,n/a,76,3,0,73,37
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.typeVariables()",0,40,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.verifyMethods(MethodVerifier)",2,4,n/a,5,0,1,4,2
"org.eclipse.jdt.internal.compiler.lookup.Substitution.substitute(TypeBinding)",n/a,5,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding.SyntheticArgumentBinding(LocalVariableBinding)",2,2,n/a,8,0,1,2,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding.SyntheticArgumentBinding(ReferenceBinding)",5,2,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding.SyntheticFieldBinding(char[],TypeBinding,int,ReferenceBinding,Constant,int)",1,5,n/a,4,0,6,2,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(FieldBinding,boolean,ReferenceBinding)",14,2,n/a,88,5,3,56,18
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(MethodBinding,MethodBinding)",1,2,n/a,17,0,2,12,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(MethodBinding,boolean,ReferenceBinding)",3,2,n/a,7,1,3,3,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(SourceTypeBinding,char[])",4,2,n/a,28,1,2,22,5
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.initializeConstructorAccessor(MethodBinding)",7,1,n/a,75,5,1,45,15
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.initializeMethodAccessor(MethodBinding,boolean,ReferenceBinding)",14,1,n/a,61,5,3,46,17
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.isConstructorRelated()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.canBeInstantiated()",1,3,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.collectSubstitutes(TypeBinding,Map)",0,10,n/a,7,0,2,0,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.computeUniqueKey()",1,16,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.constantPoolName()",n/a,18,7,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.debugName()",2,13,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.dimensions()",0,27,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.enclosingType()",0,148,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.erasure()",0,131,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.genericCast(TypeBinding)",3,6,n/a,10,0,1,8,5
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.genericTypeSignature()",1,24,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.getPackage()",n/a,4,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isAnnotationType()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isArrayType()",0,60,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isBaseType()",0,91,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isBoundParameterizedType()",0,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isClass()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isCompatibleWith(TypeBinding)",n/a,66,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isEnum()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isEquivalentTo(TypeBinding)",2,10,n/a,11,0,1,7,4
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isGenericType()",0,35,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isHierarchyInconsistent()",0,6,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isInterface()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isLocalType()",0,34,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isMemberType()",0,42,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isNestedType()",0,38,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isNumericType()",0,5,n/a,14,1,0,11,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isParameterizedType()",0,60,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isPartOfRawType()",2,1,n/a,8,1,0,5,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProvablyDistinctFrom(TypeBinding,int)",10,5,n/a,42,3,2,40,15
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isRawType()",0,30,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isReifiable()",5,1,n/a,26,2,0,19,8
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isTypeArgumentContainedBy(TypeBinding)",6,2,n/a,35,2,1,28,12
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isTypeVariable()",0,28,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isUnboundWildcard()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isWildcard()",0,29,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.kind()",0,30,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.leafComponentType()",0,55,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.needsUncheckedConversion(TypeBinding)",0,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.qualifiedPackageName()",2,67,n/a,12,0,0,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.qualifiedSourceName()",n/a,21,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.signature()",1,24,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.sourceName()",n/a,28,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",0,1,n/a,3,0,3,0,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.typeVariables()",0,37,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.wellKnownType(Scope,int)",2,2,n/a,29,1,2,23,12
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.TypeVariableBinding(char[],Binding,int)",0,2,n/a,7,0,3,5,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.boundCheck(Substitution,TypeBinding)",8,9,n/a,33,2,2,24,16
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.canBeInstantiated()",0,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.collectSubstitutes(TypeBinding,Map)",3,10,n/a,24,3,2,17,6
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.computeUniqueKey()",4,16,n/a,15,0,0,9,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.constantPoolName()",2,51,n/a,6,1,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.debugName()",1,25,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.erasure()",1,137,n/a,6,1,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.findSuperTypeErasingTo(ReferenceBinding)",9,20,n/a,38,3,1,31,13
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.findSuperTypeErasingTo(int,boolean)",8,2,n/a,42,3,2,29,12
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.genericSignature()",10,2,n/a,19,1,0,13,4
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.genericTypeSignature()",1,26,n/a,8,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isErasureBoundTo(TypeBinding)",2,4,n/a,12,1,1,8,4
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isTypeVariable()",0,28,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.kind()",0,30,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.readableName()",0,270,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.resolve(LookupEnvironment)",6,4,n/a,20,0,1,19,8
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.shortReadableName()",1,257,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.superInterfaces()",0,60,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.superclass()",0,61,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.toString()",12,1,n/a,23,3,0,15,9
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.UnresolvedReferenceBinding(char[][],PackageBinding)",0,1,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.addWrapper(TypeBinding)",1,5,n/a,9,1,1,5,2
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.debugName()",1,25,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(LookupEnvironment,boolean)",11,3,n/a,28,2,2,20,10
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.setResolvedType(ReferenceBinding,LookupEnvironment)",2,2,n/a,11,0,2,9,4
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.toString()",1,1,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.compiler.lookup.UpdatedMethodBinding.UpdatedMethodBinding(TypeBinding,int,char[],TypeBinding,TypeBinding[],ReferenceBinding[],ReferenceBinding)",1,1,n/a,4,0,7,2,1
"org.eclipse.jdt.internal.compiler.lookup.UpdatedMethodBinding.constantPoolDeclaringClass()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.VariableBinding(char[],TypeBinding,int,Constant)",0,4,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.constant()",0,24,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isBlankFinal()",0,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isConstantValue()",0,31,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isFinal()",0,16,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.readableName()",0,145,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.setConstant(Constant)",0,18,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.toString()",2,5,n/a,6,0,0,4,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.WildcardBinding(ReferenceBinding,int,TypeBinding,int,LookupEnvironment)",3,1,n/a,15,0,5,10,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.boundCheck(TypeBinding)",3,6,n/a,16,1,1,7,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.canBeInstantiated()",0,7,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.collectSubstitutes(TypeBinding,Map)",3,10,n/a,16,2,2,7,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.debugName()",1,25,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.erasure()",3,131,n/a,8,0,0,3,2
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.genericTypeSignature()",4,24,n/a,18,2,0,11,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.hashCode()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.initialize(ReferenceBinding,TypeBinding)",2,2,n/a,11,1,2,7,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isSuperclassOf(ReferenceBinding)",1,20,n/a,13,2,1,5,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isUnboundWildcard()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isWildcard()",0,29,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.kind()",0,30,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.readableName()",4,266,n/a,13,1,0,7,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.resolve()",2,2,n/a,11,1,0,8,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.shortReadableName()",4,254,n/a,13,1,0,7,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.signature()",3,34,n/a,16,2,0,7,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.sourceName()",4,123,n/a,13,1,0,7,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.superInterfaces()",4,58,n/a,21,3,0,10,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.superclass()",4,60,n/a,17,3,0,7,6
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",4,1,n/a,12,1,3,9,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.toString()",9,1,n/a,13,1,0,7,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.typeVariable()",1,7,n/a,11,1,0,5,3
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.AbstractCommentParser(Parser)",1,2,n/a,10,0,1,8,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.commentParse(int,int)",34,2,n/a,192,7,2,137,60
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.consumeToken()",1,23,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.createArgumentReference(char[],int,Object,long[],long)",n/a,2,2,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.createFieldReference(Object)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.createMethodReference(Object,List)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.createReturnStatement()",0,0,n/a,1,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.createTag()",n/a,5,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.createTypeReference(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getIndexPosition()",0,2,n/a,7,1,0,3,2
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getLineNumber(int)",1,2,n/a,32,2,1,19,8
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getTokenEndPosition()",2,4,n/a,7,1,0,3,2
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseArguments(Object)",31,1,n/a,113,4,1,81,32
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseHref()",27,1,n/a,76,9,0,45,27
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseMember(Object)",20,1,n/a,51,3,1,37,13
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseParam()",40,2,n/a,173,4,0,142,58
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseQualifiedName(boolean)",10,3,n/a,68,4,1,52,15
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseReference()",43,7,n/a,134,5,0,105,38
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseTag(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseThrows()",7,4,n/a,18,2,0,10,5
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.peekChar()",4,5,n/a,19,2,0,10,12
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushIdentifier(boolean)",4,7,n/a,30,2,1,12,4
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushOnAstStack(Object,boolean)",2,23,n/a,31,2,2,14,5
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushParamName(boolean)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushSeeRef(Object)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushText(int,int)",n/a,11,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushThrowName(Object)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readChar()",4,26,n/a,23,2,0,11,12
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readToken()",2,21,n/a,18,3,0,10,4
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readTokenAndConsume()",2,3,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.refreshInlineTagPosition(int)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.toString()",14,2,n/a,45,1,0,27,8
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.updateDocComment()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.updateLineEnd()",1,2,n/a,13,2,0,5,3
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.verifyEndLine(int)",9,2,n/a,57,4,1,42,14
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.verifySpaceOrEndComment()",4,4,n/a,44,3,0,27,9
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.JavadocParser(Parser)",1,1,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.checkDeprecation(int,int)",21,4,n/a,71,7,2,42,21
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createArgumentReference(char[],int,Object,long[],long)",4,2,n/a,25,3,5,16,6
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createFieldReference(Object)",4,1,n/a,23,2,1,12,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createMethodReference(Object,List)",12,2,n/a,59,3,2,38,8
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createReturnStatement()",4,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createTag()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createTypeReference(int)",4,1,n/a,22,1,1,12,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseReturn()",5,1,n/a,14,1,0,7,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseTag(int)",29,1,n/a,125,4,1,81,31
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushParamName(boolean)",8,1,n/a,60,5,1,32,12
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushSeeRef(Object)",7,2,n/a,29,2,1,18,6
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushText(int,int)",4,11,n/a,33,4,2,19,11
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushThrowName(Object)",6,1,n/a,28,2,1,17,6
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.toString()",10,2,n/a,7,0,0,5,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.updateDocComment()",3,1,n/a,72,3,0,54,16
"org.eclipse.jdt.internal.compiler.parser.NLSLine.NLSLine()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.add(StringLiteral)",1,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.exists(int)",1,2,n/a,3,0,1,1,2
"org.eclipse.jdt.internal.compiler.parser.NLSLine.get(int)",1,0,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.iterator()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.set(int,StringLiteral)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.size()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSLine.toString()",9,0,n/a,9,1,0,7,2
"org.eclipse.jdt.internal.compiler.parser.Parser.Parser(ProblemReporter,boolean)",2,12,n/a,17,0,2,14,1
"org.eclipse.jdt.internal.compiler.parser.Parser.arrayInitializer(int)",3,4,n/a,14,1,1,7,2
"org.eclipse.jdt.internal.compiler.parser.Parser.asi(int)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.base_check(int)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.blockReal()",0,8,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFile(String,List)",10,1,n/a,9,1,2,7,2
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForCompliance(String,int,String[])",7,1,n/a,30,3,3,24,6
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForName(String,String)",23,1,n/a,46,4,2,38,10
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForReadableName(String,char[],char[],String[],String[])",15,1,n/a,33,3,5,25,7
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForTable(String,byte[])",4,2,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForTable(String,char[])",4,2,n/a,11,1,2,10,2
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileOfByteFor(String,String,String[])",5,3,n/a,18,1,3,11,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileOfIntFor(String,String,String[])",5,15,n/a,18,1,3,11,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileOfShortFor(String,String,String[])",5,1,n/a,17,1,3,10,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFilesFromLPG(String,String)",43,0,n/a,58,1,2,45,5
"org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState()",13,2,n/a,114,5,0,77,25
"org.eclipse.jdt.internal.compiler.parser.Parser.checkAndSetModifiers(int)",0,15,n/a,13,1,1,5,3
"org.eclipse.jdt.internal.compiler.parser.Parser.checkComment()",3,7,n/a,27,3,0,18,15
"org.eclipse.jdt.internal.compiler.parser.Parser.checkNonExternalizedStringLiteral()",2,2,n/a,13,3,0,8,4
"org.eclipse.jdt.internal.compiler.parser.Parser.checkNonNLSAfterBodyEnd(int)",2,3,n/a,11,3,1,5,5
"org.eclipse.jdt.internal.compiler.parser.Parser.classInstanceCreation(boolean)",8,6,n/a,47,2,1,25,8
"org.eclipse.jdt.internal.compiler.parser.Parser.computeQualifiedGenericsFromRightSide(TypeReference,int)",9,3,n/a,56,1,2,50,10
"org.eclipse.jdt.internal.compiler.parser.Parser.concatExpressionLists()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.concatGenericsLists()",0,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.concatNodeLists()",0,13,n/a,15,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBound()",2,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBound1()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBoundList()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBoundList1()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAllocationHeader()",4,1,n/a,27,1,0,19,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationAsModifier()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclaration()",6,2,n/a,23,1,0,13,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclarationHeader()",0,1,n/a,5,1,0,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclarationHeaderName()",8,2,n/a,62,2,0,34,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeMemberDeclaration()",1,1,n/a,11,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeMemberDeclarations()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArgumentList()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArguments()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayAccess(boolean)",3,3,n/a,22,1,1,7,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayCreationExpressionWithInitializer()",4,4,n/a,24,1,0,13,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayCreationExpressionWithoutInitializer()",4,4,n/a,22,1,0,11,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayCreationHeader()",0,2,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayInitializer()",1,2,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayTypeWithTypeArgumentsName()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAssertStatement()",2,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAssignment()",2,3,n/a,17,0,0,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAssignmentOperator(int)",1,13,n/a,15,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBinaryExpression(int)",11,35,n/a,90,4,1,32,12
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBinaryExpressionWithName(int)",13,18,n/a,119,4,1,33,12
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBlock()",5,1,n/a,28,2,0,15,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBlockStatements()",1,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCaseLabel()",2,2,n/a,6,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionLL1()",3,2,n/a,14,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithGenericsArray()",3,1,n/a,12,0,0,9,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithNameArray()",4,1,n/a,12,0,0,8,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithPrimitiveType()",2,1,n/a,11,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithQualifiedGenericsArray()",3,1,n/a,13,0,0,10,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCatchHeader()",2,1,n/a,26,2,0,17,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCatches()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyDeclaration()",2,4,n/a,22,1,0,17,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyDeclarations()",1,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyDeclarationsopt()",0,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyopt()",1,3,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassDeclaration()",8,4,n/a,41,5,0,26,11
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeader()",0,4,n/a,12,1,0,6,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeaderExtends()",1,2,n/a,14,1,0,7,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeaderImplements()",1,2,n/a,23,1,0,12,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeaderName1()",6,2,n/a,53,2,0,30,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpression()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionName()",2,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionQualified()",1,2,n/a,11,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()",9,4,n/a,56,2,0,36,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionWithTypeArguments()",9,3,n/a,50,2,0,31,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassOrInterface()",1,1,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassOrInterfaceName()",2,2,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassTypeElt()",2,2,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassTypeList()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCompilationUnit()",0,2,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConditionalExpression(int)",1,3,n/a,12,0,1,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConditionalExpressionWithName(int)",3,2,n/a,15,0,1,5,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorBlockStatements()",1,0,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorBody()",0,1,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorDeclaration()",7,2,n/a,73,4,0,34,14
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorHeader()",1,3,n/a,19,3,0,11,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorHeaderName()",4,3,n/a,47,2,0,26,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorHeaderNameWithTypeParameters()",5,2,n/a,50,2,0,28,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDefaultLabel()",2,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDefaultModifiers()",5,1,n/a,8,0,0,5,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDiet()",4,2,n/a,7,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDimWithOrWithOutExpr()",1,1,n/a,8,1,0,4,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDimWithOrWithOutExprs()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDims()",1,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyAnnotationTypeMemberDeclarationsopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArgumentListopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArguments()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArrayInitializer()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArrayInitializeropt()",1,0,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyBlockStatementsopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyCatchesopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyClassBodyDeclarationsopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyClassMemberDeclaration()",4,2,n/a,6,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyDimsopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyEnumDeclarations()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyExpression()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyForInitopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyForUpdateopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyInterfaceMemberDeclaration()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyInterfaceMemberDeclarationsopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyInternalCompilationUnit()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyMemberValueArrayInitializer()",1,2,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyMemberValuePairsopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyMethodHeaderDefaultValue()",2,1,n/a,7,1,0,3,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyStatement()",4,2,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptySwitchBlock()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyTypeDeclaration()",4,2,n/a,6,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnhancedForStatement()",0,2,n/a,13,0,0,7,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnhancedForStatementHeader(boolean)",7,2,n/a,52,1,1,29,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterAnonymousClassBody()",8,2,n/a,36,1,0,24,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterAnonymousClassBodySimpleName()",10,2,n/a,38,1,0,26,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterCompilationUnit()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterVariable()",16,3,n/a,115,3,0,66,14
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumBodyNoConstants()",0,2,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumBodyWithConstants()",1,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantHeader()",9,1,n/a,73,4,0,46,10
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantHeaderName()",4,1,n/a,37,2,0,22,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantNoClassBody()",2,2,n/a,12,1,0,7,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantWithClassBody()",2,2,n/a,10,0,0,8,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstants()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumDeclaration()",7,2,n/a,37,4,0,23,10
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumDeclarations()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumHeader()",0,1,n/a,11,1,0,6,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumHeaderName()",7,1,n/a,60,2,0,30,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEqualityExpression(int)",1,5,n/a,12,0,1,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEqualityExpressionWithName(int)",3,3,n/a,15,0,1,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitTryBlock()",0,1,n/a,6,1,0,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitVariableWithInitialization()",1,5,n/a,12,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitVariableWithoutInitialization()",2,3,n/a,12,2,0,6,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExplicitConstructorInvocation(int,int)",4,8,n/a,34,1,2,19,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExplicitConstructorInvocationWithTypeArguments(int,int)",5,7,n/a,38,1,2,23,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExpressionStatement()",1,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFieldAccess(boolean)",4,6,n/a,22,2,1,9,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFieldDeclaration()",3,2,n/a,50,3,0,26,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeForInit()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeForceNoDiet()",0,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFormalParameter(boolean)",9,4,n/a,62,2,1,29,9
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFormalParameterList()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFormalParameterListopt()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericType()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericTypeArrayType()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericTypeNameArrayType()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeImportDeclaration()",2,4,n/a,16,1,0,8,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeImportDeclarations()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpression()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpressionLL1()",2,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpressionWithQualifiedGenerics()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInstanceOfExpression(int)",2,4,n/a,16,1,1,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInstanceOfExpressionWithName(int)",4,3,n/a,21,1,1,6,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceDeclaration()",6,3,n/a,25,1,0,13,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceHeader()",0,4,n/a,12,1,0,6,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceHeaderExtends()",1,2,n/a,22,1,0,12,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceHeaderName1()",6,2,n/a,53,2,0,30,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceMemberDeclarations()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceMemberDeclarationsopt()",0,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceType()",2,2,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceTypeList()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInternalCompilationUnit()",0,3,n/a,5,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInternalCompilationUnitWithTypes()",1,5,n/a,12,1,0,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInvalidConstructorDeclaration()",1,1,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLeftParen()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLocalVariableDeclaration()",1,4,n/a,26,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLocalVariableDeclarationStatement()",0,3,n/a,13,1,0,8,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMarkerAnnotation()",8,2,n/a,36,1,0,21,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValueArrayInitializer()",1,2,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValueAsName()",2,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValuePair()",2,2,n/a,12,0,0,9,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValuePairs()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValues()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodBody()",0,3,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodDeclaration(boolean)",3,4,n/a,52,3,1,20,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeader()",1,6,n/a,29,3,0,11,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderDefaultValue()",3,1,n/a,19,2,0,12,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderExtendedDims()",4,2,n/a,33,2,0,21,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderName(boolean)",8,5,n/a,53,2,1,27,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderNameWithTypeParameters(boolean)",9,4,n/a,56,2,1,29,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderRightParen()",4,3,n/a,32,3,0,16,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderThrowsClause()",1,2,n/a,19,1,0,9,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationName()",4,5,n/a,18,1,0,11,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationNameWithTypeArguments()",4,4,n/a,18,0,0,12,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationPrimary()",1,4,n/a,13,0,0,8,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationPrimaryWithTypeArguments()",2,4,n/a,18,0,0,12,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationSuper()",3,4,n/a,11,0,0,8,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationSuperWithTypeArguments()",4,4,n/a,16,0,0,12,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeModifiers()",4,2,n/a,10,1,0,7,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeModifiers2()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNameArrayType()",2,1,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNestedMethod()",3,2,n/a,7,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNestedType()",2,1,n/a,17,1,0,6,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNormalAnnotation()",9,2,n/a,44,1,0,23,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOneDimLoop()",0,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOnlySynchronized()",2,1,n/a,6,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOnlyTypeArguments()",2,2,n/a,9,1,0,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOnlyTypeArgumentsForCastExpression()",0,2,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOpenBlock()",2,3,n/a,12,1,0,5,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageDeclaration()",1,1,n/a,9,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageDeclarationName()",3,3,n/a,33,1,0,17,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageDeclarationNameWithModifiers()",4,3,n/a,46,1,0,23,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePostfixExpression()",2,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArray()",1,1,n/a,8,0,0,5,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayArrayType()",5,1,n/a,8,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayName()",5,2,n/a,10,0,0,5,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayNameSuper()",5,1,n/a,12,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayNameThis()",5,1,n/a,12,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayPrimitiveArrayType()",3,1,n/a,6,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayPrimitiveType()",3,1,n/a,6,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayThis()",2,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayWithName()",3,1,n/a,9,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimitiveArrayType()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimitiveType()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushLeftBrace()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushModifiers()",4,1,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushModifiersForHeader()",5,1,n/a,7,0,0,5,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushPosition()",1,2,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushRealModifiers()",4,1,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeQualifiedName()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecoveryMethodHeaderName()",2,1,n/a,13,2,0,7,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecoveryMethodHeaderNameWithTypeParameters()",2,1,n/a,13,2,0,7,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReduceImports()",1,1,n/a,13,1,0,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType1()",2,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType2()",2,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType3()",2,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRestoreDiet()",0,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRightParen()",1,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(int)",808,1,n/a,1.219,2,1,2.021,809
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSimpleAssertStatement()",2,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleMemberAnnotation()",8,2,n/a,38,1,0,23,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleStaticImportDeclarationName()",7,5,n/a,35,1,0,23,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleTypeImportDeclarationName()",5,5,n/a,28,1,0,18,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementBreak()",2,2,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementBreakWithLabel()",2,2,n/a,10,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementCatch()",0,2,n/a,10,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementContinue()",2,2,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementContinueWithLabel()",2,2,n/a,10,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementDo()",1,2,n/a,13,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementExpressionList()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementFor()",5,3,n/a,59,2,0,23,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementIfNoElse()",1,2,n/a,12,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementIfWithElse()",1,3,n/a,15,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementLabel()",1,3,n/a,13,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementReturn()",4,2,n/a,14,1,0,3,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementSwitch()",4,3,n/a,27,1,0,14,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementSynchronized()",3,2,n/a,23,1,0,7,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementThrow()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementTry(boolean)",2,3,n/a,32,3,1,19,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementWhile()",1,3,n/a,12,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStaticImportOnDemandDeclarationName()",7,5,n/a,35,1,0,23,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStaticInitializer()",3,3,n/a,24,1,0,17,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStaticOnly()",5,2,n/a,18,1,0,11,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchBlock()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchBlockStatement()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchBlockStatements()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchLabels()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeToken(int)",96,3,n/a,316,2,1,210,52
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgument()",2,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList1()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList2()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList3()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentReferenceType1()",3,2,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentReferenceType2()",3,2,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArguments()",3,2,n/a,11,1,0,5,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeDeclarations()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeHeaderNameWithTypeParameters()",1,2,n/a,14,1,0,8,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeImportOnDemandDeclarationName()",5,5,n/a,28,1,0,18,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameter1()",0,2,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameter1WithExtends()",0,2,n/a,10,0,0,7,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameter1WithExtendsAndBounds()",2,2,n/a,16,1,0,14,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterHeader()",2,1,n/a,15,0,0,12,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterList()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterList1()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterWithExtends()",1,2,n/a,8,0,0,5,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterWithExtendsAndBounds()",2,2,n/a,16,1,0,14,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameters()",2,2,n/a,10,1,0,4,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeUnaryExpression(int)",6,9,n/a,28,3,1,10,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeUnaryExpression(int,boolean)",4,6,n/a,32,2,2,8,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeVariableDeclarators()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeVariableInitializers()",1,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard()",2,1,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard1()",2,2,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard1WithBounds()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard2()",2,2,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard2WithBounds()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard3()",2,2,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard3WithBounds()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds1Extends()",1,2,n/a,8,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds1Super()",1,1,n/a,9,0,0,7,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds2Extends()",1,2,n/a,8,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds2Super()",1,1,n/a,9,0,0,7,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds3Extends()",1,2,n/a,8,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds3Super()",1,1,n/a,9,0,0,7,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBoundsExtends()",3,2,n/a,8,0,0,6,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBoundsSuper()",3,1,n/a,9,0,0,7,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardWithBounds()",0,1,n/a,4,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.Parser.containsComment(int,int)",0,18,n/a,19,1,2,10,4
"org.eclipse.jdt.internal.compiler.parser.Parser.convertToMethodDeclaration(ConstructorDeclaration,CompilationResult)",1,2,n/a,19,0,2,17,1
"org.eclipse.jdt.internal.compiler.parser.Parser.copyDims(TypeReference,int)",1,6,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.createFieldDeclaration(char[],int,int)",1,3,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.createLocalDeclaration(char[],int,int)",1,4,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.currentRecoveryType()",1,3,n/a,10,2,0,5,3
"org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(ICompilationUnit,CompilationResult)",1,15,n/a,12,1,2,7,1
"org.eclipse.jdt.internal.compiler.parser.Parser.dispatchDeclarationInto(int)",4,9,n/a,86,3,1,54,17
"org.eclipse.jdt.internal.compiler.parser.Parser.dispatchDeclarationIntoEnumDeclaration(int)",4,1,n/a,85,3,1,55,18
"org.eclipse.jdt.internal.compiler.parser.Parser.endParse(int)",18,4,n/a,29,2,1,19,6
"org.eclipse.jdt.internal.compiler.parser.Parser.flushCommentsDefinedPriorTo(int)",4,32,n/a,37,3,1,28,10
"org.eclipse.jdt.internal.compiler.parser.Parser.getFirstToken()",0,3,n/a,28,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.getJavaDocPositions()",0,8,n/a,28,2,0,17,6
"org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(CompilationUnitDeclaration)",4,6,n/a,32,1,1,21,8
"org.eclipse.jdt.internal.compiler.parser.Parser.getNextCharacter(char[],int[])",4,0,n/a,18,2,2,11,11
"org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Expression)",0,2,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(int)",8,48,n/a,58,3,1,29,8
"org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(int,int,int)",6,3,n/a,43,3,3,32,9
"org.eclipse.jdt.internal.compiler.parser.Parser.getUnspecifiedReference()",4,7,n/a,26,1,0,11,2
"org.eclipse.jdt.internal.compiler.parser.Parser.getUnspecifiedReferenceOptimized()",4,15,n/a,38,1,0,16,2
"org.eclipse.jdt.internal.compiler.parser.Parser.goForBlockStatementsOrCatchHeader()",0,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForBlockStatementsopt()",0,4,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForClassBodyDeclarations()",0,4,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForCompilationUnit()",0,3,n/a,7,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForExpression()",0,3,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForFieldDeclaration()",0,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForGenericMethodDeclaration()",0,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForHeaders()",1,2,n/a,10,1,0,5,3
"org.eclipse.jdt.internal.compiler.parser.Parser.goForImportDeclaration()",0,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForInitializer()",0,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForMemberValue()",0,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForMethodBody()",0,0,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForPackageDeclaration()",0,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForTypeDeclaration()",0,1,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreExpressionAssignment()",2,2,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreInterfaceDeclaration()",7,1,n/a,22,1,0,11,2
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreInvalidConstructorDeclaration(boolean)",1,2,n/a,29,1,1,12,6
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreMethodBody()",3,1,n/a,27,1,0,9,2
"org.eclipse.jdt.internal.compiler.parser.Parser.in_symbol(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.initTables()",22,1,n/a,31,1,0,29,2
"org.eclipse.jdt.internal.compiler.parser.Parser.initialize()",3,12,n/a,58,1,0,46,3
"org.eclipse.jdt.internal.compiler.parser.Parser.initializeScanner()",2,1,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.jumpOverMethodBody()",0,4,n/a,8,0,0,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.markEnclosingMemberWithLocalType()",0,12,n/a,17,2,0,11,8
"org.eclipse.jdt.internal.compiler.parser.Parser.markInitializersWithLocalType(TypeDeclaration)",0,9,n/a,9,2,1,8,5
"org.eclipse.jdt.internal.compiler.parser.Parser.moveRecoveryCheckpoint()",1,2,n/a,106,3,0,28,7
"org.eclipse.jdt.internal.compiler.parser.Parser.nasi(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.newMessageSend()",2,4,n/a,16,1,0,6,2
"org.eclipse.jdt.internal.compiler.parser.Parser.newMessageSendWithTypeArguments()",2,4,n/a,14,1,0,6,2
"org.eclipse.jdt.internal.compiler.parser.Parser.ntAction(int,int)",0,17,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.optimizedConcatNodeLists()",0,7,n/a,18,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.original_state(int)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.parse()",24,21,n/a,86,5,0,66,22
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ConstructorDeclaration,CompilationUnitDeclaration)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ConstructorDeclaration,CompilationUnitDeclaration,boolean)",12,2,n/a,61,2,3,32,8
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(FieldDeclaration,TypeDeclaration,CompilationUnitDeclaration,char[])",5,1,n/a,30,1,4,16,4
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ICompilationUnit,CompilationResult)",1,7,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ICompilationUnit,CompilationResult,int,int)",9,4,n/a,38,3,4,19,6
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(Initializer,TypeDeclaration,CompilationUnitDeclaration)",8,2,n/a,41,2,3,22,6
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(MethodDeclaration,CompilationUnitDeclaration)",10,2,n/a,45,2,2,26,8
"org.eclipse.jdt.internal.compiler.parser.Parser.parseClassBodyDeclarations(char[],int,int,CompilationUnitDeclaration)",8,1,n/a,34,1,4,22,6
"org.eclipse.jdt.internal.compiler.parser.Parser.parseExpression(char[],int,int,CompilationUnitDeclaration)",5,1,n/a,20,1,4,14,3
"org.eclipse.jdt.internal.compiler.parser.Parser.parseMemberValue(char[],int,int,CompilationUnitDeclaration)",5,1,n/a,20,1,4,14,3
"org.eclipse.jdt.internal.compiler.parser.Parser.persistLineSeparatorPositions()",1,1,n/a,5,1,0,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.problemReporter()",1,68,n/a,14,1,0,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushIdentifier()",4,8,n/a,27,1,0,10,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushIdentifier(int)",1,9,n/a,14,1,1,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnAstLengthStack(int)",1,15,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnAstStack(ASTNode)",2,72,n/a,21,1,1,9,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnExpressionStack(Expression)",2,64,n/a,18,1,1,8,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnExpressionStackLengthStack(int)",1,22,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnGenericsIdentifiersLengthStack(int)",1,20,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnGenericsLengthStack(int)",1,21,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnGenericsStack(ASTNode)",2,15,n/a,20,1,1,8,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnIntStack(int)",1,78,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnRealBlockStack(int)",1,3,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.compiler.parser.Parser.readByteTable(String)",6,3,n/a,19,2,1,10,3
"org.eclipse.jdt.internal.compiler.parser.Parser.readLongTable(String)",8,1,n/a,40,2,1,20,6
"org.eclipse.jdt.internal.compiler.parser.Parser.readNameTable(String)",3,1,n/a,10,1,1,9,2
"org.eclipse.jdt.internal.compiler.parser.Parser.readReadableNameTable(String)",7,1,n/a,26,3,1,20,7
"org.eclipse.jdt.internal.compiler.parser.Parser.readTable(String)",8,17,n/a,32,2,1,20,6
"org.eclipse.jdt.internal.compiler.parser.Parser.recoveryExitFromVariable()",2,4,n/a,14,2,0,9,6
"org.eclipse.jdt.internal.compiler.parser.Parser.recoveryTokenCheck()",4,6,n/a,49,3,0,30,11
"org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrors(boolean,int)",8,2,n/a,24,2,2,17,5
"org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrorsForSkippedMethod(TypeDeclaration[])",8,2,n/a,38,6,1,30,12
"org.eclipse.jdt.internal.compiler.parser.Parser.resetModifiers()",0,13,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Parser.resetStacks()",0,4,n/a,24,0,0,19,2
"org.eclipse.jdt.internal.compiler.parser.Parser.resumeAfterRecovery()",3,1,n/a,23,1,0,8,3
"org.eclipse.jdt.internal.compiler.parser.Parser.resumeOnSyntaxError()",3,1,n/a,19,1,0,9,4
"org.eclipse.jdt.internal.compiler.parser.Parser.tAction(int,int)",0,16,n/a,3,0,2,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.toString()",6,3,n/a,43,1,0,48,8
"org.eclipse.jdt.internal.compiler.parser.Parser.updateRecoveryState()",2,1,n/a,12,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.Parser.updateSourceDeclarationParts(int)",0,1,n/a,18,1,1,10,2
"org.eclipse.jdt.internal.compiler.parser.Parser.updateSourcePosition(Expression)",0,3,n/a,8,0,1,2,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.RecoveredBlock(Block,RecoveredElement,int)",1,3,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(Block,int)",4,12,n/a,20,1,2,10,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(FieldDeclaration,int)",7,26,n/a,24,1,2,7,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(LocalDeclaration,int)",1,10,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(LocalDeclaration,int,boolean)",3,2,n/a,35,1,3,12,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(Statement,int)",1,21,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(Statement,int,boolean)",3,2,n/a,16,1,3,9,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(TypeDeclaration,int)",1,24,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(TypeDeclaration,int,boolean)",3,2,n/a,16,1,3,9,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.attach(RecoveredStatement)",1,5,n/a,19,2,1,6,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.parseTree()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.toString(int)",8,4,n/a,12,2,1,10,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateOnClosingBrace(int,int)",5,7,n/a,20,2,2,10,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateOnOpeningBrace(int,int)",3,5,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateParseTree()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateStatement()",2,0,n/a,25,2,0,17,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updatedBlock()",2,4,n/a,25,2,0,17,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updatedStatement()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.RecoveredElement(RecoveredElement,int)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.RecoveredElement(RecoveredElement,int,Parser)",0,4,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(AbstractMethodDeclaration,int)",3,14,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(Block,int)",3,11,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(FieldDeclaration,int)",3,26,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(ImportReference,int)",3,15,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(LocalDeclaration,int)",3,10,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(Statement,int)",3,21,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(TypeDeclaration,int)",3,24,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.depth()",0,0,n/a,9,0,0,5,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.enclosingInitializer()",0,1,n/a,13,2,0,6,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.enclosingMethod()",0,5,n/a,13,2,0,6,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.enclosingType()",0,5,n/a,13,2,0,6,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.parseTree()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.parser()",0,18,n/a,13,2,0,6,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.preserveEnclosingBlocks()",0,3,n/a,15,2,0,7,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.previousAvailableLineEnd(int)",2,11,n/a,19,1,1,17,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.sourceEnd()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.tabString(int)",3,11,n/a,7,1,1,6,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.toString(int)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.topElement()",0,2,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.type()",0,0,n/a,13,2,0,6,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateBodyStart(int)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateFromParserState()",0,3,n/a,7,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateOnClosingBrace(int,int)",1,7,n/a,11,1,2,4,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateOnOpeningBrace(int,int)",1,5,n/a,12,1,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateParseTree()",0,1,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateSourceEndIfNecessary(int)",1,17,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateSourceEndIfNecessary(int,int)",0,2,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.RecoveredField(FieldDeclaration,RecoveredElement,int)",1,1,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.RecoveredField(FieldDeclaration,RecoveredElement,int,Parser)",1,2,n/a,5,0,4,3,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.add(Statement,int)",1,21,n/a,15,1,2,7,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.add(TypeDeclaration,int)",3,24,n/a,31,3,2,10,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.parseTree()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.sourceEnd()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.toString(int)",8,2,n/a,12,2,1,10,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateOnClosingBrace(int,int)",4,7,n/a,27,3,2,14,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateOnOpeningBrace(int,int)",3,5,n/a,20,1,2,8,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateParseTree()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateSourceEndIfNecessary(int,int)",0,3,n/a,9,1,2,3,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updatedFieldDeclaration()",3,2,n/a,20,4,0,16,9
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.RecoveredImport(ImportReference,RecoveredElement,int)",1,1,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.parseTree()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.sourceEnd()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.toString(int)",2,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.updateParseTree()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.updateSourceEndIfNecessary(int,int)",0,2,n/a,9,1,2,3,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.updatedImportReference()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.RecoveredInitializer(FieldDeclaration,RecoveredElement,int)",1,1,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.RecoveredInitializer(FieldDeclaration,RecoveredElement,int,Parser)",1,3,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(Block,int)",2,14,n/a,22,1,2,11,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(FieldDeclaration,int)",7,26,n/a,26,1,2,11,9
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(LocalDeclaration,int)",4,10,n/a,17,1,2,8,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(Statement,int)",4,21,n/a,17,1,2,8,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(TypeDeclaration,int)",6,24,n/a,37,2,2,20,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.toString(int)",8,2,n/a,10,1,1,7,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updateOnClosingBrace(int,int)",1,7,n/a,11,1,2,4,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updateOnOpeningBrace(int,int)",0,5,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updateSourceEndIfNecessary(int,int)",5,4,n/a,26,3,2,13,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updatedFieldDeclaration()",1,2,n/a,13,2,0,9,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.RecoveredLocalVariable(LocalDeclaration,RecoveredElement,int)",1,1,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.add(Statement,int)",1,21,n/a,14,1,2,7,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.parseTree()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.sourceEnd()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.toString(int)",3,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateOnClosingBrace(int,int)",1,7,n/a,17,1,2,8,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateOnOpeningBrace(int,int)",2,5,n/a,15,1,2,5,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateParseTree()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateSourceEndIfNecessary(int,int)",0,4,n/a,9,1,2,3,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updatedStatement()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.RecoveredMethod(AbstractMethodDeclaration,RecoveredElement,int,Parser)",2,3,n/a,8,1,4,5,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(Block,int)",2,14,n/a,26,2,2,11,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(FieldDeclaration,int)",7,26,n/a,38,2,2,14,10
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(LocalDeclaration,int)",7,10,n/a,43,3,2,16,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(Statement,int)",7,21,n/a,28,3,2,16,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(TypeDeclaration,int)",10,25,n/a,48,2,2,26,11
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.bodyStartsAtHeaderEnd()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.parseTree()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.sourceEnd()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.toString(int)",11,2,n/a,16,2,1,13,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateBodyStart(int)",0,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateFromParserState()",7,3,n/a,90,7,0,58,25
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateOnClosingBrace(int,int)",4,7,n/a,10,2,2,6,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateOnOpeningBrace(int,int)",2,5,n/a,22,2,2,9,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateParseTree()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateSourceEndIfNecessary(int,int)",3,3,n/a,14,2,2,6,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updatedMethodDeclaration()",4,2,n/a,28,4,0,15,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.RecoveredStatement(Statement,RecoveredElement,int)",1,4,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.parseTree()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.sourceEnd()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.toString(int)",3,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updateParseTree()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updateSourceEndIfNecessary(int,int)",0,3,n/a,7,0,2,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updatedStatement()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.RecoveredType(TypeDeclaration,RecoveredElement,int)",3,6,n/a,9,1,3,6,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(AbstractMethodDeclaration,int)",3,15,n/a,32,2,2,16,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(Block,int)",3,11,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(FieldDeclaration,int)",5,30,n/a,43,2,2,25,10
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(TypeDeclaration,int)",4,25,n/a,45,2,2,24,9
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.bodyEnd()",0,3,n/a,7,0,0,3,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.bodyStartsAtHeaderEnd()",0,2,n/a,16,3,0,7,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.enclosingType()",0,5,n/a,13,2,0,6,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.name()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.parseTree()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.sourceEnd()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.toString(int)",17,6,n/a,28,2,1,25,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateBodyStart(int)",0,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateFromParserState()",4,3,n/a,55,5,0,36,18
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateOnClosingBrace(int,int)",1,7,n/a,12,1,2,5,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateOnOpeningBrace(int,int)",7,5,n/a,42,2,2,26,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateParseTree()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateSourceEndIfNecessary(int,int)",0,4,n/a,10,1,2,4,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updatedStatement()",1,3,n/a,12,1,0,6,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updatedTypeDeclaration()",24,6,n/a,118,4,0,96,39
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.RecoveredUnit(CompilationUnitDeclaration,int,Parser)",1,1,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(AbstractMethodDeclaration,int)",4,14,n/a,24,2,2,16,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(FieldDeclaration,int)",1,26,n/a,14,1,2,7,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(ImportReference,int)",2,15,n/a,20,2,2,10,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(TypeDeclaration,int)",3,24,n/a,31,2,2,18,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.parseTree()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.sourceEnd()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.toString(int)",14,1,n/a,20,2,1,18,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.updateParseTree()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.updateSourceEndIfNecessary(int,int)",0,2,n/a,7,0,2,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.updatedCompilationUnitDeclaration()",4,1,n/a,41,3,0,26,10
"org.eclipse.jdt.internal.compiler.parser.Scanner.Scanner()",1,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.Scanner(boolean,boolean,boolean,long,char[][],char[][],boolean)",0,20,n/a,17,0,7,8,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.atEnd()",0,3,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.checkNonExternalizedString()",1,4,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.checkTaskTag(int,int)",13,6,n/a,111,6,2,90,38
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentIdentifierSource()",8,11,n/a,33,2,0,21,9
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenEndPosition()",0,46,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenSource()",2,48,n/a,22,1,0,6,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenSourceString()",2,3,n/a,20,1,0,6,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenStartPosition()",0,61,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineEnd(int)",0,3,n/a,19,0,1,9,5
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineEnds()",1,4,n/a,6,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineNumber(int)",0,42,n/a,28,2,1,17,7
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineStart(int)",0,1,n/a,24,0,1,9,5
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextChar()",7,4,n/a,41,3,0,21,15
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextChar(char)",7,32,n/a,64,3,1,34,18
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextChar(char,char)",7,39,n/a,71,3,2,37,20
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsDigit()",9,11,n/a,59,3,0,30,18
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsDigit(int)",9,2,n/a,59,3,1,30,18
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsJavaIdentifierPart()",9,2,n/a,59,3,0,30,18
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextToken()",96,90,n/a,641,10,0,412,211
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextUnicodeChar()",8,29,n/a,40,3,0,15,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.getRawTokenSource()",1,18,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getRawTokenSourceEnd()",1,1,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getSource()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.isDigit(char)",2,11,n/a,20,2,1,15,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.jumpOverMethodBody()",43,2,n/a,341,10,0,180,117
"org.eclipse.jdt.internal.compiler.parser.Scanner.jumpOverUnicodeWhiteSpace()",8,3,n/a,34,2,0,17,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource1()",0,1,n/a,61,1,0,56,28
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource2()",0,1,n/a,28,1,0,20,8
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource3()",0,1,n/a,30,1,0,20,10
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource4()",0,1,n/a,37,1,0,20,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource5()",0,1,n/a,40,1,0,20,14
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource6()",0,1,n/a,43,1,0,20,16
"org.eclipse.jdt.internal.compiler.parser.Scanner.parseTags(NLSLine)",14,1,n/a,40,3,1,30,9
"org.eclipse.jdt.internal.compiler.parser.Scanner.pushLineSeparator()",2,12,n/a,51,3,0,29,14
"org.eclipse.jdt.internal.compiler.parser.Scanner.pushUnicodeLineSeparator()",0,7,n/a,19,2,0,8,5
"org.eclipse.jdt.internal.compiler.parser.Scanner.recordComment(int)",2,11,n/a,21,1,1,14,4
"org.eclipse.jdt.internal.compiler.parser.Scanner.resetTo(int,int)",0,118,n/a,19,0,2,5,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanEscapeCharacter()",9,6,n/a,79,7,0,54,24
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanIdentifierOrKeyword()",1,4,n/a,557,4,0,291,328
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanNumber(boolean)",64,4,n/a,211,7,1,131,83
"org.eclipse.jdt.internal.compiler.parser.Scanner.setSource(CompilationResult)",2,9,n/a,13,1,1,6,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.setSource(char[])",0,42,n/a,16,1,1,11,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.toString()",8,1,n/a,33,1,0,15,4
"org.eclipse.jdt.internal.compiler.parser.Scanner.toStringAction(int)",14,0,n/a,210,1,1,207,104
"org.eclipse.jdt.internal.compiler.parser.Scanner.unicodeInitializeBuffer(int)",2,10,n/a,9,1,1,7,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.unicodeStoreAt(int)",1,41,n/a,8,1,1,6,3
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.SourceTypeConverter(int,ProblemReporter)",0,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.buildCompilationUnit(ISourceType[],int,ProblemReporter,CompilationResult)",2,9,n/a,21,1,4,4,2
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(ISourceType[],CompilationResult)",22,1,n/a,47,1,2,28,8
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(InitializerElementInfo,CompilationResult)",8,1,n/a,34,3,2,26,4
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceField,TypeDeclaration,CompilationResult)",18,1,n/a,57,3,3,43,8
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceMethod,CompilationResult)",30,1,n/a,114,5,2,83,19
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceType,CompilationResult)",35,5,n/a,140,5,2,112,38
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convertAnnotations(JavaElement)",4,3,n/a,17,1,1,18,4
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.createImportReference(char[],int,int,boolean,int)",2,2,n/a,21,1,5,8,2
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.createTypeParameter(char[],char[][],int,int)",3,2,n/a,21,4,4,17,5
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.createTypeReference(char[],int,int)",1,8,n/a,12,0,3,4,1
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.decodeType(char[],int,int,int)",27,4,n/a,154,6,4,135,35
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.decodeTypeArguments(char[],int,int,int)",4,1,n/a,17,2,4,15,4
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.getSource()",1,2,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.parseMemberValue(char[])",2,2,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.DiagnoseParser(Parser,int,int,int,CompilerOptions)",1,4,n/a,3,0,5,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.DiagnoseParser(Parser,int,int,int,int[],int[],int[],CompilerOptions)",1,2,n/a,5,0,8,3,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.PrimaryRepairInfo.PrimaryRepairInfo()",0,5,n/a,7,0,0,5,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.PrimaryRepairInfo.copy()",1,3,n/a,9,0,0,7,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.RepairCandidate.RepairCandidate()",0,4,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.StateInfo.StateInfo(int,int)",0,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.checkPrimaryDistance(int[],int,PrimaryRepairInfo)",25,3,n/a,203,4,3,124,51
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.diagnoseParse()",28,5,n/a,198,5,0,114,31
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.errorRecovery(int,boolean)",15,1,n/a,85,2,2,42,9
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.getNtermIndex(int,int,int)",6,5,n/a,43,2,3,19,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.getTermIndex(int[],int,int,int)",9,2,n/a,100,3,4,34,13
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.isBetterSymbol(int,int)",0,2,n/a,10,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.mergeCandidate(int,int)",7,1,n/a,23,3,2,13,4
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.misplacementRecovery(int[],int,int,SecondaryRepairInfo,boolean)",2,2,n/a,26,2,5,17,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.misspell(int,int)",4,1,n/a,105,3,2,55,36
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.parseCheck(int[],int,int,int)",50,11,n/a,142,4,4,104,28
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.primaryDiagnosis(PrimaryRepairInfo)",19,1,n/a,118,3,1,64,16
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.primaryPhase(int)",13,1,n/a,120,2,1,54,25
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.problemReporter()",1,20,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reallocateStacks()",8,4,n/a,24,1,0,20,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportError(int,int,int,int)",1,10,n/a,3,0,4,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportError(int,int,int,int,int)",2,5,n/a,8,1,5,4,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportPrimaryError(int,int,int,int)",38,1,n/a,123,2,4,53,17
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportSecondaryError(int,int,int,int,int)",26,1,n/a,82,4,5,47,17
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.scopeTrial(int[],int,PrimaryRepairInfo)",1,4,n/a,13,0,3,13,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.scopeTrialCheck(int[],int,PrimaryRepairInfo,int)",13,2,n/a,147,6,4,76,29
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryCheck(int[],int,int,int)",4,2,n/a,27,1,4,14,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryDiagnosis(SecondaryRepairInfo)",6,1,n/a,47,3,1,15,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryPhase(int)",36,2,n/a,199,3,1,130,32
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryRecovery(int[],int,int,SecondaryRepairInfo,boolean)",4,2,n/a,57,5,5,42,18
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.toString()",4,0,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.LexStream(int,Scanner,int[],int[],int[],int,int,int)",2,1,n/a,16,0,8,14,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.Token.toString()",12,0,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.afterEol(int)",2,3,n/a,3,0,1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.badtoken()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.end(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.flags(int)",1,0,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.getToken()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.isInsideStream(int)",0,1,n/a,11,1,1,7,5
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.kind(int)",1,26,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.line(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.name(int)",1,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.next(int)",0,10,n/a,3,0,1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.previous(int)",0,10,n/a,3,0,1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.readTokenFromScanner()",12,1,n/a,45,6,0,34,8
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.reset()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.reset(int)",1,16,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.start(int)",1,14,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.toString()",36,1,n/a,53,3,0,41,7
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.token(int)",3,8,n/a,21,2,1,15,7
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.RangeResult()",0,1,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.addInterval(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.addInterval(int,int,int)",3,4,n/a,11,1,3,8,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.compare(int,int)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.getRanges()",4,1,n/a,12,1,0,9,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.quickSort(int[],int[],int[],int,int)",4,3,n/a,32,2,5,24,7
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.computeDietRange(TypeDeclaration[])",3,1,n/a,9,1,1,5,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.computeDietRange0(TypeDeclaration[],RangeResult)",7,2,n/a,42,5,2,31,14
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.containsErrorInSignature(AbstractMethodDeclaration)",0,1,n/a,3,0,1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.containsIgnoredBody(AbstractMethodDeclaration)",2,1,n/a,5,0,1,1,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.getPreviousInterval(int,int,int[],int[])",0,1,n/a,9,2,4,7,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.isInInterval(int,int,int[],int[])",0,1,n/a,11,2,4,9,5
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation()",0,3,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation(CompilationResult,IProblem)",1,4,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation(CompilationResult,Throwable)",1,0,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation(boolean,RuntimeException)",1,1,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.updateContext(ASTNode,CompilationResult)",9,4,n/a,8,0,2,8,4
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.updateContext(InvocationSite,CompilationResult)",9,4,n/a,8,0,2,8,4
"org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit.AbortCompilationUnit(CompilationResult,IProblem)",1,4,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortMethod.AbortMethod(CompilationResult,IProblem)",1,8,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortType.AbortType(CompilationResult,IProblem)",1,6,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.DefaultProblem(char[],String,int,String[],int,int,int,int)",0,1,n/a,18,0,8,8,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.errorReportSource(char[])",13,1,n/a,43,1,1,33,18
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getArguments()",0,5,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getID()",0,22,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getMessage()",0,16,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getOriginatingFileName()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceEnd()",0,19,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceLineNumber()",0,15,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceStart()",0,27,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.isError()",0,20,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.isWarning()",0,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setOriginatingFileName(char[])",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setSourceEnd(int)",0,11,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setSourceLineNumber(int)",0,12,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setSourceStart(int)",0,11,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.toString()",0,0,n/a,11,1,0,9,4
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.DefaultProblemFactory()",2,12,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.DefaultProblemFactory(Locale)",4,11,n/a,14,2,1,6,3
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.createProblem(char[],int,String[],String[],int,int,int,int)",2,7,n/a,41,0,8,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.getLocale()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.getLocalizedMessage(int,String[])",22,2,n/a,53,4,2,35,12
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.keyFromID(int)",0,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.loadMessageTemplates(Locale)",11,2,n/a,30,2,1,14,5
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.localizedMessage(IProblem)",3,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.ProblemHandler(IErrorHandlingPolicy,CompilerOptions,IProblemFactory)",0,1,n/a,11,0,3,3,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.computeSeverity(int)",0,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.createProblem(char[],int,String[],String[],int,int,int,int)",1,4,n/a,19,0,8,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.handle(int,String[],String[],int,int,ReferenceContext,CompilationResult)",2,5,n/a,22,0,7,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.handle(int,String[],String[],int,int,int,ReferenceContext,CompilationResult)",10,2,n/a,49,2,8,21,10
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.record(IProblem,CompilationResult,ReferenceContext)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.searchLineNumber(int[],int)",0,3,n/a,26,2,2,17,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.ProblemReporter(IErrorHandlingPolicy,CompilerOptions,IProblemFactory)",1,16,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abortDueToInternalError(String)",1,3,n/a,10,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abortDueToInternalError(String,ASTNode)",1,3,n/a,10,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodCannotBeOverridden(SourceTypeBinding,MethodBinding)",15,2,n/a,21,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodInAbstractClass(SourceTypeBinding,AbstractMethodDeclaration)",4,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodMustBeImplemented(SourceTypeBinding,MethodBinding)",17,4,n/a,20,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodNeedingNoBody(AbstractMethodDeclaration)",2,1,n/a,10,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.alreadyDefinedLabel(char[],ASTNode)",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationCannotOverrideMethod(MethodBinding,MethodBinding)",16,1,n/a,17,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationCircularity(TypeBinding,TypeBinding,TypeReference)",14,1,n/a,16,0,3,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationFieldNeedConstantInitialization(FieldDeclaration)",6,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationMembersCannotHaveParameters(AnnotationMethodDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationMembersCannotHaveTypeParameters(AnnotationMethodDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeDeclarationCannotHaveConstructor(ConstructorDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeDeclarationCannotHaveSuperclass(TypeDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeDeclarationCannotHaveSuperinterfaces(TypeDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationValueMustBeClassLiteral(TypeBinding,char[],Expression)",6,2,n/a,9,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationValueMustBeConstant(TypeBinding,char[],Expression)",6,2,n/a,9,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.anonymousClassCannotExtendFinalClass(Expression,TypeBinding)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.argumentTypeCannotBeVoid(SourceTypeBinding,AbstractMethodDeclaration,Argument)",3,1,n/a,9,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.argumentTypeCannotBeVoidArray(SourceTypeBinding,AbstractMethodDeclaration,Argument)",3,1,n/a,9,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.arrayConstantsOnlyInArrayInitializers(int,int)",1,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.assignmentHasNoEffect(Assignment,char[])",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.attemptToReturnNonVoidExpression(ReturnStatement,TypeBinding)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.attemptToReturnVoidValue(ReturnStatement)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.boundHasConflictingArguments(ASTNode,TypeBinding)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.boundsMustBeAnInterface(ASTNode,TypeBinding)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.bytecodeExceeds64KLimit(AbstractMethodDeclaration)",15,1,n/a,20,1,1,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.bytecodeExceeds64KLimit(TypeDeclaration)",1,2,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAllocateVoidArray(Expression)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAssignToFinalField(FieldBinding,ASTNode)",9,3,n/a,12,0,2,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAssignToFinalLocal(LocalVariableBinding,ASTNode)",3,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAssignToFinalOuterLocal(LocalVariableBinding,ASTNode)",3,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotDeclareLocalInterface(char[],int,int)",2,1,n/a,9,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotDefineDimensionsAndInitializer(ArrayAllocationExpression)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotDireclyInvokeAbstractMethod(MessageSend,MethodBinding)",11,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotExtendEnum(SourceTypeBinding,TypeReference,TypeBinding)",8,1,n/a,12,0,3,6,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotImportPackage(ImportReference)",2,2,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotInstantiate(TypeReference,TypeBinding)",5,3,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotInvokeSuperConstructorInEnum(ExplicitConstructorCall,MethodBinding)",9,1,n/a,14,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotReferToNonFinalOuterLocal(LocalVariableBinding,ASTNode)",3,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotReturnInInitializer(ASTNode)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotThrowNull(ThrowStatement)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotThrowType(SourceTypeBinding,AbstractMethodDeclaration,TypeReference,TypeBinding)",5,1,n/a,8,0,4,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotUseQualifiedEnumConstantInCaseLabel(QualifiedNameReference)",3,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotUseSuperInCodeSnippet(int,int)",1,1,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotUseSuperInJavaLangObject(ASTNode)",1,3,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.caseExpressionMustBeConstant(Expression)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.classExtendFinalClass(SourceTypeBinding,TypeReference,TypeBinding)",8,1,n/a,12,0,3,6,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.codeSnippetMissingClass(String,int,int)",1,3,n/a,10,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.codeSnippetMissingMethod(String,String,String,int,int)",1,1,n/a,10,0,5,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.computeSeverity(int)",39,5,n/a,209,2,1,168,53
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.conditionalArgumentsIncompatibleTypes(ConditionalExpression,TypeBinding,TypeBinding)",9,2,n/a,8,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.conflictingImport(ImportReference)",2,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.constantOutOfFormat(NumberLiteral)",10,2,n/a,42,4,1,22,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.constantOutOfRange(Literal,TypeBinding)",5,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.corruptedSignature(TypeBinding,char[],int)",9,1,n/a,9,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedField(FieldBinding,ASTNode)",7,8,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedMethod(MethodBinding,ASTNode)",21,6,n/a,17,1,2,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedType(TypeBinding,ASTNode)",5,7,n/a,9,0,2,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.disallowedTargetForAnnotation(Annotation)",5,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateAnnotation(Annotation)",5,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateAnnotationValue(TypeBinding,MemberValuePair)",6,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateCase(CaseStatement)",1,3,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateDefaultCase(ASTNode)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateEnumSpecialMethod(SourceTypeBinding,AbstractMethodDeclaration)",11,2,n/a,15,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateFieldInType(SourceTypeBinding,FieldDeclaration)",7,4,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateImport(ImportReference)",2,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateInitializationOfBlankFinalField(FieldBinding,Reference)",3,5,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateInitializationOfFinalLocal(LocalVariableBinding,ASTNode)",3,3,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateMethodInType(SourceTypeBinding,AbstractMethodDeclaration)",27,2,n/a,47,3,2,18,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForField(ReferenceBinding,FieldDeclaration)",2,1,n/a,17,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForMethod(ReferenceBinding,AbstractMethodDeclaration)",7,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForType(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForVariable(LocalDeclaration,boolean)",2,1,n/a,11,0,2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateNestedType(TypeDeclaration)",2,3,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateSuperinterface(SourceTypeBinding,TypeDeclaration,ReferenceBinding)",9,1,n/a,12,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateTargetInTargetAnnotation(TypeBinding,NameReference)",7,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateTypeParameterInType(TypeParameter)",3,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateTypes(CompilationUnitDeclaration,TypeDeclaration)",4,1,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.emptyControlFlowStatement(int,int)",1,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.enumAbstractMethodMustBeImplemented(AbstractMethodDeclaration)",13,1,n/a,19,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.errorNoMethodFor(MessageSend,TypeBinding,TypeBinding[])",20,5,n/a,25,2,3,12,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.errorThisSuperInStatic(ASTNode)",2,2,n/a,9,0,1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.expressionShouldBeAVariable(Expression)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.fieldHiding(FieldDeclaration,Binding)",28,2,n/a,32,1,2,10,12
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.fieldLocation(FieldBinding,ASTNode)",0,4,n/a,11,1,2,9,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.fieldsOrThisBeforeConstructorInvocation(ThisReference)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.finalMethodCannotBeOverridden(MethodBinding,MethodBinding)",7,1,n/a,10,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.finalVariableBound(TypeVariableBinding,TypeReference)",7,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.finallyMustCompleteNormally(Block)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forbiddenReference(TypeBinding,ASTNode,String)",6,1,n/a,10,0,3,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forwardReference(Reference,int,TypeBinding)",1,3,n/a,8,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forwardTypeVariableReference(ASTNode,TypeVariableBinding)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.genericTypeCannotExtendThrowable(TypeDeclaration)",5,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],String[],int,int)",2,348,n/a,19,0,5,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],String[],int,int,CompilationResult)",1,4,n/a,17,0,6,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],String[],int,int,int)",2,24,n/a,21,0,6,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hiddenCatchBlock(ReferenceBinding,ASTNode)",5,1,n/a,12,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hidingEnclosingType(TypeDeclaration)",2,3,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hierarchyCircularity(SourceTypeBinding,ReferenceBinding,TypeReference)",16,5,n/a,25,1,3,10,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hierarchyHasProblems(SourceTypeBinding)",5,2,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalAbstractModifierCombinationForMethod(ReferenceBinding,AbstractMethodDeclaration)",4,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalClassLiteralForTypeVariable(TypeVariableBinding,ASTNode)",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalExtendedDimensions(AnnotationMethodDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalExtendedDimensions(Argument)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalGenericArray(TypeBinding,ASTNode)",5,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalInstanceOfGenericType(TypeBinding,ASTNode)",23,1,n/a,17,1,2,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierCombinationFinalAbstractForClass(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierCombinationFinalVolatileForField(ReferenceBinding,FieldDeclaration)",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationField(FieldDeclaration)",6,1,n/a,15,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationMember(AbstractMethodDeclaration)",7,1,n/a,14,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationMemberType(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationType(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForClass(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForEnum(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForEnumConstant(ReferenceBinding,FieldDeclaration)",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForField(ReferenceBinding,FieldDeclaration)",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForInterface(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForInterfaceField(FieldDeclaration)",6,1,n/a,15,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForInterfaceMethod(AbstractMethodDeclaration)",11,1,n/a,16,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForLocalClass(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForLocalEnum(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMemberClass(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMemberEnum(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMemberInterface(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMethod(AbstractMethodDeclaration)",11,3,n/a,16,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForVariable(LocalDeclaration,boolean)",2,1,n/a,11,0,2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalPrimitiveOrArrayTypeForEnclosingInstance(TypeBinding,ASTNode)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalStaticModifierForMemberType(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalUsageOfQualifiedTypeReference(QualifiedTypeReference)",5,1,n/a,15,1,1,10,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVararg(Argument,AbstractMethodDeclaration)",4,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierCombinationForField(ReferenceBinding,FieldDeclaration)",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierCombinationForMemberType(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierCombinationForMethod(ReferenceBinding,AbstractMethodDeclaration)",4,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierForInterfaceMemberType(SourceTypeBinding)",5,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVoidExpression(ASTNode)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.importProblem(ImportReference,Binding)",7,2,n/a,27,1,2,11,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incompatibleExceptionInThrowsClause(SourceTypeBinding,MethodBinding,MethodBinding,ReferenceBinding)",40,1,n/a,61,2,4,7,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incompatibleReturnType(MethodBinding,MethodBinding)",19,1,n/a,25,1,2,9,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectArityForParameterizedType(ASTNode,TypeBinding,TypeBinding[])",14,6,n/a,17,1,3,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectLocationForEmptyDimension(ArrayAllocationExpression,int)",1,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectSwitchType(Expression,TypeBinding)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.indirectAccessToStaticField(ASTNode,FieldBinding)",8,3,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.indirectAccessToStaticMethod(ASTNode,MethodBinding)",11,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.indirectAccessToStaticType(ASTNode,ReferenceBinding)",9,0,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodReducesVisibility(SourceTypeBinding,MethodBinding,MethodBinding[])",22,1,n/a,23,0,3,5,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodsHaveIncompatibleReturnTypes(SourceTypeBinding,MethodBinding[],int)",19,1,n/a,26,2,3,10,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodsHaveNameClash(SourceTypeBinding,MethodBinding,MethodBinding)",29,1,n/a,20,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.initializerMustCompleteNormally(FieldDeclaration)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.innerTypesCannotDeclareStaticInitializers(ReferenceBinding,ASTNode)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.interfaceCannotHaveConstructors(ConstructorDeclaration)",2,1,n/a,10,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.interfaceCannotHaveInitializers(SourceTypeBinding,FieldDeclaration)",3,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidAnnotationMemberType(MethodDeclaration)",11,1,n/a,16,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidBreak(ASTNode)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidConstructor(Statement,MethodBinding)",111,8,n/a,164,2,2,66,21
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidContinue(ASTNode)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidEnclosingType(Expression,TypeBinding,ReferenceBinding)",13,2,n/a,28,1,3,21,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidExplicitConstructorCall(ASTNode)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidExpressionAsStatement(Expression)",1,0,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidField(FieldReference,TypeBinding)",12,4,n/a,47,1,2,30,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidField(NameReference,FieldBinding)",12,5,n/a,42,1,2,29,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidField(QualifiedNameReference,FieldBinding,int,TypeBinding)",24,3,n/a,67,1,4,32,10
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidFileNameForPackageAnnotations(Annotation)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidMethod(MessageSend,MethodBinding)",125,5,n/a,181,3,2,69,17
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidNullToSynchronize(Expression)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidOperator(BinaryExpression,TypeBinding,TypeBinding)",12,3,n/a,20,1,3,8,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidOperator(CompoundAssignment,TypeBinding,TypeBinding)",12,4,n/a,20,1,3,8,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidOperator(UnaryExpression,TypeBinding)",7,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidParameterizedExceptionType(TypeBinding,ASTNode)",5,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidParenthesizedExpression(ASTNode)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidType(ASTNode,TypeBinding)",9,11,n/a,65,2,2,52,19
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeForCollection(Expression)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeReference(Expression)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeToSynchronize(Expression,TypeBinding)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeVariableAsException(TypeBinding,ASTNode)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUnaryExpression(Expression)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfAnnotation(Annotation)",1,3,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfAnnotationDeclarations(TypeDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfEnumDeclarations(TypeDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfForeachStatements(LocalDeclaration,Expression)",1,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfStaticImports(ImportReference)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfTypeArguments(TypeReference,TypeReference)",1,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfTypeParameters(TypeParameter,TypeParameter)",1,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfVarargs(Argument)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isClassPathCorrect(char[][],CompilationUnitDeclaration)",2,16,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isIdentifier(int)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isKeyword(int)",0,3,n/a,57,1,1,54,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isLiteral(int)",0,2,n/a,13,1,1,10,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocAmbiguousMethodReference(int,int,Binding,int)",4,1,n/a,7,1,4,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedField(FieldBinding,ASTNode,int)",8,1,n/a,10,1,3,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedMethod(MethodBinding,ASTNode,int)",22,2,n/a,19,2,3,4,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedType(TypeBinding,ASTNode,int)",6,5,n/a,11,1,3,4,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedParamTag(char[],int,int,int)",3,2,n/a,6,1,4,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedReturnTag(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedThrowsClassName(TypeReference,int)",4,0,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocEmptyReturnTag(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocErrorNoMethodFor(MessageSend,TypeBinding,TypeBinding[],int)",21,2,n/a,21,2,4,13,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidConstructor(Statement,MethodBinding,int)",12,1,n/a,25,1,3,18,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidField(int,int,Binding,TypeBinding,int)",6,2,n/a,33,1,5,21,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidMethod(MessageSend,MethodBinding,int)",30,1,n/a,71,3,3,33,10
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidParamTagName(int,int)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidParamTypeParameter(int,int)",1,4,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidReference(int,int)",1,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidSeeReferenceArgs(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidSeeUrlReference(int,int)",1,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidTag(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidThrowsClass(int,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidThrowsClassName(TypeReference,int)",4,1,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidType(ASTNode,TypeBinding,int)",8,5,n/a,32,2,3,23,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidValueReference(int,int,int)",2,7,n/a,4,0,3,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMalformedSeeReference(int,int)",1,4,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissing(int,int,int)",3,4,n/a,12,2,3,7,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingHashCharacter(int,int,String)",1,1,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingParamName(int,int,int)",2,1,n/a,4,0,3,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingParamTag(char[],int,int,int)",4,4,n/a,9,1,4,5,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingReference(int,int,int)",2,1,n/a,4,0,3,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingReturnTag(int,int,int)",3,1,n/a,8,1,3,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingThrowsClassName(int,int,int)",2,1,n/a,4,0,3,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingThrowsTag(TypeReference,int)",5,2,n/a,9,1,2,5,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUndeclaredParamTagName(char[],int,int,int)",3,3,n/a,6,1,4,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUnexpectedTag(int,int)",1,13,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUnexpectedText(int,int)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUnterminatedInlineTag(int,int)",1,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocVisibility(int,int)",0,20,n/a,14,1,2,12,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocVisibilityArgument(int,int)",0,1,n/a,24,2,2,18,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableCanOnlyBeNull(LocalVariableBinding,ASTNode)",2,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableCannotBeNull(LocalVariableBinding,ASTNode)",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableHiding(LocalDeclaration,Binding,boolean)",9,3,n/a,26,2,3,8,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodMustOverride(AbstractMethodDeclaration)",11,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNameClash(MethodBinding,MethodBinding)",29,2,n/a,20,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNeedBody(AbstractMethodDeclaration)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNeedingNoBody(MethodDeclaration)",1,1,n/a,8,0,1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodWithConstructorName(MethodDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingReturnType(AbstractMethodDeclaration)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingSemiColon(Expression)",1,0,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingSerialVersion(TypeDeclaration)",2,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingValueForAnnotationMember(Annotation,char[])",6,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.mustDefineDimensionsOrInitializer(ArrayAllocationExpression)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.mustSpecifyPackage(CompilationUnitDeclaration)",3,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.mustUseAStaticMethod(MessageSend,MethodBinding)",11,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nativeMethodsCannotBeStrictfp(ReferenceBinding,AbstractMethodDeclaration)",4,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.needImplementation()",2,19,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.needToEmulateFieldAccess(FieldBinding,ASTNode,boolean)",7,6,n/a,10,0,3,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.needToEmulateMethodAccess(MethodBinding,ASTNode)",21,5,n/a,32,0,2,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nestedClassCannotDeclareInterface(TypeDeclaration)",2,2,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceForArgument(LocalVariableBinding,ASTNode)",2,4,n/a,12,0,2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceForConstant(TypeDeclaration)",5,1,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceForLocal(LocalVariableBinding,ASTNode)",2,1,n/a,10,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceInConstantPool(TypeDeclaration)",5,20,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noSuchEnclosingInstance(TypeBinding,ASTNode,boolean)",9,4,n/a,26,1,3,9,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonExternalizedStringLiteral(ASTNode)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonGenericTypeCannotBeParameterized(ASTNode,TypeBinding,TypeBinding[])",14,6,n/a,18,1,3,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonStaticAccessToStaticField(ASTNode,FieldBinding)",8,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonStaticAccessToStaticMethod(ASTNode,MethodBinding)",11,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notCompatibleTypesError(EqualExpression,TypeBinding,TypeBinding)",10,1,n/a,16,1,3,8,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notCompatibleTypesError(InstanceOfExpression,TypeBinding,TypeBinding)",10,1,n/a,16,1,3,8,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notCompatibleTypesErrorInForeach(Expression,TypeBinding,TypeBinding)",10,4,n/a,16,1,3,8,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.objectCannotBeGeneric(TypeDeclaration)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.objectCannotHaveSuperTypes(SourceTypeBinding)",3,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.objectMustBeClass(SourceTypeBinding)",3,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.operatorOnlyValidOnNumericType(CompoundAssignment,TypeBinding,TypeBinding)",10,1,n/a,16,1,3,8,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.overridesDeprecatedMethod(MethodBinding,MethodBinding)",15,1,n/a,20,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.overridesPackageDefaultMethod(MethodBinding,MethodBinding)",15,1,n/a,20,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.packageCollidesWithType(CompilationUnitDeclaration)",2,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.packageIsNotExpectedPackage(CompilationUnitDeclaration)",3,1,n/a,9,0,1,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parameterBoundAsString(TypeVariableBinding,boolean)",9,8,n/a,14,2,2,12,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parameterizedMemberTypeMissingArguments(ASTNode,TypeBinding)",10,1,n/a,18,1,2,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseError(int,int,int,char[],String,String[])",18,0,n/a,64,2,6,25,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorDeleteToken(int,int,int,char[],String)",1,1,n/a,15,0,5,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorDeleteTokens(int,int)",1,1,n/a,10,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertAfterToken(int,int,int,char[],String,String)",1,1,n/a,16,0,6,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertBeforeToken(int,int,int,char[],String,String)",1,1,n/a,16,0,6,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertToComplete(int,int,String,String)",1,2,n/a,13,0,4,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertToCompletePhrase(int,int,String)",1,1,n/a,12,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertToCompleteScope(int,int,String)",1,1,n/a,12,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInvalidToken(int,int,int,char[],String,String)",1,1,n/a,16,0,6,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorMergeTokens(int,int,String)",1,2,n/a,12,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorMisplacedConstruct(int,int)",1,2,n/a,10,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorNoSuggestion(int,int,int,char[],String)",1,1,n/a,15,0,5,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorNoSuggestionForTokens(int,int)",1,1,n/a,10,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorReplaceToken(int,int,int,char[],String,String)",1,3,n/a,16,0,6,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorReplaceTokens(int,int,String)",1,1,n/a,12,0,3,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorUnexpectedEnd(int,int)",5,1,n/a,20,1,2,9,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.possibleAccidentalBooleanAssignment(Assignment)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.publicClassMustMatchFileName(CompilationUnitDeclaration,TypeDeclaration)",4,1,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.rawMemberTypeCannotBeParameterized(ASTNode,ReferenceBinding,TypeBinding[])",26,1,n/a,18,1,3,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.recursiveConstructorInvocation(ExplicitConstructorCall)",9,1,n/a,14,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.redefineArgument(Argument)",2,2,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.redefineLocal(LocalDeclaration)",2,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.referenceMustBeArrayTypeAt(TypeBinding,ArrayReference)",5,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.returnTypeCannotBeVoidArray(SourceTypeBinding,MethodDeclaration)",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.scannerError(Parser,String)",12,2,n/a,48,2,2,36,16
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.shouldReturn(TypeBinding,ASTNode)",5,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.signalNoImplicitStringConversionForCharArrayExpression(Expression)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticAndInstanceConflict(MethodBinding,MethodBinding)",15,1,n/a,20,0,2,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticFieldAccessToNonStaticVariable(ASTNode,FieldBinding)",4,5,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticInheritedMethodConflicts(SourceTypeBinding,MethodBinding,MethodBinding[])",11,1,n/a,14,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticMemberOfParameterizedType(ASTNode,ReferenceBinding)",22,1,n/a,18,1,2,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.stringConstantIsExceedingUtf8Limit(ASTNode)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superTypeCannotUseWildcard(SourceTypeBinding,TypeReference,TypeBinding)",8,3,n/a,12,0,3,6,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superclassMustBeAClass(SourceTypeBinding,TypeReference,ReferenceBinding)",9,1,n/a,8,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superfluousSemicolon(int,int)",1,3,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superinterfaceMustBeAnInterface(SourceTypeBinding,TypeReference,ReferenceBinding)",9,1,n/a,8,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superinterfacesCollide(ReferenceBinding,TypeDeclaration,ReferenceBinding,ReferenceBinding)",13,1,n/a,8,0,4,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.syntaxError(int,int,int,int,char[],String,String)",5,6,n/a,29,1,7,9,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.task(String,String,String,int,int)",1,1,n/a,8,0,5,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyDimensions(ASTNode)",1,5,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyFields(TypeDeclaration)",5,1,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyMethods(TypeDeclaration)",5,1,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeCastError(CastExpression,TypeBinding,TypeBinding)",10,1,n/a,16,1,3,8,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeCollidesWithPackage(CompilationUnitDeclaration,TypeDeclaration)",4,1,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeMismatchError(TypeBinding,TypeBinding,ASTNode)",9,13,n/a,8,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeMismatchError(TypeBinding,TypeVariableBinding,ReferenceBinding,ASTNode)",26,6,n/a,18,1,4,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typesAsString(boolean,TypeBinding[],boolean)",9,158,n/a,13,1,3,14,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undefinedAnnotationValue(TypeBinding,MemberValuePair)",6,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undefinedLabel(BranchStatement)",2,2,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undefinedTypeVariableSignature(char[],ReferenceBinding)",7,1,n/a,10,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undocumentedEmptyBlock(int,int)",1,6,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unexpectedStaticModifierForField(SourceTypeBinding,FieldDeclaration)",2,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unexpectedStaticModifierForMethod(ReferenceBinding,AbstractMethodDeclaration)",4,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unhandledException(TypeBinding,ASTNode)",6,2,n/a,18,0,2,3,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.uninitializedBlankFinalField(FieldBinding,ASTNode)",4,9,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.uninitializedLocalVariable(LocalVariableBinding,ASTNode)",3,6,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unmatchedBracket(int,ReferenceContext,CompilationResult)",1,0,n/a,10,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryCast(CastExpression)",9,11,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryCastForArgument(CastExpression,TypeBinding)",13,3,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryElse(ASTNode)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryEnclosingInstanceSpecification(Expression,ReferenceBinding)",5,5,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryInstanceof(InstanceOfExpression,TypeBinding)",9,1,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unqualifiedFieldAccess(NameReference,FieldBinding)",7,2,n/a,13,1,2,5,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unreachableCatchBlock(ReferenceBinding,ASTNode)",5,1,n/a,12,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unreachableCode(Statement)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unresolvableReference(NameReference,Binding)",3,5,n/a,24,1,2,8,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeCast(CastExpression)",9,2,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeRawConversion(Expression,TypeBinding,TypeBinding)",15,6,n/a,8,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeRawFieldAssignment(FieldBinding,TypeBinding,ASTNode)",17,1,n/a,10,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeRawInvocation(ASTNode,MethodBinding)",37,2,n/a,35,1,2,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeReturnTypeOverride(MethodBinding,MethodBinding,ASTNode)",23,2,n/a,22,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedArgument(LocalDeclaration)",2,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedDeclaredThrownException(ReferenceBinding,AbstractMethodDeclaration,ASTNode)",29,1,n/a,35,1,3,3,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedImport(ImportReference)",2,3,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedLocalVariable(LocalDeclaration)",2,1,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateConstructor(ConstructorDeclaration)",10,1,n/a,18,0,1,6,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateField(FieldDeclaration)",18,1,n/a,29,1,1,8,11
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateMethod(AbstractMethodDeclaration)",26,1,n/a,50,1,1,12,22
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateType(TypeDeclaration)",6,1,n/a,14,0,1,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.useAssertAsAnIdentifier(int,int)",1,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.useEnumAsAnIdentifier(int,int)",1,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.varargsArgumentNeedCast(MethodBinding,TypeBinding,InvocationSite)",41,3,n/a,18,1,3,4,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.variableTypeCannotBeVoid(AbstractVariableDeclaration)",2,2,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.variableTypeCannotBeVoidArray(AbstractVariableDeclaration)",2,2,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.visibilityConflict(MethodBinding,MethodBinding)",7,1,n/a,11,0,2,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wildcardAssignment(TypeBinding,TypeBinding,ASTNode)",9,1,n/a,10,0,3,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wildcardInvocation(ASTNode,TypeBinding,MethodBinding,TypeBinding[])",46,1,n/a,55,2,4,13,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wrongSequenceOfExceptionTypesError(TryStatement,TypeBinding,int,TypeBinding)",9,1,n/a,17,0,4,2,1
"org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement.ShouldNotImplement(String)",1,10,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.CompoundNameVector()",0,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.add(char[][])",1,1,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.addAll(char[][][])",2,0,n/a,8,1,1,5,2
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.contains(char[][])",1,1,n/a,6,0,1,5,3
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.elementAt(int)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.remove(char[][])",1,0,n/a,11,1,1,7,3
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.removeAll()",0,0,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.toString()",5,0,n/a,7,1,0,6,2
"org.eclipse.jdt.internal.compiler.util.FloatUtil.convertHexFloatingPointLiteralToBits(char[])",8,2,n/a,303,3,1,206,47
"org.eclipse.jdt.internal.compiler.util.FloatUtil.valueOfHexDoubleLiteral(char[])",2,1,n/a,26,0,1,2,1
"org.eclipse.jdt.internal.compiler.util.FloatUtil.valueOfHexFloatLiteral(char[])",2,1,n/a,26,0,1,2,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.HashtableOfInt()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.HashtableOfInt(int)",0,3,n/a,9,0,1,7,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.containsKey(int)",0,0,n/a,10,1,1,7,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.get(int)",0,2,n/a,9,1,1,7,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.put(int,Object)",1,2,n/a,14,1,2,11,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.rehash()",2,1,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.size()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()",1,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.HashtableOfIntValues()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.HashtableOfIntValues(int)",0,4,n/a,9,0,1,7,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.clone()",3,0,n/a,12,0,0,10,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.containsKey(char[])",2,0,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.get(char[])",2,2,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.put(char[],int)",3,4,n/a,16,1,2,12,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.rehash()",2,2,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.removeKey(char[])",3,0,n/a,17,2,1,13,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.size()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.toString()",1,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.HashtableOfLong()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.HashtableOfLong(int)",0,4,n/a,9,0,1,7,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.containsKey(long)",0,0,n/a,10,1,1,7,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.get(long)",0,4,n/a,9,1,1,7,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.put(long,Object)",1,5,n/a,14,1,2,11,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.rehash()",2,1,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.size()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()",1,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.HashtableOfObject()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.HashtableOfObject(int)",0,25,n/a,9,0,1,7,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.clone()",3,0,n/a,12,0,0,10,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.containsKey(char[])",2,10,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.get(char[])",2,34,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.put(char[],Object)",3,47,n/a,16,1,2,12,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.rehash()",2,2,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.removeKey(char[])",3,2,n/a,17,2,1,13,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.size()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()",2,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.HashtableOfObjectToInt()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.HashtableOfObjectToInt(int)",0,2,n/a,9,0,1,7,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.clone()",3,0,n/a,12,0,0,10,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.containsKey(Object)",2,0,n/a,10,1,1,7,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Object)",2,3,n/a,10,1,1,7,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.put(Object,int)",3,10,n/a,15,1,2,11,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.rehash()",2,2,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.removeKey(Object)",3,1,n/a,15,2,1,11,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.size()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.toString()",0,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.HashtableOfPackage()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.HashtableOfPackage(int)",0,3,n/a,9,0,1,7,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.containsKey(char[])",2,0,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.get(char[])",2,2,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.put(char[],PackageBinding)",3,7,n/a,16,1,2,12,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.rehash()",2,1,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.size()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.toString()",1,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.HashtableOfType()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.HashtableOfType(int)",0,5,n/a,9,0,1,7,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.containsKey(char[])",2,0,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.get(char[])",2,3,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.put(char[],ReferenceBinding)",3,6,n/a,16,1,2,12,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.rehash()",2,1,n/a,10,0,0,9,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.size()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()",1,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.ObjectVector()",0,29,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.add(Object)",1,22,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.addAll(ObjectVector)",2,3,n/a,8,1,1,5,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.addAll(Object[])",2,0,n/a,8,1,1,5,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.contains(Object)",1,2,n/a,9,0,1,5,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.containsIdentical(Object)",0,4,n/a,9,0,1,5,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.copyInto(Object[])",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.copyInto(Object[],int)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.elementAt(int)",0,18,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.find(Object)",1,0,n/a,6,0,1,5,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.remove(Object)",2,0,n/a,11,1,1,7,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.removeAll()",0,0,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.size()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()",1,0,n/a,6,0,0,6,2
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.SimpleLookupTable()",1,7,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.SimpleLookupTable(int)",0,31,n/a,9,0,1,7,2
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.clone()",3,2,n/a,12,0,0,10,1
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.containsKey(Object)",2,7,n/a,10,1,1,9,4
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Object)",2,33,n/a,10,1,1,9,4
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.keyForValue(Object)",1,2,n/a,7,0,1,7,4
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Object,Object)",3,50,n/a,14,1,2,13,5
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.rehash()",2,3,n/a,11,0,0,10,3
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Object)",3,24,n/a,18,2,1,15,6
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeValue(Object)",2,1,n/a,14,2,1,13,8
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()",2,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.SimpleNameVector()",0,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.add(char[])",1,1,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.addAll(char[][])",2,0,n/a,8,1,1,5,2
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.contains(char[])",1,1,n/a,6,0,1,5,3
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.copyInto(Object[])",1,0,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.elementAt(int)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.remove(char[])",1,0,n/a,11,1,1,7,3
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.removeAll()",0,0,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.size()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.toString()",4,0,n/a,7,1,0,6,2
"org.eclipse.jdt.internal.compiler.util.Util.Displayable.displayString(Object)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.compiler.util.Util.bind(String)",1,41,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.compiler.util.Util.bind(String,String)",1,8,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.compiler.util.Util.bind(String,String,String)",1,10,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.compiler.util.Util.bind(String,String[])",2,11,n/a,17,1,2,7,3
"org.eclipse.jdt.internal.compiler.util.Util.bindMessage(String,String[])",22,2,n/a,53,5,2,37,12
"org.eclipse.jdt.internal.compiler.util.Util.bytesToChar(byte[],String)",2,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(File)",5,3,n/a,19,3,1,7,3
"org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(File,String)",5,8,n/a,20,3,2,7,3
"org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsByteArray(InputStream,int)",6,6,n/a,54,3,2,21,8
"org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(InputStream,int,String)",11,3,n/a,79,3,3,35,16
"org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(ZipEntry,ZipFile)",5,5,n/a,20,3,2,7,3
"org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(String)",3,22,n/a,26,3,1,22,10
"org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(String)",2,11,n/a,15,1,1,12,6
"org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(char[])",0,1,n/a,14,1,1,11,6
"org.eclipse.jdt.internal.compiler.util.Util.isExcluded(char[],char[][],char[][],boolean)",6,2,n/a,42,5,4,28,16
"org.eclipse.jdt.internal.compiler.util.Util.isJavaFileName(String)",2,0,n/a,15,1,1,12,6
"org.eclipse.jdt.internal.compiler.util.Util.isJavaFileName(char[])",0,0,n/a,14,1,1,11,6
"org.eclipse.jdt.internal.compiler.util.Util.relocalize()",5,1,n/a,11,1,0,4,2
"org.eclipse.jdt.internal.compiler.util.Util.toBoolean(boolean)",0,3,n/a,12,1,1,3,2
"org.eclipse.jdt.internal.compiler.util.Util.toString(Object[])",3,5,n/a,4,2,1,4,2
"org.eclipse.jdt.internal.compiler.util.Util.toString(Object[],Displayable)",5,3,n/a,12,1,2,10,4
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference.HashableWeakReference(Object,ReferenceQueue)",2,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference.equals(Object)",3,0,n/a,7,0,1,7,3
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference.hashCode()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference.toString()",2,0,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.WeakHashSet()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.WeakHashSet(int)",0,3,n/a,8,0,1,6,2
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.add(Object)",6,1,n/a,22,2,1,12,4
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.addValue(HashableWeakReference)",4,1,n/a,17,2,1,13,5
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.cleanupGarbageCollectedValues()",1,3,n/a,23,3,0,17,6
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.contains(Object)",1,0,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.get(Object)",4,3,n/a,18,2,1,10,3
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.rehash()",2,3,n/a,11,0,0,11,3
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.remove(Object)",5,0,n/a,21,2,1,13,3
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.size()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.toString()",7,0,n/a,15,3,0,12,4
"org.eclipse.jdt.internal.core.Assert.Assert()",0,0,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.Assert.AssertionFailedException.AssertionFailedException(String)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.Assert.isLegal(boolean)",1,0,n/a,12,0,1,1,1
"org.eclipse.jdt.internal.core.Assert.isLegal(boolean,String)",1,1,n/a,16,0,2,3,2
"org.eclipse.jdt.internal.core.Assert.isNotNull(Object)",1,1,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.Assert.isNotNull(Object,String)",1,1,n/a,12,0,2,2,2
"org.eclipse.jdt.internal.core.Assert.isTrue(boolean)",1,17,n/a,10,0,1,1,1
"org.eclipse.jdt.internal.core.Assert.isTrue(boolean,String)",1,22,n/a,14,0,2,3,2
"org.eclipse.jdt.internal.core.BasicCompilationUnit.BasicCompilationUnit(char[],char[][],String)",8,3,n/a,13,0,3,11,4
"org.eclipse.jdt.internal.core.BasicCompilationUnit.BasicCompilationUnit(char[],char[][],String,IJavaElement)",2,8,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.BasicCompilationUnit(char[],char[][],String,String)",1,1,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getContents()",3,21,n/a,11,1,0,5,3
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getFileName()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getMainTypeName()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getPackageName()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.initEncoding(IJavaElement)",6,1,n/a,34,4,1,16,7
"org.eclipse.jdt.internal.core.BasicCompilationUnit.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.BatchOperation.BatchOperation(IWorkspaceRunnable)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.BatchOperation.executeOperation()",6,2,n/a,20,4,0,9,5
"org.eclipse.jdt.internal.core.BatchOperation.verify()",0,9,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.BecomeWorkingCopyOperation(CompilationUnit,IProblemRequestor)",1,2,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.executeOperation()",20,2,n/a,25,2,0,15,3
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.getWorkingCopy()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.isReadOnly()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryField.BinaryField(JavaElement,String)",1,3,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.BinaryField.equals(Object)",1,22,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.BinaryField.getConstant()",3,0,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryField.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryField.getFlags()",2,12,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryField.getHandleMementoDelimiter()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryField.getTypeSignature()",4,3,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryField.toStringInfo(int,StringBuffer,Object)",12,6,n/a,20,2,3,11,4
"org.eclipse.jdt.internal.core.BinaryMember.BinaryMember(JavaElement,String)",1,3,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.BinaryMember.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,2,n/a,6,0,5,1,1
"org.eclipse.jdt.internal.core.BinaryMember.generateInfos(Object,HashMap,IProgressMonitor)",7,1,n/a,14,1,3,10,4
"org.eclipse.jdt.internal.core.BinaryMember.getNameRange()",4,6,n/a,13,1,0,5,2
"org.eclipse.jdt.internal.core.BinaryMember.getSourceRange()",4,7,n/a,13,1,0,5,2
"org.eclipse.jdt.internal.core.BinaryMember.isBinary()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryMember.isStructureKnown()",2,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryMember.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,3,n/a,6,0,5,1,1
"org.eclipse.jdt.internal.core.BinaryMember.rename(String,boolean,IProgressMonitor)",2,3,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.BinaryMember.setContents(String,IProgressMonitor)",2,0,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.BinaryMethod(JavaElement,String,String[])",3,3,n/a,9,1,3,5,2
"org.eclipse.jdt.internal.core.BinaryMethod.DecodeParametersNames.enterConstructor(MethodInfo)",1,3,n/a,9,2,1,7,3
"org.eclipse.jdt.internal.core.BinaryMethod.DecodeParametersNames.enterMethod(MethodInfo)",1,3,n/a,9,2,1,7,3
"org.eclipse.jdt.internal.core.BinaryMethod.DecodeParametersNames.getParametersNames()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.equals(Object)",2,22,n/a,4,0,1,3,3
"org.eclipse.jdt.internal.core.BinaryMethod.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getExceptionTypes()",9,1,n/a,32,4,0,22,8
"org.eclipse.jdt.internal.core.BinaryMethod.getFlags()",2,12,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryMethod.getHandleMemento(StringBuffer)",10,14,n/a,17,1,1,12,3
"org.eclipse.jdt.internal.core.BinaryMethod.getHandleMementoDelimiter()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getNumberOfParameters()",0,0,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.getParameterNames()",11,3,n/a,39,4,0,25,9
"org.eclipse.jdt.internal.core.BinaryMethod.getParameterTypes()",0,17,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getReturnType()",2,3,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.core.BinaryMethod.getReturnType(IBinaryMethod)",8,2,n/a,7,0,1,5,2
"org.eclipse.jdt.internal.core.BinaryMethod.getSignature()",3,0,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryMethod.getTypeParameter(String)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getTypeParameterSignatures()",5,3,n/a,14,0,0,7,2
"org.eclipse.jdt.internal.core.BinaryMethod.getTypeParameters()",3,1,n/a,11,1,0,11,3
"org.eclipse.jdt.internal.core.BinaryMethod.hashCode()",3,8,n/a,10,1,0,6,2
"org.eclipse.jdt.internal.core.BinaryMethod.isConstructor()",2,3,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryMethod.isMainMethod()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.isSimilar(IMethod)",5,1,n/a,10,0,1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.readableName()",8,5,n/a,16,3,0,13,5
"org.eclipse.jdt.internal.core.BinaryMethod.toStringInfo(int,StringBuffer,Object)",14,6,n/a,23,2,3,14,5
"org.eclipse.jdt.internal.core.BinaryMethod.toStringName(StringBuffer)",1,20,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.toStringName(StringBuffer,int)",17,2,n/a,27,3,2,21,7
"org.eclipse.jdt.internal.core.BinaryType.BinaryType(JavaElement,String)",3,8,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.BinaryType.closing(Object)",2,3,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor)",1,1,n/a,6,0,8,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,WorkingCopyOwner)",21,3,n/a,29,1,9,15,6
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor)",1,1,n/a,7,0,8,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor,WorkingCopyOwner)",3,2,n/a,10,1,9,3,2
"org.eclipse.jdt.internal.core.BinaryType.createField(String,IJavaElement,boolean,IProgressMonitor)",2,0,n/a,6,0,4,1,1
"org.eclipse.jdt.internal.core.BinaryType.createInitializer(String,IJavaElement,IProgressMonitor)",2,0,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.BinaryType.createMethod(String,IJavaElement,boolean,IProgressMonitor)",2,0,n/a,6,0,4,1,1
"org.eclipse.jdt.internal.core.BinaryType.createType(String,IJavaElement,boolean,IProgressMonitor)",2,0,n/a,6,0,4,1,1
"org.eclipse.jdt.internal.core.BinaryType.equals(Object)",1,22,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.BinaryType.findMethods(IMethod)",2,0,n/a,11,1,1,3,2
"org.eclipse.jdt.internal.core.BinaryType.getChildren()",10,26,n/a,29,3,0,15,5
"org.eclipse.jdt.internal.core.BinaryType.getClassFileInfo()",1,2,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryType.getDeclaringType()",25,28,n/a,49,3,0,26,11
"org.eclipse.jdt.internal.core.BinaryType.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryType.getField(String)",1,16,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getFields()",3,3,n/a,14,1,0,7,2
"org.eclipse.jdt.internal.core.BinaryType.getFlags()",2,12,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryType.getFullyQualifiedName()",1,17,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryType.getFullyQualifiedName(char)",5,7,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.BinaryType.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",36,10,n/a,80,4,3,63,23
"org.eclipse.jdt.internal.core.BinaryType.getInitializer(int)",1,8,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getInitializers()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryType.getMethod(String,String[])",1,20,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.BinaryType.getMethods()",3,6,n/a,14,1,0,7,2
"org.eclipse.jdt.internal.core.BinaryType.getPackageFragment()",3,22,n/a,16,2,0,7,3
"org.eclipse.jdt.internal.core.BinaryType.getSuperInterfaceNames()",4,4,n/a,17,1,0,12,4
"org.eclipse.jdt.internal.core.BinaryType.getSuperInterfaceTypeSignatures()",5,3,n/a,18,1,0,12,4
"org.eclipse.jdt.internal.core.BinaryType.getSuperclassName()",4,5,n/a,11,1,0,5,2
"org.eclipse.jdt.internal.core.BinaryType.getSuperclassTypeSignature()",5,3,n/a,12,1,0,5,2
"org.eclipse.jdt.internal.core.BinaryType.getType(String)",4,15,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameter(String)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameterNames()",3,0,n/a,11,1,0,8,2
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameterSignatures()",5,4,n/a,14,0,0,7,2
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameters()",3,1,n/a,11,1,0,11,3
"org.eclipse.jdt.internal.core.BinaryType.getTypeQualifiedName()",1,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.BinaryType.getTypeQualifiedName(char)",7,13,n/a,21,2,1,7,3
"org.eclipse.jdt.internal.core.BinaryType.getTypes()",3,5,n/a,14,1,0,7,2
"org.eclipse.jdt.internal.core.BinaryType.isAnnotation()",2,4,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryType.isAnonymous()",2,1,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryType.isClass()",2,3,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryType.isEnum()",2,3,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryType.isInterface()",2,5,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryType.isLocal()",2,1,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryType.isMember()",2,1,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.BinaryType.loadTypeHierachy(InputStream,IProgressMonitor)",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.BinaryType.loadTypeHierachy(InputStream,WorkingCopyOwner,IProgressMonitor)",1,1,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(ICompilationUnit[],IProgressMonitor)",4,1,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(IProgressMonitor)",1,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(IWorkingCopy[],IProgressMonitor)",2,2,n/a,23,1,2,6,2
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(WorkingCopyOwner,IProgressMonitor)",6,2,n/a,12,0,2,4,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(ICompilationUnit[],IProgressMonitor)",4,1,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IJavaProject,IProgressMonitor)",1,0,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IJavaProject,WorkingCopyOwner,IProgressMonitor)",10,2,n/a,31,3,3,19,6
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IProgressMonitor)",1,1,n/a,12,0,1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IWorkingCopy[],IProgressMonitor)",2,3,n/a,17,1,2,6,2
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(WorkingCopyOwner,IProgressMonitor)",6,2,n/a,12,0,2,4,1
"org.eclipse.jdt.internal.core.BinaryType.resolveType(String)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.BinaryType.resolveType(String,WorkingCopyOwner)",0,1,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.BinaryType.sourceFileName(IBinaryType)",18,7,n/a,34,3,1,17,8
"org.eclipse.jdt.internal.core.BinaryType.toStringInfo(int,StringBuffer,Object)",11,6,n/a,23,3,3,12,5
"org.eclipse.jdt.internal.core.BinaryType.toStringName(StringBuffer)",4,21,n/a,6,0,1,3,2
"org.eclipse.jdt.internal.core.BinaryTypeConverter.buildTypeDeclaration(IType,CompilationUnitDeclaration,CompilationResult)",7,1,n/a,23,1,3,15,3
"org.eclipse.jdt.internal.core.BinaryTypeConverter.convert(IField,IType)",8,1,n/a,7,0,2,5,1
"org.eclipse.jdt.internal.core.BinaryTypeConverter.convert(IMethod,IType,CompilationResult)",24,1,n/a,46,2,3,33,10
"org.eclipse.jdt.internal.core.BinaryTypeConverter.convert(IType,IType,TypeDeclaration,CompilationResult)",26,3,n/a,75,2,4,61,22
"org.eclipse.jdt.internal.core.BinaryTypeConverter.createTypeReference(char[])",6,6,n/a,36,2,1,26,8
"org.eclipse.jdt.internal.core.Buffer.Buffer(IFile,IOpenable,boolean)",1,1,n/a,10,1,3,4,2
"org.eclipse.jdt.internal.core.Buffer.addBufferChangedListener(IBufferChangedListener)",3,2,n/a,11,1,1,4,3
"org.eclipse.jdt.internal.core.Buffer.append(String)",2,0,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.Buffer.append(char[])",7,1,n/a,20,2,1,12,5
"org.eclipse.jdt.internal.core.Buffer.close()",3,3,n/a,15,1,0,9,2
"org.eclipse.jdt.internal.core.Buffer.getChar(int)",0,0,n/a,13,2,1,7,3
"org.eclipse.jdt.internal.core.Buffer.getCharacters()",2,19,n/a,16,2,0,10,3
"org.eclipse.jdt.internal.core.Buffer.getContents()",2,5,n/a,8,0,0,4,2
"org.eclipse.jdt.internal.core.Buffer.getLength()",0,4,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.core.Buffer.getOwner()",0,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Buffer.getText(int,int)",6,2,n/a,18,2,2,12,4
"org.eclipse.jdt.internal.core.Buffer.getUnderlyingResource()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Buffer.hasUnsavedChanges()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Buffer.isClosed()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Buffer.isReadOnly()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Buffer.moveAndResizeGap(int,int)",10,2,n/a,42,2,2,28,5
"org.eclipse.jdt.internal.core.Buffer.notifyChanged(BufferChangedEvent)",6,4,n/a,3,4,1,8,3
"org.eclipse.jdt.internal.core.Buffer.removeBufferChangedListener(IBufferChangedListener)",2,1,n/a,11,2,1,4,3
"org.eclipse.jdt.internal.core.Buffer.replace(int,int,String)",2,0,n/a,8,0,3,1,2
"org.eclipse.jdt.internal.core.Buffer.replace(int,int,char[])",8,3,n/a,34,3,3,19,8
"org.eclipse.jdt.internal.core.Buffer.save(IProgressMonitor,boolean)",12,3,n/a,41,2,2,19,11
"org.eclipse.jdt.internal.core.Buffer.setContents(String)",2,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.Buffer.setContents(char[])",5,8,n/a,29,2,1,18,5
"org.eclipse.jdt.internal.core.Buffer.setReadOnly(boolean)",0,1,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.Buffer.toString()",17,0,n/a,34,4,0,28,8
"org.eclipse.jdt.internal.core.BufferCache.BufferCache(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.BufferCache.BufferCache(int,int)",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.BufferCache.close(LRUCacheEntry)",3,1,n/a,18,1,1,5,2
"org.eclipse.jdt.internal.core.BufferCache.newInstance(int,int)",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.BufferFactoryWrapper(IBufferFactory)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.create(IBufferFactory)",1,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.createBuffer(ICompilationUnit)",2,5,n/a,7,0,1,3,2
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.equals(Object)",1,0,n/a,6,0,1,6,3
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.hashCode()",1,0,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.BufferManager.addBuffer(IBuffer)",9,2,n/a,13,1,1,6,3
"org.eclipse.jdt.internal.core.BufferManager.createBuffer(IOpenable)",3,4,n/a,9,0,1,3,2
"org.eclipse.jdt.internal.core.BufferManager.getBuffer(IOpenable)",1,3,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.BufferManager.getDefaultBufferFactory()",0,4,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.BufferManager.getDefaultBufferManager()",1,5,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.core.BufferManager.getOpenBuffers()",2,2,n/a,14,1,0,3,1
"org.eclipse.jdt.internal.core.BufferManager.removeBuffer(IBuffer)",9,1,n/a,13,1,1,6,3
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.CancelableNameEnvironment(JavaProject,WorkingCopyOwner,IProgressMonitor)",1,3,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.checkCanceled()",5,4,n/a,7,1,0,4,4
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findPackages(char[],ISearchRequestor)",2,5,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findType(char[],char[][])",2,7,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findType(char[][])",2,8,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findTypes(char[],ISearchRequestor)",2,8,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.CancelableProblemFactory.CancelableProblemFactory(IProgressMonitor)",1,3,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.CancelableProblemFactory.createProblem(char[],int,String[],String[],int,int,int,int)",4,7,n/a,5,0,8,3,3
"org.eclipse.jdt.internal.core.ClassFile.ClassFile(PackageFragment,String)",1,2,n/a,8,0,2,3,1
"org.eclipse.jdt.internal.core.ClassFile.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",12,1,n/a,26,1,4,13,5
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,CompletionRequestor)",1,4,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,CompletionRequestor,WorkingCopyOwner)",9,3,n/a,16,1,3,5,2
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,ICodeCompletionRequestor)",27,3,n/a,3,3,2,24,4
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,ICompletionRequestor)",1,6,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,ICompletionRequestor,WorkingCopyOwner)",3,4,n/a,10,1,3,3,2
"org.eclipse.jdt.internal.core.ClassFile.codeSelect(int,int)",1,3,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeSelect(int,int,WorkingCopyOwner)",7,4,n/a,15,1,3,7,3
"org.eclipse.jdt.internal.core.ClassFile.createElementInfo()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFile.equals(Object)",1,10,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.ClassFile.exists()",3,44,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.core.ClassFile.findElement(IJavaElement,int,SourceMapper)",6,3,n/a,26,4,3,13,8
"org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(IFile)",23,2,n/a,61,4,1,30,10
"org.eclipse.jdt.internal.core.ClassFile.getBuffer()",4,32,n/a,8,1,0,3,2
"org.eclipse.jdt.internal.core.ClassFile.getClassFile()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFile.getCorrespondingResource()",4,3,n/a,14,1,0,4,2
"org.eclipse.jdt.internal.core.ClassFile.getElementAt(int)",7,0,n/a,19,1,1,10,3
"org.eclipse.jdt.internal.core.ClassFile.getElementAtConsideringSibling(int)",19,1,n/a,49,4,1,38,12
"org.eclipse.jdt.internal.core.ClassFile.getElementName()",0,104,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFile.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFile.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",4,9,n/a,12,1,3,6,2
"org.eclipse.jdt.internal.core.ClassFile.getHandleMementoDelimiter()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFile.getPath()",7,72,n/a,11,1,0,4,2
"org.eclipse.jdt.internal.core.ClassFile.getResource()",8,60,n/a,11,1,0,4,2
"org.eclipse.jdt.internal.core.ClassFile.getSource()",2,11,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.core.ClassFile.getSourceRange()",4,4,n/a,13,1,0,7,3
"org.eclipse.jdt.internal.core.ClassFile.getTopLevelTypeName()",5,0,n/a,13,1,0,6,2
"org.eclipse.jdt.internal.core.ClassFile.getType()",8,32,n/a,17,2,0,8,3
"org.eclipse.jdt.internal.core.ClassFile.getWorkingCopy(IProgressMonitor,IBufferFactory)",2,0,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFile.getWorkingCopy(WorkingCopyOwner,IProgressMonitor)",8,1,n/a,22,1,2,12,6
"org.eclipse.jdt.internal.core.ClassFile.hasBuffer()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFile.isClass()",2,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFile.isInterface()",2,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFile.isReadOnly()",0,9,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFile.mapSource(SourceMapper)",11,3,n/a,20,2,1,13,4
"org.eclipse.jdt.internal.core.ClassFile.openBuffer(IProgressMonitor,Object)",43,3,n/a,95,6,2,62,17
"org.eclipse.jdt.internal.core.ClassFile.simpleName(char[])",5,2,n/a,10,0,1,7,3
"org.eclipse.jdt.internal.core.ClassFile.translatedName(char[])",0,6,n/a,22,2,1,11,4
"org.eclipse.jdt.internal.core.ClassFile.translatedNames(char[][])",1,4,n/a,18,1,1,9,3
"org.eclipse.jdt.internal.core.ClassFile.unqualifiedName(char[])",1,3,n/a,23,2,1,12,4
"org.eclipse.jdt.internal.core.ClassFile.validateClassFile()",6,3,n/a,10,1,0,6,3
"org.eclipse.jdt.internal.core.ClassFileInfo.ClassFileInfo(ClassFile)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileInfo.generateFieldInfos(IType,IBinaryType,HashMap,ArrayList)",6,1,n/a,17,1,4,10,3
"org.eclipse.jdt.internal.core.ClassFileInfo.generateInnerClassHandles(IType,IBinaryType,ArrayList)",10,1,n/a,19,2,3,9,3
"org.eclipse.jdt.internal.core.ClassFileInfo.generateMethodInfos(IType,IBinaryType,HashMap,ArrayList,ArrayList)",20,1,n/a,46,2,5,34,9
"org.eclipse.jdt.internal.core.ClassFileInfo.generateTypeParameterInfos(BinaryMember,char[],HashMap,ArrayList)",11,2,n/a,28,2,4,23,5
"org.eclipse.jdt.internal.core.ClassFileInfo.getBinaryChildren(HashMap)",1,1,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.ClassFileInfo.hasReadBinaryChildren()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileInfo.readBinaryChildren(HashMap,IBinaryType)",15,2,n/a,37,3,2,22,6
"org.eclipse.jdt.internal.core.ClassFileInfo.removeBinaryChildren()",6,1,n/a,26,3,0,18,6
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.becomeWorkingCopy(IProblemRequestor,IProgressMonitor)",2,2,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.close()",2,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,CompletionRequestor)",2,4,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,CompletionRequestor,WorkingCopyOwner)",2,1,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,ICodeCompletionRequestor)",2,3,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,ICompletionRequestor)",2,4,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeComplete(int,ICompletionRequestor,WorkingCopyOwner)",2,3,n/a,8,0,3,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeSelect(int,int)",2,3,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.codeSelect(int,int,WorkingCopyOwner)",2,3,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.commit(boolean,IProgressMonitor)",2,2,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.commitWorkingCopy(boolean,IProgressMonitor)",2,1,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,2,n/a,12,0,5,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.createImport(String,IJavaElement,IProgressMonitor)",2,1,n/a,10,0,3,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.createImport(String,IJavaElement,int,IProgressMonitor)",2,2,n/a,12,0,4,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.createPackageDeclaration(String,IProgressMonitor)",2,1,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.createType(String,IJavaElement,boolean,IProgressMonitor)",2,1,n/a,11,0,4,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.delete(boolean,IProgressMonitor)",2,2,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.destroy()",0,2,n/a,7,0,0,0,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.discardWorkingCopy()",0,2,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.exists()",0,37,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.findElements(IJavaElement)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.findPrimaryType()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.findSharedWorkingCopy(IBufferFactory)",0,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.findWorkingCopy(WorkingCopyOwner)",0,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getAdapter(Class)",0,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getAllTypes()",2,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getAncestor(int)",0,13,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getBuffer()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getChildren()",2,20,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getCorrespondingResource()",2,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getElementAt(int)",2,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getElementName()",0,73,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getHandleIdentifier()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getImport(String)",0,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getImportContainer()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getImports()",2,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getJavaModel()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getJavaProject()",0,30,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getOpenable()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getOriginal(IJavaElement)",0,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getOriginalElement()",1,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getOwner()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPackageDeclaration(String)",0,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPackageDeclarations()",2,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getParent()",0,93,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPath()",0,72,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPrimary()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPrimaryElement()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getResource()",0,57,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getSchedulingRule()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getSharedWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",2,2,n/a,11,0,3,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getSource()",2,9,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getSourceRange()",2,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getType(String)",0,13,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getTypes()",2,10,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getUnderlyingResource()",2,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getWorkingCopy()",2,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getWorkingCopy(IProgressMonitor)",2,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",2,2,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getWorkingCopy(WorkingCopyOwner,IProblemRequestor,IProgressMonitor)",2,1,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.hasChildren()",2,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.hasResourceChanged()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.hasUnsavedChanges()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isBasedOn(IResource)",0,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isConsistent()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isOpen()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isReadOnly()",0,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isStructureKnown()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.isWorkingCopy()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.makeConsistent(IProgressMonitor)",2,4,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,3,n/a,12,0,5,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.open(IProgressMonitor)",2,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.reconcile()",2,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.reconcile(boolean,IProgressMonitor)",2,0,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.reconcile(int,boolean,WorkingCopyOwner,IProgressMonitor)",2,4,n/a,12,0,4,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.rename(String,boolean,IProgressMonitor)",2,3,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.restore()",2,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.save(IProgressMonitor,boolean)",2,4,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.ClasspathEntry(int,int,IPath,IPath[],IPath[],IPath,IPath,IPath,boolean)",0,7,n/a,31,1,9,15,4
"org.eclipse.jdt.internal.core.ClasspathEntry.combineWith(IClasspathEntry)",17,5,n/a,18,1,1,5,6
"org.eclipse.jdt.internal.core.ClasspathEntry.concatPatterns(IPath[],IPath[])",2,2,n/a,13,0,2,10,3
"org.eclipse.jdt.internal.core.ClasspathEntry.decodePatterns(Element,String)",6,2,n/a,18,3,2,12,4
"org.eclipse.jdt.internal.core.ClasspathEntry.elementDecode(Element,IJavaProject)",38,1,n/a,96,3,2,41,23
"org.eclipse.jdt.internal.core.ClasspathEntry.elementEncode(XMLWriter,IPath,boolean,boolean)",31,1,n/a,47,4,4,29,15
"org.eclipse.jdt.internal.core.ClasspathEntry.encodePatterns(IPath[],String,Map)",5,2,n/a,13,2,3,9,5
"org.eclipse.jdt.internal.core.ClasspathEntry.equalPatterns(IPath[],IPath[])",3,2,n/a,15,2,2,12,7
"org.eclipse.jdt.internal.core.ClasspathEntry.equals(Object)",15,0,n/a,50,2,1,36,18
"org.eclipse.jdt.internal.core.ClasspathEntry.fullExclusionPatternChars()",4,16,n/a,15,2,0,9,3
"org.eclipse.jdt.internal.core.ClasspathEntry.fullInclusionPatternChars()",4,13,n/a,15,2,0,9,3
"org.eclipse.jdt.internal.core.ClasspathEntry.getAccessRestrictionPatterns(IPath[])",2,2,n/a,10,1,1,11,4
"org.eclipse.jdt.internal.core.ClasspathEntry.getContentKind()",0,13,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getEntryKind()",0,62,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getExclusionPatterns()",0,34,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getImportRestriction()",10,11,n/a,21,2,0,7,6
"org.eclipse.jdt.internal.core.ClasspathEntry.getInclusionPatterns()",0,26,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getOutputLocation()",0,23,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getPath()",0,110,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getResolvedEntry()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getSourceAttachmentPath()",0,19,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getSourceAttachmentRootPath()",0,15,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.hashCode()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.isExported()",0,24,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.kindFromString(String)",6,1,n/a,18,0,1,13,7
"org.eclipse.jdt.internal.core.ClasspathEntry.kindToString(int)",0,2,n/a,21,1,1,15,8
"org.eclipse.jdt.internal.core.ClasspathEntry.rootID()",0,2,n/a,29,2,0,21,8
"org.eclipse.jdt.internal.core.ClasspathEntry.toString()",46,0,n/a,80,3,0,68,20
"org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspath(IJavaProject,IClasspathEntry[],IPath)",147,4,n/a,257,7,3,168,73
"org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(IJavaProject,IClasspathEntry,boolean,boolean)",135,6,n/a,183,7,4,106,75
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.CommitWorkingCopyOperation(ICompilationUnit,boolean)",1,1,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation()",45,2,n/a,100,5,0,56,24
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.getCompilationUnit()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.getSchedulingRule()",8,2,n/a,9,1,0,5,2
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.verify()",5,9,n/a,23,1,0,6,4
"org.eclipse.jdt.internal.core.CompilationUnit.CompilationUnit(PackageFragment,String,WorkingCopyOwner)",1,8,n/a,9,0,3,3,1
"org.eclipse.jdt.internal.core.CompilationUnit.accept(ASTVisitor)",1,0,n/a,17,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.becomeWorkingCopy(IProblemRequestor,IProgressMonitor)",5,2,n/a,13,1,2,6,2
"org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",34,1,n/a,3,2,4,41,13
"org.eclipse.jdt.internal.core.CompilationUnit.canBeRemovedFromCache()",2,2,n/a,7,0,0,3,2
"org.eclipse.jdt.internal.core.CompilationUnit.canBufferBeRemovedFromCache(IBuffer)",2,2,n/a,9,0,1,3,2
"org.eclipse.jdt.internal.core.CompilationUnit.close()",2,22,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.core.CompilationUnit.closing(Object)",2,3,n/a,8,1,1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,CompletionRequestor)",1,4,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,CompletionRequestor,WorkingCopyOwner)",3,3,n/a,6,0,3,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,ICodeCompletionRequestor)",27,3,n/a,3,3,2,24,4
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,ICompletionRequestor)",1,6,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,ICompletionRequestor,WorkingCopyOwner)",3,4,n/a,10,1,3,3,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(int,int)",1,3,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(int,int,WorkingCopyOwner)",1,4,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.commit(boolean,IProgressMonitor)",1,2,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(boolean,IProgressMonitor)",2,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.CompilationUnit.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",4,2,n/a,15,1,5,8,3
"org.eclipse.jdt.internal.core.CompilationUnit.createElementInfo()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.createImport(String,IJavaElement,IProgressMonitor)",1,1,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.createImport(String,IJavaElement,int,IProgressMonitor)",4,3,n/a,13,1,4,5,2
"org.eclipse.jdt.internal.core.CompilationUnit.createPackageDeclaration(String,IProgressMonitor)",3,1,n/a,8,0,2,3,1
"org.eclipse.jdt.internal.core.CompilationUnit.createType(String,IJavaElement,boolean,IProgressMonitor)",10,1,n/a,22,2,4,12,4
"org.eclipse.jdt.internal.core.CompilationUnit.delete(boolean,IProgressMonitor)",2,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.CompilationUnit.destroy()",2,2,n/a,12,1,0,4,3
"org.eclipse.jdt.internal.core.CompilationUnit.discardWorkingCopy()",2,3,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.CompilationUnit.equals(Object)",2,10,n/a,11,0,1,4,3
"org.eclipse.jdt.internal.core.CompilationUnit.equalsDOMNode(IDOMNode)",9,10,n/a,29,5,1,17,8
"org.eclipse.jdt.internal.core.CompilationUnit.exists()",5,46,n/a,6,0,0,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.findElements(IJavaElement)",26,1,n/a,55,3,1,47,17
"org.eclipse.jdt.internal.core.CompilationUnit.findPrimaryType()",4,1,n/a,11,1,0,5,2
"org.eclipse.jdt.internal.core.CompilationUnit.findSharedWorkingCopy(IBufferFactory)",4,2,n/a,9,0,1,3,2
"org.eclipse.jdt.internal.core.CompilationUnit.findWorkingCopy(WorkingCopyOwner)",4,4,n/a,17,2,1,7,3
"org.eclipse.jdt.internal.core.CompilationUnit.getAllTypes()",12,2,n/a,24,2,0,20,4
"org.eclipse.jdt.internal.core.CompilationUnit.getCompilationUnit()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getContents()",2,24,n/a,11,1,0,4,3
"org.eclipse.jdt.internal.core.CompilationUnit.getCorrespondingResource()",4,3,n/a,14,1,0,4,2
"org.eclipse.jdt.internal.core.CompilationUnit.getElementAt(int)",1,3,n/a,11,1,1,4,2
"org.eclipse.jdt.internal.core.CompilationUnit.getElementName()",0,107,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getFileName()",3,32,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",9,9,n/a,19,1,3,13,4
"org.eclipse.jdt.internal.core.CompilationUnit.getHandleMementoDelimiter()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getImport(String)",2,6,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getImportContainer()",1,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getImports()",6,6,n/a,16,1,0,9,3
"org.eclipse.jdt.internal.core.CompilationUnit.getMainTypeName()",4,5,n/a,9,0,0,3,1
"org.eclipse.jdt.internal.core.CompilationUnit.getOriginal(IJavaElement)",4,2,n/a,13,1,1,6,4
"org.eclipse.jdt.internal.core.CompilationUnit.getOriginalElement()",2,4,n/a,9,0,0,3,2
"org.eclipse.jdt.internal.core.CompilationUnit.getOwner()",2,2,n/a,6,0,0,1,3
"org.eclipse.jdt.internal.core.CompilationUnit.getPackageDeclaration(String)",1,9,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPackageDeclarations()",3,5,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPackageName()",2,5,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPath()",7,73,n/a,11,1,0,4,2
"org.eclipse.jdt.internal.core.CompilationUnit.getPerWorkingCopyInfo()",2,10,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPrimary()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPrimaryElement(boolean)",4,6,n/a,7,0,1,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.getResource()",8,67,n/a,11,1,0,4,2
"org.eclipse.jdt.internal.core.CompilationUnit.getSharedWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",4,2,n/a,9,0,3,3,2
"org.eclipse.jdt.internal.core.CompilationUnit.getSource()",2,10,n/a,8,0,0,4,2
"org.eclipse.jdt.internal.core.CompilationUnit.getSourceRange()",2,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getType(String)",1,18,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getTypes()",3,13,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.CompilationUnit.getUnderlyingResource()",3,9,n/a,7,0,0,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy()",1,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(IProgressMonitor)",2,4,n/a,6,1,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",2,2,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(WorkingCopyOwner,IProblemRequestor,IProgressMonitor)",9,4,n/a,16,1,3,10,3
"org.eclipse.jdt.internal.core.CompilationUnit.hasBuffer()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.hasResourceChanged()",5,3,n/a,11,0,0,6,3
"org.eclipse.jdt.internal.core.CompilationUnit.isBasedOn(IResource)",4,2,n/a,9,0,1,5,3
"org.eclipse.jdt.internal.core.CompilationUnit.isConsistent()",3,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isOpen()",3,26,n/a,8,0,0,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.isPrimary()",0,27,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isSourceElement()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isWorkingCopy()",2,31,n/a,8,0,0,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(IProgressMonitor)",1,7,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(boolean,int,IProgressMonitor)",5,2,n/a,16,1,3,11,3
"org.eclipse.jdt.internal.core.CompilationUnit.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",4,3,n/a,15,1,5,8,3
"org.eclipse.jdt.internal.core.CompilationUnit.openBuffer(IProgressMonitor,Object)",25,3,n/a,40,4,2,21,11
"org.eclipse.jdt.internal.core.CompilationUnit.openParent(Object,HashMap,IProgressMonitor)",3,2,n/a,13,2,3,4,4
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile()",1,3,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile(boolean,IProgressMonitor)",1,0,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile(int,boolean,WorkingCopyOwner,IProgressMonitor)",3,6,n/a,28,1,4,13,5
"org.eclipse.jdt.internal.core.CompilationUnit.rename(String,boolean,IProgressMonitor)",5,3,n/a,12,1,3,6,2
"org.eclipse.jdt.internal.core.CompilationUnit.restore()",7,0,n/a,12,0,0,9,3
"org.eclipse.jdt.internal.core.CompilationUnit.save(IProgressMonitor,boolean)",3,5,n/a,13,1,2,3,2
"org.eclipse.jdt.internal.core.CompilationUnit.toStringInfo(int,StringBuffer,Object)",12,5,n/a,21,3,3,11,4
"org.eclipse.jdt.internal.core.CompilationUnit.updateTimeStamp(CompilationUnit)",5,2,n/a,12,1,1,4,2
"org.eclipse.jdt.internal.core.CompilationUnit.validateCompilationUnit(IResource)",12,2,n/a,18,1,1,13,6
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.addAnnotationPositions(IJavaElement,long[])",2,4,n/a,6,0,2,5,3
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.getSourceLength()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.getSourceRange()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.isOpen()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.setSourceLength(int)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.CompilationUnitProblemFinder(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory)",1,1,n/a,43,0,5,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.accept(ISourceType[],PackageBinding,AccessRestriction)",5,2,n/a,23,1,3,5,2
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.getHandlingPolicy()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.getRequestor()",1,1,n/a,3,2,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.initializeParser()",1,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitDeclaration,ICompilationUnit,char[],Parser,WorkingCopyOwner,IProblemRequestor,boolean,IProgressMonitor)",21,2,n/a,70,2,8,32,12
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(ICompilationUnit,char[],WorkingCopyOwner,IProblemRequestor,boolean,IProgressMonitor)",1,1,n/a,10,0,6,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.reportProblems(CompilationUnitDeclaration,IProblemRequestor,IProgressMonitor)",5,1,n/a,11,2,3,10,6
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.CompilationUnitStructureRequestor(ICompilationUnit,CompilationUnitElementInfo,Map)",3,1,n/a,6,0,3,4,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptImport(int,int,char[],boolean,int)",19,3,n/a,35,1,5,24,4
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptLineSeparatorPositions(int[])",0,5,n/a,10,0,1,0,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptPackage(int,int,char[])",12,3,n/a,21,1,3,13,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptProblem(IProblem)",1,3,n/a,5,1,1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.convertTypeNamesToSigs(char[][])",1,2,n/a,16,1,1,11,4
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterClass(TypeInfo)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterCompilationUnit()",4,4,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterConstructor(MethodInfo)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterEnum(TypeInfo)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterField(FieldInfo)",18,4,n/a,27,1,1,19,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterInitializer(int,int)",13,4,n/a,24,1,2,14,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterInterface(TypeInfo)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterMethod(MethodInfo)",26,4,n/a,55,2,1,42,10
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterType(TypeInfo)",22,3,n/a,32,2,1,27,3
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterTypeParameter(TypeParameterInfo)",13,2,n/a,31,1,1,27,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitClass(int)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitCompilationUnit(int)",2,4,n/a,8,0,1,2,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitConstructor(int)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitEnum(int)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitField(int,int,int)",8,4,n/a,23,3,3,12,7
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitInitializer(int)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitInterface(int)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitMember(int)",3,7,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitMethod(int,int,int)",4,5,n/a,14,1,3,7,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.resolveDuplicates(SourceRefElement)",1,7,n/a,9,1,1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.CompilationUnitVisitor(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory)",1,1,n/a,41,0,5,1,1
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.accept(ISourceType[],PackageBinding,AccessRestriction)",5,2,n/a,20,1,3,5,2
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.getHandlingPolicy()",1,1,n/a,3,2,0,3,1
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.getProblemFactory(ASTVisitor)",4,1,n/a,22,2,1,4,1
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.getRequestor()",1,1,n/a,3,2,0,1,1
"org.eclipse.jdt.internal.core.CompilationUnitVisitor.visit(ICompilationUnit,ASTVisitor)",17,1,n/a,38,2,2,13,4
"org.eclipse.jdt.internal.core.CopyElementsOperation.CopyElementsOperation(IJavaElement[],IJavaElement,boolean)",1,0,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.CopyElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,3,n/a,9,0,3,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.computeSourceForElement(IJavaElement,String,String)",5,1,n/a,11,0,3,5,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.getMainTaskName()",1,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.getNestedOperation(IJavaElement)",20,1,n/a,32,3,1,22,10
"org.eclipse.jdt.internal.core.CopyElementsOperation.getSourceFor(IJavaElement)",6,4,n/a,15,1,1,9,3
"org.eclipse.jdt.internal.core.CopyElementsOperation.isRenamingMainType(IJavaElement,IJavaElement)",10,2,n/a,12,1,2,5,5
"org.eclipse.jdt.internal.core.CopyElementsOperation.processElement(IJavaElement)",17,1,n/a,40,3,1,23,11
"org.eclipse.jdt.internal.core.CopyElementsOperation.resolveRenameAnchor(IJavaElement)",3,1,n/a,16,2,1,9,3
"org.eclipse.jdt.internal.core.CopyElementsOperation.verify()",3,10,n/a,18,1,0,6,4
"org.eclipse.jdt.internal.core.CopyElementsOperation.verify(IJavaElement)",12,1,n/a,41,1,1,14,9
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.CopyPackageFragmentRootOperation(IPackageFragmentRoot,IPath,int,int,IClasspathEntry)",1,2,n/a,12,0,5,5,1
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.addEntryToClasspath(IClasspathEntry,IWorkspaceRoot)",17,2,n/a,48,3,2,35,10
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.copy(IClasspathEntry)",37,3,n/a,30,2,1,19,9
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.copyResource(IPackageFragmentRoot,IClasspathEntry,IWorkspaceRoot)",38,1,n/a,40,7,3,43,17
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.executeOperation()",7,2,n/a,13,1,0,7,4
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.verify()",24,9,n/a,49,5,0,34,17
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.CopyResourceElementsOperation(IJavaElement[],IJavaElement,boolean)",1,0,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.CopyResourceElementsOperation(IJavaElement[],IJavaElement[],boolean)",2,3,n/a,10,0,3,2,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.collectResourcesOfInterest(IPackageFragment)",12,1,n/a,40,2,1,33,9
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.createNeededPackageFragments(IContainer,PackageFragmentRoot,String[],boolean)",17,1,n/a,40,4,4,27,9
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.getDeltaFor(IJavaProject)",3,6,n/a,13,1,1,5,2
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.getMainTaskName()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.initializeDOMFactory()",1,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.prepareDeltas(IJavaElement,IJavaElement,boolean)",10,2,n/a,22,1,3,8,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processCompilationUnitResource(ICompilationUnit,PackageFragment)",63,1,n/a,130,4,2,58,27
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processDeltas()",5,1,n/a,8,1,0,3,2
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processElement(IJavaElement)",10,1,n/a,20,1,1,11,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processElements()",5,4,n/a,17,1,0,7,2
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processPackageFragmentResource(PackageFragment,PackageFragmentRoot,String)",97,1,n/a,169,7,3,106,43
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updatePackageStatement(IDOMCompilationUnit,String[])",11,2,n/a,31,3,2,16,7
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateReadOnlyPackageFragmentsForCopy(IContainer,IPackageFragmentRoot,String[])",8,1,n/a,11,2,3,9,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateReadOnlyPackageFragmentsForMove(IContainer,IPackageFragmentRoot,String[],boolean)",9,1,n/a,13,2,4,10,6
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateTypeName(ICompilationUnit,IDOMCompilationUnit,String,String)",11,1,n/a,26,4,4,15,6
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updatedContent(ICompilationUnit,PackageFragment,String)",12,1,n/a,27,1,3,17,5
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.verify()",3,9,n/a,18,1,0,6,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.verify(IJavaElement)",18,2,n/a,28,2,1,19,14
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.CreateCompilationUnitOperation(IPackageFragment,String,String,boolean)",1,2,n/a,9,0,4,3,1
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.executeOperation()",38,2,n/a,62,5,0,39,13
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.getCompilationUnit()",2,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.getSchedulingRule()",8,2,n/a,9,1,0,5,2
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.verify()",6,9,n/a,21,1,0,7,4
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.CreateElementInCUOperation(IJavaElement)",2,3,n/a,8,0,1,2,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.checkCanceled()",1,3,n/a,8,1,0,2,2
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.createAfter(IJavaElement)",1,5,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.createBefore(IJavaElement)",1,12,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.executeOperation()",24,2,n/a,52,4,0,35,12
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.generateElementDOM()",n/a,3,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.generateNewCompilationUnitDOM(ICompilationUnit)",8,2,n/a,18,1,1,11,4
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.generateResultHandle()",n/a,6,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.generateResultHandles()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getCompilationUnit()",2,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getCreatedElementCharacters()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getMainAmountOfWork()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getMainTaskName()",n/a,7,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getSchedulingRule()",5,2,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.initializeDefaultPosition()",0,1,n/a,10,0,0,0,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.insertDOMNode(IDOMNode,IDOMNode)",7,2,n/a,30,2,2,14,6
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.setAlteredName(String)",0,1,n/a,9,0,1,0,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.setRelativePosition(IJavaElement,int)",0,4,n/a,15,1,2,5,2
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.verify()",8,12,n/a,26,2,0,9,5
"org.eclipse.jdt.internal.core.CreateFieldOperation.CreateFieldOperation(IType,String,boolean)",1,2,n/a,11,0,3,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.generateElementDOM()",8,3,n/a,23,3,0,11,7
"org.eclipse.jdt.internal.core.CreateFieldOperation.generateResultHandle()",3,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.getDOMNodeName()",1,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.getMainTaskName()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.initializeDefaultPosition()",5,1,n/a,21,3,0,8,6
"org.eclipse.jdt.internal.core.CreateFieldOperation.verifyNameCollision()",7,4,n/a,12,1,0,4,2
"org.eclipse.jdt.internal.core.CreateImportOperation.CreateImportOperation(String,ICompilationUnit)",1,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.CreateImportOperation.generateElementDOM()",4,3,n/a,18,1,0,7,2
"org.eclipse.jdt.internal.core.CreateImportOperation.generateResultHandle()",2,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateImportOperation.getMainTaskName()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateImportOperation.initializeDefaultPosition()",8,1,n/a,32,3,0,17,6
"org.eclipse.jdt.internal.core.CreateImportOperation.verify()",5,12,n/a,19,1,0,6,3
"org.eclipse.jdt.internal.core.CreateInitializerOperation.CreateInitializerOperation(IType,String)",1,2,n/a,11,0,2,1,1
"org.eclipse.jdt.internal.core.CreateInitializerOperation.generateElementDOM()",7,3,n/a,20,3,0,9,5
"org.eclipse.jdt.internal.core.CreateInitializerOperation.generateResultHandle()",12,6,n/a,30,5,0,17,8
"org.eclipse.jdt.internal.core.CreateInitializerOperation.getMainTaskName()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateInitializerOperation.initializeDefaultPosition()",5,1,n/a,22,3,0,9,6
"org.eclipse.jdt.internal.core.CreateMethodOperation.CreateMethodOperation(IType,String,boolean)",1,2,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.computeName()",4,1,n/a,13,1,0,5,2
"org.eclipse.jdt.internal.core.CreateMethodOperation.convertDOMMethodTypesToSignatures()",4,2,n/a,22,4,0,11,5
"org.eclipse.jdt.internal.core.CreateMethodOperation.generateElementDOM()",9,3,n/a,24,3,0,11,7
"org.eclipse.jdt.internal.core.CreateMethodOperation.generateResultHandle()",4,6,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.getDOMNodeName()",1,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.getMainTaskName()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.isDOMNodeNull()",0,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.verifyNameCollision()",9,4,n/a,19,2,0,9,4
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.CreatePackageDeclarationOperation(String,ICompilationUnit)",1,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.generateElementDOM()",12,3,n/a,31,3,0,18,4
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.generateResultHandle()",2,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.getMainTaskName()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.initializeDefaultPosition()",5,1,n/a,24,2,0,10,4
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.verify()",5,12,n/a,19,1,0,6,3
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.CreatePackageFragmentOperation(IPackageFragmentRoot,String,boolean)",2,1,n/a,10,0,3,2,2
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.executeOperation()",23,2,n/a,45,4,0,32,7
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.verify()",16,9,n/a,41,3,0,19,10
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.CreateTypeHierarchyOperation(IRegion,IJavaProject,ICompilationUnit[],IType,boolean)",2,2,n/a,9,0,5,2,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.CreateTypeHierarchyOperation(IType,ICompilationUnit[],IJavaProject,boolean)",3,2,n/a,16,1,4,8,2
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.CreateTypeHierarchyOperation(IType,ICompilationUnit[],IJavaSearchScope,boolean)",3,9,n/a,16,1,4,8,2
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation()",1,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.getResult()",0,13,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.isReadOnly()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.verify()",7,9,n/a,21,1,0,9,7
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.CreateTypeMemberOperation(IJavaElement,String,boolean)",1,4,n/a,9,0,3,3,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.deprecatedGenerateElementDOM()",1,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.generateNewCompilationUnitDOM(ICompilationUnit)",10,2,n/a,23,1,1,14,5
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.generateSyntaxIncorrectDOM()",12,8,n/a,19,1,0,9,2
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.getType()",1,10,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.setAlteredName(String)",0,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.verify()",9,12,n/a,33,2,0,15,8
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.verifyNameCollision()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.CreateTypeOperation(IJavaElement,String,boolean)",1,3,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.generateElementDOM()",8,3,n/a,24,3,0,11,7
"org.eclipse.jdt.internal.core.CreateTypeOperation.generateResultHandle()",6,6,n/a,14,1,0,7,3
"org.eclipse.jdt.internal.core.CreateTypeOperation.getDOMNodeName()",1,6,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.getMainTaskName()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.getType()",2,10,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.core.CreateTypeOperation.verifyNameCollision()",14,4,n/a,24,2,0,11,5
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner.DefaultWorkingCopyOwner()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner.createBuffer(ICompilationUnit)",2,5,n/a,7,0,1,3,2
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.DeleteElementsOperation(IJavaElement[],boolean)",2,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.getMainTaskName()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.getSchedulingRule()",5,2,n/a,8,1,0,5,4
"org.eclipse.jdt.internal.core.DeleteElementsOperation.groupElements()",12,1,n/a,31,3,0,20,5
"org.eclipse.jdt.internal.core.DeleteElementsOperation.initDOMFactory()",1,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.processElement(IJavaElement)",19,1,n/a,37,4,1,27,9
"org.eclipse.jdt.internal.core.DeleteElementsOperation.processElements()",2,5,n/a,9,0,0,2,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.replaceElementInBuffer(IBuffer,IJavaElement,String)",9,1,n/a,11,0,3,6,2
"org.eclipse.jdt.internal.core.DeleteElementsOperation.verify(IJavaElement)",8,1,n/a,18,2,1,12,7
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.DeletePackageFragmentRootOperation(IPackageFragmentRoot,int,int)",1,1,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.deleteResource(IPackageFragmentRoot,IClasspathEntry)",18,1,n/a,16,5,2,20,7
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.executeOperation()",10,2,n/a,15,1,0,8,5
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.updateProjectClasspath(IPath,IJavaProject)",6,2,n/a,28,3,2,19,7
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.updateReferringProjectClasspaths(IPath,IJavaProject)",4,1,n/a,12,1,2,9,3
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.verify()",8,9,n/a,17,2,0,11,6
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.DeleteResourceElementsOperation(IJavaElement[],boolean)",1,1,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.deletePackageFragment(IPackageFragment)",15,1,n/a,55,3,1,40,15
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.getMainTaskName()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.processElement(IJavaElement)",7,1,n/a,21,1,1,12,6
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.verify(IJavaElement)",8,1,n/a,18,2,1,11,9
"org.eclipse.jdt.internal.core.DeltaProcessingState.ProjectUpdateInfo.updateProjectReferencesIfNecessary()",28,2,n/a,58,5,0,49,11
"org.eclipse.jdt.internal.core.DeltaProcessingState.addElementChangedListener(IElementChangedListener,int)",4,1,n/a,25,2,2,15,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.addPreResourceChangedListener(IResourceChangeListener)",2,1,n/a,14,2,1,10,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.getDeltaProcessor()",4,3,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots()",38,2,n/a,86,6,0,64,18
"org.eclipse.jdt.internal.core.DeltaProcessingState.performClasspathResourceChange(JavaProject,IClasspathEntry[],IClasspathEntry[],IClasspathEntry[],boolean)",4,1,n/a,13,1,5,10,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.recordProjectUpdate(ProjectUpdateInfo)",2,1,n/a,10,1,1,6,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeAllProjectUpdates()",4,1,n/a,8,0,0,7,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeElementChangedListener(IElementChangedListener)",5,1,n/a,24,3,1,17,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.removePreResourceChangedListener(IResourceChangeListener)",3,1,n/a,20,3,1,13,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(IResourceChangeEvent)",8,0,n/a,3,4,1,13,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.updateRoots(IPath,IResourceDelta,DeltaProcessor)",20,6,n/a,36,5,3,24,10
"org.eclipse.jdt.internal.core.DeltaProcessor.DeltaProcessor(DeltaProcessingState,JavaModelManager)",0,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.DeltaProcessor.OutputsInfo.OutputsInfo(IPath[],int[],int)",0,2,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.DeltaProcessor.OutputsInfo.toString()",11,0,n/a,26,2,0,24,8
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.RootInfo(JavaProject,IPath,char[][],char[][],int)",0,2,n/a,7,0,5,5,1
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.getPackageFragmentRoot(IResource)",7,2,n/a,15,3,1,8,4
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.isRootOfProject(IPath)",4,3,n/a,3,0,1,1,2
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.toString()",19,0,n/a,37,3,0,27,9
"org.eclipse.jdt.internal.core.DeltaProcessor.addDependentProjects(IPath,HashSet)",7,2,n/a,30,3,2,18,7
"org.eclipse.jdt.internal.core.DeltaProcessor.addForRefresh(IJavaElement)",2,3,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.DeltaProcessor.addToParentInfo(Openable)",4,9,n/a,14,2,1,5,4
"org.eclipse.jdt.internal.core.DeltaProcessor.addToRootsToRefreshWithDependents(IJavaProject)",3,3,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.DeltaProcessor.checkExternalArchiveChanges(IJavaElement[],IProgressMonitor)",12,1,n/a,38,4,2,25,9
"org.eclipse.jdt.internal.core.DeltaProcessor.checkProjectsBeingAddedOrRemoved(IResourceDelta)",40,2,n/a,124,6,1,72,23
"org.eclipse.jdt.internal.core.DeltaProcessor.checkSourceAttachmentChange(IResourceDelta,IResource)",15,1,n/a,32,4,2,23,9
"org.eclipse.jdt.internal.core.DeltaProcessor.close(Openable)",1,6,n/a,10,1,1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.contentChanged(Openable)",8,2,n/a,32,2,1,15,6
"org.eclipse.jdt.internal.core.DeltaProcessor.createElement(IResource,int,RootInfo)",50,9,n/a,114,4,3,74,29
"org.eclipse.jdt.internal.core.DeltaProcessor.createExternalArchiveDelta(IProgressMonitor)",76,2,n/a,170,7,1,120,40
"org.eclipse.jdt.internal.core.DeltaProcessor.currentDelta()",2,20,n/a,6,1,0,3,2
"org.eclipse.jdt.internal.core.DeltaProcessor.deleting(IProject)",15,1,n/a,36,2,1,13,5
"org.eclipse.jdt.internal.core.DeltaProcessor.elementAdded(Openable,IResourceDelta,RootInfo)",49,3,n/a,99,3,3,42,14
"org.eclipse.jdt.internal.core.DeltaProcessor.elementRemoved(Openable,IResourceDelta,RootInfo)",43,3,n/a,86,2,3,49,15
"org.eclipse.jdt.internal.core.DeltaProcessor.elementType(IResource,int,int,RootInfo)",15,3,n/a,52,3,4,31,16
"org.eclipse.jdt.internal.core.DeltaProcessor.enclosingRootInfo(IPath,int)",3,5,n/a,12,1,2,6,4
"org.eclipse.jdt.internal.core.DeltaProcessor.fire(IJavaElementDelta,int)",11,3,n/a,40,2,2,25,8
"org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(IJavaElementDelta,IElementChangedListener[],int[],int)",6,2,n/a,16,1,4,6,4
"org.eclipse.jdt.internal.core.DeltaProcessor.fireReconcileDelta(IElementChangedListener[],int[],int)",8,2,n/a,15,1,3,7,4
"org.eclipse.jdt.internal.core.DeltaProcessor.flush()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.getTimeStamp(File)",2,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.isAffectedBy(IResourceDelta)",7,2,n/a,14,6,1,14,8
"org.eclipse.jdt.internal.core.DeltaProcessor.isPrimaryWorkingCopy(IJavaElement,int)",2,2,n/a,10,1,2,4,3
"org.eclipse.jdt.internal.core.DeltaProcessor.isResFilteredFromOutput(OutputsInfo,IResource,int)",4,1,n/a,29,5,3,13,10
"org.eclipse.jdt.internal.core.DeltaProcessor.mergeDeltas(Collection)",21,2,n/a,40,4,1,34,11
"org.eclipse.jdt.internal.core.DeltaProcessor.nonJavaResourcesChanged(Openable,IResourceDelta)",17,3,n/a,43,3,2,24,8
"org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(IJavaElementDelta,int,IElementChangedListener[],int[],int)",10,2,n/a,3,4,5,15,5
"org.eclipse.jdt.internal.core.DeltaProcessor.notifyTypeHierarchies(IElementChangedListener[],int)",5,1,n/a,8,4,2,12,4
"org.eclipse.jdt.internal.core.DeltaProcessor.otherRootsInfo(IPath,int)",2,1,n/a,9,1,2,3,2
"org.eclipse.jdt.internal.core.DeltaProcessor.outputsInfo(RootInfo,IResource)",15,1,n/a,43,5,2,28,11
"org.eclipse.jdt.internal.core.DeltaProcessor.popUntilPrefixOf(IPath)",9,3,n/a,25,3,1,13,9
"org.eclipse.jdt.internal.core.DeltaProcessor.processResourceDelta(IResourceDelta)",22,1,n/a,63,4,1,37,13
"org.eclipse.jdt.internal.core.DeltaProcessor.reconcileClasspathFileUpdate(IResourceDelta,JavaProject)",5,1,n/a,40,3,2,14,11
"org.eclipse.jdt.internal.core.DeltaProcessor.refreshPackageFragmentRoots()",4,1,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(IJavaElementDelta)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.removeFromParentInfo(Openable)",4,6,n/a,16,2,1,5,4
"org.eclipse.jdt.internal.core.DeltaProcessor.resetProjectCaches()",11,1,n/a,19,1,0,10,3
"org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(IResourceChangeEvent)",22,1,n/a,74,6,1,42,17
"org.eclipse.jdt.internal.core.DeltaProcessor.rootInfo(IPath,int)",2,6,n/a,9,1,2,3,2
"org.eclipse.jdt.internal.core.DeltaProcessor.startDeltas()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.stopDeltas()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.traverseDelta(IResourceDelta,int,RootInfo,OutputsInfo)",29,4,n/a,145,7,4,72,41
"org.eclipse.jdt.internal.core.DeltaProcessor.updateClasspathMarkers(IResourceDelta)",24,1,n/a,54,8,1,35,12
"org.eclipse.jdt.internal.core.DeltaProcessor.updateClasspathMarkers(IResourceDelta,HashSet,Map,Map)",34,2,n/a,85,4,4,53,18
"org.eclipse.jdt.internal.core.DeltaProcessor.updateCurrentDeltaAndIndex(IResourceDelta,int,RootInfo)",57,4,n/a,102,5,3,73,22
"org.eclipse.jdt.internal.core.DeltaProcessor.updateIndex(Openable,IResourceDelta)",61,6,n/a,129,6,2,95,35
"org.eclipse.jdt.internal.core.DeltaProcessor.updateJavaModel(IJavaElementDelta)",4,1,n/a,13,2,1,7,3
"org.eclipse.jdt.internal.core.DeltaProcessor.updateRootIndex(PackageFragmentRoot,String[],IResourceDelta)",7,2,n/a,17,2,3,11,3
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.DiscardWorkingCopyOperation(IJavaElement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.executeOperation()",19,2,n/a,25,3,0,15,4
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.getWorkingCopy()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.isReadOnly()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ElementCache.ElementCache(int)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ElementCache.ElementCache(int,int)",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.ElementCache.close(LRUCacheEntry)",4,1,n/a,27,3,1,11,4
"org.eclipse.jdt.internal.core.ElementCache.ensureSpaceLimit(int,IJavaElement)",2,3,n/a,14,1,2,5,2
"org.eclipse.jdt.internal.core.ElementCache.newInstance(int,int)",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.ElementCache.resetSpaceLimit(int,IJavaElement)",2,3,n/a,10,1,2,3,2
"org.eclipse.jdt.internal.core.IJavaElementRequestor.acceptField(IField)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.IJavaElementRequestor.acceptInitializer(IInitializer)",n/a,0,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.IJavaElementRequestor.acceptMemberType(IType)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.IJavaElementRequestor.acceptMethod(IMethod)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.IJavaElementRequestor.acceptPackageFragment(IPackageFragment)",n/a,2,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.IJavaElementRequestor.acceptType(IType)",n/a,5,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.IJavaElementRequestor.isCanceled()",n/a,11,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.INamingRequestor.acceptNameWithPrefix(char[],boolean)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.core.INamingRequestor.acceptNameWithPrefixAndSuffix(char[],boolean,boolean)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.core.INamingRequestor.acceptNameWithSuffix(char[],boolean)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.core.INamingRequestor.acceptNameWithoutPrefixAndSuffix(char[])",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.IPathRequestor.acceptPath(String,boolean)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.core.ImportContainer.ImportContainer(CompilationUnit)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.equals(Object)",1,22,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.ImportContainer.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",6,10,n/a,18,2,3,10,4
"org.eclipse.jdt.internal.core.ImportContainer.getHandleMementoDelimiter()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getImport(String)",1,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getPrimaryElement(boolean)",2,5,n/a,8,0,1,4,3
"org.eclipse.jdt.internal.core.ImportContainer.getSourceRange()",8,7,n/a,10,0,0,5,1
"org.eclipse.jdt.internal.core.ImportContainer.hasChildren()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.ImportContainer.readableName()",0,3,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.core.ImportContainer.toString(int,StringBuffer)",5,3,n/a,12,1,2,10,5
"org.eclipse.jdt.internal.core.ImportContainer.toStringInfo(int,StringBuffer,Object)",4,5,n/a,10,1,3,4,2
"org.eclipse.jdt.internal.core.ImportDeclaration.ImportDeclaration(ImportContainer,String)",1,3,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.core.ImportDeclaration.equals(Object)",1,22,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.ImportDeclaration.equalsDOMNode(IDOMNode)",4,10,n/a,8,0,1,1,2
"org.eclipse.jdt.internal.core.ImportDeclaration.getElementName()",0,99,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getFlags()",2,1,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getHandleMemento(StringBuffer)",6,14,n/a,12,1,1,5,2
"org.eclipse.jdt.internal.core.ImportDeclaration.getHandleMementoDelimiter()",1,3,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getPrimaryElement(boolean)",3,5,n/a,8,0,1,4,3
"org.eclipse.jdt.internal.core.ImportDeclaration.isOnDemand()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.readableName()",0,3,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.toStringInfo(int,StringBuffer,Object)",5,5,n/a,11,1,3,5,2
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo.getName()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo.onDemand()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo.setOnDemand(boolean)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.Initializer.Initializer(JavaElement,int)",2,3,n/a,7,0,2,4,2
"org.eclipse.jdt.internal.core.Initializer.equals(Object)",1,22,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.Initializer.equalsDOMNode(IDOMNode)",5,13,n/a,16,2,1,5,3
"org.eclipse.jdt.internal.core.Initializer.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Initializer.getHandleMemento(StringBuffer)",5,14,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.Initializer.getHandleMementoDelimiter()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Initializer.getNameRange()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Initializer.getPrimaryElement(boolean)",4,5,n/a,11,1,1,6,4
"org.eclipse.jdt.internal.core.Initializer.hashCode()",2,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.Initializer.readableName()",2,5,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.core.Initializer.rename(String,boolean,IProgressMonitor)",2,3,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.Initializer.toStringInfo(int,StringBuffer,Object)",17,5,n/a,27,3,3,17,5
"org.eclipse.jdt.internal.core.InternalNamingConventions.acceptName(char[],char[],char[],boolean,boolean,INamingRequestor)",4,2,n/a,17,1,6,7,5
"org.eclipse.jdt.internal.core.InternalNamingConventions.computeBaseTypeNames(char,char[][])",1,1,n/a,14,2,2,12,5
"org.eclipse.jdt.internal.core.InternalNamingConventions.computeNames(char[])",7,1,n/a,27,4,1,22,8
"org.eclipse.jdt.internal.core.InternalNamingConventions.excludeNames(char[],char[],char[],char[][])",4,3,n/a,21,2,4,8,3
"org.eclipse.jdt.internal.core.InternalNamingConventions.getNameScanner(CompilerOptions)",1,3,n/a,11,0,1,1,1
"org.eclipse.jdt.internal.core.InternalNamingConventions.suggestArgumentNames(IJavaProject,char[],char[],int,char[][],INamingRequestor)",5,2,n/a,14,0,6,4,1
"org.eclipse.jdt.internal.core.InternalNamingConventions.suggestFieldNames(IJavaProject,char[],char[],int,int,char[][],INamingRequestor)",6,2,n/a,15,0,7,5,3
"org.eclipse.jdt.internal.core.InternalNamingConventions.suggestLocalVariableNames(IJavaProject,char[],char[],int,char[][],INamingRequestor)",5,2,n/a,14,0,6,4,1
"org.eclipse.jdt.internal.core.InternalNamingConventions.suggestNames(char[],char[],int,char[][],char[][],char[][],Scanner,INamingRequestor)",30,3,n/a,118,5,8,73,24
"org.eclipse.jdt.internal.core.JarEntryFile.JarEntryFile(String,String)",1,1,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.core.JarEntryFile.getContents()",8,0,n/a,15,2,0,9,4
"org.eclipse.jdt.internal.core.JarEntryFile.getFullPath()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.getName()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.isReadOnly()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.toString()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.JarPackageFragment(PackageFragmentRoot,String[])",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.computeChildren(OpenableElementInfo,ArrayList)",11,1,n/a,20,2,2,12,4
"org.eclipse.jdt.internal.core.JarPackageFragment.computeNonJavaResources(String[],JarPackageFragmentInfo,String)",7,2,n/a,28,3,3,18,6
"org.eclipse.jdt.internal.core.JarPackageFragment.containsJavaResources()",2,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.createCompilationUnit(String,String,boolean,IProgressMonitor)",2,0,n/a,6,0,4,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.createElementInfo()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.generateInfos(Object,HashMap,IProgressMonitor)",3,5,n/a,10,1,3,3,2
"org.eclipse.jdt.internal.core.JarPackageFragment.getClassFiles()",3,3,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getCompilationUnits()",0,5,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getCorrespondingResource()",0,3,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getNonJavaResources()",2,2,n/a,11,1,0,3,2
"org.eclipse.jdt.internal.core.JarPackageFragment.isReadOnly()",0,9,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.storedNonJavaResources()",2,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentInfo.getNonJavaResources()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.JarPackageFragmentRoot(IPath,JavaProject)",1,3,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.JarPackageFragmentRoot(IResource,JavaProject)",2,3,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.computeChildren(OpenableElementInfo,Map)",38,1,n/a,69,4,2,51,11
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.createElementInfo()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.determineKind(IResource)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.equals(Object)",1,10,n/a,16,1,1,6,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getElementName()",1,99,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getJar()",3,6,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getKind()",0,15,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getNonJavaResources()",2,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getPackageFragment(String[])",1,26,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getPath()",2,96,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getResource()",4,72,n/a,11,1,0,5,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getUnderlyingResource()",4,9,n/a,11,1,0,5,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.hashCode()",1,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.initPackageFragToTypes(HashtableOfArrayToObject,String,int)",6,2,n/a,18,1,3,17,4
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.isArchive()",0,23,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.isExternal()",1,10,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.isReadOnly()",0,9,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.resourceExists()",6,3,n/a,14,1,0,3,2
"org.eclipse.jdt.internal.core.JarPackageFragmentRootInfo.getNonJavaResources()",0,0,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.JavaElement.JavaElement(JavaElement)",0,2,n/a,13,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElement.close()",2,13,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.closing(Object)",n/a,1,8,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.JavaElement.createElementInfo()",n/a,1,11,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.JavaElement.equals(Object)",5,10,n/a,20,0,1,6,4
"org.eclipse.jdt.internal.core.JavaElement.equalsDOMNode(IDOMNode)",0,10,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElement.escapeMementoName(StringBuffer,String)",4,7,n/a,23,2,2,21,3
"org.eclipse.jdt.internal.core.JavaElement.exists()",1,42,n/a,12,1,0,4,2
"org.eclipse.jdt.internal.core.JavaElement.findNode(IDOMCompilationUnit)",11,6,n/a,36,3,1,14,13
"org.eclipse.jdt.internal.core.JavaElement.followPath(ArrayList,int,IDOMNode)",9,3,n/a,22,3,3,10,5
"org.eclipse.jdt.internal.core.JavaElement.generateInfos(Object,HashMap,IProgressMonitor)",n/a,1,5,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.core.JavaElement.getAncestor(int)",2,21,n/a,11,1,1,6,3
"org.eclipse.jdt.internal.core.JavaElement.getChildren()",2,6,n/a,11,1,0,4,2
"org.eclipse.jdt.internal.core.JavaElement.getChildrenOfType(int)",4,15,n/a,18,2,1,10,3
"org.eclipse.jdt.internal.core.JavaElement.getClassFile()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.getCompilationUnit()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.getElementInfo()",1,107,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.getElementInfo(IProgressMonitor)",4,2,n/a,13,0,1,5,2
"org.eclipse.jdt.internal.core.JavaElement.getElementName()",0,96,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleFromMemento(MementoTokenizer,WorkingCopyOwner)",3,20,n/a,9,0,2,4,2
"org.eclipse.jdt.internal.core.JavaElement.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",n/a,9,12,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.core.JavaElement.getHandleIdentifier()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleMemento()",3,11,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleMemento(StringBuffer)",6,14,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleMementoDelimiter()",n/a,3,17,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.JavaElement.getJavaModel()",1,21,n/a,10,1,0,5,3
"org.eclipse.jdt.internal.core.JavaElement.getJavaProject()",1,69,n/a,10,1,0,5,3
"org.eclipse.jdt.internal.core.JavaElement.getOpenable()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.getOpenableParent()",0,5,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.getParent()",0,166,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.getPrimaryElement()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.getPrimaryElement(boolean)",0,5,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getSchedulingRule()",6,0,n/a,8,4,0,13,5
"org.eclipse.jdt.internal.core.JavaElement.getSourceElementAt(int)",14,5,n/a,48,7,1,27,13
"org.eclipse.jdt.internal.core.JavaElement.getSourceMapper()",2,14,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.hasChildren()",3,0,n/a,13,1,0,4,2
"org.eclipse.jdt.internal.core.JavaElement.hashCode()",5,8,n/a,10,0,0,3,2
"org.eclipse.jdt.internal.core.JavaElement.isAncestorOf(IJavaElement)",3,3,n/a,11,1,1,4,3
"org.eclipse.jdt.internal.core.JavaElement.isReadOnly()",0,9,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.newJavaModelException(IStatus)",6,3,n/a,9,0,1,3,2
"org.eclipse.jdt.internal.core.JavaElement.newNotPresentException()",2,21,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(Object,IProgressMonitor)",11,5,n/a,32,3,2,17,6
"org.eclipse.jdt.internal.core.JavaElement.readableName()",1,3,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElement.tabString(int)",3,17,n/a,6,0,1,6,2
"org.eclipse.jdt.internal.core.JavaElement.toDebugString()",3,2,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.JavaElement.toString()",3,1,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.JavaElement.toString(int,StringBuffer)",3,3,n/a,10,1,2,4,2
"org.eclipse.jdt.internal.core.JavaElement.toStringAncestors(StringBuffer)",6,3,n/a,12,1,1,6,3
"org.eclipse.jdt.internal.core.JavaElement.toStringChildren(int,StringBuffer,Object)",3,2,n/a,11,1,3,8,4
"org.eclipse.jdt.internal.core.JavaElement.toStringInfo(int,StringBuffer)",3,1,n/a,8,0,2,3,1
"org.eclipse.jdt.internal.core.JavaElement.toStringInfo(int,StringBuffer,Object)",4,5,n/a,10,1,3,4,2
"org.eclipse.jdt.internal.core.JavaElement.toStringName(StringBuffer)",2,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toStringWithAncestors()",4,29,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.JavaElementDelta.JavaElementDelta(IJavaElement)",0,23,n/a,16,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.addAffectedChild(JavaElementDelta)",15,3,n/a,103,4,1,75,24
"org.eclipse.jdt.internal.core.JavaElementDelta.addResourceDelta(IResourceDelta)",1,3,n/a,28,1,1,17,6
"org.eclipse.jdt.internal.core.JavaElementDelta.added(IJavaElement)",1,11,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.added(IJavaElement,int)",3,2,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.core.JavaElementDelta.changed(IJavaElement,int)",3,17,n/a,12,0,2,4,1
"org.eclipse.jdt.internal.core.JavaElementDelta.closed(IJavaElement)",3,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.JavaElementDelta.contentChanged()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.createDeltaTree(IJavaElement,JavaElementDelta)",8,1,n/a,26,2,2,16,4
"org.eclipse.jdt.internal.core.JavaElementDelta.equalsAndSameParent(IJavaElement,IJavaElement)",4,7,n/a,7,0,2,2,3
"org.eclipse.jdt.internal.core.JavaElementDelta.find(IJavaElement)",2,2,n/a,17,3,1,9,4
"org.eclipse.jdt.internal.core.JavaElementDelta.fineGrained()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getAddedChildren()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getAffectedChildren()",0,18,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getAncestors(IJavaElement)",6,1,n/a,22,2,1,11,4
"org.eclipse.jdt.internal.core.JavaElementDelta.getChangedChildren()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getChildrenOfType(int)",5,3,n/a,18,2,1,12,4
"org.eclipse.jdt.internal.core.JavaElementDelta.getDeltaFor(IJavaElement)",5,2,n/a,22,2,1,15,6
"org.eclipse.jdt.internal.core.JavaElementDelta.getElement()",0,20,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getMovedFromElement()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getMovedToElement()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getRemovedChildren()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getResourceDeltas()",1,2,n/a,10,1,0,5,3
"org.eclipse.jdt.internal.core.JavaElementDelta.growAndAddToArray(IJavaElementDelta[],IJavaElementDelta)",1,1,n/a,11,0,2,5,1
"org.eclipse.jdt.internal.core.JavaElementDelta.insertDeltaTree(IJavaElement,JavaElementDelta)",4,12,n/a,10,1,2,3,2
"org.eclipse.jdt.internal.core.JavaElementDelta.movedFrom(IJavaElement,IJavaElement)",2,3,n/a,13,0,2,5,1
"org.eclipse.jdt.internal.core.JavaElementDelta.movedTo(IJavaElement,IJavaElement)",2,4,n/a,13,0,2,5,1
"org.eclipse.jdt.internal.core.JavaElementDelta.opened(IJavaElement)",3,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.JavaElementDelta.removeAffectedChild(JavaElementDelta)",4,1,n/a,17,3,1,10,5
"org.eclipse.jdt.internal.core.JavaElementDelta.removeAndShrinkArray(IJavaElementDelta[],int)",2,2,n/a,13,0,2,7,3
"org.eclipse.jdt.internal.core.JavaElementDelta.removed(IJavaElement)",1,7,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.removed(IJavaElement,int)",4,2,n/a,10,1,2,7,2
"org.eclipse.jdt.internal.core.JavaElementDelta.sourceAttached(IJavaElement)",3,2,n/a,11,0,1,3,1
"org.eclipse.jdt.internal.core.JavaElementDelta.sourceDetached(IJavaElement)",3,2,n/a,11,0,1,3,1
"org.eclipse.jdt.internal.core.JavaElementDelta.toDebugString(StringBuffer,int)",37,2,n/a,100,1,2,82,33
"org.eclipse.jdt.internal.core.JavaElementDelta.toDebugString(int)",22,2,n/a,46,2,1,40,10
"org.eclipse.jdt.internal.core.JavaElementDelta.toString()",1,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.JavaElementDeltaBuilder(IJavaElement)",3,3,n/a,12,0,1,3,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.JavaElementDeltaBuilder(IJavaElement,int)",3,0,n/a,13,0,2,4,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.ListItem.ListItem(IJavaElement,IJavaElement)",0,4,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.added(IJavaElement)",4,1,n/a,17,0,1,11,5
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.buildDeltas()",7,3,n/a,15,1,0,7,2
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.equals(char[][][],char[][][])",1,2,n/a,12,0,2,11,7
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findAdditions(IJavaElement,int)",9,2,n/a,33,3,2,21,9
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findChangesInPositioning(IJavaElement,int)",7,2,n/a,25,3,2,16,9
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findContentChange(JavaElementInfo,JavaElementInfo,IJavaElement)",31,1,n/a,36,3,3,18,18
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findDeletions()",6,1,n/a,11,1,0,5,2
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.getElementInfo(IJavaElement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.getNewPosition(IJavaElement)",1,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.getOldPosition(IJavaElement)",1,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.initialize()",12,2,n/a,15,1,0,10,2
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.insertPositions(IJavaElement[],boolean)",4,2,n/a,17,2,2,11,5
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.isPositionedCorrectly(IJavaElement)",3,1,n/a,16,1,1,11,4
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.putElementInfo(IJavaElement,JavaElementInfo)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.putNewPosition(IJavaElement,ListItem)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.putOldPosition(IJavaElement,ListItem)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.recordElementInfo(IJavaElement,JavaModel,int)",6,3,n/a,21,2,3,14,6
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.recordNewPositions(IJavaElement,int)",4,2,n/a,20,3,2,12,6
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.removeElementInfo(IJavaElement)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.removed(IJavaElement)",4,1,n/a,17,0,1,11,5
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.toString()",5,0,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.trimDelta(JavaElementDelta)",5,2,n/a,16,2,1,11,4
"org.eclipse.jdt.internal.core.JavaElementInfo.JavaElementInfo()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementInfo.addChild(IJavaElement)",4,11,n/a,9,2,1,4,3
"org.eclipse.jdt.internal.core.JavaElementInfo.clone()",2,0,n/a,8,1,0,3,2
"org.eclipse.jdt.internal.core.JavaElementInfo.getChildren()",0,13,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementInfo.growAndAddToArray(IJavaElement[],IJavaElement)",1,1,n/a,11,0,2,5,1
"org.eclipse.jdt.internal.core.JavaElementInfo.includesChild(IJavaElement)",1,2,n/a,11,2,1,6,3
"org.eclipse.jdt.internal.core.JavaElementInfo.removeAndShrinkArray(IJavaElement[],IJavaElement)",2,1,n/a,19,2,2,12,3
"org.eclipse.jdt.internal.core.JavaElementInfo.removeChild(IJavaElement)",3,2,n/a,5,1,1,2,2
"org.eclipse.jdt.internal.core.JavaElementInfo.setChildren(IJavaElement[])",0,12,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptField(IField)",2,0,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptInitializer(IInitializer)",2,0,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptMemberType(IType)",2,1,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptMethod(IMethod)",2,0,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptPackageFragment(IPackageFragment)",2,2,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptType(IType)",2,5,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getFields()",2,0,n/a,12,1,0,6,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getInitializers()",2,0,n/a,12,1,0,6,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getMemberTypes()",2,0,n/a,12,1,0,6,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getMethods()",2,0,n/a,12,1,0,6,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getPackageFragments()",2,2,n/a,12,1,0,6,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getTypes()",2,0,n/a,12,1,0,6,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.isCanceled()",0,11,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaElementRequestor.reset()",0,0,n/a,12,0,0,7,1
"org.eclipse.jdt.internal.core.JavaElementRequestor.setCanceled(boolean)",0,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModel.JavaModel()",1,1,n/a,11,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModel.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",7,1,n/a,12,2,4,9,3
"org.eclipse.jdt.internal.core.JavaModel.contains(IResource)",3,0,n/a,24,2,1,15,5
"org.eclipse.jdt.internal.core.JavaModel.copy(IJavaElement[],IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",5,3,n/a,10,1,6,3,5
"org.eclipse.jdt.internal.core.JavaModel.createElementInfo()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModel.delete(IJavaElement[],boolean,IProgressMonitor)",5,3,n/a,10,1,3,3,5
"org.eclipse.jdt.internal.core.JavaModel.equals(Object)",1,11,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.JavaModel.findJavaProject(IProject)",3,6,n/a,18,3,1,9,4
"org.eclipse.jdt.internal.core.JavaModel.flushExternalFileCache()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModel.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModel.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",4,9,n/a,12,1,3,6,2
"org.eclipse.jdt.internal.core.JavaModel.getHandleMemento(StringBuffer)",2,14,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getHandleMementoDelimiter()",1,3,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.JavaModel.getJavaProject(IResource)",8,2,n/a,20,1,1,9,5
"org.eclipse.jdt.internal.core.JavaModel.getJavaProject(String)",4,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getJavaProjects()",3,20,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.JavaModel.getNonJavaResources()",2,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModel.getOldJavaProjectsList()",2,3,n/a,11,0,0,2,2
"org.eclipse.jdt.internal.core.JavaModel.getPath()",0,72,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModel.getResource()",2,57,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModel.getTarget(IContainer,IPath,boolean)",12,28,n/a,38,2,3,21,11
"org.eclipse.jdt.internal.core.JavaModel.getUnderlyingResource()",0,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModel.getWorkspace()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModel.move(IJavaElement[],IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",5,3,n/a,10,1,6,3,5
"org.eclipse.jdt.internal.core.JavaModel.refreshExternalArchives(IJavaElement[],IProgressMonitor)",3,1,n/a,9,1,2,3,2
"org.eclipse.jdt.internal.core.JavaModel.rename(IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",4,3,n/a,12,1,5,5,5
"org.eclipse.jdt.internal.core.JavaModel.runOperation(MultiOperation,IJavaElement[],IJavaElement[],String[],IProgressMonitor)",3,4,n/a,12,2,5,7,3
"org.eclipse.jdt.internal.core.JavaModel.toStringInfo(int,StringBuffer,Object)",4,5,n/a,10,1,3,4,2
"org.eclipse.jdt.internal.core.JavaModelCache.JavaModelCache()",5,1,n/a,7,0,0,5,1
"org.eclipse.jdt.internal.core.JavaModelCache.ensureSpaceLimit(Map)",11,1,n/a,33,2,1,26,5
"org.eclipse.jdt.internal.core.JavaModelCache.getInfo(IJavaElement)",6,1,n/a,20,1,1,14,7
"org.eclipse.jdt.internal.core.JavaModelCache.peekAtInfo(IJavaElement)",6,3,n/a,21,1,1,14,7
"org.eclipse.jdt.internal.core.JavaModelCache.putInfo(IJavaElement,Object)",6,1,n/a,25,1,2,19,7
"org.eclipse.jdt.internal.core.JavaModelCache.removeInfo(IJavaElement)",6,1,n/a,25,1,1,19,7
"org.eclipse.jdt.internal.core.JavaModelCache.resetSpaceLimit(IJavaElement)",4,1,n/a,18,1,1,10,4
"org.eclipse.jdt.internal.core.JavaModelCache.toStringFillingRation(String)",28,2,n/a,20,0,1,18,1
"org.eclipse.jdt.internal.core.JavaModelInfo.computeNonJavaResources()",5,1,n/a,23,3,0,17,6
"org.eclipse.jdt.internal.core.JavaModelInfo.getNonJavaResources()",1,1,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.core.JavaModelManager.EclipsePreferencesListener.preferenceChange(PreferenceChangeEvent)",15,0,n/a,18,2,1,9,5
"org.eclipse.jdt.internal.core.JavaModelManager.JavaModelManager()",0,1,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.PerProjectInfo(IProject)",0,1,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.toString()",18,0,n/a,33,2,0,27,6
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.updateClasspathInformation(IClasspathEntry[])",0,2,n/a,6,0,1,3,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.PerWorkingCopyInfo(ICompilationUnit,IProblemRequestor)",0,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.acceptProblem(IProblem)",1,2,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.beginReporting()",1,3,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.endReporting()",1,3,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.getWorkingCopy()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.isActive()",1,3,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.toString()",9,0,n/a,10,0,0,8,1
"org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles()",3,3,n/a,8,0,0,3,2
"org.eclipse.jdt.internal.core.JavaModelManager.closeZipFile(ZipFile)",5,11,n/a,14,2,1,8,5
"org.eclipse.jdt.internal.core.JavaModelManager.configurePluginDebugOptions()",32,1,n/a,37,1,0,46,17
"org.eclipse.jdt.internal.core.JavaModelManager.conflictsWithOutputLocation(IPath,JavaProject)",7,1,n/a,35,5,2,19,8
"org.eclipse.jdt.internal.core.JavaModelManager.containerClone(IJavaProject)",4,1,n/a,7,0,1,6,2
"org.eclipse.jdt.internal.core.JavaModelManager.containerGet(IJavaProject,IPath)",4,5,n/a,13,1,2,8,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerInitializationInProgress(IJavaProject)",6,2,n/a,16,1,1,9,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerPut(IJavaProject,IPath,IClasspathContainer)",13,7,n/a,31,2,3,18,6
"org.eclipse.jdt.internal.core.JavaModelManager.containersReset(String[])",12,1,n/a,19,5,1,14,6
"org.eclipse.jdt.internal.core.JavaModelManager.create(IFile,IJavaProject)",10,7,n/a,33,1,2,13,7
"org.eclipse.jdt.internal.core.JavaModelManager.create(IFolder,IJavaProject)",7,7,n/a,26,1,2,8,6
"org.eclipse.jdt.internal.core.JavaModelManager.create(IResource,IJavaProject)",5,7,n/a,36,1,2,14,7
"org.eclipse.jdt.internal.core.JavaModelManager.createClassFileFrom(IFile,IJavaProject)",8,2,n/a,21,1,2,9,4
"org.eclipse.jdt.internal.core.JavaModelManager.createCompilationUnitFrom(IFile,IJavaProject)",11,2,n/a,21,2,2,11,5
"org.eclipse.jdt.internal.core.JavaModelManager.createJarPackageFragmentRootFrom(IFile,IJavaProject)",7,2,n/a,30,3,2,15,6
"org.eclipse.jdt.internal.core.JavaModelManager.determineIfOnClasspath(IResource,IJavaProject)",23,3,n/a,45,5,2,26,12
"org.eclipse.jdt.internal.core.JavaModelManager.discardPerWorkingCopyInfo(CompilationUnit)",13,1,n/a,47,3,1,24,10
"org.eclipse.jdt.internal.core.JavaModelManager.doneSaving(ISaveContext)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.JavaModelManager.flushZipFiles()",10,3,n/a,21,3,0,12,5
"org.eclipse.jdt.internal.core.JavaModelManager.getClasspathBeingResolved()",3,3,n/a,8,1,0,5,2
"org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(IPath,IJavaProject)",3,2,n/a,13,2,2,7,3
"org.eclipse.jdt.internal.core.JavaModelManager.getDeltaProcessor()",1,9,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getElementsOutOfSynchWithBuffers()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getIndexManager()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getInfo(IJavaElement)",3,11,n/a,13,2,1,6,3
"org.eclipse.jdt.internal.core.JavaModelManager.getJavaModel()",0,28,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getJavaModelManager()",0,140,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(IProject,IProgressMonitor)",7,2,n/a,21,2,2,11,5
"org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfo(IProject,boolean)",3,6,n/a,13,2,2,6,3
"org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(IProject)",5,1,n/a,15,2,1,6,3
"org.eclipse.jdt.internal.core.JavaModelManager.getPerWorkingCopyInfo(CompilationUnit,boolean,boolean,IProblemRequestor)",6,4,n/a,23,2,4,13,8
"org.eclipse.jdt.internal.core.JavaModelManager.getPreviousSessionContainer(IPath,IJavaProject)",20,1,n/a,35,5,2,25,6
"org.eclipse.jdt.internal.core.JavaModelManager.getPreviousSessionVariable(String)",4,1,n/a,17,2,1,7,3
"org.eclipse.jdt.internal.core.JavaModelManager.getRegisteredContainerIDs()",10,1,n/a,22,3,0,20,6
"org.eclipse.jdt.internal.core.JavaModelManager.getRegisteredVariableNames()",10,1,n/a,22,3,0,20,6
"org.eclipse.jdt.internal.core.JavaModelManager.getSerializationFile(IProject)",4,3,n/a,8,0,1,4,2
"org.eclipse.jdt.internal.core.JavaModelManager.getTemporaryCache()",3,3,n/a,12,1,0,5,2
"org.eclipse.jdt.internal.core.JavaModelManager.getWorkingCopies(WorkingCopyOwner,boolean)",9,15,n/a,26,2,2,15,7
"org.eclipse.jdt.internal.core.JavaModelManager.getZipFile(IPath)",20,7,n/a,41,2,1,21,9
"org.eclipse.jdt.internal.core.JavaModelManager.hasTemporaryCache()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(IJavaProject,IPath)",30,1,n/a,72,4,2,54,14
"org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(IJavaProject,IPath)",32,2,n/a,88,5,2,48,18
"org.eclipse.jdt.internal.core.JavaModelManager.intern(String)",1,2,n/a,14,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.isClasspathBeingResolved(IJavaProject)",2,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.loadVariablesAndContainers()",43,1,n/a,79,5,0,55,18
"org.eclipse.jdt.internal.core.JavaModelManager.peekAtInfo(IJavaElement)",3,3,n/a,14,2,1,6,3
"org.eclipse.jdt.internal.core.JavaModelManager.prepareToSave(ISaveContext)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.JavaModelManager.putInfos(IJavaElement,Map)",10,3,n/a,30,3,2,15,6
"org.eclipse.jdt.internal.core.JavaModelManager.readState(IProject)",22,1,n/a,29,3,1,19,8
"org.eclipse.jdt.internal.core.JavaModelManager.recreatePersistedContainer(String,String,boolean)",25,2,n/a,3,5,3,25,9
"org.eclipse.jdt.internal.core.JavaModelManager.rememberScope(AbstractSearchScope)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.removeInfoAndChildren(JavaElement)",12,5,n/a,55,4,1,42,13
"org.eclipse.jdt.internal.core.JavaModelManager.removePerProjectInfo(JavaProject)",3,4,n/a,9,2,1,5,2
"org.eclipse.jdt.internal.core.JavaModelManager.resetProjectPreferences(JavaProject)",2,2,n/a,12,2,1,5,2
"org.eclipse.jdt.internal.core.JavaModelManager.resetTemporaryCache()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.rollback(ISaveContext)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.JavaModelManager.saveBuiltState(PerProjectInfo)",28,1,n/a,47,3,1,25,9
"org.eclipse.jdt.internal.core.JavaModelManager.saveState(PerProjectInfo,ISaveContext)",2,2,n/a,6,0,2,4,3
"org.eclipse.jdt.internal.core.JavaModelManager.saving(ISaveContext)",37,0,n/a,71,4,1,46,15
"org.eclipse.jdt.internal.core.JavaModelManager.setBuildOrder(String[])",12,0,n/a,49,3,1,36,11
"org.eclipse.jdt.internal.core.JavaModelManager.setClasspathBeingResolved(IJavaProject,boolean)",4,2,n/a,7,1,2,3,2
"org.eclipse.jdt.internal.core.JavaModelManager.setLastBuiltState(IProject,Object)",5,5,n/a,20,2,2,9,6
"org.eclipse.jdt.internal.core.JavaModelManager.shutdown()",1,2,n/a,6,1,0,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.updateVariableValues(String[],IPath[],IProgressMonitor)",46,2,n/a,23,6,3,83,33
"org.eclipse.jdt.internal.core.JavaModelManager.variableGet(String)",3,3,n/a,8,1,1,4,2
"org.eclipse.jdt.internal.core.JavaModelManager.variableInitializationInProgress()",3,2,n/a,11,1,0,5,2
"org.eclipse.jdt.internal.core.JavaModelManager.variableNames()",5,1,n/a,10,1,0,7,2
"org.eclipse.jdt.internal.core.JavaModelManager.variablePut(String,IPath)",13,4,n/a,30,2,2,15,5
"org.eclipse.jdt.internal.core.JavaModelOperation.IPostAction.getID()",n/a,4,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.JavaModelOperation.IPostAction.run()",n/a,1,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement)",0,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement,boolean)",0,0,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[])",0,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[],IJavaElement[])",0,1,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[],IJavaElement[],boolean)",0,3,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[],boolean)",0,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.JavaModelOperation.addAction(IPostAction)",1,3,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(IJavaElementDelta)",3,15,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.addReconcileDelta(ICompilationUnit,IJavaElementDelta)",7,1,n/a,16,2,2,10,3
"org.eclipse.jdt.internal.core.JavaModelOperation.beginTask(String,int)",1,8,n/a,8,1,2,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.checkCanceled()",3,2,n/a,13,1,0,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.commonVerify()",2,1,n/a,15,2,0,8,5
"org.eclipse.jdt.internal.core.JavaModelOperation.copyResources(IResource[],IPath)",5,1,n/a,13,1,2,6,2
"org.eclipse.jdt.internal.core.JavaModelOperation.createFile(IContainer,String,InputStream,boolean)",6,1,n/a,15,1,4,5,3
"org.eclipse.jdt.internal.core.JavaModelOperation.createFolder(IContainer,String,boolean)",6,2,n/a,16,1,3,5,3
"org.eclipse.jdt.internal.core.JavaModelOperation.deleteEmptyPackageFragment(IPackageFragment,boolean,IResource)",11,2,n/a,29,3,3,10,7
"org.eclipse.jdt.internal.core.JavaModelOperation.deleteResource(IResource,int)",4,6,n/a,11,1,2,4,2
"org.eclipse.jdt.internal.core.JavaModelOperation.deleteResources(IResource[],boolean)",5,2,n/a,17,1,2,8,5
"org.eclipse.jdt.internal.core.JavaModelOperation.done()",1,7,n/a,8,1,0,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.equalsOneOf(IPath,IPath[])",1,3,n/a,11,2,2,6,3
"org.eclipse.jdt.internal.core.JavaModelOperation.executeNestedOperation(JavaModelOperation,int)",11,2,n/a,28,4,2,14,6
"org.eclipse.jdt.internal.core.JavaModelOperation.executeOperation()",n/a,2,15,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.JavaModelOperation.firstActionWithID(String,int)",2,3,n/a,12,2,2,6,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getAttribute(Object)",4,1,n/a,14,1,1,7,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getCompilationUnitFor(IJavaElement)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getCurrentOperationStack()",3,7,n/a,12,1,0,5,2
"org.eclipse.jdt.internal.core.JavaModelOperation.getElementToProcess()",0,12,n/a,10,1,0,3,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getElementsToProcess()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getJavaModel()",3,10,n/a,10,1,0,3,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getNestedFolders(IPackageFragmentRoot)",7,3,n/a,17,2,1,14,5
"org.eclipse.jdt.internal.core.JavaModelOperation.getParentElement()",0,16,n/a,10,1,0,3,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getParentElements()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getResultElements()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getSchedulingRule()",2,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getSubProgressMonitor(int)",1,14,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.JavaModelOperation.hasModifiedResource()",2,1,n/a,7,0,0,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.internalWorked(double)",1,0,n/a,5,1,1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.isCanceled()",1,1,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.core.JavaModelOperation.isReadOnly()",0,4,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.isTopLevelOperation()",3,2,n/a,9,0,0,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.moveResources(IResource[],IPath)",5,2,n/a,16,1,2,8,3
"org.eclipse.jdt.internal.core.JavaModelOperation.newJavaElementDelta()",2,4,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.popOperation()",4,1,n/a,16,2,0,7,3
"org.eclipse.jdt.internal.core.JavaModelOperation.postAction(IPostAction,int)",15,6,n/a,51,3,2,34,11
"org.eclipse.jdt.internal.core.JavaModelOperation.prefixesOneOf(IPath,IPath[])",1,3,n/a,11,2,2,6,3
"org.eclipse.jdt.internal.core.JavaModelOperation.pushOperation(JavaModelOperation)",2,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.removeAllPostAction(String)",6,1,n/a,18,1,1,10,4
"org.eclipse.jdt.internal.core.JavaModelOperation.removeReconcileDelta(ICompilationUnit)",3,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.run(IProgressMonitor)",18,3,n/a,44,4,1,20,7
"org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(IProgressMonitor)",13,37,n/a,32,4,1,14,7
"org.eclipse.jdt.internal.core.JavaModelOperation.runPostActions()",4,1,n/a,9,2,0,5,3
"org.eclipse.jdt.internal.core.JavaModelOperation.setAttribute(Object,Object)",4,17,n/a,10,1,2,4,2
"org.eclipse.jdt.internal.core.JavaModelOperation.setCanceled(boolean)",1,0,n/a,8,1,1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.setNested(boolean)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.setTaskName(String)",1,0,n/a,8,1,1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.subTask(String)",1,0,n/a,8,1,1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.verify()",1,9,n/a,13,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.worked(int)",2,11,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus()",1,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(CoreException)",1,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int)",1,26,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement)",1,79,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement,IPath)",1,8,n/a,8,0,3,2,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement,IPath,String)",1,2,n/a,9,0,4,3,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement,String)",1,8,n/a,8,0,3,2,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement[])",1,4,n/a,9,0,2,3,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IPath)",1,58,n/a,8,0,2,3,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,String)",1,58,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,Throwable)",1,58,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,int,String)",1,0,n/a,9,0,3,4,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getBits()",2,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getChildren()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getElements()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getMessage()",103,1,n/a,168,4,0,139,62
"org.eclipse.jdt.internal.core.JavaModelStatus.getPath()",0,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getSeverity()",2,0,n/a,14,2,0,10,4
"org.eclipse.jdt.internal.core.JavaModelStatus.getString()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.isDoesNotExist()",1,4,n/a,7,0,0,2,2
"org.eclipse.jdt.internal.core.JavaModelStatus.isMultiStatus()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.isOK()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.matches(JavaModelStatus,int)",1,2,n/a,9,0,2,4,4
"org.eclipse.jdt.internal.core.JavaModelStatus.matches(int)",3,0,n/a,14,2,1,8,4
"org.eclipse.jdt.internal.core.JavaModelStatus.newMultiStatus(IJavaModelStatus[])",1,1,n/a,11,0,1,3,1
"org.eclipse.jdt.internal.core.JavaModelStatus.toString()",6,0,n/a,14,1,0,7,2
"org.eclipse.jdt.internal.core.JavaProject.JavaProject()",1,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.JavaProject(IProject,JavaElement)",1,5,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.JavaProject.addToBuildSpec(String)",6,1,n/a,13,1,1,6,2
"org.eclipse.jdt.internal.core.JavaProject.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",15,1,n/a,31,4,4,19,6
"org.eclipse.jdt.internal.core.JavaProject.canonicalizedPath(IPath)",13,4,n/a,72,2,1,26,10
"org.eclipse.jdt.internal.core.JavaProject.closing(Object)",2,3,n/a,11,2,1,8,3
"org.eclipse.jdt.internal.core.JavaProject.computeChildren(JavaProjectElementInfo)",7,1,n/a,27,5,1,15,5
"org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(ClasspathEntry,boolean,boolean,HashSet,ObjectVector,Map,Map)",22,2,n/a,58,5,7,27,13
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry)",1,5,n/a,18,1,1,3,2
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry,ObjectVector,HashSet,IClasspathEntry,boolean,boolean,Map)",32,2,n/a,88,4,7,49,26
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry[],ObjectVector,HashSet,IClasspathEntry,boolean,boolean,Map)",3,2,n/a,35,1,7,6,3
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry[],boolean,Map)",5,7,n/a,27,0,3,5,1
"org.eclipse.jdt.internal.core.JavaProject.computeSharedPropertyFileName(QualifiedName)",1,0,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.configure()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.contains(IResource)",18,4,n/a,53,2,1,32,17
"org.eclipse.jdt.internal.core.JavaProject.createClasspathProblemMarker(IJavaModelStatus)",19,13,n/a,70,2,1,36,14
"org.eclipse.jdt.internal.core.JavaProject.createElementInfo()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.decodeClasspath(String,boolean,boolean)",41,2,n/a,76,5,3,45,21
"org.eclipse.jdt.internal.core.JavaProject.deconfigure()",1,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.defaultClasspath()",2,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.defaultOutputLocation()",2,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.encodeClasspath(IClasspathEntry[],IPath,boolean)",19,2,n/a,28,2,3,21,4
"org.eclipse.jdt.internal.core.JavaProject.equals(Object)",2,14,n/a,16,0,1,6,3
"org.eclipse.jdt.internal.core.JavaProject.exists()",1,45,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.findElement(IPath)",1,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findElement(IPath,WorkingCopyOwner)",27,1,n/a,63,5,2,35,13
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragment(IPath)",2,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragment0(IPath)",2,1,n/a,8,0,1,2,1
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragmentRoot(IPath)",2,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragmentRoot0(IPath)",6,1,n/a,17,2,1,10,4
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragmentRoots(IClasspathEntry)",4,1,n/a,20,3,1,8,4
"org.eclipse.jdt.internal.core.JavaProject.findType(String)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,String)",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,String,WorkingCopyOwner)",2,2,n/a,11,0,3,2,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,WorkingCopyOwner)",8,2,n/a,23,3,2,12,5
"org.eclipse.jdt.internal.core.JavaProject.flushClasspathProblemMarkers(boolean,boolean)",9,7,n/a,28,5,2,15,11
"org.eclipse.jdt.internal.core.JavaProject.forceClasspathReload(IProgressMonitor)",32,1,n/a,96,4,1,36,18
"org.eclipse.jdt.internal.core.JavaProject.getAccessRestrictions(String)",6,0,n/a,18,2,1,13,5
"org.eclipse.jdt.internal.core.JavaProject.getAllPackageFragmentRoots()",1,5,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getAllPackageFragmentRoots(Map)",2,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getClasspathEntryFor(IPath)",3,3,n/a,17,2,1,7,3
"org.eclipse.jdt.internal.core.JavaProject.getCycleMarker()",4,3,n/a,20,4,0,11,6
"org.eclipse.jdt.internal.core.JavaProject.getEclipsePreferences()",13,5,n/a,5,3,0,14,4
"org.eclipse.jdt.internal.core.JavaProject.getElementName()",1,110,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(boolean)",1,10,n/a,11,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(boolean,boolean,Map,Map)",5,2,n/a,22,0,4,5,1
"org.eclipse.jdt.internal.core.JavaProject.getFolderPackageFragmentRoot(IPath)",6,2,n/a,11,1,1,3,2
"org.eclipse.jdt.internal.core.JavaProject.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",9,9,n/a,26,3,3,15,7
"org.eclipse.jdt.internal.core.JavaProject.getHandleMementoDelimiter()",0,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getJavaCommandIndex(ICommand[])",2,2,n/a,12,2,1,6,3
"org.eclipse.jdt.internal.core.JavaProject.getJavaProjectElementInfo()",1,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getNonJavaResources()",2,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getOption(String,boolean)",6,28,n/a,14,1,2,9,5
"org.eclipse.jdt.internal.core.JavaProject.getOptions(boolean)",9,33,n/a,25,3,1,15,7
"org.eclipse.jdt.internal.core.JavaProject.getOutputLocation()",1,16,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getOutputLocation(boolean,boolean)",3,2,n/a,18,1,2,9,3
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(IPath)",19,7,n/a,35,3,1,16,9
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(IResource)",6,8,n/a,19,2,1,11,6
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(String)",3,8,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot0(IPath)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots()",2,8,n/a,16,0,0,5,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots(IClasspathEntry)",1,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots(IPath)",7,0,n/a,17,2,1,10,3
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragments()",2,0,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentsInRoots(IPackageFragmentRoot[])",5,1,n/a,23,3,1,14,4
"org.eclipse.jdt.internal.core.JavaProject.getPath()",1,88,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo()",2,9,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPluginWorkingLocation()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPreferences()",1,0,n/a,23,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getProject()",0,50,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getRawClasspath()",1,23,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(boolean,boolean)",8,4,n/a,41,2,2,24,8
"org.eclipse.jdt.internal.core.JavaProject.getRequiredProjectNames()",2,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(IClasspathEntry[],IPath,boolean,boolean,Map)",34,6,n/a,91,4,5,65,29
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(boolean)",1,0,n/a,12,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(boolean,boolean)",1,0,n/a,12,0,2,1,1
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(boolean,boolean,boolean)",19,43,n/a,62,4,3,30,17
"org.eclipse.jdt.internal.core.JavaProject.getResource()",0,59,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getSharedProperty(String)",6,2,n/a,26,2,1,9,3
"org.eclipse.jdt.internal.core.JavaProject.getSourceMapper()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.getUnderlyingResource()",2,8,n/a,7,0,0,3,2
"org.eclipse.jdt.internal.core.JavaProject.hasBuildState()",2,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.hasClasspathCycle(IClasspathEntry[])",9,1,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.core.JavaProject.hasCycleMarker()",1,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.hasJavaNature(IProject)",1,32,n/a,14,1,1,3,2
"org.eclipse.jdt.internal.core.JavaProject.hasSource()",2,0,n/a,20,2,0,10,4
"org.eclipse.jdt.internal.core.JavaProject.hashCode()",1,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.isClasspathEqualsTo(IClasspathEntry[],IPath,IClasspathEntry[])",4,2,n/a,27,1,3,14,8
"org.eclipse.jdt.internal.core.JavaProject.isOnClasspath(IJavaElement)",12,0,n/a,40,3,1,28,10
"org.eclipse.jdt.internal.core.JavaProject.isOnClasspath(IResource)",9,0,n/a,27,2,1,17,6
"org.eclipse.jdt.internal.core.JavaProject.loadPreferences()",10,1,n/a,33,5,0,15,6
"org.eclipse.jdt.internal.core.JavaProject.newEvaluationContext()",2,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.newNameLookup(ICompilationUnit[])",4,2,n/a,10,1,1,3,1
"org.eclipse.jdt.internal.core.JavaProject.newNameLookup(WorkingCopyOwner)",3,7,n/a,8,0,1,3,2
"org.eclipse.jdt.internal.core.JavaProject.newSearchableNameEnvironment(ICompilationUnit[])",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newSearchableNameEnvironment(WorkingCopyOwner)",1,8,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IRegion,IProgressMonitor)",1,0,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IRegion,WorkingCopyOwner,IProgressMonitor)",7,1,n/a,17,1,3,6,2
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IType,IRegion,IProgressMonitor)",1,0,n/a,10,0,3,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IType,IRegion,WorkingCopyOwner,IProgressMonitor)",9,1,n/a,21,1,4,8,3
"org.eclipse.jdt.internal.core.JavaProject.projectPrerequisites(IClasspathEntry[])",8,3,n/a,20,2,1,14,4
"org.eclipse.jdt.internal.core.JavaProject.readClasspathFile(boolean,boolean)",14,7,n/a,32,3,2,12,8
"org.eclipse.jdt.internal.core.JavaProject.readOutputLocation()",3,1,n/a,16,2,0,7,4
"org.eclipse.jdt.internal.core.JavaProject.readRawClasspath()",3,1,n/a,17,2,0,8,4
"org.eclipse.jdt.internal.core.JavaProject.removeFromBuildSpec(String)",8,1,n/a,17,2,1,12,3
"org.eclipse.jdt.internal.core.JavaProject.resetCaches()",3,4,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.core.JavaProject.rootID()",1,3,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProject.saveClasspath(IClasspathEntry[],IPath)",6,1,n/a,24,1,2,9,5
"org.eclipse.jdt.internal.core.JavaProject.setJavaCommand(IProjectDescription,ICommand)",5,1,n/a,24,1,2,11,2
"org.eclipse.jdt.internal.core.JavaProject.setOption(String,String)",7,1,n/a,16,2,2,8,5
"org.eclipse.jdt.internal.core.JavaProject.setOptions(Map)",14,1,n/a,35,4,1,20,7
"org.eclipse.jdt.internal.core.JavaProject.setOutputLocation(IPath,IProgressMonitor)",5,1,n/a,13,1,2,5,3
"org.eclipse.jdt.internal.core.JavaProject.setProject(IProject)",2,1,n/a,11,0,1,2,1
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IPath,IProgressMonitor)",2,2,n/a,17,0,3,1,1
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IPath,IProgressMonitor,boolean,IClasspathEntry[],boolean,boolean)",6,6,n/a,30,2,7,9,3
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IProgressMonitor)",2,5,n/a,16,0,2,1,1
"org.eclipse.jdt.internal.core.JavaProject.setSharedProperty(String,String)",11,2,n/a,36,2,2,12,4
"org.eclipse.jdt.internal.core.JavaProject.updateAllCycleMarkers(Map)",24,2,n/a,53,6,1,32,11
"org.eclipse.jdt.internal.core.JavaProject.updateClasspathMarkers(Map,Map)",15,4,n/a,35,2,2,25,13
"org.eclipse.jdt.internal.core.JavaProject.updateCycleParticipants(ArrayList,HashSet,IWorkspaceRoot,HashSet,Map)",18,4,n/a,47,6,5,27,12
"org.eclipse.jdt.internal.core.JavaProject.updatePackageFragmentRoots()",4,4,n/a,17,3,0,6,4
"org.eclipse.jdt.internal.core.JavaProject.updatePreferences(IEclipsePreferences)",6,1,n/a,22,3,1,12,5
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.JavaProjectElementInfo()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.computeNonJavaResources(JavaProject)",27,1,n/a,98,4,1,54,22
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.getAllPackageFragmentRoots(JavaProject)",2,2,n/a,12,2,1,6,3
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.getAllPackageFragments(JavaProject)",7,1,n/a,32,4,1,26,6
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.getNonJavaResources(JavaProject)",1,1,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.isClasspathEntryOrOutputLocation(IPath,IClasspathEntry[],IPath)",5,2,n/a,17,2,3,12,6
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.resetCaches()",0,2,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.setNonJavaResources(Object[])",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.LRUCacheEnumerator(LRUEnumeratorElement)",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.LRUEnumeratorElement.LRUEnumeratorElement(Object)",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.hasMoreElements()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.nextElement()",0,0,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.LocalVariable.LocalVariable(JavaElement,String,int,int,int,int,String)",1,3,n/a,16,0,7,7,1
"org.eclipse.jdt.internal.core.LocalVariable.closing(Object)",0,3,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.core.LocalVariable.createElementInfo()",0,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.equals(Object)",1,22,n/a,10,0,1,4,6
"org.eclipse.jdt.internal.core.LocalVariable.exists()",1,42,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.generateInfos(Object,HashMap,IProgressMonitor)",0,1,n/a,3,0,3,0,1
"org.eclipse.jdt.internal.core.LocalVariable.getCorrespondingResource()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getElementName()",0,97,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getElementType()",0,103,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,10,n/a,7,1,3,4,2
"org.eclipse.jdt.internal.core.LocalVariable.getHandleMemento(StringBuffer)",17,14,n/a,22,1,1,16,2
"org.eclipse.jdt.internal.core.LocalVariable.getHandleMementoDelimiter()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getNameRange()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getPath()",1,73,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getResource()",1,57,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getSource()",6,10,n/a,21,1,0,12,5
"org.eclipse.jdt.internal.core.LocalVariable.getSourceRange()",1,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getTypeSignature()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getUnderlyingResource()",1,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.hashCode()",2,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.isStructureKnown()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.LocalVariable.toStringInfo(int,StringBuffer,Object)",7,5,n/a,8,1,3,5,2
"org.eclipse.jdt.internal.core.Member.Member(JavaElement)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.Member.areSimilarMethods(String,String[],String,String[],String[])",6,3,n/a,22,4,5,12,6
"org.eclipse.jdt.internal.core.Member.convertConstant(Constant)",17,1,n/a,33,1,1,25,14
"org.eclipse.jdt.internal.core.Member.equalsDOMNode(IDOMNode)",3,13,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.Member.findMethods(IMethod,IMethod[])",11,3,n/a,32,2,2,22,5
"org.eclipse.jdt.internal.core.Member.getClassFile()",2,25,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Member.getDeclaringType()",2,25,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.core.Member.getFlags()",2,12,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.Member.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",27,10,n/a,48,3,3,36,12
"org.eclipse.jdt.internal.core.Member.getHandleMementoDelimiter()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Member.getNameRange()",5,6,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.Member.getOuterMostLocalContext()",2,8,n/a,27,2,0,17,5
"org.eclipse.jdt.internal.core.Member.getType(String,int)",4,5,n/a,12,1,2,5,2
"org.eclipse.jdt.internal.core.Member.isBinary()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Member.isMainMethod(IMethod)",11,2,n/a,13,3,1,8,6
"org.eclipse.jdt.internal.core.Member.isReadOnly()",1,9,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Member.readableName()",9,5,n/a,14,1,0,8,2
"org.eclipse.jdt.internal.core.Member.updateNameRange(int,int)",3,0,n/a,12,1,2,5,2
"org.eclipse.jdt.internal.core.MemberElementInfo.getModifiers()",0,9,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.getNameSourceEnd()",0,5,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.getNameSourceStart()",0,6,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.setFlags(int)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.setNameSourceEnd(int)",0,4,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.setNameSourceStart(int)",0,4,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.ModelUpdater.addToParentInfo(Openable)",4,2,n/a,14,2,1,5,4
"org.eclipse.jdt.internal.core.ModelUpdater.close(Openable)",1,3,n/a,10,1,1,2,2
"org.eclipse.jdt.internal.core.ModelUpdater.elementAdded(Openable)",9,1,n/a,41,1,1,14,4
"org.eclipse.jdt.internal.core.ModelUpdater.elementChanged(Openable)",1,1,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.ModelUpdater.elementRemoved(Openable)",13,1,n/a,31,1,1,18,6
"org.eclipse.jdt.internal.core.ModelUpdater.processJavaDelta(IJavaElementDelta)",6,2,n/a,21,2,1,7,2
"org.eclipse.jdt.internal.core.ModelUpdater.removeFromParentInfo(Openable)",4,1,n/a,16,2,1,5,4
"org.eclipse.jdt.internal.core.ModelUpdater.traverseDelta(IJavaElementDelta,IPackageFragmentRoot,IJavaProject)",11,2,n/a,51,2,3,34,13
"org.eclipse.jdt.internal.core.MoveElementsOperation.MoveElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,2,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.MoveElementsOperation.getMainTaskName()",1,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.MoveElementsOperation.isMove()",0,13,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.MovePackageFragmentRootOperation(IPackageFragmentRoot,IPath,int,int,IClasspathEntry)",1,1,n/a,13,0,5,1,1
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.executeOperation()",17,2,n/a,31,2,0,18,10
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.moveResource(IPackageFragmentRoot,IClasspathEntry,IWorkspaceRoot)",36,1,n/a,40,7,3,40,16
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.removeEntryFromClasspath(IPath,IJavaProject)",6,1,n/a,27,3,2,19,7
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.renameEntryInClasspath(IPath,IJavaProject)",9,2,n/a,38,3,2,26,9
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.updateReferringProjectClasspaths(IPath,IJavaProject)",4,1,n/a,12,1,2,9,3
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation.MoveResourceElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,2,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation.getMainTaskName()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation.isMove()",0,13,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.MultiOperation.MultiOperation(IJavaElement[],IJavaElement[],boolean)",4,2,n/a,16,2,3,11,4
"org.eclipse.jdt.internal.core.MultiOperation.MultiOperation(IJavaElement[],boolean)",1,2,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.MultiOperation.error(int,IJavaElement)",2,33,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.MultiOperation.executeOperation()",1,2,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.core.MultiOperation.getDestinationParent(IJavaElement)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.getMainTaskName()",n/a,1,8,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.MultiOperation.getNewNameFor(IJavaElement)",1,6,n/a,10,0,1,3,2
"org.eclipse.jdt.internal.core.MultiOperation.initializeRenamings()",2,1,n/a,14,3,0,7,5
"org.eclipse.jdt.internal.core.MultiOperation.isMove()",0,13,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.MultiOperation.isRename()",0,6,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.MultiOperation.processElement(IJavaElement)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.MultiOperation.processElements()",12,4,n/a,36,3,0,20,7
"org.eclipse.jdt.internal.core.MultiOperation.setInsertBefore(IJavaElement,IJavaElement)",1,1,n/a,10,0,2,1,1
"org.eclipse.jdt.internal.core.MultiOperation.setRenamings(String[])",1,3,n/a,16,0,1,2,1
"org.eclipse.jdt.internal.core.MultiOperation.verify(IJavaElement)",n/a,1,6,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.MultiOperation.verifyDestination(IJavaElement,IJavaElement)",17,2,n/a,45,2,2,36,20
"org.eclipse.jdt.internal.core.MultiOperation.verifyRenaming(IJavaElement)",13,4,n/a,29,2,1,19,7
"org.eclipse.jdt.internal.core.MultiOperation.verifySibling(IJavaElement,IJavaElement)",5,1,n/a,12,2,2,4,4
"org.eclipse.jdt.internal.core.NameLookup.NameLookup(IPackageFragmentRoot[],HashtableOfArrayToObject,ICompilationUnit[],Map)",30,1,n/a,63,5,4,50,15
"org.eclipse.jdt.internal.core.NameLookup.acceptType(IType,int,boolean)",4,6,n/a,33,2,3,14,9
"org.eclipse.jdt.internal.core.NameLookup.findAllTypes(String,boolean,int,IJavaElementRequestor)",4,1,n/a,29,3,4,18,7
"org.eclipse.jdt.internal.core.NameLookup.findCompilationUnit(String)",11,1,n/a,43,5,1,26,9
"org.eclipse.jdt.internal.core.NameLookup.findPackageFragment(IPath)",26,1,n/a,83,6,1,52,18
"org.eclipse.jdt.internal.core.NameLookup.findPackageFragments(String,boolean)",13,9,n/a,53,6,2,38,11
"org.eclipse.jdt.internal.core.NameLookup.findSecondaryType(String,IPackageFragment,boolean,int)",20,0,n/a,5,4,4,23,14
"org.eclipse.jdt.internal.core.NameLookup.findType(String,IPackageFragment,boolean,int)",3,4,n/a,29,0,4,6,2
"org.eclipse.jdt.internal.core.NameLookup.findType(String,String,boolean,int)",9,3,n/a,20,1,4,15,8
"org.eclipse.jdt.internal.core.NameLookup.findType(String,boolean,int)",4,5,n/a,28,1,3,8,2
"org.eclipse.jdt.internal.core.NameLookup.getMemberType(IType,String,int)",4,3,n/a,9,1,3,6,3
"org.eclipse.jdt.internal.core.NameLookup.nameMatches(String,ICompilationUnit,boolean)",5,0,n/a,17,1,3,3,2
"org.eclipse.jdt.internal.core.NameLookup.nameMatches(String,IJavaElement,boolean)",5,2,n/a,17,1,3,3,2
"org.eclipse.jdt.internal.core.NameLookup.seekPackageFragments(String,boolean,IJavaElementRequestor)",13,3,n/a,46,4,3,28,11
"org.eclipse.jdt.internal.core.NameLookup.seekTypes(String,IPackageFragment,boolean,int,IJavaElementRequestor)",7,4,n/a,51,2,5,18,7
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInBinaryPackage(String,IPackageFragment,boolean,int,IJavaElementRequestor)",18,1,n/a,44,3,5,27,14
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInSourcePackage(String,IPackageFragment,boolean,int,IJavaElementRequestor)",41,1,n/a,102,6,5,79,32
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInTopLevelType(String,int,IType,IJavaElementRequestor,int)",6,3,n/a,10,1,5,6,4
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInType(String,int,IType,IJavaElementRequestor,int)",12,2,n/a,35,2,5,24,9
"org.eclipse.jdt.internal.core.NamedMember.NamedMember(JavaElement,String)",1,4,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.NamedMember.getElementName()",0,117,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.Openable(JavaElement)",1,7,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.Openable.bufferChanged(BufferChangedEvent)",11,1,n/a,16,1,1,4,2
"org.eclipse.jdt.internal.core.Openable.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",n/a,1,6,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.internal.core.Openable.canBeRemovedFromCache()",1,2,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.core.Openable.canBufferBeRemovedFromCache(IBuffer)",1,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.Openable.closeBuffer()",5,4,n/a,11,1,0,6,3
"org.eclipse.jdt.internal.core.Openable.closing(Object)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.Openable.codeComplete(ICompilationUnit,ICompilationUnit,int,CompletionRequestor,WorkingCopyOwner)",12,2,n/a,21,1,5,14,6
"org.eclipse.jdt.internal.core.Openable.codeSelect(ICompilationUnit,int,int,WorkingCopyOwner)",14,2,n/a,19,1,4,14,6
"org.eclipse.jdt.internal.core.Openable.createElementInfo()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.exists()",7,44,n/a,14,1,0,9,6
"org.eclipse.jdt.internal.core.Openable.generateInfos(Object,HashMap,IProgressMonitor)",18,5,n/a,46,2,3,34,12
"org.eclipse.jdt.internal.core.Openable.getBuffer()",5,25,n/a,23,2,0,7,3
"org.eclipse.jdt.internal.core.Openable.getBufferFactory()",2,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.getBufferManager()",1,11,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.getCorrespondingResource()",1,3,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.getOpenable()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.getPackageFragmentRoot()",1,17,n/a,11,1,0,6,3
"org.eclipse.jdt.internal.core.Openable.getUnderlyingResource()",5,8,n/a,21,2,0,11,5
"org.eclipse.jdt.internal.core.Openable.hasBuffer()",0,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.hasUnsavedChanges()",12,2,n/a,31,4,0,15,12
"org.eclipse.jdt.internal.core.Openable.isConsistent()",0,4,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.isOpen()",2,24,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.isSourceElement()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.isStructureKnown()",2,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.Openable.makeConsistent(IProgressMonitor)",14,5,n/a,32,4,1,18,7
"org.eclipse.jdt.internal.core.Openable.open(IProgressMonitor)",1,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.Openable.openBuffer(IProgressMonitor,Object)",0,2,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.core.Openable.openParent(Object,HashMap,IProgressMonitor)",4,2,n/a,9,1,3,3,3
"org.eclipse.jdt.internal.core.Openable.parentExists()",2,1,n/a,9,0,0,4,2
"org.eclipse.jdt.internal.core.Openable.resourceExists()",5,3,n/a,12,0,0,4,2
"org.eclipse.jdt.internal.core.Openable.save(IProgressMonitor,boolean)",6,5,n/a,13,1,2,6,3
"org.eclipse.jdt.internal.core.OpenableElementInfo.isStructureKnown()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.OpenableElementInfo.setIsStructureKnown(boolean)",0,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.OverflowingLRUCache(int)",1,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.OverflowingLRUCache(int,int)",1,3,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.clone()",2,0,n/a,16,1,0,7,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.close(LRUCacheEntry)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.OverflowingLRUCache.elements()",4,1,n/a,18,1,0,10,3
"org.eclipse.jdt.internal.core.OverflowingLRUCache.fillingRatio()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.getEntryTable()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.getLoadFactor()",0,0,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.getOverflow()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.makeSpace(int)",1,5,n/a,40,2,1,18,7
"org.eclipse.jdt.internal.core.OverflowingLRUCache.newInstance(int,int)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.core.OverflowingLRUCache.peek(Object)",1,3,n/a,13,1,1,4,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.printStats()",17,0,n/a,3,2,0,28,6
"org.eclipse.jdt.internal.core.OverflowingLRUCache.privateRemoveEntry(LRUCacheEntry,boolean)",1,6,n/a,10,0,2,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.privateRemoveEntry(LRUCacheEntry,boolean,boolean)",6,3,n/a,46,3,3,20,7
"org.eclipse.jdt.internal.core.OverflowingLRUCache.put(Object,Object)",7,4,n/a,40,2,2,18,4
"org.eclipse.jdt.internal.core.OverflowingLRUCache.remove(Object)",1,4,n/a,10,0,1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.setLoadFactor(double)",2,0,n/a,12,0,1,3,3
"org.eclipse.jdt.internal.core.OverflowingLRUCache.setSpaceLimit(int)",1,2,n/a,11,1,1,3,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.shrink()",1,3,n/a,9,0,0,3,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.toString()",4,0,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.updateTimestamp(LRUCacheEntry)",2,3,n/a,15,2,1,5,3
"org.eclipse.jdt.internal.core.PackageDeclaration.PackageDeclaration(CompilationUnit,String)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.PackageDeclaration.equals(Object)",1,22,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.PackageDeclaration.equalsDOMNode(IDOMNode)",4,10,n/a,8,0,1,1,2
"org.eclipse.jdt.internal.core.PackageDeclaration.getElementName()",0,99,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getHandleMementoDelimiter()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getPrimaryElement(boolean)",3,5,n/a,8,0,1,4,3
"org.eclipse.jdt.internal.core.PackageDeclaration.toStringInfo(int,StringBuffer,Object)",5,5,n/a,11,1,3,5,2
"org.eclipse.jdt.internal.core.PackageFragment.PackageFragment(PackageFragmentRoot,String[])",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.PackageFragment.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",26,1,n/a,44,4,4,33,12
"org.eclipse.jdt.internal.core.PackageFragment.containsJavaResources()",2,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragment.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",4,2,n/a,19,1,5,11,4
"org.eclipse.jdt.internal.core.PackageFragment.createCompilationUnit(String,String,boolean,IProgressMonitor)",3,0,n/a,8,0,4,3,1
"org.eclipse.jdt.internal.core.PackageFragment.createElementInfo()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragment.delete(boolean,IProgressMonitor)",2,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.PackageFragment.equals(Object)",2,11,n/a,7,0,1,6,4
"org.eclipse.jdt.internal.core.PackageFragment.getClassFile(String)",4,16,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.PackageFragment.getClassFiles()",4,3,n/a,16,1,0,6,2
"org.eclipse.jdt.internal.core.PackageFragment.getCompilationUnit(String)",4,12,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.PackageFragment.getCompilationUnits()",4,5,n/a,12,1,0,6,2
"org.eclipse.jdt.internal.core.PackageFragment.getCompilationUnits(WorkingCopyOwner)",6,2,n/a,20,2,1,15,6
"org.eclipse.jdt.internal.core.PackageFragment.getElementName()",1,110,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.core.PackageFragment.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragment.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",7,9,n/a,16,1,3,10,3
"org.eclipse.jdt.internal.core.PackageFragment.getHandleMementoDelimiter()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragment.getKind()",2,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragment.getNonJavaResources()",5,2,n/a,11,1,0,3,2
"org.eclipse.jdt.internal.core.PackageFragment.getPath()",5,73,n/a,16,2,0,10,3
"org.eclipse.jdt.internal.core.PackageFragment.getResource()",8,60,n/a,19,2,0,12,4
"org.eclipse.jdt.internal.core.PackageFragment.getUnderlyingResource()",6,8,n/a,26,3,0,15,7
"org.eclipse.jdt.internal.core.PackageFragment.hasChildren()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragment.hasSubpackages()",3,1,n/a,16,1,0,16,5
"org.eclipse.jdt.internal.core.PackageFragment.hashCode()",3,8,n/a,6,0,0,6,2
"org.eclipse.jdt.internal.core.PackageFragment.isDefaultPackage()",0,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragment.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",4,3,n/a,19,1,5,11,4
"org.eclipse.jdt.internal.core.PackageFragment.rename(String,boolean,IProgressMonitor)",5,3,n/a,12,1,3,6,2
"org.eclipse.jdt.internal.core.PackageFragment.toStringChildren(int,StringBuffer,Object)",1,2,n/a,8,1,3,2,2
"org.eclipse.jdt.internal.core.PackageFragment.toStringInfo(int,StringBuffer,Object)",6,5,n/a,18,2,3,8,4
"org.eclipse.jdt.internal.core.PackageFragmentInfo.PackageFragmentInfo()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentInfo.containsJavaResources()",0,2,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentInfo.getNonJavaResources(IResource,PackageFragmentRoot)",4,1,n/a,19,2,2,5,3
"org.eclipse.jdt.internal.core.PackageFragmentInfo.setNonJavaResources(Object[])",0,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.PackageFragmentRoot(IResource,JavaProject)",1,4,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.attachSource(IPath,IPath,IProgressMonitor)",34,4,n/a,95,4,3,45,22
"org.eclipse.jdt.internal.core.PackageFragmentRoot.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",8,1,n/a,11,0,4,7,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.computeChildren(OpenableElementInfo,Map)",12,1,n/a,29,2,2,14,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.computeFolderChildren(IContainer,boolean,String[],ArrayList,char[][],char[][])",19,2,n/a,51,6,6,30,14
"org.eclipse.jdt.internal.core.PackageFragmentRoot.copy(IPath,int,int,IClasspathEntry,IProgressMonitor)",2,0,n/a,14,0,5,2,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.createElementInfo()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.createPackageFragment(String,boolean,IProgressMonitor)",3,0,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.createSourceMapper(IPath,IPath)",4,2,n/a,7,0,2,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.delete(int,int,IProgressMonitor)",2,0,n/a,11,0,3,2,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.determineKind(IResource)",6,1,n/a,17,2,1,8,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.equals(Object)",2,10,n/a,15,0,1,6,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.exists()",3,47,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.findSourceAttachmentRecommendation()",22,1,n/a,75,7,0,48,22
"org.eclipse.jdt.internal.core.PackageFragmentRoot.fullExclusionPatternChars()",4,11,n/a,16,2,0,8,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.fullInclusionPatternChars()",4,11,n/a,16,2,0,8,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getElementName()",1,99,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",7,9,n/a,29,3,3,17,7
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getHandleMemento(StringBuffer)",15,14,n/a,21,2,1,10,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getHandleMementoDelimiter()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getKind()",2,15,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getNonJavaResources()",4,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPackageFragment(String)",2,5,n/a,8,0,1,2,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPackageFragment(String[])",1,24,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPackageName(IFolder)",9,0,n/a,18,2,1,12,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPath()",2,91,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getRawClasspathEntry()",5,7,n/a,13,1,0,7,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getResource()",0,71,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentPath()",6,2,n/a,18,1,0,10,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentProperty()",13,2,n/a,33,3,0,15,6
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentPropertyName()",3,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentRootPath()",6,2,n/a,17,1,0,12,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceMapper()",11,17,n/a,39,4,0,19,7
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getUnderlyingResource()",3,9,n/a,7,0,0,3,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.hasChildren()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.hashCode()",1,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.isArchive()",0,23,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.isExternal()",0,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.move(IPath,int,int,IClasspathEntry,IProgressMonitor)",2,0,n/a,14,0,5,2,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.setSourceAttachmentProperty(String)",4,9,n/a,7,1,1,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.setSourceMapper(SourceMapper)",2,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.toStringInfo(int,StringBuffer,Object)",17,5,n/a,23,2,3,11,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.validateOnClasspath()",7,3,n/a,21,3,0,12,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.verifyAttachSource(IPath)",8,1,n/a,18,1,1,6,5
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.PackageFragmentRootInfo()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.computeFolderNonJavaResources(JavaProject,IContainer,char[][],char[][])",18,2,n/a,49,3,4,31,15
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.computeNonJavaResources(IJavaProject,IResource,PackageFragmentRoot)",5,1,n/a,21,2,3,5,4
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.getNonJavaResources(IJavaProject,IResource,PackageFragmentRoot)",1,1,n/a,11,1,3,5,2
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.getRootKind()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.getSourceMapper()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.isClasspathEntry(IPath,IClasspathEntry[])",2,2,n/a,9,2,2,7,3
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.setNonJavaResources(Object[])",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.setRootKind(int)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.setSourceMapper(SourceMapper)",0,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryField.ParameterizedBinaryField(JavaElement,String,String)",1,3,n/a,7,0,3,2,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryField.toStringInfo(int,StringBuffer,Object)",3,6,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryMethod.ParameterizedBinaryMethod(JavaElement,String,String[],String)",1,1,n/a,7,0,4,2,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryMethod.toStringInfo(int,StringBuffer,Object)",3,6,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryType.ParameterizedBinaryType(JavaElement,String,String)",1,1,n/a,7,0,3,2,1
"org.eclipse.jdt.internal.core.ParameterizedBinaryType.toStringInfo(int,StringBuffer,Object)",3,6,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.ParameterizedSourceField.ParameterizedSourceField(JavaElement,String,String)",1,3,n/a,7,0,3,2,1
"org.eclipse.jdt.internal.core.ParameterizedSourceField.toStringInfo(int,StringBuffer,Object)",3,6,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.ParameterizedSourceMethod.ParameterizedSourceMethod(JavaElement,String,String[],String)",1,1,n/a,7,0,4,2,1
"org.eclipse.jdt.internal.core.ParameterizedSourceMethod.toStringInfo(int,StringBuffer,Object)",3,6,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.ParameterizedSourceType.ParameterizedSourceType(JavaElement,String,String)",1,2,n/a,7,0,3,2,1
"org.eclipse.jdt.internal.core.ParameterizedSourceType.toStringInfo(int,StringBuffer,Object)",3,6,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.ReconcileWorkingCopyOperation(IJavaElement,boolean,int,boolean,WorkingCopyOwner)",1,1,n/a,7,0,5,5,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation()",24,2,n/a,53,6,0,35,15
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.getWorkingCopy()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.isReadOnly()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.verify()",5,9,n/a,11,1,0,7,3
"org.eclipse.jdt.internal.core.Region.Region()",1,4,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.Region.add(IJavaElement)",4,4,n/a,11,1,1,4,2
"org.eclipse.jdt.internal.core.Region.contains(IJavaElement)",7,5,n/a,20,3,1,14,5
"org.eclipse.jdt.internal.core.Region.getAncestors(IJavaElement)",5,1,n/a,15,1,1,7,2
"org.eclipse.jdt.internal.core.Region.getElements()",2,9,n/a,11,1,0,7,2
"org.eclipse.jdt.internal.core.Region.remove(IJavaElement)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.Region.removeAllChildren(IJavaElement)",7,2,n/a,28,4,1,16,6
"org.eclipse.jdt.internal.core.Region.toString()",8,0,n/a,16,2,0,11,3
"org.eclipse.jdt.internal.core.RenameElementsOperation.RenameElementsOperation(IJavaElement[],IJavaElement[],String[],boolean)",2,1,n/a,10,0,4,2,1
"org.eclipse.jdt.internal.core.RenameElementsOperation.getMainTaskName()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.RenameElementsOperation.isRename()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.RenameElementsOperation.verify()",3,10,n/a,11,0,0,6,4
"org.eclipse.jdt.internal.core.RenameElementsOperation.verify(IJavaElement)",10,1,n/a,20,1,1,13,10
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.RenameResourceElementsOperation(IJavaElement[],IJavaElement[],String[],boolean)",2,2,n/a,10,0,4,2,1
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.getMainTaskName()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.isRename()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.verify(IJavaElement)",7,2,n/a,17,2,1,9,6
"org.eclipse.jdt.internal.core.SearchableEnvironment.SearchableEnvironment(JavaProject,ICompilationUnit[])",5,1,n/a,14,1,2,6,2
"org.eclipse.jdt.internal.core.SearchableEnvironment.SearchableEnvironment(JavaProject,WorkingCopyOwner)",5,2,n/a,14,1,2,6,2
"org.eclipse.jdt.internal.core.SearchableEnvironment.cleanup()",0,8,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.find(String,String)",22,3,n/a,65,4,2,37,15
"org.eclipse.jdt.internal.core.SearchableEnvironment.findPackages(char[],ISearchRequestor)",3,5,n/a,13,0,2,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.findType(char[],char[][])",3,7,n/a,9,0,2,3,4
"org.eclipse.jdt.internal.core.SearchableEnvironment.findType(char[][])",6,8,n/a,17,1,1,11,4
"org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(String,ISearchRequestor,int)",9,3,n/a,25,2,3,15,5
"org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(char[],ISearchRequestor)",21,8,n/a,12,3,2,33,14
"org.eclipse.jdt.internal.core.SearchableEnvironment.isPackage(char[][],char[])",6,7,n/a,14,0,2,11,8
"org.eclipse.jdt.internal.core.SearchableEnvironment.isTopLevelPackage(char[])",3,1,n/a,5,0,1,1,3
"org.eclipse.jdt.internal.core.SearchableEnvironment.toStringChar(char[])",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.toStringCharChar(char[][])",4,0,n/a,10,1,1,6,2
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.SearchableEnvironmentRequestor(ISearchRequestor)",0,1,n/a,11,0,1,5,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.SearchableEnvironmentRequestor(ISearchRequestor,ICompilationUnit,IJavaProject,NameLookup)",2,1,n/a,12,0,4,5,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptInitializer(IInitializer)",0,0,n/a,9,0,1,0,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptPackageFragment(IPackageFragment)",3,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptType(IType)",30,5,n/a,35,4,1,19,10
"org.eclipse.jdt.internal.core.SelectionRequestor.SelectionRequestor(NameLookup,Openable)",1,2,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptBinaryMethod(IType,char[],char[][],char[][],String[],char[])",13,1,n/a,23,2,6,9,4
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptClass(char[],char[],boolean,char[],int,int)",1,7,n/a,6,0,6,1,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptError(IProblem)",0,5,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptField(char[],char[],char[],boolean,char[],int,int)",32,3,n/a,58,6,7,31,14
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptInterface(char[],char[],boolean,char[],int,int)",1,6,n/a,6,0,6,1,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalField(FieldBinding)",24,1,n/a,35,4,1,19,8
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalMethod(MethodBinding)",19,1,n/a,24,3,1,11,6
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalType(TypeBinding)",16,3,n/a,20,2,1,14,7
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalVariable(LocalVariableBinding)",9,1,n/a,23,2,1,11,4
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptMethod(char[],char[],String,char[],char[][],char[][],String[],boolean,boolean,char[],int,int)",17,3,n/a,41,4,12,21,9
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptMethodDeclaration(IType,char[],int,int)",18,1,n/a,31,4,4,22,8
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptMethodTypeParameter(char[],char[],char[],int,int,char[],boolean,int,int)",26,3,n/a,49,4,9,33,12
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptPackage(char[])",7,4,n/a,16,3,1,10,4
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptSourceMethod(IType,char[],char[][],char[][],char[])",32,1,n/a,76,4,5,51,15
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptType(char[],char[],int,boolean,char[],int,int)",16,2,n/a,26,3,7,14,7
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptTypeParameter(char[],char[],char[],boolean,int,int)",14,3,n/a,29,3,6,17,6
"org.eclipse.jdt.internal.core.SelectionRequestor.addElement(IJavaElement)",1,20,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.SelectionRequestor.findLocalElement(int)",2,6,n/a,22,2,1,10,5
"org.eclipse.jdt.internal.core.SelectionRequestor.getElements()",1,3,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.core.SelectionRequestor.resolveType(char[],char[],int)",26,4,n/a,61,5,3,42,27
"org.eclipse.jdt.internal.core.SelectionRequestor.resolveTypeByLocation(char[],char[],int,int,int)",31,5,n/a,74,7,5,52,31
"org.eclipse.jdt.internal.core.SetClasspathOperation.SetClasspathOperation(JavaProject,IClasspathEntry[],IClasspathEntry[],IPath,boolean,boolean,boolean)",1,1,n/a,20,0,7,8,1
"org.eclipse.jdt.internal.core.SetClasspathOperation.addClasspathDeltas(IPackageFragmentRoot[],int,JavaElementDelta)",3,4,n/a,24,3,3,9,6
"org.eclipse.jdt.internal.core.SetClasspathOperation.classpathContains(IClasspathEntry[],IClasspathEntry)",22,2,n/a,59,4,2,41,21
"org.eclipse.jdt.internal.core.SetClasspathOperation.collectAllSubfolders(IFolder,ArrayList)",5,2,n/a,17,3,2,10,4
"org.eclipse.jdt.internal.core.SetClasspathOperation.determineAffectedPackageFragments(IPath)",23,2,n/a,42,4,1,28,9
"org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation()",15,2,n/a,44,5,0,25,11
"org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDeltas()",87,1,n/a,3,7,0,152,43
"org.eclipse.jdt.internal.core.SetClasspathOperation.getSourceAttachmentDeltaFlag(IPath,IPath)",1,2,n/a,20,2,2,9,5
"org.eclipse.jdt.internal.core.SetClasspathOperation.isReadOnly()",0,4,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.SetClasspathOperation.saveClasspathIfNecessary()",4,1,n/a,20,1,0,13,7
"org.eclipse.jdt.internal.core.SetClasspathOperation.toString()",14,0,n/a,22,2,0,18,5
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects(IPath)",16,2,n/a,10,7,1,23,8
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath()",11,1,n/a,16,1,0,9,3
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateCycleMarkersIfNecessary()",5,1,n/a,3,2,0,9,5
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateOutputLocation()",24,1,n/a,42,2,0,26,6
"org.eclipse.jdt.internal.core.SetClasspathOperation.updateProjectReferencesIfNecessary()",2,1,n/a,13,0,0,3,3
"org.eclipse.jdt.internal.core.SetClasspathOperation.verify()",7,9,n/a,32,3,0,16,7
"org.eclipse.jdt.internal.core.SimpleDelta.added()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.changed(int)",0,8,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.SimpleDelta.getFlags()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.getKind()",0,13,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.modifiers()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.removed()",0,5,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.SimpleDelta.superTypes()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.toDebugString(StringBuffer)",10,2,n/a,20,1,1,17,5
"org.eclipse.jdt.internal.core.SimpleDelta.toDebugString(StringBuffer,int)",4,2,n/a,16,1,2,12,5
"org.eclipse.jdt.internal.core.SimpleDelta.toString()",3,0,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptField(IField)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptInitializer(IInitializer)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptMemberType(IType)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptMethod(IMethod)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptPackageFragment(IPackageFragment)",0,2,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptType(IType)",0,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.getType()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.isCanceled()",0,11,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.reset()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration.SortAbstractMethodDeclaration(int,int,char[],char[][],char[][],char[][])",5,2,n/a,20,2,6,18,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration.decodeSignature()",6,2,n/a,13,2,0,11,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration.generateSource(StringBuffer)",5,18,n/a,28,3,1,18,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration.mapPositions()",4,6,n/a,24,3,0,17,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortClassDeclaration.SortClassDeclaration(int,int,char[],char[],char[][])",2,1,n/a,7,1,5,4,2
"org.eclipse.jdt.internal.core.SortElementBuilder.SortClassDeclaration.convert()",19,1,n/a,35,3,0,22,6
"org.eclipse.jdt.internal.core.SortElementBuilder.SortClassDeclaration.display(StringBuffer,int)",9,1,n/a,18,2,2,12,4
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.SortCompilationUnit(int)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.convert()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.display(StringBuffer,int)",0,1,n/a,3,0,2,0,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.generateSource(StringBuffer)",5,19,n/a,16,2,1,11,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit.mapPositions()",4,7,n/a,14,2,0,11,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortConstructorDeclaration.SortConstructorDeclaration(int,int,char[],char[][],char[][],char[][])",1,1,n/a,4,0,6,2,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortConstructorDeclaration.convert()",14,1,n/a,25,3,0,18,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortConstructorDeclaration.display(StringBuffer,int)",5,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.SortElement(int,int)",2,6,n/a,8,0,2,6,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.convert()",n/a,1,8,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.newType(String)",16,8,n/a,36,2,1,28,12
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.occurencesOf(char,String)",2,8,n/a,8,0,2,9,4
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.setParameters(MethodDeclaration,String[],String[])",26,2,n/a,35,4,3,32,7
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement.splitOn(char,String)",5,9,n/a,19,2,2,19,7
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElementBuilder(char[],int[],Comparator,CompilerOptions)",2,1,n/a,7,0,4,5,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.SortFieldDeclaration(int,int,char[],char[],int)",3,1,n/a,8,0,5,6,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.convert()",27,1,n/a,28,2,0,22,4
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.display(StringBuffer,int)",4,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.generateReduceSource(StringBuffer)",4,1,n/a,24,3,1,17,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.generateSource(StringBuffer)",5,18,n/a,28,3,1,18,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.mapPositions()",4,6,n/a,24,3,0,17,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration.mapReducedPositions()",4,1,n/a,24,3,0,17,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.SortInitializer(int,int)",1,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.convert()",4,1,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.display(StringBuffer,int)",3,1,n/a,5,0,2,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.generateSource(StringBuffer)",5,18,n/a,28,3,1,18,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer.mapPositions()",4,6,n/a,24,3,0,17,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInterfaceDeclaration.SortInterfaceDeclaration(int,int,char[],char[][])",1,1,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInterfaceDeclaration.convert()",13,1,n/a,24,3,0,17,4
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInterfaceDeclaration.display(StringBuffer,int)",8,1,n/a,15,2,2,10,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMethodDeclaration.SortMethodDeclaration(int,int,char[],char[][],char[][],char[][],char[])",2,1,n/a,7,1,7,4,2
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMethodDeclaration.convert()",34,1,n/a,48,3,0,35,9
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMethodDeclaration.display(StringBuffer,int)",8,1,n/a,12,1,2,4,2
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.SortMultipleFieldDeclaration(SortFieldDeclaration)",1,1,n/a,11,0,1,9,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.addField(SortFieldDeclaration)",1,2,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.convert()",31,1,n/a,32,2,0,27,5
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.display(StringBuffer,int)",10,1,n/a,15,2,2,8,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.generateSource(StringBuffer)",5,18,n/a,22,2,1,17,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.mapPositions()",4,6,n/a,18,2,0,16,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration.sort()",1,3,n/a,5,1,0,4,2
"org.eclipse.jdt.internal.core.SortElementBuilder.SortType.SortType(int,int,char[],char[][])",3,2,n/a,11,2,4,9,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortType.generateSource(StringBuffer)",6,18,n/a,19,2,1,13,3
"org.eclipse.jdt.internal.core.SortElementBuilder.SortType.mapPositions()",4,6,n/a,15,2,0,12,3
"org.eclipse.jdt.internal.core.SortElementBuilder.acceptLineSeparatorPositions(int[])",0,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.enterClass(TypeInfo)",3,4,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.SortElementBuilder.enterCompilationUnit()",3,4,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.SortElementBuilder.enterConstructor(MethodInfo)",3,3,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.SortElementBuilder.enterField(FieldInfo)",7,4,n/a,24,3,1,14,7
"org.eclipse.jdt.internal.core.SortElementBuilder.enterInitializer(int,int)",3,4,n/a,10,1,2,4,2
"org.eclipse.jdt.internal.core.SortElementBuilder.enterInterface(TypeInfo)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.SortElementBuilder.enterMethod(MethodInfo)",3,3,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.SortElementBuilder.exitClass(int)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitCompilationUnit(int)",2,4,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitConstructor(int)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitField(int,int,int)",2,4,n/a,29,2,3,17,5
"org.eclipse.jdt.internal.core.SortElementBuilder.exitInitializer(int)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitInterface(int)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.exitMethod(int,int,int)",1,5,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.SortElementBuilder.getSource()",4,1,n/a,9,1,0,6,2
"org.eclipse.jdt.internal.core.SortElementBuilder.mapNextPosition(SortJavaElement,int,int)",0,21,n/a,13,2,3,8,4
"org.eclipse.jdt.internal.core.SortElementBuilder.normalizeSourceEnd(int)",2,2,n/a,21,1,1,13,6
"org.eclipse.jdt.internal.core.SortElementBuilder.normalizeSourceStart(int)",3,1,n/a,16,1,1,10,5
"org.eclipse.jdt.internal.core.SortElementBuilder.pop(int)",5,7,n/a,8,1,1,5,2
"org.eclipse.jdt.internal.core.SortElementBuilder.push(SortElement)",1,7,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.SortElementBuilder.searchLineNumber(int[],int)",0,3,n/a,28,2,2,15,6
"org.eclipse.jdt.internal.core.SortElementBuilder.sort()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SortElementsOperation.SortElementsOperation(IJavaElement[],int[],Comparator)",1,1,n/a,11,0,3,3,1
"org.eclipse.jdt.internal.core.SortElementsOperation.executeOperation()",13,2,n/a,22,2,0,13,3
"org.eclipse.jdt.internal.core.SortElementsOperation.getMainAmountOfWork()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.SortElementsOperation.processElement(ICompilationUnit,int[],char[])",17,1,n/a,35,2,3,11,3
"org.eclipse.jdt.internal.core.SortElementsOperation.verify()",4,9,n/a,20,1,0,7,5
"org.eclipse.jdt.internal.core.SortJavaElement.SortJavaElement(SortElementBuilder)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.SortJavaElement.addChild(SortElement)",1,7,n/a,8,1,1,5,3
"org.eclipse.jdt.internal.core.SortJavaElement.closeCollections()",1,1,n/a,6,1,0,3,3
"org.eclipse.jdt.internal.core.SortJavaElement.compareTo(Object)",1,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SortJavaElement.convertChildren()",2,1,n/a,10,1,0,9,2
"org.eclipse.jdt.internal.core.SortJavaElement.display(StringBuffer,int)",n/a,1,8,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.core.SortJavaElement.generateSource(StringBuffer)",1,18,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SortJavaElement.mapPositions()",n/a,6,6,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.SortJavaElement.sort()",3,3,n/a,16,2,0,13,4
"org.eclipse.jdt.internal.core.SortJavaElement.tab(int)",1,9,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.SortJavaElement.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SortJavaElement.toString(int)",9,3,n/a,14,2,1,10,3
"org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo.getDefaultValueSource(char[])",1,1,n/a,5,0,1,3,3
"org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo.isAnnotationMethod()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.getReturnTypeName()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.isAnnotationMethod()",0,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.isConstructor()",0,14,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.setReturnType(char[])",0,1,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.core.SourceField.SourceField(JavaElement,String)",1,3,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.SourceField.equals(Object)",1,22,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.SourceField.equalsDOMNode(IDOMNode)",2,13,n/a,8,0,1,1,2
"org.eclipse.jdt.internal.core.SourceField.getConstant()",29,0,n/a,41,3,0,30,14
"org.eclipse.jdt.internal.core.SourceField.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceField.getHandleMementoDelimiter()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceField.getPrimaryElement(boolean)",4,5,n/a,11,1,1,6,3
"org.eclipse.jdt.internal.core.SourceField.getTypeSignature()",2,3,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.SourceField.toStringInfo(int,StringBuffer,Object)",12,6,n/a,20,2,3,11,4
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getInitializationSource()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getName()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getTypeName()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getTypeSignature()",1,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.setTypeName(char[])",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.SourceMapper()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMapper.SourceMapper(IPath,String,Map)",9,1,n/a,22,1,3,12,3
"org.eclipse.jdt.internal.core.SourceMapper.acceptImport(int,int,char[],boolean,int)",8,3,n/a,35,1,5,16,4
"org.eclipse.jdt.internal.core.SourceMapper.acceptLineSeparatorPositions(int[])",0,5,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SourceMapper.acceptPackage(int,int,char[])",0,3,n/a,9,0,3,0,1
"org.eclipse.jdt.internal.core.SourceMapper.acceptProblem(IProblem)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SourceMapper.close()",0,1,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.SourceMapper.computeAllRootPaths(IPackageFragmentRoot)",73,1,n/a,122,7,1,90,39
"org.eclipse.jdt.internal.core.SourceMapper.computeRootPath(File,HashSet,boolean)",22,3,n/a,25,3,3,21,8
"org.eclipse.jdt.internal.core.SourceMapper.computeRootPath(IContainer,HashSet,boolean)",19,3,n/a,37,5,3,28,11
"org.eclipse.jdt.internal.core.SourceMapper.convertTypeNamesToSigs(char[][])",6,1,n/a,26,2,1,18,6
"org.eclipse.jdt.internal.core.SourceMapper.enterAbstractMethod(MethodInfo)",2,2,n/a,10,1,1,6,2
"org.eclipse.jdt.internal.core.SourceMapper.enterClass(TypeInfo)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterCompilationUnit()",0,4,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.SourceMapper.enterConstructor(MethodInfo)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterEnum(TypeInfo)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterField(FieldInfo)",2,4,n/a,11,1,1,4,2
"org.eclipse.jdt.internal.core.SourceMapper.enterInitializer(int,int)",0,4,n/a,8,0,2,0,1
"org.eclipse.jdt.internal.core.SourceMapper.enterInterface(TypeInfo)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterMethod(MethodInfo)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterType(TypeInfo)",15,3,n/a,66,2,1,18,4
"org.eclipse.jdt.internal.core.SourceMapper.exitAbstractMethod(int)",5,2,n/a,19,1,1,6,2
"org.eclipse.jdt.internal.core.SourceMapper.exitClass(int)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitCompilationUnit(int)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SourceMapper.exitConstructor(int)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitEnum(int)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitField(int,int,int)",3,4,n/a,14,1,3,3,2
"org.eclipse.jdt.internal.core.SourceMapper.exitInitializer(int)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SourceMapper.exitInterface(int)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitMethod(int,int,int)",1,5,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitType(int)",2,3,n/a,12,1,1,4,2
"org.eclipse.jdt.internal.core.SourceMapper.findSource(IType)",6,3,n/a,27,1,1,15,5
"org.eclipse.jdt.internal.core.SourceMapper.findSource(IType,String)",15,3,n/a,45,5,2,24,10
"org.eclipse.jdt.internal.core.SourceMapper.findSource(String)",16,1,n/a,48,5,1,27,12
"org.eclipse.jdt.internal.core.SourceMapper.getImports(BinaryType)",5,1,n/a,19,2,1,7,3
"org.eclipse.jdt.internal.core.SourceMapper.getMethodParameterNames(IMethod)",5,2,n/a,20,2,1,9,5
"org.eclipse.jdt.internal.core.SourceMapper.getNameRange(IJavaElement)",6,3,n/a,21,2,1,9,6
"org.eclipse.jdt.internal.core.SourceMapper.getSourceForRootPath(String,String)",3,2,n/a,13,2,2,7,3
"org.eclipse.jdt.internal.core.SourceMapper.getSourceRange(IJavaElement)",6,3,n/a,21,2,1,9,6
"org.eclipse.jdt.internal.core.SourceMapper.getType(String)",17,3,n/a,21,1,1,16,4
"org.eclipse.jdt.internal.core.SourceMapper.getUnqualifiedMethodHandle(IMethod,boolean)",22,7,n/a,61,6,2,46,12
"org.eclipse.jdt.internal.core.SourceMapper.hasToRetrieveSourceRangesForLocalClass(char[])",3,1,n/a,22,1,1,12,5
"org.eclipse.jdt.internal.core.SourceMapper.mapSource(IType,char[])",1,2,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.SourceMapper.mapSource(IType,char[],IJavaElement)",24,2,n/a,74,3,3,51,9
"org.eclipse.jdt.internal.core.SourceMapper.readSource(ZipEntry,ZipFile)",2,1,n/a,11,2,2,5,3
"org.eclipse.jdt.internal.core.SourceMapper.setMethodParameterNames(IMethod,char[][])",1,1,n/a,13,1,2,3,2
"org.eclipse.jdt.internal.core.SourceMapper.setSourceRange(IJavaElement,SourceRange,SourceRange)",1,3,n/a,12,0,3,1,1
"org.eclipse.jdt.internal.core.SourceMethod.SourceMethod(JavaElement,String,String[])",3,3,n/a,9,1,3,5,2
"org.eclipse.jdt.internal.core.SourceMethod.closing(Object)",2,3,n/a,8,1,1,7,2
"org.eclipse.jdt.internal.core.SourceMethod.equals(Object)",2,22,n/a,4,0,1,3,3
"org.eclipse.jdt.internal.core.SourceMethod.equalsDOMNode(IDOMNode)",9,13,n/a,23,3,1,8,7
"org.eclipse.jdt.internal.core.SourceMethod.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getExceptionTypes()",3,1,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.SourceMethod.getHandleMemento(StringBuffer)",10,14,n/a,17,1,1,12,3
"org.eclipse.jdt.internal.core.SourceMethod.getHandleMementoDelimiter()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getNumberOfParameters()",0,0,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.core.SourceMethod.getParameterNames()",3,3,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.SourceMethod.getParameterTypes()",0,19,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getPrimaryElement(boolean)",4,5,n/a,11,1,1,6,3
"org.eclipse.jdt.internal.core.SourceMethod.getReturnType()",3,3,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.SourceMethod.getSignature()",2,0,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.SourceMethod.getTypeParameter(String)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getTypeParameterSignatures()",9,2,n/a,26,3,0,19,4
"org.eclipse.jdt.internal.core.SourceMethod.getTypeParameters()",1,2,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.SourceMethod.hashCode()",3,8,n/a,10,1,0,6,2
"org.eclipse.jdt.internal.core.SourceMethod.isConstructor()",2,6,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.SourceMethod.isMainMethod()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethod.isSimilar(IMethod)",5,1,n/a,10,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.readableName()",9,5,n/a,18,3,0,13,5
"org.eclipse.jdt.internal.core.SourceMethod.signatureEquals(IDOMMethod)",5,2,n/a,33,4,1,19,9
"org.eclipse.jdt.internal.core.SourceMethod.toStringInfo(int,StringBuffer,Object)",13,6,n/a,23,2,3,14,5
"org.eclipse.jdt.internal.core.SourceMethod.toStringName(StringBuffer)",1,20,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.toStringName(StringBuffer,int)",17,2,n/a,27,3,2,21,7
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getArgumentNames()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getArgumentTypeNames()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getExceptionTypeNames()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getReturnTypeName()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getSelector()",0,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getSignature()",4,1,n/a,7,1,0,6,2
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getTypeParameterBounds()",1,3,n/a,13,2,0,9,3
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getTypeParameterNames()",2,3,n/a,9,1,0,9,3
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.isAnnotationMethod()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.isConstructor()",n/a,14,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.setArgumentNames(char[][])",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.setArgumentTypeNames(char[][])",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.setExceptionTypeNames(char[][])",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.setReturnType(char[])",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.SourceMethodInfo.getReturnTypeName()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.isAnnotationMethod()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.isConstructor()",0,14,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.setReturnType(char[])",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceRange.SourceRange(int,int)",0,15,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.SourceRange.getLength()",0,12,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRange.getOffset()",0,21,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRange.toString()",7,0,n/a,9,0,0,7,1
"org.eclipse.jdt.internal.core.SourceRefElement.SourceRefElement(JavaElement)",1,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.closing(Object)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.SourceRefElement.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",4,0,n/a,19,1,5,11,4
"org.eclipse.jdt.internal.core.SourceRefElement.createElementInfo()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.delete(boolean,IProgressMonitor)",2,0,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.SourceRefElement.equals(Object)",1,22,n/a,5,0,1,3,3
"org.eclipse.jdt.internal.core.SourceRefElement.generateInfos(Object,HashMap,IProgressMonitor)",5,1,n/a,11,1,3,6,3
"org.eclipse.jdt.internal.core.SourceRefElement.getCompilationUnit()",2,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getCorrespondingResource()",2,3,n/a,10,0,0,3,2
"org.eclipse.jdt.internal.core.SourceRefElement.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,10,n/a,10,1,3,4,2
"org.eclipse.jdt.internal.core.SourceRefElement.getHandleMemento(StringBuffer)",3,14,n/a,7,1,1,4,2
"org.eclipse.jdt.internal.core.SourceRefElement.getHandleUpdatingCountFromMemento(MementoTokenizer,WorkingCopyOwner)",5,6,n/a,10,0,2,5,2
"org.eclipse.jdt.internal.core.SourceRefElement.getOpenableParent()",2,9,n/a,14,2,0,6,3
"org.eclipse.jdt.internal.core.SourceRefElement.getPath()",2,72,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getResource()",2,57,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getSource()",6,10,n/a,21,1,0,12,5
"org.eclipse.jdt.internal.core.SourceRefElement.getSourceRange()",2,7,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource()",4,5,n/a,7,0,0,3,2
"org.eclipse.jdt.internal.core.SourceRefElement.hasChildren()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.isStructureKnown()",0,4,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",4,0,n/a,19,1,5,11,4
"org.eclipse.jdt.internal.core.SourceRefElement.rename(String,boolean,IProgressMonitor)",5,0,n/a,12,1,3,6,2
"org.eclipse.jdt.internal.core.SourceRefElement.toStringName(StringBuffer)",3,18,n/a,7,1,1,4,2
"org.eclipse.jdt.internal.core.SourceRefElementInfo.getDeclarationSourceEnd()",0,4,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.getDeclarationSourceStart()",0,4,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.getSourceRange()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.setSourceRangeEnd(int)",0,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.setSourceRangeStart(int)",0,7,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceType.SourceType(JavaElement,String)",4,5,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.SourceType.closing(Object)",2,3,n/a,8,1,1,7,2
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor)",1,1,n/a,6,0,8,1,1
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,WorkingCopyOwner)",22,3,n/a,28,1,9,15,6
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor)",1,1,n/a,7,0,8,1,1
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor,WorkingCopyOwner)",3,2,n/a,10,1,9,3,2
"org.eclipse.jdt.internal.core.SourceType.createField(String,IJavaElement,boolean,IProgressMonitor)",4,0,n/a,11,1,4,5,2
"org.eclipse.jdt.internal.core.SourceType.createInitializer(String,IJavaElement,IProgressMonitor)",4,0,n/a,11,1,3,5,2
"org.eclipse.jdt.internal.core.SourceType.createMethod(String,IJavaElement,boolean,IProgressMonitor)",4,0,n/a,11,1,4,5,2
"org.eclipse.jdt.internal.core.SourceType.createType(String,IJavaElement,boolean,IProgressMonitor)",4,0,n/a,11,1,4,5,2
"org.eclipse.jdt.internal.core.SourceType.equals(Object)",1,22,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.SourceType.equalsDOMNode(IDOMNode)",2,13,n/a,8,0,1,1,2
"org.eclipse.jdt.internal.core.SourceType.findMethods(IMethod)",2,0,n/a,11,1,1,3,2
"org.eclipse.jdt.internal.core.SourceType.getDeclaringType()",3,26,n/a,17,2,0,8,4
"org.eclipse.jdt.internal.core.SourceType.getElementType()",0,103,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceType.getField(String)",1,14,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceType.getFields()",3,3,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.SourceType.getFullyQualifiedName()",1,17,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceType.getFullyQualifiedName(char)",5,7,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.SourceType.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",36,10,n/a,80,4,3,63,23
"org.eclipse.jdt.internal.core.SourceType.getInitializer(int)",1,8,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceType.getInitializers()",3,1,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.SourceType.getMethod(String,String[])",1,18,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.SourceType.getMethods()",3,6,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.SourceType.getPackageFragment()",3,19,n/a,16,2,0,7,3
"org.eclipse.jdt.internal.core.SourceType.getPrimaryElement(boolean)",7,5,n/a,21,1,1,15,6
"org.eclipse.jdt.internal.core.SourceType.getSuperInterfaceNames()",3,4,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.SourceType.getSuperInterfaceTypeSignatures()",3,3,n/a,9,0,0,3,1
"org.eclipse.jdt.internal.core.SourceType.getSuperclassName()",3,5,n/a,11,1,0,5,2
"org.eclipse.jdt.internal.core.SourceType.getSuperclassTypeSignature()",4,3,n/a,12,1,0,5,2
"org.eclipse.jdt.internal.core.SourceType.getType(String)",1,14,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeParameter(String)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeParameterNames()",2,0,n/a,6,0,0,2,1
"org.eclipse.jdt.internal.core.SourceType.getTypeParameterSignatures()",9,2,n/a,26,3,0,19,4
"org.eclipse.jdt.internal.core.SourceType.getTypeParameters()",1,2,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.SourceType.getTypeQualifiedName()",1,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeQualifiedName(char)",8,13,n/a,20,1,1,12,6
"org.eclipse.jdt.internal.core.SourceType.getTypes()",3,5,n/a,9,0,0,4,1
"org.eclipse.jdt.internal.core.SourceType.isAnnotation()",2,4,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.SourceType.isAnonymous()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceType.isClass()",1,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.SourceType.isEnum()",2,3,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.SourceType.isInterface()",2,6,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.SourceType.isLocal()",0,3,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.core.SourceType.isMember()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceType.loadTypeHierachy(InputStream,IProgressMonitor)",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.SourceType.loadTypeHierachy(InputStream,WorkingCopyOwner,IProgressMonitor)",1,1,n/a,34,0,3,1,1
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(ICompilationUnit[],IProgressMonitor)",4,1,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(IProgressMonitor)",1,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(IWorkingCopy[],IProgressMonitor)",2,2,n/a,23,1,2,6,2
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(WorkingCopyOwner,IProgressMonitor)",6,2,n/a,12,0,2,4,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(ICompilationUnit[],IProgressMonitor)",4,1,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IJavaProject,IProgressMonitor)",1,0,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IJavaProject,WorkingCopyOwner,IProgressMonitor)",10,2,n/a,31,3,3,19,6
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IProgressMonitor)",4,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IWorkingCopy[],IProgressMonitor)",2,2,n/a,17,1,2,6,2
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(WorkingCopyOwner,IProgressMonitor)",6,2,n/a,12,0,2,4,1
"org.eclipse.jdt.internal.core.SourceType.resolveType(String)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceType.resolveType(String,WorkingCopyOwner)",20,2,n/a,3,3,2,24,4
"org.eclipse.jdt.internal.core.SourceType.toStringInfo(int,StringBuffer,Object)",26,6,n/a,44,3,3,27,8
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getEnclosingType()",3,9,n/a,16,2,0,6,4
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getFieldHandles()",1,2,n/a,15,1,0,16,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getFields()",2,0,n/a,17,2,0,10,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getFileName()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getHandle()",0,9,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getImports()",3,1,n/a,23,4,0,14,5
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getInitializers()",2,1,n/a,24,3,0,17,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getInterfaceNames()",2,7,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getKind()",0,23,n/a,12,1,0,7,4
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMemberTypeHandles()",1,2,n/a,15,1,0,16,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMemberTypes()",2,0,n/a,17,2,0,10,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMethodHandles()",1,2,n/a,15,1,0,16,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMethods()",2,1,n/a,18,2,0,11,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getName()",2,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getPackageName()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getSuperclassName()",2,8,n/a,12,2,0,5,4
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getTypeParameterBounds()",1,3,n/a,13,2,0,9,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getTypeParameterNames()",2,4,n/a,9,1,0,9,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.isBinaryType()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setHandle(IType)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setPackageName(char[])",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setSourceFileName(char[])",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setSuperInterfaceNames(char[][])",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setSuperclassName(char[])",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.TypeParameter.TypeParameter(JavaElement,String)",1,11,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.TypeParameter.equals(Object)",1,22,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.TypeParameter.getBounds()",2,0,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.TypeParameter.getDeclaringMember()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getElementName()",0,101,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getElementType()",0,103,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getHandleMementoDelimiter()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getNameRange()",2,0,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.TypeParameter.toStringName(StringBuffer)",4,18,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.TypeVector.TypeVector()",0,5,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.TypeVector.TypeVector(IType)",0,0,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.core.TypeVector.TypeVector(IType[])",1,1,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.core.TypeVector.add(IType)",1,5,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.core.TypeVector.addAll(IType[])",2,0,n/a,8,1,1,5,2
"org.eclipse.jdt.internal.core.TypeVector.contains(IType)",1,4,n/a,6,0,1,5,3
"org.eclipse.jdt.internal.core.TypeVector.copy()",2,2,n/a,8,0,0,6,1
"org.eclipse.jdt.internal.core.TypeVector.elementAt(int)",0,0,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.TypeVector.elements()",1,7,n/a,9,1,0,6,3
"org.eclipse.jdt.internal.core.TypeVector.find(IType)",0,0,n/a,6,0,1,5,3
"org.eclipse.jdt.internal.core.TypeVector.remove(IType)",1,2,n/a,11,1,1,7,3
"org.eclipse.jdt.internal.core.TypeVector.removeAll()",0,0,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.core.TypeVector.toString()",5,0,n/a,9,1,0,8,2
"org.eclipse.jdt.internal.core.UserLibrary.UserLibrary(IClasspathEntry[],boolean)",1,2,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.core.UserLibrary.createFromString(Reader)",37,1,n/a,36,3,1,26,9
"org.eclipse.jdt.internal.core.UserLibrary.equals(Object)",3,1,n/a,17,4,1,10,7
"org.eclipse.jdt.internal.core.UserLibrary.getEntries()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.UserLibrary.hashCode()",1,0,n/a,13,1,0,8,3
"org.eclipse.jdt.internal.core.UserLibrary.isSystemLibrary()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.UserLibrary.serialize()",22,1,n/a,25,1,0,24,4
"org.eclipse.jdt.internal.core.UserLibrary.toString()",4,0,n/a,10,1,0,9,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.UserLibraryClasspathContainer(String)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getClasspathEntries()",2,7,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getDescription()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getKind()",2,2,n/a,10,1,0,4,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getPath()",2,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getUserLibrary()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.canUpdateClasspathContainer(IPath,IJavaProject)",1,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.getComparisonID(IPath,IJavaProject)",0,0,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.getDescription(IPath,IJavaProject)",3,4,n/a,9,1,2,3,2
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.initialize(IPath,IJavaProject)",5,1,n/a,13,2,2,6,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.isUserLibraryContainer(IPath)",3,4,n/a,3,0,1,1,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.requestClasspathContainerUpdate(IPath,IJavaProject,IClasspathContainer)",7,1,n/a,14,2,3,6,3
"org.eclipse.jdt.internal.core.UserLibraryManager.UserLibraryManager()",0,0,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.UserLibraryManager.getLibraryMap()",7,4,n/a,27,5,0,16,7
"org.eclipse.jdt.internal.core.UserLibraryManager.getUserLibrary(String)",2,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.UserLibraryManager.getUserLibraryNames()",4,1,n/a,9,0,0,2,1
"org.eclipse.jdt.internal.core.UserLibraryManager.internalSetUserLibrary(String,UserLibrary,boolean,boolean,IProgressMonitor)",14,5,n/a,40,3,5,23,9
"org.eclipse.jdt.internal.core.UserLibraryManager.rebindClasspathEntries(String,boolean,IProgressMonitor)",18,1,n/a,41,4,3,26,8
"org.eclipse.jdt.internal.core.UserLibraryManager.recreatePersistedUserLibraryEntry(String,String,boolean,boolean)",9,2,n/a,17,3,4,10,5
"org.eclipse.jdt.internal.core.UserLibraryManager.setUserLibraries(String[],UserLibrary[],IProgressMonitor)",6,0,n/a,23,2,3,11,3
"org.eclipse.jdt.internal.core.UserLibraryManager.setUserLibrary(String,UserLibrary,IProgressMonitor)",1,2,n/a,11,0,3,1,1
"org.eclipse.jdt.internal.core.XMLWriter.XMLWriter(Writer)",2,2,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.XMLWriter.appendEscapedChar(StringBuffer,char)",5,1,n/a,10,1,2,6,2
"org.eclipse.jdt.internal.core.XMLWriter.endTag(String,boolean)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.XMLWriter.getEscaped(String)",6,1,n/a,6,0,1,6,2
"org.eclipse.jdt.internal.core.XMLWriter.getReplacement(char)",0,1,n/a,17,1,1,12,6
"org.eclipse.jdt.internal.core.XMLWriter.printTabulation()",1,1,n/a,4,0,0,4,2
"org.eclipse.jdt.internal.core.XMLWriter.printTag(String,HashMap,boolean,boolean,boolean)",22,6,n/a,28,2,5,20,6
"org.eclipse.jdt.internal.core.XMLWriter.startTag(String,boolean)",1,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.builder.AbortIncrementalBuildException.AbortIncrementalBuildException(String)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.AbstractImageBuilder(JavaBuilder)",4,2,n/a,11,0,1,8,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(CompilationResult)",40,9,n/a,66,5,1,45,13
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.cleanUp()",1,2,n/a,10,0,0,8,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(SourceFile[])",9,2,n/a,38,4,1,27,12
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(SourceFile[],SourceFile[])",9,2,n/a,32,1,2,25,8
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.createFolder(IPath,IContainer)",7,8,n/a,10,1,2,8,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.createProblemFor(IResource,IMember,String,String)",10,4,n/a,14,1,4,8,6
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.finishedWith(String,CompilationResult,char[],ArrayList,ArrayList)",6,2,n/a,20,1,5,20,5
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.internalException(CoreException)",2,4,n/a,6,0,1,4,2
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.isExcludedFromProject(IPath)",7,4,n/a,10,1,1,10,5
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.newCompiler()",5,1,n/a,19,1,0,8,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.storeProblemsFor(SourceFile,IProblem[])",18,2,n/a,63,2,2,18,9
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.storeTasksFor(SourceFile,IProblem[])",16,2,n/a,35,2,2,16,8
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.updateProblemsFor(SourceFile,CompilationResult)",3,1,n/a,6,0,2,5,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.updateTasksFor(SourceFile,CompilationResult)",2,1,n/a,5,0,2,4,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(ClassFile,SourceFile,boolean)",14,1,n/a,20,2,3,14,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFileBytes(byte[],IFile,String,boolean,boolean)",12,1,n/a,16,1,5,10,5
"org.eclipse.jdt.internal.core.builder.AdditionalTypeCollection.AdditionalTypeCollection(char[][],char[][][],char[][])",1,2,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.BatchImageBuilder(JavaBuilder)",1,2,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.addAllSourceFiles(ArrayList)",16,1,n/a,24,5,1,29,14
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build()",21,1,n/a,27,2,0,21,5
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(boolean)",36,2,n/a,22,8,1,60,25
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack(ClasspathMultiDirectory,boolean)",38,2,n/a,41,5,2,42,16
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyPackages(ClasspathMultiDirectory)",13,2,n/a,15,3,1,20,8
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.findOriginalResource(IPath)",2,1,n/a,10,2,1,9,4
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.BuildNotifier(IProgressMonitor,IProject)",0,2,n/a,10,0,2,8,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.aboutToCompile(SourceFile)",6,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.begin()",1,2,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.core.builder.BuildNotifier.checkCancel()",2,15,n/a,7,0,0,2,3
"org.eclipse.jdt.internal.core.builder.BuildNotifier.checkCancelWithinCompiler()",3,1,n/a,13,1,0,3,4
"org.eclipse.jdt.internal.core.builder.BuildNotifier.compiled(SourceFile)",8,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.done()",4,2,n/a,11,0,0,9,2
"org.eclipse.jdt.internal.core.builder.BuildNotifier.problemsMessage()",38,1,n/a,59,3,0,41,21
"org.eclipse.jdt.internal.core.builder.BuildNotifier.resetProblemCounters()",0,1,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.setCancelling(boolean)",0,1,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.setProgressPerCompilationUnit(float)",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.subTask(String)",4,16,n/a,9,0,1,7,4
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProblemCounts(IMarker[],IProblem[])",12,1,n/a,45,5,2,46,19
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProblemCounts(IProblem[])",1,1,n/a,4,0,1,6,3
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProgress(float)",3,2,n/a,13,2,1,7,4
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProgressDelta(float)",1,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.ClasspathDirectory(IContainer,boolean,AccessRestriction)",4,2,n/a,8,0,3,6,2
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.cleanup()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.directoryList(String)",11,2,n/a,27,3,1,23,10
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.doesFileExist(String,String,String)",2,1,n/a,8,0,3,8,4
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.equals(Object)",2,0,n/a,9,0,1,9,6
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.findClass(String,String,String)",14,3,n/a,31,6,3,20,11
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.getProjectRelativePath()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.isExcluded(IResource)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.isOutputFolder()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.isPackage(String)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.reset()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.toString()",2,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathJar.ClasspathJar(IFile,AccessRestriction)",2,2,n/a,8,0,2,6,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.ClasspathJar(String,AccessRestriction)",0,2,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.core.builder.ClasspathJar.ClasspathJar(ZipFile,AccessRestriction)",1,3,n/a,7,0,2,5,1
"org.eclipse.jdt.internal.core.builder.ClasspathJar.PackageCacheEntry.PackageCacheEntry(long,long,SimpleSet)",0,1,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.builder.ClasspathJar.cleanup()",1,2,n/a,10,2,0,5,4
"org.eclipse.jdt.internal.core.builder.ClasspathJar.equals(Object)",2,0,n/a,9,0,1,9,6
"org.eclipse.jdt.internal.core.builder.ClasspathJar.findClass(String,String,String)",6,3,n/a,13,2,3,9,5
"org.eclipse.jdt.internal.core.builder.ClasspathJar.findPackageSet(ZipFile)",18,1,n/a,31,2,1,22,7
"org.eclipse.jdt.internal.core.builder.ClasspathJar.getProjectRelativePath()",1,2,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.isPackage(String)",7,3,n/a,17,3,1,11,5
"org.eclipse.jdt.internal.core.builder.ClasspathJar.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.cleanup()",0,2,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.findClass(String,String,String)",n/a,3,3,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forBinaryFolder(IContainer,boolean,AccessRestriction)",1,4,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forLibrary(IFile,AccessRestriction)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forLibrary(String,AccessRestriction)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forSourceFolder(IContainer,IContainer,char[][],char[][])",1,2,n/a,3,0,4,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.getProjectRelativePath()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.isOutputFolder()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.isPackage(String)",n/a,2,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.reset()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.ClasspathMultiDirectory(IContainer,IContainer,char[][],char[][])",1,1,n/a,12,0,4,9,5
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.equals(Object)",4,1,n/a,8,0,1,6,6
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.isExcluded(IResource)",2,1,n/a,6,0,1,4,4
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.toString()",4,0,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.ImageBuilderInternalException(CoreException)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.getLocalizedMessage()",5,1,n/a,9,1,0,6,4
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.getThrowable()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.printStackTrace()",4,0,n/a,9,1,0,5,2
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.IncrementalImageBuilder(JavaBuilder)",5,1,n/a,11,0,1,9,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.addAffectedSourceFiles()",14,2,n/a,43,6,0,39,20
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.addDependentsOf(IPath,boolean)",10,12,n/a,17,1,2,12,6
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(SimpleLookupTable)",30,1,n/a,68,3,1,51,16
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.cleanUp()",1,3,n/a,10,0,0,8,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findAffectedSourceFiles(IResourceDelta,ClasspathLocation[],IProject)",14,1,n/a,33,5,3,28,12
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findAffectedSourceFiles(IResourceDelta,int,StringSet)",30,2,n/a,62,4,3,49,21
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findSourceFiles(IResourceDelta)",19,1,n/a,38,5,1,32,12
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findSourceFiles(IResourceDelta,ClasspathMultiDirectory,int)",91,5,n/a,157,5,3,133,53
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.finishedWith(String,CompilationResult,char[],ArrayList,ArrayList)",19,2,n/a,25,2,5,26,8
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.removeClassFile(IPath,IContainer)",11,3,n/a,15,1,2,10,5
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.removeSecondaryTypes()",4,1,n/a,17,3,0,16,7
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.resetCollections()",6,2,n/a,7,0,0,5,2
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.updateProblemsFor(SourceFile,CompilationResult)",5,1,n/a,8,0,2,7,3
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.updateTasksFor(SourceFile,CompilationResult)",4,1,n/a,7,0,2,6,3
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileBytes(byte[],IFile,String,boolean,boolean)",21,1,n/a,29,2,5,19,11
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IFile,String,byte[])",15,1,n/a,24,2,3,21,10
"org.eclipse.jdt.internal.core.builder.JavaBuilder.build(int,Map,IProgressMonitor)",61,0,n/a,83,5,3,61,23
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll()",8,6,n/a,10,0,0,8,3
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(SimpleLookupTable)",9,1,n/a,12,0,1,9,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildFinished()",1,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildStarting()",0,1,n/a,7,0,0,0,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(IProgressMonitor)",28,0,n/a,29,1,1,23,7
"org.eclipse.jdt.internal.core.builder.JavaBuilder.cleanup()",0,2,n/a,8,0,0,6,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.clearLastState()",2,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.filterExtraResource(IResource)",10,4,n/a,20,1,1,23,10
"org.eclipse.jdt.internal.core.builder.JavaBuilder.findDeltas()",28,1,n/a,54,4,0,47,17
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(IProject)",2,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getProblemsFor(IResource)",2,1,n/a,9,1,1,4,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getRequiredProjects(boolean)",13,2,n/a,37,4,1,26,12
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getTasksFor(IResource)",2,1,n/a,9,1,1,4,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.hasClasspathChanged()",9,1,n/a,53,3,0,46,20
"org.eclipse.jdt.internal.core.builder.JavaBuilder.hasStructuralDelta()",6,1,n/a,21,5,0,15,9
"org.eclipse.jdt.internal.core.builder.JavaBuilder.initializeBuilder()",16,2,n/a,38,2,0,35,12
"org.eclipse.jdt.internal.core.builder.JavaBuilder.isClasspathBroken(IClasspathEntry[],IProject)",3,2,n/a,9,0,2,9,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.isWorthBuilding()",28,1,n/a,39,2,0,29,10
"org.eclipse.jdt.internal.core.builder.JavaBuilder.mustPropagateStructuralChanges()",14,2,n/a,23,3,0,13,5
"org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(IProject,DataInputStream)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.recordNewState(State)",5,2,n/a,12,1,1,10,5
"org.eclipse.jdt.internal.core.builder.JavaBuilder.removeProblemsAndTasksFor(IResource)",3,8,n/a,10,2,1,4,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.removeProblemsFor(IResource)",2,1,n/a,8,1,1,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.removeTasksFor(IResource)",2,1,n/a,8,1,1,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.toString()",1,0,n/a,8,0,0,1,2
"org.eclipse.jdt.internal.core.builder.JavaBuilder.writeState(Object,DataOutputStream)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.builder.MissingClassFileException.MissingClassFileException(String)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.MissingSourceFileException.MissingSourceFileException(String)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.NameEnvironment(IJavaProject)",5,1,n/a,10,1,1,6,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.NameEnvironment(IWorkspaceRoot,JavaProject,SimpleLookupTable)",2,1,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.cleanup()",2,9,n/a,8,0,0,10,3
"org.eclipse.jdt.internal.core.builder.NameEnvironment.computeClasspathLocations(IWorkspaceRoot,JavaProject,SimpleLookupTable)",84,2,n/a,173,7,3,124,43
"org.eclipse.jdt.internal.core.builder.NameEnvironment.createFolder(IContainer)",4,2,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.findClass(String,char[])",21,2,n/a,46,3,2,41,15
"org.eclipse.jdt.internal.core.builder.NameEnvironment.findType(char[],char[][])",3,5,n/a,7,0,2,3,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.findType(char[][])",3,5,n/a,7,0,1,3,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.isPackage(String)",1,2,n/a,7,0,1,6,3
"org.eclipse.jdt.internal.core.builder.NameEnvironment.isPackage(char[][],char[])",3,7,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.setNames(String[],SourceFile[])",2,3,n/a,8,0,2,10,3
"org.eclipse.jdt.internal.core.builder.NameSet.NameSet(int)",0,2,n/a,8,0,1,6,2
"org.eclipse.jdt.internal.core.builder.NameSet.add(char[])",3,2,n/a,13,1,1,12,5
"org.eclipse.jdt.internal.core.builder.NameSet.rehash()",2,1,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.core.builder.NameSet.toString()",1,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.core.builder.ProblemFactory.ProblemFactory(Locale)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.ProblemFactory.getProblemFactory(Locale)",3,3,n/a,6,0,1,4,2
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.QualifiedNameSet(int)",0,2,n/a,8,0,1,6,2
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.add(char[][])",3,2,n/a,15,1,1,15,6
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.rehash()",2,1,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.toString()",1,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.ReferenceCollection(char[][][],char[][])",2,3,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[])",0,4,n/a,5,0,1,6,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[][])",0,2,n/a,5,0,1,6,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[][][],char[][])",14,1,n/a,43,5,2,35,20
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internQualifiedNames(StringSet)",3,1,n/a,11,0,1,13,5
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internQualifiedNames(char[][][])",4,3,n/a,29,2,1,29,10
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internSimpleNames(StringSet)",2,1,n/a,11,0,1,13,5
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internSimpleNames(char[][],boolean)",3,4,n/a,31,3,2,30,11
"org.eclipse.jdt.internal.core.builder.SourceFile.SourceFile(IFile,ClasspathMultiDirectory)",1,3,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.core.builder.SourceFile.SourceFile(IFile,ClasspathMultiDirectory,boolean)",1,2,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.core.builder.SourceFile.equals(Object)",3,0,n/a,6,0,1,6,4
"org.eclipse.jdt.internal.core.builder.SourceFile.extractTypeName()",13,1,n/a,24,1,0,24,3
"org.eclipse.jdt.internal.core.builder.SourceFile.getContents()",5,21,n/a,7,1,0,3,2
"org.eclipse.jdt.internal.core.builder.SourceFile.getFileName()",3,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.getMainTypeName()",3,5,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.builder.SourceFile.getPackageName()",3,4,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.builder.SourceFile.toString()",1,0,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.typeLocator()",2,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.State.State()",0,1,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.builder.State.State(JavaBuilder)",5,1,n/a,13,0,1,11,1
"org.eclipse.jdt.internal.core.builder.State.copyFrom(State)",6,1,n/a,25,1,1,25,6
"org.eclipse.jdt.internal.core.builder.State.getDefinedTypeNamesFor(String)",1,2,n/a,6,0,1,4,2
"org.eclipse.jdt.internal.core.builder.State.getStructurallyChangedTypes(State)",2,1,n/a,9,1,1,6,5
"org.eclipse.jdt.internal.core.builder.State.isDuplicateLocator(String,String)",2,3,n/a,4,0,2,2,2
"org.eclipse.jdt.internal.core.builder.State.isKnownPackage(String)",10,1,n/a,24,4,1,22,10
"org.eclipse.jdt.internal.core.builder.State.read(IProject,DataInputStream)",79,1,n/a,101,2,2,114,29
"org.eclipse.jdt.internal.core.builder.State.readNames(DataInputStream)",3,6,n/a,12,1,1,13,3
"org.eclipse.jdt.internal.core.builder.State.readRestriction(DataInputStream)",5,3,n/a,6,0,1,3,2
"org.eclipse.jdt.internal.core.builder.State.record(String,char[][][],char[][],char[],ArrayList)",9,2,n/a,9,1,5,5,3
"org.eclipse.jdt.internal.core.builder.State.recordLocatorForType(String,String)",4,2,n/a,8,0,2,5,2
"org.eclipse.jdt.internal.core.builder.State.recordStructuralDependency(IProject,State)",3,1,n/a,5,0,2,3,3
"org.eclipse.jdt.internal.core.builder.State.removeLocator(String)",2,2,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.builder.State.removePackage(IResourceDelta)",9,2,n/a,14,1,1,13,5
"org.eclipse.jdt.internal.core.builder.State.removeQualifiedTypeName(String)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.builder.State.tagAsNoopBuild()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.State.tagAsStructurallyChanged()",2,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.builder.State.toString()",1,0,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.builder.State.wasNoopBuild()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.builder.State.wasStructurallyChanged(IProject,State)",3,1,n/a,8,1,2,6,4
"org.eclipse.jdt.internal.core.builder.State.wasStructurallyChanged(String)",1,2,n/a,8,1,1,4,3
"org.eclipse.jdt.internal.core.builder.State.write(DataOutputStream)",75,1,n/a,196,5,1,157,41
"org.eclipse.jdt.internal.core.builder.State.writeNames(char[][],DataOutputStream)",3,6,n/a,11,1,2,12,4
"org.eclipse.jdt.internal.core.builder.State.writeRestriction(AccessRestriction,DataOutputStream)",8,2,n/a,11,1,2,6,2
"org.eclipse.jdt.internal.core.builder.StringSet.StringSet(int)",0,4,n/a,8,0,1,6,2
"org.eclipse.jdt.internal.core.builder.StringSet.add(String)",3,4,n/a,13,1,1,12,5
"org.eclipse.jdt.internal.core.builder.StringSet.clear()",0,2,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.core.builder.StringSet.includes(String)",2,1,n/a,10,1,1,9,4
"org.eclipse.jdt.internal.core.builder.StringSet.rehash()",2,1,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.core.builder.StringSet.toString()",0,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.core.builder.WorkQueue.WorkQueue()",2,1,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.add(SourceFile)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.addAll(SourceFile[])",1,2,n/a,4,0,1,4,2
"org.eclipse.jdt.internal.core.builder.WorkQueue.clear()",2,1,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.finished(SourceFile)",2,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.isCompiled(SourceFile)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.isWaiting(SourceFile)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ASTRewriteAnalyzer(IDocument,CompilationUnit,TextEdit,RewriteEventStore,NodeInfoStore,Map)",4,2,n/a,14,0,6,9,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.checkForRangeEnd(ASTNode)",1,4,n/a,5,1,1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.checkForRangeStart(ASTNode)",2,4,n/a,5,1,1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getEndOfNode(ASTNode)",1,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getInitialIndent()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getNodeIndent(int)",7,4,n/a,13,3,1,10,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getOriginalNode(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getSeparatorString(int)",0,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getStartOfNextNode(int,int)",3,2,n/a,10,2,2,8,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.initCopyRangeChecks(ASTNode,StructuralPropertyDescriptor)",2,1,n/a,5,1,2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.insertAfterSeparator(ASTNode)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.rewriteList(ASTNode,StructuralPropertyDescriptor,int,String)",56,3,n/a,122,5,4,97,24
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.rewriteList(ASTNode,StructuralPropertyDescriptor,int,String,String)",1,2,n/a,4,0,5,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.ParagraphListRewriter(int,int)",0,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.containsOnlyWhitespaces(IDocument,int)",4,1,n/a,8,1,2,5,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.countEmptyLines(ASTNode)",7,2,n/a,15,2,1,10,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getInitialIndent()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getNewLines(int)",9,1,n/a,27,4,1,21,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getNode(int)",2,2,n/a,7,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getSeparatorString(int)",8,3,n/a,10,1,1,9,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter.SwitchListRewriter(int)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter.getNodeIndent(int)",4,4,n/a,11,1,1,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEdit(TextEdit)",1,8,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEditGroup(TextEditGroup,TextEdit)",1,7,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.changeNotSupported(ASTNode)",3,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.createIndentString(int)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePostVisit(ASTNode,Stack)",4,3,n/a,6,1,2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePreVisit(CopySourceInfo[],Stack)",4,3,n/a,11,2,2,9,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextCopy(TextEdit,int,int,String,int,TextEditGroup)",10,1,n/a,19,1,6,14,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextInsert(int,ASTNode,int,boolean,TextEditGroup)",29,18,n/a,55,4,5,44,13
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextInsert(int,String,TextEditGroup)",4,32,n/a,9,2,3,5,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemove(int,int,TextEditGroup)",3,16,n/a,11,1,3,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit(int,int,ASTNode,TextEditGroup)",4,17,n/a,10,1,4,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextReplace(int,int,String,TextEditGroup)",4,15,n/a,9,2,4,5,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTNode)",2,9,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTNode,StructuralPropertyDescriptor,int)",6,34,n/a,10,1,3,7,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitList(List,int,boolean)",12,2,n/a,21,2,3,16,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren(ASTNode)",10,81,n/a,17,3,1,14,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.findTagNameStart(ASTNode)",7,3,n/a,14,2,1,9,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getChangeKind(ASTNode,StructuralPropertyDescriptor)",2,14,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getCopySourceEdit(CopySourceInfo)",12,2,n/a,18,2,1,13,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getCurrentLine(String,int)",4,2,n/a,9,2,2,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getDimensions(ArrayType)",3,1,n/a,9,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getDocument()",0,9,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getEditGroup(ASTNode,StructuralPropertyDescriptor)",2,23,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getEditGroup(RewriteEvent)",1,43,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getElementType(ArrayType)",3,1,n/a,7,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getEvent(ASTNode,StructuralPropertyDescriptor)",1,29,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedEnd(ASTNode)",2,7,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedLength(ASTNode)",1,7,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedOffset(ASTNode)",1,12,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getIndent(int)",8,25,n/a,9,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getIndentAtOffset(int)",8,2,n/a,9,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getLineDelimiter()",2,14,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getNewValue(ASTNode,StructuralPropertyDescriptor)",1,15,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getOriginalValue(ASTNode,StructuralPropertyDescriptor)",1,19,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getPosAfterLeftBrace(int)",5,5,n/a,14,2,1,6,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getScanner()",7,71,n/a,8,1,0,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.handleException(Throwable)",2,44,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.hasChildrenChanges(ASTNode)",1,81,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isAllOfKind(RewriteEvent[],int)",1,8,n/a,8,2,2,6,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isChanged(ASTNode,StructuralPropertyDescriptor)",2,22,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isCollapsed(ASTNode)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isInsertBoundToPrevious(ASTNode)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.postVisit(ASTNode)",3,1,n/a,11,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.preVisit(ASTNode)",8,1,n/a,17,1,1,10,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.replaceOperation(int,String,TextEditGroup)",8,3,n/a,8,1,3,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteBodyNode(ASTNode,StructuralPropertyDescriptor,int,int,int,BlockContext)",30,8,n/a,56,4,6,40,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteExtraDimensions(ASTNode,StructuralPropertyDescriptor,int)",10,3,n/a,13,1,3,9,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteExtraDimensions(int,int,int,TextEditGroup)",9,2,n/a,17,3,4,14,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteJavadoc(ASTNode,StructuralPropertyDescriptor)",16,9,n/a,17,2,2,12,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteMethodBody(MethodDeclaration,int)",30,1,n/a,34,3,2,27,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteModifiers(ASTNode,StructuralPropertyDescriptor,int)",37,7,n/a,59,4,3,70,22
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteModifiers2(ASTNode,ChildListPropertyDescriptor,int)",17,11,n/a,30,2,3,20,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteNode(ASTNode,StructuralPropertyDescriptor,int,Prefix)",22,18,n/a,34,3,4,26,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteNodeList(ASTNode,StructuralPropertyDescriptor,int,String,String)",5,27,n/a,7,1,5,4,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteOperation(ASTNode,StructuralPropertyDescriptor,int)",13,3,n/a,13,2,3,8,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteOptionalQualifier(ASTNode,StructuralPropertyDescriptor,int)",24,6,n/a,36,4,3,27,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteOptionalTypeParameters(ASTNode,StructuralPropertyDescriptor,int,String)",22,6,n/a,34,3,4,23,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteParagraphList(ASTNode,StructuralPropertyDescriptor,int,int,int,int)",13,7,n/a,16,2,6,13,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteRequiredNode(ASTNode,StructuralPropertyDescriptor)",11,77,n/a,13,1,2,10,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteReturnType(MethodDeclaration,boolean,boolean)",14,1,n/a,25,2,3,16,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AnnotationTypeDeclaration)",9,1,n/a,15,1,1,9,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AnnotationTypeMemberDeclaration)",11,1,n/a,22,2,1,13,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AnonymousClassDeclaration)",7,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayAccess)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayCreation)",54,1,n/a,86,5,1,65,15
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayInitializer)",5,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayType)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AssertStatement)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Assignment)",5,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Block)",9,1,n/a,17,1,1,9,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(BooleanLiteral)",8,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(BreakStatement)",7,1,n/a,15,1,1,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CastExpression)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CatchClause)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CharacterLiteral)",7,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ClassInstanceCreation)",27,1,n/a,46,3,1,26,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CompilationUnit)",9,1,n/a,15,1,1,8,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ConditionalExpression)",5,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ConstructorInvocation)",10,1,n/a,19,1,1,10,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ContinueStatement)",7,1,n/a,15,1,1,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(DoStatement)",18,1,n/a,25,2,1,15,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EmptyStatement)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EnhancedForStatement)",13,1,n/a,23,2,1,13,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EnumConstantDeclaration)",30,1,n/a,53,3,1,35,13
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EnumDeclaration)",23,1,n/a,36,4,1,25,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ExpressionStatement)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(FieldAccess)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(FieldDeclaration)",9,1,n/a,17,1,1,9,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ForStatement)",25,1,n/a,37,2,1,21,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(IfStatement)",26,1,n/a,44,3,1,27,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ImportDeclaration)",28,1,n/a,41,4,1,24,11
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(InfixExpression)",25,1,n/a,43,5,1,33,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Initializer)",8,1,n/a,16,1,1,8,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(InstanceofExpression)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Javadoc)",7,4,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(LabeledStatement)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MarkerAnnotation)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MemberRef)",5,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MemberValuePair)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodDeclaration)",28,1,n/a,46,3,1,28,12
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodInvocation)",14,1,n/a,25,2,1,13,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodRef)",11,1,n/a,22,2,1,11,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodRefParameter)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Modifier)",8,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NormalAnnotation)",9,1,n/a,21,2,1,10,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NullLiteral)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NumberLiteral)",7,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PackageDeclaration)",7,1,n/a,14,1,1,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ParameterizedType)",9,1,n/a,21,2,1,10,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ParenthesizedExpression)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PostfixExpression)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PrefixExpression)",5,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PrimitiveType)",8,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(QualifiedName)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(QualifiedType)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ReturnStatement)",7,1,n/a,15,1,1,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SimpleName)",7,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SimpleType)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SingleMemberAnnotation)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SingleVariableDeclaration)",29,1,n/a,45,4,1,26,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(StringLiteral)",7,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperConstructorInvocation)",13,1,n/a,24,2,1,12,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperFieldAccess)",5,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperMethodInvocation)",18,1,n/a,32,3,1,17,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SwitchCase)",3,1,n/a,11,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SwitchStatement)",18,1,n/a,26,2,1,16,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SynchronizedStatement)",4,1,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TagElement)",27,1,n/a,41,2,1,27,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TextElement)",7,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ThisExpression)",4,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ThrowStatement)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TryStatement)",11,1,n/a,18,1,1,10,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeDeclaration)",63,1,n/a,103,4,1,71,26
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeDeclarationStatement)",6,1,n/a,14,1,1,6,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeLiteral)",3,1,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeParameter)",6,1,n/a,15,1,1,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(VariableDeclarationExpression)",9,1,n/a,18,1,1,9,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(VariableDeclarationFragment)",11,1,n/a,24,3,1,13,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(VariableDeclarationStatement)",9,1,n/a,18,1,1,9,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(WhileStatement)",11,1,n/a,20,2,1,10,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(WildcardType)",17,1,n/a,30,3,1,18,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.ASTRewriteFlattener(RewriteEventStore)",1,2,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.asString(ASTNode,RewriteEventStore)",3,2,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getAttribute(ASTNode,StructuralPropertyDescriptor)",1,16,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getBooleanAttribute(ASTNode,StructuralPropertyDescriptor)",2,6,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getChildList(ASTNode,StructuralPropertyDescriptor)",1,6,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getChildNode(ASTNode,StructuralPropertyDescriptor)",1,121,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getIntAttribute(ASTNode,StructuralPropertyDescriptor)",2,10,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getResult()",2,2,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.printModifiers(int,StringBuffer)",22,9,n/a,41,1,2,22,12
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.reset()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AnnotationTypeDeclaration)",11,1,n/a,17,1,1,10,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AnnotationTypeMemberDeclaration)",15,1,n/a,22,1,1,14,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AnonymousClassDeclaration)",3,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayAccess)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayCreation)",16,1,n/a,31,1,1,24,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayInitializer)",4,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayType)",3,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AssertStatement)",7,1,n/a,14,1,1,8,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Assignment)",7,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Block)",3,2,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(BlockComment)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(BooleanLiteral)",3,1,n/a,11,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(BreakStatement)",5,1,n/a,13,1,1,7,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CastExpression)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CatchClause)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CharacterLiteral)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ClassInstanceCreation)",20,1,n/a,25,1,1,16,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CompilationUnit)",4,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ConditionalExpression)",8,1,n/a,11,0,1,6,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ConstructorInvocation)",10,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ContinueStatement)",5,1,n/a,13,1,1,7,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(DoStatement)",7,1,n/a,11,0,1,6,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EmptyStatement)",1,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EnhancedForStatement)",9,1,n/a,13,0,1,7,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EnumConstantDeclaration)",13,1,n/a,18,1,1,10,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EnumDeclaration)",17,1,n/a,20,1,1,13,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ExpressionStatement)",3,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(FieldAccess)",5,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(FieldDeclaration)",15,1,n/a,19,1,1,11,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ForStatement)",10,1,n/a,17,1,1,11,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(IfStatement)",9,1,n/a,15,1,1,9,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ImportDeclaration)",10,1,n/a,17,2,1,9,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(InfixExpression)",14,1,n/a,17,1,1,13,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Initializer)",11,1,n/a,16,1,1,8,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(InstanceofExpression)",5,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Javadoc)",7,4,n/a,13,1,1,9,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(LabeledStatement)",5,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(LineComment)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MarkerAnnotation)",3,1,n/a,9,0,1,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MemberRef)",5,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MemberValuePair)",5,1,n/a,10,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodDeclaration)",35,1,n/a,45,3,1,30,8
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodInvocation)",15,1,n/a,18,1,1,11,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodRef)",8,1,n/a,15,1,1,9,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodRefParameter)",5,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Modifier)",3,1,n/a,8,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NormalAnnotation)",6,1,n/a,12,0,1,6,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NullLiteral)",1,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NumberLiteral)",3,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PackageDeclaration)",10,1,n/a,16,2,1,9,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ParameterizedType)",5,1,n/a,11,0,1,5,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ParenthesizedExpression)",4,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PostfixExpression)",5,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PrefixExpression)",5,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PrimitiveType)",3,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(QualifiedName)",5,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(QualifiedType)",5,1,n/a,10,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ReturnStatement)",5,1,n/a,13,1,1,7,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SimpleName)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SimpleType)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SingleMemberAnnotation)",7,1,n/a,11,0,1,6,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SingleVariableDeclaration)",21,1,n/a,28,2,1,19,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(StringLiteral)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperConstructorInvocation)",13,1,n/a,17,1,1,10,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperFieldAccess)",6,1,n/a,13,1,1,7,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperMethodInvocation)",16,1,n/a,19,1,1,12,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SwitchCase)",5,1,n/a,14,1,1,7,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SwitchStatement)",7,1,n/a,12,0,1,7,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SynchronizedStatement)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TagElement)",10,1,n/a,24,2,1,16,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TextElement)",2,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ThisExpression)",4,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ThrowStatement)",4,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TryStatement)",8,1,n/a,15,1,1,9,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeDeclaration)",27,1,n/a,36,1,1,26,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeDeclarationStatement)",6,1,n/a,11,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeLiteral)",3,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeParameter)",3,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(VariableDeclarationExpression)",12,1,n/a,14,1,1,7,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(VariableDeclarationFragment)",7,1,n/a,16,1,1,11,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(VariableDeclarationStatement)",13,1,n/a,15,1,1,8,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(WhileStatement)",6,1,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(WildcardType)",6,1,n/a,16,2,1,8,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visitList(ASTNode,StructuralPropertyDescriptor,String)",5,25,n/a,9,2,3,7,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visitList(ASTNode,StructuralPropertyDescriptor,String,String,String)",8,25,n/a,13,3,5,10,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ASTRewriteFormatter(NodeInfoStore,RewriteEventStore,Map,String)",10,1,n/a,27,1,4,20,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockContext.getPrefixAndSuffix(int,String,ASTNode,RewriteEventStore)",n/a,2,2,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefix.BlockFormattingPrefix(String,int)",0,5,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefix.getPrefixAndSuffix(int,String,ASTNode,RewriteEventStore)",7,2,n/a,10,1,4,7,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefixSuffix.BlockFormattingPrefixSuffix(String,String,int)",0,2,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefixSuffix.getPrefixAndSuffix(int,String,ASTNode,RewriteEventStore)",10,2,n/a,16,1,4,10,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ConstPrefix.ConstPrefix(String)",0,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ConstPrefix.getPrefix(int,String)",0,4,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.ExtendedFlattener(RewriteEventStore)",2,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.addMarker(Object,int,int)",2,2,n/a,8,0,3,6,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.fixupLength(Object,int)",2,2,n/a,9,2,2,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.getMarkers()",2,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.postVisit(ASTNode)",8,1,n/a,13,1,1,6,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.preVisit(ASTNode)",8,1,n/a,13,1,1,6,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.visit(Block)",4,2,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.FormattingPrefix.FormattingPrefix(String,String,int)",2,9,n/a,6,0,3,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.FormattingPrefix.getPrefix(int,String)",5,4,n/a,9,1,2,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.Prefix.getPrefix(int,String)",n/a,4,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.createDocument(String,Position[])",7,1,n/a,9,5,2,19,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.createIndentString(int)",4,2,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.evaluateFormatterEdit(String,TextEdit,Position[])",6,5,n/a,25,3,3,11,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.formatNode(ASTNode,String,int,String,Map)",10,1,n/a,105,2,5,85,21
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.formatString(int,String,int,String,Map)",3,4,n/a,3,0,5,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getEventStore()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getFormattedResult(ASTNode,int,Collection)",13,1,n/a,32,2,3,18,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getOptions()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getPlaceholders()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getTabWidth()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.shifEdit(TextEdit,int)",14,2,n/a,25,2,2,21,7
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.Indents()",0,0,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.changeIndent(String,int,int,String,String)",14,1,n/a,39,3,5,21,5
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.computeIndent(String,int)",3,4,n/a,28,3,2,17,5
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.computeIndentLength(String,int,int)",5,1,n/a,39,3,3,24,7
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.getChangeIndentEdits(String,int,int,String)",18,2,n/a,35,3,4,19,5
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.getIndentString(String,int)",4,2,n/a,26,3,2,21,7
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.isIndentChar(char)",2,4,n/a,9,0,1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.isLineDelimiterChar(char)",0,2,n/a,8,0,1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.Indents.trimIndent(String,int,int)",4,1,n/a,42,3,3,26,9
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.ListRewriteEvent(List)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.ListRewriteEvent(RewriteEvent[])",6,0,n/a,15,2,1,9,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getChangeKind()",3,38,n/a,14,3,0,8,4
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getChangeKind(int)",3,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getChildren()",3,13,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getEntries()",5,9,n/a,13,2,0,9,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getIndex(ASTNode,int)",5,6,n/a,13,2,2,10,6
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getNewValue()",7,27,n/a,15,2,0,10,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getOriginalValue()",0,37,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.insert(ASTNode,int)",5,2,n/a,9,1,2,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.isListRewrite()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.removeEntry(ASTNode)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.replaceEntry(ASTNode,ASTNode)",6,2,n/a,15,2,2,12,4
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.revertChange(NodeRewriteEvent)",4,1,n/a,9,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.setNewValue(ASTNode,int)",3,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.toString()",7,0,n/a,16,2,0,11,3
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.CopyPlaceholderData.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.NodeInfoStore(AST)",1,2,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.StringPlaceholderData.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.clear()",0,0,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.createCollapsePlaceholder()",3,1,n/a,8,1,0,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.getPlaceholderData(ASTNode)",1,2,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.isCollapsed(ASTNode)",1,2,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.markAsCopyTarget(ASTNode,CopySourceInfo)",2,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.markAsStringPlaceholder(ASTNode,String)",2,1,n/a,11,0,2,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.newPlaceholderNode(int)",14,3,n/a,30,2,1,20,7
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.setPlaceholderData(ASTNode,PlaceholderData)",2,2,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.NodeRewriteEvent(Object,Object)",0,3,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getChangeKind()",1,41,n/a,18,1,0,9,5
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getChildren()",0,10,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getNewValue()",0,28,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getOriginalValue()",0,41,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.isListRewrite()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.setNewValue(Object)",0,11,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.toString()",19,0,n/a,28,1,0,22,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEvent.getChangeKind()",n/a,38,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEvent.getChildren()",n/a,10,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEvent.getNewValue()",n/a,26,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEvent.getOriginalValue()",n/a,36,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEvent.isListRewrite()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.CopySourceInfo(ASTNode,StructuralPropertyDescriptor,ASTNode,ASTNode,boolean)",0,2,n/a,7,0,5,5,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.getEndNode()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.getStartNode()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.toString()",8,0,n/a,17,1,0,11,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfoSorter.compare(Object,Object)",4,0,n/a,10,1,2,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.EventHolder.EventHolder(ASTNode,StructuralPropertyDescriptor,RewriteEvent)",0,1,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.EventHolder.toString()",9,0,n/a,7,0,0,5,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.INodePropertyMapper.getOriginalValue(ASTNode,StructuralPropertyDescriptor)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.ParentIterator()",8,1,n/a,18,1,0,10,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.hasNext()",4,0,n/a,6,0,0,1,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.next()",8,0,n/a,15,1,0,7,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.remove()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.PropertyLocation(ASTNode,StructuralPropertyDescriptor)",0,3,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.getParent()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.getProperty()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.RewriteEventStore()",1,2,n/a,9,0,0,7,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.accessOriginalValue(ASTNode,StructuralPropertyDescriptor)",2,4,n/a,10,1,2,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.addEvent(ASTNode,StructuralPropertyDescriptor,RewriteEvent)",8,2,n/a,17,2,3,13,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.assertNoOverlap(CopySourceInfo)",0,1,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.clear()",1,0,n/a,8,0,0,6,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.doMarkMovedAsRemoved(CopySourceInfo)",9,1,n/a,14,2,1,8,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.findEvent(Object,int)",6,1,n/a,23,4,2,14,6
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getChangeKind(ASTNode)",2,0,n/a,7,1,1,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getChangeRootIterator()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getEvent(ASTNode,StructuralPropertyDescriptor)",3,5,n/a,14,2,2,11,7
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getEventEditGroup(RewriteEvent)",1,1,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getListEvent(ASTNode,StructuralPropertyDescriptor,boolean)",5,3,n/a,10,1,3,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getNewValue(ASTNode,StructuralPropertyDescriptor)",3,2,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getNodeCopySources(ASTNode)",1,1,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getNodeEvent(ASTNode,StructuralPropertyDescriptor,boolean)",5,3,n/a,10,1,3,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getOriginalValue(ASTNode,StructuralPropertyDescriptor)",3,1,n/a,7,1,2,4,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getPropertyLocation(Object,int)",11,2,n/a,22,4,2,18,7
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getRangeCopySources(ASTNode)",1,2,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getTrackedNodeData(ASTNode)",1,6,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.hasChangedProperties(ASTNode)",3,1,n/a,11,3,1,8,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.hasRangeCopySources(ASTNode,StructuralPropertyDescriptor)",2,3,n/a,12,2,2,9,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.internalGetCopySources(List,ASTNode)",10,2,n/a,17,2,2,13,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isInsertBoundToPrevious(ASTNode)",1,1,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isNewNode(ASTNode)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isNodeInEvent(RewriteEvent,Object,int)",2,4,n/a,9,1,3,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markAsCopySource(ASTNode,StructuralPropertyDescriptor,ASTNode,boolean)",3,3,n/a,8,1,4,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markAsRangeCopySource(ASTNode,StructuralPropertyDescriptor,ASTNode,ASTNode,boolean)",4,1,n/a,9,1,5,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markAsTracked(ASTNode,TextEditGroup)",3,0,n/a,12,1,2,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markMovedNodesRemoved()",3,1,n/a,14,2,0,8,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setEventEditGroup(RewriteEvent,TextEditGroup)",2,4,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setInsertBoundToPrevious(ASTNode)",2,1,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setNodePropertyMapper(INodePropertyMapper)",0,0,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setTrackedNodeData(ASTNode,TextEditGroup)",2,2,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.toString()",7,2,n/a,7,1,0,6,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.validateHasChildProperty(ASTNode,StructuralPropertyDescriptor)",7,2,n/a,6,1,2,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.validateIsListProperty(StructuralPropertyDescriptor)",3,2,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.validateIsNodeProperty(StructuralPropertyDescriptor)",3,1,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier.SourceModifier(int,String,int)",0,2,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier.copy()",0,0,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier.getModifications(String)",5,0,n/a,8,1,1,5,2
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.TokenScanner(IDocument)",5,0,n/a,10,0,1,4,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.TokenScanner(IScanner)",1,0,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.TokenScanner(IScanner,IDocument)",1,2,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.createError(int,String,Throwable)",1,5,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getCurrentEndOffset()",1,11,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getCurrentLength()",2,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getCurrentStartOffset()",1,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getLineEnd(int)",7,1,n/a,12,2,1,7,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getLineOfOffset(int)",5,9,n/a,11,2,1,6,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getNextEndOffset(int,boolean)",2,3,n/a,12,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getNextStartOffset(int,boolean)",2,2,n/a,12,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getPreviousTokenEndOffset(int,int)",4,5,n/a,18,1,2,7,2
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getScanner()",0,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenCommentEnd(int,int)",11,0,n/a,61,3,2,28,9
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenCommentStart(int,int)",12,0,n/a,43,3,2,25,13
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenEndOffset(int,int)",2,31,n/a,12,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenStartOffset(int,int)",2,6,n/a,12,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.isComment(int)",0,4,n/a,4,0,1,1,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.isModifier(int)",0,0,n/a,18,1,1,15,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readNext(boolean)",7,6,n/a,21,3,1,8,5
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readNext(int,boolean)",2,9,n/a,12,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readNextWithEOF(boolean)",5,4,n/a,18,2,1,6,4
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readToToken(int)",1,2,n/a,12,1,1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readToToken(int,int)",2,3,n/a,11,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.setOffset(int)",1,6,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition.TrackedNodePosition(TextEditGroup,ASTNode)",0,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition.getLength()",5,0,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition.getStartPosition()",5,0,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.EvaluationContextWrapper(EvaluationContext,JavaProject)",0,1,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.allVariables()",2,1,n/a,12,1,0,8,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.checkBuilderState()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,CompletionRequestor)",1,2,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,CompletionRequestor,WorkingCopyOwner)",4,4,n/a,14,0,4,2,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,ICodeCompletionRequestor)",27,1,n/a,3,3,3,24,4
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,ICompletionRequestor)",1,3,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,ICompletionRequestor,WorkingCopyOwner)",3,2,n/a,10,1,4,3,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeSelect(String,int,int)",1,1,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeSelect(String,int,int,WorkingCopyOwner)",6,2,n/a,16,0,4,4,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.deleteVariable(IGlobalVariable)",2,1,n/a,11,1,1,4,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.evaluateCodeSnippet(String,ICodeSnippetRequestor,IProgressMonitor)",9,2,n/a,19,1,3,7,3
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.evaluateCodeSnippet(String,String[],String[],int[],IType,boolean,boolean,ICodeSnippetRequestor,IProgressMonitor)",28,2,n/a,76,4,9,40,12
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.evaluateVariable(IGlobalVariable,ICodeSnippetRequestor,IProgressMonitor)",8,1,n/a,19,1,3,7,3
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getBuildNameEnvironment()",2,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getImports()",2,1,n/a,12,1,0,8,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getInfrastructureEvaluationContext()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getInfrastructureEvaluationRequestor(ICodeSnippetRequestor)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getPackageName()",2,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getProblemFactory()",2,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getProject()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.handleInstallException(InstallException)",3,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.newVariable(String,String,String)",5,2,n/a,13,0,3,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.setImports(String[])",2,1,n/a,11,1,1,7,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.setPackageName(String)",2,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.validateImports(ICodeSnippetRequestor)",6,1,n/a,15,1,1,6,2
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.GlobalVariableWrapper(GlobalVariable)",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.getInitializer()",2,1,n/a,11,1,0,4,2
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.getName()",2,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.getTypeName()",2,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.eval.RequestorWrapper.RequestorWrapper(ICodeSnippetRequestor)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.eval.RequestorWrapper.acceptClassFiles(ClassFile[],char[])",5,4,n/a,20,2,2,17,4
"org.eclipse.jdt.internal.core.eval.RequestorWrapper.acceptProblem(IProblem,char[],int)",18,3,n/a,18,1,3,10,3
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.ChangeCollector(TypeHierarchy)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addAffectedChildren(IJavaElementDelta)",7,4,n/a,26,2,1,21,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(ICompilationUnit,IJavaElementDelta)",14,1,n/a,27,2,2,23,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IImportContainer,IJavaElementDelta)",11,1,n/a,36,3,2,24,9
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IImportDeclaration,IJavaElementDelta)",10,1,n/a,32,3,2,21,8
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IMember,IJavaElementDelta)",14,1,n/a,27,2,2,23,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IType,IJavaElementDelta)",19,1,n/a,31,2,2,27,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addTypeAddition(IType,SimpleDelta)",13,4,n/a,33,3,2,18,9
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addTypeChange(IType,int,SimpleDelta)",15,1,n/a,45,3,3,24,14
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addTypeRemoval(IType,SimpleDelta)",7,4,n/a,22,2,2,12,5
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.getAllTypesFromElement(IJavaElement,ArrayList)",10,6,n/a,33,2,2,30,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.getAllTypesFromHierarchy(JavaElement,ArrayList)",9,3,n/a,27,4,2,19,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.hasSuperTypeChange(IType)",7,2,n/a,22,2,1,16,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.hasVisibilityChange(IType)",2,2,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.needsRefresh()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.toString()",13,0,n/a,13,2,0,9,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.HierarchyBinaryType(int,char[],char[],char[],char[][],char)",5,1,n/a,26,1,6,21,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getEnclosingTypeName()",0,2,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getFields()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getFileName()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getGenericSignature()",14,4,n/a,22,2,0,21,8
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getInterfaceNames()",0,5,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getKind()",0,19,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getMemberTypes()",0,2,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getMethods()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getModifiers()",0,5,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getName()",0,9,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getSuperclassName()",0,5,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getTagBits()",0,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isAnonymous()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isBinaryType()",0,5,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isLocal()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isMember()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.recordSuperType(char[],char[],char)",8,1,n/a,29,2,3,19,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.sourceFileName()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.toString()",12,0,n/a,35,3,0,28,11
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.HierarchyBuilder(TypeHierarchy)",10,2,n/a,30,2,1,19,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.build(boolean)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.buildSupertypes()",5,2,n/a,25,1,0,10,4
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.connect(IGenericType,IGenericType,IGenericType[])",22,2,n/a,90,5,3,51,20
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.createCompilationUnitFromPath(Openable,String)",1,2,n/a,11,0,2,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.createInfoFromClassFile(Openable,String)",4,2,n/a,22,2,2,11,5
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.createInfoFromClassFileInJar(Openable)",12,2,n/a,34,2,1,19,7
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.getHandle(IGenericType)",9,3,n/a,36,3,1,22,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.getType()",1,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.lookupBinaryHandle(IBinaryType)",7,1,n/a,26,1,1,20,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.worked(IProgressMonitor,int)",3,1,n/a,9,2,2,4,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.HierarchyResolver(INameEnvironment,Map,HierarchyBuilder,IProblemFactory)",5,2,n/a,9,0,4,4,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.HierarchyResolver(LookupEnvironment,HierarchyBuilder)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.MissingType(String)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.getFileName()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.getKind()",0,19,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.getModifiers()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.isBinaryType()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(IBinaryType,PackageBinding,AccessRestriction)",2,2,n/a,13,1,3,3,2
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(ICompilationUnit,AccessRestriction)",6,2,n/a,11,0,2,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(ISourceType[],PackageBinding,AccessRestriction)",10,2,n/a,32,2,3,11,4
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.findSuperClass(IGenericType,ReferenceBinding)",10,1,n/a,41,4,2,28,12
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.findSuperInterfaces(IGenericType,ReferenceBinding)",18,1,n/a,71,5,2,54,19
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.remember(IGenericType,ReferenceBinding)",2,5,n/a,9,1,2,7,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.remember(IType,ReferenceBinding)",10,1,n/a,46,3,2,29,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.rememberAllTypes(CompilationUnitDeclaration,ICompilationUnit,boolean)",9,2,n/a,24,2,3,19,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.rememberWithMemberTypes(TypeDeclaration,IType)",4,3,n/a,10,2,2,8,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.reportHierarchy(IType,CompilationUnitDeclaration,ReferenceBinding)",13,2,n/a,54,5,3,30,12
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.reset()",1,2,n/a,8,0,0,6,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(IGenericType)",16,1,n/a,40,5,1,22,7
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(Openable[],HashSet,IProgressMonitor)",52,4,n/a,188,6,3,115,39
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.setEnvironment(LookupEnvironment,HierarchyBuilder)",0,2,n/a,7,0,2,5,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.setFocusType(char[][])",2,2,n/a,12,1,1,6,4
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.subOrSuperOfFocus(ReferenceBinding)",2,2,n/a,10,1,1,8,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.subTypeOfType(ReferenceBinding,ReferenceBinding)",6,4,n/a,16,2,2,18,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.worked(IProgressMonitor,int)",3,1,n/a,9,2,2,4,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.HierarchyType(IType,int,char[],int,char[],char[][])",0,1,n/a,14,0,6,6,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.getFileName()",3,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.getKind()",0,19,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.getModifiers()",0,5,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.isBinaryType()",0,5,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.IHierarchyRequestor.connect(IGenericType,IGenericType,IGenericType[])",n/a,0,1,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.IndexBasedHierarchyBuilder(TypeHierarchy,IJavaSearchScope)",3,1,n/a,6,0,2,4,1
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue.add(char[])",1,2,n/a,8,1,1,5,2
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue.retrieve()",0,1,n/a,9,1,0,7,3
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue.toString()",4,0,n/a,7,1,0,6,2
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build(boolean)",16,2,n/a,39,3,1,20,7
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildForProject(JavaProject,ArrayList,ICompilationUnit[],HashSet,IProgressMonitor)",25,3,n/a,55,4,5,35,12
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildFromPotentialSubtypes(String[],HashSet,IProgressMonitor)",44,1,n/a,120,4,3,76,24
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.createCompilationUnitFromPath(Openable,String)",2,2,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.createInfoFromClassFile(Openable,String)",5,2,n/a,10,1,2,6,2
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.createInfoFromClassFileInJar(Openable)",12,2,n/a,13,1,1,9,3
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.determinePossibleSubTypes(HashSet,IProgressMonitor)",12,1,n/a,6,3,2,19,5
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.searchAllPossibleSubTypes(IType,IJavaSearchScope,Map,IPathRequestor,int,IProgressMonitor)",36,1,n/a,33,6,6,46,13
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.RegionBasedHierarchyBuilder(TypeHierarchy)",1,1,n/a,4,0,1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.build(boolean)",12,2,n/a,26,2,1,13,5
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.createTypeHierarchyBasedOnRegion(ArrayList,IProgressMonitor)",6,1,n/a,20,2,2,12,5
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.determineOpenablesInRegion(IProgressMonitor)",15,1,n/a,44,4,1,36,11
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.injectAllOpenablesForJavaProject(IJavaProject,ArrayList)",2,1,n/a,21,2,2,9,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.injectAllOpenablesForPackageFragment(IPackageFragment,ArrayList)",6,2,n/a,28,4,2,16,6
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.injectAllOpenablesForPackageFragmentRoot(IPackageFragmentRoot,ArrayList)",2,2,n/a,17,2,2,8,3
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.RegionBasedTypeHierarchy(IRegion,IJavaProject,ICompilationUnit[],IType,boolean)",1,1,n/a,12,0,5,3,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.compute()",2,1,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.initializeRegions()",8,2,n/a,19,3,0,12,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.isAffectedByOpenable(IJavaElementDelta,IJavaElement)",4,3,n/a,12,1,2,5,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.javaProject()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches()",4,1,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(IType)",5,1,n/a,10,0,1,6,3
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(IType[])",3,3,n/a,8,2,1,6,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType(IType)",10,2,n/a,27,2,1,22,8
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.TypeHierarchy()",0,1,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.TypeHierarchy(IType,ICompilationUnit[],IJavaProject,boolean)",2,1,n/a,7,0,4,2,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.TypeHierarchy(IType,ICompilationUnit[],IJavaSearchScope,boolean)",0,3,n/a,9,0,4,4,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addAllCheckingDuplicates(ArrayList,IType[])",2,2,n/a,12,2,2,6,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addInterface(IType)",1,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addRootClass(IType)",2,4,n/a,8,0,1,3,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addSubtype(IType,IType)",5,2,n/a,13,1,2,6,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addTypeHierarchyChangedListener(ITypeHierarchyChangedListener)",5,0,n/a,17,1,1,7,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.bytesToFlags(byte[])",2,1,n/a,7,1,1,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.cacheFlags(IType,int)",2,2,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.cacheSuperInterfaces(IType,IType[])",2,2,n/a,13,2,2,7,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.cacheSuperclass(IType,IType)",2,2,n/a,10,1,2,3,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.checkCanceled()",2,3,n/a,13,1,0,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute()",2,1,n/a,12,1,0,3,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.contains(IType)",3,6,n/a,14,1,1,7,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.elementChanged(ElementChangedEvent)",3,1,n/a,12,1,1,5,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.exists()",3,1,n/a,7,0,0,3,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.fireChange()",11,2,n/a,3,3,0,15,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.flagsToBytes(Integer)",2,1,n/a,7,1,1,3,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllClasses()",7,1,n/a,10,1,0,5,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllInterfaces()",2,2,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSubtypes(IType)",1,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSubtypesForType(IType)",4,1,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSubtypesForType0(IType,ArrayList)",3,2,n/a,12,2,2,8,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSuperInterfaces(IType)",5,0,n/a,13,1,1,7,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSuperInterfaces0(IType,ArrayList)",5,4,n/a,13,2,2,10,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSuperclasses(IType)",5,0,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSupertypes(IType)",5,0,n/a,13,1,1,7,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSupertypes0(IType,ArrayList)",6,2,n/a,14,2,2,11,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllTypes()",4,4,n/a,13,0,0,8,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getCachedFlags(IType)",2,3,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getExtendingInterfaces(IType)",2,1,n/a,7,0,1,3,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getExtendingInterfaces0(IType)",11,1,n/a,26,4,1,17,6
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getImplementingClasses(IType)",2,1,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getImplementingClasses0(IType)",11,1,n/a,24,3,1,16,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getRootClasses()",1,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getRootInterfaces()",3,1,n/a,19,2,0,13,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSubclasses(IType)",3,0,n/a,13,1,1,6,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSubtypes(IType)",1,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSubtypesForType(IType)",2,2,n/a,10,0,1,4,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSuperInterfaces(IType)",1,4,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSuperclass(IType)",2,4,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSupertypes(IType)",6,1,n/a,13,1,1,6,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getType()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.growAndAddToArray(IType[],IType)",1,0,n/a,14,1,2,7,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.growAndAddToArray(IType[],IType[])",2,0,n/a,14,1,2,7,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasFineGrainChanges()",1,1,n/a,7,0,0,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasSubtypeNamed(String)",6,2,n/a,16,2,1,9,6
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasSupertype(String)",6,4,n/a,13,2,1,6,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasTypeNamed(String)",3,3,n/a,12,2,1,7,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.includesTypeOrSupertype(IType)",10,2,n/a,30,3,1,20,10
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.initialize(int)",10,5,n/a,19,1,1,13,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.initializeRegions()",11,2,n/a,25,3,0,18,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffected(IJavaElementDelta)",7,3,n/a,20,1,1,14,6
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByChildren(IJavaElementDelta)",3,4,n/a,16,3,1,8,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByJavaModel(IJavaElementDelta,IJavaElement)",5,1,n/a,13,1,2,7,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByJavaProject(IJavaElementDelta,IJavaElement)",12,1,n/a,43,4,2,29,13
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByOpenable(IJavaElementDelta,IJavaElement)",19,3,n/a,57,5,2,38,19
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByPackageFragment(IJavaElementDelta,PackageFragment)",4,1,n/a,18,1,2,8,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByPackageFragmentRoot(IJavaElementDelta,IJavaElement)",12,1,n/a,48,7,2,32,13
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isInterface(IType)",3,6,n/a,12,2,1,6,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.javaProject()",1,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.load(IType,InputStream,WorkingCopyOwner)",62,2,n/a,120,4,3,87,22
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.packageRegionContainsSamePackageFragment(PackageFragment)",2,1,n/a,13,1,1,8,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.readUntil(InputStream,byte)",1,5,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.readUntil(InputStream,byte,int)",5,4,n/a,16,2,3,11,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(IProgressMonitor)",22,2,n/a,50,3,1,28,11
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.removeTypeHierarchyChangedListener(ITypeHierarchyChangedListener)",3,0,n/a,14,1,1,6,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.store(OutputStream,IProgressMonitor)",84,2,n/a,123,5,2,103,27
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.subtypesIncludeSupertypeOf(IType)",10,2,n/a,47,2,1,27,11
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.toString()",19,1,n/a,37,3,0,28,8
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.toString(StringBuffer,IType,int,boolean)",7,5,n/a,17,2,4,12,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.worked(int)",2,0,n/a,9,1,1,3,2
"org.eclipse.jdt.internal.core.index.DiskIndex.DiskIndex(String)",0,3,n/a,13,0,1,10,1
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList.IntList(int[])",0,2,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList.add(int)",1,3,n/a,8,1,1,6,3
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList.asArray()",1,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.index.DiskIndex.addDocumentNames(String,MemoryIndex)",10,2,n/a,32,3,2,29,12
"org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResult(HashtableOfObject,char[],HashtableOfObject,MemoryIndex)",12,2,n/a,22,2,4,17,7
"org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResults(char[][],char[],int,MemoryIndex)",7,2,n/a,26,4,4,23,11
"org.eclipse.jdt.internal.core.index.DiskIndex.computeDocumentNames(String[],int[],SimpleLookupTable,MemoryIndex)",14,1,n/a,85,5,4,85,28
"org.eclipse.jdt.internal.core.index.DiskIndex.copyQueryResults(HashtableOfObject,int)",9,1,n/a,29,5,2,25,8
"org.eclipse.jdt.internal.core.index.DiskIndex.getIndexFile()",1,9,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.core.index.DiskIndex.initialize(boolean)",20,2,n/a,37,3,1,26,9
"org.eclipse.jdt.internal.core.index.DiskIndex.initializeFrom(DiskIndex,File)",8,1,n/a,13,1,2,10,7
"org.eclipse.jdt.internal.core.index.DiskIndex.mergeCategories(DiskIndex,int[],DataOutputStream)",3,1,n/a,14,1,3,14,6
"org.eclipse.jdt.internal.core.index.DiskIndex.mergeCategory(char[],DiskIndex,int[],DataOutputStream)",11,1,n/a,44,5,4,41,12
"org.eclipse.jdt.internal.core.index.DiskIndex.mergeWith(MemoryIndex)",31,1,n/a,68,3,1,52,15
"org.eclipse.jdt.internal.core.index.DiskIndex.readAllDocumentNames()",7,2,n/a,15,1,0,13,4
"org.eclipse.jdt.internal.core.index.DiskIndex.readCategoryTable(char[],boolean)",25,3,n/a,53,4,2,43,11
"org.eclipse.jdt.internal.core.index.DiskIndex.readChunk(String[],DataInputStream,int,int)",10,2,n/a,22,3,4,18,5
"org.eclipse.jdt.internal.core.index.DiskIndex.readDocumentArray(DataInputStream)",5,2,n/a,20,2,1,18,6
"org.eclipse.jdt.internal.core.index.DiskIndex.readDocumentName(int)",7,2,n/a,19,2,1,14,4
"org.eclipse.jdt.internal.core.index.DiskIndex.readDocumentNumbers(Object)",8,2,n/a,12,1,1,7,2
"org.eclipse.jdt.internal.core.index.DiskIndex.readHeaderInfo(RandomAccessFile)",11,1,n/a,15,0,1,16,3
"org.eclipse.jdt.internal.core.index.DiskIndex.startQuery()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.index.DiskIndex.stopQuery()",0,1,n/a,8,1,0,4,2
"org.eclipse.jdt.internal.core.index.DiskIndex.writeAllDocumentNames(String[],DataOutputStream)",17,1,n/a,49,3,2,48,16
"org.eclipse.jdt.internal.core.index.DiskIndex.writeCategories(DataOutputStream)",1,1,n/a,8,0,1,8,3
"org.eclipse.jdt.internal.core.index.DiskIndex.writeCategoryTable(char[],HashtableOfObject,DataOutputStream)",12,2,n/a,28,3,3,22,7
"org.eclipse.jdt.internal.core.index.DiskIndex.writeDocumentNumbers(int[],DataOutputStream)",8,1,n/a,25,2,2,21,7
"org.eclipse.jdt.internal.core.index.DiskIndex.writeHeaderInfo(DataOutputStream)",7,1,n/a,18,2,1,16,4
"org.eclipse.jdt.internal.core.index.DiskIndex.writeOffsetToHeader(int)",4,1,n/a,12,2,1,7,2
"org.eclipse.jdt.internal.core.index.EntryResult.EntryResult(char[],HashtableOfObject)",0,4,n/a,5,0,2,3,2
"org.eclipse.jdt.internal.core.index.EntryResult.addDocumentName(String)",2,4,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.core.index.EntryResult.addDocumentTable(HashtableOfObject)",1,1,n/a,9,1,1,6,2
"org.eclipse.jdt.internal.core.index.EntryResult.getDocumentNames(Index)",4,2,n/a,19,2,1,21,7
"org.eclipse.jdt.internal.core.index.EntryResult.getWord()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.index.EntryResult.isEmpty()",0,1,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.core.index.Index.Index(String,String,boolean)",4,3,n/a,7,0,3,5,1
"org.eclipse.jdt.internal.core.index.Index.addIndexEntry(char[],char[],InternalSearchDocument)",1,1,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.index.Index.convertPath(String)",9,1,n/a,29,0,1,5,3
"org.eclipse.jdt.internal.core.index.Index.getIndexFile()",1,5,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.core.index.Index.hasChanged()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.index.Index.isMatch(char[],char[],int)",6,2,n/a,18,1,3,16,8
"org.eclipse.jdt.internal.core.index.Index.query(char[][],char[],int)",8,5,n/a,31,2,3,21,7
"org.eclipse.jdt.internal.core.index.Index.queryDocumentNames(String)",4,4,n/a,20,1,1,16,5
"org.eclipse.jdt.internal.core.index.Index.remove(String)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.index.Index.save()",4,2,n/a,9,0,0,7,3
"org.eclipse.jdt.internal.core.index.Index.startQuery()",1,4,n/a,4,0,0,2,2
"org.eclipse.jdt.internal.core.index.Index.stopQuery()",1,4,n/a,4,0,0,2,2
"org.eclipse.jdt.internal.core.index.Index.toString()",1,0,n/a,4,0,0,3,2
"org.eclipse.jdt.internal.core.index.MemoryIndex.MemoryIndex()",2,2,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.index.MemoryIndex.addDocumentNames(String,SimpleSet)",3,1,n/a,14,1,2,13,7
"org.eclipse.jdt.internal.core.index.MemoryIndex.addIndexEntry(char[],char[],InternalSearchDocument)",9,1,n/a,11,0,3,8,3
"org.eclipse.jdt.internal.core.index.MemoryIndex.addQueryResults(char[][],char[],int,HashtableOfObject)",12,1,n/a,44,7,4,39,17
"org.eclipse.jdt.internal.core.index.MemoryIndex.hasChanged()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.index.MemoryIndex.remove(String)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.index.MemoryIndex.shouldMerge()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.AbstractDOMBuilder()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.acceptLineSeparatorPositions(int[])",0,0,n/a,36,6,1,18,7
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.addChild(IDOMNode)",3,7,n/a,16,2,1,4,4
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.createCompilationUnit(ICompilationUnit)",1,3,n/a,10,1,1,4,2
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.createCompilationUnit(char[],char[])",2,0,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.enterCompilationUnit()",2,0,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.exitCompilationUnit(int)",2,0,n/a,11,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.exitType(int,int)",4,4,n/a,14,0,2,5,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.getLineStart(int)",0,8,n/a,12,1,1,7,3
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.initializeBuild(char[],boolean,boolean)",1,2,n/a,17,0,3,6,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.CompilationUnit(char[],char[])",8,2,n/a,12,0,2,10,4
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getContents()",0,21,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getFileName()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getMainTypeName()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getPackageName()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.DOMBuilder()",0,10,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptImport(int,int,int[],char[],int,boolean,int)",4,5,n/a,15,1,7,7,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptInitializer(int,int,int[],int,int,int,int)",2,3,n/a,24,1,7,14,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptPackage(int,int,int[],char[],int)",3,3,n/a,13,1,5,6,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptProblem(IProblem)",0,1,n/a,13,1,1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.addChild(IDOMNode)",3,13,n/a,14,1,1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createCompilationUnit()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createCompilationUnit(ICompilationUnit)",5,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createField(char[])",4,1,n/a,16,1,1,8,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createFields(char[])",7,1,n/a,23,2,1,17,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createImport()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createImport(char[])",4,1,n/a,12,1,1,6,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createInitializer(char[])",4,1,n/a,14,1,1,6,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createMethod(char[])",4,1,n/a,12,1,1,6,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createPackage()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createPackage(char[])",4,1,n/a,12,1,1,6,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createType(char[])",4,1,n/a,12,1,1,7,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterAbstractMethod(int,int[],int,int,char[],int,int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,int,int,char[][],int[],int[],int,boolean)",8,2,n/a,89,2,25,30,8
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterClass(int,int[],int,int,int,char[],int,int,char[],int,int,char[][],int[],int[],int)",1,4,n/a,27,0,15,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterConstructor(int,int[],int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,char[][],int[],int[],int)",3,1,n/a,40,0,18,5,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterField(int,int[],int,int,char[],int,int,int,char[],int,int,int,int)",5,2,n/a,49,1,13,22,6
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterInterface(int,int[],int,int,int,char[],int,int,char[][],int[],int[],int)",1,2,n/a,22,0,12,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterMethod(int,int[],int,int,char[],int,int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,int,int,char[][],int[],int[],int)",1,1,n/a,42,0,24,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterType(int,int[],int,int,int,char[],int,int,char[],int,int,char[][],int[],int[],int,boolean)",5,2,n/a,61,4,16,41,12
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitAbstractMethod(int,int)",3,2,n/a,16,1,2,6,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitClass(int,int)",1,2,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitConstructor(int,int)",1,2,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitField(int,int)",7,3,n/a,27,3,2,14,5
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitInterface(int,int)",1,2,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitMethod(int,int)",1,2,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.getParser(Map)",3,8,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.initializeBuild(char[],boolean,boolean,boolean)",1,8,n/a,15,0,4,3,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.DOMCompilationUnit()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.DOMCompilationUnit(char[],int[])",1,1,n/a,14,0,2,2,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.appendFragmentedContents(CharArrayBuffer)",3,4,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.canHaveChildren()",0,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getHeader()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getJavaElement(IJavaElement)",5,7,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getName()",6,30,n/a,29,3,0,17,7
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getNodeType()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.initalizeHeader()",5,1,n/a,12,2,0,5,3
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.isAllowableChild(IDOMNode)",1,3,n/a,11,1,1,4,4
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.newDOMNode()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.normalize(ILineStartFinder)",2,11,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.setHeader(String)",1,2,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.setName(String)",0,15,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.shareContents(DOMNode)",1,14,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.toString()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.DOMField()",0,1,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.jdom.DOMField.DOMField(char[],int[],String,int[],int,String,boolean)",2,1,n/a,26,0,7,2,1
"org.eclipse.jdt.internal.core.jdom.DOMField.DOMField(char[],int[],String,int[],int[],int,int[],int[],String,boolean,int[],boolean)",4,2,n/a,53,0,12,7,1
"org.eclipse.jdt.internal.core.jdom.DOMField.appendMemberBodyContents(CharArrayBuffer)",0,5,n/a,11,0,1,0,1
"org.eclipse.jdt.internal.core.jdom.DOMField.appendMemberDeclarationContents(CharArrayBuffer)",17,5,n/a,32,2,1,11,5
"org.eclipse.jdt.internal.core.jdom.DOMField.appendMemberHeaderFragment(CharArrayBuffer)",2,4,n/a,15,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMField.appendSimpleContents(CharArrayBuffer)",3,5,n/a,11,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.DOMField.becomeDetailed()",14,21,n/a,33,4,0,20,7
"org.eclipse.jdt.internal.core.jdom.DOMField.clone()",7,8,n/a,10,1,0,3,3
"org.eclipse.jdt.internal.core.jdom.DOMField.expand()",11,5,n/a,20,3,0,11,7
"org.eclipse.jdt.internal.core.jdom.DOMField.getDetailedNode()",9,7,n/a,10,1,0,3,3
"org.eclipse.jdt.internal.core.jdom.DOMField.getFirstFieldDeclaration()",2,4,n/a,11,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.DOMField.getInitializer()",4,3,n/a,15,2,0,6,3
"org.eclipse.jdt.internal.core.jdom.DOMField.getJavaElement(IJavaElement)",5,7,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMField.getLastFieldDeclaration()",3,1,n/a,14,2,0,6,5
"org.eclipse.jdt.internal.core.jdom.DOMField.getMemberDeclarationStartPosition()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.getNodeType()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.getSingleVariableDeclaratorContents()",25,2,n/a,38,2,0,16,5
"org.eclipse.jdt.internal.core.jdom.DOMField.getType()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.getTypeContents()",3,1,n/a,11,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.DOMField.hasInitializer()",1,3,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.hasMultipleVariableDeclarators()",1,5,n/a,8,0,0,1,3
"org.eclipse.jdt.internal.core.jdom.DOMField.insertSibling(IDOMNode)",3,8,n/a,15,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMField.isTypeAltered()",1,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.isVariableDeclarator()",1,15,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.newDOMNode()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.normalizeEndPosition(ILineStartFinder,DOMNode)",16,1,n/a,30,2,2,15,7
"org.eclipse.jdt.internal.core.jdom.DOMField.normalizeStartPosition(int,ILineStartFinder)",4,5,n/a,11,1,2,3,2
"org.eclipse.jdt.internal.core.jdom.DOMField.offset(int)",3,7,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.DOMField.remove()",2,8,n/a,13,0,0,2,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setComment(String)",2,3,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setFlags(int)",2,4,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setHasInitializer(boolean)",1,3,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setInitializer(String)",3,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setInitializerRange(int,int)",0,1,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setIsVariableDeclarator(boolean)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setName(String)",4,15,n/a,11,1,1,4,2
"org.eclipse.jdt.internal.core.jdom.DOMField.setType(String)",7,1,n/a,14,1,1,8,2
"org.eclipse.jdt.internal.core.jdom.DOMField.setTypeAltered(boolean)",1,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.shareContents(DOMNode)",3,18,n/a,11,0,1,6,1
"org.eclipse.jdt.internal.core.jdom.DOMField.toString()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.DOMImport()",1,2,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.DOMImport(char[],int[],String,boolean,int)",2,1,n/a,19,0,5,3,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.DOMImport(char[],int[],String,int[],boolean,int)",2,2,n/a,24,0,6,4,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.appendFragmentedContents(CharArrayBuffer)",7,4,n/a,17,1,1,5,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.getContents()",1,16,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.getDetailedNode()",3,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.getFlags()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.getJavaElement(IJavaElement)",5,7,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.getNodeType()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.isOnDemand()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.newDOMNode()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.setFlags(int)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.setName(String)",5,15,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.toString()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.DOMInitializer()",0,1,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.DOMInitializer(char[],int[],int)",2,1,n/a,17,0,3,2,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.DOMInitializer(char[],int[],int[],int,int[],int)",3,2,n/a,35,0,6,6,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.appendMemberBodyContents(CharArrayBuffer)",6,5,n/a,12,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.appendMemberDeclarationContents(CharArrayBuffer)",0,5,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.appendSimpleContents(CharArrayBuffer)",3,5,n/a,11,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getBody()",4,2,n/a,15,2,0,6,3
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getDetailedNode()",3,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getJavaElement(IJavaElement)",6,7,n/a,18,3,1,9,4
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getMemberDeclarationStartPosition()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getNodeType()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.isSignatureEqual(IDOMNode)",0,3,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.newDOMNode()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.offset(int)",2,7,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.setBody(String)",3,1,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.setName(String)",0,15,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.shareContents(DOMNode)",2,18,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.toString()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.DOMMember()",0,4,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.DOMMember(char[],int[],String,int[],int[],int,int[])",2,4,n/a,38,0,7,6,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendFragmentedContents(CharArrayBuffer)",5,4,n/a,24,1,1,5,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendMemberBodyContents(CharArrayBuffer)",n/a,5,4,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendMemberDeclarationContents(CharArrayBuffer)",n/a,5,4,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendMemberHeaderFragment(CharArrayBuffer)",8,3,n/a,33,2,1,18,7
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendSimpleContents(CharArrayBuffer)",n/a,5,4,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendString(String[],String)",1,4,n/a,10,0,2,4,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.generateFlags()",4,1,n/a,14,1,0,4,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.getComment()",4,2,n/a,15,2,0,6,3
"org.eclipse.jdt.internal.core.jdom.DOMMember.getFlags()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.getMemberDeclarationStartPosition()",n/a,5,4,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.jdom.DOMMember.getModifiersText()",1,1,n/a,16,2,0,5,3
"org.eclipse.jdt.internal.core.jdom.DOMMember.hasBody()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.hasComment()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.offset(int)",3,7,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.setComment(String)",4,3,n/a,15,1,1,8,3
"org.eclipse.jdt.internal.core.jdom.DOMMember.setFlags(int)",4,4,n/a,13,1,1,6,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.setHasBody(boolean)",1,4,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.setHasComment(boolean)",1,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.setStartPosition(int)",1,3,n/a,14,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.shareContents(DOMNode)",3,18,n/a,12,0,1,7,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.DOMMethod()",0,1,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.DOMMethod(char[],int[],String,int[],int,boolean,String,String[],String[],String[])",2,1,n/a,31,0,10,2,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.DOMMethod(char[],int[],String,int[],int[],int,int[],boolean,String,int[],String[],String[],int[],String[],int[],int[])",4,2,n/a,75,0,16,12,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.addException(String)",4,1,n/a,15,1,1,7,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.addParameter(String,String)",7,1,n/a,24,1,2,13,5
"org.eclipse.jdt.internal.core.jdom.DOMMethod.appendMemberBodyContents(CharArrayBuffer)",2,5,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.appendMemberDeclarationContents(CharArrayBuffer)",23,5,n/a,59,3,1,27,11
"org.eclipse.jdt.internal.core.jdom.DOMMethod.appendSimpleContents(CharArrayBuffer)",6,5,n/a,15,1,1,5,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.generateFlags()",4,1,n/a,8,1,0,4,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getBody()",4,1,n/a,15,2,0,6,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getConstructorName()",6,3,n/a,17,2,0,5,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getDefault()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getDetailedNode()",3,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getExceptions()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getJavaElement(IJavaElement)",9,7,n/a,25,3,1,15,5
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getMemberDeclarationStartPosition()",0,5,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getName()",2,31,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getNodeType()",0,32,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getParameterNames()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getParameterTypes()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getReturnType()",1,1,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getReturnTypeContents()",4,1,n/a,14,2,0,5,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getTypeParameters()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.hasTrailingArrayQualifier()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.isConstructor()",1,19,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.isReturnTypeAltered()",1,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.isSignatureEqual(IDOMNode)",12,3,n/a,46,4,1,24,17
"org.eclipse.jdt.internal.core.jdom.DOMMethod.newDOMNode()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.offset(int)",5,7,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setBody(String)",4,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setBodyRangeEnd(int)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setConstructor(boolean)",3,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setDefault(String)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setExceptions(String[])",6,3,n/a,20,2,1,14,5
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setName(String)",3,15,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setParameters(String[],String[])",15,4,n/a,37,3,2,25,9
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setReturnType(String)",5,1,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setReturnTypeAltered(boolean)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setSourceRangeEnd(int)",1,15,n/a,6,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setTypeParameters(String[])",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.shareContents(DOMNode)",5,18,n/a,18,0,1,13,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.toString()",2,0,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.DOMNode()",1,4,n/a,10,0,0,5,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.DOMNode(char[],int[],String,int[])",1,5,n/a,24,0,4,5,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.addChild(IDOMNode)",5,7,n/a,18,1,1,4,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.appendContents(CharArrayBuffer)",3,5,n/a,17,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.appendContentsOfChildren(CharArrayBuffer)",14,3,n/a,40,4,1,20,7
"org.eclipse.jdt.internal.core.jdom.DOMNode.appendFragmentedContents(CharArrayBuffer)",n/a,4,4,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.jdom.DOMNode.basicAddChild(IDOMNode)",17,4,n/a,44,1,1,19,8
"org.eclipse.jdt.internal.core.jdom.DOMNode.becomeDetailed()",5,18,n/a,17,2,0,6,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.canHaveChildren()",0,8,n/a,12,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.clone()",12,8,n/a,35,3,0,22,6
"org.eclipse.jdt.internal.core.jdom.DOMNode.cloneSharingDocument(char[],int)",11,2,n/a,22,3,2,15,5
"org.eclipse.jdt.internal.core.jdom.DOMNode.fragment()",2,24,n/a,15,2,0,4,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.getCharacters()",3,3,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getChild(String)",2,3,n/a,20,3,1,10,5
"org.eclipse.jdt.internal.core.jdom.DOMNode.getChildren()",1,10,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getContents()",3,15,n/a,16,0,0,3,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getDetailedNode()",0,7,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getDocument()",0,8,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getEndPosition()",0,17,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getFactory()",1,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getFirstChild()",0,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getInsertionPosition()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getMask(int)",0,15,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getName()",0,26,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getNameContents()",3,3,n/a,17,2,0,8,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.getNextNode()",0,10,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getParent()",0,11,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getParentEndDeclaration()",2,1,n/a,16,2,0,6,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.getPreviousNode()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getRoot()",1,3,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.getStartPosition()",0,15,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.insertSibling(IDOMNode)",20,8,n/a,47,1,1,23,10
"org.eclipse.jdt.internal.core.jdom.DOMNode.isAllowableChild(IDOMNode)",0,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isContentMergableWith(DOMNode)",6,1,n/a,10,0,1,1,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.isDetailed()",1,4,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isFragmented()",0,6,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isNameAltered()",1,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isSignatureEqual(IDOMNode)",5,3,n/a,10,0,1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.localizeContents()",2,4,n/a,11,0,0,2,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.newDOMNode()",n/a,2,7,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.jdom.DOMNode.normalize(ILineStartFinder)",10,11,n/a,16,1,1,7,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.normalizeEndPosition(ILineStartFinder,DOMNode)",15,1,n/a,24,2,2,11,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.normalizeStartPosition(int,ILineStartFinder)",3,5,n/a,9,0,2,4,5
"org.eclipse.jdt.internal.core.jdom.DOMNode.offset(int)",2,3,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.offsetRange(int[],int)",0,18,n/a,11,2,2,6,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.rangeCopy(int[])",0,17,n/a,10,1,1,6,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.remove()",1,8,n/a,34,2,0,14,7
"org.eclipse.jdt.internal.core.jdom.DOMNode.setMask(int,boolean)",0,31,n/a,11,1,2,3,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.setName(String)",2,14,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.setNameAltered(boolean)",1,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.setSourceRangeEnd(int)",0,14,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.setStartPosition(int)",0,2,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.shareContents(DOMNode)",9,14,n/a,25,2,1,14,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.toString()",n/a,0,7,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.jdom.DOMPackage.DOMPackage()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.DOMPackage(char[],int[],String)",2,1,n/a,17,0,3,2,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.DOMPackage(char[],int[],String,int[])",2,1,n/a,21,0,4,2,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.appendFragmentedContents(CharArrayBuffer)",8,4,n/a,18,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getContents()",1,16,n/a,10,1,0,3,2
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getDetailedNode()",3,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getJavaElement(IJavaElement)",5,7,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getNodeType()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.newDOMNode()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.setName(String)",2,16,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.toString()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.DOMType()",0,1,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.jdom.DOMType.DOMType(char[],int[],String,int[],int,String[],boolean)",2,1,n/a,29,0,7,2,1
"org.eclipse.jdt.internal.core.jdom.DOMType.DOMType(char[],int[],String,int[],int[],int,int[],int[],int[],int[],String[],int[],int[],int[],int[],boolean)",5,2,n/a,73,0,16,14,1
"org.eclipse.jdt.internal.core.jdom.DOMType.addSuperInterface(String)",4,1,n/a,15,1,1,7,3
"org.eclipse.jdt.internal.core.jdom.DOMType.appendMemberBodyContents(CharArrayBuffer)",4,5,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.jdom.DOMType.appendMemberDeclarationContents(CharArrayBuffer)",28,5,n/a,73,3,1,40,16
"org.eclipse.jdt.internal.core.jdom.DOMType.appendSimpleContents(CharArrayBuffer)",5,5,n/a,15,0,1,5,1
"org.eclipse.jdt.internal.core.jdom.DOMType.canHaveChildren()",0,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getCloseBodyPosition()",0,5,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getDetailedNode()",3,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getInsertionPosition()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getJavaElement(IJavaElement)",7,7,n/a,14,1,1,7,4
"org.eclipse.jdt.internal.core.jdom.DOMType.getMemberDeclarationStartPosition()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getNodeType()",0,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getOpenBodyEnd()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getSuperInterfaces()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getSuperclass()",4,1,n/a,15,2,0,6,3
"org.eclipse.jdt.internal.core.jdom.DOMType.getTypeParameters()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.isAllowableChild(IDOMNode)",1,3,n/a,12,1,1,4,5
"org.eclipse.jdt.internal.core.jdom.DOMType.isAnnotation()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.isClass()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.isEnum()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.newDOMNode()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.normalize(ILineStartFinder)",29,11,n/a,99,3,1,63,20
"org.eclipse.jdt.internal.core.jdom.DOMType.normalizeEndPosition(ILineStartFinder,DOMNode)",8,1,n/a,20,2,2,7,4
"org.eclipse.jdt.internal.core.jdom.DOMType.offset(int)",8,7,n/a,13,0,1,8,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setAnnotation(boolean)",3,1,n/a,13,1,1,5,2
"org.eclipse.jdt.internal.core.jdom.DOMType.setClass(boolean)",4,3,n/a,14,1,1,7,2
"org.eclipse.jdt.internal.core.jdom.DOMType.setCloseBodyRangeEnd(int)",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setCloseBodyRangeStart(int)",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setEnum(boolean)",2,1,n/a,12,1,1,4,2
"org.eclipse.jdt.internal.core.jdom.DOMType.setName(String)",9,14,n/a,22,2,1,8,5
"org.eclipse.jdt.internal.core.jdom.DOMType.setOpenBodyRangeEnd(int)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setOpenBodyRangeStart(int)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setSuperInterfaces(String[])",10,3,n/a,26,3,1,18,5
"org.eclipse.jdt.internal.core.jdom.DOMType.setSuperclass(String)",3,4,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setTypeKeyword(String)",0,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setTypeParameters(String[])",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.shareContents(DOMNode)",7,18,n/a,18,0,1,13,1
"org.eclipse.jdt.internal.core.jdom.DOMType.toString()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.ILineStartFinder.getLineStart(int)",n/a,8,1,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration.SiblingEnumeration(IDOMNode)",0,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration.hasMoreElements()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration.nextElement()",1,0,n/a,10,1,0,4,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.acceptImport(int,int,char[],boolean,int)",3,3,n/a,10,1,5,6,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.acceptPackage(int,int,char[])",3,3,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.acceptProblem(IProblem)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.createCompilationUnit(ICompilationUnit)",6,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.createCompilationUnit(String,String)",3,0,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterAbstractMethod(MethodInfo)",8,2,n/a,15,0,1,5,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterClass(TypeInfo)",1,4,n/a,5,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterConstructor(MethodInfo)",3,3,n/a,10,0,1,5,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterEnum(TypeInfo)",1,4,n/a,5,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterField(FieldInfo)",5,4,n/a,14,1,1,8,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterInitializer(int,int)",3,4,n/a,8,0,2,4,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterInterface(TypeInfo)",1,3,n/a,5,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterMethod(MethodInfo)",1,3,n/a,5,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterType(TypeInfo)",5,3,n/a,13,1,1,6,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitClass(int)",1,5,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitConstructor(int)",1,5,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitEnum(int)",1,4,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitField(int,int,int)",1,4,n/a,5,0,3,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitInitializer(int)",1,4,n/a,5,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitInterface(int)",1,4,n/a,5,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitMember(int)",2,4,n/a,11,0,1,3,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitMethod(int,int,int)",1,5,n/a,5,0,3,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitType(int)",1,3,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.getParser(Map)",3,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.includesBinaries()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.includesClasspaths()",0,1,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.processDelta(IJavaElementDelta)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.setIncludesBinaries(boolean)",0,1,n/a,7,0,1,0,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.setIncludesClasspaths(boolean)",0,1,n/a,7,0,1,0,1
"org.eclipse.jdt.internal.core.search.HierarchyScope.HierarchyScope(IType,WorkingCopyOwner)",14,1,n/a,34,2,2,16,4
"org.eclipse.jdt.internal.core.search.HierarchyScope.add(IResource)",1,1,n/a,14,1,1,3,2
"org.eclipse.jdt.internal.core.search.HierarchyScope.buildResourceVector()",28,1,n/a,47,3,0,32,8
"org.eclipse.jdt.internal.core.search.HierarchyScope.computeDependents(IJavaProject,HashSet,HashSet)",12,3,n/a,21,4,3,18,6
"org.eclipse.jdt.internal.core.search.HierarchyScope.computeProjectsAndJars(IType)",33,1,n/a,54,6,1,40,9
"org.eclipse.jdt.internal.core.search.HierarchyScope.encloses(IJavaElement)",9,1,n/a,48,4,1,24,13
"org.eclipse.jdt.internal.core.search.HierarchyScope.encloses(String)",8,2,n/a,40,4,1,21,10
"org.eclipse.jdt.internal.core.search.HierarchyScope.enclosingProjectsAndJars()",1,2,n/a,14,2,0,5,3
"org.eclipse.jdt.internal.core.search.HierarchyScope.initialize()",4,3,n/a,12,1,0,8,2
"org.eclipse.jdt.internal.core.search.HierarchyScope.processDelta(IJavaElementDelta)",1,1,n/a,7,0,1,3,3
"org.eclipse.jdt.internal.core.search.HierarchyScope.refresh()",1,3,n/a,5,1,0,2,2
"org.eclipse.jdt.internal.core.search.HierarchyScope.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.IRestrictedAccessTypeRequestor.acceptClass(char[],char[],char[][],String,AccessRestriction)",n/a,5,2,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.internal.core.search.IRestrictedAccessTypeRequestor.acceptInterface(char[],char[],char[][],String,AccessRestriction)",n/a,4,2,n/a,n/a,5,n/a,n/a
"org.eclipse.jdt.internal.core.search.IndexQueryRequestor.acceptIndexMatch(String,SearchPattern,SearchParticipant,AccessRestriction)",n/a,4,4,n/a,n/a,4,n/a,n/a
"org.eclipse.jdt.internal.core.search.IndexSelector.IndexSelector(IJavaSearchScope,SearchPattern)",0,1,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.core.search.IndexSelector.canSeeFocus(IJavaElement,boolean,IPath)",26,3,n/a,73,6,3,49,21
"org.eclipse.jdt.internal.core.search.IndexSelector.getIndexLocations()",1,1,n/a,6,1,0,3,2
"org.eclipse.jdt.internal.core.search.IndexSelector.getJavaProject(IPath,IJavaModel)",3,1,n/a,11,1,2,4,2
"org.eclipse.jdt.internal.core.search.IndexSelector.initializeIndexLocations()",27,1,n/a,29,3,0,18,11
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.JavaSearchDocument(IFile,SearchParticipant)",3,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.JavaSearchDocument(String,SearchParticipant)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.JavaSearchDocument(ZipEntry,IPath,byte[],SearchParticipant)",2,2,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getByteContents()",4,1,n/a,11,2,0,7,5
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getCharContents()",5,2,n/a,11,2,0,7,5
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getEncoding()",5,1,n/a,17,3,0,7,4
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getFile()",5,2,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getLocation()",4,2,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.beginSearching()",1,2,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.doneSearching()",1,2,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.getDescription()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.getDocument(String)",1,7,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexDocument(SearchDocument,IPath)",8,5,n/a,13,1,2,6,3
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(SearchDocument[],SearchPattern,IJavaSearchScope,SearchRequestor,IProgressMonitor)",8,3,n/a,18,0,5,7,6
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.selectIndexes(SearchPattern,IJavaSearchScope)",2,2,n/a,11,1,2,3,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.JavaSearchScope()",1,2,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(IJavaElement)",1,1,n/a,10,0,1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(IJavaElement,IJavaProject)",40,1,n/a,71,3,2,45,20
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(IPath,boolean,AccessRestriction)",3,6,n/a,29,1,3,7,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaProject,IPath,int,HashSet,IClasspathEntry)",35,9,n/a,81,5,5,57,29
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaProject,int,HashSet)",1,1,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.addEnclosingProjectOrJar(IPath)",2,5,n/a,13,1,1,8,3
"org.eclipse.jdt.internal.core.search.JavaSearchScope.encloses(IJavaElement)",6,2,n/a,18,3,1,12,5
"org.eclipse.jdt.internal.core.search.JavaSearchScope.encloses(IPath)",6,3,n/a,23,3,1,10,7
"org.eclipse.jdt.internal.core.search.JavaSearchScope.encloses(String)",2,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.enclosingProjectsAndJars()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.fullPath(IJavaElement)",8,3,n/a,17,1,1,12,6
"org.eclipse.jdt.internal.core.search.JavaSearchScope.fullPath(String)",7,2,n/a,12,1,1,6,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.getAccessRestriction(String)",2,2,n/a,14,1,1,4,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.initialize()",0,2,n/a,7,0,0,5,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.processDelta(IJavaElementDelta)",11,2,n/a,46,5,1,35,13
"org.eclipse.jdt.internal.core.search.JavaSearchScope.toString()",15,0,n/a,25,3,0,21,5
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.JavaWorkspaceScope()",2,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.encloses(IJavaElement)",0,2,n/a,14,0,1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.encloses(String)",0,5,n/a,14,0,1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.enclosingProjectsAndJars()",2,3,n/a,6,1,0,3,2
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.equals(Object)",0,0,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.hashCode()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize()",6,3,n/a,13,2,0,9,3
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.processDelta(IJavaElementDelta)",9,4,n/a,45,3,1,41,13
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.PathCollector.acceptIndexMatch(String,SearchPattern,SearchParticipant,AccessRestriction)",1,5,n/a,7,0,4,2,1
"org.eclipse.jdt.internal.core.search.PathCollector.getPaths()",4,2,n/a,11,1,0,6,2
"org.eclipse.jdt.internal.core.search.PatternSearchJob.PatternSearchJob(SearchPattern,SearchParticipant,IJavaSearchScope,IndexQueryRequestor)",0,5,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.belongsTo(String)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.cancel()",0,2,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.ensureReadyToRun()",1,2,n/a,4,0,0,2,2
"org.eclipse.jdt.internal.core.search.PatternSearchJob.execute(IProgressMonitor)",10,3,n/a,24,3,1,22,9
"org.eclipse.jdt.internal.core.search.PatternSearchJob.getIndexes(IProgressMonitor)",9,3,n/a,24,2,1,20,7
"org.eclipse.jdt.internal.core.search.PatternSearchJob.search(Index,IProgressMonitor)",8,2,n/a,19,1,2,17,7
"org.eclipse.jdt.internal.core.search.PatternSearchJob.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.SearchBasicEngine()",0,2,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.SearchBasicEngine(ICompilationUnit[])",0,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.SearchBasicEngine(WorkingCopyOwner)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createHierarchyScope(IType)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createHierarchyScope(IType,WorkingCopyOwner)",1,2,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createJavaSearchScope(IJavaElement[])",1,6,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createJavaSearchScope(IJavaElement[],boolean)",1,2,n/a,10,1,2,4,2
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createJavaSearchScope(IJavaElement[],int)",4,2,n/a,22,4,2,12,5
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.createWorkspaceScope()",1,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.findMatches(SearchPattern,SearchParticipant[],IJavaSearchScope,SearchRequestor,IProgressMonitor)",34,1,n/a,54,3,5,44,18
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getDefaultSearchParticipant()",1,4,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getParser()",6,1,n/a,12,1,0,5,2
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getResource(IJavaElement)",3,1,n/a,14,2,1,5,3
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getWorkingCopies()",18,4,n/a,58,4,0,41,16
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.getWorkingCopies(IJavaElement)",5,1,n/a,22,3,1,12,6
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.match(char,char[],char[],int,int,char[],char[])",4,3,n/a,32,2,7,31,17
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.search(SearchPattern,SearchParticipant[],IJavaSearchScope,SearchRequestor,IProgressMonitor)",1,2,n/a,19,0,5,1,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchAllTypeNames(char[],char[],int,int,IJavaSearchScope,IRestrictedAccessTypeRequestor,int,IProgressMonitor)",62,3,n/a,31,10,8,139,46
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchDeclarations(IJavaElement,SearchRequestor,SearchPattern,IProgressMonitor)",16,6,n/a,39,4,4,16,5
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchDeclarationsOfAccessedFields(IJavaElement,SearchRequestor,IProgressMonitor)",2,1,n/a,41,0,3,2,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchDeclarationsOfReferencedTypes(IJavaElement,SearchRequestor,IProgressMonitor)",2,1,n/a,41,0,3,2,1
"org.eclipse.jdt.internal.core.search.SearchBasicEngine.searchDeclarationsOfSentMessages(IJavaElement,SearchRequestor,IProgressMonitor)",2,1,n/a,44,0,3,2,1
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.SubTypeSearchJob(SearchPattern,SearchParticipant,IJavaSearchScope,IndexQueryRequestor)",1,1,n/a,3,0,4,1,1
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.finished()",1,1,n/a,6,0,0,6,3
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.search(Index,IProgressMonitor)",4,2,n/a,8,1,2,6,3
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper.TypeNameRequestorWrapper(ITypeNameRequestor)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper.acceptClass(char[],char[],char[][],String,AccessRestriction)",1,5,n/a,10,0,5,1,1
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper.acceptInterface(char[],char[],char[][],String,AccessRestriction)",1,4,n/a,10,0,5,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.AbstractIndexer(SearchDocument)",0,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addClassDeclaration(int,char[],char[],char[][],char[],char[][],char[][])",10,2,n/a,28,2,7,12,4
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addConstructorDeclaration(char[],char[][],char[][])",5,2,n/a,9,0,3,11,5
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addConstructorReference(char[],int)",4,3,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addEnumDeclaration(int,char[],char[],char[][],char[][])",9,2,n/a,17,2,5,9,3
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addFieldDeclaration(char[],char[])",3,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addFieldReference(char[])",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addIndexEntry(char[],char[])",1,14,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addInterfaceDeclaration(int,char[],char[],char[][],char[][],char[][])",6,2,n/a,13,2,6,8,3
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addMethodDeclaration(char[],char[][],char[],char[][])",5,2,n/a,11,0,4,13,6
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addMethodReference(char[],int)",2,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addNameReference(char[])",1,6,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addTypeReference(char[])",2,13,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.erasure(char[])",2,4,n/a,6,0,1,4,2
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.indexDocument()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex.AddFolderToIndex(IPath,IProject,char[][],char[][],IndexManager)",2,1,n/a,7,0,5,5,1
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex.execute(IProgressMonitor)",27,3,n/a,18,6,1,43,22
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.AddJarFileToIndex(IFile,IndexManager)",2,4,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.AddJarFileToIndex(IPath,IndexManager)",1,4,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.equals(Object)",2,0,n/a,9,1,1,6,4
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.execute(IProgressMonitor)",61,3,n/a,137,6,1,100,38
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.hashCode()",2,0,n/a,7,0,0,5,3
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.updatedIndexState()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.BinaryIndexer(SearchDocument)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.addTypeReference(char[])",2,14,n/a,22,2,1,16,4
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.convertToArrayType(char[],int)",1,18,n/a,15,1,2,9,2
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.convertToArrayType(char[][],int,int)",1,9,n/a,15,1,3,9,2
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.decodeFieldType(char[])",16,1,n/a,55,3,1,54,25
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.decodeParameterTypes(char[])",18,1,n/a,93,2,1,82,28
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.decodeReturnType(char[])",18,1,n/a,57,3,1,57,26
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractArgCount(char[])",5,2,n/a,36,2,1,32,9
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractClassName(int[],ClassFileReader,int)",4,1,n/a,6,0,3,3,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractClassReference(int[],ClassFileReader,int)",3,1,n/a,5,0,3,2,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractName(int[],ClassFileReader,int)",4,2,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractReferenceFromConstantPool(byte[],ClassFileReader)",18,1,n/a,52,3,2,34,9
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractType(int[],ClassFileReader,int)",4,1,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.indexDocument()",48,1,n/a,96,5,0,71,21
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.replace(char,char,char[])",0,11,n/a,12,2,3,8,4
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.replace(char,char,char[][])",1,2,n/a,10,1,3,7,3
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.IndexAllProject(IProject,IndexManager)",2,4,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.equals(Object)",1,0,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.execute(IProgressMonitor)",69,3,n/a,27,9,1,118,56
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.hashCode()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.updatedIndexState()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.IndexBinaryFolder(IFolder,IndexManager)",2,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.equals(Object)",1,0,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.execute(IProgressMonitor)",43,3,n/a,18,7,1,72,30
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.hashCode()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.updatedIndexState()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.aboutToUpdateIndex(IPath,Integer)",8,1,n/a,16,1,2,10,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.addBinary(IFile,IPath)",7,2,n/a,11,0,2,6,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.addSource(IFile,IPath)",7,4,n/a,11,0,2,6,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.cleanUpIndexes()",21,1,n/a,36,4,0,29,12
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.computeIndexLocation(IPath)",12,9,n/a,14,1,1,11,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.ensureIndexExists(String,IPath)",4,1,n/a,11,1,2,5,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndex(IPath,String,boolean,boolean)",20,5,n/a,63,5,4,34,14
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndex(IPath,boolean,boolean)",2,4,n/a,12,0,3,2,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndexForUpdate(IPath,boolean,boolean)",4,4,n/a,6,0,3,4,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndexStates()",18,5,n/a,35,6,0,29,11
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getJavaPluginWorkingLocation()",2,4,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexAll(IProject)",11,3,n/a,27,2,1,15,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexDocument(SearchDocument,SearchParticipant,Index,IPath)",1,2,n/a,8,1,4,4,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexLibrary(IPath,IProject)",10,6,n/a,26,2,2,15,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexSourceFolder(JavaProject,IPath,char[][],char[][])",5,1,n/a,12,1,4,6,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.jobWasCancelled(IPath)",4,1,n/a,9,1,1,6,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.moveToNextJob()",1,2,n/a,9,0,0,2,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.notifyIdle(long)",1,2,n/a,6,0,1,2,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.processName()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.readIndexState()",2,1,n/a,9,1,0,5,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.rebuildIndex(String,IPath)",12,4,n/a,23,1,2,22,10
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.recreateIndex(IPath)",10,1,n/a,27,2,1,14,5
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.remove(String,IPath)",2,6,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeIndex(IPath)",8,13,n/a,17,0,1,11,4
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeIndexFamily(IPath)",6,3,n/a,20,2,1,17,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeSourceFolderFromIndex(JavaProject,IPath,char[][],char[][])",5,1,n/a,12,1,4,6,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.reset()",3,6,n/a,12,1,0,6,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndex(Index)",9,3,n/a,23,4,1,17,8
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndexes()",16,1,n/a,45,6,0,29,9
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.scheduleDocumentIndexing(SearchDocument,IPath,String,SearchParticipant)",9,3,n/a,3,3,4,15,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.toString()",14,1,n/a,10,1,0,8,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.updateIndexState(String,Integer)",13,7,n/a,41,3,2,35,15
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.IndexRequest(IPath,IndexManager)",0,9,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.belongsTo(String)",4,2,n/a,6,0,1,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.cancel()",1,2,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.ensureReadyToRun()",2,2,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.updatedIndexState()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.InternalSearchDocument.addIndexEntry(char[],char[])",1,1,n/a,7,0,2,2,2
"org.eclipse.jdt.internal.core.search.indexing.InternalSearchDocument.getPath()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.InternalSearchDocument.removeAllIndexEntries()",2,1,n/a,7,0,0,2,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.enterRead()",1,7,n/a,14,2,0,4,3
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.enterWrite()",1,4,n/a,14,2,0,4,3
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitRead()",1,6,n/a,6,0,0,2,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitReadEnterWrite()",0,2,n/a,11,0,0,4,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitWrite()",1,5,n/a,7,0,0,2,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitWriteEnterRead()",2,2,n/a,17,0,0,2,1
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.toString()",8,0,n/a,14,1,0,11,4
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex.RemoveFolderFromIndex(IPath,char[][],char[][],IProject,IndexManager)",2,1,n/a,7,0,5,5,1
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex.execute(IProgressMonitor)",12,3,n/a,32,3,1,28,15
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex.RemoveFromIndex(String,IPath,IndexManager)",1,1,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex.execute(IProgressMonitor)",5,3,n/a,15,1,1,13,6
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex.SaveIndex(IPath,IndexManager)",1,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex.execute(IProgressMonitor)",7,3,n/a,21,2,1,17,8
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.SourceIndexer(SearchDocument)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexDocument()",16,1,n/a,33,2,0,19,6
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.SourceIndexerRequestor(SourceIndexer)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptConstructorReference(char[],int,int)",5,9,n/a,13,2,3,8,3
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptFieldReference(char[],int)",1,5,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptImport(int,int,char[],boolean,int)",4,3,n/a,9,1,5,5,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptLineSeparatorPositions(int[])",0,5,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptMethodReference(char[],int,int)",1,9,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptPackage(int,int,char[])",0,3,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptProblem(IProblem)",0,3,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptTypeReference(char[],int)",1,9,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptTypeReference(char[][],int,int)",2,12,n/a,9,0,3,6,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptUnknownReference(char[],int)",1,7,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptUnknownReference(char[][],int,int)",1,5,n/a,8,1,3,4,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enclosingTypeNames()",1,3,n/a,13,0,0,5,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterClass(TypeInfo)",7,4,n/a,33,2,1,23,8
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterCompilationUnit()",0,4,n/a,6,0,0,0,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterConstructor(MethodInfo)",1,3,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterEnum(TypeInfo)",4,4,n/a,19,2,1,11,4
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterField(FieldInfo)",1,4,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterInitializer(int,int)",0,4,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterInterface(TypeInfo)",5,3,n/a,28,2,1,20,6
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterMethod(MethodInfo)",1,3,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitClass(int)",1,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitCompilationUnit(int)",0,4,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitConstructor(int)",0,5,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitEnum(int)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitField(int,int,int)",0,4,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitInitializer(int)",0,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitInterface(int)",1,4,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitMethod(int,int,int)",0,5,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.popTypeName()",1,3,n/a,12,2,0,6,4
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.pushTypeName(char[])",1,3,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.core.search.matching.AndPattern.AndPattern(int,int)",1,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.AndPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",20,0,n/a,40,5,5,44,17
"org.eclipse.jdt.internal.core.search.matching.AndPattern.hasNextQuery()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.search.matching.AndPattern.resetQuery()",n/a,1,3,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkDeclaringType(IBinaryType,char[],char[],boolean)",3,3,n/a,6,0,4,6,4
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkParameters(char[],char[][],char[][],boolean)",3,2,n/a,9,0,4,10,4
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkTypeName(char[],char[],char[],boolean)",2,8,n/a,6,0,4,4,2
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.convertClassFileFormat(char[])",1,10,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.locateMatches(MatchLocator,ClassFile,IBinaryType)",40,1,n/a,75,5,3,54,19
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchBinary(SearchPattern,Object,IBinaryType)",6,4,n/a,23,1,3,19,9
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchConstructor(ConstructorPattern,Object,IBinaryType)",7,1,n/a,14,1,3,14,7
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchField(FieldPattern,Object,IBinaryType)",9,1,n/a,10,0,3,11,5
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchMethod(MethodPattern,Object,IBinaryType)",12,1,n/a,22,2,3,20,13
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchSuperTypeReference(SuperTypeReferencePattern,Object,IBinaryType)",8,1,n/a,21,2,3,18,8
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchTypeDeclaration(TypeDeclarationPattern,Object,IBinaryType)",12,1,n/a,26,1,3,22,12
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.ClasspathSourceDirectory(IContainer)",5,1,n/a,13,1,1,6,3
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.cleanup()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.directoryList(String)",9,2,n/a,27,3,1,24,9
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.doesFileExist(String,String)",2,1,n/a,8,0,2,8,4
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.equals(Object)",1,0,n/a,5,0,1,5,3
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.findClass(String,String,String)",7,3,n/a,20,2,3,16,4
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.getProjectRelativePath()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.isPackage(String)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.reset()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.toString()",2,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.ConstructorLocator(ConstructorPattern)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(ASTNode,MatchingNodeSet)",1,7,n/a,11,1,2,11,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(ConstructorDeclaration,MatchingNodeSet)",3,2,n/a,5,0,2,3,4
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(Expression,MatchingNodeSet)",3,5,n/a,16,1,2,15,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(FieldDeclaration,MatchingNodeSet)",3,3,n/a,17,1,2,15,12
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(TypeDeclaration,MatchingNodeSet)",1,5,n/a,8,0,2,3,3
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchContainer()",0,2,n/a,9,0,0,3,2
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchLevelForDeclarations(ConstructorDeclaration)",2,1,n/a,15,1,1,14,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchLevelForReferences(ConstructorDeclaration)",0,1,n/a,12,1,1,10,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.newDeclarationMatch(ASTNode,IJavaElement,int,int,MatchLocator)",7,3,n/a,27,4,5,21,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.referenceType()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(ASTNode)",5,4,n/a,15,1,1,12,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(AllocationExpression)",3,1,n/a,7,0,1,4,3
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(Binding)",4,10,n/a,23,3,1,25,12
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(ConstructorDeclaration,boolean)",2,2,n/a,14,2,2,11,8
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(FieldDeclaration)",4,1,n/a,8,0,1,7,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(TypeDeclaration)",2,1,n/a,12,2,1,9,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.ConstructorPattern(boolean,boolean,char[],char[],char[][],char[][],boolean,int)",10,6,n/a,28,2,8,17,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.ConstructorPattern(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.createIndexKey(char[],int)",3,4,n/a,10,0,2,2,2
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.decodeIndexKey(char[])",4,4,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.getBlankPattern()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.getIndexCategories()",0,3,n/a,7,0,0,5,4
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.matchesDecodedKey(SearchPattern)",1,4,n/a,5,0,1,2,4
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.mustResolve()",0,1,n/a,8,0,0,9,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.print(StringBuffer)",15,10,n/a,27,2,1,24,11
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.queryIn(Index)",7,0,n/a,23,1,1,17,12
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfAccessedFieldsPattern.DeclarationOfAccessedFieldsPattern(IJavaElement)",2,2,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedMethodsPattern.DeclarationOfReferencedMethodsPattern(IJavaElement)",2,2,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedTypesPattern.DeclarationOfReferencedTypesPattern(IJavaElement)",2,2,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.FieldLocator(FieldPattern)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.match(ASTNode,MatchingNodeSet)",7,7,n/a,20,4,2,13,8
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.match(FieldDeclaration,MatchingNodeSet)",5,3,n/a,21,2,2,15,13
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchContainer()",0,2,n/a,7,1,0,3,2
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchField(FieldBinding,boolean)",4,7,n/a,26,1,2,20,12
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",2,5,n/a,9,1,3,2,3
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReference(Reference,MatchingNodeSet,boolean)",3,3,n/a,8,1,3,5,4
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",23,11,n/a,102,5,4,87,36
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.referenceType()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.reportDeclaration(FieldBinding,MatchLocator,SimpleSet)",16,4,n/a,40,4,3,36,11
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevel(ASTNode)",3,4,n/a,11,1,1,8,5
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevel(Binding)",1,6,n/a,5,0,1,5,3
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevel(NameReference)",7,1,n/a,28,2,1,26,10
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevelForType(TypeBinding)",1,1,n/a,13,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.FieldPattern(boolean,boolean,boolean,char[],char[],char[],char[],char[],String,int)",2,5,n/a,17,0,10,3,2
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.FieldPattern(boolean,boolean,boolean,char[],char[],char[],char[],char[],int)",10,8,n/a,17,0,9,6,5
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.createIndexKey(char[])",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.decodeIndexKey(char[])",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.getBlankPattern()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.getIndexCategories()",0,2,n/a,7,0,0,5,5
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.getIndexKey()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.matchesDecodedKey(SearchPattern)",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.mustResolve()",1,2,n/a,5,0,0,5,5
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.print(StringBuffer)",16,10,n/a,25,1,1,21,11
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.ImportMatchLocatorParser(ProblemReporter,MatchLocator)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeSingleStaticImportDeclarationName()",2,5,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeSingleTypeImportDeclarationName()",2,5,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeStaticImportOnDemandDeclarationName()",2,5,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeTypeImportOnDemandDeclarationName()",2,5,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.acceptMatch(String,SearchPattern,IndexQueryRequestor,SearchParticipant,IJavaSearchScope)",7,2,n/a,16,2,5,10,6
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.currentPattern()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",14,2,n/a,25,3,5,23,9
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.isPolymorphicSearch()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern.queryIn(Index)",4,2,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.JavaSearchNameEnvironment(IJavaProject,ICompilationUnit[])",13,1,n/a,18,2,2,14,6
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.cleanup()",1,8,n/a,5,1,0,4,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.computeClasspathLocations(IWorkspaceRoot,JavaProject)",15,1,n/a,37,4,2,24,6
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findClass(String,char[])",12,2,n/a,49,4,2,31,9
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findType(char[],char[][])",3,5,n/a,7,0,2,3,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findType(char[][])",3,5,n/a,7,0,1,3,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.isPackage(String)",1,1,n/a,6,0,1,6,3
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.isPackage(char[][],char[])",3,7,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.JavaSearchPattern(int,int)",1,7,n/a,6,0,2,4,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.computeSignature(String)",10,2,n/a,75,4,1,55,18
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.getBlankPattern()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.getMatchMode()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.isCaseSensitive()",0,42,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.isParameterized()",0,5,n/a,7,0,0,1,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.matchesName(char[],char[])",4,14,n/a,22,2,2,15,8
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.print(StringBuffer)",11,10,n/a,24,1,1,19,7
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.toString()",3,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.LocalVariableLocator(LocalVariablePattern)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.getLocalVariable()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.match(LocalDeclaration,MatchingNodeSet)",4,2,n/a,14,0,2,11,12
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.matchContainer()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.matchLocalVariable(LocalVariableBinding,boolean)",3,2,n/a,7,0,2,5,5
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",7,11,n/a,19,1,4,16,4
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.referenceType()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.resolveLevel(ASTNode)",2,4,n/a,8,0,1,6,4
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.resolveLevel(Binding)",1,6,n/a,5,0,1,5,3
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.resolveLevel(NameReference)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern.LocalVariablePattern(boolean,boolean,boolean,LocalVariable,int)",3,5,n/a,4,0,5,2,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",15,0,n/a,24,2,5,16,7
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern.print(StringBuffer)",5,10,n/a,11,1,1,5,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.LocalDeclarationVisitor.LocalDeclarationVisitor(IJavaElement,MatchingNodeSet)",0,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.LocalDeclarationVisitor.visit(TypeDeclaration,BlockScope)",11,2,n/a,36,3,2,23,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.MatchLocator(SearchPattern,SearchRequestor,IJavaSearchScope,IProgressMonitor)",2,2,n/a,12,0,4,6,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WorkingCopyDocument.WorkingCopyDocument(ICompilationUnit,SearchParticipant)",4,1,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WorkingCopyDocument.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WrappedCoreException.WrappedCoreException(CoreException)",0,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.accept(IBinaryType,PackageBinding,AccessRestriction)",1,2,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.accept(ICompilationUnit,AccessRestriction)",5,4,n/a,21,2,2,7,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.accept(ISourceType[],PackageBinding,AccessRestriction)",10,2,n/a,28,1,3,12,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.addWorkingCopies(InternalSearchPattern,SearchDocument[],ICompilationUnit[],SearchParticipant)",12,2,n/a,31,4,4,23,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.basicParser()",4,3,n/a,12,1,0,5,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.cacheBinaryType(IType,IBinaryType)",11,5,n/a,30,3,2,17,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.classFileReader(IType)",21,2,n/a,32,2,1,22,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.computeSuperTypeNames(IType)",9,1,n/a,23,1,1,8,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createAndPattern(SearchPattern,SearchPattern)",1,1,n/a,3,3,2,7,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandle(AbstractMethodDeclaration,IJavaElement)",32,3,n/a,58,7,2,50,20
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandle(FieldDeclaration,TypeDeclaration,IJavaElement)",6,3,n/a,21,2,3,16,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHierarchyResolver(IType,PossibleMatch[])",11,1,n/a,31,3,2,17,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createImportHandle(ImportReference)",11,2,n/a,17,0,1,12,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createTypeHandle(String)",7,3,n/a,18,1,1,10,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.encloses(IJavaElement)",1,18,n/a,3,0,1,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.findIndexMatches(InternalSearchPattern,Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",1,1,n/a,6,0,6,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getBinaryInfo(ClassFile,IResource)",17,5,n/a,34,3,2,22,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getFocusType()",0,1,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBinding(IMethod)",21,1,n/a,33,3,1,27,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBodies(CompilationUnitDeclaration)",4,1,n/a,26,2,1,16,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getParticipant()",1,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getProjectOrJar(IJavaElement)",1,2,n/a,6,1,1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getType(Object,char[])",6,2,n/a,15,1,2,11,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.hasAlreadyDefinedType(CompilationUnitDeclaration)",1,1,n/a,8,0,1,9,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.initialize(JavaProject,int)",10,3,n/a,30,0,2,11,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.isPolymorphicSearch(InternalSearchPattern)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(JavaProject,PossibleMatchSet,int)",5,2,n/a,18,1,3,10,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(JavaProject,PossibleMatch[],int,int)",20,1,n/a,70,5,4,47,20
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(SearchDocument[])",42,1,n/a,3,5,1,84,29
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locatePackageDeclarations(SearchParticipant)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locatePackageDeclarations(SearchPattern,SearchParticipant)",28,2,n/a,70,7,2,52,18
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.lookupType(ReferenceBinding)",13,3,n/a,32,1,1,28,13
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newDeclarationMatch(IJavaElement,int,int,int)",2,7,n/a,9,0,4,3,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",7,2,n/a,24,1,6,15,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newFieldReferenceMatch(IJavaElement,int,int,int,ASTNode)",2,6,n/a,15,0,5,8,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newLocalVariableReferenceMatch(IJavaElement,int,int,int,ASTNode)",2,4,n/a,15,0,5,8,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newMethodReferenceMatch(IJavaElement,int,int,int,boolean,boolean,ASTNode)",2,5,n/a,13,0,7,4,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newPackageReferenceMatch(IJavaElement,int,int,int,ASTNode)",2,3,n/a,11,0,5,4,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newTypeReferenceMatch(IJavaElement,int,int,int,ASTNode)",2,9,n/a,11,0,5,4,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.parseAndBuildBindings(PossibleMatch,boolean)",9,1,n/a,27,2,2,17,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(PossibleMatch,boolean)",16,2,n/a,44,3,2,27,12
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.projectOrJarFocus(InternalSearchPattern)",1,1,n/a,3,0,1,1,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.purgeMethodStatements(TypeDeclaration,boolean)",3,2,n/a,25,4,2,22,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reduceParseTree(CompilationUnitDeclaration)",1,1,n/a,9,0,1,5,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.report(SearchMatch)",14,31,n/a,16,1,1,11,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateFieldReference(QualifiedNameReference,IJavaElement,int[])",12,1,n/a,66,3,3,43,15
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateParameterizedTypeReference(TypeReference,char[],int,TypeReference[],IJavaElement,int)",9,2,n/a,39,4,6,24,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateTypeReference(ASTNode,char[],IJavaElement,int)",11,4,n/a,33,2,4,22,7
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportBinaryMemberDeclaration(IResource,IMember,IBinaryType,int)",14,8,n/a,19,3,4,15,7
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(AbstractMethodDeclaration,IJavaElement,int,boolean,MatchingNodeSet)",18,1,n/a,59,5,5,39,15
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(CompilationUnitDeclaration,boolean)",17,3,n/a,56,3,2,43,17
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(FieldDeclaration,TypeDeclaration,IJavaElement,int,boolean,MatchingNodeSet)",14,1,n/a,46,4,6,32,14
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(TypeDeclaration,IJavaElement,int,MatchingNodeSet,int)",37,4,n/a,119,6,5,99,48
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatchingSuper(TypeReference,IJavaElement,MatchingNodeSet,boolean)",10,2,n/a,36,3,4,29,17
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.resetScannerAfterLastTypeArgumentEnd(TypeReference,Scanner,int)",4,2,n/a,44,2,3,27,11
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.setFocus(InternalSearchPattern,IJavaElement)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.typeInHierarchy(ReferenceBinding)",2,2,n/a,11,1,1,12,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.workingCopiesThatCanSeeFocus(ICompilationUnit[],IJavaElement,boolean,SearchParticipant)",10,1,n/a,23,2,4,14,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassAndMethodDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(ConstructorDeclaration,ClassScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(FieldDeclaration,MethodScope)",1,1,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(Initializer,MethodScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(MethodDeclaration,ClassScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(TypeDeclaration,ClassScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.MatchLocatorParser(ProblemReporter,MatchLocator)",5,2,n/a,14,1,2,6,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.MethodButNoClassDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(ConstructorDeclaration,ClassScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(FieldDeclaration,MethodScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(Initializer,MethodScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(MethodDeclaration,ClassScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.checkComment()",12,7,n/a,42,4,0,35,17
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.classInstanceCreation(boolean)",2,6,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeAssignment()",2,3,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeExplicitConstructorInvocation(int,int)",2,8,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeExplicitConstructorInvocationWithTypeArguments(int,int)",2,7,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeFieldAccess(boolean)",2,6,n/a,5,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeLocalVariableDeclaration()",2,4,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationName()",2,5,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationNameWithTypeArguments()",2,4,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationPrimary()",2,4,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationPrimaryWithTypeArguments()",2,4,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationSuper()",2,4,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationSuperWithTypeArguments()",2,4,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumePrimaryNoNewArray()",0,1,n/a,6,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumePrimaryNoNewArrayWithName()",2,1,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeUnaryExpression(int,boolean)",2,6,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.copyDims(TypeReference,int)",5,6,n/a,8,0,2,6,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.createParser(ProblemReporter,MatchLocator)",2,1,n/a,5,0,2,3,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getTypeReference(int)",2,48,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getUnspecifiedReference()",2,7,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getUnspecifiedReferenceOptimized()",2,16,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(CompilationUnitDeclaration)",2,1,n/a,13,1,1,9,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(TypeDeclaration,CompilationUnitDeclaration)",10,2,n/a,43,4,2,34,12
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addMatch(ASTNode,int)",3,30,n/a,13,1,2,10,4
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addPossibleMatch(ASTNode)",7,2,n/a,12,0,1,6,3
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addTrustedMatch(ASTNode,boolean)",7,3,n/a,12,0,2,6,4
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.hasPossibleNodes(int,int)",0,2,n/a,15,1,2,15,9
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.matchingNodes(int,int)",6,5,n/a,3,2,2,18,7
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.removePossibleMatch(ASTNode)",3,2,n/a,7,0,1,6,2
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.removeTrustedMatch(ASTNode)",3,2,n/a,7,0,1,6,2
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.toString()",9,0,n/a,25,1,0,24,6
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.MethodLocator(MethodPattern)",1,1,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.initializePolymorphicSearch(MatchLocator)",2,2,n/a,14,1,1,2,2
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.isVirtualInvoke(MethodBinding,MessageSend)",3,1,n/a,7,0,2,1,3
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(MessageSend,MatchingNodeSet)",2,8,n/a,11,1,2,11,8
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(MethodDeclaration,MatchingNodeSet)",4,2,n/a,18,1,2,18,10
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchContainer()",0,2,n/a,7,1,0,3,2
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchMethod(MethodBinding)",6,2,n/a,35,3,1,28,14
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",12,11,n/a,37,4,4,24,16
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.referenceType()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.reportDeclaration(MethodBinding,MatchLocator,SimpleSet)",18,1,n/a,43,4,3,41,11
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(ASTNode)",2,4,n/a,7,0,1,5,5
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(Binding)",7,6,n/a,14,0,1,13,8
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(MessageSend)",7,1,n/a,27,3,1,25,13
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevelAsSubtype(char[],ReferenceBinding)",7,4,n/a,25,1,2,19,9
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.MethodPattern(boolean,boolean,char[],char[],char[],char[],char[],char[][],char[][],boolean,IType,int)",16,7,n/a,36,2,12,21,10
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.MethodPattern(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.createIndexKey(char[],int)",3,4,n/a,10,0,2,2,2
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.decodeIndexKey(char[])",4,4,n/a,6,0,1,4,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.getBlankPattern()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.getIndexCategories()",0,3,n/a,7,0,0,5,4
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.isPolymorphicSearch()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.matchesDecodedKey(SearchPattern)",1,4,n/a,5,0,1,2,4
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.mustResolve()",0,1,n/a,17,0,0,11,8
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.print(StringBuffer)",24,10,n/a,39,2,1,35,16
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.queryIn(Index)",7,0,n/a,23,1,1,17,12
"org.eclipse.jdt.internal.core.search.matching.OrLocator.OrLocator(OrPattern)",2,1,n/a,8,0,1,8,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.initializePolymorphicSearch(MatchLocator)",1,2,n/a,4,0,1,4,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(ASTNode,MatchingNodeSet)",1,7,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(ConstructorDeclaration,MatchingNodeSet)",1,2,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(Expression,MatchingNodeSet)",1,5,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(FieldDeclaration,MatchingNodeSet)",1,3,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(LocalDeclaration,MatchingNodeSet)",1,2,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(MessageSend,MatchingNodeSet)",1,8,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(MethodDeclaration,MatchingNodeSet)",1,2,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(Reference,MatchingNodeSet)",1,5,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(TypeDeclaration,MatchingNodeSet)",1,5,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(TypeReference,MatchingNodeSet)",1,7,n/a,11,2,2,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchContainer()",1,2,n/a,6,0,0,6,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",3,5,n/a,15,2,3,14,6
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",2,3,n/a,14,2,5,13,5
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",3,11,n/a,15,2,4,14,6
"org.eclipse.jdt.internal.core.search.matching.OrLocator.newDeclarationMatch(ASTNode,IJavaElement,int,int,MatchLocator)",4,3,n/a,18,2,5,15,6
"org.eclipse.jdt.internal.core.search.matching.OrLocator.resolveLevel(ASTNode)",1,4,n/a,11,2,1,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.resolveLevel(Binding)",1,5,n/a,11,2,1,10,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.setUnitScope(CompilationUnitScope)",1,1,n/a,9,1,1,4,2
"org.eclipse.jdt.internal.core.search.matching.OrPattern.OrPattern(SearchPattern,SearchPattern)",6,4,n/a,18,0,2,14,8
"org.eclipse.jdt.internal.core.search.matching.OrPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",3,0,n/a,10,1,5,7,2
"org.eclipse.jdt.internal.core.search.matching.OrPattern.getBlankPattern()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.OrPattern.isPolymorphicSearch()",1,0,n/a,5,0,0,6,3
"org.eclipse.jdt.internal.core.search.matching.OrPattern.toString()",7,3,n/a,9,1,0,8,2
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator.PackageDeclarationLocator(PackageDeclarationPattern)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator.matchContainer()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern.PackageDeclarationPattern(char[],int)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern.print(StringBuffer)",5,10,n/a,9,0,1,6,2
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern.queryIn(Index)",0,0,n/a,4,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.PackageReferenceLocator(PackageReferencePattern)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.isDeclaringPackageFragment(IPackageFragment,ReferenceBinding)",12,3,n/a,31,4,2,15,9
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(ASTNode,MatchingNodeSet)",2,7,n/a,4,0,2,3,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(Reference,MatchingNodeSet)",2,5,n/a,9,0,2,3,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(TypeReference,MatchingNodeSet)",4,7,n/a,9,1,2,6,3
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchLevel(ImportReference)",4,2,n/a,8,0,1,3,4
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",4,5,n/a,19,2,3,12,6
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchLevelForTokens(char[][])",6,4,n/a,18,1,1,14,7
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",4,3,n/a,23,3,5,17,7
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",3,12,n/a,65,4,4,58,21
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.referenceType()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.resolveLevel(ASTNode)",5,4,n/a,20,1,1,15,7
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.resolveLevel(Binding)",3,10,n/a,30,2,1,24,14
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.resolveLevel(QualifiedNameReference)",2,1,n/a,37,2,1,29,14
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.PackageReferencePattern(char[],int)",4,2,n/a,12,1,2,8,4
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.PackageReferencePattern(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.decodeIndexKey(char[])",0,4,n/a,4,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.getBlankPattern()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.getIndexCategories()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.getIndexKey()",0,2,n/a,6,0,0,3,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.hasNextQuery()",0,1,n/a,5,0,0,1,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.matchesDecodedKey(SearchPattern)",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.print(StringBuffer)",5,10,n/a,9,0,1,6,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.resetQuery()",0,1,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.PatternLocator(SearchPattern)",1,9,n/a,5,0,1,3,2
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.getQualifiedPattern(char[],char[])",2,1,n/a,16,1,2,7,4
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.getQualifiedSourceName(TypeBinding)",11,2,n/a,15,2,1,7,6
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.getTypeNameBinding(int)",0,0,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.initializePolymorphicSearch(MatchLocator)",0,2,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(ASTNode,MatchingNodeSet)",0,7,n/a,9,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(ConstructorDeclaration,MatchingNodeSet)",0,2,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(Expression,MatchingNodeSet)",0,5,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(FieldDeclaration,MatchingNodeSet)",0,3,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(LocalDeclaration,MatchingNodeSet)",0,2,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(MessageSend,MatchingNodeSet)",0,8,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(MethodDeclaration,MatchingNodeSet)",0,2,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(Reference,MatchingNodeSet)",0,5,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(TypeDeclaration,MatchingNodeSet)",0,5,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(TypeReference,MatchingNodeSet)",0,7,n/a,4,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchContainer()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchLevel(ImportReference)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",3,5,n/a,16,1,3,3,3
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",2,3,n/a,9,1,5,2,2
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",8,11,n/a,30,1,4,23,8
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchesName(char[],char[])",4,34,n/a,19,2,2,13,7
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchesTypeReference(char[],TypeReference)",4,4,n/a,21,2,2,17,5
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.newDeclarationMatch(ASTNode,IJavaElement,int,int,MatchLocator)",1,3,n/a,3,0,5,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.patternLocator(SearchPattern)",10,2,n/a,25,1,1,22,11
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.qualifiedPattern(char[],char[])",3,3,n/a,11,1,2,5,4
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.qualifiedSourceName(TypeBinding)",11,5,n/a,10,1,1,5,5
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.referenceType()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.refineAccuracy(int,ParameterizedTypeBinding,char[][][],MatchLocator)",1,4,n/a,12,0,4,3,2
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.refineAccuracy(int,ParameterizedTypeBinding,char[][][],int,MatchLocator)",15,2,n/a,110,5,5,81,39
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevel(ASTNode)",0,4,n/a,13,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevel(Binding)",0,5,n/a,11,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevelForType(char[],TypeBinding)",5,4,n/a,21,0,2,10,6
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevelForType(char[],char[],TypeBinding)",10,13,n/a,27,2,3,13,9
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevelForType(char[],char[],char[][][],int,boolean,TypeBinding)",33,3,n/a,134,6,6,84,43
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.setUnitScope(CompilationUnitScope)",0,1,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.PossibleMatch(MatchLocator,IResource,Openable,SearchDocument)",3,3,n/a,9,0,4,7,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.cleanUp()",1,2,n/a,8,1,0,5,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.equals(Object)",2,0,n/a,7,0,1,5,3
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getContents()",5,25,n/a,11,1,0,10,4
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getFileName()",2,31,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getMainTypeName()",0,4,n/a,4,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getPackageName()",1,4,n/a,5,0,0,4,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName()",18,1,n/a,24,1,0,14,5
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getSourceFileName()",4,2,n/a,15,1,0,9,4
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.hashCode()",2,0,n/a,7,0,0,8,3
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.toString()",1,0,n/a,3,0,0,1,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet.add(PossibleMatch)",7,1,n/a,11,1,1,8,3
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet.getPossibleMatches(IPackageFragmentRoot[])",5,1,n/a,14,2,1,12,4
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet.reset()",1,1,n/a,4,0,0,2,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.QualifiedTypeDeclarationPattern(char[],char[],char,int)",5,2,n/a,7,0,4,5,3
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.QualifiedTypeDeclarationPattern(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.decodeIndexKey(char[])",6,4,n/a,16,1,1,12,3
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.getBlankPattern()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.matchesDecodedKey(SearchPattern)",2,4,n/a,11,1,1,9,4
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.print(StringBuffer)",11,11,n/a,29,1,1,24,8
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.SuperTypeNamesCollector(SearchPattern,char[],char[],MatchLocator,IType,IProgressMonitor)",0,2,n/a,14,0,6,6,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(ConstructorDeclaration,ClassScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(FieldDeclaration,MethodScope)",0,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(Initializer,MethodScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(MethodDeclaration,ClassScope)",0,2,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(TypeDeclaration,BlockScope)",2,2,n/a,6,0,2,4,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(TypeDeclaration,ClassScope)",2,2,n/a,6,0,2,4,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(TypeDeclaration,CompilationUnitScope)",2,2,n/a,6,0,2,4,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.addToResult(char[][])",2,2,n/a,8,0,1,9,4
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.buildBindings(ICompilationUnit,boolean)",21,2,n/a,1,2,2,20,7
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.collect()",26,2,n/a,70,4,0,53,20
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.collectSuperTypeNames(ReferenceBinding)",6,8,n/a,18,2,1,12,4
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.getPathsOfDeclaringType()",13,1,n/a,7,3,0,13,6
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.matches(ReferenceBinding)",1,4,n/a,3,0,1,1,3
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.matches(char[][])",10,2,n/a,20,1,1,18,6
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.SuperTypeReferenceLocator(SuperTypeReferencePattern)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.match(TypeReference,MatchingNodeSet)",3,7,n/a,22,1,2,10,6
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.matchContainer()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.referenceType()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.resolveLevel(ASTNode)",1,4,n/a,7,0,1,7,3
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.resolveLevel(Binding)",4,5,n/a,19,2,1,20,8
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.SuperTypeReferencePattern(char[],char[],boolean,int)",5,3,n/a,11,0,4,5,3
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.SuperTypeReferencePattern(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.createIndexKey(int,char[],char[],char[][],char[][],char,char[],char)",18,5,n/a,96,3,8,73,22
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.decodeIndexKey(char[])",15,4,n/a,37,1,1,25,7
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.getBlankPattern()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.getIndexCategories()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.matchesDecodedKey(SearchPattern)",2,4,n/a,8,0,1,8,5
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.print(StringBuffer)",5,10,n/a,12,0,1,6,3
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.queryIn(Index)",5,0,n/a,20,1,1,13,5
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.TypeDeclarationLocator(TypeDeclarationPattern)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.match(TypeDeclaration,MatchingNodeSet)",2,5,n/a,12,0,2,3,4
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.resolveLevel(ASTNode)",1,4,n/a,4,0,1,3,2
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.resolveLevel(Binding)",5,6,n/a,22,1,1,20,10
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.resolveLevelForType(char[],char[],char[],TypeBinding)",7,1,n/a,17,0,4,10,5
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.TypeDeclarationPattern(char[],char[][],char[],char,int)",7,4,n/a,20,1,5,13,7
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.TypeDeclarationPattern(int)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.createIndexKey(char[],char[],char[][],char)",3,3,n/a,37,2,4,31,11
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.decodeIndexKey(char[])",8,4,n/a,21,1,1,11,4
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.getBlankPattern()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.getIndexCategories()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.matchesDecodedKey(SearchPattern)",7,4,n/a,26,1,1,21,11
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.print(StringBuffer)",16,11,n/a,40,2,1,34,11
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.queryIn(Index)",10,0,n/a,41,4,1,27,12
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.TypeReferenceLocator(TypeReferencePattern)",1,1,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.findElement(IJavaElement,int)",2,2,n/a,9,0,2,6,4
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(ASTNode,MatchingNodeSet)",2,7,n/a,4,0,2,3,2
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(Reference,MatchingNodeSet)",5,5,n/a,20,1,2,14,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(TypeReference,MatchingNodeSet)",5,7,n/a,15,1,2,12,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchLevel(ImportReference)",5,2,n/a,24,2,1,23,10
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",4,5,n/a,19,2,3,12,6
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",12,3,n/a,58,7,5,39,18
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(ASTNode,IJavaElement,int,MatchLocator)",7,11,n/a,18,1,4,13,6
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(ArrayTypeReference,IJavaElement,int,MatchLocator)",9,1,n/a,24,2,4,18,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(QualifiedNameReference,IJavaElement,int,MatchLocator)",6,1,n/a,50,4,4,40,17
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(QualifiedTypeReference,IJavaElement,int,MatchLocator)",10,1,n/a,52,7,4,39,17
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.referenceType()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclaration(ASTNode,IJavaElement,MatchLocator,SimpleSet)",3,1,n/a,48,3,4,45,19
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclaration(ReferenceBinding,int,MatchLocator,SimpleSet)",15,2,n/a,38,4,4,29,11
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(ASTNode)",2,4,n/a,8,0,1,5,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(Binding)",3,6,n/a,16,1,1,14,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(NameReference)",3,1,n/a,45,2,1,36,19
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(TypeReference)",2,1,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevelForType(TypeBinding)",1,6,n/a,13,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevelForTypeOrEnclosingTypes(char[],char[],TypeBinding)",2,2,n/a,19,2,3,10,5
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],String,boolean,int)",2,3,n/a,7,0,5,3,2
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],int)",7,3,n/a,17,0,3,12,7
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(int)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.decodeIndexKey(char[])",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.getBlankPattern()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.getIndexCategories()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.getIndexKey()",0,2,n/a,8,0,0,5,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.hasNextQuery()",0,1,n/a,7,0,0,3,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchesDecodedKey(SearchPattern)",0,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.print(StringBuffer)",8,10,n/a,14,0,1,10,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.resetQuery()",0,1,n/a,5,0,0,2,2
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.VariableLocator(VariablePattern)",1,2,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.match(Expression,MatchingNodeSet)",3,5,n/a,19,2,2,13,8
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.match(Reference,MatchingNodeSet)",1,5,n/a,5,0,2,1,2
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.matchReference(Reference,MatchingNodeSet,boolean)",7,3,n/a,23,3,3,17,10
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.toString()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.search.matching.VariablePattern.VariablePattern(int,boolean,boolean,boolean,char[],int)",3,2,n/a,8,0,6,6,3
"org.eclipse.jdt.internal.core.search.matching.VariablePattern.mustResolve()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.core.search.processing.IJob.belongsTo(String)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.search.processing.IJob.cancel()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.search.processing.IJob.ensureReadyToRun()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.search.processing.IJob.execute(IProgressMonitor)",n/a,3,9,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.search.processing.JobManager.activateProcessing()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.search.processing.JobManager.awaitingJobsCount()",0,6,n/a,7,0,0,1,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.currentJob()",0,3,n/a,9,0,0,3,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.disable()",1,3,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.discardJobs(String)",12,9,n/a,52,5,1,32,15
"org.eclipse.jdt.internal.core.search.processing.JobManager.enable()",2,2,n/a,6,0,0,4,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.isJobWaiting(IJob)",1,4,n/a,5,0,1,6,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.moveToNextJob()",0,2,n/a,14,2,0,5,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.notifyIdle(long)",0,2,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob(IJob,int,IProgressMonitor)",39,4,n/a,106,6,3,71,32
"org.eclipse.jdt.internal.core.search.processing.JobManager.processName()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.search.processing.JobManager.request(IJob)",6,9,n/a,16,1,1,11,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.reset()",7,3,n/a,17,1,0,8,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.run()",33,0,n/a,12,5,0,59,19
"org.eclipse.jdt.internal.core.search.processing.JobManager.shutdown()",5,1,n/a,22,3,0,11,4
"org.eclipse.jdt.internal.core.search.processing.JobManager.toString()",12,1,n/a,10,1,0,9,3
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.ASTNodeFinder(CompilationUnitDeclaration)",0,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findField(IField)",5,1,n/a,19,3,1,13,5
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findInitializer(IInitializer)",2,1,n/a,19,3,1,13,6
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findMethod(IMethod)",8,1,n/a,32,6,1,26,9
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findType(IType)",17,7,n/a,13,4,1,59,22
"org.eclipse.jdt.internal.core.util.Annotation.Annotation(byte[],IConstantPool,int)",9,4,n/a,37,2,3,20,5
"org.eclipse.jdt.internal.core.util.Annotation.getComponents()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.Annotation.getComponentsNumber()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.Annotation.getTypeIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.Annotation.getTypeName()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.Annotation.sizeInBytes()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.AnnotationComponent(byte[],IConstantPool,int)",7,1,n/a,18,2,3,11,3
"org.eclipse.jdt.internal.core.util.AnnotationComponent.getComponentName()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.getComponentNameIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.getComponentValue()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.sizeInBytes()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.AnnotationComponentValue(byte[],IConstantPool,int)",24,3,n/a,91,3,3,76,17
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getAnnotationComponentValues()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getAnnotationValue()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getAttributeValue()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getClassInfo()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getClassInfoIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getConstantValue()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getConstantValueIndex()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantName()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantNameIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantTypeName()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantTypeNameIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getTag()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getValuesNumber()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.sizeInBytes()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute.AnnotationDefaultAttribute(byte[],IConstantPool,int)",2,1,n/a,15,0,3,2,1
"org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute.getMemberValue()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.AnonymousFileSource(File)",4,0,n/a,11,1,1,5,3
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.allocateAnonymousFile()",2,0,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.allocateAnonymousURL(byte[])",17,0,n/a,26,2,1,17,4
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.convertFileToURL(File)",4,1,n/a,12,1,1,4,2
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.fileForName(String)",6,3,n/a,14,1,1,7,2
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.getAnonymousFile()",6,1,n/a,18,2,0,7,3
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.getAnonymousFileName()",2,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.AnonymousFileSource.getAnonymousFileName(long)",7,1,n/a,16,1,1,10,3
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer()",1,7,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer(char[])",1,0,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer(char[],int)",1,3,n/a,15,0,2,6,3
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer(int)",1,0,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(String)",3,45,n/a,11,0,1,3,2
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(char)",1,15,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(char[])",1,14,n/a,10,0,1,3,2
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(char[],int,int)",6,58,n/a,31,3,3,20,8
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.getContents()",1,7,n/a,25,2,0,19,5
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.toString()",2,1,n/a,8,0,0,2,2
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.ClassFileAttribute(byte[],IConstantPool,int)",6,23,n/a,9,1,3,6,2
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.getAttributeLength()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.getAttributeName()",0,16,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.getAttributeNameIndex()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.ClassFileReader(byte[],int)",47,4,n/a,215,6,2,173,44
"org.eclipse.jdt.internal.core.util.ClassFileReader.getAccessFlags()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getAttributeCount()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getAttributes()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getClassIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getClassName()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getConstantClassNameAt(byte[],int[],int)",3,3,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getConstantPool()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getFieldInfos()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getFieldsCount()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getInnerClassesAttribute()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getInterfaceIndexes()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getInterfaceNames()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMagic()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMajorVersion()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMethodInfos()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMethodsCount()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMinorVersion()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getSourceFileAttribute()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getSuperclassIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getSuperclassName()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.isClass()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.isInterface()",1,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.doubleAt(byte[],int,int)",2,1,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.equals(char[],char[])",0,25,n/a,12,0,2,11,7
"org.eclipse.jdt.internal.core.util.ClassFileStruct.floatAt(byte[],int,int)",2,1,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i1At(byte[],int,int)",0,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i2At(byte[],int,int)",0,20,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i4At(byte[],int,int)",0,11,n/a,7,0,3,2,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i8At(byte[],int,int)",0,2,n/a,11,0,3,2,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.u1At(byte[],int,int)",0,24,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.u2At(byte[],int,int)",0,109,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.u4At(byte[],int,int)",0,11,n/a,8,0,3,2,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.utf8At(byte[],int,int,int)",1,3,n/a,24,3,4,17,5
"org.eclipse.jdt.internal.core.util.CodeAttribute.CodeAttribute(byte[],IConstantPool,int)",20,1,n/a,46,2,3,41,9
"org.eclipse.jdt.internal.core.util.CodeAttribute.getAttributes()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getAttributesCount()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getBytecodes()",1,1,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.core.util.CodeAttribute.getCodeLength()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getExceptionTable()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getExceptionTableLength()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getLineNumberAttribute()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getLocalVariableAttribute()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getMaxLocals()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getMaxStack()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.traverse(IBytecodeVisitor)",330,2,n/a,1.001,3,1,967,237
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.getRecordedParsingInformation(CompilationResult,CommentRecorderParser)",3,4,n/a,13,2,2,8,3
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseClassBodyDeclarations(char[],Map,boolean)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseClassBodyDeclarations(char[],int,int,Map,boolean)",12,2,n/a,23,1,5,12,3
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseCompilationUnit(char[],Map,boolean)",14,1,n/a,41,2,3,21,7
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseExpression(char[],Map,boolean)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseExpression(char[],int,int,Map,boolean)",12,2,n/a,22,1,5,11,3
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseStatements(char[],Map,boolean)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseStatements(char[],int,int,Map,boolean)",15,2,n/a,30,1,5,19,3
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.CommentRecorderParser(ProblemReporter,boolean)",1,9,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.checkComment()",3,7,n/a,41,2,0,24,14
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeClassHeader()",2,4,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeEmptyClassMemberDeclaration()",2,2,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeEmptyTypeDeclaration()",2,2,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeInterfaceHeader()",2,4,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.containsComment(int,int)",0,18,n/a,19,2,2,12,5
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.endParse(int)",3,5,n/a,11,1,1,5,2
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.flushCommentsDefinedPriorTo(int)",5,34,n/a,41,2,1,30,11
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.getCommentsPositions()",0,2,n/a,12,1,0,7,2
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.initialize()",1,14,n/a,7,0,0,2,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.initializeScanner()",2,1,n/a,14,0,0,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.pushOnCommentsStack(int,int)",2,7,n/a,25,3,2,12,8
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.resetModifiers()",2,13,n/a,8,0,0,2,1
"org.eclipse.jdt.internal.core.util.CommentRecorderScanner.CommentRecorderScanner(boolean,boolean,boolean,long,char[][],char[][],boolean)",1,1,n/a,10,0,7,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderScanner.recordComment(int)",1,11,n/a,11,1,1,3,2
"org.eclipse.jdt.internal.core.util.ConstantPool.ConstantPool(byte[],int[])",0,1,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.core.util.ConstantPool.decodeEntry(int)",62,50,n/a,60,1,1,54,11
"org.eclipse.jdt.internal.core.util.ConstantPool.getConstantPoolCount()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPool.getEntryKind(int)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPool.getUtf8ValueAt(int)",2,9,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassIndex()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassInfoName()",0,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassInfoNameIndex()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassName()",0,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getDoubleValue()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getFieldDescriptor()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getFieldName()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getFloatValue()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getIntegerValue()",0,18,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getKind()",0,59,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getLongValue()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getMethodDescriptor()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getMethodName()",0,6,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeDescriptorIndex()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeIndex()",0,8,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeInfoDescriptorIndex()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeInfoNameIndex()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeNameIndex()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getStringIndex()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getStringValue()",1,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getUtf8Length()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getUtf8Value()",0,29,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.reset()",0,1,n/a,22,0,0,20,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassIndex(int)",0,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassInfoName(char[])",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassInfoNameIndex(int)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassName(char[])",0,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setDoubleValue(double)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setFieldDescriptor(char[])",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setFieldName(char[])",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setFloatValue(float)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setIntegerValue(int)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setKind(int)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setLongValue(long)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setMethodDescriptor(char[])",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setMethodName(char[])",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setNameAndTypeDescriptorIndex(int)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setNameAndTypeIndex(int)",0,2,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setNameAndTypeNameIndex(int)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setStringIndex(int)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setStringValue(char[])",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setUtf8Length(int)",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setUtf8Value(char[])",0,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute.ConstantValueAttribute(byte[],IConstantPool,int)",3,1,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute.getConstantValue()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute.getConstantValueIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.DefaultBytecodeVisitor(long,StringBuffer,String,int)",2,1,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aaload(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aastore(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aconst_null(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._anewarray(int,int,IConstantPoolEntry)",10,3,n/a,12,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._areturn(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._arraylength(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._athrow(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._baload(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._bastore(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._bipush(int,byte)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._breakpoint(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._caload(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._castore(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._checkcast(int,int,IConstantPoolEntry)",10,3,n/a,12,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._d2f(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._d2i(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._d2l(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dadd(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._daload(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dastore(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dcmpg(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dcmpl(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dconst_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dconst_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ddiv(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dmul(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dneg(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._drem(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dreturn(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dsub(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup2_x1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup2_x2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup_x1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup_x2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._f2d(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._f2i(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._f2l(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fadd(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._faload(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fastore(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fcmpg(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fcmpl(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fconst_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fconst_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fconst_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fdiv(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fmul(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fneg(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._frem(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._freturn(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fsub(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._getfield(int,int,IConstantPoolEntry)",20,3,n/a,17,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._getstatic(int,int,IConstantPoolEntry)",20,3,n/a,17,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._goto(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._goto_w(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2b(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2c(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2d(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2f(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2l(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2s(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iadd(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iaload(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iand(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iastore(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_4(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_5(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_m1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._idiv(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_acmpeq(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_acmpne(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpeq(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpge(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpgt(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmple(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmplt(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpne(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifeq(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifge(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifgt(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifle(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iflt(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifne(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifnonnull(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifnull(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iinc(int,int,int)",9,4,n/a,12,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._impdep1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._impdep2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._imul(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ineg(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._instanceof(int,int,IConstantPoolEntry)",10,3,n/a,12,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokeinterface(int,int,byte,IConstantPoolEntry)",21,3,n/a,22,0,4,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokespecial(int,int,IConstantPoolEntry)",18,3,n/a,16,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokestatic(int,int,IConstantPoolEntry)",18,3,n/a,16,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokevirtual(int,int,IConstantPoolEntry)",18,3,n/a,16,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ior(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._irem(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ireturn(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ishl(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ishr(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._isub(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iushr(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ixor(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._jsr(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._jsr_w(int,int)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._l2d(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._l2f(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._l2i(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ladd(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._laload(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._land(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lastore(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lcmp(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lconst_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lconst_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldc(int,int,IConstantPoolEntry)",13,3,n/a,24,1,3,15,5
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldc2_w(int,int,IConstantPoolEntry)",11,3,n/a,18,1,3,9,3
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldc_w(int,int,IConstantPoolEntry)",13,3,n/a,24,1,3,15,5
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldiv(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lmul(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lneg(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lookupswitch(int,int,int,int[][])",11,3,n/a,19,1,4,9,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lor(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lrem(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lreturn(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lshl(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lshr(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_0(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_1(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_3(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lsub(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lushr(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lxor(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._monitorenter(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._monitorexit(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._multianewarray(int,int,int,IConstantPoolEntry)",11,3,n/a,17,0,4,4,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._new(int,int,IConstantPoolEntry)",10,3,n/a,12,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._newarray(int,int)",9,3,n/a,12,0,2,4,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._nop(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._pop(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._pop2(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._putfield(int,int,IConstantPoolEntry)",20,3,n/a,17,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._putstatic(int,int,IConstantPoolEntry)",20,3,n/a,17,0,3,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ret(int,int)",6,4,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._return(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._saload(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._sastore(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._sipush(int,short)",6,3,n/a,10,0,2,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._swap(int)",3,3,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._tableswitch(int,int,int,int,int[])",11,3,n/a,24,1,5,9,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._wide(int,int,int)",14,4,n/a,42,1,3,36,12
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._wide(int,int,int,int)",4,2,n/a,9,0,4,4,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendDimensions(int)",2,1,n/a,5,1,1,4,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendGetArrayType(int)",8,1,n/a,27,1,1,24,9
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputForConstantClass(IConstantPoolEntry)",4,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputForConstantDouble(IConstantPoolEntry)",4,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputForConstantLong(IConstantPoolEntry)",4,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputForConstantString(IConstantPoolEntry)",4,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputforConstantFloat(IConstantPoolEntry)",4,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.appendOutputforConstantInteger(IConstantPoolEntry)",4,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.dumpPcNumber(int)",7,205,n/a,12,1,1,10,3
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.returnConstantClassName(IConstantPoolEntry)",2,6,n/a,8,1,1,4,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.returnDeclaringClassName(IConstantPoolEntry)",2,8,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.writeExtraTabs(int)",2,2,n/a,5,1,1,4,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.writeNewLine()",1,207,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.writeTabs()",2,1,n/a,5,1,0,4,2
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForField(StringBuffer,int)",26,1,n/a,78,2,2,51,26
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForInnerClasses(StringBuffer,int)",20,3,n/a,60,2,2,39,20
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForMethod(StringBuffer,int)",32,1,n/a,96,2,2,63,32
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForType(StringBuffer,int)",11,1,n/a,33,2,2,21,11
"org.eclipse.jdt.internal.core.util.Disassembler.decodeStringValue(String)",2,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeStringValue(char[])",19,2,n/a,59,2,1,57,19
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotation,StringBuffer,String,int)",14,4,n/a,18,1,4,11,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotationComponent,StringBuffer,String,int)",9,1,n/a,11,0,4,3,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotationComponentValue,StringBuffer,String,int)",50,3,n/a,85,3,4,71,18
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotationDefaultAttribute,StringBuffer,String,int)",6,1,n/a,7,0,4,5,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileAttribute,StringBuffer,String,int)",11,3,n/a,9,0,4,3,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileReader,IMethodInfo,StringBuffer,String,int,int)",98,1,n/a,141,4,6,86,37
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileReader,String)",1,0,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileReader,String,int)",89,4,n/a,192,5,3,125,59
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(ICodeAttribute,StringBuffer,String,int)",173,1,n/a,163,3,4,94,15
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IConstantPool,StringBuffer,String,int)",89,1,n/a,111,2,4,50,14
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IEnclosingMethodAttribute,StringBuffer,String,int)",21,1,n/a,18,1,4,5,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IFieldInfo,StringBuffer,String,int,int)",78,1,n/a,110,4,5,76,32
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IInnerClassesAttribute,StringBuffer,String,int)",114,1,n/a,107,2,4,51,8
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeInvisibleAnnotationsAttribute,StringBuffer,String,int)",5,3,n/a,8,1,4,7,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeInvisibleParameterAnnotationsAttribute,StringBuffer,String,int)",5,1,n/a,8,1,4,7,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeVisibleAnnotationsAttribute,StringBuffer,String,int)",5,3,n/a,8,1,4,7,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeVisibleParameterAnnotationsAttribute,StringBuffer,String,int)",5,1,n/a,8,1,4,7,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(byte[],String)",2,1,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(byte[],String,int)",2,1,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(int,IParameterAnnotation,StringBuffer,String,int)",7,2,n/a,11,1,5,7,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotation,StringBuffer,String,int)",11,3,n/a,13,2,4,11,3
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotationComponent,StringBuffer,String,int)",5,1,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotationComponentValue,StringBuffer,String,int)",35,3,n/a,72,3,4,67,19
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotationDefaultAttribute,StringBuffer,String,int)",2,1,n/a,4,0,4,2,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IRuntimeInvisibleAnnotationsAttribute,StringBuffer,String,int)",2,3,n/a,6,1,4,5,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IRuntimeVisibleAnnotationsAttribute,StringBuffer,String,int)",2,3,n/a,6,1,4,5,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleTypeMembers(IClassFileReader,StringBuffer,String,int,int)",6,1,n/a,12,1,5,12,3
"org.eclipse.jdt.internal.core.util.Disassembler.dumpTab(int,StringBuffer)",2,6,n/a,5,1,2,4,2
"org.eclipse.jdt.internal.core.util.Disassembler.getDescription()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.getEnclosingMethodAttribute(IClassFileReader)",3,1,n/a,9,2,1,7,3
"org.eclipse.jdt.internal.core.util.Disassembler.getEntryFor(int,ILocalVariableTableEntry[])",1,1,n/a,17,2,2,7,3
"org.eclipse.jdt.internal.core.util.Disassembler.getFieldRefNameAndType(IConstantPoolEntry)",7,1,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.Disassembler.getLocalVariableTypeAttribute(ICodeAttribute)",3,1,n/a,9,2,1,7,3
"org.eclipse.jdt.internal.core.util.Disassembler.getMethodRefNameAndType(IConstantPoolEntry)",7,2,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.Disassembler.getParameterNames(char[],ICodeAttribute,int)",11,2,n/a,29,4,3,23,8
"org.eclipse.jdt.internal.core.util.Disassembler.getSignatureForField(char[])",4,1,n/a,7,0,1,5,1
"org.eclipse.jdt.internal.core.util.Disassembler.isDeprecated(IClassFileReader)",3,1,n/a,9,2,1,7,3
"org.eclipse.jdt.internal.core.util.Disassembler.isSynthetic(IClassFileReader)",4,1,n/a,13,2,1,10,4
"org.eclipse.jdt.internal.core.util.Disassembler.writeNewLine(StringBuffer,String,int)",2,56,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.EnclosingMethodAttribute(byte[],IConstantPool,int)",20,1,n/a,29,2,3,22,6
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getEnclosingClass()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getEnclosingClassIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodDescriptor()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodDescriptorIndex()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodName()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodNameAndTypeIndex()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodNameIndex()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.ExceptionAttribute(byte[],IConstantPool,int)",7,1,n/a,22,2,3,19,4
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.getExceptionIndexes()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.getExceptionNames()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.getExceptionsNumber()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.ExceptionTableEntry(byte[],IConstantPool,int)",8,1,n/a,13,2,3,9,3
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getCatchType()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getCatchTypeIndex()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getEndPC()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getHandlerPC()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getStartPC()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.FieldInfo(byte[],IConstantPool,int)",31,1,n/a,59,2,3,45,13
"org.eclipse.jdt.internal.core.util.FieldInfo.getAccessFlags()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getAttributeCount()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getAttributes()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getConstantValueAttribute()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getDescriptor()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getDescriptorIndex()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getName()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getNameIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.hasConstantValueAttribute()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.isDeprecated()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.isSynthetic()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.sizeInBytes()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.HandleFactory()",2,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.createElement(ClassScope,ICompilationUnit,HashSet,HashMap)",1,1,n/a,6,0,4,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.createElement(Scope,int,ICompilationUnit,HashSet,HashMap)",29,4,n/a,78,5,5,61,21
"org.eclipse.jdt.internal.core.util.HandleFactory.createOpenable(String,IJavaSearchScope)",31,3,n/a,83,2,2,50,14
"org.eclipse.jdt.internal.core.util.HandleFactory.getJarPkgFragmentRoot(IPath,Object,IJavaProject[])",5,2,n/a,25,5,3,14,6
"org.eclipse.jdt.internal.core.util.HandleFactory.getJarPkgFragmentRoot(String,IJavaSearchScope)",18,1,n/a,56,4,2,34,11
"org.eclipse.jdt.internal.core.util.HandleFactory.getPkgFragmentRoot(String)",13,1,n/a,26,4,1,18,8
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.HashtableOfArrayToObject()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.HashtableOfArrayToObject(int)",0,4,n/a,9,0,1,7,2
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.clone()",3,1,n/a,12,0,0,10,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.containsKey(Object[])",2,0,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.get(Object[])",2,10,n/a,11,1,1,8,4
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.getKey(Object[],int)",2,1,n/a,10,1,2,7,4
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.hashCode(Object[])",1,4,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.hashCode(Object[],int)",2,2,n/a,6,0,2,6,2
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.put(Object[],Object)",3,9,n/a,16,1,2,12,5
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.rehash()",2,2,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.removeKey(Object[])",3,0,n/a,17,2,1,13,4
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.size()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.toString()",8,0,n/a,18,2,0,18,6
"org.eclipse.jdt.internal.core.util.ICacheEnumeration.getValue()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.util.ILRUCacheable.getCacheFootprint()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute.InnerClassesAttribute(byte[],IConstantPool,int)",3,1,n/a,26,2,3,12,3
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute.getInnerClassAttributesEntries()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute.getNumberOfClasses()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.InnerClassesAttributeEntry(byte[],IConstantPool,int)",16,1,n/a,29,2,3,20,7
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getAccessFlags()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerClassName()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerClassNameIndex()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerName()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerNameIndex()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getOuterClassName()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getOuterClassNameIndex()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCache()",1,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCache(int)",1,3,n/a,10,0,1,4,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCacheEntry.LRUCacheEntry(Object,Object,int)",0,1,n/a,9,0,3,3,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCacheEntry.toString()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.clone()",2,0,n/a,16,1,0,7,2
"org.eclipse.jdt.internal.core.util.LRUCache.flush()",2,0,n/a,13,1,0,7,2
"org.eclipse.jdt.internal.core.util.LRUCache.flush(Object)",2,0,n/a,13,0,1,5,2
"org.eclipse.jdt.internal.core.util.LRUCache.get(Object)",2,5,n/a,15,1,1,5,2
"org.eclipse.jdt.internal.core.util.LRUCache.getCurrentSpace()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.getSpaceLimit()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.keys()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.keysAndValues()",5,0,n/a,6,3,0,7,2
"org.eclipse.jdt.internal.core.util.LRUCache.makeSpace(int)",2,2,n/a,24,1,1,9,5
"org.eclipse.jdt.internal.core.util.LRUCache.newInstance(int)",1,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.privateAdd(Object,Object,int)",2,4,n/a,8,0,3,3,1
"org.eclipse.jdt.internal.core.util.LRUCache.privateAddEntry(LRUCacheEntry,boolean)",1,3,n/a,21,1,2,10,3
"org.eclipse.jdt.internal.core.util.LRUCache.privateNotifyDeletionFromCache(LRUCacheEntry)",0,4,n/a,8,0,1,0,1
"org.eclipse.jdt.internal.core.util.LRUCache.privateRemoveEntry(LRUCacheEntry,boolean)",2,5,n/a,27,1,2,13,4
"org.eclipse.jdt.internal.core.util.LRUCache.put(Object,Object)",8,0,n/a,36,2,2,17,4
"org.eclipse.jdt.internal.core.util.LRUCache.removeKey(Object)",2,1,n/a,16,1,1,6,2
"org.eclipse.jdt.internal.core.util.LRUCache.setSpaceLimit(int)",1,0,n/a,11,1,1,3,2
"org.eclipse.jdt.internal.core.util.LRUCache.spaceFor(Object)",1,2,n/a,10,1,1,3,2
"org.eclipse.jdt.internal.core.util.LRUCache.toString()",1,0,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.toStringContents()",14,2,n/a,30,1,0,23,4
"org.eclipse.jdt.internal.core.util.LRUCache.updateTimestamp(LRUCacheEntry)",2,2,n/a,12,1,1,5,2
"org.eclipse.jdt.internal.core.util.LineNumberAttribute.LineNumberAttribute(byte[],IConstantPool,int)",4,1,n/a,27,2,3,13,3
"org.eclipse.jdt.internal.core.util.LineNumberAttribute.getLineNumberTable()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LineNumberAttribute.getLineNumberTableLength()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute.LocalVariableAttribute(byte[],IConstantPool,int)",3,1,n/a,26,2,3,12,3
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute.getLocalVariableTable()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute.getLocalVariableTableLength()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.LocalVariableTableEntry(byte[],IConstantPool,int)",13,1,n/a,28,1,3,13,3
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getDescriptor()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getDescriptorIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getIndex()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getLength()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getName()",0,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getNameIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getStartPC()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute.LocalVariableTypeAttribute(byte[],IConstantPool,int)",3,1,n/a,26,2,3,12,3
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute.getLocalVariableTypeTable()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute.getLocalVariableTypeTableLength()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.LocalVariableTypeTableEntry(byte[],IConstantPool,int)",13,1,n/a,28,1,3,13,3
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getIndex()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getLength()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getName()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getNameIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getSignature()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getSignatureIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getStartPC()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MementoTokenizer.MementoTokenizer(String)",1,1,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.core.util.MementoTokenizer.hasMoreTokens()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.MementoTokenizer.nextToken()",10,41,n/a,70,2,0,65,21
"org.eclipse.jdt.internal.core.util.MethodInfo.MethodInfo(byte[],IConstantPool,int,int)",41,1,n/a,78,3,4,59,22
"org.eclipse.jdt.internal.core.util.MethodInfo.getAccessFlags()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getAttributeCount()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getAttributes()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getCodeAttribute()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getDescriptor()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getDescriptorIndex()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getExceptionAttribute()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getName()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getNameIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isAbstract()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isClinit()",0,2,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.core.util.MethodInfo.isConstructor()",0,2,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.core.util.MethodInfo.isDeprecated()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isNative()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isSynthetic()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.sizeInBytes()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.ParameterAnnotation(byte[],IConstantPool,int)",3,2,n/a,26,2,3,12,3
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.getAnnotations()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.getAnnotationsNumber()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.sizeInBytes()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.PublicScanner()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.PublicScanner(boolean,boolean,boolean,long,char[][],char[][],boolean)",0,3,n/a,17,0,7,8,1
"org.eclipse.jdt.internal.core.util.PublicScanner.atEnd()",0,1,n/a,5,0,0,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.checkNonExternalizedString()",1,4,n/a,5,0,0,3,2
"org.eclipse.jdt.internal.core.util.PublicScanner.checkTaskTag(int,int)",13,3,n/a,111,6,2,90,38
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentIdentifierSource()",8,0,n/a,33,2,0,21,9
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenEndPosition()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenSource()",2,8,n/a,22,1,0,6,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenSourceString()",2,1,n/a,20,1,0,6,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenStartPosition()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineEnd(int)",0,1,n/a,19,0,1,9,5
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineEnds()",1,0,n/a,6,0,0,3,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineNumber(int)",0,1,n/a,28,2,1,17,7
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineStart(int)",0,0,n/a,24,0,1,9,5
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextChar()",7,0,n/a,41,3,0,21,15
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextChar(char)",7,18,n/a,64,3,1,34,18
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextChar(char,char)",7,30,n/a,71,3,2,37,20
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsDigit()",9,10,n/a,59,3,0,30,18
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsDigit(int)",9,2,n/a,59,3,1,30,18
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsJavaIdentifierPart()",9,1,n/a,59,3,0,30,18
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextToken()",96,2,n/a,641,10,0,412,211
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextUnicodeChar()",8,22,n/a,40,3,0,15,12
"org.eclipse.jdt.internal.core.util.PublicScanner.getRawTokenSource()",1,0,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getRawTokenSourceEnd()",1,0,n/a,6,0,0,4,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getSource()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.isDigit(char)",2,10,n/a,20,2,1,15,3
"org.eclipse.jdt.internal.core.util.PublicScanner.jumpOverMethodBody()",43,1,n/a,341,10,0,180,117
"org.eclipse.jdt.internal.core.util.PublicScanner.jumpOverUnicodeWhiteSpace()",8,2,n/a,34,2,0,17,12
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource1()",0,1,n/a,61,1,0,56,28
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource2()",0,1,n/a,28,1,0,20,8
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource3()",0,1,n/a,30,1,0,20,10
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource4()",0,1,n/a,37,1,0,20,12
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource5()",0,1,n/a,40,1,0,20,14
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource6()",0,1,n/a,43,1,0,20,16
"org.eclipse.jdt.internal.core.util.PublicScanner.parseTags(NLSLine)",14,1,n/a,40,3,1,30,9
"org.eclipse.jdt.internal.core.util.PublicScanner.pushLineSeparator()",2,8,n/a,51,3,0,29,14
"org.eclipse.jdt.internal.core.util.PublicScanner.pushUnicodeLineSeparator()",0,6,n/a,19,2,0,8,5
"org.eclipse.jdt.internal.core.util.PublicScanner.recordComment(int)",2,6,n/a,21,1,1,14,4
"org.eclipse.jdt.internal.core.util.PublicScanner.resetTo(int,int)",0,1,n/a,19,0,2,5,2
"org.eclipse.jdt.internal.core.util.PublicScanner.scanEscapeCharacter()",9,4,n/a,79,7,0,54,24
"org.eclipse.jdt.internal.core.util.PublicScanner.scanIdentifierOrKeyword()",1,2,n/a,557,4,0,291,328
"org.eclipse.jdt.internal.core.util.PublicScanner.scanNumber(boolean)",64,3,n/a,211,7,1,131,83
"org.eclipse.jdt.internal.core.util.PublicScanner.setSource(CompilationResult)",2,0,n/a,13,1,1,6,2
"org.eclipse.jdt.internal.core.util.PublicScanner.setSource(char[])",0,3,n/a,16,1,1,11,2
"org.eclipse.jdt.internal.core.util.PublicScanner.toString()",8,0,n/a,33,1,0,15,4
"org.eclipse.jdt.internal.core.util.PublicScanner.toStringAction(int)",14,0,n/a,210,1,1,207,104
"org.eclipse.jdt.internal.core.util.PublicScanner.unicodeInitializeBuffer(int)",2,8,n/a,9,1,1,7,3
"org.eclipse.jdt.internal.core.util.PublicScanner.unicodeStoreAt(int)",1,33,n/a,8,1,1,6,3
"org.eclipse.jdt.internal.core.util.RecordedParsingInformation.RecordedParsingInformation(IProblem[],int[],int[][])",0,1,n/a,6,0,3,4,2
"org.eclipse.jdt.internal.core.util.RecordedParsingInformation.updateRecordedParsingInformation(CompilationResult)",0,1,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptConstructorReference(char[],int,int)",0,0,n/a,6,0,3,0,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptFieldReference(char[],int)",0,0,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptMethodReference(char[],int,int)",0,0,n/a,6,0,3,0,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptTypeReference(char[],int)",0,0,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptTypeReference(char[][],int,int)",0,0,n/a,6,0,3,0,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptUnknownReference(char[],int)",0,0,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptUnknownReference(char[][],int,int)",0,0,n/a,6,0,3,0,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute.RuntimeInvisibleAnnotationsAttribute(byte[],IConstantPool,int)",4,3,n/a,27,2,3,13,3
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute.getAnnotations()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute.getAnnotationsNumber()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute.RuntimeInvisibleParameterAnnotationsAttribute(byte[],IConstantPool,int)",4,1,n/a,27,2,3,13,3
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute.getParameterAnnotations()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute.getParametersNumber()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute.RuntimeVisibleAnnotationsAttribute(byte[],IConstantPool,int)",4,3,n/a,27,2,3,13,3
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute.getAnnotations()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute.getAnnotationsNumber()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute.RuntimeVisibleParameterAnnotationsAttribute(byte[],IConstantPool,int)",4,1,n/a,27,2,3,13,3
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute.getParameterAnnotations()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute.getParametersNumber()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.SignatureAttribute.SignatureAttribute(byte[],IConstantPool,int)",6,3,n/a,10,1,3,7,2
"org.eclipse.jdt.internal.core.util.SignatureAttribute.getSignature()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.SignatureAttribute.getSignatureIndex()",0,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.SimpleDocument(String)",1,1,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addDocumentListener(IDocumentListener)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addDocumentPartitioningListener(IDocumentPartitioningListener)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPosition(Position)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPosition(String,Position)",0,0,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPositionCategory(String)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPositionUpdater(IPositionUpdater)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPrenotifiedDocumentListener(IDocumentListener)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.computeIndexInCategory(String,int)",0,0,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.computeNumberOfLines(String)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.computePartitioning(int,int)",0,0,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.containsPosition(String,int,int)",0,0,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.containsPositionCategory(String)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.get()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.get(int,int)",1,0,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getChar(int)",0,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getContentType(int)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getDocumentPartitioner()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLegalContentTypes()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLegalLineDelimiters()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLength()",1,0,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineDelimiter(int)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineInformation(int)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineInformationOfOffset(int)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineLength(int)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineOfOffset(int)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineOffset(int)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getNumberOfLines()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getNumberOfLines(int,int)",0,0,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPartition(int)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPositionCategories()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPositionUpdaters()",0,0,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPositions(String)",0,0,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.insertPositionUpdater(IPositionUpdater,int)",0,0,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removeDocumentListener(IDocumentListener)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removeDocumentPartitioningListener(IDocumentPartitioningListener)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePosition(Position)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePosition(String,Position)",0,0,n/a,6,0,2,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePositionCategory(String)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePositionUpdater(IPositionUpdater)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePrenotifiedDocumentListener(IDocumentListener)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.replace(int,int,String)",1,0,n/a,6,0,3,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.search(int,String,boolean,boolean,boolean)",0,0,n/a,13,0,5,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.set(String)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.setDocumentPartitioner(IDocumentPartitioner)",0,0,n/a,6,0,1,0,1
"org.eclipse.jdt.internal.core.util.SimpleSet.SimpleSet()",1,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.core.util.SimpleSet.SimpleSet(int)",0,9,n/a,6,0,1,5,2
"org.eclipse.jdt.internal.core.util.SimpleSet.add(Object)",3,17,n/a,13,1,1,12,5
"org.eclipse.jdt.internal.core.util.SimpleSet.clone()",2,0,n/a,9,0,0,7,1
"org.eclipse.jdt.internal.core.util.SimpleSet.includes(Object)",2,8,n/a,10,1,1,9,4
"org.eclipse.jdt.internal.core.util.SimpleSet.rehash()",2,2,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.core.util.SimpleSet.remove(Object)",3,2,n/a,17,2,1,14,6
"org.eclipse.jdt.internal.core.util.SimpleSet.toString()",1,0,n/a,8,0,0,8,3
"org.eclipse.jdt.internal.core.util.SimpleWordSet.SimpleWordSet(int)",0,3,n/a,8,0,1,6,2
"org.eclipse.jdt.internal.core.util.SimpleWordSet.add(char[])",3,3,n/a,13,1,1,12,5
"org.eclipse.jdt.internal.core.util.SimpleWordSet.includes(char[])",2,1,n/a,10,1,1,9,4
"org.eclipse.jdt.internal.core.util.SimpleWordSet.rehash()",2,1,n/a,10,0,0,9,3
"org.eclipse.jdt.internal.core.util.SourceFileAttribute.SourceFileAttribute(byte[],IConstantPool,int)",6,1,n/a,20,1,3,6,2
"org.eclipse.jdt.internal.core.util.SourceFileAttribute.getSourceFileIndex()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.SourceFileAttribute.getSourceFileName()",0,2,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.core.util.ToStringSorter.compare(String,String)",1,2,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.util.ToStringSorter.quickSort(int,int)",4,3,n/a,29,2,2,22,7
"org.eclipse.jdt.internal.core.util.ToStringSorter.sort(Object[],String[])",3,1,n/a,14,0,2,7,2
"org.eclipse.jdt.internal.core.util.Util.Comparable.compareTo(Comparable)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.eclipse.jdt.internal.core.util.Util.Comparer.compare(Object,Object)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.core.util.Util.Util()",0,0,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.core.util.Util.arrayConcat(String[],String)",1,4,n/a,46,1,2,11,4
"org.eclipse.jdt.internal.core.util.Util.bind(String)",1,391,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.Util.bind(String,String)",1,40,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.util.Util.bind(String,String,String)",1,33,n/a,7,0,3,1,1
"org.eclipse.jdt.internal.core.util.Util.bind(String,String[])",24,27,n/a,66,6,2,44,15
"org.eclipse.jdt.internal.core.util.Util.checkTypeSignature(String,int,int,boolean)",3,3,n/a,42,1,4,35,12
"org.eclipse.jdt.internal.core.util.Util.combineHashCodes(int,int)",0,7,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.util.Util.compare(byte[],byte[])",1,0,n/a,25,1,2,18,8
"org.eclipse.jdt.internal.core.util.Util.compare(char[],char[])",1,2,n/a,25,2,2,10,3
"org.eclipse.jdt.internal.core.util.Util.concat(String,String)",5,2,n/a,20,0,2,10,3
"org.eclipse.jdt.internal.core.util.Util.concat(String,String,String)",7,0,n/a,17,0,3,14,4
"org.eclipse.jdt.internal.core.util.Util.concat(String,char,String)",5,0,n/a,15,0,3,11,3
"org.eclipse.jdt.internal.core.util.Util.concatWith(String[],String,char)",7,8,n/a,48,1,3,12,6
"org.eclipse.jdt.internal.core.util.Util.concatWith(String[],char)",4,7,n/a,32,1,2,8,3
"org.eclipse.jdt.internal.core.util.Util.convertTypeSignature(char[])",2,2,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.Util.defaultJavaExtension()",0,9,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.core.util.Util.editedString(String,TextEdit)",5,1,n/a,24,1,2,9,4
"org.eclipse.jdt.internal.core.util.Util.endsWithIgnoreCase(String,String)",6,0,n/a,18,1,2,10,6
"org.eclipse.jdt.internal.core.util.Util.equalArrays(Object[],Object[],int)",1,1,n/a,17,2,3,13,8
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNull(Object[],Object[])",1,4,n/a,22,2,2,16,9
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNull(int[],int[])",0,0,n/a,22,1,2,13,7
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNullSortFirst(Comparable[],Comparable[])",3,0,n/a,24,1,2,16,8
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNullSortFirst(String[],String[])",3,0,n/a,24,1,2,16,8
"org.eclipse.jdt.internal.core.util.Util.equalOrNull(Object,Object)",1,0,n/a,16,1,2,5,4
"org.eclipse.jdt.internal.core.util.Util.equalsIgnoreJavaLikeExtension(String,String)",5,4,n/a,25,2,2,23,8
"org.eclipse.jdt.internal.core.util.Util.extractLastName(String)",2,0,n/a,9,0,1,4,2
"org.eclipse.jdt.internal.core.util.Util.extractParameterTypes(char[])",8,0,n/a,34,2,1,25,7
"org.eclipse.jdt.internal.core.util.Util.extractReturnType(String)",3,0,n/a,8,0,1,3,1
"org.eclipse.jdt.internal.core.util.Util.findFirstClassFile(IFolder)",5,2,n/a,16,3,1,11,5
"org.eclipse.jdt.internal.core.util.Util.findLineSeparator(char[])",0,2,n/a,23,3,1,14,7
"org.eclipse.jdt.internal.core.util.Util.getAttribute(IClassFileReader,char[])",3,3,n/a,9,2,2,7,3
"org.eclipse.jdt.internal.core.util.Util.getAttribute(ICodeAttribute,char[])",3,0,n/a,9,2,2,7,3
"org.eclipse.jdt.internal.core.util.Util.getAttribute(IFieldInfo,char[])",3,3,n/a,9,2,2,7,3
"org.eclipse.jdt.internal.core.util.Util.getAttribute(IMethodInfo,char[])",3,6,n/a,9,2,2,7,3
"org.eclipse.jdt.internal.core.util.Util.getJdkLevel(Object)",21,1,n/a,61,6,1,30,15
"org.eclipse.jdt.internal.core.util.Util.getLineSeparator(char[],char[])",2,1,n/a,19,2,2,6,3
"org.eclipse.jdt.internal.core.util.Util.getParameterCount(char[])",4,1,n/a,28,2,1,19,6
"org.eclipse.jdt.internal.core.util.Util.getProblemArgumentsForMarker(String[])",8,2,n/a,18,2,1,12,4
"org.eclipse.jdt.internal.core.util.Util.getProblemArgumentsFromMarker(String)",10,2,n/a,30,1,1,23,7
"org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(IFile)",6,4,n/a,22,2,1,9,4
"org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray(IFile)",2,5,n/a,14,1,1,4,2
"org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray(IFile,String)",6,1,n/a,20,2,2,9,4
"org.eclipse.jdt.internal.core.util.Util.getTrimmedSimpleNames(String)",2,3,n/a,10,1,1,6,2
"org.eclipse.jdt.internal.core.util.Util.indexOfEnclosingPath(IPath,IPath[],int)",3,1,n/a,17,3,3,12,5
"org.eclipse.jdt.internal.core.util.Util.indexOfJavaLikeExtension(String)",2,4,n/a,19,2,1,17,5
"org.eclipse.jdt.internal.core.util.Util.indexOfMatchingPath(IPath,IPath[],int)",1,3,n/a,9,1,3,6,3
"org.eclipse.jdt.internal.core.util.Util.indexOfNestedPath(IPath,IPath[],int)",2,0,n/a,10,1,3,8,4
"org.eclipse.jdt.internal.core.util.Util.isExcluded(IJavaElement)",15,13,n/a,26,1,1,19,9
"org.eclipse.jdt.internal.core.util.Util.isExcluded(IPath,char[][],char[][],boolean)",3,11,n/a,11,0,4,3,3
"org.eclipse.jdt.internal.core.util.Util.isExcluded(IResource,char[][],char[][])",3,29,n/a,10,0,3,2,1
"org.eclipse.jdt.internal.core.util.Util.isJavaLikeFileName(String)",1,13,n/a,8,0,1,3,2
"org.eclipse.jdt.internal.core.util.Util.isJavaLikeFileName(char[])",0,1,n/a,20,2,1,19,6
"org.eclipse.jdt.internal.core.util.Util.isReadOnly(IResource)",2,3,n/a,5,0,1,4,2
"org.eclipse.jdt.internal.core.util.Util.isValidClassFileName(String)",2,5,n/a,17,0,1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidCompilationUnitName(String)",2,6,n/a,17,0,1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidFolderNameForPackage(String)",2,5,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidMethodSignature(String)",5,1,n/a,21,1,1,18,7
"org.eclipse.jdt.internal.core.util.Util.isValidTypeSignature(String,boolean)",2,1,n/a,8,0,2,2,1
"org.eclipse.jdt.internal.core.util.Util.localTypeName(String,int,int)",3,5,n/a,10,0,3,4,3
"org.eclipse.jdt.internal.core.util.Util.log(Throwable,String)",5,20,n/a,17,1,2,5,3
"org.eclipse.jdt.internal.core.util.Util.normalizeCRs(String,String)",4,1,n/a,7,0,2,1,1
"org.eclipse.jdt.internal.core.util.Util.normalizeCRs(char[],char[])",11,1,n/a,59,4,2,43,10
"org.eclipse.jdt.internal.core.util.Util.packageName(IPath)",8,1,n/a,18,2,1,11,4
"org.eclipse.jdt.internal.core.util.Util.prefixLength(String,String)",5,0,n/a,10,0,2,7,3
"org.eclipse.jdt.internal.core.util.Util.prefixLength(char[],char[])",1,0,n/a,10,0,2,7,3
"org.eclipse.jdt.internal.core.util.Util.quickSort(Comparable[],int,int)",4,3,n/a,29,2,3,18,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(Object[],int,int,Comparer)",4,3,n/a,29,2,4,18,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(Object[],int,int,int[])",2,3,n/a,32,2,4,21,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(String[],int,int)",4,3,n/a,29,2,3,18,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(char[][],int,int)",4,3,n/a,26,2,3,18,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(int[],int,int)",2,3,n/a,26,2,3,18,7
"org.eclipse.jdt.internal.core.util.Util.quickSortReverse(String[],int,int)",4,3,n/a,29,2,3,18,7
"org.eclipse.jdt.internal.core.util.Util.readUTF(DataInput)",11,2,n/a,76,2,1,44,12
"org.eclipse.jdt.internal.core.util.Util.relocalize()",5,1,n/a,11,1,0,4,2
"org.eclipse.jdt.internal.core.util.Util.setReadOnly(IResource,boolean)",3,8,n/a,10,1,2,6,3
"org.eclipse.jdt.internal.core.util.Util.sort(Comparable[])",1,1,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(Object[],Comparer)",1,1,n/a,8,0,2,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(Object[],int[])",1,0,n/a,7,0,2,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(String[])",1,5,n/a,7,0,1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(char[][])",1,0,n/a,4,0,1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(int[])",1,1,n/a,4,0,1,2,2
"org.eclipse.jdt.internal.core.util.Util.sortCopy(Comparable[])",2,2,n/a,11,0,1,5,1
"org.eclipse.jdt.internal.core.util.Util.sortCopy(Object[],Comparer)",2,0,n/a,11,0,2,5,1
"org.eclipse.jdt.internal.core.util.Util.sortCopy(String[])",2,2,n/a,11,0,1,5,1
"org.eclipse.jdt.internal.core.util.Util.sortReverseOrder(String[])",1,1,n/a,8,0,1,2,2
"org.eclipse.jdt.internal.core.util.Util.splitOn(char,String,int,int)",5,6,n/a,47,2,4,19,8
"org.eclipse.jdt.internal.core.util.Util.startsWithIgnoreCase(String[],String[])",4,2,n/a,15,1,2,10,4
"org.eclipse.jdt.internal.core.util.Util.toCharArrays(String[])",1,6,n/a,11,1,1,7,2
"org.eclipse.jdt.internal.core.util.Util.toCompoundChars(String)",6,0,n/a,23,1,1,19,5
"org.eclipse.jdt.internal.core.util.Util.toString(char[])",1,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.Util.toString(char[][])",4,0,n/a,11,1,1,8,3
"org.eclipse.jdt.internal.core.util.Util.toString(char[][],char[])",6,0,n/a,13,1,2,10,3
"org.eclipse.jdt.internal.core.util.Util.typeParameterSignatures(AbstractMethodDeclaration)",1,1,n/a,17,2,1,11,3
"org.eclipse.jdt.internal.core.util.Util.typeSignature(TypeReference)",3,3,n/a,10,0,1,4,1
"org.eclipse.jdt.internal.core.util.Util.validateMethodSignature(String)",2,0,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.core.util.Util.validateTypeSignature(String,boolean)",2,0,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.core.util.Util.verbose(String)",1,62,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.core.util.Util.verbose(String,PrintStream)",8,15,n/a,11,1,2,8,3
"org.eclipse.jdt.internal.core.util.Util.writeUTF(OutputStream,char[])",10,2,n/a,53,3,2,33,12
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.CodeSnippetAllocationExpression(EvaluationContext)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.generateCode(BlockScope,CodeStream,boolean)",30,206,n/a,66,4,3,39,12
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",0,1,n/a,10,0,2,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",2,2,n/a,5,0,2,3,2
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.resolveType(BlockScope)",33,55,n/a,92,5,1,66,25
"org.eclipse.jdt.internal.eval.CodeSnippetClassFile.CodeSnippetClassFile(SourceTypeBinding,ClassFile,boolean)",22,2,n/a,94,2,3,57,11
"org.eclipse.jdt.internal.eval.CodeSnippetClassFile.createProblemType(TypeDeclaration,CompilationResult)",22,2,n/a,94,7,2,64,25
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.CodeSnippetCodeStream(ClassFile)",1,1,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.checkcast(int)",17,1,n/a,33,1,1,29,10
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulatedAccessForMethod(Scope,MethodBinding)",2,0,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulatedReadAccessForField(FieldBinding)",5,13,n/a,10,1,1,6,2
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulatedWriteAccessForField(FieldBinding)",1,9,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulationForConstructor(Scope,MethodBinding)",36,1,n/a,44,4,2,35,7
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulationForField(FieldBinding)",11,13,n/a,11,0,1,8,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateEmulationForMethod(Scope,MethodBinding)",38,2,n/a,45,4,2,36,7
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.generateObjectWrapperForType(TypeBinding)",9,3,n/a,21,1,1,10,3
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.getBaseTypeValue(int)",8,1,n/a,83,1,1,24,9
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeAccessibleObjectSetAccessible()",1,3,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeArrayNewInstance()",1,2,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeClassGetDeclaredConstructor()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeClassGetDeclaredField()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeClassGetDeclaredMethod()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeJavaLangReflectConstructorNewInstance()",1,1,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeJavaLangReflectFieldGetter(int)",1,1,n/a,52,1,1,43,10
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeJavaLangReflectFieldSetter(int)",1,1,n/a,52,1,1,43,10
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.invokeJavaLangReflectMethodInvoke()",1,2,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream.resizeByteArray()",1,1,n/a,9,1,0,5,2
"org.eclipse.jdt.internal.eval.CodeSnippetCompiler.CodeSnippetCompiler(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory,EvaluationContext,int,int)",2,1,n/a,23,0,8,3,1
"org.eclipse.jdt.internal.eval.CodeSnippetCompiler.initializeParser()",1,2,n/a,12,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.CodeSnippetEnvironment(INameEnvironment,EvaluationContext)",0,1,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.cleanup()",1,8,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.findType(char[],char[][])",3,5,n/a,10,1,2,4,2
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.findType(char[][])",10,6,n/a,33,3,1,22,7
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.isPackage(char[][],char[])",1,7,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.CodeSnippetEvaluator(char[],EvaluationContext,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,n/a,7,0,6,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.addEvaluationResultForCompilationProblem(Map,IProblem,char[])",19,1,n/a,41,1,3,30,6
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getClassName()",3,4,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getCompiler(ICompilerRequestor)",13,2,n/a,50,4,1,19,6
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getMapper()",3,4,n/a,26,3,0,10,5
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getSource()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getWrapperEnvironment()",1,1,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.CodeSnippetFieldReference(char[],long,EvaluationContext)",1,1,n/a,9,0,3,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",15,1,n/a,25,3,4,16,7
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generateCode(BlockScope,CodeStream,boolean)",18,206,n/a,52,6,3,26,11
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",33,1,n/a,76,3,6,41,11
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",35,1,n/a,77,4,4,43,17
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",17,3,n/a,43,3,3,15,20
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.resolveType(BlockScope)",21,55,n/a,52,4,1,33,11
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.CodeSnippetMessageSend(EvaluationContext)",0,1,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.generateCode(BlockScope,CodeStream,boolean)",47,206,n/a,120,4,3,67,24
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",11,1,n/a,26,3,2,10,12
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.resolveType(BlockScope)",39,55,n/a,99,5,1,66,28
"org.eclipse.jdt.internal.eval.CodeSnippetParser.CodeSnippetParser(ProblemReporter,EvaluationContext,boolean,int,int)",1,2,n/a,11,0,5,6,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.classInstanceCreation(boolean)",7,6,n/a,43,2,1,22,6
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeClassDeclaration()",2,5,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeClassHeaderName1()",7,2,n/a,45,2,0,30,5
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeEmptyStatement()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeExpressionStatement()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeFieldAccess(boolean)",6,6,n/a,24,2,1,10,3
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeInterfaceHeaderName1()",7,2,n/a,45,2,0,30,5
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeLocalVariableDeclarationStatement()",2,3,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodDeclaration(boolean)",21,5,n/a,80,3,1,50,11
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodInvocationName()",6,5,n/a,24,2,0,13,5
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodInvocationSuper()",3,4,n/a,11,0,0,8,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumePrimaryNoNewArrayThis()",4,2,n/a,11,1,0,3,4
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementBreak()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementBreakWithLabel()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementCatch()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementContinue()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementContinueWithLabel()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementDo()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementFor()",2,3,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementIfNoElse()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementIfWithElse()",2,3,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementLabel()",2,3,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementReturn()",5,3,n/a,21,1,0,6,6
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementSwitch()",2,3,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementSynchronized()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementThrow()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementTry(boolean)",2,3,n/a,5,0,1,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementWhile()",2,3,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.endParse(int)",15,4,n/a,74,4,1,53,22
"org.eclipse.jdt.internal.eval.CodeSnippetParser.getUnspecifiedReference()",5,8,n/a,32,2,0,13,4
"org.eclipse.jdt.internal.eval.CodeSnippetParser.getUnspecifiedReferenceOptimized()",5,15,n/a,45,2,0,18,4
"org.eclipse.jdt.internal.eval.CodeSnippetParser.ignoreExpressionAssignment()",2,2,n/a,5,0,0,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.isTopLevelType()",0,5,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.newMessageSend()",2,6,n/a,16,1,0,6,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.recordLastStatementIfNeeded()",1,21,n/a,8,1,0,2,3
"org.eclipse.jdt.internal.eval.CodeSnippetParser.reportSyntaxErrors(boolean,int)",1,2,n/a,8,1,2,5,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.resumeOnSyntaxError()",1,1,n/a,31,1,0,18,5
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.CodeSnippetQualifiedNameReference(char[][],long[],int,int,EvaluationContext)",1,2,n/a,10,0,5,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.checkFieldAccess(BlockScope)",1,2,n/a,9,0,1,3,1
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",12,1,n/a,23,3,4,14,6
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateCode(BlockScope,CodeStream,boolean)",21,206,n/a,42,6,3,24,11
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",33,1,n/a,77,3,6,40,11
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",38,1,n/a,66,4,4,43,16
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateReadSequence(BlockScope,CodeStream)",42,10,n/a,105,7,2,64,31
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateReceiver(CodeStream)",2,3,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.getOtherFieldBindings(BlockScope)",28,5,n/a,80,5,1,50,19
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.getReceiverType(BlockScope)",0,7,n/a,15,2,1,9,5
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.manageSyntheticAccessIfNecessary(BlockScope,FieldBinding,TypeBinding,int,FlowInfo)",22,6,n/a,53,4,5,22,23
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.reportError(BlockScope)",21,9,n/a,46,4,1,25,14
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.resolveTypeVisibility(BlockScope)",5,1,n/a,13,1,1,6,2
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.CodeSnippetReturnStatement(Expression,int,int)",1,2,n/a,3,0,3,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,14,n/a,7,0,3,3,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.generateReturnBytecode(CodeStream)",1,1,n/a,8,0,1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.generateStoreSaveValueIfNecessary(CodeStream)",10,2,n/a,28,2,1,13,7
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.isSuperAccess()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.isTypeAccess()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.needValue()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.prepareSaveValueLocation(TryStatement)",0,1,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.resolve(BlockScope)",16,13,n/a,27,3,1,17,7
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.setActualReceiverType(ReferenceBinding)",0,5,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.setDepth(int)",0,9,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.setFieldIndex(int)",0,6,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.CodeSnippetScope(BlockScope)",1,8,n/a,7,0,1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.CodeSnippetScope(BlockScope,int)",1,0,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.CodeSnippetScope(int,Scope)",1,0,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.canBeSeenByForCodeSnippet(FieldBinding,TypeBinding,InvocationSite,Scope)",12,2,n/a,57,3,4,49,23
"org.eclipse.jdt.internal.eval.CodeSnippetScope.canBeSeenByForCodeSnippet(MethodBinding,TypeBinding,InvocationSite,Scope)",12,7,n/a,63,3,4,49,24
"org.eclipse.jdt.internal.eval.CodeSnippetScope.canBeSeenByForCodeSnippet(ReferenceBinding,ReferenceBinding)",10,2,n/a,30,2,2,19,9
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findExactMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",3,5,n/a,9,1,4,5,4
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findFieldForCodeSnippet(TypeBinding,char[],InvocationSite)",22,2,n/a,93,6,3,78,30
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",22,8,n/a,110,3,4,93,32
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findMethodForArray(ArrayBinding,char[],TypeBinding[],InvocationSite)",12,1,n/a,25,1,4,18,9
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getBinding(char[][],int,InvocationSite,ReferenceBinding)",36,1,n/a,57,3,4,44,20
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getConstructor(ReferenceBinding,TypeBinding[],InvocationSite)",9,8,n/a,36,2,3,30,11
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getFieldForCodeSnippet(TypeBinding,char[],InvocationSite)",2,4,n/a,7,0,3,4,3
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getImplicitMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",21,1,n/a,92,5,4,55,30
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.CodeSnippetSingleNameReference(char[],long,EvaluationContext)",1,2,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",9,5,n/a,25,3,4,16,9
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.checkFieldAccess(BlockScope)",8,5,n/a,26,2,1,14,5
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",34,1,n/a,104,5,4,58,33
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateCode(BlockScope,CodeStream,boolean)",27,206,n/a,70,7,3,40,16
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateCompoundAssignment(BlockScope,CodeStream,MethodBinding,Expression,int,int,boolean)",49,5,n/a,133,5,7,78,32
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",57,1,n/a,113,5,4,73,27
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateReceiver(CodeStream)",2,12,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.getReceiverType(BlockScope)",0,6,n/a,17,2,1,9,5
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",10,4,n/a,36,2,3,17,14
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.reportError(BlockScope)",19,4,n/a,41,5,1,23,12
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.BinaryMethodSkeleton(char[],char[],char[][],boolean)",0,3,n/a,6,0,4,4,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getArgumentNames()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getExceptionTypeNames()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getGenericSignature()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getMethodDescriptor()",0,10,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getModifiers()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getSelector()",0,7,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getTagBits()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.isClinit()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.isConstructor()",0,11,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.CodeSnippetSkeleton()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getEnclosingTypeName()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getFields()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getFileName()",3,31,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getGenericSignature()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getInterfaceNames()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getKind()",0,19,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getMemberTypes()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getMethods()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getModifiers()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getName()",0,9,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getSuperclassName()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getTagBits()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isAnonymous()",0,4,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isBinaryType()",0,5,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isLocal()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isMember()",0,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.sourceFileName()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.CodeSnippetSuperReference(int,int,EvaluationContext)",1,2,n/a,4,0,3,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.isSuperAccess()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.isTypeAccess()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.resolveType(BlockScope)",2,56,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.setActualReceiverType(ReferenceBinding)",0,5,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.setDepth(int)",0,9,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.setFieldIndex(int)",0,6,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.CodeSnippetThisReference(int,int,EvaluationContext,boolean)",1,2,n/a,10,0,4,3,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.checkAccess(MethodScope)",4,4,n/a,13,1,1,7,4
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.generateCode(BlockScope,CodeStream,boolean)",3,206,n/a,8,1,3,5,2
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.genericTypeArguments()",0,14,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.isSuperAccess()",0,6,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.isTypeAccess()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.printExpression(int,StringBuffer)",4,62,n/a,9,0,2,6,2
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.resolveType(BlockScope)",5,55,n/a,13,1,1,12,6
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.setActualReceiverType(ReferenceBinding)",0,5,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.setDepth(int)",0,9,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.setFieldIndex(int)",0,6,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.CodeSnippetToCuMapper(char[],char[],char[][],char[],char[],char[][],char[][],int[],char[])",1,3,n/a,15,0,9,10,1
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.buildCUSource()",43,2,n/a,68,2,0,52,8
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getCUSource()",1,2,n/a,6,1,0,3,2
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getCompletionRequestor(CompletionRequestor)",29,1,n/a,6,4,1,24,11
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getEvaluationType(int)",0,1,n/a,33,2,1,16,10
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getImport(int)",0,1,n/a,7,0,1,2,1
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getSelectionRequestor(ISelectionRequestor)",15,1,n/a,3,2,1,12,1
"org.eclipse.jdt.internal.eval.CodeSnippetTypeDeclaration.CodeSnippetTypeDeclaration(CompilationResult)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetTypeDeclaration.generateCode(ClassFile)",22,3,n/a,54,3,1,36,13
"org.eclipse.jdt.internal.eval.EvaluationContext.EvaluationContext()",0,1,n/a,12,0,0,7,1
"org.eclipse.jdt.internal.eval.EvaluationContext.allVariables()",1,1,n/a,8,0,0,3,1
"org.eclipse.jdt.internal.eval.EvaluationContext.complete(char[],int,SearchableEnvironment,CompletionRequestor,Map,IJavaProject)",10,1,n/a,3,2,6,9,2
"org.eclipse.jdt.internal.eval.EvaluationContext.deleteVariable(GlobalVariable)",2,1,n/a,24,2,1,16,5
"org.eclipse.jdt.internal.eval.EvaluationContext.deployCodeSnippetClassIfNeeded(IRequestor)",3,2,n/a,3,3,1,4,2
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluate(char[],INameEnvironment,Map,IRequestor,IProblemFactory)",1,2,n/a,18,0,5,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluate(char[],char[][],char[][],int[],char[],boolean,boolean,INameEnvironment,Map,IRequestor,IProblemFactory)",17,2,n/a,6,4,11,36,8
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluateImports(INameEnvironment,IRequestor,IProblemFactory)",11,1,n/a,44,4,3,32,11
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluateVariable(GlobalVariable,INameEnvironment,Map,IRequestor,IProblemFactory)",2,1,n/a,8,0,5,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluateVariables(INameEnvironment,Map,IRequestor,IProblemFactory)",9,1,n/a,24,3,4,13,4
"org.eclipse.jdt.internal.eval.EvaluationContext.getCodeSnippetBytes()",0,1,n/a,33,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getCodeSnippetSource()",0,0,n/a,51,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getImports()",0,1,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getPackageName()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getRootCodeSnippetBinary()",1,3,n/a,9,1,0,3,2
"org.eclipse.jdt.internal.eval.EvaluationContext.newVariable(char[],char[],char[])",2,1,n/a,15,0,3,6,2
"org.eclipse.jdt.internal.eval.EvaluationContext.select(char[],int,int,SearchableEnvironment,ISelectionRequestor,Map)",10,1,n/a,3,2,6,9,2
"org.eclipse.jdt.internal.eval.EvaluationContext.setImports(char[][])",0,3,n/a,9,0,1,2,1
"org.eclipse.jdt.internal.eval.EvaluationContext.setPackageName(char[])",0,2,n/a,8,0,1,2,1
"org.eclipse.jdt.internal.eval.EvaluationResult.EvaluationResult(char[],int,IProblem[])",0,2,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.eval.EvaluationResult.EvaluationResult(char[],int,char[],char[])",0,0,n/a,7,0,4,5,1
"org.eclipse.jdt.internal.eval.EvaluationResult.addProblem(IProblem)",1,2,n/a,10,0,1,5,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getEvaluationID()",0,1,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getEvaluationType()",0,1,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getProblems()",0,1,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getValue()",0,0,n/a,14,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getValueDisplayString()",0,0,n/a,10,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getValueTypeName()",0,0,n/a,9,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.hasErrors()",1,0,n/a,15,3,0,8,4
"org.eclipse.jdt.internal.eval.EvaluationResult.hasProblems()",0,1,n/a,6,0,0,1,2
"org.eclipse.jdt.internal.eval.EvaluationResult.hasValue()",0,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.hasWarnings()",1,0,n/a,15,3,0,8,4
"org.eclipse.jdt.internal.eval.EvaluationResult.toString()",21,0,n/a,43,2,0,33,10
"org.eclipse.jdt.internal.eval.Evaluator.Evaluator(EvaluationContext,INameEnvironment,Map,IRequestor,IProblemFactory)",0,2,n/a,10,0,5,5,1
"org.eclipse.jdt.internal.eval.Evaluator.addEvaluationResultForCompilationProblem(Map,IProblem,char[])",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.eval.Evaluator.evaluationResultsForCompilationProblems(CompilationResult,char[])",7,1,n/a,21,1,2,14,3
"org.eclipse.jdt.internal.eval.Evaluator.getClassName()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.eval.Evaluator.getClasses()",22,3,n/a,3,5,0,34,7
"org.eclipse.jdt.internal.eval.Evaluator.getCompiler(ICompilerRequestor)",2,2,n/a,11,0,1,1,1
"org.eclipse.jdt.internal.eval.Evaluator.getSource()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.eclipse.jdt.internal.eval.GlobalVariable.GlobalVariable(char[],char[],char[])",0,1,n/a,9,0,3,3,1
"org.eclipse.jdt.internal.eval.GlobalVariable.getInitializer()",0,2,n/a,8,0,0,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.getName()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.getTypeName()",0,2,n/a,7,0,0,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.toString()",8,0,n/a,16,1,0,9,2
"org.eclipse.jdt.internal.eval.IRequestor.acceptClassFiles(ClassFile[],char[])",n/a,4,2,n/a,n/a,2,n/a,n/a
"org.eclipse.jdt.internal.eval.IRequestor.acceptProblem(IProblem,char[],int)",n/a,3,2,n/a,n/a,3,n/a,n/a
"org.eclipse.jdt.internal.eval.InstallException.InstallException()",1,1,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.InstallException.InstallException(String)",1,0,n/a,9,0,1,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.VariablesEvaluator(EvaluationContext,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,n/a,6,0,5,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.addEvaluationResultForCompilationProblem(Map,IProblem,char[])",30,1,n/a,88,2,3,56,16
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getClassName()",3,5,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getCompiler(ICompilerRequestor)",7,2,n/a,27,3,1,17,5
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getPackageName()",0,3,n/a,6,0,0,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getSource()",64,1,n/a,99,3,0,83,11
"org.eclipse.jdt.internal.eval.VariablesEvaluator.numberOfCRs(char[])",0,1,n/a,23,2,1,19,6
"org.eclipse.jdt.internal.eval.VariablesInfo.VariablesInfo(char[],char[],ClassFile[],GlobalVariable[],int)",0,1,n/a,12,0,5,5,1
"org.eclipse.jdt.internal.eval.VariablesInfo.indexOf(GlobalVariable)",1,0,n/a,12,2,1,6,3
"org.eclipse.jdt.internal.eval.VariablesInfo.varNamed(char[])",1,1,n/a,14,2,1,8,3
"org.eclipse.jdt.internal.formatter.AbortFormatting.AbortFormatting(String)",1,3,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.formatter.AbortFormatting.AbortFormatting(Throwable)",2,3,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.BinaryExpressionFragmentBuilder()",2,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.addRealFragment(ASTNode)",1,35,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.addSmallFragment(ASTNode)",1,7,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.buildFragments(Expression)",1,8,n/a,8,1,1,4,2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.fragments()",2,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.operators()",3,1,n/a,8,1,0,7,2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.realFragmentsSize()",0,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.size()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(AND_AND_Expression,BlockScope)",5,2,n/a,12,1,2,6,2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(AllocationExpression,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayAllocationExpression,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayInitializer,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayQualifiedTypeReference,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayQualifiedTypeReference,ClassScope)",1,3,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayReference,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayTypeReference,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ArrayTypeReference,ClassScope)",1,3,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(Assignment,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(BinaryExpression,BlockScope)",42,2,n/a,68,3,2,55,19
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(CastExpression,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(CharLiteral,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(CompoundAssignment,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ConditionalExpression,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(DoubleLiteral,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(EqualExpression,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ExtendedStringLiteral,BlockScope)",1,1,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(FalseLiteral,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(FieldReference,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(FloatLiteral,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(InstanceOfExpression,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(IntLiteral,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(LongLiteral,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(MessageSend,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(NullLiteral,BlockScope)",1,3,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(OR_OR_Expression,BlockScope)",5,2,n/a,10,1,2,6,2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(PostfixExpression,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(PrefixExpression,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(QualifiedAllocationExpression,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(QualifiedNameReference,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(QualifiedSuperReference,BlockScope)",1,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(QualifiedThisReference,BlockScope)",1,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(SingleNameReference,BlockScope)",1,2,n/a,6,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(StringLiteral,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(StringLiteralConcatenation,BlockScope)",3,1,n/a,9,2,2,7,3
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(SuperReference,BlockScope)",1,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(ThisReference,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(TrueLiteral,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder.visit(UnaryExpression,BlockScope)",1,2,n/a,4,0,2,2,1
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder.CascadingMethodInvocationFragmentBuilder()",1,1,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder.fragments()",2,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder.size()",1,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder.visit(MessageSend,BlockScope)",6,2,n/a,18,2,2,10,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.CodeFormatterVisitor(DefaultCodeFormatterOptions,Map,int,int,CodeSnippetParsingUtil)",6,4,n/a,16,2,5,11,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.MultiFieldDeclaration.MultiFieldDeclaration(FieldDeclaration[])",0,2,n/a,4,0,1,2,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.acceptProblem(IProblem)",1,3,n/a,6,0,1,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.buildFragments(BinaryExpression,BlockScope)",41,1,n/a,56,1,2,53,11
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.buildFragments(MessageSend,BlockScope)",2,1,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.checkChunkStart(int)",0,0,n/a,7,1,1,4,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.commentStartsBlock(int,int)",3,1,n/a,16,3,2,9,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.computeMergedMemberDeclarations(ASTNode[])",14,1,n/a,40,5,1,25,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.computeMergedMemberDeclarations(TypeDeclaration)",6,1,n/a,73,5,1,48,28
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.dumpBinaryExpression(BinaryExpression,int,BlockScope)",28,17,n/a,62,5,3,43,16
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.dumpEqualityExpression(BinaryExpression,int,BlockScope)",6,2,n/a,19,1,3,11,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.failedToFormat()",2,5,n/a,7,1,0,4,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(AbstractMethodDeclaration,ClassScope,boolean,boolean)",5,2,n/a,24,2,4,13,9
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(FieldDeclaration,ASTVisitor,MethodScope,boolean,boolean)",22,3,n/a,60,2,5,37,11
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(MultiFieldDeclaration,ASTVisitor,MethodScope,boolean,boolean)",29,3,n/a,86,5,5,56,17
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(String,ASTNode[])",10,1,n/a,24,1,2,14,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(String,CompilationUnitDeclaration)",11,1,n/a,24,1,2,14,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(String,ConstructorDeclaration)",15,1,n/a,35,2,2,22,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(String,Expression)",11,1,n/a,25,1,2,15,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(TypeDeclaration)",74,3,n/a,228,6,1,166,49
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(TypeDeclaration,ClassScope,boolean,boolean)",4,2,n/a,22,2,4,11,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatAnonymousTypeDeclaration(TypeDeclaration)",9,1,n/a,18,1,1,11,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatBlock(Block,BlockScope,String,boolean)",17,3,n/a,42,2,4,26,10
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder,BlockScope)",53,1,n/a,152,8,2,107,32
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatClassBodyDeclarations(ASTNode[])",22,1,n/a,64,7,1,48,17
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatEmptyTypeDeclaration(boolean)",5,2,n/a,10,1,1,6,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatEnumConstantArguments(FieldDeclaration,boolean,boolean,boolean,boolean,boolean,boolean,int)",14,1,n/a,50,5,8,28,10
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatGuardClauseBlock(Block,BlockScope)",5,1,n/a,8,0,2,6,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatLeftCurlyBrace(int,String)",3,12,n/a,11,1,2,3,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatLocalDeclaration(LocalDeclaration,BlockScope,boolean,boolean)",17,3,n/a,52,2,4,27,10
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatMessageSend(MessageSend,BlockScope,Alignment)",29,2,n/a,82,6,3,58,21
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatMethodArguments(AbstractMethodDeclaration,boolean,boolean,boolean,boolean,boolean,boolean,int)",13,2,n/a,47,5,8,26,9
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatNecessaryEmptyStatement()",7,8,n/a,12,1,0,8,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatOpeningBrace(String,boolean)",7,8,n/a,10,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatStatements(BlockScope,Statement[],boolean)",16,4,n/a,52,6,3,36,27
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatThrowsClause(AbstractMethodDeclaration,boolean,boolean,int)",12,2,n/a,40,6,4,24,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(TypeDeclaration)",25,3,n/a,73,7,1,51,20
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeOpeningBrace(String,boolean,TypeDeclaration)",4,2,n/a,23,2,3,16,10
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeOpeningBraceForEnumConstant(String,boolean,TypeDeclaration)",3,1,n/a,19,2,3,13,9
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.getDimensions()",2,9,n/a,25,3,0,18,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.hasComments()",2,5,n/a,14,2,0,8,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isClosingGenericToken()",3,12,n/a,26,3,0,19,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isGuardClause(Block)",1,1,n/a,6,0,1,1,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isMultipleLocalDeclaration(LocalDeclaration)",0,1,n/a,5,0,1,4,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isNextToken(int)",3,11,n/a,21,3,1,15,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.isPartOfMultipleLocalDeclaration()",2,1,n/a,21,3,0,14,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.manageClosingParenthesizedExpression(Expression,int)",1,48,n/a,5,1,2,4,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.manageOpeningParenthesizedExpression(Expression,int)",2,48,n/a,8,2,2,6,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(AND_AND_Expression,BlockScope)",1,2,n/a,8,0,2,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(AllocationExpression,BlockScope)",27,2,n/a,78,5,2,53,17
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(AnnotationMethodDeclaration,ClassScope)",14,1,n/a,43,2,2,25,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Argument,BlockScope)",12,2,n/a,39,2,2,20,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayAllocationExpression,BlockScope)",12,2,n/a,39,3,2,26,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayInitializer,BlockScope)",38,2,n/a,106,7,2,70,25
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayQualifiedTypeReference,BlockScope)",6,2,n/a,23,2,2,14,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayQualifiedTypeReference,ClassScope)",6,3,n/a,23,2,2,14,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayReference,BlockScope)",7,2,n/a,20,1,2,12,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayTypeReference,BlockScope)",8,2,n/a,29,3,2,18,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ArrayTypeReference,ClassScope)",8,3,n/a,29,3,2,18,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(AssertStatement,BlockScope)",8,2,n/a,18,2,2,11,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Assignment,BlockScope)",6,2,n/a,19,1,2,11,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(BinaryExpression,BlockScope)",16,2,n/a,39,1,2,33,17
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Block,BlockScope)",1,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(BreakStatement,BlockScope)",4,2,n/a,12,1,2,6,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CaseStatement,BlockScope)",6,2,n/a,15,1,2,8,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CastExpression,BlockScope)",8,2,n/a,23,1,2,14,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CharLiteral,BlockScope)",3,2,n/a,14,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ClassLiteralAccess,BlockScope)",5,2,n/a,16,1,2,9,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Clinit,ClassScope)",0,2,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CompilationUnitDeclaration,CompilationUnitScope)",24,2,n/a,77,3,2,49,12
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CompoundAssignment,BlockScope)",6,2,n/a,59,1,2,45,15
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ConditionalExpression,BlockScope)",16,2,n/a,44,3,2,26,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ConstructorDeclaration,ClassScope)",43,2,n/a,113,3,2,67,22
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ContinueStatement,BlockScope)",4,2,n/a,12,1,2,6,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(DoStatement,BlockScope)",20,2,n/a,47,3,2,29,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(DoubleLiteral,BlockScope)",5,2,n/a,18,1,2,10,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(EmptyStatement,BlockScope)",3,2,n/a,11,1,2,5,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(EqualExpression,BlockScope)",2,2,n/a,10,1,2,3,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ExplicitConstructorCall,BlockScope)",30,2,n/a,82,5,2,56,18
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(FalseLiteral,BlockScope)",3,2,n/a,14,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(FieldDeclaration,MethodScope)",17,1,n/a,54,2,2,30,13
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(FieldReference,BlockScope)",5,2,n/a,16,1,2,9,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(FloatLiteral,BlockScope)",5,2,n/a,18,1,2,10,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ForStatement,BlockScope)",28,2,n/a,82,5,2,56,19
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ForeachStatement,BlockScope)",18,1,n/a,42,2,2,27,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(IfStatement,BlockScope)",50,2,n/a,121,5,2,80,28
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ImportReference,CompilationUnitScope)",13,2,n/a,25,1,2,15,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Initializer,MethodScope)",3,2,n/a,10,1,2,4,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(InstanceOfExpression,BlockScope)",6,2,n/a,19,1,2,10,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(IntLiteral,BlockScope)",5,2,n/a,18,1,2,10,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(LabeledStatement,BlockScope)",4,2,n/a,12,1,2,6,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(LocalDeclaration,BlockScope)",1,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(LongLiteral,BlockScope)",5,2,n/a,18,1,2,10,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MarkerAnnotation,BlockScope)",3,1,n/a,8,1,2,5,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MarkerAnnotation,CompilationUnitScope)",3,1,n/a,8,1,2,5,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MemberValuePair,BlockScope)",4,1,n/a,9,1,2,6,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MemberValuePair,ClassScope)",4,0,n/a,9,1,2,6,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MemberValuePair,CompilationUnitScope)",4,1,n/a,9,1,2,6,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MessageSend,BlockScope)",13,2,n/a,40,4,2,22,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(MethodDeclaration,ClassScope)",42,2,n/a,121,3,2,71,22
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(NormalAnnotation,BlockScope)",10,1,n/a,25,3,2,20,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(NormalAnnotation,CompilationUnitScope)",10,1,n/a,25,3,2,20,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(NullLiteral,BlockScope)",3,3,n/a,14,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(OR_OR_Expression,BlockScope)",1,2,n/a,6,0,2,1,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ParameterizedQualifiedTypeReference,BlockScope)",17,1,n/a,52,4,2,41,14
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ParameterizedQualifiedTypeReference,ClassScope)",17,1,n/a,50,4,2,40,13
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ParameterizedSingleTypeReference,BlockScope)",15,1,n/a,43,3,2,33,11
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ParameterizedSingleTypeReference,ClassScope)",15,1,n/a,43,3,2,33,11
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(PostfixExpression,BlockScope)",5,2,n/a,22,1,2,11,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(PrefixExpression,BlockScope)",5,2,n/a,20,1,2,11,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedAllocationExpression,BlockScope)",31,2,n/a,89,5,2,62,19
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedNameReference,BlockScope)",3,2,n/a,16,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedSuperReference,BlockScope)",5,2,n/a,18,1,2,9,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedThisReference,BlockScope)",5,2,n/a,18,1,2,9,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedTypeReference,BlockScope)",3,2,n/a,16,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(QualifiedTypeReference,ClassScope)",3,3,n/a,16,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ReturnStatement,BlockScope)",5,2,n/a,17,1,2,8,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleMemberAnnotation,BlockScope)",7,1,n/a,14,1,2,10,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleMemberAnnotation,CompilationUnitScope)",7,1,n/a,15,1,2,10,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleNameReference,BlockScope)",3,2,n/a,14,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleTypeReference,BlockScope)",3,2,n/a,16,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SingleTypeReference,ClassScope)",3,3,n/a,16,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(StringLiteral,BlockScope)",5,2,n/a,16,1,2,9,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(StringLiteralConcatenation,BlockScope)",14,1,n/a,43,4,2,31,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SuperReference,BlockScope)",3,2,n/a,14,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SwitchStatement,BlockScope)",45,2,n/a,147,6,2,95,37
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(SynchronizedStatement,BlockScope)",7,2,n/a,18,1,2,10,2
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ThisReference,BlockScope)",4,2,n/a,16,2,2,8,4
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(ThrowStatement,BlockScope)",5,2,n/a,14,0,2,6,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TrueLiteral,BlockScope)",3,2,n/a,14,1,2,7,3
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TryStatement,BlockScope)",13,2,n/a,32,3,2,23,7
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeDeclaration,BlockScope)",1,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeDeclaration,ClassScope)",1,2,n/a,7,0,2,2,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeDeclaration,CompilationUnitScope)",1,2,n/a,9,0,2,2,1
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeParameter,BlockScope)",11,1,n/a,26,3,2,21,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(TypeParameter,ClassScope)",11,1,n/a,26,3,2,21,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(UnaryExpression,BlockScope)",5,2,n/a,35,1,2,23,8
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(WhileStatement,BlockScope)",15,2,n/a,40,3,2,23,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Wildcard,BlockScope)",8,1,n/a,20,2,2,16,5
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(Wildcard,ClassScope)",7,1,n/a,19,2,2,15,5
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter()",3,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter(DefaultCodeFormatterOptions)",1,0,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter(DefaultCodeFormatterOptions,Map)",7,3,n/a,13,1,2,8,3
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter(Map)",1,2,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(int,String,int,int,int,String)",8,8,n/a,28,1,6,15,9
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatClassBodyDeclarations(String,int,String,int,int)",4,1,n/a,8,1,5,4,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(String,int,String,int,int)",6,2,n/a,11,1,5,7,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatExpression(String,int,String,int,int)",4,1,n/a,8,1,5,4,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatStatements(String,int,String,int,int)",4,1,n/a,8,1,5,4,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.getDebugOutput()",1,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.getDefaultCompilerOptions()",60,8,n/a,68,1,0,63,3
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.internalFormatClassBodyDeclarations(String,int,String,ASTNode[],int,int)",3,2,n/a,10,1,6,6,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.internalFormatExpression(String,int,String,Expression,int,int)",3,2,n/a,11,1,6,7,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.internalFormatStatements(String,int,String,ConstructorDeclaration,int,int)",3,2,n/a,10,1,6,6,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.probeFormatting(String,int,String,int,int)",13,1,n/a,15,1,5,10,4
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.DefaultCodeFormatterOptions()",0,2,n/a,3,0,0,0,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.DefaultCodeFormatterOptions(Map)",2,3,n/a,5,0,1,4,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getAlignment(int)",1,18,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getDefaultSettings()",2,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getJavaConventionsSettings()",2,1,n/a,5,0,0,3,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getMap()",262,3,n/a,231,0,0,229,183
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.set(Map)",443,2,n/a,1.158,2,1,805,307
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.setDefaultSettings()",0,2,n/a,228,0,0,226,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.setJavaConventionsSettings()",0,1,n/a,228,0,0,226,1
"org.eclipse.jdt.internal.formatter.Location.Location(Scribe,int)",1,1,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.formatter.Location.update(Scribe,int)",1,2,n/a,12,0,2,10,1
"org.eclipse.jdt.internal.formatter.OptimizedReplaceEdit.OptimizedReplaceEdit(int,int,String)",0,6,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.formatter.OptimizedReplaceEdit.toString()",0,0,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.formatter.Scribe.Scribe(CodeFormatterVisitor,Map,int,int,CodeSnippetParsingUtil)",7,1,n/a,30,2,5,23,6
"org.eclipse.jdt.internal.formatter.Scribe.addDeleteEdit(int,int)",2,13,n/a,7,1,2,3,2
"org.eclipse.jdt.internal.formatter.Scribe.addInsertEdit(int,String)",2,7,n/a,7,1,2,3,2
"org.eclipse.jdt.internal.formatter.Scribe.addOptimizedReplaceEdit(int,int,String)",9,3,n/a,60,7,3,42,18
"org.eclipse.jdt.internal.formatter.Scribe.addReplaceEdit(int,int,String)",2,3,n/a,7,1,3,3,2
"org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Alignment,int)",2,32,n/a,5,0,2,3,1
"org.eclipse.jdt.internal.formatter.Scribe.checkNLSTag(int)",1,1,n/a,5,1,1,2,2
"org.eclipse.jdt.internal.formatter.Scribe.consumeNextToken()",6,0,n/a,9,1,0,5,2
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int)",1,12,n/a,3,0,4,1,1
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int,boolean)",1,0,n/a,3,0,5,1,1
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int,int)",1,7,n/a,3,0,5,1,1
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int,int,boolean)",1,1,n/a,3,0,6,1,1
"org.eclipse.jdt.internal.formatter.Scribe.createAlignment(String,int,int,int,int,int,boolean)",5,4,n/a,62,5,7,44,16
"org.eclipse.jdt.internal.formatter.Scribe.createMemberAlignment(String,int,int,int)",1,2,n/a,5,0,4,3,1
"org.eclipse.jdt.internal.formatter.Scribe.enterAlignment(Alignment)",0,19,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.formatter.Scribe.enterMemberAlignment(Alignment)",0,2,n/a,5,0,1,3,1
"org.eclipse.jdt.internal.formatter.Scribe.exitAlignment(Alignment,boolean)",1,19,n/a,15,1,2,11,5
"org.eclipse.jdt.internal.formatter.Scribe.exitMemberAlignment(Alignment)",1,2,n/a,13,1,1,10,4
"org.eclipse.jdt.internal.formatter.Scribe.getAlignment(String)",1,0,n/a,6,1,1,3,2
"org.eclipse.jdt.internal.formatter.Scribe.getColumnIndentationLevel()",0,2,n/a,11,1,0,3,2
"org.eclipse.jdt.internal.formatter.Scribe.getCommentIndex(int)",0,1,n/a,25,2,1,18,7
"org.eclipse.jdt.internal.formatter.Scribe.getEmptyLines(int)",5,1,n/a,38,2,1,34,8
"org.eclipse.jdt.internal.formatter.Scribe.getIndentationLevel(int)",0,0,n/a,12,1,1,5,3
"org.eclipse.jdt.internal.formatter.Scribe.getLastEdit()",0,1,n/a,6,1,0,3,2
"org.eclipse.jdt.internal.formatter.Scribe.getLineEnd(int)",0,1,n/a,9,0,1,7,4
"org.eclipse.jdt.internal.formatter.Scribe.getMemberAlignment()",0,2,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.formatter.Scribe.getNewLine()",0,1,n/a,14,1,0,10,3
"org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(int)",0,2,n/a,13,1,1,6,4
"org.eclipse.jdt.internal.formatter.Scribe.getPreserveEmptyLines(int)",3,1,n/a,11,2,1,6,3
"org.eclipse.jdt.internal.formatter.Scribe.getRootEdit()",6,4,n/a,21,2,0,15,5
"org.eclipse.jdt.internal.formatter.Scribe.handleLineTooLong()",4,1,n/a,27,2,0,16,7
"org.eclipse.jdt.internal.formatter.Scribe.hasNLSTag(int)",6,1,n/a,26,4,1,14,7
"org.eclipse.jdt.internal.formatter.Scribe.indent()",0,25,n/a,7,1,0,3,2
"org.eclipse.jdt.internal.formatter.Scribe.indexOf(char[],char[],int,int)",1,2,n/a,27,4,4,22,11
"org.eclipse.jdt.internal.formatter.Scribe.initializeScanner(char[])",2,4,n/a,9,0,1,4,1
"org.eclipse.jdt.internal.formatter.Scribe.isValidEdit(OptimizedReplaceEdit)",4,1,n/a,38,5,1,31,18
"org.eclipse.jdt.internal.formatter.Scribe.preserveEmptyLines(int,int)",3,11,n/a,10,2,2,5,3
"org.eclipse.jdt.internal.formatter.Scribe.print(char[],boolean)",5,5,n/a,17,1,2,12,5
"org.eclipse.jdt.internal.formatter.Scribe.printBlockComment(char[],boolean)",18,8,n/a,66,5,2,54,17
"org.eclipse.jdt.internal.formatter.Scribe.printComment()",47,34,n/a,107,7,0,87,31
"org.eclipse.jdt.internal.formatter.Scribe.printCommentLine(char[])",13,5,n/a,51,3,1,38,11
"org.eclipse.jdt.internal.formatter.Scribe.printEmptyLines(int)",2,23,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.printEmptyLines(int,int)",6,2,n/a,38,2,2,34,8
"org.eclipse.jdt.internal.formatter.Scribe.printEndOfCompilationUnit()",46,1,n/a,115,7,0,94,33
"org.eclipse.jdt.internal.formatter.Scribe.printIndentationIfNecessary()",7,3,n/a,17,3,0,13,5
"org.eclipse.jdt.internal.formatter.Scribe.printIndentationIfNecessary(StringBuffer)",3,1,n/a,14,3,1,10,5
"org.eclipse.jdt.internal.formatter.Scribe.printModifiers(Annotation[],ASTVisitor)",21,10,n/a,85,7,2,72,20
"org.eclipse.jdt.internal.formatter.Scribe.printNewLine()",2,69,n/a,14,1,0,10,3
"org.eclipse.jdt.internal.formatter.Scribe.printNewLine(int)",1,11,n/a,14,1,1,10,3
"org.eclipse.jdt.internal.formatter.Scribe.printNextToken(int)",1,111,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.printNextToken(int,boolean)",6,216,n/a,13,2,2,8,3
"org.eclipse.jdt.internal.formatter.Scribe.printNextToken(int[])",1,5,n/a,3,0,1,1,1
"org.eclipse.jdt.internal.formatter.Scribe.printNextToken(int[],boolean)",11,13,n/a,20,4,2,15,5
"org.eclipse.jdt.internal.formatter.Scribe.printQualifiedReference(int)",13,14,n/a,35,3,1,29,9
"org.eclipse.jdt.internal.formatter.Scribe.printRule(StringBuffer)",5,1,n/a,14,2,1,12,4
"org.eclipse.jdt.internal.formatter.Scribe.printTrailingComment()",22,76,n/a,75,7,0,58,18
"org.eclipse.jdt.internal.formatter.Scribe.redoAlignment(AlignmentException)",2,19,n/a,12,1,1,7,2
"org.eclipse.jdt.internal.formatter.Scribe.redoMemberAlignment(AlignmentException)",2,2,n/a,7,0,1,3,1
"org.eclipse.jdt.internal.formatter.Scribe.reset()",0,5,n/a,7,0,0,5,1
"org.eclipse.jdt.internal.formatter.Scribe.resetAt(Location)",0,2,n/a,14,1,1,11,2
"org.eclipse.jdt.internal.formatter.Scribe.resize()",1,3,n/a,3,0,0,1,1
"org.eclipse.jdt.internal.formatter.Scribe.setLineSeparatorAndIdentationLevel(DefaultCodeFormatterOptions)",0,1,n/a,8,1,1,4,2
"org.eclipse.jdt.internal.formatter.Scribe.space()",0,177,n/a,7,0,0,6,2
"org.eclipse.jdt.internal.formatter.Scribe.tab(StringBuffer)",2,2,n/a,13,2,1,10,3
"org.eclipse.jdt.internal.formatter.Scribe.toString()",11,1,n/a,14,0,0,4,1
"org.eclipse.jdt.internal.formatter.Scribe.unIndent()",0,36,n/a,7,1,0,3,2
"org.eclipse.jdt.internal.formatter.align.Alignment.Alignment(String,int,int,Scribe,int,int,int)",3,1,n/a,37,2,7,24,7
"org.eclipse.jdt.internal.formatter.align.Alignment.checkChunkStart(int,int,int)",2,6,n/a,13,2,3,8,3
"org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn()",2,1,n/a,32,4,0,20,10
"org.eclipse.jdt.internal.formatter.align.Alignment.couldBreak()",0,4,n/a,91,4,0,54,20
"org.eclipse.jdt.internal.formatter.align.Alignment.getAlignment(String)",2,2,n/a,5,0,1,5,3
"org.eclipse.jdt.internal.formatter.align.Alignment.performFragmentEffect()",1,1,n/a,21,2,0,14,6
"org.eclipse.jdt.internal.formatter.align.Alignment.reset()",1,1,n/a,11,1,0,5,3
"org.eclipse.jdt.internal.formatter.align.Alignment.toFragmentsString(StringBuffer)",0,0,n/a,3,0,1,0,1
"org.eclipse.jdt.internal.formatter.align.Alignment.toString()",23,0,n/a,30,1,0,11,4
"org.eclipse.jdt.internal.formatter.align.Alignment.update()",0,4,n/a,7,2,0,5,3
"org.eclipse.jdt.internal.formatter.align.AlignmentException.AlignmentException(int,int)",1,3,n/a,3,0,2,1,1
"org.eclipse.jdt.internal.formatter.align.AlignmentException.AlignmentException(int,int,int)",0,1,n/a,5,0,3,3,1
"org.eclipse.jdt.internal.formatter.align.AlignmentException.toString()",7,0,n/a,16,1,0,10,3
"org.eclipse.jdt.internal.formatter.old.CodeFormatter.CodeFormatter(Map)",1,1,n/a,7,1,1,3,2
"org.eclipse.jdt.internal.formatter.old.CodeFormatter.format(String,int,int[],String)",85,0,n/a,122,5,4,92,22

Class,CBO,CSA,CSO,CSOA,Dcy,DIT,Inner,LCOM,LOC,NCLOC,NOC,NOIC,NOOC,OCavg,Query,RFC,WMC
"org.eclipse.jdt.core.BufferChangedEvent",4,4,5,9,1,0,0,4,97,24,0,0,0,"1,00",4,5,5
"org.eclipse.jdt.core.ClasspathContainerInitializer",6,0,6,6,2,0,0,5,163,20,1,0,0,"1,20",3,6,6
"org.eclipse.jdt.core.ClasspathVariableInitializer",1,0,2,2,0,0,0,1,37,5,0,0,0,"1,00",0,2,1
"org.eclipse.jdt.core.CompletionProposal",9,35,38,73,4,1,0,9,1.173,179,0,14,0,"1,62",14,29,39
"org.eclipse.jdt.core.CompletionRequestor",17,1,7,8,2,0,0,5,143,30,3,0,0,"1,50",1,7,9
"org.eclipse.jdt.core.CompletionRequestorAdapter",2,0,28,28,2,0,1,14,193,127,0,0,0,"1,00",0,14,14
"org.eclipse.jdt.core.CorrectionEngine",20,13,6,19,20,0,1,1,354,224,0,0,0,"5,29",1,24,37
"org.eclipse.jdt.core.ElementChangedEvent",5,5,3,8,1,0,0,2,105,17,0,0,0,"1,00",2,3,3
"org.eclipse.jdt.core.Flags",24,20,20,40,1,0,0,18,372,108,0,0,0,"1,60",19,20,32
"org.eclipse.jdt.core.IBuffer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,20,n/a
"org.eclipse.jdt.core.IBufferChangedListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.core.IBufferFactory",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.core.IClassFile",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.eclipse.jdt.core.IClasspathContainer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.IClasspathEntry",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,10,n/a
"org.eclipse.jdt.core.ICodeAssist",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.eclipse.jdt.core.ICodeCompletionRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,11,n/a
"org.eclipse.jdt.core.ICodeFormatter",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.core.ICompilationUnit",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,27,n/a
"org.eclipse.jdt.core.ICompletionRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,14,n/a
"org.eclipse.jdt.core.ICorrectionRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.eclipse.jdt.core.IElementChangedListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.core.IField",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.IImportContainer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.core.IImportDeclaration",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.IInitializer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.IJavaElement",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,17,n/a
"org.eclipse.jdt.core.IJavaElementDelta",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,10,n/a
"org.eclipse.jdt.core.IJavaModel",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,10,n/a
"org.eclipse.jdt.core.IJavaModelMarker",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.IJavaModelStatus",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.IJavaModelStatusConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.IJavaProject",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,39,n/a
"org.eclipse.jdt.core.ILocalVariable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.IMember",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.eclipse.jdt.core.IMethod",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,13,n/a
"org.eclipse.jdt.core.IOpenable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,8,n/a
"org.eclipse.jdt.core.IPackageDeclaration",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.core.IPackageFragment",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,12,n/a
"org.eclipse.jdt.core.IPackageFragmentRoot",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,13,n/a
"org.eclipse.jdt.core.IParent",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.IProblemRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.IRegion",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.ISourceManipulation",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.ISourceRange",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.ISourceReference",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.IType",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,50,n/a
"org.eclipse.jdt.core.ITypeHierarchy",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,24,n/a
"org.eclipse.jdt.core.ITypeHierarchyChangedListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.core.ITypeParameter",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.IWorkingCopy",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,15,n/a
"org.eclipse.jdt.core.JavaConventions",24,2,13,15,14,0,0,4,543,216,0,0,0,"4,15",12,24,54
"org.eclipse.jdt.core.JavaCore",85,144,68,212,44,0,0,14,3.872,1.139,0,0,0,"2,75",47,134,212
"org.eclipse.jdt.core.JavaModelException",140,2,9,11,2,0,0,1,150,71,0,0,0,"1,67",4,12,15
"org.eclipse.jdt.core.NamingConventions",7,3,22,25,7,0,0,7,718,241,0,0,0,"2,09",21,34,46
"org.eclipse.jdt.core.NamingConventions.NamingRequestor",3,19,9,28,2,0,1,1,166,162,0,0,0,"3,80",1,5,19
"org.eclipse.jdt.core.Signature",44,50,76,126,2,0,0,17,2.688,1.409,0,0,0,"4,87",73,86,370
"org.eclipse.jdt.core.ToolFactory",30,0,10,10,26,0,0,7,291,117,0,0,0,"2,60",10,27,26
"org.eclipse.jdt.core.WorkingCopyOwner",41,0,2,2,4,0,0,2,51,8,3,0,0,"1,00",1,4,2
"org.eclipse.jdt.core.compiler.CharOperation",211,3,52,55,1,0,0,4,2.628,990,0,0,0,"5,35",51,52,278
"org.eclipse.jdt.core.compiler.IProblem",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,12,n/a
"org.eclipse.jdt.core.compiler.IScanner",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,12,n/a
"org.eclipse.jdt.core.compiler.ITerminalSymbols",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.compiler.InvalidInputException",29,1,2,3,0,0,0,0,19,9,0,0,0,"1,00",0,2,2
"org.eclipse.jdt.core.dom.AST",136,14,126,140,110,0,0,85,2.528,813,0,0,0,"1,44",103,275,181
"org.eclipse.jdt.core.dom.ASTConverter",208,11,157,168,206,0,0,1,4.564,4.303,0,0,0,"6,25",113,476,981
"org.eclipse.jdt.core.dom.ASTMatcher",88,1,89,90,88,0,0,9,2.253,927,0,0,0,"2,69",87,273,239
"org.eclipse.jdt.core.dom.ASTNode",148,101,60,161,93,0,0,15,2.218,703,19,0,0,"3,75",34,89,199
"org.eclipse.jdt.core.dom.ASTNode.NodeList",38,3,11,14,4,0,0,1,234,109,0,0,0,"2,18",7,21,24
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor",2,1,4,5,1,0,0,2,48,19,0,0,0,"1,25",2,4,5
"org.eclipse.jdt.core.dom.ASTParser",44,18,20,38,44,0,0,2,900,374,0,0,0,"3,45",4,73,69
"org.eclipse.jdt.core.dom.ASTRequestor",6,1,4,5,5,0,0,3,99,20,0,0,0,"1,50",1,5,6
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator",12,2,178,180,10,1,0,1,90,67,0,162,6,"1,75",7,16,14
"org.eclipse.jdt.core.dom.ASTVisitor",89,1,170,171,84,0,0,168,2.346,428,5,0,0,"1,00",83,170,170
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration",22,13,80,93,13,2,0,10,225,68,3,50,1,"1,23",14,27,16
"org.eclipse.jdt.core.dom.Annotation",14,9,68,77,10,2,1,8,149,53,3,44,0,"1,27",10,19,14
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration",20,18,95,113,14,3,0,9,237,113,0,57,3,"1,53",15,51,26
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration",21,20,85,105,16,2,0,6,380,188,0,48,3,"2,05",16,58,43
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration",18,11,64,75,9,1,0,5,157,62,0,42,1,"1,17",10,30,14
"org.eclipse.jdt.core.dom.ArrayAccess",13,13,68,81,7,2,0,4,232,116,0,43,1,"1,93",10,34,27
"org.eclipse.jdt.core.dom.ArrayCreation",17,15,70,85,11,2,0,4,278,123,0,42,2,"1,69",12,45,27
"org.eclipse.jdt.core.dom.ArrayInitializer",14,11,65,76,7,2,0,4,127,56,0,43,1,"1,18",9,27,13
"org.eclipse.jdt.core.dom.ArrayType",15,11,74,85,7,2,0,4,204,96,0,49,1,"1,64",11,35,23
"org.eclipse.jdt.core.dom.AssertStatement",13,14,71,85,8,2,0,4,222,107,0,45,2,"1,71",10,36,24
"org.eclipse.jdt.core.dom.Assignment",15,15,71,86,9,2,0,4,277,143,0,42,2,"1,94",12,41,33
"org.eclipse.jdt.core.dom.Assignment.Operator",4,14,3,17,1,0,0,1,111,48,0,0,0,"1,33",2,3,4
"org.eclipse.jdt.core.dom.BindingComparator",16,0,10,10,13,0,0,1,244,211,0,0,0,"5,10",10,25,51
"org.eclipse.jdt.core.dom.BindingKey",30,5,19,24,30,0,0,1,364,284,0,0,0,"4,84",17,56,92
"org.eclipse.jdt.core.dom.BindingKeyScanner",4,13,13,26,2,0,0,1,242,236,0,0,0,"4,31",10,14,56
"org.eclipse.jdt.core.dom.BindingResolver",44,0,35,35,35,0,0,34,674,103,1,0,0,"1,00",31,35,35
"org.eclipse.jdt.core.dom.Block",26,12,68,80,7,2,0,4,136,58,0,45,2,"1,18",9,29,13
"org.eclipse.jdt.core.dom.BlockComment",8,10,68,78,5,2,0,6,102,38,0,48,1,"1,00",7,19,9
"org.eclipse.jdt.core.dom.BodyDeclaration",31,11,67,78,10,1,0,7,237,71,6,43,0,"1,50",12,28,18
"org.eclipse.jdt.core.dom.BooleanLiteral",12,11,66,77,6,2,0,6,143,62,0,43,1,"1,17",9,26,14
"org.eclipse.jdt.core.dom.BreakStatement",12,12,69,81,7,2,0,4,153,69,0,45,2,"1,33",9,31,16
"org.eclipse.jdt.core.dom.CastExpression",15,13,68,81,9,2,0,4,227,116,0,43,1,"1,93",10,35,27
"org.eclipse.jdt.core.dom.CatchClause",13,13,66,79,7,1,0,4,229,117,0,42,1,"1,93",10,37,27
"org.eclipse.jdt.core.dom.CharacterLiteral",16,11,68,79,10,2,0,5,327,213,0,43,1,"4,29",10,32,60
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor",40,4,10,14,1,1,0,2,80,18,0,6,0,"1,33",2,4,4
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor",73,5,11,16,2,1,0,3,93,23,0,6,0,"1,25",3,5,5
"org.eclipse.jdt.core.dom.ClassInstanceCreation",21,22,76,98,15,2,0,3,512,229,0,42,2,"2,36",16,55,52
"org.eclipse.jdt.core.dom.Comment",8,9,59,68,5,1,0,5,109,25,3,43,0,"1,00",5,9,7
"org.eclipse.jdt.core.dom.CompilationUnit",35,23,82,105,18,1,0,7,766,246,0,41,2,"1,97",22,70,59
"org.eclipse.jdt.core.dom.CompilationUnitResolver",62,11,38,49,61,1,2,2,609,486,0,7,6,"3,91",9,88,90
"org.eclipse.jdt.core.dom.ConditionalExpression",13,15,70,85,7,2,0,4,292,154,0,43,1,"2,19",11,36,35
"org.eclipse.jdt.core.dom.ConstructorInvocation",17,15,70,85,11,2,0,4,218,94,0,45,2,"1,77",11,33,23
"org.eclipse.jdt.core.dom.ContinueStatement",12,12,69,81,7,2,0,4,153,69,0,45,2,"1,33",9,31,16
"org.eclipse.jdt.core.dom.DefaultASTVisitor",73,1,311,312,71,1,0,2,437,428,1,30,138,"1,01",70,143,142
"org.eclipse.jdt.core.dom.DefaultBindingResolver",120,9,72,81,118,1,0,2,1.103,936,0,0,34,"6,81",32,89,252
"org.eclipse.jdt.core.dom.DefaultBindingResolver.BindingTables",4,2,1,3,0,0,0,0,19,8,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper",11,10,12,22,10,0,0,1,497,347,0,0,0,"7,17",10,22,86
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor",4,2,314,316,4,2,0,2,43,32,0,304,3,"1,67",2,8,5
"org.eclipse.jdt.core.dom.DoStatement",14,14,71,85,9,2,0,4,236,117,0,45,2,"1,93",10,37,27
"org.eclipse.jdt.core.dom.DocCommentParser",20,39,54,93,19,1,0,1,665,570,0,12,2,"5,78",12,62,104
"org.eclipse.jdt.core.dom.EmptyStatement",11,10,65,75,5,2,0,6,88,36,0,47,0,"1,00",6,19,8
"org.eclipse.jdt.core.dom.EnhancedForStatement",15,16,74,90,11,2,0,5,303,158,0,45,2,"2,12",12,44,36
"org.eclipse.jdt.core.dom.EnumConstantDeclaration",22,22,87,109,15,2,0,5,411,205,0,47,4,"1,96",18,64,45
"org.eclipse.jdt.core.dom.EnumDeclaration",21,22,97,119,16,3,0,7,297,143,0,57,3,"1,58",17,55,30
"org.eclipse.jdt.core.dom.Expression",56,8,54,62,4,1,0,1,63,8,26,43,0,"1,00",1,5,2
"org.eclipse.jdt.core.dom.ExpressionStatement",13,12,69,81,8,2,0,4,170,81,0,45,2,"1,58",9,34,19
"org.eclipse.jdt.core.dom.FieldAccess",15,13,69,82,9,2,0,4,273,119,0,43,1,"1,87",11,38,28
"org.eclipse.jdt.core.dom.FieldDeclaration",24,20,83,103,13,2,0,4,339,177,0,46,5,"2,11",15,59,40
"org.eclipse.jdt.core.dom.ForStatement",15,18,74,92,10,2,0,4,315,138,0,44,3,"1,71",13,45,29
"org.eclipse.jdt.core.dom.IBinding",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,10,n/a
"org.eclipse.jdt.core.dom.IDocElement",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.dom.IExtendedModifier",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.dom.IMethodBinding",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,15,n/a
"org.eclipse.jdt.core.dom.IPackageBinding",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.dom.ITypeBinding",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,41,n/a
"org.eclipse.jdt.core.dom.IVariableBinding",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.eclipse.jdt.core.dom.IfStatement",14,16,73,89,9,2,0,4,305,143,0,45,2,"2,00",11,40,32
"org.eclipse.jdt.core.dom.ImportDeclaration",18,16,70,86,10,1,0,4,332,143,0,41,2,"1,72",13,46,31
"org.eclipse.jdt.core.dom.InfixExpression",17,17,74,91,11,2,0,4,343,171,0,41,3,"2,05",15,51,41
"org.eclipse.jdt.core.dom.InfixExpression.Operator",4,21,3,24,1,0,0,1,137,60,0,0,0,"1,33",2,3,4
"org.eclipse.jdt.core.dom.Initializer",19,18,81,99,11,2,0,5,269,147,0,47,4,"2,06",14,53,35
"org.eclipse.jdt.core.dom.InstanceofExpression",15,13,68,81,9,2,0,4,225,116,0,43,1,"1,93",10,35,27
"org.eclipse.jdt.core.dom.InternalASTRewrite",13,5,26,31,12,1,0,1,156,137,0,2,8,"2,13",5,38,32
"org.eclipse.jdt.core.dom.Javadoc",29,16,73,89,13,2,0,3,275,126,0,46,3,"1,93",11,40,27
"org.eclipse.jdt.core.dom.LabeledStatement",13,14,71,85,8,2,0,4,237,118,0,45,2,"1,93",10,37,27
"org.eclipse.jdt.core.dom.LineComment",8,10,68,78,5,2,0,6,99,38,0,48,1,"1,00",7,19,9
"org.eclipse.jdt.core.dom.MarkerAnnotation",11,11,78,89,7,3,1,7,139,62,0,51,2,"1,36",9,30,15
"org.eclipse.jdt.core.dom.MemberRef",17,13,67,80,10,1,1,4,233,107,0,42,1,"1,67",11,38,25
"org.eclipse.jdt.core.dom.MemberValuePair",12,13,66,79,7,1,0,4,235,117,0,42,1,"1,93",10,36,27
"org.eclipse.jdt.core.dom.Message",1,3,6,9,0,0,0,3,112,43,0,0,0,"1,83",4,6,11
"org.eclipse.jdt.core.dom.MethodBinding",35,12,51,63,35,0,2,2,366,281,0,0,0,"2,77",24,72,72
"org.eclipse.jdt.core.dom.MethodDeclaration",32,34,98,132,19,2,0,3,843,381,0,45,6,"2,38",25,87,81
"org.eclipse.jdt.core.dom.MethodInvocation",19,18,72,90,12,2,0,4,342,159,0,42,2,"2,06",14,49,37
"org.eclipse.jdt.core.dom.MethodRef",20,15,69,84,13,1,1,4,273,125,0,41,2,"1,65",13,46,28
"org.eclipse.jdt.core.dom.MethodRefParameter",15,13,66,79,8,1,0,4,215,104,0,42,1,"1,71",10,35,24
"org.eclipse.jdt.core.dom.Modifier",19,23,79,102,7,1,1,19,385,117,0,42,1,"1,12",22,40,28
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword",10,14,5,19,2,0,0,1,131,57,0,0,0,"1,60",4,5,8
"org.eclipse.jdt.core.dom.NaiveASTFlattener",99,3,259,262,99,1,0,3,1.495,1.162,0,85,83,"3,07",84,292,273
"org.eclipse.jdt.core.dom.Name",33,10,60,70,8,2,1,3,97,26,2,44,0,"1,20",4,10,6
"org.eclipse.jdt.core.dom.NodeEventHandler",5,0,11,11,3,0,0,10,164,24,1,0,0,"1,00",0,11,11
"org.eclipse.jdt.core.dom.NodeSearcher",14,3,210,213,12,1,0,1,66,66,0,197,6,"1,86",6,7,13
"org.eclipse.jdt.core.dom.NormalAnnotation",14,13,80,93,10,3,1,5,177,79,0,50,3,"1,38",11,38,18
"org.eclipse.jdt.core.dom.NullLiteral",11,9,63,72,5,2,0,6,88,38,0,44,0,"1,00",7,18,9
"org.eclipse.jdt.core.dom.NumberLiteral",16,11,66,77,10,2,0,5,176,101,0,43,1,"1,67",9,30,20
"org.eclipse.jdt.core.dom.PackageBinding",11,6,26,32,10,0,2,5,124,84,0,0,0,"1,77",11,17,23
"org.eclipse.jdt.core.dom.PackageDeclaration",21,16,69,85,13,1,0,4,318,148,0,41,2,"2,12",13,48,36
"org.eclipse.jdt.core.dom.ParameterizedType",14,13,74,87,9,2,0,4,215,99,0,48,2,"1,57",11,41,22
"org.eclipse.jdt.core.dom.ParenthesizedExpression",13,11,66,77,7,2,0,4,166,80,0,43,1,"1,58",9,32,19
"org.eclipse.jdt.core.dom.PostfixExpression",15,13,69,82,9,2,0,4,214,108,0,42,2,"1,67",11,39,25
"org.eclipse.jdt.core.dom.PostfixExpression.Operator",4,4,3,7,1,0,0,1,68,25,0,0,0,"1,33",2,3,4
"org.eclipse.jdt.core.dom.PrefixExpression",15,13,69,82,9,2,0,4,215,108,0,42,2,"1,67",11,39,25
"org.eclipse.jdt.core.dom.PrefixExpression.Operator",4,8,3,11,1,0,0,1,84,33,0,0,0,"1,33",2,3,4
"org.eclipse.jdt.core.dom.PrimitiveType",27,21,73,94,8,2,0,7,218,95,0,49,1,"1,31",10,29,17
"org.eclipse.jdt.core.dom.PrimitiveType.Code",6,1,2,3,0,0,0,0,40,9,0,0,0,"1,00",1,2,2
"org.eclipse.jdt.core.dom.QualifiedName",13,14,75,89,7,3,1,4,241,121,0,47,1,"1,87",10,38,28
"org.eclipse.jdt.core.dom.QualifiedType",13,13,74,87,8,2,0,4,246,117,0,49,1,"1,93",10,37,27
"org.eclipse.jdt.core.dom.ReturnStatement",12,12,69,81,7,2,0,4,152,70,0,45,2,"1,33",9,31,16
"org.eclipse.jdt.core.dom.SimpleName",66,13,74,87,20,3,1,6,251,124,0,47,1,"2,14",10,35,30
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor",35,4,10,14,2,1,0,2,65,18,0,6,0,"1,33",2,4,4
"org.eclipse.jdt.core.dom.SimpleType",19,11,72,83,8,2,0,4,164,80,0,49,1,"1,58",9,32,19
"org.eclipse.jdt.core.dom.SingleMemberAnnotation",13,13,80,93,9,3,1,4,202,98,0,51,2,"1,77",10,38,23
"org.eclipse.jdt.core.dom.SingleVariableDeclaration",27,24,95,119,16,2,0,3,565,279,0,43,4,"2,21",21,67,64
"org.eclipse.jdt.core.dom.Statement",32,9,57,66,6,1,0,1,186,49,22,43,0,"2,20",2,11,11
"org.eclipse.jdt.core.dom.StringLiteral",16,11,68,79,10,2,0,5,294,168,0,43,1,"2,93",10,33,41
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor",18,2,7,9,3,0,0,5,121,48,3,0,0,"1,86",6,7,13
"org.eclipse.jdt.core.dom.SuperConstructorInvocation",18,17,73,90,12,2,0,4,279,122,0,44,3,"1,81",13,43,29
"org.eclipse.jdt.core.dom.SuperFieldAccess",16,13,69,82,10,2,0,4,238,107,0,43,1,"1,67",11,38,25
"org.eclipse.jdt.core.dom.SuperMethodInvocation",19,18,72,90,13,2,0,4,340,158,0,42,2,"2,06",14,49,37
"org.eclipse.jdt.core.dom.SwitchCase",13,13,70,83,8,2,0,4,187,85,0,45,2,"1,46",10,35,19
"org.eclipse.jdt.core.dom.SwitchStatement",15,14,71,85,10,2,0,4,213,98,0,44,3,"1,57",11,42,22
"org.eclipse.jdt.core.dom.SynchronizedStatement",14,14,71,85,9,2,0,4,228,117,0,45,2,"1,93",10,38,27
"org.eclipse.jdt.core.dom.TagElement",15,32,67,99,8,1,1,5,343,103,0,41,2,"1,27",12,37,19
"org.eclipse.jdt.core.dom.TextElement",11,12,64,76,6,1,1,5,166,73,0,42,1,"1,42",9,27,17
"org.eclipse.jdt.core.dom.ThisExpression",13,11,66,77,7,2,0,4,155,68,0,43,1,"1,33",9,29,16
"org.eclipse.jdt.core.dom.ThrowStatement",13,12,69,81,8,2,0,4,167,81,0,45,2,"1,58",9,34,19
"org.eclipse.jdt.core.dom.TryStatement",16,16,73,89,10,2,0,4,257,124,0,44,3,"1,69",12,45,27
"org.eclipse.jdt.core.dom.Type",36,8,60,68,10,1,0,7,150,26,6,43,0,"1,00",7,11,8
"org.eclipse.jdt.core.dom.TypeBinding",40,8,104,112,39,0,2,4,836,632,0,0,0,"3,07",52,123,166
"org.eclipse.jdt.core.dom.TypeDeclaration",29,32,110,142,19,3,0,7,747,356,0,54,6,"2,59",26,82,83
"org.eclipse.jdt.core.dom.TypeDeclarationStatement",15,14,72,86,10,2,0,4,276,120,0,45,2,"1,80",11,39,27
"org.eclipse.jdt.core.dom.TypeLiteral",14,11,66,77,8,2,0,4,165,80,0,43,1,"1,58",9,32,19
"org.eclipse.jdt.core.dom.TypeParameter",18,13,67,80,11,1,0,4,228,102,0,41,2,"1,53",12,44,23
"org.eclipse.jdt.core.dom.VariableBinding",25,7,33,40,25,0,2,2,239,184,0,0,0,"3,50",15,51,56
"org.eclipse.jdt.core.dom.VariableDeclaration",13,8,66,74,8,1,0,10,169,26,2,43,0,"1,00",10,17,5
"org.eclipse.jdt.core.dom.VariableDeclarationExpression",22,18,72,90,15,2,0,3,381,170,0,41,3,"2,17",14,52,39
"org.eclipse.jdt.core.dom.VariableDeclarationFragment",19,15,86,101,9,2,0,4,289,141,0,45,2,"1,65",15,46,33
"org.eclipse.jdt.core.dom.VariableDeclarationStatement",22,19,75,94,15,2,0,3,378,171,0,43,4,"2,17",14,54,39
"org.eclipse.jdt.core.dom.WhileStatement",14,14,71,85,9,2,0,4,237,117,0,45,2,"1,93",10,37,27
"org.eclipse.jdt.core.dom.WildcardType",12,13,76,89,7,2,0,4,247,96,0,48,2,"1,38",11,38,22
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite",15,3,21,24,15,0,0,2,445,193,0,0,0,"2,43",14,53,51
"org.eclipse.jdt.core.dom.rewrite.ITrackedNodePosition",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.dom.rewrite.ListRewrite",10,3,17,20,10,0,0,1,287,115,0,0,0,"1,94",8,33,33
"org.eclipse.jdt.core.eval.ICodeSnippetRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.eval.IEvaluationContext",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,19,n/a
"org.eclipse.jdt.core.eval.IGlobalVariable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.formatter.CodeFormatter",6,5,1,6,0,0,0,1,50,8,1,0,0,n/a,1,1,0
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants",7,243,9,252,3,0,0,3,3.129,416,0,0,0,"4,78",9,12,43
"org.eclipse.jdt.core.jdom.DOMException",4,1,2,3,0,0,0,0,27,8,0,0,0,"1,00",0,2,2
"org.eclipse.jdt.core.jdom.DOMFactory",23,0,35,35,11,0,1,8,144,79,0,0,0,"1,44",17,28,26
"org.eclipse.jdt.core.jdom.IDOMCompilationUnit",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.jdom.IDOMFactory",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,17,n/a
"org.eclipse.jdt.core.jdom.IDOMField",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.eclipse.jdt.core.jdom.IDOMImport",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.eclipse.jdt.core.jdom.IDOMInitializer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.jdom.IDOMMember",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.jdom.IDOMMethod",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,19,n/a
"org.eclipse.jdt.core.jdom.IDOMNode",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,19,n/a
"org.eclipse.jdt.core.jdom.IDOMPackage",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.jdom.IDOMType",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,15,n/a
"org.eclipse.jdt.core.search.FieldDeclarationMatch",5,7,17,24,3,1,0,0,24,5,0,15,0,"1,00",0,2,1
"org.eclipse.jdt.core.search.FieldReferenceMatch",4,9,19,28,3,1,0,2,51,16,0,15,0,"1,00",2,5,3
"org.eclipse.jdt.core.search.IJavaSearchConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.search.IJavaSearchResultCollector",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.search.IJavaSearchScope",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.eclipse.jdt.core.search.ISearchPattern",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.search.ITypeNameRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.search.LocalVariableDeclarationMatch",4,7,17,24,3,1,0,0,24,5,0,15,0,"1,00",0,2,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch",4,9,19,28,3,1,0,2,51,16,0,15,0,"1,00",2,5,3
"org.eclipse.jdt.core.search.MethodDeclarationMatch",5,7,17,24,3,1,0,0,24,5,0,15,0,"1,00",0,2,1
"org.eclipse.jdt.core.search.MethodReferenceMatch",4,9,20,29,3,1,0,2,71,19,0,15,0,"1,00",2,6,4
"org.eclipse.jdt.core.search.PackageDeclarationMatch",4,7,17,24,3,1,0,0,24,5,0,15,0,"1,00",0,2,1
"org.eclipse.jdt.core.search.PackageReferenceMatch",4,7,17,24,3,1,0,0,27,6,0,15,0,"1,00",0,3,1
"org.eclipse.jdt.core.search.SearchDocument",13,3,11,14,2,1,0,7,109,23,1,0,3,"1,00",5,10,5
"org.eclipse.jdt.core.search.SearchEngine",29,1,27,28,22,0,0,7,803,154,0,0,0,"1,26",11,55,34
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter",5,1,9,10,4,1,0,1,34,21,0,2,2,"1,00",0,12,4
"org.eclipse.jdt.core.search.SearchEngine.SearchPatternAdapter",3,1,1,2,2,0,1,0,10,6,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.core.search.SearchMatch",27,9,16,25,3,0,0,7,201,83,10,0,0,"1,12",8,17,18
"org.eclipse.jdt.core.search.SearchParticipant",34,0,9,9,6,0,0,8,172,25,1,0,0,"1,20",3,14,6
"org.eclipse.jdt.core.search.SearchPattern",60,9,25,34,33,1,0,7,1.359,1.069,2,5,0,"10,58",18,72,201
"org.eclipse.jdt.core.search.SearchRequestor",7,0,5,5,2,0,0,5,76,11,1,0,0,"1,00",0,5,4
"org.eclipse.jdt.core.search.TypeDeclarationMatch",5,7,17,24,3,1,0,0,24,5,0,15,0,"1,00",0,2,1
"org.eclipse.jdt.core.search.TypeReferenceMatch",4,7,17,24,3,1,0,0,27,6,0,15,0,"1,00",0,3,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter",2,0,410,410,2,0,1,205,1.270,444,0,0,0,"1,00",0,205,205
"org.eclipse.jdt.core.util.ClassFileBytesDisassembler",3,3,3,6,1,0,0,3,54,8,1,0,0,n/a,3,3,0
"org.eclipse.jdt.core.util.ClassFormatException",31,9,2,11,0,0,0,0,37,16,0,0,0,"1,00",0,2,2
"org.eclipse.jdt.core.util.CompilationUnitSorter",11,1,2,3,4,0,0,1,153,17,0,0,0,"1,50",0,4,3
"org.eclipse.jdt.core.util.IAnnotation",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.util.IAnnotationComponent",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.util.IAnnotationComponentValue",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,13,n/a
"org.eclipse.jdt.core.util.IAnnotationDefaultAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.core.util.IAttributeNamesConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.util.IBytecodeVisitor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,205,n/a
"org.eclipse.jdt.core.util.IClassFileAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.util.IClassFileDisassembler",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.IClassFileReader",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,21,n/a
"org.eclipse.jdt.core.util.ICodeAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,11,n/a
"org.eclipse.jdt.core.util.IConstantPool",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.util.IConstantPoolConstant",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.util.IConstantPoolEntry",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,20,n/a
"org.eclipse.jdt.core.util.IConstantValueAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.IEnclosingMethodAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.eclipse.jdt.core.util.IExceptionAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.core.util.IExceptionTableEntry",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.eclipse.jdt.core.util.IFieldInfo",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,11,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.IInnerClassesAttributeEntry",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.eclipse.jdt.core.util.ILineNumberAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.ILocalVariableAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.ILocalVariableTableEntry",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.eclipse.jdt.core.util.IMethodInfo",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,13,n/a
"org.eclipse.jdt.core.util.IModifierConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.util.IOpcodeMnemonics",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.core.util.IParameterAnnotation",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.ISignatureAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.ISourceAttribute",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.core.util.IVerificationTypeInfo",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.core.util.OpcodeStringValues",2,1,0,1,1,0,1,0,217,209,0,0,0,n/a,0,0,0
"org.eclipse.jdt.internal.compiler.ASTVisitor",112,0,203,203,92,0,0,203,790,607,13,0,0,"1,00",101,203,203
"org.eclipse.jdt.internal.compiler.ClassFile",74,20,59,79,59,0,6,3,3.553,2.811,2,0,0,"7,27",14,168,429
"org.eclipse.jdt.internal.compiler.CompilationResult",63,17,22,39,9,0,0,4,342,308,0,0,0,"4,05",15,32,89
"org.eclipse.jdt.internal.compiler.Compiler",39,10,18,28,28,0,2,1,540,365,4,0,0,"3,65",2,51,62
"org.eclipse.jdt.internal.compiler.ConfigurableOption",1,10,12,22,1,0,0,9,201,131,0,0,0,"1,58",10,12,19
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies",14,0,4,4,1,0,0,4,62,42,0,0,0,"1,00",4,4,12
"org.eclipse.jdt.internal.compiler.DocumentElementParser",38,82,430,512,37,1,7,2,1.337,1.060,0,329,43,"2,35",8,145,134
"org.eclipse.jdt.internal.compiler.ICompilerRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.compiler.IDebugRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.eclipse.jdt.internal.compiler.IDocumentElementRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,17,n/a
"org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.internal.compiler.IProblemFactory",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,27,n/a
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.FieldInfo",8,7,0,7,0,0,0,0,9,9,0,0,0,n/a,0,0,0
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.MethodInfo",10,13,0,13,1,0,0,0,15,15,0,0,0,n/a,0,0,0
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.TypeInfo",9,10,0,10,1,0,0,0,12,12,0,0,0,n/a,0,0,0
"org.eclipse.jdt.internal.compiler.ISourceElementRequestor.TypeParameterInfo",5,7,0,7,0,0,0,0,9,9,0,0,0,n/a,0,0,0
"org.eclipse.jdt.internal.compiler.SourceElementParser",79,85,435,520,74,2,7,1,1.420,1.261,0,356,26,"5,77",9,147,277
"org.eclipse.jdt.internal.compiler.SourceElementParser.LocalDeclarationVisitor",5,1,208,209,5,1,0,1,29,26,0,201,2,"1,60",3,6,8
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter",7,0,54,54,5,0,1,27,172,76,2,0,0,"1,00",0,27,27
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression",19,11,92,103,13,5,7,2,232,202,0,62,5,"6,33",2,41,38
"org.eclipse.jdt.internal.compiler.ast.ASTNode",226,95,19,114,27,0,6,11,325,279,6,0,0,"4,17",15,62,75
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration",94,22,47,69,41,1,8,11,348,314,3,12,0,"2,93",15,73,79
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration",74,19,43,62,11,2,7,9,86,62,3,19,0,"1,67",6,15,15
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression",54,14,84,98,29,3,7,5,278,242,3,46,4,"4,27",7,63,64
"org.eclipse.jdt.internal.compiler.ast.Annotation",46,10,69,79,24,3,6,3,269,253,3,47,1,"16,80",6,27,84
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration",30,26,63,89,23,3,8,4,130,124,0,34,7,"4,38",3,42,35
"org.eclipse.jdt.internal.compiler.ast.Argument",45,15,58,73,17,4,7,2,108,99,2,29,4,"3,25",5,39,26
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression",25,9,67,76,16,3,6,1,147,123,0,46,4,"6,17",3,38,37
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer",33,8,67,75,17,3,6,1,183,168,0,46,4,"7,67",3,44,46
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference",23,9,96,105,13,5,6,3,63,60,2,63,6,"1,86",4,20,13
"org.eclipse.jdt.internal.compiler.ast.ArrayReference",28,8,80,88,19,4,6,1,174,166,0,49,4,"2,70",4,39,27
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference",24,9,96,105,10,5,6,3,61,52,2,63,6,"1,86",4,18,13
"org.eclipse.jdt.internal.compiler.ast.AssertStatement",30,7,33,40,27,2,6,1,149,142,0,18,1,"3,75",2,51,30
"org.eclipse.jdt.internal.compiler.ast.Assignment",43,8,76,84,25,3,6,1,183,163,1,41,8,"2,73",10,56,41
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression",33,9,86,95,21,4,7,2,1.717,1.549,3,44,9,"16,95",5,118,339
"org.eclipse.jdt.internal.compiler.ast.Block",27,6,35,41,10,2,6,1,106,97,0,16,3,"3,00",4,25,30
"org.eclipse.jdt.internal.compiler.ast.BranchStatement",12,6,28,34,7,2,6,2,44,33,2,19,0,"2,33",0,9,7
"org.eclipse.jdt.internal.compiler.ast.BreakStatement",12,6,32,38,9,3,6,2,66,61,0,20,1,"3,75",2,20,15
"org.eclipse.jdt.internal.compiler.ast.CaseStatement",22,6,32,38,18,2,6,2,100,85,0,17,2,"3,00",3,28,21
"org.eclipse.jdt.internal.compiler.ast.CastExpression",47,9,81,90,27,3,6,1,372,296,0,39,11,"3,61",8,64,101
"org.eclipse.jdt.internal.compiler.ast.CharLiteral",16,8,78,86,9,5,6,3,80,67,0,53,2,"3,17",1,12,19
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess",28,9,67,76,20,3,6,1,74,63,1,46,4,"2,17",3,28,13
"org.eclipse.jdt.internal.compiler.ast.Clinit",31,24,59,83,29,2,8,7,242,199,0,30,7,"3,00",4,61,36
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration",73,16,37,53,21,1,8,1,262,226,0,12,0,"3,47",7,46,66
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment",35,10,85,95,18,4,7,2,147,129,2,53,6,"4,33",6,29,39
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression",29,15,74,89,22,4,7,1,375,329,0,47,6,"7,75",4,54,62
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration",69,25,62,87,46,2,8,3,401,363,0,28,9,"6,13",6,99,92
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement",12,6,32,38,9,3,6,2,70,65,0,20,1,"4,00",2,20,16
"org.eclipse.jdt.internal.compiler.ast.DoStatement",21,8,31,39,18,2,6,1,132,115,0,18,1,"3,33",2,45,20
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral",15,8,77,85,11,5,6,3,94,75,0,53,2,"3,40",1,12,17
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement",20,3,32,35,12,2,6,6,34,31,0,17,2,"1,29",3,15,9
"org.eclipse.jdt.internal.compiler.ast.EqualExpression",29,9,98,107,23,5,7,2,477,405,0,59,7,"9,58",3,64,115
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall",48,17,48,65,30,2,7,5,319,274,2,18,1,"4,53",6,68,68
"org.eclipse.jdt.internal.compiler.ast.Expression",170,6,62,68,28,2,6,11,730,606,16,17,2,"5,47",20,92,197
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral",8,7,85,92,6,5,6,2,52,36,0,56,4,"1,00",3,9,6
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral",15,7,78,85,10,5,6,4,49,37,0,51,4,"1,57",2,14,11
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration",78,18,51,69,30,3,7,1,223,180,5,28,0,"5,75",3,65,46
"org.eclipse.jdt.internal.compiler.ast.FieldReference",60,16,99,115,36,4,7,4,474,413,4,46,7,"4,29",10,93,90
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral",15,9,77,86,11,5,6,3,95,76,0,53,2,"3,40",1,12,17
"org.eclipse.jdt.internal.compiler.ast.ForStatement",25,14,31,45,22,2,6,1,280,247,0,18,1,"10,33",2,53,62
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement",37,23,31,54,33,2,6,1,358,321,0,18,1,"9,33",2,90,56
"org.eclipse.jdt.internal.compiler.ast.IfStatement",19,10,32,42,16,2,6,1,201,171,0,18,1,"4,43",2,45,31
"org.eclipse.jdt.internal.compiler.ast.ImplicitDocTypeReference",10,7,89,96,8,4,6,7,53,33,0,61,1,"1,12",5,10,9
"org.eclipse.jdt.internal.compiler.ast.ImportReference",39,12,20,32,6,1,6,2,55,51,6,12,0,"1,83",4,9,11
"org.eclipse.jdt.internal.compiler.ast.Initializer",39,23,60,83,19,4,7,3,87,76,0,27,7,"1,67",4,27,15
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression",21,8,74,82,13,4,7,3,78,65,0,47,6,"1,50",3,32,12
"org.eclipse.jdt.internal.compiler.ast.IntLiteral",26,10,82,92,13,5,6,3,118,96,1,50,4,"2,50",4,21,25
"org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue",5,10,84,94,3,6,6,1,10,10,0,62,1,"1,00",0,3,2
"org.eclipse.jdt.internal.compiler.ast.Javadoc",51,10,23,33,45,1,6,1,555,476,0,12,0,"17,44",2,48,157
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression",20,18,89,107,14,4,7,1,87,71,0,62,3,"3,40",4,20,17
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression",17,8,68,76,14,3,6,1,71,64,0,46,4,"2,57",4,21,18
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference",10,11,101,112,9,6,6,3,24,20,0,69,4,"1,00",0,14,5
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference",9,9,101,110,8,6,6,3,24,20,0,69,4,"1,00",0,14,5
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference",23,19,105,124,17,5,7,2,114,89,0,66,5,"3,43",5,28,24
"org.eclipse.jdt.internal.compiler.ast.JavadocImportReference",3,14,21,35,3,2,6,0,17,9,0,17,0,"1,00",0,2,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend",23,22,92,114,17,4,7,1,140,123,0,58,5,"4,50",5,28,36
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference",17,11,97,108,11,5,6,3,64,48,0,62,6,"1,62",3,22,13
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement",13,10,39,49,11,3,6,3,44,34,0,24,3,"2,25",1,12,9
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference",12,15,112,127,10,6,8,2,39,32,0,78,2,"1,50",0,12,6
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference",16,10,97,107,11,5,6,3,62,49,0,62,6,"1,62",3,22,13
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement",16,7,32,39,13,2,6,1,95,78,0,17,2,"2,29",3,25,16
"org.eclipse.jdt.internal.compiler.ast.Literal",14,6,68,74,8,3,6,3,29,27,3,49,2,"1,25",5,9,5
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration",56,14,50,64,24,3,7,2,198,166,3,25,3,"6,00",2,58,42
"org.eclipse.jdt.internal.compiler.ast.LongLiteral",18,9,80,89,13,5,6,3,113,98,1,51,3,"3,12",3,18,25
"org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue",5,10,82,92,3,6,6,1,10,10,0,61,1,"1,00",0,3,2
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral",4,6,71,77,1,4,6,2,11,11,3,53,1,"1,00",2,4,3
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation",11,9,71,80,7,4,6,3,21,18,0,50,0,"1,00",1,8,4
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair",26,6,19,25,15,1,6,1,123,116,1,11,1,"6,00",1,32,30
"org.eclipse.jdt.internal.compiler.ast.MessageSend",56,18,84,102,32,3,7,4,377,323,4,43,7,"5,87",7,83,88
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration",61,24,55,79,33,2,8,2,158,139,4,32,5,"5,75",3,44,46
"org.eclipse.jdt.internal.compiler.ast.NameReference",40,10,87,97,7,4,7,6,44,33,2,53,2,"1,12",5,10,9
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation",13,10,72,82,8,4,6,1,51,45,0,49,1,"3,00",2,13,15
"org.eclipse.jdt.internal.compiler.ast.NullLiteral",17,7,78,85,9,5,6,6,38,28,0,51,4,"1,14",3,12,8
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral",7,7,72,79,1,4,6,2,16,16,5,53,1,"1,00",2,5,4
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression",19,11,92,103,13,5,7,2,232,203,0,62,5,"6,50",2,41,39
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression",17,7,86,93,7,3,7,3,1.388,506,4,50,1,"3,63",23,30,98
"org.eclipse.jdt.internal.compiler.ast.OperatorIds",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference",32,11,108,119,20,6,6,2,269,242,2,60,9,"5,92",7,53,71
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference",30,11,108,119,19,6,6,2,201,179,1,59,10,"4,42",8,51,53
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression",14,10,91,101,9,5,7,2,49,39,0,62,5,"1,67",3,14,10
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression",13,10,90,100,7,5,7,2,35,29,0,65,4,"1,60",3,10,8
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression",42,17,94,111,30,4,7,1,318,272,2,53,8,"7,20",5,79,72
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference",55,20,114,134,36,5,7,3,812,726,3,53,7,"7,07",13,111,191
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference",19,8,96,104,10,6,6,4,36,36,1,61,5,"1,67",4,16,10
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference",26,8,90,98,16,5,6,3,87,75,1,56,6,"2,29",4,25,16
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference",45,8,89,97,18,4,6,3,81,79,4,62,0,"2,75",5,30,22
"org.eclipse.jdt.internal.compiler.ast.Reference",36,6,70,76,13,3,6,8,61,56,4,49,2,"3,20",4,21,16
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement",30,8,35,43,23,2,6,1,215,194,2,18,1,"5,70",3,52,57
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation",14,11,72,83,9,4,6,1,41,35,0,49,1,"1,80",2,14,9
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference",60,15,108,123,37,5,8,3,644,572,5,53,7,"7,19",10,110,151
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference",41,7,89,96,12,4,6,3,47,45,6,62,0,"1,62",5,22,13
"org.eclipse.jdt.internal.compiler.ast.Statement",58,3,25,28,15,1,6,9,100,68,19,12,0,"2,43",7,23,17
"org.eclipse.jdt.internal.compiler.ast.StringLiteral",20,7,79,86,13,4,6,6,82,73,2,50,3,"2,00",6,21,22
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation",10,10,84,94,6,5,6,1,60,49,0,56,4,"1,80",3,10,9
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement",14,6,31,37,6,2,6,3,42,38,2,19,0,"2,75",2,10,11
"org.eclipse.jdt.internal.compiler.ast.SuperReference",24,6,91,97,11,5,6,7,35,35,2,56,6,"1,25",6,17,10
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement",25,15,31,46,22,2,6,1,287,253,0,17,2,"9,50",2,57,57
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement",22,11,38,49,18,3,6,2,154,132,0,21,1,"2,50",3,49,20
"org.eclipse.jdt.internal.compiler.ast.ThisReference",25,6,84,90,14,4,6,8,78,61,3,47,6,"1,43",8,23,20
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement",18,5,31,36,15,2,6,1,48,40,0,18,1,"1,50",2,22,9
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral",15,7,78,85,10,5,6,4,50,37,0,51,4,"1,57",2,14,11
"org.eclipse.jdt.internal.compiler.ast.TryStatement",38,25,37,62,30,3,6,1,504,426,0,21,1,"11,71",3,79,82
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration",119,31,69,100,62,2,8,1,1.122,922,1,17,2,"6,28",17,160,251
"org.eclipse.jdt.internal.compiler.ast.TypeParameter",31,15,50,65,10,3,7,4,71,63,0,26,2,"3,00",2,15,21
"org.eclipse.jdt.internal.compiler.ast.TypeReference",95,6,82,88,19,3,6,10,140,124,3,44,4,"2,94",14,32,47
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression",27,8,74,82,20,4,7,1,277,254,0,47,6,"7,62",4,55,61
"org.eclipse.jdt.internal.compiler.ast.WhileStatement",24,10,31,41,21,2,6,1,195,175,0,18,1,"4,50",2,50,27
"org.eclipse.jdt.internal.compiler.ast.Wildcard",30,12,98,110,13,5,6,1,85,82,0,62,7,"2,78",6,25,25
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader",36,22,76,98,22,1,6,6,993,772,0,11,1,"5,22",40,99,235
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct",9,2,16,18,4,0,2,3,166,164,4,0,0,"2,75",12,17,44
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException",12,34,9,43,0,0,0,4,116,90,0,0,0,"1,44",3,9,13
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo",25,12,41,53,23,1,6,3,378,314,0,11,1,"4,05",14,57,85
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo",3,13,25,38,2,1,3,1,126,86,0,11,1,"2,25",5,12,18
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo",11,12,44,56,9,1,5,3,329,259,0,11,1,"3,24",15,32,68
"org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel",4,7,18,25,2,1,0,2,69,50,0,6,4,"2,17",1,11,13
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache",5,4,12,16,2,0,0,1,168,108,0,0,0,"2,50",7,13,30
"org.eclipse.jdt.internal.compiler.codegen.CodeStream",108,38,303,341,43,0,7,2,5.979,5.554,1,0,0,"5,05",5,373,1.530
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool",24,208,28,236,20,0,3,1,907,686,0,0,0,"3,82",23,59,107
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache",2,3,7,10,1,0,0,1,126,87,0,0,0,"3,71",4,7,26
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel",6,8,17,25,3,1,0,2,24,23,0,8,2,"1,00",1,8,5
"org.eclipse.jdt.internal.compiler.codegen.FieldNameAndTypeCache",4,4,11,15,4,0,0,1,144,86,0,0,0,"2,18",7,13,24
"org.eclipse.jdt.internal.compiler.codegen.FloatCache",2,3,7,10,1,0,0,1,126,87,0,0,0,"3,71",4,7,26
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache",2,4,10,14,1,0,0,1,142,88,0,0,0,"2,30",6,10,23
"org.eclipse.jdt.internal.compiler.codegen.Label",36,6,12,18,6,0,0,1,243,174,2,0,0,"3,83",3,18,46
"org.eclipse.jdt.internal.compiler.codegen.LongCache",2,4,10,14,1,0,0,1,142,88,0,0,0,"2,30",6,10,23
"org.eclipse.jdt.internal.compiler.codegen.MethodNameAndTypeCache",3,4,11,15,3,0,0,1,145,86,0,0,0,"2,18",7,14,24
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache",2,4,10,14,1,0,0,1,138,83,0,0,0,"2,30",6,10,23
"org.eclipse.jdt.internal.compiler.codegen.Opcodes",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.env.AccessRestriction",38,4,7,11,3,0,0,2,100,82,0,0,0,"4,14",6,10,29
"org.eclipse.jdt.internal.compiler.env.IBinaryField",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryMethod",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryNestedType",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.internal.compiler.env.IBinaryType",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,13,n/a
"org.eclipse.jdt.internal.compiler.env.ICompilationUnit",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.internal.compiler.env.IConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.env.IDependent",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericField",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericMethod",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.internal.compiler.env.IGenericType",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.internal.compiler.env.INameEnvironment",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceField",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceImport",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceMethod",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,9,n/a
"org.eclipse.jdt.internal.compiler.env.ISourceType",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,15,n/a
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer",20,4,10,14,4,0,0,4,67,39,0,0,0,"1,00",7,10,10
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo",4,2,57,59,4,1,0,1,177,118,0,0,2,"1,00",20,56,29
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext",25,11,36,47,20,1,1,1,171,158,1,23,3,"3,56",3,29,32
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext",12,8,34,42,11,1,1,2,132,114,0,21,5,"3,71",4,18,26
"org.eclipse.jdt.internal.compiler.flow.FlowContext",78,3,27,30,21,0,1,9,438,376,4,0,0,"3,81",18,49,103
"org.eclipse.jdt.internal.compiler.flow.FlowInfo",74,6,31,37,4,0,0,27,132,74,2,0,0,"2,00",23,34,10
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext",17,14,40,54,11,2,1,1,73,68,0,31,2,"1,75",1,9,7
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext",7,3,33,36,5,1,1,2,35,31,0,21,5,"1,33",4,13,8
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext",8,5,36,41,7,2,1,1,35,30,0,27,2,"1,50",2,9,6
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext",19,13,42,55,15,2,1,3,159,149,0,22,7,"3,40",6,26,34
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext",13,4,32,36,5,1,1,3,33,29,2,22,4,"1,20",3,10,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo",25,11,68,79,7,1,0,5,706,522,0,1,1,"3,27",27,44,131
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant",4,1,18,19,3,1,2,2,21,20,0,9,3,"1,20",4,6,6
"org.eclipse.jdt.internal.compiler.impl.ByteConstant",3,1,24,25,2,1,2,2,38,37,0,3,9,"1,09",10,11,12
"org.eclipse.jdt.internal.compiler.impl.CharConstant",3,1,24,25,2,1,2,2,39,38,0,3,9,"1,09",10,11,12
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions",86,166,11,177,7,0,4,1,750,707,0,0,0,"20,45",7,13,225
"org.eclipse.jdt.internal.compiler.impl.Constant",68,4,42,46,13,0,2,2,1.469,1.369,9,0,0,"22,46",42,54,921
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant",5,1,24,25,2,1,2,2,40,40,0,3,9,"1,18",10,11,13
"org.eclipse.jdt.internal.compiler.impl.FloatConstant",3,1,24,25,2,1,2,2,38,38,0,3,9,"1,09",10,11,12
"org.eclipse.jdt.internal.compiler.impl.ITypeRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.eclipse.jdt.internal.compiler.impl.IntConstant",3,1,24,25,2,1,2,2,39,38,0,3,9,"1,09",10,11,12
"org.eclipse.jdt.internal.compiler.impl.LongConstant",3,1,24,25,2,1,2,2,38,37,0,3,9,"1,09",10,11,12
"org.eclipse.jdt.internal.compiler.impl.ReferenceContext",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.internal.compiler.impl.ShortConstant",3,1,24,25,2,1,2,2,38,37,0,3,9,"1,09",10,11,12
"org.eclipse.jdt.internal.compiler.impl.StringConstant",4,1,18,19,2,1,2,2,31,20,0,10,2,"1,20",4,5,6
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding",47,8,72,80,15,2,8,2,188,153,0,31,11,"2,27",19,48,50
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding",19,4,61,65,5,2,8,4,155,147,0,42,1,"5,27",10,12,58
"org.eclipse.jdt.internal.compiler.lookup.BaseTypes",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding",39,17,147,164,32,3,9,1,750,688,0,86,20,"6,67",28,111,220
"org.eclipse.jdt.internal.compiler.lookup.Binding",102,14,6,20,3,0,4,4,53,30,6,0,0,"1,00",6,6,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope",187,14,105,119,35,1,8,3,722,555,2,70,2,"5,18",16,86,145
"org.eclipse.jdt.internal.compiler.lookup.ClassScope",98,5,105,110,41,1,8,1,986,876,0,72,0,"8,89",13,152,249
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope",69,14,104,118,36,1,8,1,590,512,0,72,0,"5,70",10,110,154
"org.eclipse.jdt.internal.compiler.lookup.CompilerModifiers",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding",81,7,37,44,19,2,4,3,225,167,3,10,1,"2,48",19,38,57
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding",11,4,11,15,3,1,4,3,30,27,0,4,0,"1,20",4,8,6
"org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency",2,2,1,3,1,0,0,0,8,8,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,8,n/a
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding",27,27,182,209,16,5,9,3,146,130,0,151,6,"3,27",6,29,36
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding",52,16,23,39,14,2,4,4,117,101,1,9,2,"3,00",4,15,27
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment",98,27,34,61,37,0,3,1,823,653,0,0,0,"5,94",26,100,202
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding",11,23,175,198,7,5,9,2,23,19,0,156,2,"1,75",2,13,7
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding",89,9,60,69,24,1,6,6,636,492,4,2,2,"3,02",48,86,163
"org.eclipse.jdt.internal.compiler.lookup.MethodScope",82,22,119,141,39,2,8,1,418,342,0,91,4,"6,07",10,59,85
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier",26,6,27,33,23,0,2,1,522,449,1,0,0,"5,78",16,76,156
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15",18,6,39,45,18,1,2,1,164,150,0,19,7,"4,50",10,39,54
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding",23,23,171,194,13,4,9,1,177,142,2,143,3,"3,69",10,23,48
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding",47,5,24,29,12,1,5,2,172,123,1,3,1,"2,17",10,32,39
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding",9,8,42,50,4,3,4,1,42,24,0,26,4,"1,20",3,12,6
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding",27,16,76,92,22,3,7,1,338,285,0,50,4,"7,56",6,42,68
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding",13,10,67,77,8,2,6,1,76,50,1,49,4,"1,43",5,18,10
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding",44,19,156,175,25,3,10,4,776,643,1,68,34,"5,00",35,113,205
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding",10,3,13,16,3,1,4,3,37,28,0,3,1,"1,00",3,8,7
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding",20,9,41,50,4,3,4,1,24,19,0,29,1,"1,00",1,5,4
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding",14,11,64,75,5,2,6,1,27,23,0,53,1,"1,75",1,4,7
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding",2,6,27,33,1,2,5,1,18,13,0,14,1,"1,00",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ProblemReasons",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding",21,12,120,132,1,3,9,2,33,25,0,103,2,"1,00",2,7,6
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding",18,19,168,187,15,4,10,5,172,129,0,126,11,"3,17",10,41,38
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding",125,9,114,123,17,2,9,9,723,620,7,34,9,"3,81",62,85,240
"org.eclipse.jdt.internal.compiler.lookup.Scope",154,10,81,91,54,0,8,2,2.813,2.441,3,0,0,"9,56",80,194,765
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper",4,4,5,9,2,0,0,1,49,49,0,0,0,"2,80",4,7,14
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding",79,22,158,180,44,3,9,1,1.199,1.106,1,90,16,"7,48",38,131,329
"org.eclipse.jdt.internal.compiler.lookup.Substitution",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding",17,15,25,40,7,3,4,0,27,25,0,17,0,"1,00",0,5,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding",5,8,38,46,4,3,4,0,7,7,0,30,0,"1,00",0,2,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding",21,23,67,90,18,2,6,1,295,254,0,54,0,"7,71",1,17,54
"org.eclipse.jdt.internal.compiler.lookup.TagBits",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding",189,2,51,53,16,1,8,20,362,263,3,3,1,"2,30",43,52,92
"org.eclipse.jdt.internal.compiler.lookup.TypeConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.lookup.TypeIds",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding",41,15,135,150,16,3,9,4,308,242,0,87,15,"3,86",19,37,81
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding",13,11,120,131,7,3,9,2,64,61,0,104,1,"3,00",3,16,18
"org.eclipse.jdt.internal.compiler.lookup.UpdatedMethodBinding",4,10,62,72,3,2,6,1,10,10,0,53,1,"1,00",1,3,2
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding",72,6,14,20,5,1,4,3,40,38,2,4,0,"1,25",6,9,10
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding",28,18,137,155,15,3,9,5,284,218,0,85,17,"3,13",19,51,72
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser",19,66,36,102,8,0,0,2,1.280,1.085,2,0,0,"11,40",27,62,285
"org.eclipse.jdt.internal.compiler.parser.JavadocParser",37,41,52,93,34,1,0,1,601,491,0,12,2,"6,88",12,52,110
"org.eclipse.jdt.internal.compiler.parser.NLSLine",3,1,8,9,1,0,0,1,39,33,0,0,0,"1,12",5,8,9
"org.eclipse.jdt.internal.compiler.parser.Parser",146,112,397,509,121,0,7,2,8.320,7.039,5,0,0,"4,65",46,553,1.845
"org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock",26,10,55,65,24,2,5,1,270,182,0,20,11,"2,78",15,41,50
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement",24,4,30,34,15,0,0,6,271,183,5,0,0,"2,00",22,31,60
"org.eclipse.jdt.internal.compiler.parser.RecoveredField",14,8,42,50,11,1,0,1,163,131,1,19,9,"2,83",8,24,34
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport",4,5,37,42,3,1,0,1,37,28,0,23,5,"1,14",4,10,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer",23,11,54,65,21,2,5,1,199,155,0,22,10,"3,42",9,31,41
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable",11,7,47,54,8,2,0,1,85,62,0,20,9,"1,60",7,16,16
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod",27,9,47,56,25,1,5,1,406,319,0,14,14,"4,76",12,48,81
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement",6,5,37,42,3,1,0,1,35,26,3,23,5,"1,14",4,10,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredType",27,15,57,72,22,2,4,1,489,420,0,14,15,"5,65",15,49,113
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit",16,9,41,50,14,1,0,1,183,159,0,19,9,"3,27",8,25,36
"org.eclipse.jdt.internal.compiler.parser.Scanner",57,95,48,143,9,0,1,1,3.404,3.067,3,0,0,"16,56",32,58,795
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter",66,16,15,31,58,0,3,1,688,621,0,0,0,"8,20",14,88,123
"org.eclipse.jdt.internal.compiler.parser.TerminalTokens",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser",15,44,27,71,15,0,2,1,1.966,1.491,0,0,0,"10,89",17,68,294
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.PrimaryRepairInfo",1,5,2,7,0,0,0,1,23,23,0,0,0,"1,00",1,2,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.RepairCandidate",1,2,1,3,0,0,0,0,8,8,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.SecondaryRepairInfo",1,7,0,7,0,0,0,0,9,9,0,0,0,n/a,0,0,0
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.StateInfo",1,2,1,3,0,0,0,0,8,8,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream",8,11,18,29,7,0,1,2,198,194,0,0,0,"2,17",14,26,39
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.Token",1,6,1,7,0,0,0,0,14,14,0,0,0,"1,00",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil",11,3,6,9,9,0,0,1,85,81,0,0,0,"3,83",5,12,23
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult",2,5,6,11,2,0,0,1,74,74,0,0,0,"2,33",2,6,14
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation",34,6,6,12,5,0,0,1,49,41,1,0,0,"1,67",0,16,10
"org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit",9,6,7,13,3,1,0,0,12,6,1,2,0,"1,00",0,2,1
"org.eclipse.jdt.internal.compiler.problem.AbortMethod",10,6,9,15,3,3,0,0,12,6,0,2,0,"1,00",0,2,1
"org.eclipse.jdt.internal.compiler.problem.AbortType",8,6,8,14,3,2,0,0,12,6,1,2,0,"1,00",0,2,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem",7,9,28,37,4,0,2,6,173,106,0,0,0,"1,94",11,17,31
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory",24,5,11,16,7,0,1,2,165,123,4,0,0,"2,50",6,16,20
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler",15,4,7,11,9,0,1,1,144,124,1,0,0,"3,14",3,14,22
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter",174,4,362,366,92,1,2,1,5.047,4.903,3,4,1,"1,93",9,422,688
"org.eclipse.jdt.internal.compiler.problem.ProblemSeverities",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement",2,1,1,2,0,0,0,0,12,6,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector",3,4,8,12,2,0,0,1,56,54,0,0,0,"2,00",4,10,16
"org.eclipse.jdt.internal.compiler.util.FloatUtil",3,14,3,17,1,0,0,1,378,271,0,0,0,"15,67",3,3,47
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt",2,4,8,12,1,0,0,1,76,71,0,0,0,"2,50",5,8,20
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues",4,5,10,15,2,0,0,1,111,106,0,0,0,"2,40",7,12,24
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong",2,4,8,12,1,0,0,1,76,71,0,0,0,"2,50",5,8,20
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject",19,4,10,14,2,0,0,1,110,105,0,0,0,"2,40",7,12,24
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt",2,4,10,14,1,0,0,1,105,100,0,0,0,"2,40",7,10,24
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage",4,4,8,12,3,0,0,1,78,76,0,0,0,"2,50",5,11,20
"org.eclipse.jdt.internal.compiler.util.HashtableOfType",5,4,8,12,3,0,0,1,78,76,0,0,0,"2,62",5,10,21
"org.eclipse.jdt.internal.compiler.util.ObjectVector",8,4,14,18,1,0,0,1,90,82,0,0,0,"1,93",7,14,27
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable",22,4,11,15,1,0,0,1,128,121,0,0,0,"3,55",7,11,39
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector",3,4,10,14,2,0,0,1,62,60,0,0,0,"1,80",5,11,18
"org.eclipse.jdt.internal.compiler.util.SuffixConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.compiler.util.Util",63,7,21,28,4,0,1,2,514,359,0,0,0,"4,14",20,27,91
"org.eclipse.jdt.internal.compiler.util.Util.Displayable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.compiler.util.WeakHashSet",3,4,11,15,2,0,0,1,153,134,0,0,0,"2,91",6,12,32
"org.eclipse.jdt.internal.compiler.util.WeakHashSet.HashableWeakReference",1,1,4,5,1,0,0,0,22,22,0,0,0,"1,75",3,5,7
"org.eclipse.jdt.internal.core.ASTHolderCUInfo",3,7,16,23,2,3,0,0,4,4,0,15,0,n/a,0,0,0
"org.eclipse.jdt.internal.core.Assert",14,0,7,7,1,0,0,3,79,27,0,0,0,"1,43",4,8,10
"org.eclipse.jdt.internal.core.Assert.AssertionFailedException",4,1,1,2,0,0,0,0,6,6,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit",15,5,13,18,5,0,2,3,93,74,0,0,0,"1,89",5,13,17
"org.eclipse.jdt.internal.core.BatchOperation",5,11,62,73,4,1,0,2,37,26,0,50,1,"2,00",1,4,6
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation",9,11,63,74,9,1,0,2,52,34,0,50,1,"1,50",2,18,6
"org.eclipse.jdt.internal.core.BinaryField",15,3,147,150,12,5,6,5,68,44,1,88,4,"1,38",6,20,11
"org.eclipse.jdt.internal.core.BinaryMember",17,3,136,139,14,4,5,5,88,52,3,76,8,"1,50",4,25,15
"org.eclipse.jdt.internal.core.BinaryMethod",24,8,173,181,21,5,6,7,307,236,1,81,8,"2,50",19,62,60
"org.eclipse.jdt.internal.core.BinaryMethod.DecodeParametersNames",3,1,57,58,3,1,1,1,24,24,0,25,2,"2,33",1,3,7
"org.eclipse.jdt.internal.core.BinaryType",63,8,249,257,53,5,7,20,799,580,1,82,8,"2,08",55,144,131
"org.eclipse.jdt.internal.core.BinaryTypeConverter",30,0,5,5,29,0,0,1,192,171,0,0,0,"8,00",5,42,40
"org.eclipse.jdt.internal.core.Buffer",10,11,45,56,9,0,1,5,411,315,0,0,0,"2,85",11,29,77
"org.eclipse.jdt.internal.core.BufferCache",6,9,49,58,5,2,0,2,41,20,0,39,0,"1,25",2,9,5
"org.eclipse.jdt.internal.core.BufferFactoryWrapper",7,1,7,8,4,1,0,2,34,26,0,0,1,"1,67",5,8,10
"org.eclipse.jdt.internal.core.BufferManager",16,4,7,11,10,0,0,4,97,57,0,0,0,"1,75",5,19,14
"org.eclipse.jdt.internal.core.CancelableNameEnvironment",10,6,23,29,8,1,2,1,30,30,0,6,4,"1,33",2,11,8
"org.eclipse.jdt.internal.core.CancelableProblemFactory",5,3,11,14,3,1,1,1,12,12,0,3,1,"1,50",1,4,3
"org.eclipse.jdt.internal.core.ClassFile",68,4,171,175,52,2,8,9,720,534,0,66,10,"2,25",36,118,126
"org.eclipse.jdt.internal.core.ClassFileInfo",28,5,20,25,28,2,1,1,219,151,0,10,0,"3,78",2,40,34
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy",22,1,162,163,21,0,8,36,549,290,0,0,0,"1,00",59,81,79
"org.eclipse.jdt.internal.core.ClasspathEntry",35,28,40,68,21,0,1,2,1.115,873,0,0,0,"7,93",27,76,238
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation",15,10,64,74,15,1,0,2,172,111,0,49,2,"4,20",3,42,21
"org.eclipse.jdt.internal.core.CompilationUnit",97,3,263,266,80,2,12,16,1.096,760,0,54,22,"1,97",65,220,213
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo",8,5,16,21,4,2,0,3,40,23,1,10,0,"1,40",3,6,7
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder",36,8,26,34,34,1,2,1,186,128,0,11,2,"2,44",4,32,22
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor",43,17,60,77,43,1,1,2,457,324,0,7,0,"2,04",1,64,53
"org.eclipse.jdt.internal.core.CompilationUnitVisitor",26,8,24,32,25,1,2,2,151,105,0,12,1,"1,40",3,24,14
"org.eclipse.jdt.internal.core.CopyElementsOperation",33,15,88,103,30,2,1,2,244,141,1,62,1,"3,45",7,51,38
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation",17,14,65,79,15,1,0,1,232,218,1,50,1,"6,57",2,39,46
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation",34,18,97,115,31,2,1,2,691,496,1,61,2,"6,00",6,103,120
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation",17,12,64,76,15,1,0,1,135,88,0,49,2,"3,40",3,30,17
"org.eclipse.jdt.internal.core.CreateElementInCUOperation",25,20,78,98,17,1,0,4,310,147,3,48,3,"2,38",9,55,38
"org.eclipse.jdt.internal.core.CreateFieldOperation",16,20,93,113,14,3,0,3,97,56,0,69,2,"2,14",5,25,15
"org.eclipse.jdt.internal.core.CreateImportOperation",18,18,84,102,16,2,0,3,112,56,0,62,2,"2,17",4,23,13
"org.eclipse.jdt.internal.core.CreateInitializerOperation",17,21,91,112,15,3,0,3,105,65,0,70,1,"3,20",3,21,16
"org.eclipse.jdt.internal.core.CreateMethodOperation",15,21,95,116,13,3,0,2,125,78,0,70,1,"2,44",8,27,22
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation",21,18,84,102,19,2,0,2,109,61,0,62,2,"2,17",4,25,13
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation",14,11,62,73,14,1,0,1,120,73,0,50,1,"5,67",1,27,17
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation",18,11,66,77,15,1,0,2,98,54,0,49,2,"1,71",3,17,12
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation",21,20,86,106,17,2,0,3,134,73,4,61,3,"2,12",5,27,17
"org.eclipse.jdt.internal.core.CreateTypeOperation",16,20,93,113,13,3,0,2,103,66,0,69,2,"2,71",6,23,19
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner",14,2,4,6,3,1,0,1,21,13,0,0,1,"1,33",2,4,4
"org.eclipse.jdt.internal.core.DeleteElementsOperation",23,16,86,102,21,2,0,2,162,103,0,61,2,"3,11",2,47,28
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation",13,12,65,77,12,1,0,2,124,114,0,50,1,"3,57",1,25,25
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation",14,14,82,96,13,2,0,2,115,84,0,63,0,"5,20",1,22,26
"org.eclipse.jdt.internal.core.DeltaProcessingState",19,16,11,27,16,0,0,2,313,258,0,0,0,"4,08",2,26,53
"org.eclipse.jdt.internal.core.DeltaProcessingState.ProjectUpdateInfo",7,4,1,5,5,0,0,1,64,61,0,0,0,"10,00",0,6,10
"org.eclipse.jdt.internal.core.DeltaProcessor",43,25,50,75,41,0,0,1,2.109,1.665,0,0,0,"7,09",15,163,390
"org.eclipse.jdt.internal.core.DeltaProcessor.OutputsInfo",1,3,2,5,1,0,0,0,36,36,0,0,0,"4,50",1,2,9
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo",6,6,4,10,4,0,0,1,70,70,0,0,0,"3,75",3,8,15
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation",7,10,63,73,7,1,0,2,46,33,0,50,1,"1,75",2,17,7
"org.eclipse.jdt.internal.core.ElementCache",10,10,51,61,9,2,0,3,75,45,0,39,0,"1,67",2,13,10
"org.eclipse.jdt.internal.core.IJavaElementRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,7,n/a
"org.eclipse.jdt.internal.core.INamingRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.internal.core.IPathRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.core.ImportContainer",17,2,111,113,16,2,4,7,100,67,0,59,8,"1,75",9,31,21
"org.eclipse.jdt.internal.core.ImportDeclaration",13,3,115,118,11,2,4,6,93,55,0,60,7,"1,33",9,26,16
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo",5,8,28,36,2,3,1,2,21,13,0,19,0,"1,00",2,3,3
"org.eclipse.jdt.internal.core.Initializer",18,2,136,138,14,3,6,6,110,78,0,69,10,"1,67",8,33,20
"org.eclipse.jdt.internal.core.InitializerElementInfo",4,6,20,26,1,3,0,0,6,2,0,19,0,n/a,0,0,0
"org.eclipse.jdt.internal.core.InternalNamingConventions",13,1,9,10,11,0,0,1,254,250,0,0,0,"4,67",4,26,42
"org.eclipse.jdt.internal.core.JarEntryFile",5,3,6,9,4,0,0,3,54,37,0,0,0,"1,33",5,9,8
"org.eclipse.jdt.internal.core.JarPackageFragment",22,2,172,174,18,3,7,10,134,85,0,96,9,"1,69",10,30,22
"org.eclipse.jdt.internal.core.JarPackageFragmentInfo",3,3,16,19,1,3,0,1,11,5,0,13,0,"1,00",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot",29,4,191,195,20,3,5,5,245,165,0,100,16,"2,00",18,44,40
"org.eclipse.jdt.internal.core.JarPackageFragmentRootInfo",3,5,20,25,2,3,0,1,12,6,0,16,0,"1,00",1,1,1
"org.eclipse.jdt.internal.core.JavaElement",104,18,70,88,28,0,1,15,625,402,2,0,0,"2,02",42,80,103
"org.eclipse.jdt.internal.core.JavaElementDelta",17,9,57,66,5,1,1,1,670,483,0,8,2,"3,57",20,50,132
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder",19,8,24,32,17,0,0,1,368,281,0,0,0,"3,21",6,52,77
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.ListItem",2,2,1,3,1,0,0,0,11,8,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.core.JavaElementInfo",26,2,9,11,3,0,0,1,88,65,2,0,0,"1,78",5,9,16
"org.eclipse.jdt.internal.core.JavaElementRequestor",9,12,22,34,6,0,1,1,198,119,1,0,0,"1,80",7,15,27
"org.eclipse.jdt.internal.core.JavaModel",43,2,151,153,28,2,5,15,316,199,0,72,5,"2,11",18,59,59
"org.eclipse.jdt.internal.core.JavaModelCache",7,12,8,20,5,0,0,1,204,162,0,0,0,"4,88",3,18,39
"org.eclipse.jdt.internal.core.JavaModelInfo",7,3,13,16,4,2,0,1,44,29,0,10,0,"4,00",2,3,8
"org.eclipse.jdt.internal.core.JavaModelManager",81,48,69,117,50,0,0,8,1.789,1.388,0,0,0,"4,24",43,148,339
"org.eclipse.jdt.internal.core.JavaModelManager.EclipsePreferencesListener",2,0,1,1,1,0,0,1,23,17,0,0,0,"4,00",0,3,4
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo",7,8,3,11,2,0,0,1,54,53,0,0,0,"2,67",1,3,8
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo",6,3,11,14,4,0,1,2,37,37,0,0,0,"1,43",3,12,10
"org.eclipse.jdt.internal.core.JavaModelOperation",50,18,59,77,20,0,0,4,779,510,14,0,0,"2,22",23,82,129
"org.eclipse.jdt.internal.core.JavaModelOperation.IPostAction",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.internal.core.JavaModelStatus",53,6,30,36,13,0,2,2,400,292,0,0,0,"3,46",14,38,90
"org.eclipse.jdt.internal.core.JavaProject",85,8,275,283,50,2,6,13,2.548,1.836,0,68,8,"3,38",94,229,423
"org.eclipse.jdt.internal.core.JavaProjectElementInfo",15,6,19,25,14,2,0,1,214,164,0,10,0,"3,75",5,26,30
"org.eclipse.jdt.internal.core.LRUCacheEnumerator",2,1,3,4,1,0,0,1,36,14,0,0,0,"1,00",2,3,3
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.LRUEnumeratorElement",2,2,1,3,0,0,0,0,16,7,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.core.LocalVariable",19,8,121,129,13,2,3,7,142,130,0,50,17,"1,27",17,42,28
"org.eclipse.jdt.internal.core.Member",39,2,127,129,22,2,5,9,277,223,2,64,5,"3,17",16,60,57
"org.eclipse.jdt.internal.core.MemberElementInfo",12,6,20,26,1,2,0,3,62,23,5,13,0,"1,00",3,6,6
"org.eclipse.jdt.internal.core.ModelUpdater",14,1,8,9,13,0,0,1,200,129,0,0,0,"3,75",0,28,30
"org.eclipse.jdt.internal.core.MoveElementsOperation",5,15,91,106,3,3,1,2,31,11,1,67,2,"1,00",2,5,3
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation",11,14,71,85,10,2,0,1,195,176,0,55,1,"5,29",0,25,37
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation",5,18,100,118,3,3,1,2,30,11,1,68,2,"1,00",2,5,3
"org.eclipse.jdt.internal.core.MultiOperation",18,14,77,91,11,1,0,3,280,163,4,51,0,"3,27",5,38,49
"org.eclipse.jdt.internal.core.NameLookup",45,11,19,30,32,0,1,2,822,577,0,0,0,"7,38",11,65,155
"org.eclipse.jdt.internal.core.NamedMember",10,3,126,129,2,3,5,1,14,10,4,82,1,"1,00",1,3,2
"org.eclipse.jdt.internal.core.Openable",51,1,111,112,25,1,3,8,417,280,6,45,2,"2,48",22,87,77
"org.eclipse.jdt.internal.core.OpenableElementInfo",17,2,11,13,1,1,0,1,21,9,6,8,0,"1,00",1,2,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache",10,9,45,54,6,1,0,3,396,215,2,14,7,"2,27",14,33,50
"org.eclipse.jdt.internal.core.PackageDeclaration",7,3,105,108,6,2,3,4,56,36,0,63,5,"1,38",6,17,11
"org.eclipse.jdt.internal.core.PackageFragment",44,4,159,163,26,2,7,10,386,285,1,69,8,"2,53",23,78,76
"org.eclipse.jdt.internal.core.PackageFragmentInfo",12,3,15,18,8,2,0,2,45,27,1,10,0,"1,25",2,8,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot",53,5,171,176,36,2,5,8,774,561,1,66,10,"2,98",34,115,134
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo",15,5,21,26,12,2,0,3,148,93,1,10,0,"2,30",6,20,23
"org.eclipse.jdt.internal.core.ParameterizedBinaryField",3,4,149,153,2,6,6,1,22,12,0,98,1,"1,00",0,4,2
"org.eclipse.jdt.internal.core.ParameterizedBinaryMethod",3,8,175,183,2,6,6,1,22,12,0,113,1,"1,00",0,4,2
"org.eclipse.jdt.internal.core.ParameterizedBinaryType",3,4,251,255,2,6,7,1,22,12,0,153,1,"1,00",0,4,2
"org.eclipse.jdt.internal.core.ParameterizedSourceField",3,4,140,144,2,5,6,1,22,12,0,90,1,"1,00",0,4,2
"org.eclipse.jdt.internal.core.ParameterizedSourceMethod",3,5,167,172,2,5,6,1,22,12,0,107,1,"1,00",0,4,2
"org.eclipse.jdt.internal.core.ParameterizedSourceType",4,4,238,242,2,5,6,1,22,12,0,141,1,"1,00",0,4,2
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation",17,15,64,79,17,1,0,2,93,76,0,49,2,"3,80",3,26,19
"org.eclipse.jdt.internal.core.Region",7,1,12,13,4,0,1,1,126,85,0,0,0,"2,75",5,10,22
"org.eclipse.jdt.internal.core.RenameElementsOperation",13,15,96,111,12,4,1,4,65,36,0,65,4,"2,40",3,16,12
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation",10,18,104,122,8,4,1,3,49,26,0,68,3,"1,75",2,13,7
"org.eclipse.jdt.internal.core.SearchableEnvironment",46,5,17,22,33,0,2,2,332,253,1,0,0,"2,39",7,45,55
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor",18,12,27,39,17,1,1,2,92,55,0,12,3,"2,00",0,21,10
"org.eclipse.jdt.internal.core.SelectionRequestor",46,5,30,35,45,0,1,2,677,598,0,0,0,"5,95",4,80,131
"org.eclipse.jdt.internal.core.SetClasspathOperation",28,25,76,101,27,1,0,1,715,609,0,49,2,"4,28",6,85,124
"org.eclipse.jdt.internal.core.SimpleDelta",4,2,10,12,1,0,0,1,98,68,1,0,0,"1,80",4,10,18
"org.eclipse.jdt.internal.core.SingleTypeRequestor",7,1,16,17,6,0,1,5,65,26,0,0,0,"1,00",2,9,9
"org.eclipse.jdt.internal.core.SortElementBuilder",21,10,78,88,19,1,1,1,274,217,0,12,15,"2,12",4,40,51
"org.eclipse.jdt.internal.core.SortElementBuilder.SortAbstractMethodDeclaration",6,25,22,47,4,2,0,2,87,84,2,11,1,"4,50",1,8,18
"org.eclipse.jdt.internal.core.SortElementBuilder.SortClassDeclaration",12,25,24,49,12,3,0,1,62,56,0,14,0,"4,00",1,15,12
"org.eclipse.jdt.internal.core.SortElementBuilder.SortCompilationUnit",5,25,23,48,5,2,0,3,42,38,0,11,1,"1,80",1,11,9
"org.eclipse.jdt.internal.core.SortElementBuilder.SortConstructorDeclaration",11,25,25,50,11,3,0,2,37,35,0,15,0,"2,33",1,16,7
"org.eclipse.jdt.internal.core.SortElementBuilder.SortElement",24,25,18,43,14,1,0,2,109,108,6,8,0,"6,00",4,19,30
"org.eclipse.jdt.internal.core.SortElementBuilder.SortFieldDeclaration",11,26,25,51,10,2,0,1,145,142,0,11,1,"3,71",1,25,26
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInitializer",8,25,23,48,8,2,0,2,69,66,0,11,1,"2,60",1,13,13
"org.eclipse.jdt.internal.core.SortElementBuilder.SortInterfaceDeclaration",12,25,24,49,12,3,0,1,45,42,0,14,0,"2,67",1,14,8
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMethodDeclaration",11,25,25,50,11,3,0,1,69,66,0,15,0,"4,33",1,21,13
"org.eclipse.jdt.internal.core.SortElementBuilder.SortMultipleFieldDeclaration",11,25,25,50,11,2,0,1,110,107,0,10,2,"2,57",1,28,18
"org.eclipse.jdt.internal.core.SortElementBuilder.SortType",7,25,21,46,5,2,0,1,47,44,2,11,1,"3,00",0,8,9
"org.eclipse.jdt.internal.core.SortElementsOperation",21,12,64,76,20,1,0,1,105,72,0,50,1,"2,40",3,30,12
"org.eclipse.jdt.internal.core.SortJavaElement",15,36,12,48,6,0,0,5,119,112,1,0,0,"1,90",5,15,19
"org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo",4,14,53,67,2,5,2,2,20,12,0,32,1,"1,50",2,3,3
"org.eclipse.jdt.internal.core.SourceConstructorInfo",2,12,51,63,1,4,2,4,19,14,0,29,0,"1,00",3,4,4
"org.eclipse.jdt.internal.core.SourceField",17,3,138,141,12,4,6,6,114,85,1,77,5,"2,89",7,23,26
"org.eclipse.jdt.internal.core.SourceFieldElementInfo",7,9,33,42,3,3,2,3,44,20,0,19,0,"1,00",4,6,5
"org.eclipse.jdt.internal.core.SourceMapper",44,27,81,108,36,1,2,8,1.064,822,0,7,0,"3,46",14,93,166
"org.eclipse.jdt.internal.core.SourceMethod",27,4,165,169,23,4,6,8,307,233,1,69,10,"2,23",20,69,58
"org.eclipse.jdt.internal.core.SourceMethodElementInfo",17,11,47,58,11,3,2,7,89,60,2,19,0,"1,40",10,18,14
"org.eclipse.jdt.internal.core.SourceMethodInfo",3,12,51,63,1,4,2,3,22,15,1,29,0,"1,00",3,4,4
"org.eclipse.jdt.internal.core.SourceRange",9,2,6,8,1,0,1,2,31,22,0,0,0,"1,00",3,4,4
"org.eclipse.jdt.internal.core.SourceRefElement",38,2,96,98,17,1,2,15,226,151,6,41,6,"1,87",14,54,43
"org.eclipse.jdt.internal.core.SourceRefElementInfo",8,3,14,17,3,1,0,1,31,18,2,8,0,"1,00",3,6,5
"org.eclipse.jdt.internal.core.SourceType",62,3,236,239,57,4,6,18,793,567,1,74,7,"1,93",53,136,133
"org.eclipse.jdt.internal.core.SourceTypeElementInfo",37,18,64,82,27,3,3,5,322,228,0,19,0,"2,40",20,32,60
"org.eclipse.jdt.internal.core.TypeParameter",19,4,108,112,10,2,3,6,37,37,0,64,3,"1,11",7,15,10
"org.eclipse.jdt.internal.core.TypeParameterElementInfo",8,6,14,20,1,2,0,0,16,5,0,13,0,n/a,0,0,0
"org.eclipse.jdt.internal.core.TypeVector",4,5,13,18,2,0,0,1,94,91,0,0,0,"1,92",7,13,25
"org.eclipse.jdt.internal.core.UserLibrary",9,10,8,18,6,0,0,1,127,116,0,0,0,"3,12",7,17,25
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer",6,1,10,11,5,0,1,1,44,29,0,0,0,"1,33",5,9,8
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer",7,0,12,12,7,1,0,2,56,38,0,0,4,"1,83",4,14,11
"org.eclipse.jdt.internal.core.UserLibraryManager",12,5,9,14,11,0,0,1,202,157,0,0,0,"3,30",3,23,33
"org.eclipse.jdt.internal.core.XMLWriter",3,2,8,10,0,0,0,1,86,80,0,0,0,"2,62",2,8,21
"org.eclipse.jdt.internal.core.builder.AbortIncrementalBuildException",2,2,1,3,0,0,0,0,12,7,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder",34,11,18,29,32,0,1,1,400,338,2,0,0,"4,41",5,67,75
"org.eclipse.jdt.internal.core.builder.AdditionalTypeCollection",2,3,5,8,1,1,0,0,7,7,0,3,0,"1,00",0,2,1
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder",13,10,26,36,13,1,1,1,253,249,0,16,0,"5,08",2,22,66
"org.eclipse.jdt.internal.core.builder.BuildNotifier",9,15,16,31,5,0,0,1,233,196,0,0,0,"3,69",1,21,59
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory",13,6,18,24,7,1,0,2,112,109,1,0,3,"2,83",9,18,34
"org.eclipse.jdt.internal.core.builder.ClasspathJar",11,7,16,23,8,1,0,2,117,110,0,2,1,"2,70",6,22,27
"org.eclipse.jdt.internal.core.builder.ClasspathJar.PackageCacheEntry",2,3,1,4,1,0,0,0,10,10,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation",11,0,10,10,5,0,0,10,26,24,3,0,0,"1,00",8,14,7
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory",12,10,22,32,4,2,0,1,36,35,0,11,3,"2,50",3,7,10
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException",3,2,4,6,1,0,0,1,32,28,0,0,0,"1,75",2,4,7
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder",26,18,36,54,26,1,1,1,617,544,0,11,5,"9,22",5,83,166
"org.eclipse.jdt.internal.core.builder.JavaBuilder",24,11,27,38,22,0,0,5,544,498,0,0,0,"5,00",13,72,135
"org.eclipse.jdt.internal.core.builder.MissingClassFileException",2,2,1,3,0,0,0,0,11,7,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.core.builder.MissingSourceFileException",2,2,1,3,0,0,0,0,10,7,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment",27,5,15,20,21,0,2,1,287,254,0,0,0,"6,73",5,47,74
"org.eclipse.jdt.internal.core.builder.NameSet",3,3,4,7,2,0,0,1,45,43,0,0,0,"3,25",2,6,13
"org.eclipse.jdt.internal.core.builder.ProblemFactory",5,3,11,14,2,1,1,1,12,12,0,4,0,"1,50",1,6,3
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet",3,3,4,7,2,0,0,1,47,45,0,0,0,"3,50",2,7,14
"org.eclipse.jdt.internal.core.builder.ReferenceCollection",10,10,8,18,7,0,0,1,178,165,1,0,0,"7,25",7,16,58
"org.eclipse.jdt.internal.core.builder.SourceFile",12,4,14,18,6,0,2,2,76,72,0,0,0,"1,40",8,16,14
"org.eclipse.jdt.internal.core.builder.State",16,17,25,42,14,0,0,1,587,475,0,0,0,"5,00",10,44,125
"org.eclipse.jdt.internal.core.builder.StringSet",4,3,6,9,1,0,0,1,60,58,0,0,0,"3,17",3,6,19
"org.eclipse.jdt.internal.core.builder.WorkQueue",5,2,8,10,2,0,0,1,32,32,0,0,0,"1,12",3,8,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer",112,10,312,322,110,1,0,1,2.465,2.162,0,85,83,"3,16",123,219,449
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter",8,4,12,16,6,0,0,1,185,182,1,0,0,"3,42",9,32,41
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter",6,7,19,26,5,1,0,2,79,79,1,6,2,"2,57",6,17,18
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter",5,6,21,27,4,2,0,1,16,16,0,9,1,"2,00",1,7,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener",96,4,265,269,91,1,0,4,1.190,912,1,85,83,"1,98",90,112,188
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter",22,25,12,37,21,0,0,3,298,259,0,0,0,"3,77",11,25,49
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockContext",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefix",6,2,3,5,6,0,1,1,18,18,0,0,0,"1,50",1,6,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefixSuffix",6,3,3,6,6,0,1,1,26,26,0,0,0,"1,50",1,6,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ConstPrefix",2,1,3,4,1,0,1,1,9,9,0,0,0,"1,00",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener",7,5,270,275,7,2,0,2,63,54,0,256,3,"2,00",3,15,14
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.FormattingPrefix",2,4,3,7,2,0,1,1,21,21,0,0,0,"1,50",1,5,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.NodeMarker",3,1,0,1,0,0,0,0,3,3,0,0,0,n/a,0,0,0
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.Prefix",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.Indents",3,0,9,9,0,0,0,1,234,168,0,0,0,"4,11",8,9,37
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent",7,5,21,26,4,1,0,2,169,134,0,0,0,"2,19",12,23,35
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore",19,3,9,12,13,0,0,1,101,76,0,0,0,"2,00",4,18,18
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.CopyPlaceholderData",4,1,1,2,2,1,0,0,6,6,0,0,0,"1,00",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.PlaceholderData",3,0,0,0,0,0,0,0,3,2,2,0,0,n/a,0,0,0
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.StringPlaceholderData",3,1,1,2,1,1,0,0,6,6,0,0,0,"1,00",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent",5,2,13,15,1,1,0,3,88,63,0,0,0,"2,00",6,8,16
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEvent",9,5,5,10,0,0,0,5,55,12,2,0,0,n/a,5,5,0
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore",24,11,37,48,13,0,0,3,366,327,0,0,0,"2,51",23,62,93
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo",11,5,4,9,2,0,0,2,37,37,0,0,0,"1,75",3,4,7
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfoSorter",3,0,1,1,2,0,0,1,12,12,0,0,0,"3,00",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.EventHolder",5,3,2,5,3,0,0,0,20,17,0,0,0,"1,00",1,3,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.INodePropertyMapper",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator",3,4,4,8,3,0,0,2,54,42,0,0,0,"2,50",2,5,10
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation",4,2,3,5,2,0,0,2,14,14,0,0,0,"1,00",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier",2,3,3,6,1,0,0,2,22,21,0,0,0,"1,33",2,5,4
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner",7,6,25,31,6,0,0,2,363,224,0,0,0,"1,92",19,34,48
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition",3,2,5,7,2,0,1,1,29,20,0,0,0,"1,67",2,5,5
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper",40,2,45,47,40,0,1,1,386,289,0,0,0,"1,52",11,59,61
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper",3,1,7,8,2,0,1,1,35,20,0,0,0,"1,25",3,7,5
"org.eclipse.jdt.internal.core.eval.RequestorWrapper",7,1,5,6,6,0,1,1,44,37,0,0,0,"2,33",1,13,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector",13,2,16,18,13,0,0,1,398,350,0,0,0,"5,56",4,44,89
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType",11,8,37,45,10,0,3,14,227,167,0,0,0,"2,25",18,28,45
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder",33,5,12,17,30,0,1,4,314,255,2,0,0,"5,30",6,47,53
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver",59,9,23,32,56,0,1,1,624,525,0,0,0,"5,85",5,94,117
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.MissingType",3,1,10,11,1,0,2,4,36,21,0,0,0,"1,00",5,6,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType",6,6,9,15,4,0,2,4,53,34,0,0,0,"1,00",4,7,5
"org.eclipse.jdt.internal.core.hierarchy.IHierarchyRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder",44,10,21,31,44,1,2,2,397,324,0,6,3,"5,55",4,57,61
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue",2,3,3,6,1,0,0,1,32,29,0,0,0,"2,33",2,3,7
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder",19,5,19,24,19,1,1,1,162,140,0,9,0,"4,43",1,27,31
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy",18,20,102,122,17,1,2,3,111,83,0,44,4,"2,67",3,25,24
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy",42,33,98,131,33,0,2,1,1.416,1.097,1,0,0,"3,65",48,126,274
"org.eclipse.jdt.internal.core.index.DiskIndex",12,15,27,42,12,0,0,1,711,683,0,0,0,"6,93",10,53,187
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList",2,2,3,5,1,0,0,1,21,21,0,0,0,"1,67",1,3,5
"org.eclipse.jdt.internal.core.index.EntryResult",13,3,6,9,5,0,0,1,49,49,0,0,0,"2,50",3,11,15
"org.eclipse.jdt.internal.core.index.Index",32,4,13,17,12,0,0,3,152,114,0,0,0,"2,85",7,35,37
"org.eclipse.jdt.internal.core.index.MemoryIndex",10,3,7,10,9,0,0,1,87,83,0,0,0,"3,86",2,21,27
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder",12,8,18,26,10,1,1,1,187,92,2,7,0,"2,20",3,17,22
"org.eclipse.jdt.internal.core.jdom.CompilationUnit",3,3,10,13,1,0,2,4,40,32,0,0,0,"1,33",5,6,8
"org.eclipse.jdt.internal.core.jdom.DOMBuilder",27,12,67,79,26,2,2,6,669,396,0,14,2,"2,38",12,67,76
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit",17,13,93,106,13,1,3,6,165,93,0,42,6,"1,62",8,34,26
"org.eclipse.jdt.internal.core.jdom.DOMField",18,21,146,167,17,2,3,5,584,325,0,49,13,"1,83",17,88,75
"org.eclipse.jdt.internal.core.jdom.DOMImport",11,14,92,106,9,1,2,6,163,75,0,45,3,"1,29",8,28,18
"org.eclipse.jdt.internal.core.jdom.DOMInitializer",12,19,121,140,10,2,3,8,212,97,0,57,5,"1,33",8,39,24
"org.eclipse.jdt.internal.core.jdom.DOMMember",12,17,99,116,7,1,2,2,314,151,4,45,3,"1,83",8,40,33
"org.eclipse.jdt.internal.core.jdom.DOMMethod",15,30,160,190,13,2,3,6,723,412,0,54,8,"2,26",21,80,95
"org.eclipse.jdt.internal.core.jdom.DOMNode",25,24,73,97,13,0,1,2,900,463,4,0,0,"2,25",31,69,115
"org.eclipse.jdt.internal.core.jdom.DOMPackage",10,12,86,98,8,1,2,5,124,58,0,45,3,"1,27",6,25,14
"org.eclipse.jdt.internal.core.jdom.DOMType",22,32,154,186,18,2,3,7,736,425,0,53,9,"2,17",17,83,87
"org.eclipse.jdt.internal.core.jdom.ILineStartFinder",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration",3,1,3,4,1,0,0,1,39,16,0,0,0,"1,33",2,4,4
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder",23,8,69,77,22,2,2,5,195,115,0,15,1,"1,17",3,43,28
"org.eclipse.jdt.internal.core.search.AbstractSearchScope",6,0,12,12,2,0,1,5,35,13,2,0,0,"1,00",2,5,4
"org.eclipse.jdt.internal.core.search.HierarchyScope",24,10,24,34,22,1,2,1,314,267,0,4,0,"4,58",5,43,55
"org.eclipse.jdt.internal.core.search.IRestrictedAccessTypeRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.internal.core.search.IndexQueryRequestor",14,0,1,1,3,0,0,1,7,3,4,0,0,n/a,1,1,0
"org.eclipse.jdt.internal.core.search.IndexSelector",14,3,5,8,13,0,0,1,134,111,0,0,0,"5,40",3,23,27
"org.eclipse.jdt.internal.core.search.JavaSearchDocument",9,6,20,26,6,2,0,1,69,67,1,7,0,"1,78",6,13,16
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant",15,1,16,17,12,1,0,5,81,48,0,1,3,"1,86",3,23,13
"org.eclipse.jdt.internal.core.search.JavaSearchScope",25,7,29,36,21,1,1,1,405,336,1,4,0,"5,18",8,43,88
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope",12,7,38,45,10,2,1,3,112,84,0,9,6,"2,44",6,21,22
"org.eclipse.jdt.internal.core.search.PathCollector",6,1,3,4,4,1,0,1,25,15,0,0,0,"1,50",2,2,3
"org.eclipse.jdt.internal.core.search.PatternSearchJob",17,6,12,18,14,0,1,3,94,91,1,0,0,"3,12",5,18,25
"org.eclipse.jdt.internal.core.search.SearchBasicEngine",60,5,22,27,58,0,0,2,748,479,0,0,0,"4,27",12,86,128
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob",10,7,15,22,9,1,1,1,20,20,0,6,1,"2,33",1,10,7
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper",4,1,5,6,3,0,1,1,32,20,0,0,0,"1,00",0,5,3
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer",14,1,15,16,11,0,1,2,115,115,2,0,0,"2,21",1,25,31
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex",6,7,12,19,6,1,1,1,80,78,0,4,0,"4,00",2,8,20
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex",14,4,16,20,14,1,1,2,170,153,0,3,1,"6,57",5,23,46
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer",15,11,31,42,14,1,2,1,499,447,0,11,1,"8,38",11,64,134
"org.eclipse.jdt.internal.core.search.indexing.IIndexConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject",13,4,15,19,13,1,1,2,171,161,0,3,1,"6,62",5,28,53
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder",10,4,15,19,10,1,1,2,120,114,0,3,1,"4,12",5,20,33
"org.eclipse.jdt.internal.core.search.indexing.IndexManager",38,19,48,67,30,1,1,3,610,493,0,11,4,"4,24",10,80,144
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest",9,3,9,12,2,0,1,1,26,23,8,0,0,"1,00",2,7,5
"org.eclipse.jdt.internal.core.search.indexing.InternalSearchDocument",4,1,3,4,1,0,0,1,26,14,1,0,0,"1,67",1,5,5
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor",10,1,7,8,0,0,0,1,95,50,0,0,0,"2,14",2,7,15
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex",7,7,12,19,7,1,1,1,48,46,0,4,0,"4,33",2,11,13
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex",4,4,12,16,4,1,1,1,25,24,0,4,0,"2,00",2,8,6
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex",8,3,12,15,6,1,1,1,32,28,0,4,0,"2,33",2,9,7
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer",14,2,17,19,13,1,2,1,52,35,0,12,0,"2,00",0,13,4
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor",13,5,58,63,13,0,2,5,286,185,0,0,0,"1,77",1,47,55
"org.eclipse.jdt.internal.core.search.matching.AndPattern",12,8,27,35,10,3,0,1,56,47,3,19,0,"8,00",1,18,16
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator",34,0,11,11,34,0,1,1,217,204,0,0,0,"7,00",10,46,77
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory",7,5,16,21,6,1,0,1,95,91,0,1,2,"2,40",7,16,24
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator",26,3,51,54,26,1,1,2,213,193,0,20,11,"5,17",17,36,93
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern",12,19,33,52,8,3,1,1,133,126,0,14,5,"4,10",7,22,41
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfAccessedFieldsPattern",8,19,35,54,5,5,1,0,10,10,0,28,0,"1,00",0,3,1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedMethodsPattern",8,22,34,56,5,4,1,0,10,10,0,28,0,"1,00",0,3,1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedTypesPattern",8,16,39,55,5,5,1,0,10,10,0,29,0,"1,00",0,3,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator",42,4,52,56,42,2,1,3,304,280,0,26,9,"7,07",10,50,99
"org.eclipse.jdt.internal.core.search.matching.FieldPattern",11,20,35,55,6,4,1,4,97,92,1,14,7,"3,00",7,16,30
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser",5,73,402,475,5,2,7,1,21,21,0,390,4,"1,00",0,11,5
"org.eclipse.jdt.internal.core.search.matching.InternalSearchPattern",36,3,5,8,10,0,0,2,62,51,1,0,0,"3,20",3,20,16
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment",21,2,12,14,20,0,2,1,142,131,0,0,0,"3,50",5,31,28
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern",28,8,23,31,5,2,0,2,159,133,7,10,2,"4,33",7,15,39
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator",19,3,48,51,19,2,1,3,70,69,0,29,6,"3,00",8,16,30
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern",18,14,28,42,15,4,1,1,42,40,0,19,1,"3,67",1,16,11
"org.eclipse.jdt.internal.core.search.matching.MatchLocator",138,25,62,87,127,0,1,4,1.652,1.427,0,0,0,"5,83",32,267,367
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.LocalDeclarationVisitor",14,3,205,208,14,1,0,1,48,45,0,202,1,"4,00",1,10,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WorkingCopyDocument",7,7,22,29,6,3,0,0,11,11,0,10,1,"1,00",1,5,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WrappedCoreException",2,2,1,3,0,0,0,0,7,7,0,0,0,"1,00",0,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser",34,73,398,471,34,1,7,2,222,195,1,352,20,"2,29",5,66,55
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassAndMethodDeclarationVisitor",5,0,209,209,5,2,0,1,6,6,0,207,1,"1,00",1,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor",12,0,208,208,11,1,0,1,22,22,1,198,5,"1,00",5,9,5
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.MethodButNoClassDeclarationVisitor",5,0,208,208,5,2,0,1,6,6,0,206,1,"1,00",1,2,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor",10,0,207,207,8,1,0,1,17,14,1,199,4,"1,00",4,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet",23,6,8,14,9,0,0,1,135,111,0,0,0,"3,33",6,18,30
"org.eclipse.jdt.internal.core.search.matching.MethodLocator",38,5,48,53,38,1,1,1,265,230,0,22,9,"5,87",11,57,88
"org.eclipse.jdt.internal.core.search.matching.MethodPattern",14,23,34,57,9,3,1,1,170,154,1,13,5,"4,64",8,23,51
"org.eclipse.jdt.internal.core.search.matching.OrLocator",21,3,53,56,21,1,1,1,224,219,0,12,19,"3,95",14,44,79
"org.eclipse.jdt.internal.core.search.matching.OrPattern",12,5,19,24,8,2,1,2,48,47,0,9,1,"3,00",3,12,15
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator",3,3,36,39,3,1,1,1,13,13,0,29,2,"1,00",2,5,3
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern",8,9,26,35,4,3,1,2,20,19,0,18,1,"1,33",2,5,4
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator",39,3,48,51,38,1,1,3,286,260,0,20,11,"6,20",11,40,93
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern",9,12,37,49,7,4,1,5,58,53,0,15,6,"1,50",6,15,15
"org.eclipse.jdt.internal.core.search.matching.PatternLocator",60,11,36,47,53,0,1,6,607,450,9,0,0,"4,42",30,92,159
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch",18,9,15,24,17,0,2,2,113,93,0,0,0,"2,64",9,30,29
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet",9,2,3,5,8,0,0,1,36,33,0,0,0,"2,67",1,14,8
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern",9,13,37,50,7,4,1,2,72,72,0,18,4,"3,17",3,13,19
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector",47,8,8,16,46,0,0,1,214,193,0,0,0,"3,69",5,50,48
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor",12,0,210,210,12,1,0,5,36,32,0,196,7,"1,43",7,9,10
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator",15,3,40,43,15,1,1,3,64,56,0,25,6,"3,00",6,14,21
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern",13,19,32,51,8,3,1,1,206,195,0,14,5,"5,22",6,24,47
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator",14,3,39,42,14,1,1,1,66,51,0,27,4,"3,67",5,16,22
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern",15,13,32,45,8,3,1,1,206,190,1,14,5,"6,11",6,26,55
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator",48,4,55,59,48,1,1,3,506,467,0,20,11,"7,36",13,63,162
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern",10,15,38,53,7,4,1,4,83,74,1,15,6,"2,27",6,18,25
"org.eclipse.jdt.internal.core.search.matching.VariableLocator",15,3,38,41,13,1,1,1,57,54,2,28,3,"4,20",4,11,21
"org.eclipse.jdt.internal.core.search.matching.VariablePattern",8,13,25,38,2,3,0,1,23,18,2,20,0,"1,50",1,5,3
"org.eclipse.jdt.internal.core.search.processing.IJob",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.eclipse.jdt.internal.core.search.processing.JobManager",21,9,16,25,4,0,0,1,394,319,1,0,0,"4,71",6,24,80
"org.eclipse.jdt.internal.core.util.ASTNodeFinder",25,1,5,6,22,0,0,1,151,132,0,0,0,"6,83",4,16,41
"org.eclipse.jdt.internal.core.util.Annotation",12,6,21,27,8,1,1,5,75,52,0,11,0,"1,67",5,13,10
"org.eclipse.jdt.internal.core.util.AnnotationComponent",9,4,19,23,8,1,1,4,48,36,0,11,0,"1,40",4,12,7
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue",10,14,39,53,8,1,1,13,191,149,0,11,0,"2,07",14,23,31
"org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute",7,4,21,25,6,2,2,1,31,16,0,14,0,"1,00",1,4,2
"org.eclipse.jdt.internal.core.util.AnonymousFileSource",1,1,8,9,1,0,0,1,118,85,0,0,0,"2,00",7,8,16
"org.eclipse.jdt.internal.core.util.CharArrayBuffer",11,5,10,15,1,0,0,1,173,82,0,0,0,"2,60",6,10,26
"org.eclipse.jdt.internal.core.util.ClassFileAttribute",24,4,18,22,6,1,1,3,33,24,15,11,0,"1,25",3,10,5
"org.eclipse.jdt.internal.core.util.ClassFileReader",26,24,55,79,24,1,1,20,371,282,0,11,0,"2,78",22,41,64
"org.eclipse.jdt.internal.core.util.ClassFileStruct",28,0,11,11,1,0,0,8,87,84,13,0,0,"1,82",11,11,20
"org.eclipse.jdt.internal.core.util.CodeAttribute",19,17,41,58,18,2,2,9,1.129,1.093,0,14,0,"20,83",10,233,250
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil",23,1,8,9,19,0,0,1,144,138,0,0,0,"2,75",8,27,22
"org.eclipse.jdt.internal.core.util.CommentRecorderParser",15,74,388,462,11,1,7,1,225,158,1,361,11,"2,93",4,27,41
"org.eclipse.jdt.internal.core.util.CommentRecorderScanner",3,39,50,89,2,1,1,1,28,18,0,45,1,"1,50",0,4,3
"org.eclipse.jdt.internal.core.util.ConstantPool",7,3,19,22,6,1,1,2,89,77,0,11,0,"3,00",4,37,15
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry",2,20,63,83,1,0,1,1,323,170,0,0,0,"1,00",22,43,43
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute",7,5,23,28,6,2,2,2,26,17,0,14,0,"1,00",2,6,3
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor",8,13,425,438,7,0,1,1,2.045,1.427,0,0,0,"1,17",2,233,257
"org.eclipse.jdt.internal.core.util.Disassembler",42,3,48,51,41,1,0,2,1.612,1.566,1,0,0,"7,56",16,185,340
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute",8,10,33,43,7,2,2,7,85,59,0,14,0,"1,62",7,17,13
"org.eclipse.jdt.internal.core.util.ExceptionAttribute",9,8,25,33,8,2,2,3,50,38,0,14,0,"1,75",3,10,7
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry",7,5,22,27,6,1,1,5,56,37,0,11,0,"1,33",5,11,8
"org.eclipse.jdt.internal.core.util.FieldInfo",16,11,35,46,15,1,1,11,144,103,0,11,0,"1,92",12,25,25
"org.eclipse.jdt.internal.core.util.HandleFactory",37,4,7,11,32,0,0,1,292,237,0,0,0,"7,43",6,43,52
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject",6,4,13,17,2,0,0,1,139,134,0,0,0,"2,54",10,16,33
"org.eclipse.jdt.internal.core.util.ICacheEnumeration",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.core.util.ILRUCacheable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute",8,6,23,29,7,2,2,2,46,30,0,14,0,"1,67",2,6,5
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry",7,7,26,33,6,1,1,7,85,61,0,11,0,"1,75",7,14,14
"org.eclipse.jdt.internal.core.util.LRUCache",10,7,23,30,5,0,0,2,378,223,1,0,0,"1,88",13,27,49
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCacheEntry",4,6,2,8,0,0,0,0,49,16,0,0,0,"1,00",1,2,2
"org.eclipse.jdt.internal.core.util.LineNumberAttribute",6,6,23,29,5,2,2,2,49,33,0,14,0,"1,67",2,5,5
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute",8,6,23,29,7,2,2,2,48,32,0,14,0,"1,67",2,6,5
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry",7,7,26,33,6,1,1,7,82,50,0,11,0,"1,25",7,13,10
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute",8,6,23,29,7,2,2,2,48,32,0,14,0,"1,67",2,6,5
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry",7,7,26,33,6,1,1,7,82,50,0,11,0,"1,25",7,13,10
"org.eclipse.jdt.internal.core.util.MementoTokenizer",16,17,3,20,3,0,0,1,96,96,0,0,0,"7,67",2,4,23
"org.eclipse.jdt.internal.core.util.MethodInfo",23,12,41,53,22,1,1,12,182,134,0,11,0,"2,12",16,33,36
"org.eclipse.jdt.internal.core.util.ParameterAnnotation",8,4,17,21,6,1,1,3,50,33,0,11,0,"1,50",3,7,6
"org.eclipse.jdt.internal.core.util.PublicScanner",12,95,60,155,11,0,2,1,3.397,3.067,0,0,0,"16,56",32,58,795
"org.eclipse.jdt.internal.core.util.RecordedParsingInformation",6,4,2,6,3,0,0,1,22,18,0,0,0,"2,00",0,2,4
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter",3,0,7,7,0,0,0,7,48,16,3,0,0,"1,00",0,7,7
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute",10,6,23,29,7,2,2,2,49,33,0,14,0,"1,67",2,7,5
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute",8,6,23,29,7,2,2,2,49,33,0,14,0,"1,67",2,7,5
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute",10,6,23,29,7,2,2,2,49,33,0,14,0,"1,67",2,7,5
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute",8,6,23,29,7,2,2,2,49,33,0,14,0,"1,67",2,7,5
"org.eclipse.jdt.internal.core.util.SignatureAttribute",10,5,23,28,7,2,2,2,29,20,0,14,0,"1,33",2,9,4
"org.eclipse.jdt.internal.core.util.SimpleDocument",1,1,45,46,0,0,0,41,301,126,0,0,0,"1,00",26,45,45
"org.eclipse.jdt.internal.core.util.SimpleSet",17,3,8,11,1,0,0,1,87,80,0,0,0,"3,12",5,8,25
"org.eclipse.jdt.internal.core.util.SimpleWordSet",4,3,4,7,2,0,0,1,47,45,0,0,0,"3,50",2,6,14
"org.eclipse.jdt.internal.core.util.SourceFileAttribute",8,5,23,28,7,2,2,2,41,25,0,14,0,"1,33",2,9,4
"org.eclipse.jdt.internal.core.util.ToStringSorter",2,2,3,5,1,0,0,1,60,42,0,0,0,"3,33",1,3,10
"org.eclipse.jdt.internal.core.util.Util",130,7,100,107,29,0,0,29,1.877,1.319,0,0,0,"3,78",78,145,378
"org.eclipse.jdt.internal.core.util.Util.Comparable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.core.util.Util.Comparer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression",26,16,89,105,25,4,9,2,183,162,0,60,4,"7,60",1,49,38
"org.eclipse.jdt.internal.eval.CodeSnippetClassFile",23,17,57,74,22,1,6,1,190,150,0,40,0,"16,50",0,36,33
"org.eclipse.jdt.internal.eval.CodeSnippetCodeStream",24,30,320,350,17,1,7,1,459,430,0,297,0,"2,79",0,48,78
"org.eclipse.jdt.internal.eval.CodeSnippetCompiler",9,11,20,31,8,1,2,1,43,33,0,12,1,"1,00",0,4,2
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment",12,2,9,11,11,0,2,1,69,51,0,0,0,"2,20",3,17,11
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator",22,8,14,22,22,1,1,1,164,119,0,2,1,"2,71",5,30,19
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference",32,16,105,121,31,5,9,1,338,281,0,66,6,"8,29",1,57,58
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend",32,20,88,108,31,4,9,1,255,215,0,61,3,"13,50",1,62,54
"org.eclipse.jdt.internal.eval.CodeSnippetParser",45,76,412,488,44,1,8,1,645,527,0,337,35,"2,50",6,109,95
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference",40,22,127,149,39,6,9,1,549,477,0,77,10,"8,77",6,72,114
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement",21,9,56,65,20,3,8,10,108,79,0,22,6,"1,69",5,34,22
"org.eclipse.jdt.internal.eval.CodeSnippetScope",28,11,119,130,23,2,8,1,678,525,0,91,4,"12,79",11,73,179
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference",44,15,119,134,43,6,10,1,583,516,0,71,9,"11,55",4,79,127
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton",11,1,35,36,10,0,4,16,91,76,0,0,0,"1,00",17,21,18
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton",3,4,19,23,2,0,2,9,39,39,0,0,0,"1,00",9,10,10
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference",10,7,106,113,9,6,8,7,38,26,0,70,1,"1,00",4,11,8
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference",18,9,102,111,16,5,8,7,83,65,0,61,4,"1,73",6,22,19
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper",13,12,7,19,11,0,1,1,242,187,0,0,0,"2,12",5,8,36
"org.eclipse.jdt.internal.eval.CodeSnippetTypeDeclaration",12,30,71,101,11,3,8,1,59,47,0,57,1,"6,50",0,20,13
"org.eclipse.jdt.internal.eval.EvaluationConstants",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.internal.eval.EvaluationContext",41,16,19,35,29,0,2,2,509,363,0,0,0,"1,87",7,46,58
"org.eclipse.jdt.internal.eval.EvaluationResult",7,11,14,25,2,0,0,6,210,119,0,0,0,"2,07",11,16,29
"org.eclipse.jdt.internal.eval.Evaluator",18,5,7,12,16,0,0,1,139,90,2,0,0,"1,89",5,11,17
"org.eclipse.jdt.internal.eval.GlobalVariable",5,7,5,12,0,0,0,3,57,33,0,0,0,"1,20",4,5,6
"org.eclipse.jdt.internal.eval.IRequestor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.eclipse.jdt.internal.eval.InstallException",2,1,2,3,0,0,0,0,22,9,0,0,0,"1,00",0,2,2
"org.eclipse.jdt.internal.eval.VariablesEvaluator",20,6,14,20,20,1,1,1,262,207,0,2,1,"4,71",5,28,33
"org.eclipse.jdt.internal.eval.VariablesInfo",7,5,3,8,3,0,0,1,51,32,0,0,0,"2,33",2,4,7
"org.eclipse.jdt.internal.formatter.AbortFormatting",2,2,2,4,0,0,0,0,17,11,0,0,0,"1,00",0,2,2
"org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder",46,3,251,254,45,1,0,1,329,320,0,163,40,"1,50",45,49,72
"org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder",6,1,207,208,5,1,0,1,33,30,0,202,1,"1,50",3,5,6
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor",111,9,342,351,110,1,0,4,4.584,4.110,0,111,92,"6,66",112,226,926
"org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.MultiFieldDeclaration",3,19,52,71,2,4,7,0,7,7,0,34,0,"1,00",0,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter",15,6,16,22,13,1,0,1,210,204,0,0,0,"2,33",11,30,35
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions",6,230,9,239,3,0,0,1,2.102,2.097,0,0,0,"46,56",4,9,419
"org.eclipse.jdt.internal.formatter.Location",3,11,2,13,2,0,0,1,35,28,0,0,0,"1,00",0,3,2
"org.eclipse.jdt.internal.formatter.OptimizedReplaceEdit",2,3,2,5,0,0,0,0,13,13,0,0,0,"1,00",1,2,2
"org.eclipse.jdt.internal.formatter.Scribe",19,27,66,93,18,0,0,2,1.392,1.340,0,0,0,"4,95",22,86,327
"org.eclipse.jdt.internal.formatter.align.Alignment",6,36,10,46,3,0,0,2,346,246,0,0,0,"5,80",4,15,58
"org.eclipse.jdt.internal.formatter.align.AlignmentException",3,6,3,9,0,0,0,0,38,32,0,0,0,"1,67",1,3,5
"org.eclipse.jdt.internal.formatter.old.CodeFormatter",9,1,3,4,8,0,2,1,139,130,0,0,0,"11,50",1,8,23

