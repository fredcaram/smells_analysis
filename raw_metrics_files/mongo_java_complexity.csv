Complexity metrics,Sex, 27 out 2017 14:45:55 BRST
Method,ev(G),iv(G),v(G)
"DocTaglet.genLink(String)",1,2,2
"DocTaglet.inConstructor()",1,1,1
"DocTaglet.inField()",1,1,1
"DocTaglet.inMethod()",1,1,1
"DocTaglet.inOverview()",1,1,1
"DocTaglet.inPackage()",1,1,1
"DocTaglet.inType()",1,1,1
"DocTaglet.isInlineTag()",1,1,1
"DocTaglet.toString(Tag)",1,1,1
"DocTaglet.toString(Tag[])",2,2,3
"ManualTaglet.getBaseDocURI()",1,1,1
"ManualTaglet.getHeader()",1,1,1
"ManualTaglet.getName()",1,1,1
"ManualTaglet.register(Map<String, Taglet>)",1,1,1
"ServerReleaseTaglet.getBaseDocURI()",1,1,1
"ServerReleaseTaglet.getHeader()",1,1,1
"ServerReleaseTaglet.getName()",1,1,1
"ServerReleaseTaglet.register(Map<String, Taglet>)",1,1,1
"com.mongodb.AcknowledgedBulkWriteResult.AcknowledgedBulkWriteResult(int,int,int,Integer,List<BulkWriteUpsert>)",1,1,1
"com.mongodb.AcknowledgedBulkWriteResult.equals(Object)",8,3,10
"com.mongodb.AcknowledgedBulkWriteResult.getInsertedCount()",1,1,1
"com.mongodb.AcknowledgedBulkWriteResult.getMatchedCount()",1,1,1
"com.mongodb.AcknowledgedBulkWriteResult.getModifiedCount()",2,1,2
"com.mongodb.AcknowledgedBulkWriteResult.getRemovedCount()",1,1,1
"com.mongodb.AcknowledgedBulkWriteResult.getUpserts()",1,1,1
"com.mongodb.AcknowledgedBulkWriteResult.hashCode()",1,2,2
"com.mongodb.AcknowledgedBulkWriteResult.isAcknowledged()",1,1,1
"com.mongodb.AcknowledgedBulkWriteResult.isModifiedCountAvailable()",1,1,1
"com.mongodb.AcknowledgedBulkWriteResult.toString()",1,1,1
"com.mongodb.AggregateIterableImpl.AggregateIterableImpl(ClientSession,MongoNamespace,Class<TDocument>,Class<TResult>,CodecRegistry,ReadPreference,ReadConcern,WriteConcern,OperationExecutor,List<? extends Bson>)",1,1,1
"com.mongodb.AggregateIterableImpl.allowDiskUse(Boolean)",1,1,1
"com.mongodb.AggregateIterableImpl.asReadOperation()",2,4,4
"com.mongodb.AggregateIterableImpl.batchSize(int)",1,1,1
"com.mongodb.AggregateIterableImpl.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.AggregateIterableImpl.collation(Collation)",1,1,1
"com.mongodb.AggregateIterableImpl.comment(String)",1,1,1
"com.mongodb.AggregateIterableImpl.createAggregateToCollectionOperation(List<BsonDocument>)",1,2,2
"com.mongodb.AggregateIterableImpl.createBsonDocumentList(List<? extends Bson>)",3,2,3
"com.mongodb.AggregateIterableImpl.getOutCollection(List<BsonDocument>)",1,2,2
"com.mongodb.AggregateIterableImpl.hint(Bson)",1,1,1
"com.mongodb.AggregateIterableImpl.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.AggregateIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.AggregateIterableImpl.toCollection()",2,1,2
"com.mongodb.AggregateIterableImpl.useCursor(Boolean)",1,1,1
"com.mongodb.AggregationOptions.AggregationOptions(Builder)",1,1,1
"com.mongodb.AggregationOptions.Builder.Builder()",1,1,1
"com.mongodb.AggregationOptions.Builder.allowDiskUse(Boolean)",1,1,1
"com.mongodb.AggregationOptions.Builder.batchSize(Integer)",1,1,1
"com.mongodb.AggregationOptions.Builder.build()",1,1,1
"com.mongodb.AggregationOptions.Builder.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.AggregationOptions.Builder.collation(Collation)",1,1,1
"com.mongodb.AggregationOptions.Builder.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.AggregationOptions.Builder.outputMode(OutputMode)",1,1,1
"com.mongodb.AggregationOptions.builder()",1,1,1
"com.mongodb.AggregationOptions.getAllowDiskUse()",1,1,1
"com.mongodb.AggregationOptions.getBatchSize()",1,1,1
"com.mongodb.AggregationOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.AggregationOptions.getCollation()",1,1,1
"com.mongodb.AggregationOptions.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.AggregationOptions.getOutputMode()",1,1,1
"com.mongodb.AggregationOptions.toString()",1,1,1
"com.mongodb.AggregationOutput.AggregationOutput(List<DBObject>)",1,1,1
"com.mongodb.AggregationOutput.results()",1,1,1
"com.mongodb.AuthenticationMechanism.AuthenticationMechanism(String)",1,1,1
"com.mongodb.AuthenticationMechanism.fromMechanismName(String)",2,1,2
"com.mongodb.AuthenticationMechanism.getMechanismName()",1,1,1
"com.mongodb.AuthenticationMechanism.toString()",1,1,1
"com.mongodb.BSONTimestampCodec.decode(BsonReader,DecoderContext)",1,1,1
"com.mongodb.BSONTimestampCodec.encode(BsonWriter,BSONTimestamp,EncoderContext)",1,1,1
"com.mongodb.BSONTimestampCodec.getEncoderClass()",1,1,1
"com.mongodb.BasicDBList.copy()",1,4,4
"com.mongodb.BasicDBList.isPartialObject()",1,1,1
"com.mongodb.BasicDBList.markAsPartialObject()",1,1,1
"com.mongodb.BasicDBList.toString()",1,1,1
"com.mongodb.BasicDBObject.BasicDBObject()",1,1,1
"com.mongodb.BasicDBObject.BasicDBObject(Map)",1,1,1
"com.mongodb.BasicDBObject.BasicDBObject(String,Object)",1,1,1
"com.mongodb.BasicDBObject.BasicDBObject(int)",1,1,1
"com.mongodb.BasicDBObject.append(String,Object)",1,1,1
"com.mongodb.BasicDBObject.copy()",1,4,4
"com.mongodb.BasicDBObject.isPartialObject()",1,1,1
"com.mongodb.BasicDBObject.markAsPartialObject()",1,1,1
"com.mongodb.BasicDBObject.parse(String)",1,1,1
"com.mongodb.BasicDBObject.parse(String,Decoder<BasicDBObject>)",1,1,1
"com.mongodb.BasicDBObject.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.BasicDBObject.toJson()",1,1,1
"com.mongodb.BasicDBObject.toJson(Encoder<BasicDBObject>)",1,1,1
"com.mongodb.BasicDBObject.toJson(JsonWriterSettings)",1,1,1
"com.mongodb.BasicDBObject.toJson(JsonWriterSettings,Encoder<BasicDBObject>)",1,1,1
"com.mongodb.BasicDBObject.toString()",1,1,1
"com.mongodb.BasicDBObjectBuilder.BasicDBObjectBuilder()",1,1,1
"com.mongodb.BasicDBObjectBuilder._cur()",1,1,1
"com.mongodb.BasicDBObjectBuilder.add(String,Object)",1,1,1
"com.mongodb.BasicDBObjectBuilder.append(String,Object)",1,1,1
"com.mongodb.BasicDBObjectBuilder.get()",1,1,1
"com.mongodb.BasicDBObjectBuilder.isEmpty()",1,1,1
"com.mongodb.BasicDBObjectBuilder.pop()",2,1,2
"com.mongodb.BasicDBObjectBuilder.push(String)",1,1,1
"com.mongodb.BasicDBObjectBuilder.start()",1,1,1
"com.mongodb.BasicDBObjectBuilder.start(Map)",1,2,2
"com.mongodb.BasicDBObjectBuilder.start(String,Object)",1,1,1
"com.mongodb.BasicDBObjectFactory.getInstance()",1,1,1
"com.mongodb.BasicDBObjectFactory.getInstance(List<String>)",1,1,1
"com.mongodb.BulkUpdateRequestBuilder.BulkUpdateRequestBuilder(BulkWriteOperation,DBObject,boolean,Encoder<DBObject>,Encoder<DBObject>,Collation,List<? extends DBObject>)",1,1,1
"com.mongodb.BulkUpdateRequestBuilder.collation(Collation)",1,1,1
"com.mongodb.BulkUpdateRequestBuilder.getArrayFilters()",1,1,1
"com.mongodb.BulkUpdateRequestBuilder.getCollation()",1,1,1
"com.mongodb.BulkUpdateRequestBuilder.replaceOne(DBObject)",1,1,1
"com.mongodb.BulkUpdateRequestBuilder.update(DBObject)",1,1,1
"com.mongodb.BulkUpdateRequestBuilder.updateOne(DBObject)",1,1,1
"com.mongodb.BulkWriteError.BulkWriteError(int,String,DBObject,int)",1,1,1
"com.mongodb.BulkWriteError.equals(Object)",7,2,8
"com.mongodb.BulkWriteError.getCode()",1,1,1
"com.mongodb.BulkWriteError.getDetails()",1,1,1
"com.mongodb.BulkWriteError.getIndex()",1,1,1
"com.mongodb.BulkWriteError.getMessage()",1,1,1
"com.mongodb.BulkWriteError.hashCode()",1,1,1
"com.mongodb.BulkWriteError.toString()",1,1,1
"com.mongodb.BulkWriteException.BulkWriteException(BulkWriteResult,List<BulkWriteError>,WriteConcernError,ServerAddress)",1,1,3
"com.mongodb.BulkWriteException.equals(Object)",7,3,9
"com.mongodb.BulkWriteException.getWriteConcernError()",1,1,1
"com.mongodb.BulkWriteException.getWriteErrors()",1,1,1
"com.mongodb.BulkWriteException.getWriteResult()",1,1,1
"com.mongodb.BulkWriteException.hashCode()",1,2,2
"com.mongodb.BulkWriteHelper.BulkWriteHelper()",1,1,1
"com.mongodb.BulkWriteHelper.getUpsertedId(BulkWriteUpsert,Decoder<DBObject>)",1,1,1
"com.mongodb.BulkWriteHelper.translateBulkWriteException(MongoBulkWriteException,Decoder<DBObject>)",1,1,1
"com.mongodb.BulkWriteHelper.translateBulkWriteResult(BulkWriteResult,Decoder<DBObject>)",2,3,3
"com.mongodb.BulkWriteHelper.translateBulkWriteUpserts(List<BulkWriteUpsert>,Decoder<DBObject>)",1,2,2
"com.mongodb.BulkWriteHelper.translateWriteConcernError(WriteConcernError)",1,2,2
"com.mongodb.BulkWriteHelper.translateWriteErrors(List<BulkWriteError>)",1,2,2
"com.mongodb.BulkWriteOperation.BulkWriteOperation(boolean,DBCollection)",1,1,1
"com.mongodb.BulkWriteOperation.addRequest(WriteRequest)",1,1,1
"com.mongodb.BulkWriteOperation.execute()",1,1,1
"com.mongodb.BulkWriteOperation.execute(WriteConcern)",1,1,1
"com.mongodb.BulkWriteOperation.find(DBObject)",1,1,1
"com.mongodb.BulkWriteOperation.getBypassDocumentValidation()",1,1,1
"com.mongodb.BulkWriteOperation.insert(DBObject)",1,2,2
"com.mongodb.BulkWriteOperation.isOrdered()",1,1,1
"com.mongodb.BulkWriteOperation.setBypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.BulkWriteRequestBuilder.BulkWriteRequestBuilder(BulkWriteOperation,DBObject,Encoder<DBObject>,Encoder<DBObject>)",1,1,1
"com.mongodb.BulkWriteRequestBuilder.arrayFilters(List<? extends DBObject>)",1,1,1
"com.mongodb.BulkWriteRequestBuilder.collation(Collation)",1,1,1
"com.mongodb.BulkWriteRequestBuilder.getCollation()",1,1,1
"com.mongodb.BulkWriteRequestBuilder.remove()",1,1,1
"com.mongodb.BulkWriteRequestBuilder.removeOne()",1,1,1
"com.mongodb.BulkWriteRequestBuilder.replaceOne(DBObject)",1,1,1
"com.mongodb.BulkWriteRequestBuilder.update(DBObject)",1,1,1
"com.mongodb.BulkWriteRequestBuilder.updateOne(DBObject)",1,1,1
"com.mongodb.BulkWriteRequestBuilder.upsert()",1,1,1
"com.mongodb.BulkWriteUpsert.BulkWriteUpsert(int,Object)",1,1,1
"com.mongodb.BulkWriteUpsert.equals(Object)",5,2,6
"com.mongodb.BulkWriteUpsert.getId()",1,1,1
"com.mongodb.BulkWriteUpsert.getIndex()",1,1,1
"com.mongodb.BulkWriteUpsert.hashCode()",1,1,1
"com.mongodb.BulkWriteUpsert.toString()",1,1,1
"com.mongodb.Bytes.OptionHolder.OptionHolder(OptionHolder)",1,1,1
"com.mongodb.Bytes.OptionHolder.add(int)",1,1,1
"com.mongodb.Bytes.OptionHolder.get()",3,1,3
"com.mongodb.Bytes.OptionHolder.reset()",1,1,1
"com.mongodb.Bytes.OptionHolder.set(int)",1,1,1
"com.mongodb.Bytes.getType(Object)",16,1,21
"com.mongodb.ChangeStreamIterableImpl.ChangeStreamIterableImpl(ClientSession,MongoNamespace,CodecRegistry,ReadPreference,ReadConcern,OperationExecutor,List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.ChangeStreamIterableImpl.asReadOperation()",1,1,1
"com.mongodb.ChangeStreamIterableImpl.batchSize(int)",1,1,1
"com.mongodb.ChangeStreamIterableImpl.collation(Collation)",1,1,1
"com.mongodb.ChangeStreamIterableImpl.createBsonDocumentList(List<? extends Bson>)",3,2,3
"com.mongodb.ChangeStreamIterableImpl.createChangeStreamOperation(Codec<S>)",1,2,2
"com.mongodb.ChangeStreamIterableImpl.fullDocument(FullDocument)",1,1,1
"com.mongodb.ChangeStreamIterableImpl.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.ChangeStreamIterableImpl.resumeAfter(BsonDocument)",1,1,1
"com.mongodb.ChangeStreamIterableImpl.withDocumentClass(Class<TDocument>)",1,1,1
"com.mongodb.ClientSessionBinding.ClientSessionBinding(ClientSession,boolean,ReadWriteBinding)",1,1,1
"com.mongodb.ClientSessionBinding.SessionBindingConnectionSource.SessionBindingConnectionSource(ConnectionSource)",1,1,1
"com.mongodb.ClientSessionBinding.SessionBindingConnectionSource.getConnection()",1,1,1
"com.mongodb.ClientSessionBinding.SessionBindingConnectionSource.getCount()",1,1,1
"com.mongodb.ClientSessionBinding.SessionBindingConnectionSource.getServerDescription()",1,1,1
"com.mongodb.ClientSessionBinding.SessionBindingConnectionSource.getSessionContext()",1,1,1
"com.mongodb.ClientSessionBinding.SessionBindingConnectionSource.release()",1,1,1
"com.mongodb.ClientSessionBinding.SessionBindingConnectionSource.retain()",1,1,1
"com.mongodb.ClientSessionBinding.closeSessionIfCountIsZero()",1,3,3
"com.mongodb.ClientSessionBinding.getCount()",1,1,1
"com.mongodb.ClientSessionBinding.getReadConnectionSource()",1,1,1
"com.mongodb.ClientSessionBinding.getReadPreference()",1,1,1
"com.mongodb.ClientSessionBinding.getSessionContext()",1,1,1
"com.mongodb.ClientSessionBinding.getWriteConnectionSource()",1,1,1
"com.mongodb.ClientSessionBinding.release()",1,1,1
"com.mongodb.ClientSessionBinding.retain()",1,1,1
"com.mongodb.ClientSessionContext.ClientSessionContext(ClientSession)",1,1,1
"com.mongodb.ClientSessionContext.advanceClusterTime(BsonDocument)",1,1,1
"com.mongodb.ClientSessionContext.advanceOperationTime(BsonTimestamp)",1,1,1
"com.mongodb.ClientSessionContext.advanceTransactionNumber()",1,1,1
"com.mongodb.ClientSessionContext.getClientSession()",1,1,1
"com.mongodb.ClientSessionContext.getClusterTime()",1,1,1
"com.mongodb.ClientSessionContext.getOperationTime()",1,1,1
"com.mongodb.ClientSessionContext.getSessionId()",1,1,1
"com.mongodb.ClientSessionContext.hasSession()",1,1,1
"com.mongodb.ClientSessionContext.isCausallyConsistent()",1,1,1
"com.mongodb.ClientSessionOptions.Builder.Builder()",1,1,1
"com.mongodb.ClientSessionOptions.Builder.build()",1,1,1
"com.mongodb.ClientSessionOptions.Builder.causallyConsistent(boolean)",1,1,1
"com.mongodb.ClientSessionOptions.Builder.initialClusterTime(BsonDocument)",1,1,1
"com.mongodb.ClientSessionOptions.Builder.initialOperationTime(BsonTimestamp)",1,1,1
"com.mongodb.ClientSessionOptions.ClientSessionOptions(Builder)",1,1,1
"com.mongodb.ClientSessionOptions.builder()",1,1,1
"com.mongodb.ClientSessionOptions.getInitialClusterTime()",1,1,1
"com.mongodb.ClientSessionOptions.getInitialOperationTime()",1,1,1
"com.mongodb.ClientSessionOptions.isCausallyConsistent()",1,1,1
"com.mongodb.CommandResult.CommandResult(BsonDocument)",1,1,1
"com.mongodb.CommandResult.CommandResult(BsonDocument,ServerAddress)",1,1,1
"com.mongodb.CommandResult.getErrorMessage()",2,1,2
"com.mongodb.CommandResult.getException()",2,1,2
"com.mongodb.CommandResult.ok()",3,3,3
"com.mongodb.CommandResult.throwOnError()",2,2,2
"com.mongodb.CompoundDBObjectCodec.CompoundDBObjectCodec(Codec<DBObject>)",1,1,1
"com.mongodb.CompoundDBObjectCodec.CompoundDBObjectCodec(Encoder<DBObject>,Decoder<DBObject>)",1,1,1
"com.mongodb.CompoundDBObjectCodec.decode(BsonReader,DecoderContext)",1,1,1
"com.mongodb.CompoundDBObjectCodec.encode(BsonWriter,DBObject,EncoderContext)",1,1,1
"com.mongodb.CompoundDBObjectCodec.getDecoder()",1,1,1
"com.mongodb.CompoundDBObjectCodec.getEncoder()",1,1,1
"com.mongodb.CompoundDBObjectCodec.getEncoderClass()",1,1,1
"com.mongodb.ConnectionString.ConnectionString(String)",6,9,11
"com.mongodb.ConnectionString.buildCompressors(String,Integer)",5,5,6
"com.mongodb.ConnectionString.buildReadPreference(String,List<TagSet>,long)",5,6,7
"com.mongodb.ConnectionString.buildWriteConcern(Boolean,String,Integer,Boolean,Boolean)",2,6,12
"com.mongodb.ConnectionString.countOccurrences(String,String)",1,1,1
"com.mongodb.ConnectionString.createCompressors(Map<String, List<String>>)",3,4,5
"com.mongodb.ConnectionString.createCredentials(Map<String, List<String>>,String,char[])",8,13,22
"com.mongodb.ConnectionString.createReadPreference(Map<String, List<String>>)",3,6,7
"com.mongodb.ConnectionString.createWriteConcern(Map<String, List<String>>)",3,7,8
"com.mongodb.ConnectionString.equals(Object)",21,17,37
"com.mongodb.ConnectionString.getApplicationName()",1,1,1
"com.mongodb.ConnectionString.getCollection()",1,1,1
"com.mongodb.ConnectionString.getCompressorList()",1,1,1
"com.mongodb.ConnectionString.getConnectTimeout()",1,1,1
"com.mongodb.ConnectionString.getConnectionString()",1,1,1
"com.mongodb.ConnectionString.getCredentialList()",1,2,2
"com.mongodb.ConnectionString.getDatabase()",1,1,1
"com.mongodb.ConnectionString.getHeartbeatFrequency()",1,1,1
"com.mongodb.ConnectionString.getHosts()",1,1,1
"com.mongodb.ConnectionString.getLastValue(Map<String, List<String>>,String)",2,1,2
"com.mongodb.ConnectionString.getLocalThreshold()",1,1,1
"com.mongodb.ConnectionString.getMaxConnectionIdleTime()",1,1,1
"com.mongodb.ConnectionString.getMaxConnectionLifeTime()",1,1,1
"com.mongodb.ConnectionString.getMaxConnectionPoolSize()",1,1,1
"com.mongodb.ConnectionString.getMaxWaitTime()",1,1,1
"com.mongodb.ConnectionString.getMinConnectionPoolSize()",1,1,1
"com.mongodb.ConnectionString.getPassword()",1,2,2
"com.mongodb.ConnectionString.getReadConcern()",1,1,1
"com.mongodb.ConnectionString.getReadPreference()",1,1,1
"com.mongodb.ConnectionString.getRequiredReplicaSetName()",1,1,1
"com.mongodb.ConnectionString.getServerSelectionTimeout()",1,1,1
"com.mongodb.ConnectionString.getSocketTimeout()",1,1,1
"com.mongodb.ConnectionString.getSslEnabled()",1,1,1
"com.mongodb.ConnectionString.getSslInvalidHostnameAllowed()",1,1,1
"com.mongodb.ConnectionString.getStreamType()",1,1,1
"com.mongodb.ConnectionString.getTags(String)",4,4,4
"com.mongodb.ConnectionString.getThreadsAllowedToBlockForConnectionMultiplier()",1,1,1
"com.mongodb.ConnectionString.getURI()",1,1,1
"com.mongodb.ConnectionString.getUsername()",1,2,2
"com.mongodb.ConnectionString.getWriteConcern()",1,1,1
"com.mongodb.ConnectionString.hashCode()",1,17,17
"com.mongodb.ConnectionString.parseBoolean(String,String)",1,7,7
"com.mongodb.ConnectionString.parseHosts(List<String>)",8,9,10
"com.mongodb.ConnectionString.parseInteger(String,String)",1,2,2
"com.mongodb.ConnectionString.parseOptions(String)",5,12,16
"com.mongodb.ConnectionString.toString()",1,1,1
"com.mongodb.ConnectionString.translateOptions(Map<String, List<String>>)",3,20,22
"com.mongodb.ConnectionString.urldecode(String)",1,1,1
"com.mongodb.ConnectionString.urldecode(String,boolean)",2,3,3
"com.mongodb.ConnectionString.validatePort(String,String)",2,2,5
"com.mongodb.ConnectionString.warnOnUnsupportedOptions(Map<String, List<String>>)",1,4,4
"com.mongodb.DB.DB(Mongo,String)",1,1,1
"com.mongodb.DB.DB(Mongo,String,OperationExecutor)",1,1,1
"com.mongodb.DB.addOption(int)",1,1,1
"com.mongodb.DB.addUser(String,char[])",1,1,1
"com.mongodb.DB.addUser(String,char[],boolean)",3,4,5
"com.mongodb.DB.collectionExists(String)",3,2,3
"com.mongodb.DB.command(DBObject)",1,1,1
"com.mongodb.DB.command(DBObject,DBEncoder)",1,1,1
"com.mongodb.DB.command(DBObject,ReadPreference)",1,1,1
"com.mongodb.DB.command(DBObject,ReadPreference,DBEncoder)",1,2,2
"com.mongodb.DB.command(String)",1,1,1
"com.mongodb.DB.command(String,ReadPreference)",1,1,1
"com.mongodb.DB.createCollection(String,DBObject)",2,3,3
"com.mongodb.DB.createView(String,String,List<? extends DBObject>)",1,1,1
"com.mongodb.DB.createView(String,String,List<? extends DBObject>,DBCreateViewOptions)",1,2,2
"com.mongodb.DB.doEval(String,Object...)",1,1,1
"com.mongodb.DB.doGetCollection(String)",1,1,1
"com.mongodb.DB.dropDatabase()",1,2,2
"com.mongodb.DB.eval(String,Object...)",1,1,1
"com.mongodb.DB.executeCommand(BsonDocument)",1,1,1
"com.mongodb.DB.executeCommand(BsonDocument,ReadPreference)",1,1,1
"com.mongodb.DB.getBufferPool()",1,1,1
"com.mongodb.DB.getCollection(String)",2,3,5
"com.mongodb.DB.getCollectionFromString(String)",1,1,1
"com.mongodb.DB.getCollectionNames()",1,1,1
"com.mongodb.DB.getCommandReadPreference(DBObject,ReadPreference)",3,3,3
"com.mongodb.DB.getCreateCollectionOperation(String,DBObject)",10,20,29
"com.mongodb.DB.getExecutor()",1,1,1
"com.mongodb.DB.getMongo()",1,1,1
"com.mongodb.DB.getName()",1,1,1
"com.mongodb.DB.getOptionHolder()",1,1,1
"com.mongodb.DB.getOptions()",1,1,1
"com.mongodb.DB.getReadConcern()",1,2,2
"com.mongodb.DB.getReadPreference()",1,2,2
"com.mongodb.DB.getSisterDB(String)",1,1,1
"com.mongodb.DB.getStats()",1,1,1
"com.mongodb.DB.getWriteConcern()",1,2,2
"com.mongodb.DB.removeUser(String)",1,2,2
"com.mongodb.DB.resetOptions()",1,1,1
"com.mongodb.DB.setOptions(int)",1,1,1
"com.mongodb.DB.setReadConcern(ReadConcern)",1,1,1
"com.mongodb.DB.setReadPreference(ReadPreference)",1,1,1
"com.mongodb.DB.setWriteConcern(WriteConcern)",1,1,1
"com.mongodb.DB.slaveOk()",1,1,1
"com.mongodb.DB.toString()",1,1,1
"com.mongodb.DB.wrap(DBObject)",1,1,1
"com.mongodb.DB.wrap(DBObject,DBEncoder)",2,2,2
"com.mongodb.DBAddress.DBAddress(DBAddress,String)",1,1,1
"com.mongodb.DBAddress.DBAddress(InetAddress,int,String)",1,1,1
"com.mongodb.DBAddress.DBAddress(String)",1,1,1
"com.mongodb.DBAddress.DBAddress(String,String)",1,1,1
"com.mongodb.DBAddress.DBAddress(String,int,String)",1,1,1
"com.mongodb.DBAddress._check(String,String)",3,1,3
"com.mongodb.DBAddress._fixName(String)",1,1,1
"com.mongodb.DBAddress._getDBSection(String)",3,2,3
"com.mongodb.DBAddress._getHostSection(String)",3,2,3
"com.mongodb.DBAddress.equals(Object)",3,5,5
"com.mongodb.DBAddress.getDBName()",1,1,1
"com.mongodb.DBAddress.getSister(String)",1,1,1
"com.mongodb.DBAddress.hashCode()",1,1,1
"com.mongodb.DBAddress.toString()",1,1,1
"com.mongodb.DBCollection.DBCollection(DB,String)",1,1,1
"com.mongodb.DBCollection.DBCollection(String,DB,OperationExecutor)",1,1,1
"com.mongodb.DBCollection.addOption(int)",1,1,1
"com.mongodb.DBCollection.aggregate(DBObject,DBObject...)",1,1,1
"com.mongodb.DBCollection.aggregate(List<? extends DBObject>)",1,1,1
"com.mongodb.DBCollection.aggregate(List<? extends DBObject>,AggregationOptions)",1,1,1
"com.mongodb.DBCollection.aggregate(List<? extends DBObject>,AggregationOptions,ReadPreference)",1,1,1
"com.mongodb.DBCollection.aggregate(List<? extends DBObject>,AggregationOptions,ReadPreference,boolean)",4,4,5
"com.mongodb.DBCollection.aggregate(List<? extends DBObject>,ReadPreference)",2,3,3
"com.mongodb.DBCollection.convertOptionsToType(DBObject,String,Class<T>)",1,1,1
"com.mongodb.DBCollection.convertToType(Class<T>,Object,String)",2,10,11
"com.mongodb.DBCollection.count()",1,1,1
"com.mongodb.DBCollection.count(DBObject)",1,1,1
"com.mongodb.DBCollection.count(DBObject,DBCollectionCountOptions)",1,1,1
"com.mongodb.DBCollection.count(DBObject,ReadPreference)",1,1,1
"com.mongodb.DBCollection.createIndex(DBObject)",1,1,1
"com.mongodb.DBCollection.createIndex(DBObject,DBObject)",1,2,2
"com.mongodb.DBCollection.createIndex(DBObject,String)",1,1,1
"com.mongodb.DBCollection.createIndex(DBObject,String,boolean)",1,4,4
"com.mongodb.DBCollection.createIndex(String)",1,1,1
"com.mongodb.DBCollection.createIndexOperation(DBObject,DBObject)",1,20,20
"com.mongodb.DBCollection.createWriteConcernException(MongoWriteConcernException)",1,1,1
"com.mongodb.DBCollection.distinct(String)",1,1,1
"com.mongodb.DBCollection.distinct(String,DBCollectionDistinctOptions)",2,3,4
"com.mongodb.DBCollection.distinct(String,DBObject)",1,1,1
"com.mongodb.DBCollection.distinct(String,DBObject,ReadPreference)",1,1,1
"com.mongodb.DBCollection.distinct(String,ReadPreference)",1,1,1
"com.mongodb.DBCollection.drop()",1,2,2
"com.mongodb.DBCollection.dropIndex(DBObject)",1,1,1
"com.mongodb.DBCollection.dropIndex(String)",1,2,2
"com.mongodb.DBCollection.dropIndexes()",1,1,1
"com.mongodb.DBCollection.dropIndexes(String)",1,1,1
"com.mongodb.DBCollection.executeBulkWriteOperation(boolean,Boolean,List<WriteRequest>)",1,1,1
"com.mongodb.DBCollection.executeBulkWriteOperation(boolean,Boolean,List<WriteRequest>,WriteConcern)",1,2,2
"com.mongodb.DBCollection.executeWriteOperation(BaseWriteOperation)",1,1,1
"com.mongodb.DBCollection.explainAggregate(List<? extends DBObject>,AggregationOptions)",1,1,1
"com.mongodb.DBCollection.find()",1,1,1
"com.mongodb.DBCollection.find(DBObject)",1,1,1
"com.mongodb.DBCollection.find(DBObject,DBCollectionFindOptions)",1,1,1
"com.mongodb.DBCollection.find(DBObject,DBObject)",1,1,1
"com.mongodb.DBCollection.find(DBObject,DBObject,int,int)",1,1,1
"com.mongodb.DBCollection.find(DBObject,DBObject,int,int,int)",1,1,1
"com.mongodb.DBCollection.findAndModify(DBObject,DBCollectionFindAndModifyOptions)",1,6,6
"com.mongodb.DBCollection.findAndModify(DBObject,DBObject)",1,1,1
"com.mongodb.DBCollection.findAndModify(DBObject,DBObject,DBObject)",1,1,1
"com.mongodb.DBCollection.findAndModify(DBObject,DBObject,DBObject,boolean,DBObject,boolean,boolean)",1,1,1
"com.mongodb.DBCollection.findAndModify(DBObject,DBObject,DBObject,boolean,DBObject,boolean,boolean,WriteConcern)",1,1,1
"com.mongodb.DBCollection.findAndModify(DBObject,DBObject,DBObject,boolean,DBObject,boolean,boolean,boolean,long,TimeUnit)",1,1,1
"com.mongodb.DBCollection.findAndModify(DBObject,DBObject,DBObject,boolean,DBObject,boolean,boolean,boolean,long,TimeUnit,WriteConcern)",1,1,2
"com.mongodb.DBCollection.findAndModify(DBObject,DBObject,DBObject,boolean,DBObject,boolean,boolean,long,TimeUnit)",1,1,1
"com.mongodb.DBCollection.findAndModify(DBObject,DBObject,DBObject,boolean,DBObject,boolean,boolean,long,TimeUnit,WriteConcern)",1,1,2
"com.mongodb.DBCollection.findAndRemove(DBObject)",1,1,1
"com.mongodb.DBCollection.findOne()",1,1,1
"com.mongodb.DBCollection.findOne(DBObject)",1,1,1
"com.mongodb.DBCollection.findOne(DBObject,DBCollectionFindOptions)",1,1,1
"com.mongodb.DBCollection.findOne(DBObject,DBObject)",1,1,1
"com.mongodb.DBCollection.findOne(DBObject,DBObject,DBObject)",1,1,1
"com.mongodb.DBCollection.findOne(DBObject,DBObject,DBObject,ReadPreference)",1,1,2
"com.mongodb.DBCollection.findOne(DBObject,DBObject,ReadPreference)",1,1,1
"com.mongodb.DBCollection.findOne(Object)",1,1,1
"com.mongodb.DBCollection.findOne(Object,DBObject)",1,1,1
"com.mongodb.DBCollection.getBufferPool()",1,1,1
"com.mongodb.DBCollection.getCollection(String)",1,1,1
"com.mongodb.DBCollection.getCount()",1,1,1
"com.mongodb.DBCollection.getCount(DBObject)",1,1,1
"com.mongodb.DBCollection.getCount(DBObject,DBCollectionCountOptions)",1,6,6
"com.mongodb.DBCollection.getCount(DBObject,DBObject)",1,1,1
"com.mongodb.DBCollection.getCount(DBObject,DBObject,ReadPreference)",1,1,1
"com.mongodb.DBCollection.getCount(DBObject,DBObject,long,long)",1,1,1
"com.mongodb.DBCollection.getCount(DBObject,DBObject,long,long,ReadPreference)",1,1,1
"com.mongodb.DBCollection.getCount(ReadPreference)",1,1,1
"com.mongodb.DBCollection.getDB()",1,1,1
"com.mongodb.DBCollection.getDBDecoderFactory()",1,1,1
"com.mongodb.DBCollection.getDBEncoderFactory()",1,1,1
"com.mongodb.DBCollection.getDefaultDBObjectCodec()",1,1,1
"com.mongodb.DBCollection.getExecutor()",1,1,1
"com.mongodb.DBCollection.getFullName()",1,1,1
"com.mongodb.DBCollection.getHintFields()",1,1,1
"com.mongodb.DBCollection.getIndexInfo()",1,1,1
"com.mongodb.DBCollection.getIndexNameFromIndexFields(DBObject)",6,5,7
"com.mongodb.DBCollection.getInternalClass(String)",1,1,1
"com.mongodb.DBCollection.getMapReduceOutputCollection(MapReduceCommand)",1,2,2
"com.mongodb.DBCollection.getName()",1,1,1
"com.mongodb.DBCollection.getNamespace()",1,1,1
"com.mongodb.DBCollection.getObjectClass()",1,1,1
"com.mongodb.DBCollection.getObjectCodec()",1,1,1
"com.mongodb.DBCollection.getObjectFactory()",1,1,1
"com.mongodb.DBCollection.getOptions()",1,1,1
"com.mongodb.DBCollection.getReadConcern()",2,1,2
"com.mongodb.DBCollection.getReadPreference()",2,1,2
"com.mongodb.DBCollection.getStats()",1,1,1
"com.mongodb.DBCollection.getWriteConcern()",2,1,2
"com.mongodb.DBCollection.group(DBObject,DBObject,DBObject,String)",1,1,1
"com.mongodb.DBCollection.group(DBObject,DBObject,DBObject,String,String)",1,1,1
"com.mongodb.DBCollection.group(DBObject,DBObject,DBObject,String,String,ReadPreference)",1,1,1
"com.mongodb.DBCollection.group(GroupCommand)",1,1,1
"com.mongodb.DBCollection.group(GroupCommand,ReadPreference)",1,1,1
"com.mongodb.DBCollection.initializeOrderedBulkOperation()",1,1,1
"com.mongodb.DBCollection.initializeUnorderedBulkOperation()",1,1,1
"com.mongodb.DBCollection.insert(DBObject,WriteConcern)",1,1,1
"com.mongodb.DBCollection.insert(DBObject...)",1,1,1
"com.mongodb.DBCollection.insert(DBObject[],WriteConcern)",1,1,1
"com.mongodb.DBCollection.insert(DBObject[],WriteConcern,DBEncoder)",1,1,1
"com.mongodb.DBCollection.insert(List<? extends DBObject>)",1,1,1
"com.mongodb.DBCollection.insert(List<? extends DBObject>,InsertOptions)",1,4,4
"com.mongodb.DBCollection.insert(List<? extends DBObject>,WriteConcern)",1,1,1
"com.mongodb.DBCollection.insert(List<? extends DBObject>,WriteConcern,DBEncoder)",1,1,1
"com.mongodb.DBCollection.insert(List<InsertRequest>,WriteConcern,boolean,Boolean)",1,1,1
"com.mongodb.DBCollection.insert(WriteConcern,DBObject...)",1,1,1
"com.mongodb.DBCollection.isCapped()",1,3,3
"com.mongodb.DBCollection.mapReduce(MapReduceCommand)",3,11,14
"com.mongodb.DBCollection.mapReduce(String,String,String,DBObject)",1,1,1
"com.mongodb.DBCollection.mapReduce(String,String,String,OutputType,DBObject)",1,1,1
"com.mongodb.DBCollection.mapReduce(String,String,String,OutputType,DBObject,ReadPreference)",1,1,1
"com.mongodb.DBCollection.parallelScan(ParallelScanOptions)",1,3,3
"com.mongodb.DBCollection.preparePipeline(List<? extends DBObject>)",1,2,2
"com.mongodb.DBCollection.remove(DBObject)",1,1,1
"com.mongodb.DBCollection.remove(DBObject,DBCollectionRemoveOptions)",1,2,2
"com.mongodb.DBCollection.remove(DBObject,WriteConcern)",1,1,1
"com.mongodb.DBCollection.remove(DBObject,WriteConcern,DBEncoder)",1,1,1
"com.mongodb.DBCollection.rename(String)",1,1,1
"com.mongodb.DBCollection.rename(String,boolean)",1,2,2
"com.mongodb.DBCollection.replaceOrInsert(DBObject,Object,WriteConcern)",1,1,1
"com.mongodb.DBCollection.resetOptions()",1,1,1
"com.mongodb.DBCollection.save(DBObject)",1,1,1
"com.mongodb.DBCollection.save(DBObject,WriteConcern)",2,2,2
"com.mongodb.DBCollection.setDBDecoderFactory(DBDecoderFactory)",1,2,3
"com.mongodb.DBCollection.setDBEncoderFactory(DBEncoderFactory)",1,2,3
"com.mongodb.DBCollection.setHintFields(List<? extends DBObject>)",1,1,1
"com.mongodb.DBCollection.setInternalClass(String,Class<? extends DBObject>)",1,1,1
"com.mongodb.DBCollection.setObjectClass(Class<? extends DBObject>)",1,1,1
"com.mongodb.DBCollection.setObjectFactory(DBCollectionObjectFactory)",1,1,1
"com.mongodb.DBCollection.setOptions(int)",1,1,1
"com.mongodb.DBCollection.setReadConcern(ReadConcern)",1,1,1
"com.mongodb.DBCollection.setReadPreference(ReadPreference)",1,1,1
"com.mongodb.DBCollection.setWriteConcern(WriteConcern)",1,1,1
"com.mongodb.DBCollection.slaveOk()",1,1,1
"com.mongodb.DBCollection.toDBList(BatchCursor<DBObject>)",1,2,2
"com.mongodb.DBCollection.toEncoder(DBEncoder)",1,1,2
"com.mongodb.DBCollection.toString()",1,1,1
"com.mongodb.DBCollection.translateWriteRequestsToNew(List<WriteRequest>)",1,2,2
"com.mongodb.DBCollection.translateWriteResult(WriteConcernResult)",2,2,2
"com.mongodb.DBCollection.translateWriteResult(int,boolean,BsonValue)",1,2,2
"com.mongodb.DBCollection.update(DBObject,DBObject)",1,1,1
"com.mongodb.DBCollection.update(DBObject,DBObject,DBCollectionUpdateOptions)",1,3,4
"com.mongodb.DBCollection.update(DBObject,DBObject,boolean,boolean)",1,1,1
"com.mongodb.DBCollection.update(DBObject,DBObject,boolean,boolean,WriteConcern)",1,1,1
"com.mongodb.DBCollection.update(DBObject,DBObject,boolean,boolean,WriteConcern,Boolean,DBEncoder)",1,1,1
"com.mongodb.DBCollection.update(DBObject,DBObject,boolean,boolean,WriteConcern,DBEncoder)",1,1,1
"com.mongodb.DBCollection.updateMulti(DBObject,DBObject)",1,1,1
"com.mongodb.DBCollection.wrap(DBObject)",1,1,1
"com.mongodb.DBCollection.wrap(DBObject,DBEncoder)",2,2,2
"com.mongodb.DBCollection.wrap(DBObject,Encoder<DBObject>)",2,2,2
"com.mongodb.DBCollection.wrapAllowNull(DBObject)",2,1,2
"com.mongodb.DBCollection.wrapAllowNull(List<? extends DBObject>,DBEncoder)",1,1,2
"com.mongodb.DBCollection.wrapAllowNull(List<? extends DBObject>,Encoder<DBObject>)",2,3,4
"com.mongodb.DBCollectionObjectFactory.DBCollectionObjectFactory()",1,1,1
"com.mongodb.DBCollectionObjectFactory.DBCollectionObjectFactory(Map<List<String>, Class<? extends DBObject>>,JavaWrapper)",1,1,1
"com.mongodb.DBCollectionObjectFactory.createInternalException(Class<? extends DBObject>,Throwable)",1,1,1
"com.mongodb.DBCollectionObjectFactory.getClassForPath(List<String>)",2,3,4
"com.mongodb.DBCollectionObjectFactory.getInstance()",1,1,1
"com.mongodb.DBCollectionObjectFactory.getInstance(List<String>)",1,5,5
"com.mongodb.DBCollectionObjectFactory.isReflectionDBObject(Class<? extends DBObject>)",1,2,2
"com.mongodb.DBCollectionObjectFactory.update(Class<? extends DBObject>)",1,2,2
"com.mongodb.DBCollectionObjectFactory.update(Class<? extends DBObject>,List<String>)",1,1,1
"com.mongodb.DBCollectionObjectFactory.updatePathToClassMap(Class<? extends DBObject>,List<String>)",1,2,2
"com.mongodb.DBCursor.DBCursor(DBCollection,DBObject,DBCollectionFindOptions)",1,1,1
"com.mongodb.DBCursor.DBCursor(DBCollection,DBObject,DBCollectionFindOptions,OperationExecutor,DBDecoderFactory,Decoder<DBObject>)",1,1,1
"com.mongodb.DBCursor.DBCursor(DBCollection,DBObject,DBObject,ReadPreference)",1,2,2
"com.mongodb.DBCursor.OptionalFinalizer.OptionalFinalizer(Mongo,MongoNamespace)",1,1,1
"com.mongodb.DBCursor.OptionalFinalizer.finalize()",1,2,2
"com.mongodb.DBCursor.OptionalFinalizer.setServerCursor(ServerCursor)",1,1,1
"com.mongodb.DBCursor.addOption(int)",1,1,1
"com.mongodb.DBCursor.addSpecial(String,Object)",14,14,16
"com.mongodb.DBCursor.batchSize(int)",1,1,1
"com.mongodb.DBCursor.checkIteratorOrArray(IteratorOrArray)",3,1,3
"com.mongodb.DBCursor.close()",1,2,2
"com.mongodb.DBCursor.comment(String)",1,1,1
"com.mongodb.DBCursor.copy()",1,1,1
"com.mongodb.DBCursor.count()",1,1,1
"com.mongodb.DBCursor.curr()",1,1,1
"com.mongodb.DBCursor.currentObject(DBObject)",1,4,4
"com.mongodb.DBCursor.explain()",1,1,1
"com.mongodb.DBCursor.fillArray(int)",1,3,3
"com.mongodb.DBCursor.getBatchSize()",1,1,1
"com.mongodb.DBCursor.getCollation()",1,1,1
"com.mongodb.DBCursor.getCollection()",1,1,1
"com.mongodb.DBCursor.getCursorId()",2,3,3
"com.mongodb.DBCursor.getDbCollectionCountOptions()",1,3,3
"com.mongodb.DBCursor.getDecoderFactory()",1,1,1
"com.mongodb.DBCursor.getKeysWanted()",1,1,1
"com.mongodb.DBCursor.getLimit()",1,1,1
"com.mongodb.DBCursor.getOptions()",1,1,1
"com.mongodb.DBCursor.getQuery()",1,1,1
"com.mongodb.DBCursor.getQueryOperation(Decoder<DBObject>)",1,6,6
"com.mongodb.DBCursor.getReadConcern()",2,2,2
"com.mongodb.DBCursor.getReadPreference()",2,2,2
"com.mongodb.DBCursor.getReadPreferenceForCursor()",1,3,3
"com.mongodb.DBCursor.getServerAddress()",2,2,2
"com.mongodb.DBCursor.hasNext()",2,3,4
"com.mongodb.DBCursor.hint(DBObject)",1,1,1
"com.mongodb.DBCursor.hint(String)",1,1,1
"com.mongodb.DBCursor.initializeCursor(FindOperation<DBObject>)",1,3,3
"com.mongodb.DBCursor.isCursorFinalizerEnabled()",1,1,1
"com.mongodb.DBCursor.itcount()",1,2,2
"com.mongodb.DBCursor.iterator()",1,1,1
"com.mongodb.DBCursor.length()",1,1,1
"com.mongodb.DBCursor.limit(int)",1,1,1
"com.mongodb.DBCursor.lookupSuitableHints(DBObject,List<DBObject>)",4,2,4
"com.mongodb.DBCursor.max(DBObject)",1,1,1
"com.mongodb.DBCursor.maxScan(int)",1,1,1
"com.mongodb.DBCursor.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.DBCursor.min(DBObject)",1,1,1
"com.mongodb.DBCursor.next()",2,1,2
"com.mongodb.DBCursor.nextInternal()",1,2,2
"com.mongodb.DBCursor.numSeen()",1,1,1
"com.mongodb.DBCursor.one()",1,2,2
"com.mongodb.DBCursor.remove()",1,1,1
"com.mongodb.DBCursor.resetOptions()",1,1,1
"com.mongodb.DBCursor.returnKey()",1,1,1
"com.mongodb.DBCursor.setCollation(Collation)",1,1,1
"com.mongodb.DBCursor.setDecoderFactory(DBDecoderFactory)",1,1,1
"com.mongodb.DBCursor.setOptions(int)",2,1,2
"com.mongodb.DBCursor.setReadConcern(ReadConcern)",1,1,1
"com.mongodb.DBCursor.setReadPreference(ReadPreference)",1,1,1
"com.mongodb.DBCursor.setServerCursorOnFinalizer(ServerCursor)",1,2,2
"com.mongodb.DBCursor.showDiskLoc()",1,1,1
"com.mongodb.DBCursor.size()",1,1,1
"com.mongodb.DBCursor.skip(int)",1,1,1
"com.mongodb.DBCursor.slaveOk()",1,1,1
"com.mongodb.DBCursor.snapshot()",1,1,1
"com.mongodb.DBCursor.sort(DBObject)",1,1,1
"com.mongodb.DBCursor.toArray()",1,1,1
"com.mongodb.DBCursor.toArray(int)",1,1,1
"com.mongodb.DBCursor.toString()",1,2,2
"com.mongodb.DBCursor.tryNext()",3,2,3
"com.mongodb.DBDecoderAdapter.BufferExposingByteArrayOutputStream.BufferExposingByteArrayOutputStream(int)",1,1,1
"com.mongodb.DBDecoderAdapter.BufferExposingByteArrayOutputStream.getInternalBytes()",1,1,1
"com.mongodb.DBDecoderAdapter.DBDecoderAdapter(DBDecoder,DBCollection,BufferProvider)",1,1,1
"com.mongodb.DBDecoderAdapter.decode(BsonReader,DecoderContext)",1,1,2
"com.mongodb.DBEncoderAdapter.DBEncoderAdapter(DBEncoder)",1,1,1
"com.mongodb.DBEncoderAdapter.encode(BsonWriter,DBObject,EncoderContext)",1,1,1
"com.mongodb.DBEncoderAdapter.getEncoderClass()",1,1,1
"com.mongodb.DBEncoderFactoryAdapter.DBEncoderFactoryAdapter(DBEncoderFactory)",1,1,1
"com.mongodb.DBEncoderFactoryAdapter.encode(BsonWriter,DBObject,EncoderContext)",1,1,1
"com.mongodb.DBEncoderFactoryAdapter.getEncoderClass()",1,1,1
"com.mongodb.DBObjectCodec.DBObjectCodec(CodecRegistry)",1,1,1
"com.mongodb.DBObjectCodec.DBObjectCodec(CodecRegistry,BsonTypeClassMap)",1,1,1
"com.mongodb.DBObjectCodec.DBObjectCodec(CodecRegistry,BsonTypeClassMap,DBObjectFactory)",1,1,1
"com.mongodb.DBObjectCodec.beforeFields(BsonWriter,EncoderContext,DBObject)",1,3,3
"com.mongodb.DBObjectCodec.createDefaultBsonTypeClassMap()",1,1,1
"com.mongodb.DBObjectCodec.decode(BsonReader,DecoderContext)",1,1,1
"com.mongodb.DBObjectCodec.documentHasId(DBObject)",1,1,1
"com.mongodb.DBObjectCodec.encode(BsonWriter,DBObject,EncoderContext)",3,2,3
"com.mongodb.DBObjectCodec.encodeArray(BsonWriter,Object)",1,2,2
"com.mongodb.DBObjectCodec.encodeBsonObject(BsonWriter,BSONObject)",1,2,2
"com.mongodb.DBObjectCodec.encodeByteArray(BsonWriter,byte[])",1,1,1
"com.mongodb.DBObjectCodec.encodeCodeWScope(BsonWriter,CodeWScope)",1,1,1
"com.mongodb.DBObjectCodec.encodeDBRef(BsonWriter,DBRef)",1,1,1
"com.mongodb.DBObjectCodec.encodeIterable(BsonWriter,Iterable)",1,2,2
"com.mongodb.DBObjectCodec.encodeMap(BsonWriter,Map<String, Object>)",1,2,2
"com.mongodb.DBObjectCodec.generateIdIfAbsentFromDocument(DBObject)",1,2,2
"com.mongodb.DBObjectCodec.getDefaultBsonTypeClassMap()",1,1,1
"com.mongodb.DBObjectCodec.getDocumentId(DBObject)",3,1,3
"com.mongodb.DBObjectCodec.getEncoderClass()",1,1,1
"com.mongodb.DBObjectCodec.readArray(BsonReader,DecoderContext,List<String>)",1,2,2
"com.mongodb.DBObjectCodec.readBinary(BsonReader,DecoderContext)",3,5,5
"com.mongodb.DBObjectCodec.readCodeWScope(BsonReader,DecoderContext,List<String>)",1,1,1
"com.mongodb.DBObjectCodec.readDocument(BsonReader,DecoderContext,List<String>)",1,2,2
"com.mongodb.DBObjectCodec.readValue(BsonReader,DecoderContext,String,List<String>)",2,6,12
"com.mongodb.DBObjectCodec.skipField(EncoderContext,String)",1,2,2
"com.mongodb.DBObjectCodec.verifyForDBRef(DBObject)",2,3,3
"com.mongodb.DBObjectCodec.writeValue(BsonWriter,EncoderContext,Object)",1,10,10
"com.mongodb.DBObjectCodecProvider.DBObjectCodecProvider()",1,1,1
"com.mongodb.DBObjectCodecProvider.DBObjectCodecProvider(BsonTypeClassMap)",1,1,1
"com.mongodb.DBObjectCodecProvider.equals(Object)",3,2,4
"com.mongodb.DBObjectCodecProvider.get(Class<T>,CodecRegistry)",4,2,5
"com.mongodb.DBObjectCodecProvider.hashCode()",1,1,1
"com.mongodb.DBObjectCollationHelper.DBObjectCollationHelper()",1,1,1
"com.mongodb.DBObjectCollationHelper.createCollationFromOptions(DBObject)",21,21,21
"com.mongodb.DBObjects.DBObjects()",1,1,1
"com.mongodb.DBObjects.toDBObject(BsonDocument)",1,1,1
"com.mongodb.DBRef.DBRef(String,Object)",1,1,1
"com.mongodb.DBRef.DBRef(String,String,Object)",1,1,1
"com.mongodb.DBRef.equals(Object)",6,3,8
"com.mongodb.DBRef.getCollectionName()",1,1,1
"com.mongodb.DBRef.getDatabaseName()",1,1,1
"com.mongodb.DBRef.getId()",1,1,1
"com.mongodb.DBRef.hashCode()",1,2,2
"com.mongodb.DBRef.toString()",1,1,2
"com.mongodb.DBRefCodec.DBRefCodec(CodecRegistry)",1,1,1
"com.mongodb.DBRefCodec.decode(BsonReader,DecoderContext)",1,1,1
"com.mongodb.DBRefCodec.encode(BsonWriter,DBRef,EncoderContext)",1,2,2
"com.mongodb.DBRefCodec.getEncoderClass()",1,1,1
"com.mongodb.DBRefCodecProvider.equals(Object)",3,2,4
"com.mongodb.DBRefCodecProvider.get(Class<T>,CodecRegistry)",2,1,2
"com.mongodb.DBRefCodecProvider.hashCode()",1,1,1
"com.mongodb.DefaultDBCallback.DefaultDBCallback(DBCollection)",1,2,2
"com.mongodb.DefaultDBCallback.create()",1,1,1
"com.mongodb.DefaultDBCallback.create(boolean,List<String>)",1,3,3
"com.mongodb.DefaultDBCallback.gotDBRef(String,String,ObjectId)",1,1,1
"com.mongodb.DefaultDBCallback.objectDone()",1,6,6
"com.mongodb.DefaultDBDecoder.decode(InputStream,DBCollection)",1,1,1
"com.mongodb.DefaultDBDecoder.decode(byte[],DBCollection)",1,1,1
"com.mongodb.DefaultDBDecoder.getDBCallback(DBCollection)",1,1,1
"com.mongodb.DefaultDBDecoder.toString()",1,1,1
"com.mongodb.DefaultDBEncoder.putDBRef(String,DBRef)",1,1,1
"com.mongodb.DefaultDBEncoder.putSpecial(String,Object)",2,2,2
"com.mongodb.DefaultDBEncoder.toString()",1,1,1
"com.mongodb.DefaultDBEncoder.writeObject(OutputBuffer,BSONObject)",1,1,1
"com.mongodb.DistinctIterableImpl.DistinctIterableImpl(ClientSession,MongoNamespace,Class<TDocument>,Class<TResult>,CodecRegistry,ReadPreference,ReadConcern,OperationExecutor,String,Bson)",1,1,1
"com.mongodb.DistinctIterableImpl.asReadOperation()",1,2,2
"com.mongodb.DistinctIterableImpl.batchSize(int)",1,1,1
"com.mongodb.DistinctIterableImpl.collation(Collation)",1,1,1
"com.mongodb.DistinctIterableImpl.filter(Bson)",1,1,1
"com.mongodb.DistinctIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.DocumentToDBRefTransformer.equals(Object)",3,2,4
"com.mongodb.DocumentToDBRefTransformer.hashCode()",1,1,1
"com.mongodb.DocumentToDBRefTransformer.transform(Object)",3,4,4
"com.mongodb.DuplicateKeyException.DuplicateKeyException(BsonDocument,ServerAddress,WriteConcernResult)",1,1,1
"com.mongodb.ErrorCategory.fromErrorCode(int)",3,2,3
"com.mongodb.FindIterableImpl.FindIterableImpl(ClientSession,MongoNamespace,Class<TDocument>,Class<TResult>,CodecRegistry,ReadPreference,ReadConcern,OperationExecutor,Bson,FindOptions)",1,1,1
"com.mongodb.FindIterableImpl.asReadOperation()",1,1,1
"com.mongodb.FindIterableImpl.batchSize(int)",1,1,1
"com.mongodb.FindIterableImpl.collation(Collation)",1,1,1
"com.mongodb.FindIterableImpl.comment(String)",1,1,1
"com.mongodb.FindIterableImpl.createQueryOperation()",1,1,1
"com.mongodb.FindIterableImpl.cursorType(CursorType)",1,1,1
"com.mongodb.FindIterableImpl.filter(Bson)",1,1,1
"com.mongodb.FindIterableImpl.first()",1,2,2
"com.mongodb.FindIterableImpl.hint(Bson)",1,1,1
"com.mongodb.FindIterableImpl.limit(int)",1,1,1
"com.mongodb.FindIterableImpl.max(Bson)",1,1,1
"com.mongodb.FindIterableImpl.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.FindIterableImpl.maxScan(long)",1,1,1
"com.mongodb.FindIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.FindIterableImpl.min(Bson)",1,1,1
"com.mongodb.FindIterableImpl.modifiers(Bson)",1,1,1
"com.mongodb.FindIterableImpl.noCursorTimeout(boolean)",1,1,1
"com.mongodb.FindIterableImpl.oplogReplay(boolean)",1,1,1
"com.mongodb.FindIterableImpl.partial(boolean)",1,1,1
"com.mongodb.FindIterableImpl.projection(Bson)",1,1,1
"com.mongodb.FindIterableImpl.returnKey(boolean)",1,1,1
"com.mongodb.FindIterableImpl.showRecordId(boolean)",1,1,1
"com.mongodb.FindIterableImpl.skip(int)",1,1,1
"com.mongodb.FindIterableImpl.snapshot(boolean)",1,1,1
"com.mongodb.FindIterableImpl.sort(Bson)",1,1,1
"com.mongodb.FindIterableImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.GroupCommand.GroupCommand(DBCollection,DBObject,DBObject,DBObject,String,String)",1,1,1
"com.mongodb.GroupCommand.GroupCommand(DBCollection,DBObject,DBObject,DBObject,String,String,Collation)",1,1,1
"com.mongodb.GroupCommand.GroupCommand(DBCollection,String,DBObject,DBObject,String,String)",1,1,1
"com.mongodb.GroupCommand.GroupCommand(DBCollection,String,DBObject,DBObject,String,String,Collation)",1,1,1
"com.mongodb.GroupCommand.toDBObject()",1,4,4
"com.mongodb.GroupCommand.toOperation(MongoNamespace,DBObjectCodec)",3,5,7
"com.mongodb.InsertOptions.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.InsertOptions.continueOnError(boolean)",1,1,1
"com.mongodb.InsertOptions.dbEncoder(DBEncoder)",1,1,1
"com.mongodb.InsertOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.InsertOptions.getDbEncoder()",1,1,1
"com.mongodb.InsertOptions.getWriteConcern()",1,1,1
"com.mongodb.InsertOptions.isContinueOnError()",1,1,1
"com.mongodb.InsertOptions.writeConcern(WriteConcern)",1,1,1
"com.mongodb.InsertRequest.InsertRequest(DBObject,Encoder<DBObject>)",1,1,1
"com.mongodb.InsertRequest.getDocument()",1,1,1
"com.mongodb.InsertRequest.toNew(DBCollection)",1,1,1
"com.mongodb.LazyDBCallback.LazyDBCallback(DBCollection)",1,1,1
"com.mongodb.LazyDBCallback.createArray(byte[],int)",1,1,1
"com.mongodb.LazyDBCallback.createDBRef(String,ObjectId)",1,1,1
"com.mongodb.LazyDBCallback.createObject(byte[],int)",2,5,5
"com.mongodb.LazyDBDecoder.decode(InputStream,DBCollection)",1,1,1
"com.mongodb.LazyDBDecoder.decode(byte[],DBCollection)",1,1,1
"com.mongodb.LazyDBDecoder.getDBCallback(DBCollection)",1,1,1
"com.mongodb.LazyDBDecoder.readObject(InputStream)",1,1,1
"com.mongodb.LazyDBEncoder.writeObject(OutputBuffer,BSONObject)",2,1,3
"com.mongodb.LazyDBList.LazyDBList(byte[],LazyBSONCallback)",1,1,1
"com.mongodb.LazyDBList.LazyDBList(byte[],int,LazyBSONCallback)",1,1,1
"com.mongodb.LazyDBList.isPartialObject()",1,1,1
"com.mongodb.LazyDBList.markAsPartialObject()",1,1,1
"com.mongodb.LazyDBObject.LazyDBObject(byte[],LazyBSONCallback)",1,1,1
"com.mongodb.LazyDBObject.LazyDBObject(byte[],int,LazyBSONCallback)",1,1,1
"com.mongodb.LazyDBObject.isPartialObject()",1,1,1
"com.mongodb.LazyDBObject.markAsPartialObject()",1,1,1
"com.mongodb.ListCollectionsIterableImpl.ListCollectionsIterableImpl(ClientSession,String,Class<TResult>,CodecRegistry,ReadPreference,OperationExecutor)",1,1,1
"com.mongodb.ListCollectionsIterableImpl.asReadOperation()",1,2,2
"com.mongodb.ListCollectionsIterableImpl.batchSize(int)",1,1,1
"com.mongodb.ListCollectionsIterableImpl.filter(Bson)",1,1,1
"com.mongodb.ListCollectionsIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.ListCollectionsIterableImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.ListDatabasesIterableImpl.ListDatabasesIterableImpl(ClientSession,Class<TResult>,CodecRegistry,ReadPreference,OperationExecutor)",1,1,1
"com.mongodb.ListDatabasesIterableImpl.asReadOperation()",1,1,1
"com.mongodb.ListDatabasesIterableImpl.batchSize(int)",1,1,1
"com.mongodb.ListDatabasesIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.ListIndexesIterableImpl.ListIndexesIterableImpl(ClientSession,MongoNamespace,Class<TResult>,CodecRegistry,ReadPreference,OperationExecutor)",1,1,1
"com.mongodb.ListIndexesIterableImpl.asReadOperation()",1,2,2
"com.mongodb.ListIndexesIterableImpl.batchSize(int)",1,1,1
"com.mongodb.ListIndexesIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.MapReduceCommand.MapReduceCommand(DBCollection,String,String,String,OutputType,DBObject)",1,1,1
"com.mongodb.MapReduceCommand.getBypassDocumentValidation()",1,1,1
"com.mongodb.MapReduceCommand.getCollation()",1,1,1
"com.mongodb.MapReduceCommand.getFinalize()",1,1,1
"com.mongodb.MapReduceCommand.getInput()",1,1,1
"com.mongodb.MapReduceCommand.getJsMode()",1,1,1
"com.mongodb.MapReduceCommand.getLimit()",1,1,1
"com.mongodb.MapReduceCommand.getMap()",1,1,1
"com.mongodb.MapReduceCommand.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.MapReduceCommand.getOutputDB()",1,1,1
"com.mongodb.MapReduceCommand.getOutputTarget()",1,1,1
"com.mongodb.MapReduceCommand.getOutputType()",1,1,1
"com.mongodb.MapReduceCommand.getQuery()",1,1,1
"com.mongodb.MapReduceCommand.getReadPreference()",1,1,1
"com.mongodb.MapReduceCommand.getReduce()",1,1,1
"com.mongodb.MapReduceCommand.getScope()",1,1,1
"com.mongodb.MapReduceCommand.getSort()",1,1,1
"com.mongodb.MapReduceCommand.isVerbose()",1,1,1
"com.mongodb.MapReduceCommand.setBypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.MapReduceCommand.setCollation(Collation)",1,1,1
"com.mongodb.MapReduceCommand.setFinalize(String)",1,1,1
"com.mongodb.MapReduceCommand.setJsMode(Boolean)",1,1,1
"com.mongodb.MapReduceCommand.setLimit(int)",1,1,1
"com.mongodb.MapReduceCommand.setMaxTime(long,TimeUnit)",1,1,1
"com.mongodb.MapReduceCommand.setOutputDB(String)",1,1,1
"com.mongodb.MapReduceCommand.setReadPreference(ReadPreference)",1,1,1
"com.mongodb.MapReduceCommand.setScope(Map<String, Object>)",1,1,1
"com.mongodb.MapReduceCommand.setSort(DBObject)",1,1,1
"com.mongodb.MapReduceCommand.setVerbose(Boolean)",1,1,1
"com.mongodb.MapReduceCommand.toDBObject()",2,11,15
"com.mongodb.MapReduceCommand.toString()",1,1,1
"com.mongodb.MapReduceIterableImpl.MapReduceIterableImpl(ClientSession,MongoNamespace,Class<TDocument>,Class<TResult>,CodecRegistry,ReadPreference,ReadConcern,WriteConcern,OperationExecutor,String,String)",1,1,1
"com.mongodb.MapReduceIterableImpl.WrappedMapReduceReadOperation.WrappedMapReduceReadOperation(MapReduceWithInlineResultsOperation<TResult>)",1,1,1
"com.mongodb.MapReduceIterableImpl.WrappedMapReduceReadOperation.execute(ReadBinding)",1,1,1
"com.mongodb.MapReduceIterableImpl.WrappedMapReduceReadOperation.getOperation()",1,1,1
"com.mongodb.MapReduceIterableImpl.action(MapReduceAction)",1,1,1
"com.mongodb.MapReduceIterableImpl.asReadOperation()",2,5,5
"com.mongodb.MapReduceIterableImpl.batchSize(int)",1,1,1
"com.mongodb.MapReduceIterableImpl.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.MapReduceIterableImpl.collation(Collation)",1,1,1
"com.mongodb.MapReduceIterableImpl.collectionName(String)",1,1,1
"com.mongodb.MapReduceIterableImpl.createMapReduceToCollectionOperation()",1,2,2
"com.mongodb.MapReduceIterableImpl.databaseName(String)",1,1,1
"com.mongodb.MapReduceIterableImpl.filter(Bson)",1,1,1
"com.mongodb.MapReduceIterableImpl.finalizeFunction(String)",1,1,1
"com.mongodb.MapReduceIterableImpl.getReadPreference()",2,2,2
"com.mongodb.MapReduceIterableImpl.jsMode(boolean)",1,1,1
"com.mongodb.MapReduceIterableImpl.limit(int)",1,1,1
"com.mongodb.MapReduceIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.MapReduceIterableImpl.nonAtomic(boolean)",1,1,1
"com.mongodb.MapReduceIterableImpl.scope(Bson)",1,1,1
"com.mongodb.MapReduceIterableImpl.sharded(boolean)",1,1,1
"com.mongodb.MapReduceIterableImpl.sort(Bson)",1,1,1
"com.mongodb.MapReduceIterableImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.MapReduceIterableImpl.toCollection()",2,1,2
"com.mongodb.MapReduceIterableImpl.verbose(boolean)",1,1,1
"com.mongodb.MapReduceOutput.MapReduceOutput(DBObject,DBCursor,MapReduceStatistics,DBCollection)",1,1,1
"com.mongodb.MapReduceOutput.MapReduceOutput(DBObject,MapReduceBatchCursor<DBObject>)",1,2,2
"com.mongodb.MapReduceOutput.drop()",1,2,2
"com.mongodb.MapReduceOutput.getCollectionName()",1,2,2
"com.mongodb.MapReduceOutput.getCommand()",1,1,1
"com.mongodb.MapReduceOutput.getDatabaseName()",1,1,1
"com.mongodb.MapReduceOutput.getDuration()",1,1,1
"com.mongodb.MapReduceOutput.getEmitCount()",1,1,1
"com.mongodb.MapReduceOutput.getInputCount()",1,1,1
"com.mongodb.MapReduceOutput.getOutputCollection()",1,1,1
"com.mongodb.MapReduceOutput.getOutputCount()",1,1,1
"com.mongodb.MapReduceOutput.results()",2,1,2
"com.mongodb.MapReduceOutput.toString()",1,1,1
"com.mongodb.MappingIterable.MappingIterable(MongoIterable<U>,Function<U, V>)",1,1,1
"com.mongodb.MappingIterable.batchSize(int)",1,1,1
"com.mongodb.MappingIterable.first()",2,1,2
"com.mongodb.MappingIterable.forEach(Block<? super V>)",1,1,1
"com.mongodb.MappingIterable.getMapped()",1,1,1
"com.mongodb.MappingIterable.into(A)",1,1,1
"com.mongodb.MappingIterable.iterator()",1,1,1
"com.mongodb.MappingIterable.map(Function<V, W>)",1,1,1
"com.mongodb.Mongo.ClientSessionImpl.ClientSessionImpl(Mongo,ClientSessionOptions)",1,1,1
"com.mongodb.Mongo.ClientSessionImpl.advanceClusterTime(BsonDocument)",1,1,1
"com.mongodb.Mongo.ClientSessionImpl.advanceOperationTime(BsonTimestamp)",1,1,1
"com.mongodb.Mongo.ClientSessionImpl.close()",1,2,2
"com.mongodb.Mongo.ClientSessionImpl.getClusterTime()",1,1,1
"com.mongodb.Mongo.ClientSessionImpl.getMongoClient()",2,1,2
"com.mongodb.Mongo.ClientSessionImpl.getOperationTime()",1,1,1
"com.mongodb.Mongo.ClientSessionImpl.getOptions()",1,1,1
"com.mongodb.Mongo.ClientSessionImpl.getServerSession()",1,1,1
"com.mongodb.Mongo.ClientSessionImpl.greaterOf(BsonDocument)",3,3,4
"com.mongodb.Mongo.ClientSessionImpl.greaterOf(BsonTimestamp)",3,3,4
"com.mongodb.Mongo.ClientSessionImpl.isCausallyConsistent()",1,2,2
"com.mongodb.Mongo.Holder.connect(MongoClientURI)",1,3,3
"com.mongodb.Mongo.Holder.connect(MongoURI)",1,1,1
"com.mongodb.Mongo.Holder.singleton()",1,1,1
"com.mongodb.Mongo.Holder.toKey(MongoClientURI)",1,1,1
"com.mongodb.Mongo.Mongo()",1,1,1
"com.mongodb.Mongo.Mongo(Cluster,MongoClientOptions,List<MongoCredential>)",1,5,5
"com.mongodb.Mongo.Mongo(List<ServerAddress>)",1,1,1
"com.mongodb.Mongo.Mongo(List<ServerAddress>,List<MongoCredential>,MongoClientOptions)",1,1,1
"com.mongodb.Mongo.Mongo(List<ServerAddress>,List<MongoCredential>,MongoClientOptions,MongoDriverInformation)",1,1,1
"com.mongodb.Mongo.Mongo(List<ServerAddress>,MongoClientOptions)",1,1,1
"com.mongodb.Mongo.Mongo(List<ServerAddress>,MongoOptions)",1,1,1
"com.mongodb.Mongo.Mongo(MongoClientURI)",1,1,1
"com.mongodb.Mongo.Mongo(MongoClientURI,MongoDriverInformation)",1,2,2
"com.mongodb.Mongo.Mongo(MongoURI)",1,1,1
"com.mongodb.Mongo.Mongo(ServerAddress)",1,1,1
"com.mongodb.Mongo.Mongo(ServerAddress,List<MongoCredential>,MongoClientOptions)",1,1,1
"com.mongodb.Mongo.Mongo(ServerAddress,List<MongoCredential>,MongoClientOptions,MongoDriverInformation)",1,1,1
"com.mongodb.Mongo.Mongo(ServerAddress,MongoClientOptions)",1,1,1
"com.mongodb.Mongo.Mongo(ServerAddress,MongoOptions)",1,1,1
"com.mongodb.Mongo.Mongo(ServerAddress,ServerAddress)",1,1,1
"com.mongodb.Mongo.Mongo(ServerAddress,ServerAddress,MongoOptions)",1,1,1
"com.mongodb.Mongo.Mongo(String)",1,1,1
"com.mongodb.Mongo.Mongo(String,MongoOptions)",1,1,1
"com.mongodb.Mongo.Mongo(String,int)",1,1,1
"com.mongodb.Mongo.ServerCursorAndNamespace.ServerCursorAndNamespace(ServerCursor,MongoNamespace)",1,1,1
"com.mongodb.Mongo.addOption(int)",1,1,1
"com.mongodb.Mongo.addOrphanedCursor(ServerCursor,MongoNamespace)",1,1,1
"com.mongodb.Mongo.cleanCursors()",1,2,2
"com.mongodb.Mongo.close()",1,2,2
"com.mongodb.Mongo.createClientSession(ClientSessionOptions)",2,2,3
"com.mongodb.Mongo.createCluster(ClusterSettings,List<MongoCredential>,MongoClientOptions,MongoDriverInformation)",1,1,1
"com.mongodb.Mongo.createCluster(List<ServerAddress>,List<MongoCredential>,MongoClientOptions,MongoDriverInformation)",1,1,1
"com.mongodb.Mongo.createCluster(MongoClientURI,MongoDriverInformation)",2,4,4
"com.mongodb.Mongo.createCluster(ServerAddress,List<MongoCredential>,MongoClientOptions,MongoDriverInformation)",1,1,1
"com.mongodb.Mongo.createCursorCleaningService()",1,1,1
"com.mongodb.Mongo.createLegacyOptions()",1,1,1
"com.mongodb.Mongo.createOperationExecutor()",1,2,5
"com.mongodb.Mongo.dropDatabase(String)",1,1,1
"com.mongodb.Mongo.fsync(boolean)",1,2,2
"com.mongodb.Mongo.fsyncAndLock()",1,1,1
"com.mongodb.Mongo.getAddress()",2,1,2
"com.mongodb.Mongo.getAllAddress()",1,1,1
"com.mongodb.Mongo.getBufferProvider()",1,1,1
"com.mongodb.Mongo.getCluster()",1,1,1
"com.mongodb.Mongo.getClusterDescription()",1,1,1
"com.mongodb.Mongo.getClusterSettings(List<ServerAddress>,MongoClientOptions,ClusterConnectionMode)",1,2,2
"com.mongodb.Mongo.getConnectPoint()",1,2,2
"com.mongodb.Mongo.getCredentialsList()",1,1,1
"com.mongodb.Mongo.getDB(String)",3,1,3
"com.mongodb.Mongo.getDatabaseNames()",1,1,1
"com.mongodb.Mongo.getMaxBsonObjectSize()",1,2,2
"com.mongodb.Mongo.getMongoClientOptions()",1,1,1
"com.mongodb.Mongo.getMongoOptions()",1,1,1
"com.mongodb.Mongo.getOptionHolder()",1,1,1
"com.mongodb.Mongo.getOptions()",1,1,1
"com.mongodb.Mongo.getReadConcern()",1,1,1
"com.mongodb.Mongo.getReadPreference()",1,1,1
"com.mongodb.Mongo.getReplicaSetStatus()",1,2,3
"com.mongodb.Mongo.getServerAddressList()",1,2,2
"com.mongodb.Mongo.getSingleServerClusterMode(MongoClientOptions)",2,1,2
"com.mongodb.Mongo.getUsedDatabases()",1,1,1
"com.mongodb.Mongo.getWriteConcern()",1,1,1
"com.mongodb.Mongo.isLocked()",1,1,1
"com.mongodb.Mongo.resetOptions()",1,1,1
"com.mongodb.Mongo.setOptions(int)",1,1,1
"com.mongodb.Mongo.setReadPreference(ReadPreference)",1,1,1
"com.mongodb.Mongo.setWriteConcern(WriteConcern)",1,1,1
"com.mongodb.Mongo.slaveOk()",1,1,1
"com.mongodb.Mongo.toString()",1,1,1
"com.mongodb.Mongo.unlock()",1,1,1
"com.mongodb.MongoBatchCursorAdapter.MongoBatchCursorAdapter(BatchCursor<T>)",1,1,1
"com.mongodb.MongoBatchCursorAdapter.close()",1,1,1
"com.mongodb.MongoBatchCursorAdapter.getNextInBatch()",1,1,2
"com.mongodb.MongoBatchCursorAdapter.getServerAddress()",1,1,1
"com.mongodb.MongoBatchCursorAdapter.getServerCursor()",1,1,1
"com.mongodb.MongoBatchCursorAdapter.hasNext()",1,2,2
"com.mongodb.MongoBatchCursorAdapter.next()",2,2,3
"com.mongodb.MongoBatchCursorAdapter.remove()",1,1,1
"com.mongodb.MongoBatchCursorAdapter.tryNext()",1,3,3
"com.mongodb.MongoBulkWriteException.MongoBulkWriteException(BulkWriteResult,List<BulkWriteError>,WriteConcernError,ServerAddress)",1,1,3
"com.mongodb.MongoBulkWriteException.equals(Object)",7,3,9
"com.mongodb.MongoBulkWriteException.getServerAddress()",1,1,1
"com.mongodb.MongoBulkWriteException.getWriteConcernError()",1,1,1
"com.mongodb.MongoBulkWriteException.getWriteErrors()",1,1,1
"com.mongodb.MongoBulkWriteException.getWriteResult()",1,1,1
"com.mongodb.MongoBulkWriteException.hashCode()",1,2,2
"com.mongodb.MongoChangeStreamException.MongoChangeStreamException(String)",1,1,1
"com.mongodb.MongoClient.MongoClient()",1,1,1
"com.mongodb.MongoClient.MongoClient(List<ServerAddress>)",1,1,1
"com.mongodb.MongoClient.MongoClient(List<ServerAddress>,List<MongoCredential>)",1,1,1
"com.mongodb.MongoClient.MongoClient(List<ServerAddress>,List<MongoCredential>,MongoClientOptions)",1,1,1
"com.mongodb.MongoClient.MongoClient(List<ServerAddress>,List<MongoCredential>,MongoClientOptions,MongoDriverInformation)",1,1,1
"com.mongodb.MongoClient.MongoClient(List<ServerAddress>,MongoClientOptions)",1,1,1
"com.mongodb.MongoClient.MongoClient(MongoClientURI)",1,1,1
"com.mongodb.MongoClient.MongoClient(MongoClientURI,MongoDriverInformation)",1,1,1
"com.mongodb.MongoClient.MongoClient(ServerAddress)",1,1,1
"com.mongodb.MongoClient.MongoClient(ServerAddress,List<MongoCredential>)",1,1,1
"com.mongodb.MongoClient.MongoClient(ServerAddress,List<MongoCredential>,MongoClientOptions)",1,1,1
"com.mongodb.MongoClient.MongoClient(ServerAddress,List<MongoCredential>,MongoClientOptions,MongoDriverInformation)",1,1,1
"com.mongodb.MongoClient.MongoClient(ServerAddress,MongoClientOptions)",1,1,1
"com.mongodb.MongoClient.MongoClient(String)",1,1,1
"com.mongodb.MongoClient.MongoClient(String,MongoClientOptions)",1,1,1
"com.mongodb.MongoClient.MongoClient(String,int)",1,1,1
"com.mongodb.MongoClient.executeListDatabaseNames(ClientSession)",1,1,1
"com.mongodb.MongoClient.executeListDatabases(ClientSession,Class<T>)",1,1,1
"com.mongodb.MongoClient.getCommandCodec()",1,1,1
"com.mongodb.MongoClient.getCredentialsList()",1,1,1
"com.mongodb.MongoClient.getDatabase(String)",1,1,1
"com.mongodb.MongoClient.getDefaultCodecRegistry()",1,1,1
"com.mongodb.MongoClient.getMongoClientOptions()",1,1,1
"com.mongodb.MongoClient.listDatabaseNames()",1,1,1
"com.mongodb.MongoClient.listDatabaseNames(ClientSession)",1,1,1
"com.mongodb.MongoClient.listDatabases()",1,1,1
"com.mongodb.MongoClient.listDatabases(Class<T>)",1,1,1
"com.mongodb.MongoClient.listDatabases(ClientSession)",1,1,1
"com.mongodb.MongoClient.listDatabases(ClientSession,Class<T>)",1,1,1
"com.mongodb.MongoClient.startSession(ClientSessionOptions)",2,1,2
"com.mongodb.MongoClientException.MongoClientException(String)",1,1,1
"com.mongodb.MongoClientException.MongoClientException(String,Throwable)",1,1,1
"com.mongodb.MongoClientOptions.Builder.Builder()",1,1,1
"com.mongodb.MongoClientOptions.Builder.Builder(MongoClientOptions)",1,1,1
"com.mongodb.MongoClientOptions.Builder.addClusterListener(ClusterListener)",1,1,1
"com.mongodb.MongoClientOptions.Builder.addCommandListener(CommandListener)",1,1,1
"com.mongodb.MongoClientOptions.Builder.addConnectionPoolListener(ConnectionPoolListener)",1,1,1
"com.mongodb.MongoClientOptions.Builder.addServerListener(ServerListener)",1,1,1
"com.mongodb.MongoClientOptions.Builder.addServerMonitorListener(ServerMonitorListener)",1,1,1
"com.mongodb.MongoClientOptions.Builder.alwaysUseMBeans(boolean)",1,1,1
"com.mongodb.MongoClientOptions.Builder.applicationName(String)",1,2,2
"com.mongodb.MongoClientOptions.Builder.build()",1,1,1
"com.mongodb.MongoClientOptions.Builder.codecRegistry(CodecRegistry)",1,1,1
"com.mongodb.MongoClientOptions.Builder.compressorList(List<MongoCompressor>)",1,1,1
"com.mongodb.MongoClientOptions.Builder.connectTimeout(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.connectionsPerHost(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.cursorFinalizerEnabled(boolean)",1,1,1
"com.mongodb.MongoClientOptions.Builder.dbDecoderFactory(DBDecoderFactory)",2,1,2
"com.mongodb.MongoClientOptions.Builder.dbEncoderFactory(DBEncoderFactory)",2,1,2
"com.mongodb.MongoClientOptions.Builder.description(String)",1,1,1
"com.mongodb.MongoClientOptions.Builder.heartbeatConnectTimeout(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.heartbeatFrequency(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.heartbeatSocketTimeout(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.legacyDefaults()",1,1,1
"com.mongodb.MongoClientOptions.Builder.localThreshold(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.maxConnectionIdleTime(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.maxConnectionLifeTime(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.maxWaitTime(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.minConnectionsPerHost(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.minHeartbeatFrequency(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.readConcern(ReadConcern)",1,1,1
"com.mongodb.MongoClientOptions.Builder.readPreference(ReadPreference)",1,1,1
"com.mongodb.MongoClientOptions.Builder.requiredReplicaSetName(String)",1,1,1
"com.mongodb.MongoClientOptions.Builder.serverSelectionTimeout(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.socketFactory(SocketFactory)",1,1,1
"com.mongodb.MongoClientOptions.Builder.socketKeepAlive(boolean)",1,1,1
"com.mongodb.MongoClientOptions.Builder.socketTimeout(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.sslContext(SSLContext)",1,1,1
"com.mongodb.MongoClientOptions.Builder.sslEnabled(boolean)",1,1,1
"com.mongodb.MongoClientOptions.Builder.sslInvalidHostNameAllowed(boolean)",1,1,1
"com.mongodb.MongoClientOptions.Builder.threadsAllowedToBlockForConnectionMultiplier(int)",1,1,1
"com.mongodb.MongoClientOptions.Builder.writeConcern(WriteConcern)",1,1,1
"com.mongodb.MongoClientOptions.MongoClientOptions(Builder)",1,4,5
"com.mongodb.MongoClientOptions.builder()",1,1,1
"com.mongodb.MongoClientOptions.builder(MongoClientOptions)",1,1,1
"com.mongodb.MongoClientOptions.equals(Object)",36,9,44
"com.mongodb.MongoClientOptions.getApplicationName()",1,1,1
"com.mongodb.MongoClientOptions.getClusterListeners()",1,1,1
"com.mongodb.MongoClientOptions.getCodecRegistry()",1,1,1
"com.mongodb.MongoClientOptions.getCommandListeners()",1,1,1
"com.mongodb.MongoClientOptions.getCompressorList()",1,1,1
"com.mongodb.MongoClientOptions.getConnectTimeout()",1,1,1
"com.mongodb.MongoClientOptions.getConnectionPoolListeners()",1,1,1
"com.mongodb.MongoClientOptions.getConnectionPoolSettings()",1,1,1
"com.mongodb.MongoClientOptions.getConnectionsPerHost()",1,1,1
"com.mongodb.MongoClientOptions.getDbDecoderFactory()",1,1,1
"com.mongodb.MongoClientOptions.getDbEncoderFactory()",1,1,1
"com.mongodb.MongoClientOptions.getDescription()",1,1,1
"com.mongodb.MongoClientOptions.getHeartbeatConnectTimeout()",1,1,1
"com.mongodb.MongoClientOptions.getHeartbeatFrequency()",1,1,1
"com.mongodb.MongoClientOptions.getHeartbeatSocketSettings()",1,1,1
"com.mongodb.MongoClientOptions.getHeartbeatSocketTimeout()",1,1,1
"com.mongodb.MongoClientOptions.getLocalThreshold()",1,1,1
"com.mongodb.MongoClientOptions.getMaxConnectionIdleTime()",1,1,1
"com.mongodb.MongoClientOptions.getMaxConnectionLifeTime()",1,1,1
"com.mongodb.MongoClientOptions.getMaxWaitTime()",1,1,1
"com.mongodb.MongoClientOptions.getMinConnectionsPerHost()",1,1,1
"com.mongodb.MongoClientOptions.getMinHeartbeatFrequency()",1,1,1
"com.mongodb.MongoClientOptions.getReadConcern()",1,1,1
"com.mongodb.MongoClientOptions.getReadPreference()",1,1,1
"com.mongodb.MongoClientOptions.getRequiredReplicaSetName()",1,1,1
"com.mongodb.MongoClientOptions.getServerListeners()",1,1,1
"com.mongodb.MongoClientOptions.getServerMonitorListeners()",1,1,1
"com.mongodb.MongoClientOptions.getServerSelectionTimeout()",1,1,1
"com.mongodb.MongoClientOptions.getServerSettings()",1,1,1
"com.mongodb.MongoClientOptions.getSocketFactory()",3,4,4
"com.mongodb.MongoClientOptions.getSocketSettings()",1,1,1
"com.mongodb.MongoClientOptions.getSocketTimeout()",1,1,1
"com.mongodb.MongoClientOptions.getSslContext()",1,1,1
"com.mongodb.MongoClientOptions.getSslSettings()",1,1,1
"com.mongodb.MongoClientOptions.getThreadsAllowedToBlockForConnectionMultiplier()",1,1,1
"com.mongodb.MongoClientOptions.getWriteConcern()",1,1,1
"com.mongodb.MongoClientOptions.hashCode()",1,9,14
"com.mongodb.MongoClientOptions.isAlwaysUseMBeans()",1,1,1
"com.mongodb.MongoClientOptions.isCursorFinalizerEnabled()",1,1,1
"com.mongodb.MongoClientOptions.isSocketKeepAlive()",1,1,1
"com.mongodb.MongoClientOptions.isSslEnabled()",1,1,1
"com.mongodb.MongoClientOptions.isSslInvalidHostNameAllowed()",1,1,1
"com.mongodb.MongoClientOptions.toString()",1,1,1
"com.mongodb.MongoClientURI.MongoClientURI(String)",1,1,1
"com.mongodb.MongoClientURI.MongoClientURI(String,Builder)",1,1,1
"com.mongodb.MongoClientURI.equals(Object)",8,5,12
"com.mongodb.MongoClientURI.getCollection()",1,1,1
"com.mongodb.MongoClientURI.getCredentials()",2,2,2
"com.mongodb.MongoClientURI.getDatabase()",1,1,1
"com.mongodb.MongoClientURI.getHosts()",1,1,1
"com.mongodb.MongoClientURI.getOptions()",1,19,19
"com.mongodb.MongoClientURI.getPassword()",1,1,1
"com.mongodb.MongoClientURI.getURI()",1,1,1
"com.mongodb.MongoClientURI.getUsername()",1,1,1
"com.mongodb.MongoClientURI.hashCode()",1,4,4
"com.mongodb.MongoClientURI.toString()",1,1,1
"com.mongodb.MongoCollectionImpl.MongoCollectionImpl(MongoNamespace,Class<TDocument>,CodecRegistry,ReadPreference,WriteConcern,ReadConcern,OperationExecutor)",1,1,1
"com.mongodb.MongoCollectionImpl.aggregate(ClientSession,List<? extends Bson>)",1,1,1
"com.mongodb.MongoCollectionImpl.aggregate(ClientSession,List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.aggregate(List<? extends Bson>)",1,1,1
"com.mongodb.MongoCollectionImpl.aggregate(List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.bulkWrite(ClientSession,List<? extends WriteModel<? extends TDocument>>)",1,1,1
"com.mongodb.MongoCollectionImpl.bulkWrite(ClientSession,List<? extends WriteModel<? extends TDocument>>,BulkWriteOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.bulkWrite(List<? extends WriteModel<? extends TDocument>>)",1,1,1
"com.mongodb.MongoCollectionImpl.bulkWrite(List<? extends WriteModel<? extends TDocument>>,BulkWriteOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.count()",1,1,1
"com.mongodb.MongoCollectionImpl.count(Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.count(Bson,CountOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.count(ClientSession)",1,1,1
"com.mongodb.MongoCollectionImpl.count(ClientSession,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.count(ClientSession,Bson,CountOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.createFindIterable(ClientSession,Bson,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.createIndex(Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.createIndex(Bson,IndexOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.createIndex(ClientSession,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.createIndex(ClientSession,Bson,IndexOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.createIndexes(ClientSession,List<IndexModel>)",1,1,1
"com.mongodb.MongoCollectionImpl.createIndexes(List<IndexModel>)",1,1,1
"com.mongodb.MongoCollectionImpl.deleteMany(Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.deleteMany(Bson,DeleteOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.deleteMany(ClientSession,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.deleteMany(ClientSession,Bson,DeleteOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.deleteOne(Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.deleteOne(Bson,DeleteOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.deleteOne(ClientSession,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.deleteOne(ClientSession,Bson,DeleteOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.distinct(ClientSession,String,Bson,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.distinct(ClientSession,String,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.distinct(String,Bson,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.distinct(String,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.documentToBsonDocument(TDocument)",1,1,1
"com.mongodb.MongoCollectionImpl.drop()",1,1,1
"com.mongodb.MongoCollectionImpl.drop(ClientSession)",1,1,1
"com.mongodb.MongoCollectionImpl.dropIndex(Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.dropIndex(ClientSession,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.dropIndex(ClientSession,String)",1,1,1
"com.mongodb.MongoCollectionImpl.dropIndex(String)",1,1,1
"com.mongodb.MongoCollectionImpl.dropIndexes()",1,1,1
"com.mongodb.MongoCollectionImpl.dropIndexes(ClientSession)",1,1,1
"com.mongodb.MongoCollectionImpl.executeAggregate(ClientSession,List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.executeBulkWrite(ClientSession,List<? extends WriteModel<? extends TDocument>>,BulkWriteOptions)",9,10,10
"com.mongodb.MongoCollectionImpl.executeCount(ClientSession,Bson,CountOptions)",1,3,3
"com.mongodb.MongoCollectionImpl.executeCreateIndexes(ClientSession,List<IndexModel>)",3,2,3
"com.mongodb.MongoCollectionImpl.executeDelete(ClientSession,Bson,DeleteOptions,boolean)",2,2,2
"com.mongodb.MongoCollectionImpl.executeDistinct(ClientSession,String,Bson,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.executeDrop(ClientSession)",1,1,1
"com.mongodb.MongoCollectionImpl.executeDropIndex(ClientSession,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.executeDropIndex(ClientSession,String)",1,1,1
"com.mongodb.MongoCollectionImpl.executeFindOneAndDelete(ClientSession,Bson,FindOneAndDeleteOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.executeFindOneAndReplace(ClientSession,Bson,TDocument,FindOneAndReplaceOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.executeFindOneAndUpdate(ClientSession,Bson,Bson,FindOneAndUpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.executeInsertMany(ClientSession,List<? extends TDocument>,InsertManyOptions)",3,3,4
"com.mongodb.MongoCollectionImpl.executeInsertOne(ClientSession,TDocument,InsertOneOptions)",1,2,2
"com.mongodb.MongoCollectionImpl.executeListIndexes(ClientSession,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.executeMapReduce(ClientSession,String,String,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.executeRenameCollection(ClientSession,MongoNamespace,RenameCollectionOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.executeReplaceOne(ClientSession,Bson,TDocument,UpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(ClientSession,WriteRequest,Boolean)",2,3,3
"com.mongodb.MongoCollectionImpl.executeUpdate(ClientSession,Bson,Bson,UpdateOptions,boolean)",1,1,1
"com.mongodb.MongoCollectionImpl.executeWatch(ClientSession,List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.find()",1,1,1
"com.mongodb.MongoCollectionImpl.find(Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.find(Bson,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.find(Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.find(ClientSession)",1,1,1
"com.mongodb.MongoCollectionImpl.find(ClientSession,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.find(ClientSession,Bson,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.find(ClientSession,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndDelete(Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndDelete(Bson,FindOneAndDeleteOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndDelete(ClientSession,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndDelete(ClientSession,Bson,FindOneAndDeleteOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndReplace(Bson,TDocument)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndReplace(Bson,TDocument,FindOneAndReplaceOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndReplace(ClientSession,Bson,TDocument)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndReplace(ClientSession,Bson,TDocument,FindOneAndReplaceOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndUpdate(Bson,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndUpdate(Bson,Bson,FindOneAndUpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndUpdate(ClientSession,Bson,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.findOneAndUpdate(ClientSession,Bson,Bson,FindOneAndUpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.getCodec()",1,1,1
"com.mongodb.MongoCollectionImpl.getCodecRegistry()",1,1,1
"com.mongodb.MongoCollectionImpl.getDocumentClass()",1,1,1
"com.mongodb.MongoCollectionImpl.getNamespace()",1,1,1
"com.mongodb.MongoCollectionImpl.getReadConcern()",1,1,1
"com.mongodb.MongoCollectionImpl.getReadPreference()",1,1,1
"com.mongodb.MongoCollectionImpl.getWriteConcern()",1,1,1
"com.mongodb.MongoCollectionImpl.insertMany(ClientSession,List<? extends TDocument>)",1,1,1
"com.mongodb.MongoCollectionImpl.insertMany(ClientSession,List<? extends TDocument>,InsertManyOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.insertMany(List<? extends TDocument>)",1,1,1
"com.mongodb.MongoCollectionImpl.insertMany(List<? extends TDocument>,InsertManyOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.insertOne(ClientSession,TDocument)",1,1,1
"com.mongodb.MongoCollectionImpl.insertOne(ClientSession,TDocument,InsertOneOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.insertOne(TDocument)",1,1,1
"com.mongodb.MongoCollectionImpl.insertOne(TDocument,InsertOneOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.listIndexes()",1,1,1
"com.mongodb.MongoCollectionImpl.listIndexes(Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.listIndexes(ClientSession)",1,1,1
"com.mongodb.MongoCollectionImpl.listIndexes(ClientSession,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.mapReduce(ClientSession,String,String)",1,1,1
"com.mongodb.MongoCollectionImpl.mapReduce(ClientSession,String,String,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.mapReduce(String,String)",1,1,1
"com.mongodb.MongoCollectionImpl.mapReduce(String,String,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.renameCollection(ClientSession,MongoNamespace)",1,1,1
"com.mongodb.MongoCollectionImpl.renameCollection(ClientSession,MongoNamespace,RenameCollectionOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.renameCollection(MongoNamespace)",1,1,1
"com.mongodb.MongoCollectionImpl.renameCollection(MongoNamespace,RenameCollectionOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.replaceOne(Bson,TDocument)",1,1,1
"com.mongodb.MongoCollectionImpl.replaceOne(Bson,TDocument,UpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.replaceOne(ClientSession,Bson,TDocument)",1,1,1
"com.mongodb.MongoCollectionImpl.replaceOne(ClientSession,Bson,TDocument,UpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.MongoCollectionImpl.toBsonDocumentList(List<? extends Bson>)",2,2,3
"com.mongodb.MongoCollectionImpl.toUpdateResult(BulkWriteResult)",2,4,4
"com.mongodb.MongoCollectionImpl.translateBulkWriteResult(WriteRequest,BulkWriteResult)",5,6,6
"com.mongodb.MongoCollectionImpl.updateMany(Bson,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.updateMany(Bson,Bson,UpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.updateMany(ClientSession,Bson,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.updateMany(ClientSession,Bson,Bson,UpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.updateOne(Bson,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.updateOne(Bson,Bson,UpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.updateOne(ClientSession,Bson,Bson)",1,1,1
"com.mongodb.MongoCollectionImpl.updateOne(ClientSession,Bson,Bson,UpdateOptions)",1,1,1
"com.mongodb.MongoCollectionImpl.watch()",1,1,1
"com.mongodb.MongoCollectionImpl.watch(Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.watch(ClientSession)",1,1,1
"com.mongodb.MongoCollectionImpl.watch(ClientSession,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.watch(ClientSession,List<? extends Bson>)",1,1,1
"com.mongodb.MongoCollectionImpl.watch(ClientSession,List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.watch(List<? extends Bson>)",1,1,1
"com.mongodb.MongoCollectionImpl.watch(List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.MongoCollectionImpl.withCodecRegistry(CodecRegistry)",1,1,1
"com.mongodb.MongoCollectionImpl.withDocumentClass(Class<NewTDocument>)",1,1,1
"com.mongodb.MongoCollectionImpl.withReadConcern(ReadConcern)",1,1,1
"com.mongodb.MongoCollectionImpl.withReadPreference(ReadPreference)",1,1,1
"com.mongodb.MongoCollectionImpl.withWriteConcern(WriteConcern)",1,1,1
"com.mongodb.MongoCommandException.MongoCommandException(BsonDocument,ServerAddress)",1,1,1
"com.mongodb.MongoCommandException.extractErrorCode(BsonDocument)",1,1,1
"com.mongodb.MongoCommandException.extractErrorMessage(BsonDocument)",1,1,1
"com.mongodb.MongoCommandException.getErrorCode()",1,1,1
"com.mongodb.MongoCommandException.getErrorMessage()",1,1,1
"com.mongodb.MongoCommandException.getResponse()",1,1,1
"com.mongodb.MongoCommandException.getResponseAsJson(BsonDocument)",1,1,1
"com.mongodb.MongoCompressor.MongoCompressor(MongoCompressor,String,T)",1,1,1
"com.mongodb.MongoCompressor.MongoCompressor(String)",1,1,1
"com.mongodb.MongoCompressor.createSnappyCompressor()",1,1,1
"com.mongodb.MongoCompressor.createZlibCompressor()",1,1,1
"com.mongodb.MongoCompressor.equals(Object)",4,2,5
"com.mongodb.MongoCompressor.getName()",1,1,1
"com.mongodb.MongoCompressor.getProperty(String,T)",1,2,3
"com.mongodb.MongoCompressor.hashCode()",1,1,1
"com.mongodb.MongoCompressor.toString()",1,1,1
"com.mongodb.MongoCompressor.withProperty(String,T)",1,1,1
"com.mongodb.MongoConfigurationException.MongoConfigurationException(String)",1,1,1
"com.mongodb.MongoCredential.MongoCredential(AuthenticationMechanism,String,String,char[])",5,2,13
"com.mongodb.MongoCredential.MongoCredential(MongoCredential,String,T)",1,1,1
"com.mongodb.MongoCredential.createCredential(String,String,char[])",1,1,1
"com.mongodb.MongoCredential.createGSSAPICredential(String)",1,1,1
"com.mongodb.MongoCredential.createMongoCRCredential(String,String,char[])",1,1,1
"com.mongodb.MongoCredential.createMongoX509Credential()",1,1,1
"com.mongodb.MongoCredential.createMongoX509Credential(String)",1,1,1
"com.mongodb.MongoCredential.createPlainCredential(String,String,char[])",1,1,1
"com.mongodb.MongoCredential.createScramSha1Credential(String,String,char[])",1,1,1
"com.mongodb.MongoCredential.equals(Object)",8,3,10
"com.mongodb.MongoCredential.getAuthenticationMechanism()",1,1,1
"com.mongodb.MongoCredential.getMechanism()",1,2,2
"com.mongodb.MongoCredential.getMechanismProperty(String,T)",1,1,2
"com.mongodb.MongoCredential.getPassword()",2,1,2
"com.mongodb.MongoCredential.getSource()",1,1,1
"com.mongodb.MongoCredential.getUserName()",1,1,1
"com.mongodb.MongoCredential.hashCode()",1,4,4
"com.mongodb.MongoCredential.toString()",1,1,1
"com.mongodb.MongoCredential.withMechanismProperty(String,T)",1,1,1
"com.mongodb.MongoCursorAdapter.MongoCursorAdapter(MongoCursor<DBObject>)",1,1,1
"com.mongodb.MongoCursorAdapter.close()",1,1,1
"com.mongodb.MongoCursorAdapter.getCursorId()",1,1,1
"com.mongodb.MongoCursorAdapter.getServerAddress()",1,1,1
"com.mongodb.MongoCursorAdapter.hasNext()",1,1,1
"com.mongodb.MongoCursorAdapter.next()",1,1,1
"com.mongodb.MongoCursorAdapter.remove()",1,1,1
"com.mongodb.MongoCursorNotFoundException.MongoCursorNotFoundException(long,ServerAddress)",1,1,1
"com.mongodb.MongoCursorNotFoundException.getCursorId()",1,1,1
"com.mongodb.MongoCursorNotFoundException.getServerAddress()",1,1,1
"com.mongodb.MongoDatabaseImpl.MongoDatabaseImpl(String,CodecRegistry,ReadPreference,WriteConcern,ReadConcern,OperationExecutor)",1,1,1
"com.mongodb.MongoDatabaseImpl.createBsonDocumentList(List<? extends Bson>)",3,2,3
"com.mongodb.MongoDatabaseImpl.createCollection(ClientSession,String)",1,1,1
"com.mongodb.MongoDatabaseImpl.createCollection(ClientSession,String,CreateCollectionOptions)",1,1,1
"com.mongodb.MongoDatabaseImpl.createCollection(String)",1,1,1
"com.mongodb.MongoDatabaseImpl.createCollection(String,CreateCollectionOptions)",1,1,1
"com.mongodb.MongoDatabaseImpl.createView(ClientSession,String,String,List<? extends Bson>)",1,1,1
"com.mongodb.MongoDatabaseImpl.createView(ClientSession,String,String,List<? extends Bson>,CreateViewOptions)",1,1,1
"com.mongodb.MongoDatabaseImpl.createView(String,String,List<? extends Bson>)",1,1,1
"com.mongodb.MongoDatabaseImpl.createView(String,String,List<? extends Bson>,CreateViewOptions)",1,1,1
"com.mongodb.MongoDatabaseImpl.drop()",1,1,1
"com.mongodb.MongoDatabaseImpl.drop(ClientSession)",1,1,1
"com.mongodb.MongoDatabaseImpl.executeCommand(ClientSession,Bson,ReadPreference,Class<TResult>)",1,1,1
"com.mongodb.MongoDatabaseImpl.executeCreateCollection(ClientSession,String,CreateCollectionOptions)",1,5,5
"com.mongodb.MongoDatabaseImpl.executeCreateView(ClientSession,String,String,List<? extends Bson>,CreateViewOptions)",1,1,1
"com.mongodb.MongoDatabaseImpl.executeDrop(ClientSession)",1,1,1
"com.mongodb.MongoDatabaseImpl.executeListCollectionNames(ClientSession)",1,1,1
"com.mongodb.MongoDatabaseImpl.executeListCollections(ClientSession,Class<TResult>)",1,1,1
"com.mongodb.MongoDatabaseImpl.getCodecRegistry()",1,1,1
"com.mongodb.MongoDatabaseImpl.getCollection(String)",1,1,1
"com.mongodb.MongoDatabaseImpl.getCollection(String,Class<TDocument>)",1,1,1
"com.mongodb.MongoDatabaseImpl.getName()",1,1,1
"com.mongodb.MongoDatabaseImpl.getReadConcern()",1,1,1
"com.mongodb.MongoDatabaseImpl.getReadPreference()",1,1,1
"com.mongodb.MongoDatabaseImpl.getWriteConcern()",1,1,1
"com.mongodb.MongoDatabaseImpl.listCollectionNames()",1,1,1
"com.mongodb.MongoDatabaseImpl.listCollectionNames(ClientSession)",1,1,1
"com.mongodb.MongoDatabaseImpl.listCollections()",1,1,1
"com.mongodb.MongoDatabaseImpl.listCollections(Class<TResult>)",1,1,1
"com.mongodb.MongoDatabaseImpl.listCollections(ClientSession)",1,1,1
"com.mongodb.MongoDatabaseImpl.listCollections(ClientSession,Class<TResult>)",1,1,1
"com.mongodb.MongoDatabaseImpl.runCommand(Bson)",1,1,1
"com.mongodb.MongoDatabaseImpl.runCommand(Bson,Class<TResult>)",1,1,1
"com.mongodb.MongoDatabaseImpl.runCommand(Bson,ReadPreference)",1,1,1
"com.mongodb.MongoDatabaseImpl.runCommand(Bson,ReadPreference,Class<TResult>)",1,1,1
"com.mongodb.MongoDatabaseImpl.runCommand(ClientSession,Bson)",1,1,1
"com.mongodb.MongoDatabaseImpl.runCommand(ClientSession,Bson,Class<TResult>)",1,1,1
"com.mongodb.MongoDatabaseImpl.runCommand(ClientSession,Bson,ReadPreference)",1,1,1
"com.mongodb.MongoDatabaseImpl.runCommand(ClientSession,Bson,ReadPreference,Class<TResult>)",1,1,1
"com.mongodb.MongoDatabaseImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.MongoDatabaseImpl.withCodecRegistry(CodecRegistry)",1,1,1
"com.mongodb.MongoDatabaseImpl.withReadConcern(ReadConcern)",1,1,1
"com.mongodb.MongoDatabaseImpl.withReadPreference(ReadPreference)",1,1,1
"com.mongodb.MongoDatabaseImpl.withWriteConcern(WriteConcern)",1,1,1
"com.mongodb.MongoException.MongoException(String)",1,1,1
"com.mongodb.MongoException.MongoException(String,Throwable)",1,1,1
"com.mongodb.MongoException.MongoException(int,String)",1,1,1
"com.mongodb.MongoException.MongoException(int,String,Throwable)",1,1,1
"com.mongodb.MongoException.fromThrowable(Throwable)",3,3,3
"com.mongodb.MongoException.getCode()",1,1,1
"com.mongodb.MongoExecutionTimeoutException.MongoExecutionTimeoutException(int,String)",1,1,1
"com.mongodb.MongoGridFSException.MongoGridFSException(String)",1,1,1
"com.mongodb.MongoGridFSException.MongoGridFSException(String,Throwable)",1,1,1
"com.mongodb.MongoIncompatibleDriverException.MongoIncompatibleDriverException(String,ClusterDescription)",1,1,1
"com.mongodb.MongoIncompatibleDriverException.getClusterDescription()",1,1,1
"com.mongodb.MongoInternalException.MongoInternalException(String)",1,1,1
"com.mongodb.MongoInternalException.MongoInternalException(String,Throwable)",1,1,1
"com.mongodb.MongoInterruptedException.MongoInterruptedException(String,Exception)",1,1,1
"com.mongodb.MongoIterableImpl.MongoIterableImpl(ClientSession,OperationExecutor,ReadConcern,ReadPreference)",1,1,1
"com.mongodb.MongoIterableImpl.batchSize(int)",1,1,1
"com.mongodb.MongoIterableImpl.execute()",1,1,1
"com.mongodb.MongoIterableImpl.first()",2,1,2
"com.mongodb.MongoIterableImpl.forEach(Block<? super TResult>)",1,2,2
"com.mongodb.MongoIterableImpl.getBatchSize()",1,1,1
"com.mongodb.MongoIterableImpl.getClientSession()",1,1,1
"com.mongodb.MongoIterableImpl.getExecutor()",1,1,1
"com.mongodb.MongoIterableImpl.getReadConcern()",1,1,1
"com.mongodb.MongoIterableImpl.getReadPreference()",1,1,1
"com.mongodb.MongoIterableImpl.into(A)",1,1,1
"com.mongodb.MongoIterableImpl.iterator()",1,1,1
"com.mongodb.MongoIterableImpl.map(Function<TResult, U>)",1,1,1
"com.mongodb.MongoMappingCursor.MongoMappingCursor(MongoCursor<T>,Function<T, U>)",1,1,1
"com.mongodb.MongoMappingCursor.close()",1,1,1
"com.mongodb.MongoMappingCursor.getServerAddress()",1,1,1
"com.mongodb.MongoMappingCursor.getServerCursor()",1,1,1
"com.mongodb.MongoMappingCursor.hasNext()",1,1,1
"com.mongodb.MongoMappingCursor.next()",1,1,1
"com.mongodb.MongoMappingCursor.remove()",1,1,1
"com.mongodb.MongoMappingCursor.tryNext()",2,2,2
"com.mongodb.MongoNamespace.MongoNamespace(String)",1,1,1
"com.mongodb.MongoNamespace.MongoNamespace(String,String)",1,1,1
"com.mongodb.MongoNamespace.checkCollectionNameValidity(String)",1,1,1
"com.mongodb.MongoNamespace.checkDatabaseNameValidity(String)",1,2,2
"com.mongodb.MongoNamespace.equals(Object)",5,2,6
"com.mongodb.MongoNamespace.getCollectionName()",1,1,1
"com.mongodb.MongoNamespace.getCollectionNameFullName(String)",3,1,3
"com.mongodb.MongoNamespace.getDatabaseName()",1,1,1
"com.mongodb.MongoNamespace.getDatatabaseNameFromFullName(String)",3,1,3
"com.mongodb.MongoNamespace.getFullName()",1,1,1
"com.mongodb.MongoNamespace.hashCode()",1,1,1
"com.mongodb.MongoNamespace.toString()",1,1,1
"com.mongodb.MongoNodeIsRecoveringException.MongoNodeIsRecoveringException(ServerAddress)",1,1,1
"com.mongodb.MongoNotPrimaryException.MongoNotPrimaryException(ServerAddress)",1,1,1
"com.mongodb.MongoOptions.MongoOptions()",1,1,1
"com.mongodb.MongoOptions.MongoOptions(MongoClientOptions)",1,1,1
"com.mongodb.MongoOptions.copy()",1,1,1
"com.mongodb.MongoOptions.equals(Object)",23,9,31
"com.mongodb.MongoOptions.getConnectTimeout()",1,1,1
"com.mongodb.MongoOptions.getConnectionsPerHost()",1,1,1
"com.mongodb.MongoOptions.getDbDecoderFactory()",1,1,1
"com.mongodb.MongoOptions.getDbEncoderFactory()",1,1,1
"com.mongodb.MongoOptions.getDescription()",1,1,1
"com.mongodb.MongoOptions.getMaxWaitTime()",1,1,1
"com.mongodb.MongoOptions.getReadPreference()",1,1,1
"com.mongodb.MongoOptions.getRequiredReplicaSetName()",1,1,1
"com.mongodb.MongoOptions.getSocketFactory()",1,1,1
"com.mongodb.MongoOptions.getSocketTimeout()",1,1,1
"com.mongodb.MongoOptions.getThreadsAllowedToBlockForConnectionMultiplier()",1,1,1
"com.mongodb.MongoOptions.getW()",1,1,1
"com.mongodb.MongoOptions.getWriteConcern()",1,7,10
"com.mongodb.MongoOptions.getWtimeout()",1,1,1
"com.mongodb.MongoOptions.hashCode()",1,8,14
"com.mongodb.MongoOptions.isAlwaysUseMBeans()",1,1,1
"com.mongodb.MongoOptions.isCursorFinalizerEnabled()",1,1,1
"com.mongodb.MongoOptions.isFsync()",1,1,1
"com.mongodb.MongoOptions.isJ()",1,1,1
"com.mongodb.MongoOptions.isSafe()",1,1,1
"com.mongodb.MongoOptions.isSocketKeepAlive()",1,1,1
"com.mongodb.MongoOptions.reset()",1,1,1
"com.mongodb.MongoOptions.setAlwaysUseMBeans(boolean)",1,1,1
"com.mongodb.MongoOptions.setConnectTimeout(int)",1,1,1
"com.mongodb.MongoOptions.setConnectionsPerHost(int)",1,1,1
"com.mongodb.MongoOptions.setCursorFinalizerEnabled(boolean)",1,1,1
"com.mongodb.MongoOptions.setDbDecoderFactory(DBDecoderFactory)",1,1,1
"com.mongodb.MongoOptions.setDbEncoderFactory(DBEncoderFactory)",1,1,1
"com.mongodb.MongoOptions.setDescription(String)",1,1,1
"com.mongodb.MongoOptions.setFsync(boolean)",1,1,1
"com.mongodb.MongoOptions.setJ(boolean)",1,1,1
"com.mongodb.MongoOptions.setMaxWaitTime(int)",1,1,1
"com.mongodb.MongoOptions.setReadPreference(ReadPreference)",1,1,1
"com.mongodb.MongoOptions.setSafe(boolean)",1,1,1
"com.mongodb.MongoOptions.setSocketFactory(SocketFactory)",1,1,1
"com.mongodb.MongoOptions.setSocketKeepAlive(boolean)",1,1,1
"com.mongodb.MongoOptions.setSocketTimeout(int)",1,1,1
"com.mongodb.MongoOptions.setThreadsAllowedToBlockForConnectionMultiplier(int)",1,1,1
"com.mongodb.MongoOptions.setW(int)",1,1,1
"com.mongodb.MongoOptions.setWriteConcern(WriteConcern)",1,1,1
"com.mongodb.MongoOptions.setWtimeout(int)",1,1,1
"com.mongodb.MongoOptions.toClientOptions()",1,2,2
"com.mongodb.MongoOptions.toString()",1,1,1
"com.mongodb.MongoQueryException.MongoQueryException(ServerAddress,int,String)",1,1,1
"com.mongodb.MongoQueryException.getErrorCode()",1,1,1
"com.mongodb.MongoQueryException.getErrorMessage()",1,1,1
"com.mongodb.MongoSecurityException.MongoSecurityException(MongoCredential,String)",1,1,1
"com.mongodb.MongoSecurityException.MongoSecurityException(MongoCredential,String,Throwable)",1,1,1
"com.mongodb.MongoSecurityException.getCredential()",1,1,1
"com.mongodb.MongoServerException.MongoServerException(String,ServerAddress)",1,1,1
"com.mongodb.MongoServerException.MongoServerException(int,String,ServerAddress)",1,1,1
"com.mongodb.MongoServerException.getServerAddress()",1,1,1
"com.mongodb.MongoSocketClosedException.MongoSocketClosedException(String,ServerAddress)",1,1,1
"com.mongodb.MongoSocketException.MongoSocketException(String,ServerAddress)",1,1,1
"com.mongodb.MongoSocketException.MongoSocketException(String,ServerAddress,Throwable)",1,1,1
"com.mongodb.MongoSocketException.getServerAddress()",1,1,1
"com.mongodb.MongoSocketOpenException.MongoSocketOpenException(String,ServerAddress,Throwable)",1,1,1
"com.mongodb.MongoSocketReadException.MongoSocketReadException(String,ServerAddress)",1,1,1
"com.mongodb.MongoSocketReadException.MongoSocketReadException(String,ServerAddress,Throwable)",1,1,1
"com.mongodb.MongoSocketReadTimeoutException.MongoSocketReadTimeoutException(String,ServerAddress,Throwable)",1,1,1
"com.mongodb.MongoSocketWriteException.MongoSocketWriteException(String,ServerAddress,Throwable)",1,1,1
"com.mongodb.MongoTimeoutException.MongoTimeoutException(String)",1,1,1
"com.mongodb.MongoURI.MongoURI(MongoClientURI)",1,1,1
"com.mongodb.MongoURI.MongoURI(String)",1,1,1
"com.mongodb.MongoURI.connect()",1,1,1
"com.mongodb.MongoURI.connectCollection(DB)",1,1,1
"com.mongodb.MongoURI.connectCollection(Mongo)",1,1,1
"com.mongodb.MongoURI.connectDB()",1,1,1
"com.mongodb.MongoURI.connectDB(Mongo)",1,1,1
"com.mongodb.MongoURI.getCollection()",1,1,1
"com.mongodb.MongoURI.getCredentials()",1,1,1
"com.mongodb.MongoURI.getDatabase()",1,1,1
"com.mongodb.MongoURI.getHosts()",1,1,1
"com.mongodb.MongoURI.getOptions()",1,1,1
"com.mongodb.MongoURI.getPassword()",1,1,1
"com.mongodb.MongoURI.getUsername()",1,1,1
"com.mongodb.MongoURI.toClientURI()",1,1,1
"com.mongodb.MongoURI.toString()",1,1,1
"com.mongodb.MongoWaitQueueFullException.MongoWaitQueueFullException(String)",1,1,1
"com.mongodb.MongoWriteConcernException.MongoWriteConcernException(WriteConcernError,ServerAddress)",1,1,1
"com.mongodb.MongoWriteConcernException.MongoWriteConcernException(WriteConcernError,WriteConcernResult,ServerAddress)",1,1,1
"com.mongodb.MongoWriteConcernException.getWriteConcernError()",1,1,1
"com.mongodb.MongoWriteConcernException.getWriteResult()",1,1,1
"com.mongodb.MongoWriteException.MongoWriteException(WriteError,ServerAddress)",1,1,1
"com.mongodb.MongoWriteException.getError()",1,1,1
"com.mongodb.ParallelScanOptions.Builder.batchSize(int)",1,1,1
"com.mongodb.ParallelScanOptions.Builder.build()",1,1,1
"com.mongodb.ParallelScanOptions.Builder.numCursors(int)",1,1,1
"com.mongodb.ParallelScanOptions.Builder.readPreference(ReadPreference)",1,1,1
"com.mongodb.ParallelScanOptions.ParallelScanOptions(Builder)",1,1,1
"com.mongodb.ParallelScanOptions.builder()",1,1,1
"com.mongodb.ParallelScanOptions.getBatchSize()",1,1,1
"com.mongodb.ParallelScanOptions.getNumCursors()",1,1,1
"com.mongodb.ParallelScanOptions.getReadPreference()",1,1,1
"com.mongodb.QueryBuilder.QueryBuilder()",1,1,1
"com.mongodb.QueryBuilder.QueryBuilderException.QueryBuilderException(String)",1,1,1
"com.mongodb.QueryBuilder.addOperand(String,Object)",2,5,6
"com.mongodb.QueryBuilder.all(Object)",1,1,1
"com.mongodb.QueryBuilder.and(DBObject...)",1,2,2
"com.mongodb.QueryBuilder.and(String)",1,1,1
"com.mongodb.QueryBuilder.convertToListOfLists(List<Double[]>)",1,2,2
"com.mongodb.QueryBuilder.elemMatch(DBObject)",1,1,1
"com.mongodb.QueryBuilder.exists(Object)",1,1,1
"com.mongodb.QueryBuilder.get()",3,2,3
"com.mongodb.QueryBuilder.greaterThan(Object)",1,1,1
"com.mongodb.QueryBuilder.greaterThanEquals(Object)",1,1,1
"com.mongodb.QueryBuilder.in(Object)",1,1,1
"com.mongodb.QueryBuilder.is(Object)",1,1,1
"com.mongodb.QueryBuilder.lessThan(Object)",1,1,1
"com.mongodb.QueryBuilder.lessThanEquals(Object)",1,1,1
"com.mongodb.QueryBuilder.mod(Object)",1,1,1
"com.mongodb.QueryBuilder.near(double,double)",1,1,1
"com.mongodb.QueryBuilder.near(double,double,double)",1,1,1
"com.mongodb.QueryBuilder.nearSphere(double,double)",1,1,1
"com.mongodb.QueryBuilder.nearSphere(double,double,double)",1,1,1
"com.mongodb.QueryBuilder.not()",1,1,1
"com.mongodb.QueryBuilder.notEquals(Object)",1,1,1
"com.mongodb.QueryBuilder.notIn(Object)",1,1,1
"com.mongodb.QueryBuilder.or(DBObject...)",1,2,2
"com.mongodb.QueryBuilder.put(String)",1,2,2
"com.mongodb.QueryBuilder.regex(Pattern)",1,1,1
"com.mongodb.QueryBuilder.size(Object)",1,1,1
"com.mongodb.QueryBuilder.start()",1,1,1
"com.mongodb.QueryBuilder.start(String)",1,1,1
"com.mongodb.QueryBuilder.text(String)",1,1,1
"com.mongodb.QueryBuilder.text(String,String)",2,2,3
"com.mongodb.QueryBuilder.withinBox(double,double,double,double)",1,1,1
"com.mongodb.QueryBuilder.withinCenter(double,double,double)",1,1,1
"com.mongodb.QueryBuilder.withinCenterSphere(double,double,double)",1,1,1
"com.mongodb.QueryBuilder.withinPolygon(List<Double[]>)",2,3,4
"com.mongodb.QueryOperators.QueryOperators()",1,1,1
"com.mongodb.ReadConcern.ReadConcern()",1,1,1
"com.mongodb.ReadConcern.ReadConcern(ReadConcernLevel)",1,1,1
"com.mongodb.ReadConcern.asDocument()",1,2,2
"com.mongodb.ReadConcern.equals(Object)",3,2,4
"com.mongodb.ReadConcern.getLevel()",1,1,1
"com.mongodb.ReadConcern.hashCode()",1,2,2
"com.mongodb.ReadConcern.isServerDefault()",1,1,1
"com.mongodb.ReadConcernLevel.ReadConcernLevel(String)",1,1,1
"com.mongodb.ReadConcernLevel.fromString(String)",3,2,3
"com.mongodb.ReadConcernLevel.getValue()",1,1,1
"com.mongodb.ReadPreference.PrimaryReadPreference.PrimaryReadPreference()",1,1,1
"com.mongodb.ReadPreference.PrimaryReadPreference.chooseForNonReplicaSet(ClusterDescription)",1,1,1
"com.mongodb.ReadPreference.PrimaryReadPreference.chooseForReplicaSet(ClusterDescription)",1,1,1
"com.mongodb.ReadPreference.PrimaryReadPreference.equals(Object)",1,2,2
"com.mongodb.ReadPreference.PrimaryReadPreference.getName()",1,1,1
"com.mongodb.ReadPreference.PrimaryReadPreference.hashCode()",1,1,1
"com.mongodb.ReadPreference.PrimaryReadPreference.isSlaveOk()",1,1,1
"com.mongodb.ReadPreference.PrimaryReadPreference.toDocument()",1,1,1
"com.mongodb.ReadPreference.PrimaryReadPreference.toString()",1,1,1
"com.mongodb.ReadPreference.ReadPreference()",1,1,1
"com.mongodb.ReadPreference.choose(ClusterDescription)",5,5,5
"com.mongodb.ReadPreference.nearest()",1,1,1
"com.mongodb.ReadPreference.nearest(List<TagSet>)",1,1,1
"com.mongodb.ReadPreference.nearest(List<TagSet>,long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.nearest(TagSet)",1,1,1
"com.mongodb.ReadPreference.nearest(TagSet,long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.nearest(long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.primary()",1,1,1
"com.mongodb.ReadPreference.primaryPreferred()",1,1,1
"com.mongodb.ReadPreference.primaryPreferred(List<TagSet>)",1,1,1
"com.mongodb.ReadPreference.primaryPreferred(List<TagSet>,long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.primaryPreferred(TagSet)",1,1,1
"com.mongodb.ReadPreference.primaryPreferred(TagSet,long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.primaryPreferred(long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.secondary()",1,1,1
"com.mongodb.ReadPreference.secondary(List<TagSet>)",1,1,1
"com.mongodb.ReadPreference.secondary(List<TagSet>,long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.secondary(TagSet)",1,1,1
"com.mongodb.ReadPreference.secondary(TagSet,long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.secondary(long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.secondaryPreferred()",1,1,1
"com.mongodb.ReadPreference.secondaryPreferred(List<TagSet>)",1,1,1
"com.mongodb.ReadPreference.secondaryPreferred(List<TagSet>,long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.secondaryPreferred(TagSet)",1,1,1
"com.mongodb.ReadPreference.secondaryPreferred(TagSet,long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.secondaryPreferred(long,TimeUnit)",1,1,1
"com.mongodb.ReadPreference.valueOf(String)",7,1,7
"com.mongodb.ReadPreference.valueOf(String,List<TagSet>)",1,1,1
"com.mongodb.ReadPreference.valueOf(String,List<TagSet>,Long,TimeUnit)",6,1,6
"com.mongodb.ReadPreference.valueOf(String,List<TagSet>,long,TimeUnit)",1,1,1
"com.mongodb.ReflectionDBObject.FieldInfo.FieldInfo(String,Class<? extends DBObject>)",1,1,1
"com.mongodb.ReflectionDBObject.FieldInfo.ok()",1,1,2
"com.mongodb.ReflectionDBObject.JavaWrapper.JavaWrapper(Class)",4,8,11
"com.mongodb.ReflectionDBObject.JavaWrapper.containsKey(String)",1,1,1
"com.mongodb.ReflectionDBObject.JavaWrapper.get(ReflectionDBObject,String)",2,1,3
"com.mongodb.ReflectionDBObject.JavaWrapper.getInternalClass(List<String>)",4,1,4
"com.mongodb.ReflectionDBObject.JavaWrapper.keySet()",1,1,1
"com.mongodb.ReflectionDBObject.JavaWrapper.set(ReflectionDBObject,String,Object)",2,1,3
"com.mongodb.ReflectionDBObject.containsField(String)",1,1,1
"com.mongodb.ReflectionDBObject.containsKey(String)",1,1,1
"com.mongodb.ReflectionDBObject.get(String)",1,1,1
"com.mongodb.ReflectionDBObject.getWrapper()",2,1,2
"com.mongodb.ReflectionDBObject.getWrapper(Class)",1,2,2
"com.mongodb.ReflectionDBObject.getWrapperIfReflectionObject(Class)",2,2,2
"com.mongodb.ReflectionDBObject.get_id()",1,1,1
"com.mongodb.ReflectionDBObject.isPartialObject()",1,1,1
"com.mongodb.ReflectionDBObject.keySet()",1,1,1
"com.mongodb.ReflectionDBObject.markAsPartialObject()",1,1,1
"com.mongodb.ReflectionDBObject.put(String,Object)",1,1,1
"com.mongodb.ReflectionDBObject.putAll(BSONObject)",1,2,2
"com.mongodb.ReflectionDBObject.putAll(Map)",1,2,2
"com.mongodb.ReflectionDBObject.removeField(String)",1,1,1
"com.mongodb.ReflectionDBObject.set_id(Object)",1,1,1
"com.mongodb.ReflectionDBObject.toMap()",1,2,2
"com.mongodb.RemoveRequest.RemoveRequest(DBObject,boolean,Encoder<DBObject>,Collation)",1,1,1
"com.mongodb.RemoveRequest.getQuery()",1,1,1
"com.mongodb.RemoveRequest.isMulti()",1,1,1
"com.mongodb.RemoveRequest.toNew(DBCollection)",1,1,1
"com.mongodb.ReplaceRequest.ReplaceRequest(DBObject,DBObject,boolean,Encoder<DBObject>,Encoder<DBObject>,Collation)",1,1,1
"com.mongodb.ReplaceRequest.getCollation()",1,1,1
"com.mongodb.ReplaceRequest.getDocument()",1,1,1
"com.mongodb.ReplaceRequest.getQuery()",1,1,1
"com.mongodb.ReplaceRequest.isUpsert()",1,1,1
"com.mongodb.ReplaceRequest.toNew(DBCollection)",1,1,1
"com.mongodb.ReplicaSetStatus.ReplicaSetStatus(Cluster)",1,1,1
"com.mongodb.ReplicaSetStatus.getClusterDescription()",1,1,1
"com.mongodb.ReplicaSetStatus.getMaster()",1,2,2
"com.mongodb.ReplicaSetStatus.getMaxBsonObjectSize()",1,2,2
"com.mongodb.ReplicaSetStatus.getName()",1,2,2
"com.mongodb.ReplicaSetStatus.isMaster(ServerAddress)",1,1,1
"com.mongodb.ReplicaSetStatus.toString()",1,1,1
"com.mongodb.ServerAddress.ServerAddress()",1,1,1
"com.mongodb.ServerAddress.ServerAddress(InetAddress)",1,1,1
"com.mongodb.ServerAddress.ServerAddress(InetAddress,int)",1,1,1
"com.mongodb.ServerAddress.ServerAddress(InetSocketAddress)",1,1,1
"com.mongodb.ServerAddress.ServerAddress(String)",1,1,1
"com.mongodb.ServerAddress.ServerAddress(String,int)",7,6,11
"com.mongodb.ServerAddress.defaultHost()",1,1,1
"com.mongodb.ServerAddress.defaultPort()",1,1,1
"com.mongodb.ServerAddress.equals(Object)",5,2,6
"com.mongodb.ServerAddress.getHost()",1,1,1
"com.mongodb.ServerAddress.getPort()",1,1,1
"com.mongodb.ServerAddress.getSocketAddress()",1,2,2
"com.mongodb.ServerAddress.hashCode()",1,1,1
"com.mongodb.ServerAddress.sameHost(String)",1,1,1
"com.mongodb.ServerAddress.toString()",1,1,1
"com.mongodb.ServerCursor.ServerCursor(long,ServerAddress)",3,1,3
"com.mongodb.ServerCursor.equals(Object)",5,2,6
"com.mongodb.ServerCursor.getAddress()",1,1,1
"com.mongodb.ServerCursor.getId()",1,1,1
"com.mongodb.ServerCursor.hashCode()",1,1,1
"com.mongodb.ServerCursor.toString()",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionImpl.ServerSessionImpl(BsonBinary)",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionImpl.advanceTransactionNumber()",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionImpl.close()",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionImpl.getIdentifier()",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionImpl.getLastUsedAtMillis()",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionImpl.getTransactionNumber()",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionImpl.isClosed()",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionItemFactory.close(ServerSessionImpl)",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionItemFactory.create(boolean)",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionItemFactory.createNewServerSessionIdentifier()",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionItemFactory.shouldPrune(ServerSessionImpl)",1,1,2
"com.mongodb.ServerSessionPool.ServerSessionPool(Cluster)",1,1,1
"com.mongodb.ServerSessionPool.ServerSessionPool(Cluster,Clock)",1,1,1
"com.mongodb.ServerSessionPool.close()",1,1,1
"com.mongodb.ServerSessionPool.closeSession(ServerSessionImpl)",2,2,3
"com.mongodb.ServerSessionPool.endClosedSessions()",2,1,3
"com.mongodb.ServerSessionPool.get()",1,2,2
"com.mongodb.ServerSessionPool.release(ServerSession)",1,1,1
"com.mongodb.ServerSessionPool.shouldPrune(ServerSessionImpl)",2,1,2
"com.mongodb.Tag.Tag(String,String)",1,1,1
"com.mongodb.Tag.equals(Object)",5,2,6
"com.mongodb.Tag.getName()",1,1,1
"com.mongodb.Tag.getValue()",1,1,1
"com.mongodb.Tag.hashCode()",1,1,1
"com.mongodb.Tag.toString()",1,1,1
"com.mongodb.TagSet.TagSet()",1,1,1
"com.mongodb.TagSet.TagSet(List<Tag>)",4,3,4
"com.mongodb.TagSet.TagSet(Tag)",1,1,1
"com.mongodb.TagSet.containsAll(TagSet)",1,1,1
"com.mongodb.TagSet.equals(Object)",4,2,5
"com.mongodb.TagSet.hashCode()",1,1,1
"com.mongodb.TagSet.iterator()",1,1,1
"com.mongodb.TagSet.toString()",1,1,1
"com.mongodb.TaggableReadPreference.NearestReadPreference.NearestReadPreference()",1,1,1
"com.mongodb.TaggableReadPreference.NearestReadPreference.NearestReadPreference(List<TagSet>,Long,TimeUnit)",1,1,1
"com.mongodb.TaggableReadPreference.NearestReadPreference.chooseForReplicaSet(ClusterDescription)",4,3,4
"com.mongodb.TaggableReadPreference.NearestReadPreference.getName()",1,1,1
"com.mongodb.TaggableReadPreference.PrimaryPreferredReadPreference.PrimaryPreferredReadPreference()",1,1,1
"com.mongodb.TaggableReadPreference.PrimaryPreferredReadPreference.PrimaryPreferredReadPreference(List<TagSet>,Long,TimeUnit)",1,1,1
"com.mongodb.TaggableReadPreference.PrimaryPreferredReadPreference.chooseForReplicaSet(ClusterDescription)",1,2,2
"com.mongodb.TaggableReadPreference.PrimaryPreferredReadPreference.getName()",1,1,1
"com.mongodb.TaggableReadPreference.SecondaryPreferredReadPreference.SecondaryPreferredReadPreference()",1,1,1
"com.mongodb.TaggableReadPreference.SecondaryPreferredReadPreference.SecondaryPreferredReadPreference(List<TagSet>,Long,TimeUnit)",1,1,1
"com.mongodb.TaggableReadPreference.SecondaryPreferredReadPreference.chooseForReplicaSet(ClusterDescription)",1,2,2
"com.mongodb.TaggableReadPreference.SecondaryPreferredReadPreference.getName()",1,1,1
"com.mongodb.TaggableReadPreference.SecondaryReadPreference.SecondaryReadPreference()",1,1,1
"com.mongodb.TaggableReadPreference.SecondaryReadPreference.SecondaryReadPreference(List<TagSet>,Long,TimeUnit)",1,1,1
"com.mongodb.TaggableReadPreference.SecondaryReadPreference.chooseForReplicaSet(ClusterDescription)",4,3,4
"com.mongodb.TaggableReadPreference.SecondaryReadPreference.getName()",1,1,1
"com.mongodb.TaggableReadPreference.TaggableReadPreference()",1,1,1
"com.mongodb.TaggableReadPreference.TaggableReadPreference(List<TagSet>,Long,TimeUnit)",1,3,4
"com.mongodb.TaggableReadPreference.chooseForNonReplicaSet(ClusterDescription)",1,1,1
"com.mongodb.TaggableReadPreference.copyClusterDescription(ClusterDescription,List<ServerDescription>)",1,1,1
"com.mongodb.TaggableReadPreference.equals(Object)",5,3,7
"com.mongodb.TaggableReadPreference.findMostUpToDateSecondary(ClusterDescription)",1,4,5
"com.mongodb.TaggableReadPreference.findPrimary(ClusterDescription)",3,2,3
"com.mongodb.TaggableReadPreference.getMaxStaleness(TimeUnit)",2,1,2
"com.mongodb.TaggableReadPreference.getStalenessOfSecondaryRelativeToPrimary(ServerDescription,ServerDescription,long)",1,1,1
"com.mongodb.TaggableReadPreference.getTagSetList()",1,1,1
"com.mongodb.TaggableReadPreference.hashCode()",1,2,2
"com.mongodb.TaggableReadPreference.isSlaveOk()",1,1,1
"com.mongodb.TaggableReadPreference.selectFreshServers(ClusterDescription,List<ServerDescription>)",7,9,13
"com.mongodb.TaggableReadPreference.serversAreAllThreeDotFour(ClusterDescription)",3,3,4
"com.mongodb.TaggableReadPreference.tagsListToBsonArray()",1,2,2
"com.mongodb.TaggableReadPreference.toDocument()",1,3,3
"com.mongodb.TaggableReadPreference.toDocument(TagSet)",1,2,2
"com.mongodb.TaggableReadPreference.toString()",1,1,3
"com.mongodb.UnacknowledgedBulkWriteResult.UnacknowledgedBulkWriteResult()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.equals(Object)",3,2,4
"com.mongodb.UnacknowledgedBulkWriteResult.getInsertedCount()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.getMatchedCount()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.getModifiedCount()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.getRemovedCount()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.getUnacknowledgedWriteException()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.getUpserts()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.hashCode()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.isAcknowledged()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.isModifiedCountAvailable()",1,1,1
"com.mongodb.UnacknowledgedBulkWriteResult.toString()",1,1,1
"com.mongodb.UpdateRequest.UpdateRequest(DBObject,DBObject,boolean,boolean,Encoder<DBObject>,Collation,List<? extends DBObject>)",1,1,1
"com.mongodb.UpdateRequest.getArrayFilters()",1,1,1
"com.mongodb.UpdateRequest.getCollation()",1,1,1
"com.mongodb.UpdateRequest.getQuery()",1,1,1
"com.mongodb.UpdateRequest.getUpdate()",1,1,1
"com.mongodb.UpdateRequest.isMulti()",1,1,1
"com.mongodb.UpdateRequest.isUpsert()",1,1,1
"com.mongodb.UpdateRequest.toNew(DBCollection)",1,1,1
"com.mongodb.WriteConcern.Majority.Majority()",1,1,1
"com.mongodb.WriteConcern.Majority.Majority(int,boolean,boolean)",1,1,1
"com.mongodb.WriteConcern.WriteConcern()",1,1,1
"com.mongodb.WriteConcern.WriteConcern(Object,Integer,Boolean,Boolean)",1,3,4
"com.mongodb.WriteConcern.WriteConcern(String)",1,1,1
"com.mongodb.WriteConcern.WriteConcern(String,int,boolean,boolean)",1,1,1
"com.mongodb.WriteConcern.WriteConcern(boolean)",1,1,1
"com.mongodb.WriteConcern.WriteConcern(int)",1,1,1
"com.mongodb.WriteConcern.WriteConcern(int,int)",1,1,1
"com.mongodb.WriteConcern.WriteConcern(int,int,boolean)",1,1,1
"com.mongodb.WriteConcern.WriteConcern(int,int,boolean,boolean)",1,1,1
"com.mongodb.WriteConcern.addFSync(BsonDocument)",1,2,2
"com.mongodb.WriteConcern.addJ(BsonDocument)",1,2,2
"com.mongodb.WriteConcern.addW(BsonDocument)",1,3,3
"com.mongodb.WriteConcern.addWTimeout(BsonDocument)",1,2,2
"com.mongodb.WriteConcern.asDocument()",1,1,1
"com.mongodb.WriteConcern.callGetLastError()",1,1,1
"com.mongodb.WriteConcern.equals(Object)",7,6,12
"com.mongodb.WriteConcern.fsync()",1,1,1
"com.mongodb.WriteConcern.getFsync()",1,1,2
"com.mongodb.WriteConcern.getJ()",1,1,2
"com.mongodb.WriteConcern.getJournal()",1,1,1
"com.mongodb.WriteConcern.getW()",1,1,2
"com.mongodb.WriteConcern.getWObject()",1,1,1
"com.mongodb.WriteConcern.getWString()",1,1,2
"com.mongodb.WriteConcern.getWTimeout(TimeUnit)",1,2,2
"com.mongodb.WriteConcern.getWtimeout()",1,1,2
"com.mongodb.WriteConcern.hashCode()",1,5,5
"com.mongodb.WriteConcern.isAcknowledged()",2,1,6
"com.mongodb.WriteConcern.isServerDefault()",1,1,1
"com.mongodb.WriteConcern.majorityWriteConcern(int,boolean,boolean)",1,1,1
"com.mongodb.WriteConcern.toString()",1,1,1
"com.mongodb.WriteConcern.valueOf(String)",1,1,1
"com.mongodb.WriteConcern.withFsync(boolean)",1,1,1
"com.mongodb.WriteConcern.withJ(boolean)",1,1,1
"com.mongodb.WriteConcern.withJournal(Boolean)",1,1,1
"com.mongodb.WriteConcern.withW(String)",1,1,1
"com.mongodb.WriteConcern.withW(int)",1,1,1
"com.mongodb.WriteConcern.withWTimeout(long,TimeUnit)",1,1,1
"com.mongodb.WriteConcernError.WriteConcernError(int,String,DBObject)",1,1,1
"com.mongodb.WriteConcernError.equals(Object)",6,2,7
"com.mongodb.WriteConcernError.getCode()",1,1,1
"com.mongodb.WriteConcernError.getDetails()",1,1,1
"com.mongodb.WriteConcernError.getMessage()",1,1,1
"com.mongodb.WriteConcernError.hashCode()",1,1,1
"com.mongodb.WriteConcernError.toString()",1,1,1
"com.mongodb.WriteConcernException.WriteConcernException(BsonDocument,ServerAddress,WriteConcernResult)",1,1,1
"com.mongodb.WriteConcernException.extractErrorCode(BsonDocument)",6,6,7
"com.mongodb.WriteConcernException.extractErrorMessage(BsonDocument)",3,3,3
"com.mongodb.WriteConcernException.getErrorCode()",1,1,1
"com.mongodb.WriteConcernException.getErrorMessage()",1,1,1
"com.mongodb.WriteConcernException.getResponse()",1,1,1
"com.mongodb.WriteConcernException.getWriteConcernResult()",1,1,1
"com.mongodb.WriteConcernResult.acknowledged(int,boolean,BsonValue)",7,4,11
"com.mongodb.WriteConcernResult.unacknowledged()",3,2,4
"com.mongodb.WriteError.WriteError(WriteError)",1,1,1
"com.mongodb.WriteError.WriteError(int,String,BsonDocument)",1,1,1
"com.mongodb.WriteError.equals(Object)",6,2,7
"com.mongodb.WriteError.getCategory()",1,1,1
"com.mongodb.WriteError.getCode()",1,1,1
"com.mongodb.WriteError.getDetails()",1,1,1
"com.mongodb.WriteError.getMessage()",1,1,1
"com.mongodb.WriteError.hashCode()",1,1,1
"com.mongodb.WriteError.toString()",1,1,1
"com.mongodb.WriteResult.WriteResult()",1,1,1
"com.mongodb.WriteResult.WriteResult(int,boolean,Object)",1,1,1
"com.mongodb.WriteResult.getN()",1,1,1
"com.mongodb.WriteResult.getUpsertedId()",1,1,1
"com.mongodb.WriteResult.isUpdateOfExisting()",1,1,1
"com.mongodb.WriteResult.throwIfUnacknowledged(String)",2,1,2
"com.mongodb.WriteResult.toString()",2,1,2
"com.mongodb.WriteResult.unacknowledged()",1,1,1
"com.mongodb.WriteResult.wasAcknowledged()",1,1,1
"com.mongodb.assertions.Assertions.Assertions()",1,1,1
"com.mongodb.assertions.Assertions.isTrue(String,boolean)",2,1,2
"com.mongodb.assertions.Assertions.isTrue(String,boolean,SingleResultCallback<?>)",2,2,2
"com.mongodb.assertions.Assertions.isTrueArgument(String,boolean)",2,1,2
"com.mongodb.assertions.Assertions.notNull(String,T)",2,1,2
"com.mongodb.assertions.Assertions.notNull(String,T,SingleResultCallback<?>)",2,2,2
"com.mongodb.async.client.AbstractSubscription.AbstractSubscription(Observer<? super TResult>)",1,1,1
"com.mongodb.async.client.AbstractSubscription.addToQueue(List<TResult>)",1,2,2
"com.mongodb.async.client.AbstractSubscription.addToQueue(TResult)",1,2,2
"com.mongodb.async.client.AbstractSubscription.getRequested()",1,1,1
"com.mongodb.async.client.AbstractSubscription.isTerminated()",1,1,1
"com.mongodb.async.client.AbstractSubscription.isUnsubscribed()",1,1,1
"com.mongodb.async.client.AbstractSubscription.onComplete()",1,2,2
"com.mongodb.async.client.AbstractSubscription.onError(Throwable)",1,2,2
"com.mongodb.async.client.AbstractSubscription.onNext(TResult)",1,3,3
"com.mongodb.async.client.AbstractSubscription.postTerminate()",1,1,1
"com.mongodb.async.client.AbstractSubscription.processResultsQueue()",7,8,11
"com.mongodb.async.client.AbstractSubscription.request(long)",2,2,5
"com.mongodb.async.client.AbstractSubscription.requestMoreData()",1,1,1
"com.mongodb.async.client.AbstractSubscription.terminalAction()",1,1,2
"com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue()",1,2,2
"com.mongodb.async.client.AbstractSubscription.tryRequestInitialData()",1,2,2
"com.mongodb.async.client.AbstractSubscription.unsubscribe()",1,2,3
"com.mongodb.async.client.AggregateIterableImpl.AggregateIterableImpl(MongoNamespace,Class<TDocument>,Class<TResult>,CodecRegistry,ReadPreference,ReadConcern,WriteConcern,AsyncOperationExecutor,List<? extends Bson>)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.allowDiskUse(Boolean)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.batchCursor(SingleResultCallback<AsyncBatchCursor<TResult>>)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.collation(Collation)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.comment(String)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.createBsonDocumentList()",3,2,3
"com.mongodb.async.client.AggregateIterableImpl.execute()",2,5,5
"com.mongodb.async.client.AggregateIterableImpl.first(SingleResultCallback<TResult>)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.forEach(Block<? super TResult>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.getAggregateOutCollection(List<BsonDocument>)",1,2,2
"com.mongodb.async.client.AggregateIterableImpl.hint(Bson)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.into(A,SingleResultCallback<A>)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.map(Function<TResult, U>)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.AggregateIterableImpl.toCollection(SingleResultCallback<Void>)",2,2,3
"com.mongodb.async.client.AggregateIterableImpl.useCursor(Boolean)",1,1,1
"com.mongodb.async.client.AwaitingWriteOperationIterable.AwaitingWriteOperationIterable(AsyncWriteOperation<W>,AsyncOperationExecutor,MongoIterable<T>)",1,2,2
"com.mongodb.async.client.AwaitingWriteOperationIterable.batchCursor(SingleResultCallback<AsyncBatchCursor<T>>)",1,5,5
"com.mongodb.async.client.AwaitingWriteOperationIterable.batchSize(int)",1,1,1
"com.mongodb.async.client.AwaitingWriteOperationIterable.first(SingleResultCallback<T>)",1,5,5
"com.mongodb.async.client.AwaitingWriteOperationIterable.forEach(Block<? super T>,SingleResultCallback<Void>)",1,5,5
"com.mongodb.async.client.AwaitingWriteOperationIterable.into(A,SingleResultCallback<A>)",1,5,5
"com.mongodb.async.client.AwaitingWriteOperationIterable.map(Function<T, U>)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.ChangeStreamIterableImpl(MongoNamespace,CodecRegistry,ReadPreference,ReadConcern,AsyncOperationExecutor,List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.batchCursor(SingleResultCallback<AsyncBatchCursor<ChangeStreamDocument<TResult>>>)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.collation(Collation)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.createBsonDocumentList(List<? extends Bson>)",3,2,3
"com.mongodb.async.client.ChangeStreamIterableImpl.execute(Codec<S>)",1,2,2
"com.mongodb.async.client.ChangeStreamIterableImpl.first(SingleResultCallback<ChangeStreamDocument<TResult>>)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.forEach(Block<? super ChangeStreamDocument<TResult>>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.fullDocument(FullDocument)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.into(A,SingleResultCallback<A>)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.map(Function<ChangeStreamDocument<TResult>, U>)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.resumeAfter(BsonDocument)",1,1,1
"com.mongodb.async.client.ChangeStreamIterableImpl.withDocumentClass(Class<S>)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.DistinctIterableImpl(MongoNamespace,Class<TDocument>,Class<TResult>,CodecRegistry,ReadPreference,ReadConcern,AsyncOperationExecutor,String,Bson)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.batchCursor(SingleResultCallback<AsyncBatchCursor<TResult>>)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.collation(Collation)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.execute()",1,2,2
"com.mongodb.async.client.DistinctIterableImpl.filter(Bson)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.first(SingleResultCallback<TResult>)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.forEach(Block<? super TResult>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.into(A,SingleResultCallback<A>)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.map(Function<TResult, U>)",1,1,1
"com.mongodb.async.client.DistinctIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.FindIterableImpl.FindIterableImpl(MongoNamespace,Class<TDocument>,Class<TResult>,CodecRegistry,ReadPreference,ReadConcern,AsyncOperationExecutor,Bson,FindOptions)",1,1,1
"com.mongodb.async.client.FindIterableImpl.batchCursor(SingleResultCallback<AsyncBatchCursor<TResult>>)",1,1,1
"com.mongodb.async.client.FindIterableImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.FindIterableImpl.collation(Collation)",1,1,1
"com.mongodb.async.client.FindIterableImpl.comment(String)",1,1,1
"com.mongodb.async.client.FindIterableImpl.createQueryOperation()",1,1,1
"com.mongodb.async.client.FindIterableImpl.cursorType(CursorType)",1,1,1
"com.mongodb.async.client.FindIterableImpl.execute()",1,1,1
"com.mongodb.async.client.FindIterableImpl.execute(FindOperation<TResult>)",1,1,1
"com.mongodb.async.client.FindIterableImpl.filter(Bson)",1,1,1
"com.mongodb.async.client.FindIterableImpl.first(SingleResultCallback<TResult>)",1,1,1
"com.mongodb.async.client.FindIterableImpl.forEach(Block<? super TResult>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.FindIterableImpl.hint(Bson)",1,1,1
"com.mongodb.async.client.FindIterableImpl.into(A,SingleResultCallback<A>)",1,1,1
"com.mongodb.async.client.FindIterableImpl.limit(int)",1,1,1
"com.mongodb.async.client.FindIterableImpl.map(Function<TResult, U>)",1,1,1
"com.mongodb.async.client.FindIterableImpl.max(Bson)",1,1,1
"com.mongodb.async.client.FindIterableImpl.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.FindIterableImpl.maxScan(long)",1,1,1
"com.mongodb.async.client.FindIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.FindIterableImpl.min(Bson)",1,1,1
"com.mongodb.async.client.FindIterableImpl.modifiers(Bson)",1,1,1
"com.mongodb.async.client.FindIterableImpl.noCursorTimeout(boolean)",1,1,1
"com.mongodb.async.client.FindIterableImpl.oplogReplay(boolean)",1,1,1
"com.mongodb.async.client.FindIterableImpl.partial(boolean)",1,1,1
"com.mongodb.async.client.FindIterableImpl.projection(Bson)",1,1,1
"com.mongodb.async.client.FindIterableImpl.returnKey(boolean)",1,1,1
"com.mongodb.async.client.FindIterableImpl.showRecordId(boolean)",1,1,1
"com.mongodb.async.client.FindIterableImpl.skip(int)",1,1,1
"com.mongodb.async.client.FindIterableImpl.snapshot(boolean)",1,1,1
"com.mongodb.async.client.FindIterableImpl.sort(Bson)",1,1,1
"com.mongodb.async.client.FindIterableImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.async.client.FlatteningSingleResultCallbackSubscription.FlatteningSingleResultCallbackSubscription(Block<SingleResultCallback<List<TResult>>>,Observer<? super TResult>)",1,1,1
"com.mongodb.async.client.FlatteningSingleResultCallbackSubscription.checkCompleted()",1,1,1
"com.mongodb.async.client.FlatteningSingleResultCallbackSubscription.requestInitialData()",1,2,2
"com.mongodb.async.client.ListCollectionsIterableImpl.ListCollectionsIterableImpl(String,Class<TResult>,CodecRegistry,ReadPreference,AsyncOperationExecutor)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.batchCursor(SingleResultCallback<AsyncBatchCursor<TResult>>)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.createListCollectionsOperation()",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.execute()",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.execute(ListCollectionsOperation<TResult>)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.filter(Bson)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.first(SingleResultCallback<TResult>)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.forEach(Block<? super TResult>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.into(A,SingleResultCallback<A>)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.map(Function<TResult, U>)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.ListCollectionsIterableImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.async.client.ListDatabasesIterableImpl.ListDatabasesIterableImpl(Class<TResult>,CodecRegistry,ReadPreference,AsyncOperationExecutor)",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.batchCursor(SingleResultCallback<AsyncBatchCursor<TResult>>)",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.createListDatabasesOperation()",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.execute()",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.execute(ListDatabasesOperation<TResult>)",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.first(SingleResultCallback<TResult>)",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.forEach(Block<? super TResult>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.into(A,SingleResultCallback<A>)",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.map(Function<TResult, U>)",1,1,1
"com.mongodb.async.client.ListDatabasesIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.ListIndexesIterableImpl(MongoNamespace,Class<TResult>,CodecRegistry,ReadPreference,AsyncOperationExecutor)",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.batchCursor(SingleResultCallback<AsyncBatchCursor<TResult>>)",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.createListIndexesOperation()",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.execute()",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.execute(ListIndexesOperation<TResult>)",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.first(SingleResultCallback<TResult>)",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.forEach(Block<? super TResult>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.into(A,SingleResultCallback<A>)",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.map(Function<TResult, U>)",1,1,1
"com.mongodb.async.client.ListIndexesIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.MapReduceIterableImpl(MongoNamespace,Class<TDocument>,Class<TResult>,CodecRegistry,ReadPreference,ReadConcern,WriteConcern,AsyncOperationExecutor,String,String)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.action(MapReduceAction)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.batchCursor(SingleResultCallback<AsyncBatchCursor<TResult>>)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.collation(Collation)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.collectionName(String)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.createMapReduceToCollectionOperation()",1,2,2
"com.mongodb.async.client.MapReduceIterableImpl.databaseName(String)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.execute()",2,4,4
"com.mongodb.async.client.MapReduceIterableImpl.filter(Bson)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.finalizeFunction(String)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.first(SingleResultCallback<TResult>)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.forEach(Block<? super TResult>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.into(A,SingleResultCallback<A>)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.jsMode(boolean)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.limit(int)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.map(Function<TResult, U>)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.nonAtomic(boolean)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.scope(Bson)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.sharded(boolean)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.sort(Bson)",1,1,1
"com.mongodb.async.client.MapReduceIterableImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.async.client.MapReduceIterableImpl.toCollection(SingleResultCallback<Void>)",2,1,2
"com.mongodb.async.client.MapReduceIterableImpl.verbose(boolean)",1,1,1
"com.mongodb.async.client.MappingAsyncBatchCursor.MappingAsyncBatchCursor(AsyncBatchCursor<T>,Function<T, U>)",1,1,1
"com.mongodb.async.client.MappingAsyncBatchCursor.close()",1,1,1
"com.mongodb.async.client.MappingAsyncBatchCursor.getBatchSize()",1,1,1
"com.mongodb.async.client.MappingAsyncBatchCursor.getMappingCallback(SingleResultCallback<List<U>>)",1,5,5
"com.mongodb.async.client.MappingAsyncBatchCursor.isClosed()",1,1,1
"com.mongodb.async.client.MappingAsyncBatchCursor.next(SingleResultCallback<List<U>>)",1,1,1
"com.mongodb.async.client.MappingAsyncBatchCursor.setBatchSize(int)",1,1,1
"com.mongodb.async.client.MappingAsyncBatchCursor.tryNext(SingleResultCallback<List<U>>)",1,1,1
"com.mongodb.async.client.MappingIterable.MappingIterable(MongoIterable<T>,Function<T, U>)",1,1,1
"com.mongodb.async.client.MappingIterable.batchCursor(SingleResultCallback<AsyncBatchCursor<U>>)",1,2,2
"com.mongodb.async.client.MappingIterable.batchSize(int)",1,1,1
"com.mongodb.async.client.MappingIterable.first(SingleResultCallback<U>)",1,2,2
"com.mongodb.async.client.MappingIterable.forEach(Block<? super U>,SingleResultCallback<Void>)",1,2,2
"com.mongodb.async.client.MappingIterable.into(A,SingleResultCallback<A>)",1,2,2
"com.mongodb.async.client.MappingIterable.map(Function<U, V>)",1,1,1
"com.mongodb.async.client.MongoClientImpl.MongoClientImpl(MongoClientSettings,Cluster,AsyncOperationExecutor)",1,1,1
"com.mongodb.async.client.MongoClientImpl.MongoClientImpl(MongoClientSettings,Cluster,AsyncOperationExecutor,Closeable)",1,1,1
"com.mongodb.async.client.MongoClientImpl.MongoClientImpl(MongoClientSettings,Cluster,Closeable)",1,1,1
"com.mongodb.async.client.MongoClientImpl.close()",1,3,3
"com.mongodb.async.client.MongoClientImpl.createOperationExecutor(MongoClientSettings,Cluster)",1,1,1
"com.mongodb.async.client.MongoClientImpl.getCluster()",1,1,1
"com.mongodb.async.client.MongoClientImpl.getDatabase(String)",1,1,1
"com.mongodb.async.client.MongoClientImpl.getReadWriteBinding(ReadPreference,Cluster)",1,1,1
"com.mongodb.async.client.MongoClientImpl.getSettings()",1,1,1
"com.mongodb.async.client.MongoClientImpl.listDatabaseNames()",1,1,1
"com.mongodb.async.client.MongoClientImpl.listDatabases()",1,1,1
"com.mongodb.async.client.MongoClientImpl.listDatabases(Class<T>)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.Builder()",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.Builder(MongoClientSettings)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.addCommandListener(CommandListener)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.applicationName(String)",1,2,2
"com.mongodb.async.client.MongoClientSettings.Builder.build()",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.clusterSettings(ClusterSettings)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.codecRegistry(CodecRegistry)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.compressorList(List<MongoCompressor>)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.connectionPoolSettings(ConnectionPoolSettings)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.credentialList(List<MongoCredential>)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.heartbeatSocketSettings(SocketSettings)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.readConcern(ReadConcern)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.readPreference(ReadPreference)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.serverSettings(ServerSettings)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.socketSettings(SocketSettings)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.sslSettings(SslSettings)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.streamFactoryFactory(StreamFactoryFactory)",1,1,1
"com.mongodb.async.client.MongoClientSettings.Builder.writeConcern(WriteConcern)",1,1,1
"com.mongodb.async.client.MongoClientSettings.MongoClientSettings(Builder)",1,1,1
"com.mongodb.async.client.MongoClientSettings.builder()",1,1,1
"com.mongodb.async.client.MongoClientSettings.builder(MongoClientSettings)",1,1,1
"com.mongodb.async.client.MongoClientSettings.getApplicationName()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getClusterSettings()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getCodecRegistry()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getCommandListeners()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getCompressorList()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getConnectionPoolSettings()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getCredentialList()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getHeartbeatSocketSettings()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getReadConcern()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getReadPreference()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getServerSettings()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getSocketSettings()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getSslSettings()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getStreamFactoryFactory()",1,1,1
"com.mongodb.async.client.MongoClientSettings.getWriteConcern()",1,1,1
"com.mongodb.async.client.MongoClients.MongoClients()",1,1,1
"com.mongodb.async.client.MongoClients.create()",1,1,1
"com.mongodb.async.client.MongoClients.create(ConnectionString)",1,1,1
"com.mongodb.async.client.MongoClients.create(ConnectionString,MongoDriverInformation)",1,5,5
"com.mongodb.async.client.MongoClients.create(MongoClientSettings)",1,1,1
"com.mongodb.async.client.MongoClients.create(MongoClientSettings,MongoDriverInformation)",1,1,1
"com.mongodb.async.client.MongoClients.create(MongoClientSettings,MongoDriverInformation,String)",2,3,3
"com.mongodb.async.client.MongoClients.create(String)",1,1,1
"com.mongodb.async.client.MongoClients.createMongoClient(MongoClientSettings,MongoDriverInformation,StreamFactory,StreamFactory,Closeable)",1,1,1
"com.mongodb.async.client.MongoClients.getDefaultCodecRegistry()",1,1,1
"com.mongodb.async.client.MongoClients.getStreamFactory(StreamFactoryFactory,SocketSettings,SslSettings,String)",3,2,3
"com.mongodb.async.client.MongoClients.getStreamType(String)",2,2,2
"com.mongodb.async.client.MongoClients.isNetty(String)",1,1,1
"com.mongodb.async.client.MongoClients.isNio2(String)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.MongoCollectionImpl(MongoNamespace,Class<TDocument>,CodecRegistry,ReadPreference,WriteConcern,ReadConcern,AsyncOperationExecutor)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.aggregate(List<? extends Bson>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.aggregate(List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.bulkWrite(List<? extends WriteModel<? extends TDocument>>,BulkWriteOptions,SingleResultCallback<BulkWriteResult>)",9,10,10
"com.mongodb.async.client.MongoCollectionImpl.bulkWrite(List<? extends WriteModel<? extends TDocument>>,SingleResultCallback<BulkWriteResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.count(Bson,CountOptions,SingleResultCallback<Long>)",1,3,3
"com.mongodb.async.client.MongoCollectionImpl.count(Bson,SingleResultCallback<Long>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.count(SingleResultCallback<Long>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.createIndex(Bson,IndexOptions,SingleResultCallback<String>)",1,2,2
"com.mongodb.async.client.MongoCollectionImpl.createIndex(Bson,SingleResultCallback<String>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.createIndexes(List<IndexModel>,SingleResultCallback<List<String>>)",3,3,4
"com.mongodb.async.client.MongoCollectionImpl.delete(Bson,DeleteOptions,boolean,SingleResultCallback<DeleteResult>)",1,3,3
"com.mongodb.async.client.MongoCollectionImpl.deleteMany(Bson,DeleteOptions,SingleResultCallback<DeleteResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.deleteMany(Bson,SingleResultCallback<DeleteResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.deleteOne(Bson,DeleteOptions,SingleResultCallback<DeleteResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.deleteOne(Bson,SingleResultCallback<DeleteResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.distinct(String,Bson,Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.distinct(String,Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.documentToBsonDocument(TDocument)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.drop(SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.dropIndex(Bson,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.dropIndex(String,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.dropIndexes(SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.executeSingleWriteRequest(WriteRequest,Boolean,SingleResultCallback<BulkWriteResult>)",1,3,3
"com.mongodb.async.client.MongoCollectionImpl.find()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.find(Bson)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.find(Bson,Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.find(Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.findOneAndDelete(Bson,FindOneAndDeleteOptions,SingleResultCallback<TDocument>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.findOneAndDelete(Bson,SingleResultCallback<TDocument>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.findOneAndReplace(Bson,TDocument,FindOneAndReplaceOptions,SingleResultCallback<TDocument>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.findOneAndReplace(Bson,TDocument,SingleResultCallback<TDocument>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.findOneAndUpdate(Bson,Bson,FindOneAndUpdateOptions,SingleResultCallback<TDocument>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.findOneAndUpdate(Bson,Bson,SingleResultCallback<TDocument>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.getCodec()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.getCodec(Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.getCodecRegistry()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.getDocumentClass()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.getNamespace()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.getReadConcern()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.getReadPreference()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.getWriteConcern()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.insertMany(List<? extends TDocument>,InsertManyOptions,SingleResultCallback<Void>)",3,3,4
"com.mongodb.async.client.MongoCollectionImpl.insertMany(List<? extends TDocument>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.insertOne(TDocument,InsertOneOptions,SingleResultCallback<Void>)",1,2,2
"com.mongodb.async.client.MongoCollectionImpl.insertOne(TDocument,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.listIndexes()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.listIndexes(Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.mapReduce(String,String)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.mapReduce(String,String,Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.renameCollection(MongoNamespace,RenameCollectionOptions,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.renameCollection(MongoNamespace,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.replaceOne(Bson,TDocument,SingleResultCallback<UpdateResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.replaceOne(Bson,TDocument,UpdateOptions,SingleResultCallback<UpdateResult>)",1,2,2
"com.mongodb.async.client.MongoCollectionImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.async.client.MongoCollectionImpl.toBsonDocumentList(List<? extends Bson>)",2,2,3
"com.mongodb.async.client.MongoCollectionImpl.toUpdateResult(BulkWriteResult)",2,4,4
"com.mongodb.async.client.MongoCollectionImpl.translateBulkWriteResult(WriteRequest,BulkWriteResult)",5,6,6
"com.mongodb.async.client.MongoCollectionImpl.update(Bson,Bson,UpdateOptions,boolean,SingleResultCallback<UpdateResult>)",1,2,2
"com.mongodb.async.client.MongoCollectionImpl.updateMany(Bson,Bson,SingleResultCallback<UpdateResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.updateMany(Bson,Bson,UpdateOptions,SingleResultCallback<UpdateResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.updateOne(Bson,Bson,SingleResultCallback<UpdateResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.updateOne(Bson,Bson,UpdateOptions,SingleResultCallback<UpdateResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.watch()",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.watch(Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.watch(List<? extends Bson>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.watch(List<? extends Bson>,Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.withCodecRegistry(CodecRegistry)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.withDocumentClass(Class<NewTDocument>)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.withReadConcern(ReadConcern)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.withReadPreference(ReadPreference)",1,1,1
"com.mongodb.async.client.MongoCollectionImpl.withWriteConcern(WriteConcern)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.MongoDatabaseImpl(String,CodecRegistry,ReadPreference,WriteConcern,ReadConcern,AsyncOperationExecutor)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.createBsonDocumentList(List<? extends Bson>)",3,2,3
"com.mongodb.async.client.MongoDatabaseImpl.createCollection(String,CreateCollectionOptions,SingleResultCallback<Void>)",1,5,5
"com.mongodb.async.client.MongoDatabaseImpl.createCollection(String,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.createView(String,String,List<? extends Bson>,CreateViewOptions,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.createView(String,String,List<? extends Bson>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.drop(SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.getCodecRegistry()",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.getCollection(String)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.getCollection(String,Class<TDocument>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.getName()",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.getReadConcern()",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.getReadPreference()",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.getWriteConcern()",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.listCollectionNames()",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.listCollections()",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.listCollections(Class<TResult>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.runCommand(Bson,Class<TResult>,SingleResultCallback<TResult>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.runCommand(Bson,ReadPreference,Class<TResult>,SingleResultCallback<TResult>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.runCommand(Bson,ReadPreference,SingleResultCallback<Document>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.runCommand(Bson,SingleResultCallback<Document>)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.toBsonDocument(Bson)",1,2,2
"com.mongodb.async.client.MongoDatabaseImpl.withCodecRegistry(CodecRegistry)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.withReadConcern(ReadConcern)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.withReadPreference(ReadPreference)",1,1,1
"com.mongodb.async.client.MongoDatabaseImpl.withWriteConcern(WriteConcern)",1,1,1
"com.mongodb.async.client.MongoIterableSubscription.MongoIterableSubscription(MongoIterable<TResult>,Observer<? super TResult>)",1,1,1
"com.mongodb.async.client.MongoIterableSubscription.checkCompleted()",1,1,1
"com.mongodb.async.client.MongoIterableSubscription.getBatchSize()",3,1,3
"com.mongodb.async.client.MongoIterableSubscription.postTerminate()",1,2,2
"com.mongodb.async.client.MongoIterableSubscription.requestInitialData()",1,3,3
"com.mongodb.async.client.MongoIterableSubscription.requestMoreData()",1,5,8
"com.mongodb.async.client.NettyMongoClients.NettyMongoClients()",1,1,1
"com.mongodb.async.client.NettyMongoClients.create(MongoClientSettings,MongoDriverInformation)",1,1,1
"com.mongodb.async.client.Observables.Observables()",1,1,1
"com.mongodb.async.client.Observables.observe(Block<SingleResultCallback<TResult>>)",1,1,1
"com.mongodb.async.client.Observables.observe(MongoIterable<TResult>)",1,1,1
"com.mongodb.async.client.Observables.observeAndFlatten(Block<SingleResultCallback<List<TResult>>>)",1,1,1
"com.mongodb.async.client.OperationIterable.OperationIterable(AsyncReadOperation<? extends AsyncBatchCursor<T>>,ReadPreference,AsyncOperationExecutor)",1,1,1
"com.mongodb.async.client.OperationIterable.batchCursor(SingleResultCallback<AsyncBatchCursor<T>>)",1,1,1
"com.mongodb.async.client.OperationIterable.batchSize(int)",1,1,1
"com.mongodb.async.client.OperationIterable.first(SingleResultCallback<T>)",1,4,4
"com.mongodb.async.client.OperationIterable.forEach(Block<? super T>,SingleResultCallback<Void>)",1,2,2
"com.mongodb.async.client.OperationIterable.into(A,SingleResultCallback<A>)",1,3,3
"com.mongodb.async.client.OperationIterable.loopCursor(AsyncBatchCursor<T>,Block<? super T>,SingleResultCallback<Void>)",1,4,5
"com.mongodb.async.client.OperationIterable.map(Function<T, U>)",1,1,1
"com.mongodb.async.client.SingleResultCallbackSubscription.SingleResultCallbackSubscription(Block<SingleResultCallback<TResult>>,Observer<? super TResult>)",1,1,1
"com.mongodb.async.client.SingleResultCallbackSubscription.checkCompleted()",1,1,1
"com.mongodb.async.client.SingleResultCallbackSubscription.requestInitialData()",1,2,2
"com.mongodb.async.client.gridfs.GridFSBucketImpl.GridFSBucketImpl(MongoDatabase)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.GridFSBucketImpl(MongoDatabase,String)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.GridFSBucketImpl(String,int,MongoCollection<GridFSFile>,MongoCollection<Document>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.delete(BsonValue,SingleResultCallback<Void>)",1,5,5
"com.mongodb.async.client.gridfs.GridFSBucketImpl.delete(ObjectId,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.downloadToAsyncOutputStream(GridFSDownloadStream,AsyncOutputStream,SingleResultCallback<Long>)",1,3,3
"com.mongodb.async.client.gridfs.GridFSBucketImpl.downloadToStream(BsonValue,AsyncOutputStream,SingleResultCallback<Long>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.downloadToStream(ObjectId,AsyncOutputStream,SingleResultCallback<Long>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.downloadToStream(String,AsyncOutputStream,GridFSDownloadOptions,SingleResultCallback<Long>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.downloadToStream(String,AsyncOutputStream,SingleResultCallback<Long>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.drop(SingleResultCallback<Void>)",1,2,2
"com.mongodb.async.client.gridfs.GridFSBucketImpl.find()",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.find(Bson)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.findFileByName(String,GridFSDownloadOptions)",1,1,2
"com.mongodb.async.client.gridfs.GridFSBucketImpl.getBucketName()",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.getChunkSizeBytes()",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.getChunksCollection(MongoDatabase,String)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.getFilesCollection(MongoDatabase,String)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.getReadConcern()",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.getReadPreference()",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.getWriteConcern()",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.openDownloadStream(BsonValue)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.openDownloadStream(ObjectId)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.openDownloadStream(String)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.openDownloadStream(String,GridFSDownloadOptions)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.openUploadStream(BsonValue,String)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.openUploadStream(BsonValue,String,GridFSUploadOptions)",1,2,2
"com.mongodb.async.client.gridfs.GridFSBucketImpl.openUploadStream(String)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.openUploadStream(String,GridFSUploadOptions)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.readAndWriteInputStream(AsyncInputStream,GridFSUploadStream,ByteBuffer,SingleResultCallback<Void>)",1,6,6
"com.mongodb.async.client.gridfs.GridFSBucketImpl.readAndWriteOutputStream(AsyncOutputStream,GridFSDownloadStream,ByteBuffer,long,SingleResultCallback<Long>)",1,4,4
"com.mongodb.async.client.gridfs.GridFSBucketImpl.rename(BsonValue,String,SingleResultCallback<Void>)",1,4,4
"com.mongodb.async.client.gridfs.GridFSBucketImpl.rename(ObjectId,String,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.uploadFromStream(BsonValue,String,AsyncInputStream,GridFSUploadOptions,SingleResultCallback<Void>)",1,2,2
"com.mongodb.async.client.gridfs.GridFSBucketImpl.uploadFromStream(BsonValue,String,AsyncInputStream,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.uploadFromStream(String,AsyncInputStream,GridFSUploadOptions,SingleResultCallback<ObjectId>)",1,2,2
"com.mongodb.async.client.gridfs.GridFSBucketImpl.uploadFromStream(String,AsyncInputStream,SingleResultCallback<ObjectId>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.withChunkSizeBytes(int)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.withReadConcern(ReadConcern)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.withReadPreference(ReadPreference)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBucketImpl.withWriteConcern(WriteConcern)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBuckets.GridFSBuckets()",1,1,1
"com.mongodb.async.client.gridfs.GridFSBuckets.create(MongoDatabase)",1,1,1
"com.mongodb.async.client.gridfs.GridFSBuckets.create(MongoDatabase,String)",1,1,1
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.GridFSDownloadStreamImpl(GridFSFindIterable,MongoCollection<Document>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.callbackClosedException(SingleResultCallback<T>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.callbackIsReadingException(SingleResultCallback<T>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.checkAndFetchResults(int,ByteBuffer,SingleResultCallback<Integer>)",1,10,10
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.checkClosed()",1,1,1
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.chunkNotFound(int)",1,1,1
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.close(SingleResultCallback<Void>)",1,3,4
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.discardCursor()",1,2,2
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.getBufferFromChunk(Document,int)",4,5,6
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.getBufferFromResultsQueue()",1,2,3
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.getGridFSFile(SingleResultCallback<GridFSFile>)",3,4,5
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.getReadingLock()",1,1,2
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.hasFileInfo()",1,1,1
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.hasResultsToProcess()",1,2,3
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.processResults(int,ByteBuffer,SingleResultCallback<Integer>)",1,6,7
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.read(ByteBuffer,SingleResultCallback<Integer>)",4,5,5
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.releaseReadingLock()",1,1,1
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl.tryGetReadingLock(SingleResultCallback<A>)",3,3,3
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.GridFSFindIterableImpl(FindIterable<GridFSFile>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.batchCursor(SingleResultCallback<AsyncBatchCursor<GridFSFile>>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.batchSize(int)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.collation(Collation)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.filter(Bson)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.first(SingleResultCallback<GridFSFile>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.forEach(Block<? super GridFSFile>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.into(A,SingleResultCallback<A>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.limit(int)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.map(Function<GridFSFile, U>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.noCursorTimeout(boolean)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.skip(int)",1,1,1
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl.sort(Bson)",1,1,1
"com.mongodb.async.client.gridfs.GridFSIndexCheckImpl.GridFSIndexCheckImpl(MongoCollection<GridFSFile>,MongoCollection<Document>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSIndexCheckImpl.checkAndCreateIndex(SingleResultCallback<Void>)",1,3,3
"com.mongodb.async.client.gridfs.GridFSIndexCheckImpl.checkChunksIndex(SingleResultCallback<Void>)",1,4,4
"com.mongodb.async.client.gridfs.GridFSIndexCheckImpl.checkFilesIndex(SingleResultCallback<Void>)",1,4,4
"com.mongodb.async.client.gridfs.GridFSIndexCheckImpl.hasIndex(MongoCollection<T>,Document,SingleResultCallback<Boolean>)",4,3,4
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.GridFSUploadStreamImpl(MongoCollection<GridFSFile>,MongoCollection<Document>,BsonValue,String,int,Document,GridFSIndexCheck)",1,1,1
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.abort(SingleResultCallback<Void>)",2,1,2
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.callbackClosedException(SingleResultCallback<T>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.callbackIsWritingException(SingleResultCallback<T>)",1,1,1
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.checkClosed()",1,1,1
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.close(SingleResultCallback<Void>)",3,4,4
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.getAndSetWritingLock()",1,1,2
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.getData()",1,2,2
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.getDigest()",1,1,2
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.getId()",1,1,1
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.getObjectId()",2,1,2
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.releaseWritingLock()",1,1,1
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.takeWritingLock(SingleResultCallback<T>)",3,3,3
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.write(ByteBuffer,SingleResultCallback<Integer>)",3,4,5
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.write(int,ByteBuffer,SingleResultCallback<Integer>)",3,4,6
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl.writeChunk(SingleResultCallback<Void>)",1,4,4
"com.mongodb.async.client.gridfs.helpers.AsyncStreamHelper.AsyncStreamHelper()",1,1,1
"com.mongodb.async.client.gridfs.helpers.AsyncStreamHelper.toAsyncInputStream(ByteBuffer)",1,1,1
"com.mongodb.async.client.gridfs.helpers.AsyncStreamHelper.toAsyncInputStream(InputStream)",2,6,6
"com.mongodb.async.client.gridfs.helpers.AsyncStreamHelper.toAsyncInputStream(byte[])",1,1,1
"com.mongodb.async.client.gridfs.helpers.AsyncStreamHelper.toAsyncOutputStream(ByteBuffer)",1,1,1
"com.mongodb.async.client.gridfs.helpers.AsyncStreamHelper.toAsyncOutputStream(OutputStream)",2,4,4
"com.mongodb.async.client.gridfs.helpers.AsyncStreamHelper.toAsyncOutputStream(byte[])",1,1,1
"com.mongodb.async.client.gridfs.helpers.AsyncStreamHelper.transferDataFromByteBuffers(ByteBuffer,ByteBuffer,SingleResultCallback<Integer>)",2,3,3
"com.mongodb.async.client.gridfs.helpers.AsynchronousChannelHelper.AsynchronousChannelHelper()",1,1,1
"com.mongodb.async.client.gridfs.helpers.AsynchronousChannelHelper.channelToInputStream(AsynchronousByteChannel)",1,2,2
"com.mongodb.async.client.gridfs.helpers.AsynchronousChannelHelper.channelToInputStream(AsynchronousFileChannel)",1,2,2
"com.mongodb.async.client.gridfs.helpers.AsynchronousChannelHelper.channelToOutputStream(AsynchronousByteChannel)",1,2,2
"com.mongodb.async.client.gridfs.helpers.AsynchronousChannelHelper.channelToOutputStream(AsynchronousFileChannel)",1,2,2
"com.mongodb.binding.AbstractReferenceCounted.getCount()",1,1,1
"com.mongodb.binding.AbstractReferenceCounted.release()",2,1,2
"com.mongodb.binding.AbstractReferenceCounted.retain()",2,1,2
"com.mongodb.binding.AsyncClusterBinding.AsyncClusterBinding(Cluster,ReadPreference)",1,1,1
"com.mongodb.binding.AsyncClusterBinding.AsyncClusterBindingConnectionSource.AsyncClusterBindingConnectionSource(Server)",1,1,1
"com.mongodb.binding.AsyncClusterBinding.AsyncClusterBindingConnectionSource.getConnection(SingleResultCallback<AsyncConnection>)",1,1,1
"com.mongodb.binding.AsyncClusterBinding.AsyncClusterBindingConnectionSource.getServerDescription()",1,1,1
"com.mongodb.binding.AsyncClusterBinding.AsyncClusterBindingConnectionSource.getSessionContext()",1,1,1
"com.mongodb.binding.AsyncClusterBinding.AsyncClusterBindingConnectionSource.release()",1,1,1
"com.mongodb.binding.AsyncClusterBinding.AsyncClusterBindingConnectionSource.retain()",1,1,1
"com.mongodb.binding.AsyncClusterBinding.getAsyncClusterBindingConnectionSource(ServerSelector,SingleResultCallback<AsyncConnectionSource>)",1,2,2
"com.mongodb.binding.AsyncClusterBinding.getReadConnectionSource(SingleResultCallback<AsyncConnectionSource>)",1,1,1
"com.mongodb.binding.AsyncClusterBinding.getReadPreference()",1,1,1
"com.mongodb.binding.AsyncClusterBinding.getSessionContext()",1,1,1
"com.mongodb.binding.AsyncClusterBinding.getWriteConnectionSource(SingleResultCallback<AsyncConnectionSource>)",1,1,1
"com.mongodb.binding.AsyncClusterBinding.retain()",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.AsyncSingleConnectionReadBinding(ReadPreference,ServerDescription,AsyncConnection)",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.AsyncSingleConnectionSource.AsyncSingleConnectionSource()",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.AsyncSingleConnectionSource.getConnection(SingleResultCallback<AsyncConnection>)",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.AsyncSingleConnectionSource.getServerDescription()",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.AsyncSingleConnectionSource.getSessionContext()",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.AsyncSingleConnectionSource.release()",1,2,2
"com.mongodb.binding.AsyncSingleConnectionReadBinding.AsyncSingleConnectionSource.retain()",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.getReadConnectionSource(SingleResultCallback<AsyncConnectionSource>)",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.getReadPreference()",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.getSessionContext()",1,1,1
"com.mongodb.binding.AsyncSingleConnectionReadBinding.release()",1,2,2
"com.mongodb.binding.AsyncSingleConnectionReadBinding.retain()",1,1,1
"com.mongodb.binding.ClusterBinding.ClusterBinding(Cluster,ReadPreference)",1,1,1
"com.mongodb.binding.ClusterBinding.ClusterBindingConnectionSource.ClusterBindingConnectionSource(ServerSelector)",1,1,1
"com.mongodb.binding.ClusterBinding.ClusterBindingConnectionSource.getConnection()",1,1,1
"com.mongodb.binding.ClusterBinding.ClusterBindingConnectionSource.getServerDescription()",1,1,1
"com.mongodb.binding.ClusterBinding.ClusterBindingConnectionSource.getSessionContext()",1,1,1
"com.mongodb.binding.ClusterBinding.ClusterBindingConnectionSource.release()",1,1,1
"com.mongodb.binding.ClusterBinding.ClusterBindingConnectionSource.retain()",1,1,1
"com.mongodb.binding.ClusterBinding.getReadConnectionSource()",1,1,1
"com.mongodb.binding.ClusterBinding.getReadPreference()",1,1,1
"com.mongodb.binding.ClusterBinding.getSessionContext()",1,1,1
"com.mongodb.binding.ClusterBinding.getWriteConnectionSource()",1,1,1
"com.mongodb.binding.ClusterBinding.retain()",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.SingleConnectionReadBinding(ReadPreference,ServerDescription,Connection)",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.SingleConnectionSource.SingleConnectionSource()",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.SingleConnectionSource.getConnection()",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.SingleConnectionSource.getServerDescription()",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.SingleConnectionSource.getSessionContext()",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.SingleConnectionSource.release()",1,2,2
"com.mongodb.binding.SingleConnectionReadBinding.SingleConnectionSource.retain()",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.getReadConnectionSource()",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.getReadPreference()",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.getSessionContext()",1,1,1
"com.mongodb.binding.SingleConnectionReadBinding.release()",1,2,2
"com.mongodb.binding.SingleConnectionReadBinding.retain()",1,1,1
"com.mongodb.binding.SingleServerBinding.SingleServerBinding(Cluster,ServerAddress)",1,1,1
"com.mongodb.binding.SingleServerBinding.SingleServerBinding(Cluster,ServerAddress,ReadPreference)",1,1,1
"com.mongodb.binding.SingleServerBinding.SingleServerBindingConnectionSource.SingleServerBindingConnectionSource()",1,1,1
"com.mongodb.binding.SingleServerBinding.SingleServerBindingConnectionSource.getConnection()",1,1,1
"com.mongodb.binding.SingleServerBinding.SingleServerBindingConnectionSource.getServerDescription()",1,1,1
"com.mongodb.binding.SingleServerBinding.SingleServerBindingConnectionSource.getSessionContext()",1,1,1
"com.mongodb.binding.SingleServerBinding.SingleServerBindingConnectionSource.release()",1,1,1
"com.mongodb.binding.SingleServerBinding.SingleServerBindingConnectionSource.retain()",1,1,1
"com.mongodb.binding.SingleServerBinding.getReadConnectionSource()",1,1,1
"com.mongodb.binding.SingleServerBinding.getReadPreference()",1,1,1
"com.mongodb.binding.SingleServerBinding.getSessionContext()",1,1,1
"com.mongodb.binding.SingleServerBinding.getWriteConnectionSource()",1,1,1
"com.mongodb.binding.SingleServerBinding.retain()",1,1,1
"com.mongodb.bulk.BulkWriteError.BulkWriteError(int,String,BsonDocument,int)",1,1,1
"com.mongodb.bulk.BulkWriteError.equals(Object)",4,2,5
"com.mongodb.bulk.BulkWriteError.getIndex()",1,1,1
"com.mongodb.bulk.BulkWriteError.hashCode()",1,1,1
"com.mongodb.bulk.BulkWriteError.toString()",1,1,1
"com.mongodb.bulk.BulkWriteResult.acknowledged(Type,int,Integer,List<BulkWriteUpsert>)",1,1,5
"com.mongodb.bulk.BulkWriteResult.acknowledged(Type,int,List<BulkWriteUpsert>)",1,1,1
"com.mongodb.bulk.BulkWriteResult.acknowledged(int,int,int,Integer,List<BulkWriteUpsert>)",11,4,14
"com.mongodb.bulk.BulkWriteResult.unacknowledged()",3,2,4
"com.mongodb.bulk.BulkWriteUpsert.BulkWriteUpsert(int,BsonValue)",1,1,1
"com.mongodb.bulk.BulkWriteUpsert.equals(Object)",5,2,6
"com.mongodb.bulk.BulkWriteUpsert.getId()",1,1,1
"com.mongodb.bulk.BulkWriteUpsert.getIndex()",1,1,1
"com.mongodb.bulk.BulkWriteUpsert.hashCode()",1,1,1
"com.mongodb.bulk.BulkWriteUpsert.toString()",1,1,1
"com.mongodb.bulk.DeleteRequest.DeleteRequest(BsonDocument)",1,1,1
"com.mongodb.bulk.DeleteRequest.collation(Collation)",1,1,1
"com.mongodb.bulk.DeleteRequest.getCollation()",1,1,1
"com.mongodb.bulk.DeleteRequest.getFilter()",1,1,1
"com.mongodb.bulk.DeleteRequest.getType()",1,1,1
"com.mongodb.bulk.DeleteRequest.isMulti()",1,1,1
"com.mongodb.bulk.DeleteRequest.multi(boolean)",1,1,1
"com.mongodb.bulk.IndexRequest.IndexRequest(BsonDocument)",1,1,1
"com.mongodb.bulk.IndexRequest.background(boolean)",1,1,1
"com.mongodb.bulk.IndexRequest.bits(Integer)",1,1,1
"com.mongodb.bulk.IndexRequest.bucketSize(Double)",1,1,1
"com.mongodb.bulk.IndexRequest.collation(Collation)",1,1,1
"com.mongodb.bulk.IndexRequest.defaultLanguage(String)",1,1,1
"com.mongodb.bulk.IndexRequest.dropDups(boolean)",1,1,1
"com.mongodb.bulk.IndexRequest.expireAfter(Long,TimeUnit)",1,2,2
"com.mongodb.bulk.IndexRequest.getBits()",1,1,1
"com.mongodb.bulk.IndexRequest.getBucketSize()",1,1,1
"com.mongodb.bulk.IndexRequest.getCollation()",1,1,1
"com.mongodb.bulk.IndexRequest.getDefaultLanguage()",1,1,1
"com.mongodb.bulk.IndexRequest.getDropDups()",1,1,1
"com.mongodb.bulk.IndexRequest.getExpireAfter(TimeUnit)",2,1,2
"com.mongodb.bulk.IndexRequest.getKeys()",1,1,1
"com.mongodb.bulk.IndexRequest.getLanguageOverride()",1,1,1
"com.mongodb.bulk.IndexRequest.getMax()",1,1,1
"com.mongodb.bulk.IndexRequest.getMin()",1,1,1
"com.mongodb.bulk.IndexRequest.getName()",1,1,1
"com.mongodb.bulk.IndexRequest.getPartialFilterExpression()",1,1,1
"com.mongodb.bulk.IndexRequest.getSphereVersion()",1,1,1
"com.mongodb.bulk.IndexRequest.getStorageEngine()",1,1,1
"com.mongodb.bulk.IndexRequest.getTextVersion()",1,1,1
"com.mongodb.bulk.IndexRequest.getVersion()",1,1,1
"com.mongodb.bulk.IndexRequest.getWeights()",1,1,1
"com.mongodb.bulk.IndexRequest.isBackground()",1,1,1
"com.mongodb.bulk.IndexRequest.isSparse()",1,1,1
"com.mongodb.bulk.IndexRequest.isUnique()",1,1,1
"com.mongodb.bulk.IndexRequest.languageOverride(String)",1,1,1
"com.mongodb.bulk.IndexRequest.max(Double)",1,1,1
"com.mongodb.bulk.IndexRequest.min(Double)",1,1,1
"com.mongodb.bulk.IndexRequest.name(String)",1,1,1
"com.mongodb.bulk.IndexRequest.partialFilterExpression(BsonDocument)",1,1,1
"com.mongodb.bulk.IndexRequest.sparse(boolean)",1,1,1
"com.mongodb.bulk.IndexRequest.sphereVersion(Integer)",1,2,2
"com.mongodb.bulk.IndexRequest.storageEngine(BsonDocument)",1,1,1
"com.mongodb.bulk.IndexRequest.textVersion(Integer)",1,2,2
"com.mongodb.bulk.IndexRequest.unique(boolean)",1,1,1
"com.mongodb.bulk.IndexRequest.version(Integer)",1,1,1
"com.mongodb.bulk.IndexRequest.weights(BsonDocument)",1,1,1
"com.mongodb.bulk.InsertRequest.InsertRequest(BsonDocument)",1,1,1
"com.mongodb.bulk.InsertRequest.getDocument()",1,1,1
"com.mongodb.bulk.InsertRequest.getType()",1,1,1
"com.mongodb.bulk.UpdateRequest.UpdateRequest(BsonDocument,BsonDocument,Type)",2,1,3
"com.mongodb.bulk.UpdateRequest.arrayFilters(List<BsonDocument>)",1,1,1
"com.mongodb.bulk.UpdateRequest.collation(Collation)",1,1,1
"com.mongodb.bulk.UpdateRequest.getArrayFilters()",1,1,1
"com.mongodb.bulk.UpdateRequest.getCollation()",1,1,1
"com.mongodb.bulk.UpdateRequest.getFilter()",1,1,1
"com.mongodb.bulk.UpdateRequest.getType()",1,1,1
"com.mongodb.bulk.UpdateRequest.getUpdate()",1,1,1
"com.mongodb.bulk.UpdateRequest.isMulti()",1,1,1
"com.mongodb.bulk.UpdateRequest.isUpsert()",1,1,1
"com.mongodb.bulk.UpdateRequest.multi(boolean)",2,1,3
"com.mongodb.bulk.UpdateRequest.upsert(boolean)",1,1,1
"com.mongodb.bulk.WriteConcernError.WriteConcernError(int,String,BsonDocument)",1,1,1
"com.mongodb.bulk.WriteConcernError.equals(Object)",6,2,7
"com.mongodb.bulk.WriteConcernError.getCode()",1,1,1
"com.mongodb.bulk.WriteConcernError.getDetails()",1,1,1
"com.mongodb.bulk.WriteConcernError.getMessage()",1,1,1
"com.mongodb.bulk.WriteConcernError.hashCode()",1,1,1
"com.mongodb.bulk.WriteConcernError.toString()",1,1,1
"com.mongodb.bulk.WriteRequest.WriteRequest()",1,1,1
"com.mongodb.client.MongoDriverInformation.Builder.Builder()",1,1,1
"com.mongodb.client.MongoDriverInformation.Builder.Builder(MongoDriverInformation)",1,1,1
"com.mongodb.client.MongoDriverInformation.Builder.build()",1,1,2
"com.mongodb.client.MongoDriverInformation.Builder.driverName(String)",1,1,1
"com.mongodb.client.MongoDriverInformation.Builder.driverPlatform(String)",1,1,1
"com.mongodb.client.MongoDriverInformation.Builder.driverVersion(String)",1,1,1
"com.mongodb.client.MongoDriverInformation.Builder.prependToList(List<String>,String)",2,2,2
"com.mongodb.client.MongoDriverInformation.MongoDriverInformation(List<String>,List<String>,List<String>)",1,1,1
"com.mongodb.client.MongoDriverInformation.builder()",1,1,1
"com.mongodb.client.MongoDriverInformation.builder(MongoDriverInformation)",1,1,1
"com.mongodb.client.MongoDriverInformation.getDriverNames()",1,1,1
"com.mongodb.client.MongoDriverInformation.getDriverPlatforms()",1,1,1
"com.mongodb.client.MongoDriverInformation.getDriverVersions()",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.GridFSBucketImpl(MongoDatabase)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.GridFSBucketImpl(MongoDatabase,String)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.GridFSBucketImpl(String,int,MongoCollection<GridFSFile>,MongoCollection<Document>)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.checkCreateIndex()",1,5,5
"com.mongodb.client.gridfs.GridFSBucketImpl.delete(BsonValue)",2,3,3
"com.mongodb.client.gridfs.GridFSBucketImpl.delete(ObjectId)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.downloadToStream(BsonValue,OutputStream)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.downloadToStream(GridFSDownloadStream,OutputStream)",2,2,6
"com.mongodb.client.gridfs.GridFSBucketImpl.downloadToStream(ObjectId,OutputStream)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.downloadToStream(String,OutputStream)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.downloadToStream(String,OutputStream,GridFSDownloadOptions)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.downloadToStreamByName(String,OutputStream)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.downloadToStreamByName(String,OutputStream,GridFSDownloadByNameOptions)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.drop()",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.find()",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.find(Bson)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.findTheFileInfoAndOpenDownloadStream(BsonValue)",2,2,2
"com.mongodb.client.gridfs.GridFSBucketImpl.getBucketName()",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.getChunkSizeBytes()",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.getChunksCollection(MongoDatabase,String)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.getFileByName(String,GridFSDownloadOptions)",2,2,3
"com.mongodb.client.gridfs.GridFSBucketImpl.getFilesCollection(MongoDatabase,String)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.getReadConcern()",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.getReadPreference()",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.getWriteConcern()",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.hasIndex(MongoCollection<T>,Document)",3,2,3
"com.mongodb.client.gridfs.GridFSBucketImpl.openDownloadStream(BsonValue)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.openDownloadStream(ObjectId)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.openDownloadStream(String)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.openDownloadStream(String,GridFSDownloadOptions)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.openDownloadStreamByName(String)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.openDownloadStreamByName(String,GridFSDownloadByNameOptions)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.openUploadStream(BsonValue,String)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.openUploadStream(BsonValue,String,GridFSUploadOptions)",1,2,2
"com.mongodb.client.gridfs.GridFSBucketImpl.openUploadStream(String)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.openUploadStream(String,GridFSUploadOptions)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.rename(BsonValue,String)",2,3,3
"com.mongodb.client.gridfs.GridFSBucketImpl.rename(ObjectId,String)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.uploadFromStream(BsonValue,String,InputStream)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.uploadFromStream(BsonValue,String,InputStream,GridFSUploadOptions)",1,4,4
"com.mongodb.client.gridfs.GridFSBucketImpl.uploadFromStream(String,InputStream)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.uploadFromStream(String,InputStream,GridFSUploadOptions)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.withChunkSizeBytes(int)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.withReadConcern(ReadConcern)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.withReadPreference(ReadPreference)",1,1,1
"com.mongodb.client.gridfs.GridFSBucketImpl.withWriteConcern(WriteConcern)",1,1,1
"com.mongodb.client.gridfs.GridFSBuckets.GridFSBuckets()",1,1,1
"com.mongodb.client.gridfs.GridFSBuckets.create(MongoDatabase)",1,1,1
"com.mongodb.client.gridfs.GridFSBuckets.create(MongoDatabase,String)",1,1,1
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.GridFSDownloadStreamImpl(GridFSFile,MongoCollection<Document>)",1,1,1
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.available()",2,1,2
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.batchSize(int)",1,1,1
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.checkClosed()",2,1,2
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.close()",1,1,2
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.discardCursor()",1,2,2
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.getBuffer(int)",1,1,1
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.getBufferFromChunk(Document,int)",5,5,9
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.getChunk(int)",3,5,5
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.getGridFSFile()",1,1,1
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.mark()",1,1,1
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.mark(int)",1,1,1
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.markSupported()",1,1,1
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.read()",2,1,2
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.read(byte[])",1,1,1
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.read(byte[],int,int)",2,4,4
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.reset()",2,1,3
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl.skip(long)",3,3,4
"com.mongodb.client.gridfs.GridFSFindIterableImpl.GridFSFindIterableImpl(FindIterable<GridFSFile>)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.batchSize(int)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.collation(Collation)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.filter(Bson)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.first()",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.forEach(Block<? super GridFSFile>)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.into(A)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.iterator()",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.limit(int)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.map(Function<GridFSFile, U>)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.noCursorTimeout(boolean)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.skip(int)",1,1,1
"com.mongodb.client.gridfs.GridFSFindIterableImpl.sort(Bson)",1,1,1
"com.mongodb.client.gridfs.GridFSUploadStream.flush()",1,1,1
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.GridFSUploadStreamImpl(MongoCollection<GridFSFile>,MongoCollection<Document>,BsonValue,String,int,Document)",1,1,2
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.abort()",1,1,1
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.checkClosed()",2,1,2
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.close()",2,1,2
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.getData()",1,2,2
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.getFileId()",1,1,1
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.getId()",1,1,1
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.getObjectId()",2,1,2
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.write(byte[])",1,1,1
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.write(byte[],int,int)",4,3,11
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.write(int)",1,1,1
"com.mongodb.client.gridfs.GridFSUploadStreamImpl.writeChunk()",1,2,2
"com.mongodb.client.gridfs.codecs.GridFSFileCodec.GridFSFileCodec(CodecRegistry)",1,1,1
"com.mongodb.client.gridfs.codecs.GridFSFileCodec.asDocumentOrNull(BsonDocument)",2,2,2
"com.mongodb.client.gridfs.codecs.GridFSFileCodec.decode(BsonReader,DecoderContext)",1,2,2
"com.mongodb.client.gridfs.codecs.GridFSFileCodec.encode(BsonWriter,GridFSFile,EncoderContext)",1,3,3
"com.mongodb.client.gridfs.codecs.GridFSFileCodec.getEncoderClass()",1,1,1
"com.mongodb.client.gridfs.codecs.GridFSFileCodecProvider.get(Class<T>,CodecRegistry)",2,1,2
"com.mongodb.client.gridfs.model.GridFSDownloadByNameOptions.GridFSDownloadByNameOptions()",1,1,1
"com.mongodb.client.gridfs.model.GridFSDownloadByNameOptions.getRevision()",1,1,1
"com.mongodb.client.gridfs.model.GridFSDownloadByNameOptions.revision(int)",1,1,1
"com.mongodb.client.gridfs.model.GridFSDownloadOptions.GridFSDownloadOptions()",1,1,1
"com.mongodb.client.gridfs.model.GridFSDownloadOptions.getRevision()",1,1,1
"com.mongodb.client.gridfs.model.GridFSDownloadOptions.revision(int)",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.GridFSFile(BsonValue,String,long,int,Date,String,Document)",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.GridFSFile(BsonValue,String,long,int,Date,String,Document,Document)",1,2,3
"com.mongodb.client.gridfs.model.GridFSFile.equals(Object)",11,5,15
"com.mongodb.client.gridfs.model.GridFSFile.getAliases()",2,3,3
"com.mongodb.client.gridfs.model.GridFSFile.getChunkSize()",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.getContentType()",2,3,3
"com.mongodb.client.gridfs.model.GridFSFile.getExtraElements()",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.getFilename()",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.getId()",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.getLength()",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.getMD5()",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.getMetadata()",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.getObjectId()",2,1,2
"com.mongodb.client.gridfs.model.GridFSFile.getUploadDate()",1,1,1
"com.mongodb.client.gridfs.model.GridFSFile.hashCode()",1,4,4
"com.mongodb.client.gridfs.model.GridFSFile.toString()",1,1,1
"com.mongodb.client.gridfs.model.GridFSUploadOptions.GridFSUploadOptions()",1,1,1
"com.mongodb.client.gridfs.model.GridFSUploadOptions.chunkSizeBytes(Integer)",1,1,1
"com.mongodb.client.gridfs.model.GridFSUploadOptions.getChunkSizeBytes()",1,1,1
"com.mongodb.client.gridfs.model.GridFSUploadOptions.getMetadata()",1,1,1
"com.mongodb.client.gridfs.model.GridFSUploadOptions.metadata(Document)",1,1,1
"com.mongodb.client.jndi.MongoClientFactory.getObjectInstance(Object,Name,Context,Hashtable<?, ?>)",8,11,11
"com.mongodb.client.model.Accumulators.Accumulators()",1,1,1
"com.mongodb.client.model.Accumulators.accumulator(String,String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.addToSet(String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.avg(String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.first(String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.last(String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.max(String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.min(String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.push(String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.stdDevPop(String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.stdDevSamp(String,TExpression)",1,1,1
"com.mongodb.client.model.Accumulators.sum(String,TExpression)",1,1,1
"com.mongodb.client.model.Aggregates.AddFieldsStage.AddFieldsStage(List<Field<?>>)",1,1,1
"com.mongodb.client.model.Aggregates.AddFieldsStage.toBsonDocument(Class<TDocument>,CodecRegistry)",1,2,2
"com.mongodb.client.model.Aggregates.AddFieldsStage.toString()",1,1,1
"com.mongodb.client.model.Aggregates.Aggregates()",1,1,1
"com.mongodb.client.model.Aggregates.BucketAutoStage.BucketAutoStage(TExpression,int,BucketAutoOptions)",1,1,1
"com.mongodb.client.model.Aggregates.BucketAutoStage.toBsonDocument(Class<TDocument>,CodecRegistry)",1,2,2
"com.mongodb.client.model.Aggregates.BucketAutoStage.toString()",1,1,1
"com.mongodb.client.model.Aggregates.BucketStage.BucketStage(TExpression,List<TBoundary>,BucketOptions)",1,1,1
"com.mongodb.client.model.Aggregates.BucketStage.toBsonDocument(Class<TDocument>,CodecRegistry)",1,3,3
"com.mongodb.client.model.Aggregates.BucketStage.toString()",1,1,1
"com.mongodb.client.model.Aggregates.FacetStage.FacetStage(List<Facet>)",1,1,1
"com.mongodb.client.model.Aggregates.FacetStage.toBsonDocument(Class<TDocument>,CodecRegistry)",1,3,3
"com.mongodb.client.model.Aggregates.FacetStage.toString()",1,1,1
"com.mongodb.client.model.Aggregates.GraphLookupStage.GraphLookupStage(String,TExpression,String,String,String,GraphLookupOptions)",1,1,1
"com.mongodb.client.model.Aggregates.GraphLookupStage.toBsonDocument(Class<TDocument>,CodecRegistry)",1,3,3
"com.mongodb.client.model.Aggregates.GraphLookupStage.toString()",1,1,1
"com.mongodb.client.model.Aggregates.GroupStage.GroupStage(TExpression,List<BsonField>)",1,1,1
"com.mongodb.client.model.Aggregates.GroupStage.toBsonDocument(Class<TDocument>,CodecRegistry)",1,2,2
"com.mongodb.client.model.Aggregates.GroupStage.toString()",1,1,1
"com.mongodb.client.model.Aggregates.ReplaceRootStage.ReplaceRootStage(TExpression)",1,1,1
"com.mongodb.client.model.Aggregates.ReplaceRootStage.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.Aggregates.ReplaceRootStage.toString()",1,1,1
"com.mongodb.client.model.Aggregates.SimplePipelineStage.SimplePipelineStage(String,Bson)",1,1,1
"com.mongodb.client.model.Aggregates.SimplePipelineStage.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.Aggregates.SimplePipelineStage.toString()",1,1,1
"com.mongodb.client.model.Aggregates.SortByCountStage.SortByCountStage(TExpression)",1,1,1
"com.mongodb.client.model.Aggregates.SortByCountStage.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.Aggregates.SortByCountStage.toString()",1,1,1
"com.mongodb.client.model.Aggregates.addFields(Field<?>...)",1,1,1
"com.mongodb.client.model.Aggregates.addFields(List<Field<?>>)",1,1,1
"com.mongodb.client.model.Aggregates.bucket(TExpression,List<Boundary>)",1,1,1
"com.mongodb.client.model.Aggregates.bucket(TExpression,List<TBoundary>,BucketOptions)",1,1,1
"com.mongodb.client.model.Aggregates.bucketAuto(TExpression,int)",1,1,1
"com.mongodb.client.model.Aggregates.bucketAuto(TExpression,int,BucketAutoOptions)",1,1,1
"com.mongodb.client.model.Aggregates.count()",1,1,1
"com.mongodb.client.model.Aggregates.count(String)",1,1,1
"com.mongodb.client.model.Aggregates.facet(Facet...)",1,1,1
"com.mongodb.client.model.Aggregates.facet(List<Facet>)",1,1,1
"com.mongodb.client.model.Aggregates.graphLookup(String,TExpression,String,String,String)",1,1,1
"com.mongodb.client.model.Aggregates.graphLookup(String,TExpression,String,String,String,GraphLookupOptions)",1,1,1
"com.mongodb.client.model.Aggregates.group(TExpression,BsonField...)",1,1,1
"com.mongodb.client.model.Aggregates.group(TExpression,List<BsonField>)",1,1,1
"com.mongodb.client.model.Aggregates.limit(int)",1,1,1
"com.mongodb.client.model.Aggregates.lookup(String,String,String,String)",1,1,1
"com.mongodb.client.model.Aggregates.match(Bson)",1,1,1
"com.mongodb.client.model.Aggregates.out(String)",1,1,1
"com.mongodb.client.model.Aggregates.project(Bson)",1,1,1
"com.mongodb.client.model.Aggregates.replaceRoot(TExpression)",1,1,1
"com.mongodb.client.model.Aggregates.sample(int)",1,1,1
"com.mongodb.client.model.Aggregates.skip(int)",1,1,1
"com.mongodb.client.model.Aggregates.sort(Bson)",1,1,1
"com.mongodb.client.model.Aggregates.sortByCount(TExpression)",1,1,1
"com.mongodb.client.model.Aggregates.unwind(String)",1,1,1
"com.mongodb.client.model.Aggregates.unwind(String,UnwindOptions)",1,3,3
"com.mongodb.client.model.Aggregates.writeBucketOutput(CodecRegistry,BsonDocumentWriter,List<BsonField>)",1,3,3
"com.mongodb.client.model.BsonField.BsonField(String,Bson)",1,1,1
"com.mongodb.client.model.BsonField.getName()",1,1,1
"com.mongodb.client.model.BsonField.getValue()",1,1,1
"com.mongodb.client.model.BsonField.toString()",1,1,1
"com.mongodb.client.model.BucketAutoOptions.getGranularity()",1,1,1
"com.mongodb.client.model.BucketAutoOptions.getOutput()",1,1,2
"com.mongodb.client.model.BucketAutoOptions.granularity(BucketGranularity)",1,1,1
"com.mongodb.client.model.BucketAutoOptions.output(BsonField...)",1,1,1
"com.mongodb.client.model.BucketAutoOptions.output(List<BsonField>)",1,1,1
"com.mongodb.client.model.BucketGranularity.BucketGranularity()",1,1,1
"com.mongodb.client.model.BucketGranularity.BucketGranularity(String)",1,1,1
"com.mongodb.client.model.BucketGranularity.fromString(String)",3,2,3
"com.mongodb.client.model.BucketGranularity.getValue()",1,1,1
"com.mongodb.client.model.BucketOptions.defaultBucket(Object)",1,1,1
"com.mongodb.client.model.BucketOptions.getDefaultBucket()",1,1,1
"com.mongodb.client.model.BucketOptions.getOutput()",1,1,2
"com.mongodb.client.model.BucketOptions.output(BsonField...)",1,1,1
"com.mongodb.client.model.BucketOptions.output(List<BsonField>)",1,1,1
"com.mongodb.client.model.BuildersHelper.BuildersHelper()",1,1,1
"com.mongodb.client.model.BuildersHelper.encodeValue(BsonDocumentWriter,TItem,CodecRegistry)",1,3,3
"com.mongodb.client.model.BulkWriteOptions.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.client.model.BulkWriteOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.client.model.BulkWriteOptions.isOrdered()",1,1,1
"com.mongodb.client.model.BulkWriteOptions.ordered(boolean)",1,1,1
"com.mongodb.client.model.Collation.Builder.Builder()",1,1,1
"com.mongodb.client.model.Collation.Builder.Builder(Collation)",1,1,1
"com.mongodb.client.model.Collation.Builder.backwards(Boolean)",1,1,1
"com.mongodb.client.model.Collation.Builder.build()",1,1,1
"com.mongodb.client.model.Collation.Builder.caseLevel(Boolean)",1,1,1
"com.mongodb.client.model.Collation.Builder.collationAlternate(CollationAlternate)",1,1,1
"com.mongodb.client.model.Collation.Builder.collationCaseFirst(CollationCaseFirst)",1,1,1
"com.mongodb.client.model.Collation.Builder.collationMaxVariable(CollationMaxVariable)",1,1,1
"com.mongodb.client.model.Collation.Builder.collationStrength(CollationStrength)",1,1,1
"com.mongodb.client.model.Collation.Builder.locale(String)",1,1,1
"com.mongodb.client.model.Collation.Builder.normalization(Boolean)",1,1,1
"com.mongodb.client.model.Collation.Builder.numericOrdering(Boolean)",1,1,1
"com.mongodb.client.model.Collation.Collation(Builder)",1,1,1
"com.mongodb.client.model.Collation.asDocument()",1,10,10
"com.mongodb.client.model.Collation.builder()",1,1,1
"com.mongodb.client.model.Collation.builder(Collation)",1,1,1
"com.mongodb.client.model.Collation.equals(Object)",12,7,18
"com.mongodb.client.model.Collation.getAlternate()",1,1,1
"com.mongodb.client.model.Collation.getBackwards()",1,1,1
"com.mongodb.client.model.Collation.getCaseFirst()",1,1,1
"com.mongodb.client.model.Collation.getCaseLevel()",1,1,1
"com.mongodb.client.model.Collation.getLocale()",1,1,1
"com.mongodb.client.model.Collation.getMaxVariable()",1,1,1
"com.mongodb.client.model.Collation.getNormalization()",1,1,1
"com.mongodb.client.model.Collation.getNumericOrdering()",1,1,1
"com.mongodb.client.model.Collation.getStrength()",1,1,1
"com.mongodb.client.model.Collation.hashCode()",1,10,10
"com.mongodb.client.model.Collation.toString()",1,1,1
"com.mongodb.client.model.CollationAlternate.CollationAlternate(String)",1,1,1
"com.mongodb.client.model.CollationAlternate.fromString(String)",4,3,4
"com.mongodb.client.model.CollationAlternate.getValue()",1,1,1
"com.mongodb.client.model.CollationCaseFirst.CollationCaseFirst(String)",1,1,1
"com.mongodb.client.model.CollationCaseFirst.fromString(String)",4,3,4
"com.mongodb.client.model.CollationCaseFirst.getValue()",1,1,1
"com.mongodb.client.model.CollationMaxVariable.CollationMaxVariable(String)",1,1,1
"com.mongodb.client.model.CollationMaxVariable.fromString(String)",4,3,4
"com.mongodb.client.model.CollationMaxVariable.getValue()",1,1,1
"com.mongodb.client.model.CollationStrength.CollationStrength(int)",1,1,1
"com.mongodb.client.model.CollationStrength.fromInt(int)",7,2,7
"com.mongodb.client.model.CollationStrength.getIntRepresentation()",1,1,1
"com.mongodb.client.model.CountOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.CountOptions.getCollation()",1,1,1
"com.mongodb.client.model.CountOptions.getHint()",1,1,1
"com.mongodb.client.model.CountOptions.getHintString()",1,1,1
"com.mongodb.client.model.CountOptions.getLimit()",1,1,1
"com.mongodb.client.model.CountOptions.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.client.model.CountOptions.getSkip()",1,1,1
"com.mongodb.client.model.CountOptions.hint(Bson)",1,1,1
"com.mongodb.client.model.CountOptions.hintString(String)",1,1,1
"com.mongodb.client.model.CountOptions.limit(int)",1,1,1
"com.mongodb.client.model.CountOptions.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.CountOptions.skip(int)",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.autoIndex(boolean)",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.capped(boolean)",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.getCollation()",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.getIndexOptionDefaults()",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.getMaxDocuments()",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.getSizeInBytes()",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.getStorageEngineOptions()",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.getValidationOptions()",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.indexOptionDefaults(IndexOptionDefaults)",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.isAutoIndex()",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.isCapped()",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.isUsePowerOf2Sizes()",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.maxDocuments(long)",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.sizeInBytes(long)",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.storageEngineOptions(Bson)",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.usePowerOf2Sizes(Boolean)",1,1,1
"com.mongodb.client.model.CreateCollectionOptions.validationOptions(ValidationOptions)",1,1,1
"com.mongodb.client.model.CreateViewOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.CreateViewOptions.getCollation()",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.DBCollectionCountOptions()",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.getCollation()",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.getHint()",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.getHintString()",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.getLimit()",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.getReadConcern()",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.getReadPreference()",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.getSkip()",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.hint(DBObject)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.hintString(String)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.limit(int)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.limit(long)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.readConcern(ReadConcern)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.readPreference(ReadPreference)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.skip(int)",1,1,1
"com.mongodb.client.model.DBCollectionCountOptions.skip(long)",1,1,1
"com.mongodb.client.model.DBCollectionDistinctOptions.DBCollectionDistinctOptions()",1,1,1
"com.mongodb.client.model.DBCollectionDistinctOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.DBCollectionDistinctOptions.filter(DBObject)",1,1,1
"com.mongodb.client.model.DBCollectionDistinctOptions.getCollation()",1,1,1
"com.mongodb.client.model.DBCollectionDistinctOptions.getFilter()",1,1,1
"com.mongodb.client.model.DBCollectionDistinctOptions.getReadConcern()",1,1,1
"com.mongodb.client.model.DBCollectionDistinctOptions.getReadPreference()",1,1,1
"com.mongodb.client.model.DBCollectionDistinctOptions.readConcern(ReadConcern)",1,1,1
"com.mongodb.client.model.DBCollectionDistinctOptions.readPreference(ReadPreference)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.DBCollectionFindAndModifyOptions()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.arrayFilters(List<? extends DBObject>)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.getArrayFilters()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.getCollation()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.getProjection()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.getSort()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.getUpdate()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.getWriteConcern()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.isRemove()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.isUpsert()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.projection(DBObject)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.remove(boolean)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.returnNew()",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.returnNew(boolean)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.sort(DBObject)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.update(DBObject)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.upsert(boolean)",1,1,1
"com.mongodb.client.model.DBCollectionFindAndModifyOptions.writeConcern(WriteConcern)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.DBCollectionFindOptions()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.batchSize(int)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.copy()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.cursorType(CursorType)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getBatchSize()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getCollation()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getCursorType()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getLimit()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getMaxAwaitTime(TimeUnit)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getModifiers()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getProjection()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getReadConcern()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getReadPreference()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getSkip()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.getSort()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.isNoCursorTimeout()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.isOplogReplay()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.isPartial()",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.limit(int)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.modifiers(DBObject)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.noCursorTimeout(boolean)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.oplogReplay(boolean)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.partial(boolean)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.projection(DBObject)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.readConcern(ReadConcern)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.readPreference(ReadPreference)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.skip(int)",1,1,1
"com.mongodb.client.model.DBCollectionFindOptions.sort(DBObject)",1,1,1
"com.mongodb.client.model.DBCollectionRemoveOptions.DBCollectionRemoveOptions()",1,1,1
"com.mongodb.client.model.DBCollectionRemoveOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.DBCollectionRemoveOptions.encoder(DBEncoder)",1,1,1
"com.mongodb.client.model.DBCollectionRemoveOptions.getCollation()",1,1,1
"com.mongodb.client.model.DBCollectionRemoveOptions.getEncoder()",1,1,1
"com.mongodb.client.model.DBCollectionRemoveOptions.getWriteConcern()",1,1,1
"com.mongodb.client.model.DBCollectionRemoveOptions.writeConcern(WriteConcern)",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.DBCollectionUpdateOptions()",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.arrayFilters(List<? extends DBObject>)",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.encoder(DBEncoder)",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.getArrayFilters()",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.getCollation()",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.getEncoder()",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.getWriteConcern()",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.isMulti()",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.isUpsert()",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.multi(boolean)",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.upsert(boolean)",1,1,1
"com.mongodb.client.model.DBCollectionUpdateOptions.writeConcern(WriteConcern)",1,1,1
"com.mongodb.client.model.DBCreateViewOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.DBCreateViewOptions.getCollation()",1,1,1
"com.mongodb.client.model.DeleteManyModel.DeleteManyModel(Bson)",1,1,1
"com.mongodb.client.model.DeleteManyModel.DeleteManyModel(Bson,DeleteOptions)",1,1,1
"com.mongodb.client.model.DeleteManyModel.getFilter()",1,1,1
"com.mongodb.client.model.DeleteManyModel.getOptions()",1,1,1
"com.mongodb.client.model.DeleteOneModel.DeleteOneModel(Bson)",1,1,1
"com.mongodb.client.model.DeleteOneModel.DeleteOneModel(Bson,DeleteOptions)",1,1,1
"com.mongodb.client.model.DeleteOneModel.getFilter()",1,1,1
"com.mongodb.client.model.DeleteOneModel.getOptions()",1,1,1
"com.mongodb.client.model.DeleteOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.DeleteOptions.getCollation()",1,1,1
"com.mongodb.client.model.Facet.Facet(String,Bson...)",1,1,1
"com.mongodb.client.model.Facet.Facet(String,List<? extends Bson>)",1,1,1
"com.mongodb.client.model.Facet.getName()",1,1,1
"com.mongodb.client.model.Facet.getPipeline()",1,1,1
"com.mongodb.client.model.Field.Field(String,TExpression)",1,1,1
"com.mongodb.client.model.Field.equals(Object)",4,2,5
"com.mongodb.client.model.Field.getName()",1,1,1
"com.mongodb.client.model.Field.getValue()",1,1,1
"com.mongodb.client.model.Field.hashCode()",1,2,2
"com.mongodb.client.model.Filters.AndFilter.AndFilter(Iterable<Bson>)",1,1,1
"com.mongodb.client.model.Filters.AndFilter.addClause(BsonDocument,Entry<String, BsonValue>)",1,10,10
"com.mongodb.client.model.Filters.AndFilter.keysIntersect(BsonDocument,BsonDocument)",3,2,3
"com.mongodb.client.model.Filters.AndFilter.promoteRenderableToDollarForm(BsonDocument,Entry<String, BsonValue>)",1,2,2
"com.mongodb.client.model.Filters.AndFilter.toBsonDocument(Class<TDocument>,CodecRegistry)",1,4,4
"com.mongodb.client.model.Filters.AndFilter.toString()",1,1,1
"com.mongodb.client.model.Filters.Filters()",1,1,1
"com.mongodb.client.model.Filters.GeometryOperatorFilter.GeometryOperatorFilter(String,String,TItem)",1,1,1
"com.mongodb.client.model.Filters.GeometryOperatorFilter.GeometryOperatorFilter(String,String,TItem,Double,Double)",1,1,1
"com.mongodb.client.model.Filters.GeometryOperatorFilter.toBsonDocument(Class<TDocument>,CodecRegistry)",1,3,3
"com.mongodb.client.model.Filters.GeometryOperatorFilter.toString()",1,1,1
"com.mongodb.client.model.Filters.IterableOperatorFilter.IterableOperatorFilter(String,String,Iterable<TItem>)",1,1,1
"com.mongodb.client.model.Filters.IterableOperatorFilter.toBsonDocument(Class<TDocument>,CodecRegistry)",1,2,2
"com.mongodb.client.model.Filters.IterableOperatorFilter.toString()",1,1,1
"com.mongodb.client.model.Filters.NotFilter.NotFilter(Bson)",1,1,1
"com.mongodb.client.model.Filters.NotFilter.createFilter(String,BsonValue)",3,3,4
"com.mongodb.client.model.Filters.NotFilter.toBsonDocument(Class<TDocument>,CodecRegistry)",2,3,3
"com.mongodb.client.model.Filters.NotFilter.toString()",1,1,1
"com.mongodb.client.model.Filters.OperatorFilter.OperatorFilter(String,String,TItem)",1,1,1
"com.mongodb.client.model.Filters.OperatorFilter.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.Filters.OperatorFilter.toString()",1,1,1
"com.mongodb.client.model.Filters.OrNorFilter.Operator.Operator(String,String)",1,1,1
"com.mongodb.client.model.Filters.OrNorFilter.OrNorFilter(Operator,Iterable<Bson>)",1,1,1
"com.mongodb.client.model.Filters.OrNorFilter.toBsonDocument(Class<TDocument>,CodecRegistry)",1,2,2
"com.mongodb.client.model.Filters.OrNorFilter.toString()",1,1,1
"com.mongodb.client.model.Filters.SimpleEncodingFilter.SimpleEncodingFilter(String,TItem)",1,1,1
"com.mongodb.client.model.Filters.SimpleEncodingFilter.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.Filters.SimpleEncodingFilter.toString()",1,1,1
"com.mongodb.client.model.Filters.SimpleFilter.SimpleFilter(String,BsonValue)",1,1,1
"com.mongodb.client.model.Filters.SimpleFilter.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.Filters.SimpleFilter.toString()",1,1,1
"com.mongodb.client.model.Filters.TextFilter.TextFilter(String,TextSearchOptions)",1,1,1
"com.mongodb.client.model.Filters.TextFilter.toBsonDocument(Class<TDocument>,CodecRegistry)",1,4,4
"com.mongodb.client.model.Filters.TextFilter.toString()",1,1,1
"com.mongodb.client.model.Filters.all(String,Iterable<TItem>)",1,1,1
"com.mongodb.client.model.Filters.all(String,TItem...)",1,1,1
"com.mongodb.client.model.Filters.and(Bson...)",1,1,1
"com.mongodb.client.model.Filters.and(Iterable<Bson>)",1,1,1
"com.mongodb.client.model.Filters.bitsAllClear(String,long)",1,1,1
"com.mongodb.client.model.Filters.bitsAllSet(String,long)",1,1,1
"com.mongodb.client.model.Filters.bitsAnyClear(String,long)",1,1,1
"com.mongodb.client.model.Filters.bitsAnySet(String,long)",1,1,1
"com.mongodb.client.model.Filters.createNearFilterDocument(String,double,double,Double,Double,String)",1,3,3
"com.mongodb.client.model.Filters.elemMatch(String,Bson)",1,1,1
"com.mongodb.client.model.Filters.eq(String,TItem)",1,1,1
"com.mongodb.client.model.Filters.eq(TItem)",1,1,1
"com.mongodb.client.model.Filters.exists(String)",1,1,1
"com.mongodb.client.model.Filters.exists(String,boolean)",1,1,1
"com.mongodb.client.model.Filters.expr(TExpression)",1,1,1
"com.mongodb.client.model.Filters.geoIntersects(String,Bson)",1,1,1
"com.mongodb.client.model.Filters.geoIntersects(String,Geometry)",1,1,1
"com.mongodb.client.model.Filters.geoWithin(String,Bson)",1,1,1
"com.mongodb.client.model.Filters.geoWithin(String,Geometry)",1,1,1
"com.mongodb.client.model.Filters.geoWithinBox(String,double,double,double,double)",1,1,1
"com.mongodb.client.model.Filters.geoWithinCenter(String,double,double,double)",1,1,1
"com.mongodb.client.model.Filters.geoWithinCenterSphere(String,double,double,double)",1,1,1
"com.mongodb.client.model.Filters.geoWithinPolygon(String,List<List<Double>>)",1,2,2
"com.mongodb.client.model.Filters.gt(String,TItem)",1,1,1
"com.mongodb.client.model.Filters.gte(String,TItem)",1,1,1
"com.mongodb.client.model.Filters.in(String,Iterable<TItem>)",1,1,1
"com.mongodb.client.model.Filters.in(String,TItem...)",1,1,1
"com.mongodb.client.model.Filters.jsonSchema(Bson)",1,1,1
"com.mongodb.client.model.Filters.lt(String,TItem)",1,1,1
"com.mongodb.client.model.Filters.lte(String,TItem)",1,1,1
"com.mongodb.client.model.Filters.mod(String,long,long)",1,1,1
"com.mongodb.client.model.Filters.ne(String,TItem)",1,1,1
"com.mongodb.client.model.Filters.near(String,Bson,Double,Double)",1,1,1
"com.mongodb.client.model.Filters.near(String,Point,Double,Double)",1,1,1
"com.mongodb.client.model.Filters.near(String,double,double,Double,Double)",1,1,1
"com.mongodb.client.model.Filters.nearSphere(String,Bson,Double,Double)",1,1,1
"com.mongodb.client.model.Filters.nearSphere(String,Point,Double,Double)",1,1,1
"com.mongodb.client.model.Filters.nearSphere(String,double,double,Double,Double)",1,1,1
"com.mongodb.client.model.Filters.nin(String,Iterable<TItem>)",1,1,1
"com.mongodb.client.model.Filters.nin(String,TItem...)",1,1,1
"com.mongodb.client.model.Filters.nor(Bson...)",1,1,1
"com.mongodb.client.model.Filters.nor(Iterable<Bson>)",1,1,1
"com.mongodb.client.model.Filters.not(Bson)",1,1,1
"com.mongodb.client.model.Filters.operatorFilterToString(String,String,Object)",1,1,1
"com.mongodb.client.model.Filters.or(Bson...)",1,1,1
"com.mongodb.client.model.Filters.or(Iterable<Bson>)",1,1,1
"com.mongodb.client.model.Filters.regex(String,Pattern)",1,1,1
"com.mongodb.client.model.Filters.regex(String,String)",1,1,1
"com.mongodb.client.model.Filters.regex(String,String,String)",1,1,1
"com.mongodb.client.model.Filters.size(String,int)",1,1,1
"com.mongodb.client.model.Filters.text(String)",1,1,1
"com.mongodb.client.model.Filters.text(String,String)",1,1,1
"com.mongodb.client.model.Filters.text(String,TextSearchOptions)",1,1,1
"com.mongodb.client.model.Filters.type(String,BsonType)",1,1,1
"com.mongodb.client.model.Filters.type(String,String)",1,1,1
"com.mongodb.client.model.Filters.where(String)",1,1,1
"com.mongodb.client.model.FindOneAndDeleteOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.FindOneAndDeleteOptions.getCollation()",1,1,1
"com.mongodb.client.model.FindOneAndDeleteOptions.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.client.model.FindOneAndDeleteOptions.getProjection()",1,1,1
"com.mongodb.client.model.FindOneAndDeleteOptions.getSort()",1,1,1
"com.mongodb.client.model.FindOneAndDeleteOptions.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.FindOneAndDeleteOptions.projection(Bson)",1,1,1
"com.mongodb.client.model.FindOneAndDeleteOptions.sort(Bson)",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.getCollation()",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.getProjection()",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.getReturnDocument()",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.getSort()",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.isUpsert()",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.projection(Bson)",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.returnDocument(ReturnDocument)",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.sort(Bson)",1,1,1
"com.mongodb.client.model.FindOneAndReplaceOptions.upsert(boolean)",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.arrayFilters(List<? extends Bson>)",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.getArrayFilters()",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.getCollation()",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.getProjection()",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.getReturnDocument()",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.getSort()",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.isUpsert()",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.projection(Bson)",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.returnDocument(ReturnDocument)",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.sort(Bson)",1,1,1
"com.mongodb.client.model.FindOneAndUpdateOptions.upsert(boolean)",1,1,1
"com.mongodb.client.model.FindOptions.FindOptions()",1,1,1
"com.mongodb.client.model.FindOptions.FindOptions(FindOptions)",1,1,1
"com.mongodb.client.model.FindOptions.batchSize(int)",1,1,1
"com.mongodb.client.model.FindOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.FindOptions.comment(String)",1,1,1
"com.mongodb.client.model.FindOptions.cursorType(CursorType)",1,1,1
"com.mongodb.client.model.FindOptions.getBatchSize()",1,1,1
"com.mongodb.client.model.FindOptions.getCollation()",1,1,1
"com.mongodb.client.model.FindOptions.getComment()",1,1,1
"com.mongodb.client.model.FindOptions.getCursorType()",1,1,1
"com.mongodb.client.model.FindOptions.getHint()",1,1,1
"com.mongodb.client.model.FindOptions.getLimit()",1,1,1
"com.mongodb.client.model.FindOptions.getMax()",1,1,1
"com.mongodb.client.model.FindOptions.getMaxAwaitTime(TimeUnit)",1,1,1
"com.mongodb.client.model.FindOptions.getMaxScan()",1,1,1
"com.mongodb.client.model.FindOptions.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.client.model.FindOptions.getMin()",1,1,1
"com.mongodb.client.model.FindOptions.getModifiers()",1,1,1
"com.mongodb.client.model.FindOptions.getProjection()",1,1,1
"com.mongodb.client.model.FindOptions.getSkip()",1,1,1
"com.mongodb.client.model.FindOptions.getSort()",1,1,1
"com.mongodb.client.model.FindOptions.hint(Bson)",1,1,1
"com.mongodb.client.model.FindOptions.isNoCursorTimeout()",1,1,1
"com.mongodb.client.model.FindOptions.isOplogReplay()",1,1,1
"com.mongodb.client.model.FindOptions.isPartial()",1,1,1
"com.mongodb.client.model.FindOptions.isReturnKey()",1,1,1
"com.mongodb.client.model.FindOptions.isShowRecordId()",1,1,1
"com.mongodb.client.model.FindOptions.isSnapshot()",1,1,1
"com.mongodb.client.model.FindOptions.limit(int)",1,1,1
"com.mongodb.client.model.FindOptions.max(Bson)",1,1,1
"com.mongodb.client.model.FindOptions.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.FindOptions.maxScan(long)",1,1,1
"com.mongodb.client.model.FindOptions.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.client.model.FindOptions.min(Bson)",1,1,1
"com.mongodb.client.model.FindOptions.modifiers(Bson)",1,1,1
"com.mongodb.client.model.FindOptions.noCursorTimeout(boolean)",1,1,1
"com.mongodb.client.model.FindOptions.oplogReplay(boolean)",1,1,1
"com.mongodb.client.model.FindOptions.partial(boolean)",1,1,1
"com.mongodb.client.model.FindOptions.projection(Bson)",1,1,1
"com.mongodb.client.model.FindOptions.returnKey(boolean)",1,1,1
"com.mongodb.client.model.FindOptions.showRecordId(boolean)",1,1,1
"com.mongodb.client.model.FindOptions.skip(int)",1,1,1
"com.mongodb.client.model.FindOptions.snapshot(boolean)",1,1,1
"com.mongodb.client.model.FindOptions.sort(Bson)",1,1,1
"com.mongodb.client.model.FindOptions.toString()",1,1,1
"com.mongodb.client.model.GraphLookupOptions.depthField(String)",1,1,1
"com.mongodb.client.model.GraphLookupOptions.getDepthField()",1,1,1
"com.mongodb.client.model.GraphLookupOptions.getMaxDepth()",1,1,1
"com.mongodb.client.model.GraphLookupOptions.maxDepth(Integer)",1,1,1
"com.mongodb.client.model.GraphLookupOptions.toString()",1,4,4
"com.mongodb.client.model.IndexModel.IndexModel(Bson)",1,1,1
"com.mongodb.client.model.IndexModel.IndexModel(Bson,IndexOptions)",1,1,1
"com.mongodb.client.model.IndexModel.getKeys()",1,1,1
"com.mongodb.client.model.IndexModel.getOptions()",1,1,1
"com.mongodb.client.model.IndexOptionDefaults.getStorageEngine()",1,1,1
"com.mongodb.client.model.IndexOptionDefaults.storageEngine(Bson)",1,1,1
"com.mongodb.client.model.IndexOptions.background(boolean)",1,1,1
"com.mongodb.client.model.IndexOptions.bits(Integer)",1,1,1
"com.mongodb.client.model.IndexOptions.bucketSize(Double)",1,1,1
"com.mongodb.client.model.IndexOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.IndexOptions.defaultLanguage(String)",1,1,1
"com.mongodb.client.model.IndexOptions.expireAfter(Long,TimeUnit)",1,2,2
"com.mongodb.client.model.IndexOptions.getBits()",1,1,1
"com.mongodb.client.model.IndexOptions.getBucketSize()",1,1,1
"com.mongodb.client.model.IndexOptions.getCollation()",1,1,1
"com.mongodb.client.model.IndexOptions.getDefaultLanguage()",1,1,1
"com.mongodb.client.model.IndexOptions.getExpireAfter(TimeUnit)",2,1,2
"com.mongodb.client.model.IndexOptions.getLanguageOverride()",1,1,1
"com.mongodb.client.model.IndexOptions.getMax()",1,1,1
"com.mongodb.client.model.IndexOptions.getMin()",1,1,1
"com.mongodb.client.model.IndexOptions.getName()",1,1,1
"com.mongodb.client.model.IndexOptions.getPartialFilterExpression()",1,1,1
"com.mongodb.client.model.IndexOptions.getSphereVersion()",1,1,1
"com.mongodb.client.model.IndexOptions.getStorageEngine()",1,1,1
"com.mongodb.client.model.IndexOptions.getTextVersion()",1,1,1
"com.mongodb.client.model.IndexOptions.getVersion()",1,1,1
"com.mongodb.client.model.IndexOptions.getWeights()",1,1,1
"com.mongodb.client.model.IndexOptions.isBackground()",1,1,1
"com.mongodb.client.model.IndexOptions.isSparse()",1,1,1
"com.mongodb.client.model.IndexOptions.isUnique()",1,1,1
"com.mongodb.client.model.IndexOptions.languageOverride(String)",1,1,1
"com.mongodb.client.model.IndexOptions.max(Double)",1,1,1
"com.mongodb.client.model.IndexOptions.min(Double)",1,1,1
"com.mongodb.client.model.IndexOptions.name(String)",1,1,1
"com.mongodb.client.model.IndexOptions.partialFilterExpression(Bson)",1,1,1
"com.mongodb.client.model.IndexOptions.sparse(boolean)",1,1,1
"com.mongodb.client.model.IndexOptions.sphereVersion(Integer)",1,1,1
"com.mongodb.client.model.IndexOptions.storageEngine(Bson)",1,1,1
"com.mongodb.client.model.IndexOptions.textVersion(Integer)",1,1,1
"com.mongodb.client.model.IndexOptions.unique(boolean)",1,1,1
"com.mongodb.client.model.IndexOptions.version(Integer)",1,1,1
"com.mongodb.client.model.IndexOptions.weights(Bson)",1,1,1
"com.mongodb.client.model.Indexes.Indexes()",1,1,1
"com.mongodb.client.model.Indexes.ascending(List<String>)",1,1,1
"com.mongodb.client.model.Indexes.ascending(String...)",1,1,1
"com.mongodb.client.model.Indexes.compoundIndex(Bson...)",1,1,1
"com.mongodb.client.model.Indexes.compoundIndex(List<? extends Bson>)",1,3,3
"com.mongodb.client.model.Indexes.compoundIndex(List<String>,BsonValue)",1,2,2
"com.mongodb.client.model.Indexes.descending(List<String>)",1,1,1
"com.mongodb.client.model.Indexes.descending(String...)",1,1,1
"com.mongodb.client.model.Indexes.geo2d(String)",1,1,1
"com.mongodb.client.model.Indexes.geo2dsphere(List<String>)",1,1,1
"com.mongodb.client.model.Indexes.geo2dsphere(String...)",1,1,1
"com.mongodb.client.model.Indexes.geoHaystack(String,Bson)",1,1,1
"com.mongodb.client.model.Indexes.hashed(String)",1,1,1
"com.mongodb.client.model.Indexes.text(String)",1,1,1
"com.mongodb.client.model.InsertManyOptions.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.client.model.InsertManyOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.client.model.InsertManyOptions.isOrdered()",1,1,1
"com.mongodb.client.model.InsertManyOptions.ordered(boolean)",1,1,1
"com.mongodb.client.model.InsertOneModel.InsertOneModel(T)",1,1,1
"com.mongodb.client.model.InsertOneModel.getDocument()",1,1,1
"com.mongodb.client.model.InsertOneOptions.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.client.model.InsertOneOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.client.model.MapReduceAction.MapReduceAction(String)",1,1,1
"com.mongodb.client.model.MapReduceAction.getValue()",1,1,1
"com.mongodb.client.model.ParallelCollectionScanOptions.batchSize(int)",1,1,1
"com.mongodb.client.model.ParallelCollectionScanOptions.getBatchSize()",1,1,1
"com.mongodb.client.model.Projections.ElemMatchFilterProjection.ElemMatchFilterProjection(String,Bson)",1,1,1
"com.mongodb.client.model.Projections.ElemMatchFilterProjection.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.Projections.ElemMatchFilterProjection.toString()",1,1,1
"com.mongodb.client.model.Projections.FieldsProjection.FieldsProjection(List<? extends Bson>)",1,1,1
"com.mongodb.client.model.Projections.FieldsProjection.toBsonDocument(Class<TDocument>,CodecRegistry)",1,3,3
"com.mongodb.client.model.Projections.FieldsProjection.toString()",1,1,1
"com.mongodb.client.model.Projections.Projections()",1,1,1
"com.mongodb.client.model.Projections.combine(List<String>,BsonValue)",1,2,2
"com.mongodb.client.model.Projections.computed(String,TExpression)",1,1,1
"com.mongodb.client.model.Projections.elemMatch(String)",1,1,1
"com.mongodb.client.model.Projections.elemMatch(String,Bson)",1,1,1
"com.mongodb.client.model.Projections.exclude(List<String>)",1,1,1
"com.mongodb.client.model.Projections.exclude(String...)",1,1,1
"com.mongodb.client.model.Projections.excludeId()",1,1,1
"com.mongodb.client.model.Projections.fields(Bson...)",1,1,1
"com.mongodb.client.model.Projections.fields(List<? extends Bson>)",1,1,1
"com.mongodb.client.model.Projections.include(List<String>)",1,1,1
"com.mongodb.client.model.Projections.include(String...)",1,1,1
"com.mongodb.client.model.Projections.metaTextScore(String)",1,1,1
"com.mongodb.client.model.Projections.slice(String,int)",1,1,1
"com.mongodb.client.model.Projections.slice(String,int,int)",1,1,1
"com.mongodb.client.model.PushOptions.getPosition()",1,1,1
"com.mongodb.client.model.PushOptions.getSlice()",1,1,1
"com.mongodb.client.model.PushOptions.getSort()",1,1,1
"com.mongodb.client.model.PushOptions.getSortDocument()",1,1,1
"com.mongodb.client.model.PushOptions.position(Integer)",1,1,1
"com.mongodb.client.model.PushOptions.slice(Integer)",1,1,1
"com.mongodb.client.model.PushOptions.sort(Integer)",2,1,2
"com.mongodb.client.model.PushOptions.sortDocument(Bson)",2,1,2
"com.mongodb.client.model.PushOptions.toString()",1,1,3
"com.mongodb.client.model.RenameCollectionOptions.dropTarget(boolean)",1,1,1
"com.mongodb.client.model.RenameCollectionOptions.isDropTarget()",1,1,1
"com.mongodb.client.model.ReplaceOneModel.ReplaceOneModel(Bson,T)",1,1,1
"com.mongodb.client.model.ReplaceOneModel.ReplaceOneModel(Bson,T,UpdateOptions)",1,1,1
"com.mongodb.client.model.ReplaceOneModel.getFilter()",1,1,1
"com.mongodb.client.model.ReplaceOneModel.getOptions()",1,1,1
"com.mongodb.client.model.ReplaceOneModel.getReplacement()",1,1,1
"com.mongodb.client.model.SimpleExpression.SimpleExpression(String,TExpression)",1,1,1
"com.mongodb.client.model.SimpleExpression.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.SimpleExpression.toString()",1,1,1
"com.mongodb.client.model.Sorts.CompoundSort.CompoundSort(List<? extends Bson>)",1,1,1
"com.mongodb.client.model.Sorts.CompoundSort.toBsonDocument(Class<TDocument>,CodecRegistry)",1,3,3
"com.mongodb.client.model.Sorts.CompoundSort.toString()",1,1,1
"com.mongodb.client.model.Sorts.Sorts()",1,1,1
"com.mongodb.client.model.Sorts.ascending(List<String>)",1,1,1
"com.mongodb.client.model.Sorts.ascending(String...)",1,1,1
"com.mongodb.client.model.Sorts.descending(List<String>)",1,1,1
"com.mongodb.client.model.Sorts.descending(String...)",1,1,1
"com.mongodb.client.model.Sorts.metaTextScore(String)",1,1,1
"com.mongodb.client.model.Sorts.orderBy(Bson...)",1,1,1
"com.mongodb.client.model.Sorts.orderBy(List<? extends Bson>)",1,1,1
"com.mongodb.client.model.Sorts.orderBy(List<String>,BsonValue)",1,2,2
"com.mongodb.client.model.TextSearchOptions.caseSensitive(Boolean)",1,1,1
"com.mongodb.client.model.TextSearchOptions.diacriticSensitive(Boolean)",1,1,1
"com.mongodb.client.model.TextSearchOptions.getCaseSensitive()",1,1,1
"com.mongodb.client.model.TextSearchOptions.getDiacriticSensitive()",1,1,1
"com.mongodb.client.model.TextSearchOptions.getLanguage()",1,1,1
"com.mongodb.client.model.TextSearchOptions.language(String)",1,1,1
"com.mongodb.client.model.TextSearchOptions.toString()",1,1,1
"com.mongodb.client.model.UnwindOptions.getIncludeArrayIndex()",1,1,1
"com.mongodb.client.model.UnwindOptions.includeArrayIndex(String)",1,1,1
"com.mongodb.client.model.UnwindOptions.isPreserveNullAndEmptyArrays()",1,1,1
"com.mongodb.client.model.UnwindOptions.preserveNullAndEmptyArrays(Boolean)",1,1,1
"com.mongodb.client.model.UpdateManyModel.UpdateManyModel(Bson,Bson)",1,1,1
"com.mongodb.client.model.UpdateManyModel.UpdateManyModel(Bson,Bson,UpdateOptions)",1,1,1
"com.mongodb.client.model.UpdateManyModel.getFilter()",1,1,1
"com.mongodb.client.model.UpdateManyModel.getOptions()",1,1,1
"com.mongodb.client.model.UpdateManyModel.getUpdate()",1,1,1
"com.mongodb.client.model.UpdateOneModel.UpdateOneModel(Bson,Bson)",1,1,1
"com.mongodb.client.model.UpdateOneModel.UpdateOneModel(Bson,Bson,UpdateOptions)",1,1,1
"com.mongodb.client.model.UpdateOneModel.getFilter()",1,1,1
"com.mongodb.client.model.UpdateOneModel.getOptions()",1,1,1
"com.mongodb.client.model.UpdateOneModel.getUpdate()",1,1,1
"com.mongodb.client.model.UpdateOptions.arrayFilters(List<? extends Bson>)",1,1,1
"com.mongodb.client.model.UpdateOptions.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.client.model.UpdateOptions.collation(Collation)",1,1,1
"com.mongodb.client.model.UpdateOptions.getArrayFilters()",1,1,1
"com.mongodb.client.model.UpdateOptions.getBypassDocumentValidation()",1,1,1
"com.mongodb.client.model.UpdateOptions.getCollation()",1,1,1
"com.mongodb.client.model.UpdateOptions.isUpsert()",1,1,1
"com.mongodb.client.model.UpdateOptions.upsert(boolean)",1,1,1
"com.mongodb.client.model.Updates.CompositeUpdate.CompositeUpdate(List<? extends Bson>)",1,1,1
"com.mongodb.client.model.Updates.CompositeUpdate.toBsonDocument(Class<TDocument>,CodecRegistry)",1,5,5
"com.mongodb.client.model.Updates.CompositeUpdate.toString()",1,1,1
"com.mongodb.client.model.Updates.PullAllUpdate.PullAllUpdate(String,List<TItem>)",1,1,1
"com.mongodb.client.model.Updates.PullAllUpdate.toBsonDocument(Class<TDocument>,CodecRegistry)",1,2,2
"com.mongodb.client.model.Updates.PullAllUpdate.toString()",1,1,1
"com.mongodb.client.model.Updates.PushUpdate.PushUpdate(String,List<TItem>,PushOptions)",1,1,1
"com.mongodb.client.model.Updates.PushUpdate.additionalFieldsToString()",1,1,1
"com.mongodb.client.model.Updates.PushUpdate.writeAdditionalFields(BsonDocumentWriter,Class<TDocument>,CodecRegistry)",1,5,5
"com.mongodb.client.model.Updates.SimpleUpdate.SimpleUpdate(String,TItem,String)",1,1,1
"com.mongodb.client.model.Updates.SimpleUpdate.toBsonDocument(Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.Updates.SimpleUpdate.toString()",1,1,1
"com.mongodb.client.model.Updates.Updates()",1,1,1
"com.mongodb.client.model.Updates.WithEachUpdate.WithEachUpdate(String,List<TItem>,String)",1,1,1
"com.mongodb.client.model.Updates.WithEachUpdate.additionalFieldsToString()",1,1,1
"com.mongodb.client.model.Updates.WithEachUpdate.toBsonDocument(Class<TDocument>,CodecRegistry)",1,2,2
"com.mongodb.client.model.Updates.WithEachUpdate.toString()",1,1,1
"com.mongodb.client.model.Updates.WithEachUpdate.writeAdditionalFields(BsonDocumentWriter,Class<TDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.Updates.addEachToSet(String,List<TItem>)",1,1,1
"com.mongodb.client.model.Updates.addToSet(String,TItem)",1,1,1
"com.mongodb.client.model.Updates.bitwiseAnd(String,int)",1,1,1
"com.mongodb.client.model.Updates.bitwiseAnd(String,long)",1,1,1
"com.mongodb.client.model.Updates.bitwiseOr(String,int)",1,1,1
"com.mongodb.client.model.Updates.bitwiseOr(String,long)",1,1,1
"com.mongodb.client.model.Updates.bitwiseXor(String,int)",1,1,1
"com.mongodb.client.model.Updates.bitwiseXor(String,long)",1,1,1
"com.mongodb.client.model.Updates.combine(Bson...)",1,1,1
"com.mongodb.client.model.Updates.combine(List<? extends Bson>)",1,1,1
"com.mongodb.client.model.Updates.createBitUpdateDocument(String,String,BsonValue)",1,1,1
"com.mongodb.client.model.Updates.createBitUpdateDocument(String,String,int)",1,1,1
"com.mongodb.client.model.Updates.createBitUpdateDocument(String,String,long)",1,1,1
"com.mongodb.client.model.Updates.currentDate(String)",1,1,1
"com.mongodb.client.model.Updates.currentTimestamp(String)",1,1,1
"com.mongodb.client.model.Updates.inc(String,Number)",1,1,1
"com.mongodb.client.model.Updates.max(String,TItem)",1,1,1
"com.mongodb.client.model.Updates.min(String,TItem)",1,1,1
"com.mongodb.client.model.Updates.mul(String,Number)",1,1,1
"com.mongodb.client.model.Updates.popFirst(String)",1,1,1
"com.mongodb.client.model.Updates.popLast(String)",1,1,1
"com.mongodb.client.model.Updates.pull(String,TItem)",1,1,1
"com.mongodb.client.model.Updates.pullAll(String,List<TItem>)",1,1,1
"com.mongodb.client.model.Updates.pullByFilter(Bson)",1,1,1
"com.mongodb.client.model.Updates.push(String,TItem)",1,1,1
"com.mongodb.client.model.Updates.pushEach(String,List<TItem>)",1,1,1
"com.mongodb.client.model.Updates.pushEach(String,List<TItem>,PushOptions)",1,1,1
"com.mongodb.client.model.Updates.rename(String,String)",1,1,1
"com.mongodb.client.model.Updates.set(String,TItem)",1,1,1
"com.mongodb.client.model.Updates.setOnInsert(String,TItem)",1,1,1
"com.mongodb.client.model.Updates.unset(String)",1,1,1
"com.mongodb.client.model.ValidationAction.ValidationAction(String)",1,1,1
"com.mongodb.client.model.ValidationAction.fromString(String)",3,2,3
"com.mongodb.client.model.ValidationAction.getValue()",1,1,1
"com.mongodb.client.model.ValidationLevel.ValidationLevel(String)",1,1,1
"com.mongodb.client.model.ValidationLevel.fromString(String)",3,2,3
"com.mongodb.client.model.ValidationLevel.getValue()",1,1,1
"com.mongodb.client.model.ValidationOptions.getValidationAction()",1,1,1
"com.mongodb.client.model.ValidationOptions.getValidationLevel()",1,1,1
"com.mongodb.client.model.ValidationOptions.getValidator()",1,1,1
"com.mongodb.client.model.ValidationOptions.validationAction(ValidationAction)",1,1,1
"com.mongodb.client.model.ValidationOptions.validationLevel(ValidationLevel)",1,1,1
"com.mongodb.client.model.ValidationOptions.validator(Bson)",1,1,1
"com.mongodb.client.model.WriteModel.WriteModel()",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocument.ChangeStreamDocument(BsonDocument,MongoNamespace,TDocument,OperationType,UpdateDescription)",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocument.createCodec(Class<TFullDocument>,CodecRegistry)",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocument.equals(Object)",8,3,10
"com.mongodb.client.model.changestream.ChangeStreamDocument.getFullDocument()",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocument.getNamespace()",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocument.getOperationType()",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocument.getResumeToken()",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocument.getUpdateDescription()",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocument.hashCode()",1,2,2
"com.mongodb.client.model.changestream.ChangeStreamDocument.toString()",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocumentCodec.ChangeStreamDocumentCodec(Class<TResult>,CodecRegistry)",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocumentCodec.decode(BsonReader,DecoderContext)",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocumentCodec.encode(BsonWriter,ChangeStreamDocument<TResult>,EncoderContext)",1,1,1
"com.mongodb.client.model.changestream.ChangeStreamDocumentCodec.getEncoderClass()",1,1,1
"com.mongodb.client.model.changestream.FullDocument.FullDocument(String)",1,1,1
"com.mongodb.client.model.changestream.FullDocument.fromString(String)",4,3,4
"com.mongodb.client.model.changestream.FullDocument.getValue()",1,1,1
"com.mongodb.client.model.changestream.OperationType.OperationType(String)",1,1,1
"com.mongodb.client.model.changestream.OperationType.fromString(String)",4,3,4
"com.mongodb.client.model.changestream.OperationType.getValue()",1,1,1
"com.mongodb.client.model.changestream.OperationType.toString()",1,1,1
"com.mongodb.client.model.changestream.OperationTypeCodec.decode(BsonReader,DecoderContext)",1,1,1
"com.mongodb.client.model.changestream.OperationTypeCodec.encode(BsonWriter,OperationType,EncoderContext)",1,1,1
"com.mongodb.client.model.changestream.OperationTypeCodec.getEncoderClass()",1,1,1
"com.mongodb.client.model.changestream.UpdateDescription.UpdateDescription(List<String>,BsonDocument)",1,1,1
"com.mongodb.client.model.changestream.UpdateDescription.equals(Object)",5,4,8
"com.mongodb.client.model.changestream.UpdateDescription.getRemovedFields()",1,1,1
"com.mongodb.client.model.changestream.UpdateDescription.getUpdatedFields()",1,1,1
"com.mongodb.client.model.changestream.UpdateDescription.hashCode()",1,3,3
"com.mongodb.client.model.changestream.UpdateDescription.toString()",1,1,1
"com.mongodb.client.model.geojson.CoordinateReferenceSystemType.CoordinateReferenceSystemType(String)",1,1,1
"com.mongodb.client.model.geojson.CoordinateReferenceSystemType.getTypeName()",1,1,1
"com.mongodb.client.model.geojson.GeoJsonObjectType.GeoJsonObjectType(String)",1,1,1
"com.mongodb.client.model.geojson.GeoJsonObjectType.getTypeName()",1,1,1
"com.mongodb.client.model.geojson.Geometry.Geometry()",1,1,1
"com.mongodb.client.model.geojson.Geometry.Geometry(CoordinateReferenceSystem)",1,1,1
"com.mongodb.client.model.geojson.Geometry.equals(Object)",4,3,6
"com.mongodb.client.model.geojson.Geometry.getCoordinateReferenceSystem()",1,1,1
"com.mongodb.client.model.geojson.Geometry.getRegistry()",1,1,1
"com.mongodb.client.model.geojson.Geometry.hashCode()",1,2,2
"com.mongodb.client.model.geojson.Geometry.toJson()",1,1,1
"com.mongodb.client.model.geojson.GeometryCollection.GeometryCollection(CoordinateReferenceSystem,List<? extends Geometry>)",1,1,1
"com.mongodb.client.model.geojson.GeometryCollection.GeometryCollection(List<? extends Geometry>)",1,1,1
"com.mongodb.client.model.geojson.GeometryCollection.equals(Object)",5,2,6
"com.mongodb.client.model.geojson.GeometryCollection.getGeometries()",1,1,1
"com.mongodb.client.model.geojson.GeometryCollection.getType()",1,1,1
"com.mongodb.client.model.geojson.GeometryCollection.hashCode()",1,1,1
"com.mongodb.client.model.geojson.GeometryCollection.toString()",1,2,2
"com.mongodb.client.model.geojson.LineString.LineString(CoordinateReferenceSystem,List<Position>)",1,1,1
"com.mongodb.client.model.geojson.LineString.LineString(List<Position>)",1,1,1
"com.mongodb.client.model.geojson.LineString.equals(Object)",5,2,6
"com.mongodb.client.model.geojson.LineString.getCoordinates()",1,1,1
"com.mongodb.client.model.geojson.LineString.getType()",1,1,1
"com.mongodb.client.model.geojson.LineString.hashCode()",1,1,1
"com.mongodb.client.model.geojson.LineString.toString()",1,2,2
"com.mongodb.client.model.geojson.MultiLineString.MultiLineString(CoordinateReferenceSystem,List<List<Position>>)",1,2,2
"com.mongodb.client.model.geojson.MultiLineString.MultiLineString(List<List<Position>>)",1,1,1
"com.mongodb.client.model.geojson.MultiLineString.equals(Object)",5,2,6
"com.mongodb.client.model.geojson.MultiLineString.getCoordinates()",1,1,1
"com.mongodb.client.model.geojson.MultiLineString.getType()",1,1,1
"com.mongodb.client.model.geojson.MultiLineString.hashCode()",1,1,1
"com.mongodb.client.model.geojson.MultiLineString.toString()",1,2,2
"com.mongodb.client.model.geojson.MultiPoint.MultiPoint(CoordinateReferenceSystem,List<Position>)",1,1,1
"com.mongodb.client.model.geojson.MultiPoint.MultiPoint(List<Position>)",1,1,1
"com.mongodb.client.model.geojson.MultiPoint.equals(Object)",5,2,6
"com.mongodb.client.model.geojson.MultiPoint.getCoordinates()",1,1,1
"com.mongodb.client.model.geojson.MultiPoint.getType()",1,1,1
"com.mongodb.client.model.geojson.MultiPoint.hashCode()",1,1,1
"com.mongodb.client.model.geojson.MultiPoint.toString()",1,2,2
"com.mongodb.client.model.geojson.MultiPolygon.MultiPolygon(CoordinateReferenceSystem,List<PolygonCoordinates>)",1,1,1
"com.mongodb.client.model.geojson.MultiPolygon.MultiPolygon(List<PolygonCoordinates>)",1,1,1
"com.mongodb.client.model.geojson.MultiPolygon.equals(Object)",5,2,6
"com.mongodb.client.model.geojson.MultiPolygon.getCoordinates()",1,1,1
"com.mongodb.client.model.geojson.MultiPolygon.getType()",1,1,1
"com.mongodb.client.model.geojson.MultiPolygon.hashCode()",1,1,1
"com.mongodb.client.model.geojson.MultiPolygon.toString()",1,2,2
"com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem.NamedCoordinateReferenceSystem(String)",1,1,1
"com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem.equals(Object)",4,2,5
"com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem.getName()",1,1,1
"com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem.getType()",1,1,1
"com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem.hashCode()",1,1,1
"com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem.toString()",1,1,1
"com.mongodb.client.model.geojson.Point.Point(CoordinateReferenceSystem,Position)",1,1,1
"com.mongodb.client.model.geojson.Point.Point(Position)",1,1,1
"com.mongodb.client.model.geojson.Point.equals(Object)",5,2,6
"com.mongodb.client.model.geojson.Point.getCoordinates()",1,1,1
"com.mongodb.client.model.geojson.Point.getPosition()",1,1,1
"com.mongodb.client.model.geojson.Point.getType()",1,1,1
"com.mongodb.client.model.geojson.Point.hashCode()",1,1,1
"com.mongodb.client.model.geojson.Point.toString()",1,2,2
"com.mongodb.client.model.geojson.Polygon.Polygon(CoordinateReferenceSystem,PolygonCoordinates)",1,1,1
"com.mongodb.client.model.geojson.Polygon.Polygon(List<Position>,List<Position>...)",1,1,1
"com.mongodb.client.model.geojson.Polygon.Polygon(PolygonCoordinates)",1,1,1
"com.mongodb.client.model.geojson.Polygon.equals(Object)",5,2,6
"com.mongodb.client.model.geojson.Polygon.getCoordinates()",1,1,1
"com.mongodb.client.model.geojson.Polygon.getExterior()",1,1,1
"com.mongodb.client.model.geojson.Polygon.getHoles()",1,1,1
"com.mongodb.client.model.geojson.Polygon.getType()",1,1,1
"com.mongodb.client.model.geojson.Polygon.hashCode()",1,1,1
"com.mongodb.client.model.geojson.Polygon.toString()",1,3,3
"com.mongodb.client.model.geojson.PolygonCoordinates.PolygonCoordinates(List<Position>,List<Position>...)",1,2,2
"com.mongodb.client.model.geojson.PolygonCoordinates.equals(Object)",5,2,6
"com.mongodb.client.model.geojson.PolygonCoordinates.getExterior()",1,1,1
"com.mongodb.client.model.geojson.PolygonCoordinates.getHoles()",1,1,1
"com.mongodb.client.model.geojson.PolygonCoordinates.hashCode()",1,1,1
"com.mongodb.client.model.geojson.PolygonCoordinates.toString()",1,1,2
"com.mongodb.client.model.geojson.Position.Position(List<Double>)",1,1,1
"com.mongodb.client.model.geojson.Position.Position(double,double,double...)",1,2,2
"com.mongodb.client.model.geojson.Position.equals(Object)",4,2,5
"com.mongodb.client.model.geojson.Position.getValues()",1,1,1
"com.mongodb.client.model.geojson.Position.hashCode()",1,1,1
"com.mongodb.client.model.geojson.Position.toString()",1,1,1
"com.mongodb.client.model.geojson.codecs.AbstractGeometryCodec.AbstractGeometryCodec(CodecRegistry,Class<T>)",1,1,1
"com.mongodb.client.model.geojson.codecs.AbstractGeometryCodec.decode(BsonReader,DecoderContext)",1,1,1
"com.mongodb.client.model.geojson.codecs.AbstractGeometryCodec.encode(BsonWriter,T,EncoderContext)",1,1,1
"com.mongodb.client.model.geojson.codecs.AbstractGeometryCodec.getEncoderClass()",1,1,1
"com.mongodb.client.model.geojson.codecs.GeoJsonCodecProvider.get(Class<T>,CodecRegistry)",10,9,10
"com.mongodb.client.model.geojson.codecs.GeometryCodec.GeometryCodec(CodecRegistry)",1,1,1
"com.mongodb.client.model.geojson.codecs.GeometryCollectionCodec.GeometryCollectionCodec(CodecRegistry)",1,1,1
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.GeometryDecoderHelper()",1,1,1
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeCoordinateReferenceSystem(BsonReader)",5,5,6
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeCoordinateReferenceSystemProperties(BsonReader)",4,3,4
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeCoordinates(BsonReader)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeGeometries(BsonReader)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeGeometry(BsonReader)",11,10,11
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeGeometry(BsonReader,Class<T>)",9,9,9
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeGeometryCollection(BsonReader)",8,7,9
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeLineString(BsonReader)",8,7,9
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiCoordinates(BsonReader)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiLineString(BsonReader)",8,7,9
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiPoint(BsonReader)",8,7,9
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiPolygon(BsonReader)",8,7,9
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiPolygonCoordinates(BsonReader)",2,2,3
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodePoint(BsonReader)",8,7,9
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodePolygon(BsonReader)",8,7,9
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodePolygonCoordinates(BsonReader)",2,3,4
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodePosition(BsonReader)",3,3,4
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.validateIsArray(BsonReader)",2,1,2
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.validateIsDocument(BsonReader)",2,2,3
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.GeometryEncoderHelper()",1,1,1
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeCoordinateReferenceSystem(BsonWriter,Geometry,EncoderContext,CodecRegistry)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(BsonWriter,Geometry,EncoderContext,CodecRegistry)",8,8,8
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometryCollection(BsonWriter,GeometryCollection,EncoderContext,CodecRegistry)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeLineString(BsonWriter,LineString)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeLinearRing(List<Position>,BsonWriter)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeMultiLineString(BsonWriter,MultiLineString)",1,3,3
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeMultiPoint(BsonWriter,MultiPoint)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeMultiPolygon(BsonWriter,MultiPolygon)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePoint(BsonWriter,Point)",1,1,1
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePolygon(BsonWriter,Polygon)",1,1,1
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePolygonCoordinates(BsonWriter,PolygonCoordinates)",1,2,2
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePosition(BsonWriter,Position)",1,2,2
"com.mongodb.client.model.geojson.codecs.LineStringCodec.LineStringCodec(CodecRegistry)",1,1,1
"com.mongodb.client.model.geojson.codecs.MultiLineStringCodec.MultiLineStringCodec(CodecRegistry)",1,1,1
"com.mongodb.client.model.geojson.codecs.MultiPointCodec.MultiPointCodec(CodecRegistry)",1,1,1
"com.mongodb.client.model.geojson.codecs.MultiPolygonCodec.MultiPolygonCodec(CodecRegistry)",1,1,1
"com.mongodb.client.model.geojson.codecs.NamedCoordinateReferenceSystemCodec.decode(BsonReader,DecoderContext)",2,1,3
"com.mongodb.client.model.geojson.codecs.NamedCoordinateReferenceSystemCodec.encode(BsonWriter,NamedCoordinateReferenceSystem,EncoderContext)",1,1,1
"com.mongodb.client.model.geojson.codecs.NamedCoordinateReferenceSystemCodec.getEncoderClass()",1,1,1
"com.mongodb.client.model.geojson.codecs.PointCodec.PointCodec(CodecRegistry)",1,1,1
"com.mongodb.client.model.geojson.codecs.PolygonCodec.PolygonCodec(CodecRegistry)",1,1,1
"com.mongodb.client.result.DeleteResult.AcknowledgedDeleteResult.AcknowledgedDeleteResult(long)",1,1,1
"com.mongodb.client.result.DeleteResult.AcknowledgedDeleteResult.equals(Object)",4,2,5
"com.mongodb.client.result.DeleteResult.AcknowledgedDeleteResult.getDeletedCount()",1,1,1
"com.mongodb.client.result.DeleteResult.AcknowledgedDeleteResult.hashCode()",1,1,1
"com.mongodb.client.result.DeleteResult.AcknowledgedDeleteResult.toString()",1,1,1
"com.mongodb.client.result.DeleteResult.AcknowledgedDeleteResult.wasAcknowledged()",1,1,1
"com.mongodb.client.result.DeleteResult.UnacknowledgedDeleteResult.equals(Object)",3,2,4
"com.mongodb.client.result.DeleteResult.UnacknowledgedDeleteResult.getDeletedCount()",1,1,1
"com.mongodb.client.result.DeleteResult.UnacknowledgedDeleteResult.hashCode()",1,1,1
"com.mongodb.client.result.DeleteResult.UnacknowledgedDeleteResult.toString()",1,1,1
"com.mongodb.client.result.DeleteResult.UnacknowledgedDeleteResult.wasAcknowledged()",1,1,1
"com.mongodb.client.result.DeleteResult.acknowledged(long)",1,1,1
"com.mongodb.client.result.DeleteResult.unacknowledged()",1,1,1
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult.AcknowledgedUpdateResult(long,Long,BsonValue)",1,1,1
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult.equals(Object)",6,4,9
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult.getMatchedCount()",1,1,1
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult.getModifiedCount()",2,1,2
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult.getUpsertedId()",1,1,1
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult.hashCode()",1,3,3
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult.isModifiedCountAvailable()",1,1,1
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult.toString()",1,1,1
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult.wasAcknowledged()",1,1,1
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult.equals(Object)",3,2,4
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult.getMatchedCount()",1,1,1
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult.getModifiedCount()",1,1,1
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult.getUnacknowledgedWriteException()",1,1,1
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult.getUpsertedId()",1,1,1
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult.hashCode()",1,1,1
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult.isModifiedCountAvailable()",1,1,1
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult.toString()",1,1,1
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult.wasAcknowledged()",1,1,1
"com.mongodb.client.result.UpdateResult.acknowledged(long,Long,BsonValue)",1,1,1
"com.mongodb.client.result.UpdateResult.unacknowledged()",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.append(String,BsonValue)",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.clear()",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.containsKey(Object)",3,1,4
"com.mongodb.connection.AbstractByteBufBsonDocument.containsValue(Object)",2,1,3
"com.mongodb.connection.AbstractByteBufBsonDocument.deserializeBsonValue(BsonReader)",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.entrySet()",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.equals(Object)",2,1,2
"com.mongodb.connection.AbstractByteBufBsonDocument.get(Object)",3,2,3
"com.mongodb.connection.AbstractByteBufBsonDocument.getFirstKey()",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.hashCode()",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.isEmpty()",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.keySet()",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.put(String,BsonValue)",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.putAll(Map<? extends String, ? extends BsonValue>)",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.remove(Object)",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.size()",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.values()",1,1,1
"com.mongodb.connection.AbstractByteBufBsonDocument.writeReplace()",1,1,1
"com.mongodb.connection.AbstractReferenceCounted.getCount()",1,1,1
"com.mongodb.connection.AbstractReferenceCounted.release()",2,1,2
"com.mongodb.connection.AbstractReferenceCounted.retain()",2,1,2
"com.mongodb.connection.AsynchronousSocketChannelStream.AsyncWritableByteChannelAdapter.WriteCompletionHandler.WriteCompletionHandler(AsyncCompletionHandler<Void>)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.AsyncWritableByteChannelAdapter.WriteCompletionHandler.completed(Integer,Object)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.AsyncWritableByteChannelAdapter.WriteCompletionHandler.failed(Throwable,Object)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.AsyncWritableByteChannelAdapter.write(ByteBuffer,AsyncCompletionHandler<Void>)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.AsynchronousSocketChannelStream(ServerAddress,SocketSettings,BufferProvider,AsynchronousChannelGroup)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.BaseCompletionHandler.BaseCompletionHandler(AsyncCompletionHandler<T>)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.BaseCompletionHandler.getHandlerAndClear()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.BasicCompletionHandler.BasicCompletionHandler(ByteBuf,AsyncCompletionHandler<ByteBuf>)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.BasicCompletionHandler.completed(Integer,Void)",1,3,3
"com.mongodb.connection.AsynchronousSocketChannelStream.BasicCompletionHandler.failed(Throwable,Void)",1,2,2
"com.mongodb.connection.AsynchronousSocketChannelStream.OpenCompletionHandler.OpenCompletionHandler(AsyncCompletionHandler<Void>)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.OpenCompletionHandler.completed(Void,Object)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.OpenCompletionHandler.failed(Throwable,Object)",1,2,2
"com.mongodb.connection.AsynchronousSocketChannelStream.close()",1,2,3
"com.mongodb.connection.AsynchronousSocketChannelStream.getAddress()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.getBuffer(int)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.getGroup()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.getServerAddress()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.getSettings()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.isClosed()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.open()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.openAsync(AsyncCompletionHandler<Void>)",1,5,5
"com.mongodb.connection.AsynchronousSocketChannelStream.pipeOneBuffer(AsyncWritableByteChannel,ByteBuf,AsyncCompletionHandler<Void>)",1,2,2
"com.mongodb.connection.AsynchronousSocketChannelStream.read(int)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.readAsync(int,AsyncCompletionHandler<ByteBuf>)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.write(List<ByteBuf>)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStream.writeAsync(List<ByteBuf>,AsyncCompletionHandler<Void>)",1,2,2
"com.mongodb.connection.AsynchronousSocketChannelStreamFactory.AsynchronousSocketChannelStreamFactory(SocketSettings,SslSettings)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStreamFactory.AsynchronousSocketChannelStreamFactory(SocketSettings,SslSettings,AsynchronousChannelGroup)",2,1,2
"com.mongodb.connection.AsynchronousSocketChannelStreamFactory.create(ServerAddress)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStreamFactoryFactory.AsynchronousSocketChannelStreamFactoryFactory()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStreamFactoryFactory.AsynchronousSocketChannelStreamFactoryFactory(Builder)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStreamFactoryFactory.Builder.build()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStreamFactoryFactory.Builder.group(AsynchronousChannelGroup)",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStreamFactoryFactory.builder()",1,1,1
"com.mongodb.connection.AsynchronousSocketChannelStreamFactoryFactory.create(SocketSettings,SslSettings)",1,1,1
"com.mongodb.connection.Authenticator.Authenticator(MongoCredential)",1,1,1
"com.mongodb.connection.Authenticator.getCredential()",1,1,1
"com.mongodb.connection.BaseCluster.BaseCluster(ClusterId,ClusterSettings,ClusterableServerFactory)",1,1,1
"com.mongodb.connection.BaseCluster.ServerSelectionRequest.ServerSelectionRequest(ServerSelector,ServerSelector,long,SingleResultCallback<Server>)",1,1,1
"com.mongodb.connection.BaseCluster.ServerSelectionRequest.getRemainingTime()",1,1,1
"com.mongodb.connection.BaseCluster.ServerSelectionRequest.onResult(Server,Throwable)",1,1,2
"com.mongodb.connection.BaseCluster.ServerSelectionRequest.timedOut()",1,1,1
"com.mongodb.connection.BaseCluster.WaitQueueHandler.run()",1,6,7
"com.mongodb.connection.BaseCluster.close()",1,2,2
"com.mongodb.connection.BaseCluster.createIncompatibleException(ClusterDescription)",1,1,1
"com.mongodb.connection.BaseCluster.createServer(ServerAddress,ServerListener)",1,1,1
"com.mongodb.connection.BaseCluster.createTimeoutException(ServerSelector,ClusterDescription)",1,1,1
"com.mongodb.connection.BaseCluster.createWaitQueueFullException()",1,1,1
"com.mongodb.connection.BaseCluster.fireChangeEvent(ClusterDescriptionChangedEvent)",1,1,1
"com.mongodb.connection.BaseCluster.getClusterId()",1,1,1
"com.mongodb.connection.BaseCluster.getCompositeServerSelector(ServerSelector)",2,2,2
"com.mongodb.connection.BaseCluster.getCurrentDescription()",1,1,1
"com.mongodb.connection.BaseCluster.getDescription()",3,6,7
"com.mongodb.connection.BaseCluster.getMaxWaitTimeNanos()",2,1,2
"com.mongodb.connection.BaseCluster.getMinWaitTimeNanos()",1,1,1
"com.mongodb.connection.BaseCluster.getRandom()",1,2,2
"com.mongodb.connection.BaseCluster.getRandomServer(List<ServerDescription>)",3,3,3
"com.mongodb.connection.BaseCluster.getServerFactory()",1,1,1
"com.mongodb.connection.BaseCluster.getSettings()",1,1,1
"com.mongodb.connection.BaseCluster.handleServerSelectionRequest(ServerSelectionRequest,CountDownLatch,ClusterDescription)",5,10,10
"com.mongodb.connection.BaseCluster.isClosed()",1,1,1
"com.mongodb.connection.BaseCluster.logServerSelectionFailure(ServerSelector,ClusterDescription)",1,3,3
"com.mongodb.connection.BaseCluster.notifyWaitQueueHandler(ServerSelectionRequest)",2,3,4
"com.mongodb.connection.BaseCluster.selectRandomServer(ServerSelector,ClusterDescription)",2,2,2
"com.mongodb.connection.BaseCluster.selectServer(ServerSelector)",4,5,6
"com.mongodb.connection.BaseCluster.selectServerAsync(ServerSelector,SingleResultCallback<Server>)",1,3,3
"com.mongodb.connection.BaseCluster.stopWaitQueueHandler()",1,2,2
"com.mongodb.connection.BaseCluster.throwIfIncompatible(ClusterDescription)",2,2,2
"com.mongodb.connection.BaseCluster.updateDescription(ClusterDescription)",1,2,2
"com.mongodb.connection.BaseQueryMessage.BaseQueryMessage(String,int,int,MessageSettings)",1,1,1
"com.mongodb.connection.BaseQueryMessage.awaitData(boolean)",1,1,1
"com.mongodb.connection.BaseQueryMessage.getCursorFlag()",1,1,7
"com.mongodb.connection.BaseQueryMessage.isAwaitData()",1,1,1
"com.mongodb.connection.BaseQueryMessage.isNoCursorTimeout()",1,1,1
"com.mongodb.connection.BaseQueryMessage.isOplogReplay()",1,1,1
"com.mongodb.connection.BaseQueryMessage.isPartial()",1,1,1
"com.mongodb.connection.BaseQueryMessage.isSlaveOk()",1,1,1
"com.mongodb.connection.BaseQueryMessage.isTailableCursor()",1,1,1
"com.mongodb.connection.BaseQueryMessage.noCursorTimeout(boolean)",1,1,1
"com.mongodb.connection.BaseQueryMessage.oplogReplay(boolean)",1,1,1
"com.mongodb.connection.BaseQueryMessage.partial(boolean)",1,1,1
"com.mongodb.connection.BaseQueryMessage.slaveOk(boolean)",1,1,1
"com.mongodb.connection.BaseQueryMessage.tailableCursor(boolean)",1,1,1
"com.mongodb.connection.BaseQueryMessage.writeQueryPrologue(BsonOutput)",1,1,1
"com.mongodb.connection.BsonWriterHelper.BsonWriterHelper()",1,1,1
"com.mongodb.connection.BsonWriterHelper.createMessageSettingsBuilder(MessageSettings)",1,1,1
"com.mongodb.connection.BsonWriterHelper.exceedsLimits(MessageSettings,int,int,int)",4,3,4
"com.mongodb.connection.BsonWriterHelper.getCodec(BsonValue)",1,1,1
"com.mongodb.connection.BsonWriterHelper.getDocumentMessageSettings(MessageSettings)",1,1,1
"com.mongodb.connection.BsonWriterHelper.getPayloadMessageSettings(Type,MessageSettings)",1,2,2
"com.mongodb.connection.BsonWriterHelper.writeDocument(BsonWriter,BsonOutput,MessageSettings,BsonDocument,int,int)",2,2,2
"com.mongodb.connection.BsonWriterHelper.writeElements(BsonWriter,List<BsonElement>)",1,2,2
"com.mongodb.connection.BsonWriterHelper.writePayload(BsonWriter,BsonOutput,MessageSettings,int,SplittablePayload)",4,4,4
"com.mongodb.connection.BsonWriterHelper.writePayloadArray(BsonWriter,BsonOutput,MessageSettings,int,SplittablePayload)",1,1,1
"com.mongodb.connection.BulkWriteBatchCombiner.BulkWriteBatchCombiner(ServerAddress,boolean,WriteConcern)",1,1,1
"com.mongodb.connection.BulkWriteBatchCombiner.addErrorResult(List<BulkWriteError>,WriteConcernError,IndexMap)",1,1,1
"com.mongodb.connection.BulkWriteBatchCombiner.addErrorResult(MongoBulkWriteException,IndexMap)",1,1,1
"com.mongodb.connection.BulkWriteBatchCombiner.addResult(BulkWriteResult,IndexMap)",1,3,3
"com.mongodb.connection.BulkWriteBatchCombiner.addWriteConcernErrorResult(WriteConcernError)",1,1,1
"com.mongodb.connection.BulkWriteBatchCombiner.addWriteErrorResult(BulkWriteError,IndexMap)",1,1,1
"com.mongodb.connection.BulkWriteBatchCombiner.createResult()",1,2,2
"com.mongodb.connection.BulkWriteBatchCombiner.getError()",1,3,3
"com.mongodb.connection.BulkWriteBatchCombiner.getResult()",1,1,1
"com.mongodb.connection.BulkWriteBatchCombiner.hasErrors()",1,2,2
"com.mongodb.connection.BulkWriteBatchCombiner.hasWriteConcernErrors()",1,1,1
"com.mongodb.connection.BulkWriteBatchCombiner.hasWriteErrors()",1,1,1
"com.mongodb.connection.BulkWriteBatchCombiner.mergeUpserts(List<BulkWriteUpsert>,IndexMap)",1,2,2
"com.mongodb.connection.BulkWriteBatchCombiner.mergeWriteConcernError(WriteConcernError)",1,4,4
"com.mongodb.connection.BulkWriteBatchCombiner.mergeWriteErrors(List<BulkWriteError>,IndexMap)",1,2,2
"com.mongodb.connection.BulkWriteBatchCombiner.shouldStopSendingMoreBatches()",1,2,2
"com.mongodb.connection.BulkWriteBatchCombiner.throwOnError()",2,2,2
"com.mongodb.connection.ByteBufBsonDocument.ByteBufBsonDocument(ByteBuf)",1,1,1
"com.mongodb.connection.ByteBufBsonDocument.clone()",1,1,1
"com.mongodb.connection.ByteBufBsonDocument.create(ByteBufferBsonOutput,int)",1,3,3
"com.mongodb.connection.ByteBufBsonDocument.create(ResponseBuffers)",1,2,2
"com.mongodb.connection.ByteBufBsonDocument.createOne(ByteBufferBsonOutput,int)",1,1,1
"com.mongodb.connection.ByteBufBsonDocument.findInDocument(Finder<T>)",3,2,3
"com.mongodb.connection.ByteBufBsonDocument.readObject(ObjectInputStream)",1,1,1
"com.mongodb.connection.ByteBufBsonDocument.toBsonDocument()",1,1,1
"com.mongodb.connection.ByteBufBsonDocument.toJson()",1,1,1
"com.mongodb.connection.ByteBufBsonDocument.toJson(JsonWriterSettings)",1,1,1
"com.mongodb.connection.ByteBufPayloadBsonDocument.ByteBufPayloadBsonDocument(ByteBufBsonDocument,String,List<ByteBufBsonDocument>)",1,1,1
"com.mongodb.connection.ByteBufPayloadBsonDocument.clone()",1,1,1
"com.mongodb.connection.ByteBufPayloadBsonDocument.create(ByteBufferBsonOutput,int)",2,2,3
"com.mongodb.connection.ByteBufPayloadBsonDocument.createByteBufBsonDocument(CompositeByteBuf)",1,1,1
"com.mongodb.connection.ByteBufPayloadBsonDocument.createPayload(CompositeByteBuf)",1,2,2
"com.mongodb.connection.ByteBufPayloadBsonDocument.findInDocument(Finder<T>)",3,2,3
"com.mongodb.connection.ByteBufPayloadBsonDocument.readObject(ObjectInputStream)",1,1,1
"com.mongodb.connection.ByteBufPayloadBsonDocument.toBsonDocument()",1,2,2
"com.mongodb.connection.ByteBufPayloadBsonDocument.validatePayloadAndGetName(CompositeByteBuf)",3,2,4
"com.mongodb.connection.ByteBufferBsonOutput.BufferPositionPair.BufferPositionPair(int,int)",1,1,1
"com.mongodb.connection.ByteBufferBsonOutput.ByteBufferBsonOutput(BufferProvider)",1,1,1
"com.mongodb.connection.ByteBufferBsonOutput.close()",1,2,2
"com.mongodb.connection.ByteBufferBsonOutput.ensureOpen()",2,1,2
"com.mongodb.connection.ByteBufferBsonOutput.getBufferPositionPair(int)",1,2,2
"com.mongodb.connection.ByteBufferBsonOutput.getByteBufferAtIndex(int)",1,3,3
"com.mongodb.connection.ByteBufferBsonOutput.getByteBuffers()",1,2,2
"com.mongodb.connection.ByteBufferBsonOutput.getCurrentByteBuffer()",2,1,2
"com.mongodb.connection.ByteBufferBsonOutput.getPosition()",1,1,1
"com.mongodb.connection.ByteBufferBsonOutput.getSize()",1,1,1
"com.mongodb.connection.ByteBufferBsonOutput.pipe(OutputStream)",1,3,3
"com.mongodb.connection.ByteBufferBsonOutput.truncateToPosition(int)",2,2,4
"com.mongodb.connection.ByteBufferBsonOutput.write(int,int)",3,3,3
"com.mongodb.connection.ByteBufferBsonOutput.writeByte(int)",1,1,1
"com.mongodb.connection.ByteBufferBsonOutput.writeBytes(byte[],int,int)",1,2,2
"com.mongodb.connection.ChangeEvent.ChangeEvent(T,T)",1,1,1
"com.mongodb.connection.ChangeEvent.equals(Object)",5,3,7
"com.mongodb.connection.ChangeEvent.getNewValue()",1,1,1
"com.mongodb.connection.ChangeEvent.getPreviousValue()",1,1,1
"com.mongodb.connection.ChangeEvent.hashCode()",1,2,2
"com.mongodb.connection.ChangeEvent.toString()",1,1,1
"com.mongodb.connection.ClientMetadataHelper.ClientMetadataHelper()",1,1,1
"com.mongodb.connection.ClientMetadataHelper.addDriverInformation(MongoDriverInformation,BsonDocument)",1,1,1
"com.mongodb.connection.ClientMetadataHelper.clientMetadataDocumentTooLarge(BsonDocument)",1,1,1
"com.mongodb.connection.ClientMetadataHelper.createClientMetadataDocument(String)",1,1,1
"com.mongodb.connection.ClientMetadataHelper.createClientMetadataDocument(String,MongoDriverInformation)",1,1,1
"com.mongodb.connection.ClientMetadataHelper.createClientMetadataDocument(String,MongoDriverInformation,BsonDocument)",1,9,10
"com.mongodb.connection.ClientMetadataHelper.getCodeSourcePath()",1,4,4
"com.mongodb.connection.ClientMetadataHelper.getDriverInformation(MongoDriverInformation)",1,2,2
"com.mongodb.connection.ClientMetadataHelper.getDriverVersion()",1,3,6
"com.mongodb.connection.ClientMetadataHelper.getOperatingSystemType(String)",5,4,5
"com.mongodb.connection.ClientMetadataHelper.listToBsonString(List<String>)",1,3,3
"com.mongodb.connection.ClientMetadataHelper.nameMatches(String,String...)",3,2,3
"com.mongodb.connection.ClusterClock.advance(BsonDocument)",1,1,1
"com.mongodb.connection.ClusterClock.getCurrent()",1,1,1
"com.mongodb.connection.ClusterClock.greaterOf(BsonDocument)",3,3,4
"com.mongodb.connection.ClusterClockAdvancingSessionContext.ClusterClockAdvancingSessionContext(SessionContext,ClusterClock)",1,1,1
"com.mongodb.connection.ClusterClockAdvancingSessionContext.advanceClusterTime(BsonDocument)",1,1,1
"com.mongodb.connection.ClusterClockAdvancingSessionContext.advanceOperationTime(BsonTimestamp)",1,1,1
"com.mongodb.connection.ClusterClockAdvancingSessionContext.advanceTransactionNumber()",1,1,1
"com.mongodb.connection.ClusterClockAdvancingSessionContext.getClusterTime()",1,1,1
"com.mongodb.connection.ClusterClockAdvancingSessionContext.getOperationTime()",1,1,1
"com.mongodb.connection.ClusterClockAdvancingSessionContext.getSessionId()",1,1,1
"com.mongodb.connection.ClusterClockAdvancingSessionContext.hasSession()",1,1,1
"com.mongodb.connection.ClusterClockAdvancingSessionContext.isCausallyConsistent()",1,1,1
"com.mongodb.connection.ClusterDescription.ClusterDescription(ClusterConnectionMode,ClusterType,List<ServerDescription>)",1,1,1
"com.mongodb.connection.ClusterDescription.ClusterDescription(ClusterConnectionMode,ClusterType,List<ServerDescription>,ClusterSettings,ServerSettings)",1,1,1
"com.mongodb.connection.ClusterDescription.equals(Object)",7,2,8
"com.mongodb.connection.ClusterDescription.getAll()",2,1,4
"com.mongodb.connection.ClusterDescription.getAny()",1,1,1
"com.mongodb.connection.ClusterDescription.getAnyPrimaryOrSecondary()",1,2,2
"com.mongodb.connection.ClusterDescription.getAnyPrimaryOrSecondary(TagSet)",1,3,3
"com.mongodb.connection.ClusterDescription.getByServerAddress(ServerAddress)",3,3,4
"com.mongodb.connection.ClusterDescription.getClusterSettings()",1,1,1
"com.mongodb.connection.ClusterDescription.getConnectionMode()",1,1,1
"com.mongodb.connection.ClusterDescription.getLogicalSessionTimeoutMinutes()",3,3,4
"com.mongodb.connection.ClusterDescription.getPrimaries()",1,1,1
"com.mongodb.connection.ClusterDescription.getSecondaries()",1,1,1
"com.mongodb.connection.ClusterDescription.getSecondaries(TagSet)",1,2,2
"com.mongodb.connection.ClusterDescription.getServerDescriptions()",1,1,1
"com.mongodb.connection.ClusterDescription.getServerSettings()",1,1,1
"com.mongodb.connection.ClusterDescription.getServersByPredicate(Predicate)",1,3,3
"com.mongodb.connection.ClusterDescription.getShortDescription()",1,2,2
"com.mongodb.connection.ClusterDescription.getType()",1,1,1
"com.mongodb.connection.ClusterDescription.hasReadableServer(ReadPreference)",1,1,1
"com.mongodb.connection.ClusterDescription.hasWritableServer()",1,1,1
"com.mongodb.connection.ClusterDescription.hashCode()",1,1,1
"com.mongodb.connection.ClusterDescription.isCompatibleWithDriver()",3,2,3
"com.mongodb.connection.ClusterDescription.toString()",1,1,1
"com.mongodb.connection.ClusterId.ClusterId()",1,1,1
"com.mongodb.connection.ClusterId.ClusterId(String)",1,1,1
"com.mongodb.connection.ClusterId.ClusterId(String,String)",1,1,1
"com.mongodb.connection.ClusterId.equals(Object)",5,3,7
"com.mongodb.connection.ClusterId.getDescription()",1,1,1
"com.mongodb.connection.ClusterId.getValue()",1,1,1
"com.mongodb.connection.ClusterId.hashCode()",1,2,2
"com.mongodb.connection.ClusterId.toString()",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.Builder()",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.Builder(ClusterSettings)",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.addClusterListener(ClusterListener)",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.applyConnectionString(ConnectionString)",1,7,7
"com.mongodb.connection.ClusterSettings.Builder.build()",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.description(String)",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.hosts(List<ServerAddress>)",2,2,3
"com.mongodb.connection.ClusterSettings.Builder.maxWaitQueueSize(int)",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.mode(ClusterConnectionMode)",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.requiredClusterType(ClusterType)",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.requiredReplicaSetName(String)",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.serverSelectionTimeout(long,TimeUnit)",1,1,1
"com.mongodb.connection.ClusterSettings.Builder.serverSelector(ServerSelector)",1,1,1
"com.mongodb.connection.ClusterSettings.ClusterSettings(Builder)",6,3,8
"com.mongodb.connection.ClusterSettings.builder()",1,1,1
"com.mongodb.connection.ClusterSettings.builder(ClusterSettings)",1,1,1
"com.mongodb.connection.ClusterSettings.equals(Object)",12,5,16
"com.mongodb.connection.ClusterSettings.getClusterListeners()",1,1,1
"com.mongodb.connection.ClusterSettings.getDescription()",1,1,1
"com.mongodb.connection.ClusterSettings.getHosts()",1,1,1
"com.mongodb.connection.ClusterSettings.getMaxWaitQueueSize()",1,1,1
"com.mongodb.connection.ClusterSettings.getMode()",1,1,1
"com.mongodb.connection.ClusterSettings.getRequiredClusterType()",1,1,1
"com.mongodb.connection.ClusterSettings.getRequiredReplicaSetName()",1,1,1
"com.mongodb.connection.ClusterSettings.getServerSelectionTimeout(TimeUnit)",1,1,1
"com.mongodb.connection.ClusterSettings.getServerSelector()",1,1,1
"com.mongodb.connection.ClusterSettings.getShortDescription()",1,1,3
"com.mongodb.connection.ClusterSettings.hashCode()",1,4,4
"com.mongodb.connection.ClusterSettings.toString()",1,1,1
"com.mongodb.connection.CommandHelper.CommandHelper()",1,1,1
"com.mongodb.connection.CommandHelper.executeCommand(String,BsonDocument,ClusterClock,InternalConnection)",1,1,1
"com.mongodb.connection.CommandHelper.executeCommand(String,BsonDocument,InternalConnection)",1,1,1
"com.mongodb.connection.CommandHelper.executeCommandAsync(String,BsonDocument,InternalConnection,SingleResultCallback<BsonDocument>)",1,2,2
"com.mongodb.connection.CommandHelper.executeCommandWithoutCheckingForFailure(String,BsonDocument,InternalConnection)",1,1,2
"com.mongodb.connection.CommandHelper.getCommandMessage(String,BsonDocument,InternalConnection)",1,1,1
"com.mongodb.connection.CommandHelper.isCommandOk(BsonDocument)",4,3,4
"com.mongodb.connection.CommandHelper.sendAndReceive(String,BsonDocument,ClusterClock,InternalConnection)",1,1,2
"com.mongodb.connection.CommandMessage.CommandMessage(MongoNamespace,BsonDocument,FieldNameValidator,ReadPreference,MessageSettings)",1,1,1
"com.mongodb.connection.CommandMessage.CommandMessage(MongoNamespace,BsonDocument,FieldNameValidator,ReadPreference,MessageSettings,boolean,SplittablePayload,FieldNameValidator)",1,1,1
"com.mongodb.connection.CommandMessage.addDocumentWithPayload(BsonOutput)",1,2,2
"com.mongodb.connection.CommandMessage.calculateIsResponseExpected()",2,4,5
"com.mongodb.connection.CommandMessage.containsPayload()",1,1,1
"com.mongodb.connection.CommandMessage.encodeMessageBodyWithMetadata(BsonOutput,SessionContext)",1,4,4
"com.mongodb.connection.CommandMessage.getCommandToEncode()",1,3,3
"com.mongodb.connection.CommandMessage.getExtraElements(SessionContext)",1,4,4
"com.mongodb.connection.CommandMessage.getFlagBits()",2,1,2
"com.mongodb.connection.CommandMessage.getOpCode(MessageSettings)",1,1,2
"com.mongodb.connection.CommandMessage.getPayloadArrayFieldNameValidator()",1,1,1
"com.mongodb.connection.CommandMessage.getReadPreference()",1,1,1
"com.mongodb.connection.CommandMessage.isDefaultReadPreference(ReadPreference)",1,1,1
"com.mongodb.connection.CommandMessage.isResponseExpected()",1,1,1
"com.mongodb.connection.CommandMessage.isServerVersionAtLeastThreeDotSix(MessageSettings)",1,1,1
"com.mongodb.connection.CommandMessage.useOpMsg()",1,1,1
"com.mongodb.connection.CommandProtocolImpl.CommandProtocolImpl(String,BsonDocument,FieldNameValidator,ReadPreference,Decoder<T>)",1,1,1
"com.mongodb.connection.CommandProtocolImpl.CommandProtocolImpl(String,BsonDocument,FieldNameValidator,ReadPreference,Decoder<T>,boolean,SplittablePayload,FieldNameValidator)",1,1,2
"com.mongodb.connection.CommandProtocolImpl.execute(InternalConnection)",1,2,2
"com.mongodb.connection.CommandProtocolImpl.executeAsync(InternalConnection,SingleResultCallback<T>)",1,4,4
"com.mongodb.connection.CommandProtocolImpl.getCommandMessage(InternalConnection)",1,1,1
"com.mongodb.connection.CommandProtocolImpl.getCommandName()",1,1,1
"com.mongodb.connection.CommandProtocolImpl.sessionContext(SessionContext)",1,1,1
"com.mongodb.connection.CommandResultBaseCallback.CommandResultBaseCallback(Decoder<T>,long,ServerAddress)",1,1,1
"com.mongodb.connection.CommandResultBaseCallback.callCallback(ResponseBuffers,Throwable)",1,4,5
"com.mongodb.connection.CommandResultCallback.CommandResultCallback(SingleResultCallback<T>,Decoder<T>,long,ServerAddress)",1,1,1
"com.mongodb.connection.CommandResultCallback.callCallback(BsonDocument,Throwable)",1,5,5
"com.mongodb.connection.CompositeByteBuf.Component.Component(ByteBuf,int)",1,1,1
"com.mongodb.connection.CompositeByteBuf.CompositeByteBuf(CompositeByteBuf)",1,1,1
"com.mongodb.connection.CompositeByteBuf.CompositeByteBuf(List<ByteBuf>)",1,2,2
"com.mongodb.connection.CompositeByteBuf.array()",1,1,1
"com.mongodb.connection.CompositeByteBuf.asNIO()",2,2,2
"com.mongodb.connection.CompositeByteBuf.asReadOnly()",1,1,1
"com.mongodb.connection.CompositeByteBuf.capacity()",1,1,1
"com.mongodb.connection.CompositeByteBuf.checkDstIndex(int,int,int,int)",2,2,3
"com.mongodb.connection.CompositeByteBuf.checkIndex(int)",2,3,3
"com.mongodb.connection.CompositeByteBuf.checkIndex(int,int)",2,3,3
"com.mongodb.connection.CompositeByteBuf.clear()",1,1,1
"com.mongodb.connection.CompositeByteBuf.duplicate()",1,1,1
"com.mongodb.connection.CompositeByteBuf.ensureAccessible()",2,1,2
"com.mongodb.connection.CompositeByteBuf.findComponent(int)",1,1,1
"com.mongodb.connection.CompositeByteBuf.findComponentIndex(int)",3,2,3
"com.mongodb.connection.CompositeByteBuf.flip()",1,1,1
"com.mongodb.connection.CompositeByteBuf.get()",1,1,1
"com.mongodb.connection.CompositeByteBuf.get(byte[])",1,1,1
"com.mongodb.connection.CompositeByteBuf.get(byte[],int,int)",1,1,1
"com.mongodb.connection.CompositeByteBuf.get(int)",1,1,1
"com.mongodb.connection.CompositeByteBuf.get(int,byte[])",1,1,1
"com.mongodb.connection.CompositeByteBuf.get(int,byte[],int,int)",1,2,2
"com.mongodb.connection.CompositeByteBuf.getDouble()",1,1,1
"com.mongodb.connection.CompositeByteBuf.getDouble(int)",1,1,1
"com.mongodb.connection.CompositeByteBuf.getInt()",1,1,1
"com.mongodb.connection.CompositeByteBuf.getInt(int)",2,2,2
"com.mongodb.connection.CompositeByteBuf.getLong()",1,1,1
"com.mongodb.connection.CompositeByteBuf.getLong(int)",2,2,2
"com.mongodb.connection.CompositeByteBuf.getReferenceCount()",1,1,1
"com.mongodb.connection.CompositeByteBuf.getShort(int)",1,1,1
"com.mongodb.connection.CompositeByteBuf.hasRemaining()",1,1,1
"com.mongodb.connection.CompositeByteBuf.limit()",1,1,1
"com.mongodb.connection.CompositeByteBuf.limit(int)",2,3,3
"com.mongodb.connection.CompositeByteBuf.order(ByteOrder)",2,2,2
"com.mongodb.connection.CompositeByteBuf.position()",1,1,1
"com.mongodb.connection.CompositeByteBuf.position(int)",2,2,3
"com.mongodb.connection.CompositeByteBuf.put(byte)",1,1,1
"com.mongodb.connection.CompositeByteBuf.put(byte[],int,int)",1,1,1
"com.mongodb.connection.CompositeByteBuf.put(int,byte)",1,1,1
"com.mongodb.connection.CompositeByteBuf.release()",2,2,2
"com.mongodb.connection.CompositeByteBuf.remaining()",1,1,1
"com.mongodb.connection.CompositeByteBuf.retain()",2,2,2
"com.mongodb.connection.CompressedHeader.CompressedHeader(ByteBuf,MessageHeader)",3,3,3
"com.mongodb.connection.CompressedHeader.getCompressedSize()",1,1,1
"com.mongodb.connection.CompressedHeader.getCompressorId()",1,1,1
"com.mongodb.connection.CompressedHeader.getMessageHeader()",1,1,1
"com.mongodb.connection.CompressedHeader.getOriginalOpcode()",1,1,1
"com.mongodb.connection.CompressedHeader.getUncompressedSize()",1,1,1
"com.mongodb.connection.CompressedMessage.CompressedMessage(OpCode,List<ByteBuf>,Compressor,MessageSettings)",1,1,1
"com.mongodb.connection.CompressedMessage.encodeMessageBodyWithMetadata(BsonOutput,SessionContext)",1,1,1
"com.mongodb.connection.CompressedMessage.getFirstWrappedMessageBuffer(List<ByteBuf>)",1,1,1
"com.mongodb.connection.CompressedMessage.getWrappedMessageRequestId(List<ByteBuf>)",1,1,1
"com.mongodb.connection.CompressedMessage.getWrappedMessageSize(List<ByteBuf>)",1,1,1
"com.mongodb.connection.Compressor.BufferExposingByteArrayOutputStream.BufferExposingByteArrayOutputStream(int)",1,1,1
"com.mongodb.connection.Compressor.BufferExposingByteArrayOutputStream.getInternalBytes()",1,1,1
"com.mongodb.connection.Compressor.ByteBufInputStream.ByteBufInputStream(ByteBuf)",1,1,1
"com.mongodb.connection.Compressor.ByteBufInputStream.read()",1,1,1
"com.mongodb.connection.Compressor.ByteBufInputStream.read(byte[],int,int)",2,2,3
"com.mongodb.connection.Compressor.compress(List<ByteBuf>,BsonOutput)",1,4,6
"com.mongodb.connection.Compressor.getInputStream(InputStream)",1,1,1
"com.mongodb.connection.Compressor.getOutputStream(OutputStream)",1,1,1
"com.mongodb.connection.Compressor.uncompress(ByteBuf,ByteBuf)",1,3,5
"com.mongodb.connection.ConnectionDescription.ConnectionDescription(ConnectionId,ServerVersion,ServerType,int,int,int)",1,1,1
"com.mongodb.connection.ConnectionDescription.ConnectionDescription(ConnectionId,ServerVersion,ServerType,int,int,int,List<String>)",1,1,1
"com.mongodb.connection.ConnectionDescription.ConnectionDescription(ServerId)",1,1,1
"com.mongodb.connection.ConnectionDescription.equals(Object)",10,2,11
"com.mongodb.connection.ConnectionDescription.getCompressors()",1,1,1
"com.mongodb.connection.ConnectionDescription.getConnectionId()",1,1,1
"com.mongodb.connection.ConnectionDescription.getDefaultMaxMessageSize()",1,1,1
"com.mongodb.connection.ConnectionDescription.getDefaultMaxWriteBatchSize()",1,1,1
"com.mongodb.connection.ConnectionDescription.getMaxBatchCount()",1,1,1
"com.mongodb.connection.ConnectionDescription.getMaxDocumentSize()",1,1,1
"com.mongodb.connection.ConnectionDescription.getMaxMessageSize()",1,1,1
"com.mongodb.connection.ConnectionDescription.getServerAddress()",1,1,1
"com.mongodb.connection.ConnectionDescription.getServerType()",1,1,1
"com.mongodb.connection.ConnectionDescription.getServerVersion()",1,1,1
"com.mongodb.connection.ConnectionDescription.hashCode()",1,1,1
"com.mongodb.connection.ConnectionDescription.withConnectionId(ConnectionId)",1,1,1
"com.mongodb.connection.ConnectionId.ConnectionId(ServerId)",1,1,1
"com.mongodb.connection.ConnectionId.ConnectionId(ServerId,int,Integer)",1,2,2
"com.mongodb.connection.ConnectionId.equals(Object)",6,3,8
"com.mongodb.connection.ConnectionId.getLocalValue()",1,1,1
"com.mongodb.connection.ConnectionId.getServerId()",1,1,1
"com.mongodb.connection.ConnectionId.getServerValue()",1,1,1
"com.mongodb.connection.ConnectionId.hashCode()",1,2,2
"com.mongodb.connection.ConnectionId.toString()",1,1,1
"com.mongodb.connection.ConnectionId.withServerValue(int)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.Builder()",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.Builder(ConnectionPoolSettings)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.addConnectionPoolListener(ConnectionPoolListener)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.applyConnectionString(ConnectionString)",1,7,7
"com.mongodb.connection.ConnectionPoolSettings.Builder.build()",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.maintenanceFrequency(long,TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.maintenanceInitialDelay(long,TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.maxConnectionIdleTime(long,TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.maxConnectionLifeTime(long,TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.maxSize(int)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.maxWaitQueueSize(int)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.maxWaitTime(long,TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.Builder.minSize(int)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.ConnectionPoolSettings(Builder)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.builder()",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.builder(ConnectionPoolSettings)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.equals(Object)",12,2,13
"com.mongodb.connection.ConnectionPoolSettings.getConnectionPoolListeners()",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.getMaintenanceFrequency(TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.getMaintenanceInitialDelay(TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.getMaxConnectionIdleTime(TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.getMaxConnectionLifeTime(TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.getMaxSize()",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.getMaxWaitQueueSize()",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.getMaxWaitTime(TimeUnit)",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.getMinSize()",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.hashCode()",1,1,1
"com.mongodb.connection.ConnectionPoolSettings.toString()",1,1,1
"com.mongodb.connection.DefaultAuthenticator.DefaultAuthenticator(MongoCredential)",1,1,1
"com.mongodb.connection.DefaultAuthenticator.authenticate(InternalConnection,ConnectionDescription)",1,1,1
"com.mongodb.connection.DefaultAuthenticator.authenticateAsync(InternalConnection,ConnectionDescription,SingleResultCallback<Void>)",1,1,1
"com.mongodb.connection.DefaultAuthenticator.createAuthenticator(ConnectionDescription)",2,2,2
"com.mongodb.connection.DefaultClusterFactory.create(ClusterSettings,ServerSettings,ConnectionPoolSettings,StreamFactory,StreamFactory,List<MongoCredential>,ClusterListener,ConnectionPoolListener,ConnectionListener)",1,1,1
"com.mongodb.connection.DefaultClusterFactory.create(ClusterSettings,ServerSettings,ConnectionPoolSettings,StreamFactory,StreamFactory,List<MongoCredential>,ClusterListener,ConnectionPoolListener,ConnectionListener,CommandListener)",1,1,1
"com.mongodb.connection.DefaultClusterFactory.create(ClusterSettings,ServerSettings,ConnectionPoolSettings,StreamFactory,StreamFactory,List<MongoCredential>,ClusterListener,ConnectionPoolListener,ConnectionListener,CommandListener,String,MongoDriverInformation)",1,1,1
"com.mongodb.connection.DefaultClusterFactory.createCluster(ClusterSettings,ServerSettings,ConnectionPoolSettings,StreamFactory,StreamFactory,List<MongoCredential>,CommandListener,String,MongoDriverInformation)",1,1,1
"com.mongodb.connection.DefaultClusterFactory.createCluster(ClusterSettings,ServerSettings,ConnectionPoolSettings,StreamFactory,StreamFactory,List<MongoCredential>,CommandListener,String,MongoDriverInformation,List<MongoCompressor>)",3,4,4
"com.mongodb.connection.DefaultClusterFactory.getClusterSettings(ClusterSettings,ClusterListener)",1,1,1
"com.mongodb.connection.DefaultClusterFactory.getConnectionPoolSettings(ConnectionPoolSettings,ConnectionPoolListener)",1,1,1
"com.mongodb.connection.DefaultClusterableServerFactory.DefaultClusterableServerFactory(ClusterId,ClusterSettings,ServerSettings,ConnectionPoolSettings,StreamFactory,StreamFactory,List<MongoCredential>,CommandListener,String,MongoDriverInformation,List<MongoCompressor>)",1,1,1
"com.mongodb.connection.DefaultClusterableServerFactory.create(ServerAddress,ServerListener,ClusterClock)",1,1,1
"com.mongodb.connection.DefaultClusterableServerFactory.getSettings()",1,1,1
"com.mongodb.connection.DefaultConnectionFactory.create(InternalConnection,ProtocolExecutor,ClusterConnectionMode)",1,1,1
"com.mongodb.connection.DefaultConnectionFactory.createAsync(InternalConnection,ProtocolExecutor,ClusterConnectionMode)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.DefaultConnectionPool(ServerId,InternalConnectionFactory,ConnectionPoolSettings)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.PooledConnection(UsageTrackingInternalConnection)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.close()",1,5,5
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.getBuffer(int)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.getDescription()",1,1,1
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.isClosed()",1,2,2
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.open()",1,1,1
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.openAsync(SingleResultCallback<Void>)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.opened()",1,1,1
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.receiveMessage(int)",1,2,2
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.receiveMessageAsync(int,SingleResultCallback<ResponseBuffers>)",1,2,2
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.sendAndReceive(CommandMessage,Decoder<T>,SessionContext)",1,2,2
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.sendAndReceiveAsync(CommandMessage,Decoder<T>,SessionContext,SingleResultCallback<T>)",1,2,2
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.sendMessage(List<ByteBuf>,int)",1,2,2
"com.mongodb.connection.DefaultConnectionPool.PooledConnection.sendMessageAsync(List<ByteBuf>,int,SingleResultCallback<Void>)",1,2,2
"com.mongodb.connection.DefaultConnectionPool.UsageTrackingInternalConnectionItemFactory.UsageTrackingInternalConnectionItemFactory(InternalConnectionFactory)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.UsageTrackingInternalConnectionItemFactory.close(UsageTrackingInternalConnection)",1,3,3
"com.mongodb.connection.DefaultConnectionPool.UsageTrackingInternalConnectionItemFactory.create(boolean)",1,2,2
"com.mongodb.connection.DefaultConnectionPool.UsageTrackingInternalConnectionItemFactory.getReasonForClosing(UsageTrackingInternalConnection)",1,4,5
"com.mongodb.connection.DefaultConnectionPool.UsageTrackingInternalConnectionItemFactory.shouldPrune(UsageTrackingInternalConnection)",1,1,2
"com.mongodb.connection.DefaultConnectionPool.close()",1,3,3
"com.mongodb.connection.DefaultConnectionPool.createMaintenanceTask()",1,8,9
"com.mongodb.connection.DefaultConnectionPool.createMaintenanceTimer()",2,2,2
"com.mongodb.connection.DefaultConnectionPool.createTimeoutException()",1,1,1
"com.mongodb.connection.DefaultConnectionPool.createWaitQueueFullException()",1,1,1
"com.mongodb.connection.DefaultConnectionPool.doMaintenance()",1,2,2
"com.mongodb.connection.DefaultConnectionPool.expired(long,long,long)",1,1,2
"com.mongodb.connection.DefaultConnectionPool.fromPreviousGeneration(UsageTrackingInternalConnection)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.get()",1,1,1
"com.mongodb.connection.DefaultConnectionPool.get(long,TimeUnit)",4,5,5
"com.mongodb.connection.DefaultConnectionPool.getAsync(SingleResultCallback<InternalConnection>)",1,9,10
"com.mongodb.connection.DefaultConnectionPool.getAsyncGetter()",1,2,2
"com.mongodb.connection.DefaultConnectionPool.getId(InternalConnection)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.getPool()",1,1,1
"com.mongodb.connection.DefaultConnectionPool.getPooledConnection(long,TimeUnit)",1,3,3
"com.mongodb.connection.DefaultConnectionPool.incrementGenerationOnSocketException(InternalConnection,Throwable)",1,3,4
"com.mongodb.connection.DefaultConnectionPool.invalidate()",1,1,1
"com.mongodb.connection.DefaultConnectionPool.openAsync(PooledConnection,SingleResultCallback<InternalConnection>)",1,7,7
"com.mongodb.connection.DefaultConnectionPool.pastMaxIdleTime(UsageTrackingInternalConnection)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.pastMaxLifeTime(UsageTrackingInternalConnection)",1,1,1
"com.mongodb.connection.DefaultConnectionPool.shouldEnsureMinSize()",1,1,1
"com.mongodb.connection.DefaultConnectionPool.shouldPrune()",1,2,2
"com.mongodb.connection.DefaultConnectionPool.shouldPrune(UsageTrackingInternalConnection)",1,3,3
"com.mongodb.connection.DefaultConnectionPool.shutdownAsyncGetter()",1,2,2
"com.mongodb.connection.DefaultServer.DefaultServer(ServerId,ClusterConnectionMode,ConnectionPool,ConnectionFactory,ServerMonitorFactory,ServerListener,CommandListener,ClusterClock)",1,1,1
"com.mongodb.connection.DefaultServer.DefaultServerProtocolExecutor.execute(CommandProtocol<T>,InternalConnection,SessionContext)",1,2,2
"com.mongodb.connection.DefaultServer.DefaultServerProtocolExecutor.execute(LegacyProtocol<T>,InternalConnection)",1,2,2
"com.mongodb.connection.DefaultServer.DefaultServerProtocolExecutor.executeAsync(CommandProtocol<T>,InternalConnection,SessionContext,SingleResultCallback<T>)",1,2,2
"com.mongodb.connection.DefaultServer.DefaultServerProtocolExecutor.executeAsync(LegacyProtocol<T>,InternalConnection,SingleResultCallback<T>)",1,2,2
"com.mongodb.connection.DefaultServer.DefaultServerStateListener.stateChanged(ChangeEvent<ServerDescription>)",1,1,1
"com.mongodb.connection.DefaultServer.close()",1,2,2
"com.mongodb.connection.DefaultServer.connect()",1,1,1
"com.mongodb.connection.DefaultServer.getConnection()",1,2,2
"com.mongodb.connection.DefaultServer.getConnectionAsync(SingleResultCallback<AsyncConnection>)",1,3,3
"com.mongodb.connection.DefaultServer.getConnectionPool()",1,1,1
"com.mongodb.connection.DefaultServer.getDescription()",1,1,1
"com.mongodb.connection.DefaultServer.handleThrowable(Throwable)",1,2,5
"com.mongodb.connection.DefaultServer.invalidate()",1,1,1
"com.mongodb.connection.DefaultServer.isClosed()",1,1,1
"com.mongodb.connection.DefaultServerConnection.DefaultServerConnection(InternalConnection,ProtocolExecutor,ClusterConnectionMode)",1,1,1
"com.mongodb.connection.DefaultServerConnection.command(String,BsonDocument,FieldNameValidator,ReadPreference,Decoder<T>,SessionContext)",1,1,1
"com.mongodb.connection.DefaultServerConnection.command(String,BsonDocument,FieldNameValidator,ReadPreference,Decoder<T>,SessionContext,boolean,SplittablePayload,FieldNameValidator)",1,1,1
"com.mongodb.connection.DefaultServerConnection.command(String,BsonDocument,boolean,FieldNameValidator,Decoder<T>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.commandAsync(String,BsonDocument,FieldNameValidator,ReadPreference,Decoder<T>,SessionContext,SingleResultCallback<T>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.commandAsync(String,BsonDocument,FieldNameValidator,ReadPreference,Decoder<T>,SessionContext,boolean,SplittablePayload,FieldNameValidator,SingleResultCallback<T>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.commandAsync(String,BsonDocument,boolean,FieldNameValidator,Decoder<T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.delete(MongoNamespace,boolean,DeleteRequest)",1,1,1
"com.mongodb.connection.DefaultServerConnection.deleteAsync(MongoNamespace,boolean,DeleteRequest,SingleResultCallback<WriteConcernResult>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.executeProtocol(CommandProtocol<T>,SessionContext)",1,1,1
"com.mongodb.connection.DefaultServerConnection.executeProtocol(LegacyProtocol<T>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.executeProtocolAsync(CommandProtocol<T>,SessionContext,SingleResultCallback<T>)",1,2,2
"com.mongodb.connection.DefaultServerConnection.executeProtocolAsync(LegacyProtocol<T>,SingleResultCallback<T>)",1,2,2
"com.mongodb.connection.DefaultServerConnection.getDescription()",1,1,1
"com.mongodb.connection.DefaultServerConnection.getMore(MongoNamespace,long,int,Decoder<T>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.getMoreAsync(MongoNamespace,long,int,Decoder<T>,SingleResultCallback<QueryResult<T>>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.getReadPreferenceFromSlaveOk(boolean)",1,2,2
"com.mongodb.connection.DefaultServerConnection.getSlaveOk(boolean)",1,3,3
"com.mongodb.connection.DefaultServerConnection.insert(MongoNamespace,boolean,InsertRequest)",1,1,1
"com.mongodb.connection.DefaultServerConnection.insertAsync(MongoNamespace,boolean,InsertRequest,SingleResultCallback<WriteConcernResult>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.killCursor(List<Long>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.killCursor(MongoNamespace,List<Long>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.killCursorAsync(List<Long>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.killCursorAsync(MongoNamespace,List<Long>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.query(MongoNamespace,BsonDocument,BsonDocument,int,int,boolean,boolean,boolean,boolean,boolean,boolean,Decoder<T>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.query(MongoNamespace,BsonDocument,BsonDocument,int,int,int,boolean,boolean,boolean,boolean,boolean,boolean,Decoder<T>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.queryAsync(MongoNamespace,BsonDocument,BsonDocument,int,int,boolean,boolean,boolean,boolean,boolean,boolean,Decoder<T>,SingleResultCallback<QueryResult<T>>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.queryAsync(MongoNamespace,BsonDocument,BsonDocument,int,int,int,boolean,boolean,boolean,boolean,boolean,boolean,Decoder<T>,SingleResultCallback<QueryResult<T>>)",1,1,1
"com.mongodb.connection.DefaultServerConnection.release()",1,2,2
"com.mongodb.connection.DefaultServerConnection.retain()",1,1,1
"com.mongodb.connection.DefaultServerConnection.update(MongoNamespace,boolean,UpdateRequest)",1,1,1
"com.mongodb.connection.DefaultServerConnection.updateAsync(MongoNamespace,boolean,UpdateRequest,SingleResultCallback<WriteConcernResult>)",1,1,1
"com.mongodb.connection.DefaultServerMonitor.DefaultServerMonitor(ServerId,ServerSettings,ClusterClock,ChangeListener<ServerDescription>,InternalConnectionFactory,ConnectionPool)",1,1,1
"com.mongodb.connection.DefaultServerMonitor.ServerMonitorRunnable.getConnectingServerDescription(Throwable)",1,1,1
"com.mongodb.connection.DefaultServerMonitor.ServerMonitorRunnable.logStateChange(ServerDescription,ServerDescription)",1,3,3
"com.mongodb.connection.DefaultServerMonitor.ServerMonitorRunnable.lookupServerDescription(InternalConnection)",1,3,3
"com.mongodb.connection.DefaultServerMonitor.ServerMonitorRunnable.run()",3,9,11
"com.mongodb.connection.DefaultServerMonitor.ServerMonitorRunnable.waitForNext()",1,4,5
"com.mongodb.connection.DefaultServerMonitor.ServerMonitorRunnable.waitForSignalOrTimeout()",1,1,1
"com.mongodb.connection.DefaultServerMonitor.close()",1,1,1
"com.mongodb.connection.DefaultServerMonitor.connect()",1,1,1
"com.mongodb.connection.DefaultServerMonitor.shouldLogStageChange(ServerDescription,ServerDescription)",17,12,28
"com.mongodb.connection.DefaultServerMonitor.start()",1,1,1
"com.mongodb.connection.DefaultServerMonitorFactory.DefaultServerMonitorFactory(ServerId,ServerSettings,ClusterClock,InternalConnectionFactory,ConnectionPool)",1,1,1
"com.mongodb.connection.DefaultServerMonitorFactory.create(ChangeListener<ServerDescription>)",1,1,1
"com.mongodb.connection.DeleteMessage.DeleteMessage(String,DeleteRequest,MessageSettings)",1,1,1
"com.mongodb.connection.DeleteMessage.encodeMessageBodyWithMetadata(BsonOutput)",1,2,2
"com.mongodb.connection.DeleteProtocol.DeleteProtocol(MongoNamespace,boolean,DeleteRequest)",1,1,1
"com.mongodb.connection.DeleteProtocol.createRequestMessage(MessageSettings)",1,1,1
"com.mongodb.connection.DeleteProtocol.execute(InternalConnection)",1,2,2
"com.mongodb.connection.DeleteProtocol.executeAsync(InternalConnection,SingleResultCallback<WriteConcernResult>)",1,4,4
"com.mongodb.connection.DeleteProtocol.getAsWriteCommand(ByteBufferBsonOutput,int)",1,1,2
"com.mongodb.connection.DeleteProtocol.getLogger()",1,1,1
"com.mongodb.connection.DescriptionHelper.DescriptionHelper()",1,1,1
"com.mongodb.connection.DescriptionHelper.createConnectionDescription(ConnectionId,BsonDocument,BsonDocument)",1,1,1
"com.mongodb.connection.DescriptionHelper.createServerDescription(ServerAddress,BsonDocument,ServerVersion,long)",1,2,2
"com.mongodb.connection.DescriptionHelper.getCompressors(BsonDocument)",1,2,2
"com.mongodb.connection.DescriptionHelper.getElectionId(BsonDocument)",1,2,2
"com.mongodb.connection.DescriptionHelper.getLastWriteDate(BsonDocument)",2,1,2
"com.mongodb.connection.DescriptionHelper.getLogicalSessionTimeoutMinutes(BsonDocument)",1,2,2
"com.mongodb.connection.DescriptionHelper.getMaxBsonObjectSize(BsonDocument)",1,1,1
"com.mongodb.connection.DescriptionHelper.getMaxMessageSizeBytes(BsonDocument)",1,1,1
"com.mongodb.connection.DescriptionHelper.getMaxWriteBatchSize(BsonDocument)",1,1,1
"com.mongodb.connection.DescriptionHelper.getServerType(BsonDocument)",9,4,11
"com.mongodb.connection.DescriptionHelper.getSetVersion(BsonDocument)",1,2,2
"com.mongodb.connection.DescriptionHelper.getString(BsonDocument,String)",2,2,2
"com.mongodb.connection.DescriptionHelper.getTagSetFromDocument(BsonDocument)",1,2,2
"com.mongodb.connection.DescriptionHelper.getVersion(BsonDocument)",1,1,1
"com.mongodb.connection.DescriptionHelper.isReplicaSetMember(BsonDocument)",1,2,2
"com.mongodb.connection.DescriptionHelper.listToSet(BsonArray)",2,4,4
"com.mongodb.connection.ElementExtendingBsonWriter.ElementExtendingBsonWriter(BsonWriter,List<BsonElement>)",1,1,1
"com.mongodb.connection.ElementExtendingBsonWriter.writeEndDocument()",1,2,2
"com.mongodb.connection.ExponentiallyWeightedMovingAverage.ExponentiallyWeightedMovingAverage(double)",1,1,2
"com.mongodb.connection.ExponentiallyWeightedMovingAverage.addSample(long)",1,1,2
"com.mongodb.connection.ExponentiallyWeightedMovingAverage.getAverage()",1,1,2
"com.mongodb.connection.ExponentiallyWeightedMovingAverage.reset()",1,1,1
"com.mongodb.connection.FutureAsyncCompletionHandler.completed(T)",1,1,1
"com.mongodb.connection.FutureAsyncCompletionHandler.failed(Throwable)",1,1,1
"com.mongodb.connection.FutureAsyncCompletionHandler.get(String)",4,1,5
"com.mongodb.connection.FutureAsyncCompletionHandler.getOpen()",1,1,1
"com.mongodb.connection.FutureAsyncCompletionHandler.getRead()",1,1,1
"com.mongodb.connection.FutureAsyncCompletionHandler.getWrite()",1,1,1
"com.mongodb.connection.GSSAPIAuthenticator.GSSAPIAuthenticator(MongoCredential)",2,2,2
"com.mongodb.connection.GSSAPIAuthenticator.createSaslClient(ServerAddress)",2,3,6
"com.mongodb.connection.GSSAPIAuthenticator.getGSSCredential(String)",1,1,1
"com.mongodb.connection.GSSAPIAuthenticator.getHostName(ServerAddress)",1,2,2
"com.mongodb.connection.GSSAPIAuthenticator.getMechanismName()",1,1,1
"com.mongodb.connection.GetMoreMessage.GetMoreMessage(String,long,int)",1,1,1
"com.mongodb.connection.GetMoreMessage.encodeMessageBodyWithMetadata(BsonOutput)",1,1,1
"com.mongodb.connection.GetMoreMessage.getCursorId()",1,1,1
"com.mongodb.connection.GetMoreMessage.writeGetMore(BsonOutput)",1,1,1
"com.mongodb.connection.GetMoreProtocol.GetMoreProtocol(MongoNamespace,long,int,Decoder<T>)",1,1,1
"com.mongodb.connection.GetMoreProtocol.GetMoreResultCallback.GetMoreResultCallback(SingleResultCallback<QueryResult<T>>,long,GetMoreMessage,ConnectionDescription,CommandListener,long)",1,1,1
"com.mongodb.connection.GetMoreProtocol.GetMoreResultCallback.callCallback(ResponseBuffers,Throwable)",4,10,10
"com.mongodb.connection.GetMoreProtocol.asGetMoreCommandDocument()",1,1,1
"com.mongodb.connection.GetMoreProtocol.asGetMoreCommandResponseDocument(QueryResult<T>,ResponseBuffers)",1,3,3
"com.mongodb.connection.GetMoreProtocol.execute(InternalConnection)",3,7,7
"com.mongodb.connection.GetMoreProtocol.executeAsync(InternalConnection,SingleResultCallback<QueryResult<T>>)",1,5,5
"com.mongodb.connection.GetMoreProtocol.sendMessage(GetMoreMessage,InternalConnection)",1,2,2
"com.mongodb.connection.GetMoreProtocol.setCommandListener(CommandListener)",1,1,1
"com.mongodb.connection.InsertMessage.InsertMessage(String,InsertRequest,MessageSettings)",1,1,1
"com.mongodb.connection.InsertMessage.encodeMessageBodyWithMetadata(BsonOutput)",1,1,1
"com.mongodb.connection.InsertMessage.writeInsertPrologue(BsonOutput)",1,1,1
"com.mongodb.connection.InsertProtocol.InsertProtocol(MongoNamespace,boolean,InsertRequest)",1,1,1
"com.mongodb.connection.InsertProtocol.createRequestMessage(MessageSettings)",1,1,1
"com.mongodb.connection.InsertProtocol.execute(InternalConnection)",1,2,2
"com.mongodb.connection.InsertProtocol.executeAsync(InternalConnection,SingleResultCallback<WriteConcernResult>)",1,4,4
"com.mongodb.connection.InsertProtocol.getAsWriteCommand(ByteBufferBsonOutput,int)",1,1,1
"com.mongodb.connection.InsertProtocol.getLogger()",1,1,1
"com.mongodb.connection.InternalStreamConnection.CommandEventSender.CommandEventSender(CommandMessage)",1,1,1
"com.mongodb.connection.InternalStreamConnection.CommandEventSender.getCommandName()",2,1,2
"com.mongodb.connection.InternalStreamConnection.CommandEventSender.sendFailedEvent(Throwable)",1,5,5
"com.mongodb.connection.InternalStreamConnection.CommandEventSender.sendStartedEvent(ByteBufferBsonOutput)",1,5,7
"com.mongodb.connection.InternalStreamConnection.CommandEventSender.sendSucceededEvent(ResponseBuffers)",1,4,4
"com.mongodb.connection.InternalStreamConnection.CommandEventSender.sendSucceededEventForOneWayCommand()",1,3,3
"com.mongodb.connection.InternalStreamConnection.InternalStreamConnection(ServerId,StreamFactory,List<MongoCompressor>,CommandListener,InternalConnectionInitializer)",1,1,1
"com.mongodb.connection.InternalStreamConnection.MessageHeaderCallback.MessageCallback.MessageCallback(MessageHeader)",1,1,1
"com.mongodb.connection.InternalStreamConnection.MessageHeaderCallback.MessageCallback.onResult(ByteBuf,Throwable)",2,4,4
"com.mongodb.connection.InternalStreamConnection.MessageHeaderCallback.MessageHeaderCallback(SingleResultCallback<ResponseBuffers>)",1,1,1
"com.mongodb.connection.InternalStreamConnection.MessageHeaderCallback.onResult(ByteBuf,Throwable)",2,4,4
"com.mongodb.connection.InternalStreamConnection.close()",1,4,4
"com.mongodb.connection.InternalStreamConnection.createCompressor(MongoCompressor)",3,3,3
"com.mongodb.connection.InternalStreamConnection.createCompressorMap(List<MongoCompressor>)",1,2,2
"com.mongodb.connection.InternalStreamConnection.findSendCompressor(ConnectionDescription)",4,2,4
"com.mongodb.connection.InternalStreamConnection.getBuffer(int)",1,1,1
"com.mongodb.connection.InternalStreamConnection.getCompressor(CompressedHeader)",2,2,2
"com.mongodb.connection.InternalStreamConnection.getDescription()",1,1,1
"com.mongodb.connection.InternalStreamConnection.getId()",1,1,1
"com.mongodb.connection.InternalStreamConnection.getResponseDocument(ResponseBuffers,int,Decoder<T>)",1,1,1
"com.mongodb.connection.InternalStreamConnection.getServerAddress()",1,1,1
"com.mongodb.connection.InternalStreamConnection.isClosed()",1,1,1
"com.mongodb.connection.InternalStreamConnection.open()",2,3,3
"com.mongodb.connection.InternalStreamConnection.openAsync(SingleResultCallback<Void>)",1,4,4
"com.mongodb.connection.InternalStreamConnection.opened()",1,1,1
"com.mongodb.connection.InternalStreamConnection.readAsync(int,SingleResultCallback<ByteBuf>)",2,3,3
"com.mongodb.connection.InternalStreamConnection.receiveCommandMessageResponse(CommandMessage,Decoder<T>,CommandEventSender,SessionContext)",2,2,2
"com.mongodb.connection.InternalStreamConnection.receiveMessage(int)",2,3,3
"com.mongodb.connection.InternalStreamConnection.receiveMessageAsync(int,SingleResultCallback<ResponseBuffers>)",2,4,4
"com.mongodb.connection.InternalStreamConnection.receiveResponseBuffers()",2,2,2
"com.mongodb.connection.InternalStreamConnection.sendAndReceive(CommandMessage,Decoder<T>,SessionContext)",2,4,4
"com.mongodb.connection.InternalStreamConnection.sendAndReceiveAsync(CommandMessage,Decoder<T>,SessionContext,SingleResultCallback<T>)",2,5,5
"com.mongodb.connection.InternalStreamConnection.sendCommandMessage(CommandMessage,CommandEventSender,ByteBufferBsonOutput,SessionContext)",1,3,3
"com.mongodb.connection.InternalStreamConnection.sendCommandMessageAsync(int,Decoder<T>,SessionContext,SingleResultCallback<T>,ByteBufferBsonOutput,CommandEventSender,boolean)",3,6,6
"com.mongodb.connection.InternalStreamConnection.sendMessage(List<ByteBuf>,int)",2,3,3
"com.mongodb.connection.InternalStreamConnection.sendMessageAsync(List<ByteBuf>,int,SingleResultCallback<Void>)",2,2,2
"com.mongodb.connection.InternalStreamConnection.translateReadException(Throwable)",8,6,8
"com.mongodb.connection.InternalStreamConnection.translateWriteException(Throwable)",4,3,4
"com.mongodb.connection.InternalStreamConnection.updateSessionContext(SessionContext,ResponseBuffers)",1,1,1
"com.mongodb.connection.InternalStreamConnection.writeAsync(List<ByteBuf>,SingleResultCallback<Void>)",1,1,1
"com.mongodb.connection.InternalStreamConnectionFactory.InternalStreamConnectionFactory(StreamFactory,List<MongoCredential>,String,MongoDriverInformation,List<MongoCompressor>,CommandListener)",1,2,2
"com.mongodb.connection.InternalStreamConnectionFactory.create(ServerId)",1,1,1
"com.mongodb.connection.InternalStreamConnectionFactory.createAuthenticator(MongoCredential)",8,2,8
"com.mongodb.connection.InternalStreamConnectionInitializer.CompoundAuthenticator.CompoundAuthenticator(InternalConnection,ConnectionDescription,SingleResultCallback<Void>)",1,1,1
"com.mongodb.connection.InternalStreamConnectionInitializer.CompoundAuthenticator.authenticateNext()",1,1,1
"com.mongodb.connection.InternalStreamConnectionInitializer.CompoundAuthenticator.completedAuthentication()",1,1,1
"com.mongodb.connection.InternalStreamConnectionInitializer.CompoundAuthenticator.onResult(Void,Throwable)",1,3,3
"com.mongodb.connection.InternalStreamConnectionInitializer.CompoundAuthenticator.start()",1,3,3
"com.mongodb.connection.InternalStreamConnectionInitializer.InternalStreamConnectionInitializer(List<Authenticator>,BsonDocument,List<MongoCompressor>)",1,1,1
"com.mongodb.connection.InternalStreamConnectionInitializer.applyGetLastErrorResult(BsonDocument,ConnectionDescription)",1,2,2
"com.mongodb.connection.InternalStreamConnectionInitializer.authenticateAll(InternalConnection,ConnectionDescription)",1,3,3
"com.mongodb.connection.InternalStreamConnectionInitializer.completeConnectionDescriptionInitialization(InternalConnection,ConnectionDescription)",1,1,1
"com.mongodb.connection.InternalStreamConnectionInitializer.completeConnectionDescriptionInitializationAsync(InternalConnection,ConnectionDescription,SingleResultCallback<ConnectionDescription>)",1,2,2
"com.mongodb.connection.InternalStreamConnectionInitializer.createConnectionDescriptionCallback(InternalConnection,SingleResultCallback<ConnectionDescription>)",1,3,3
"com.mongodb.connection.InternalStreamConnectionInitializer.createIsMasterCommand()",1,4,4
"com.mongodb.connection.InternalStreamConnectionInitializer.initialize(InternalConnection)",1,1,1
"com.mongodb.connection.InternalStreamConnectionInitializer.initializeAsync(InternalConnection,SingleResultCallback<ConnectionDescription>)",1,1,1
"com.mongodb.connection.InternalStreamConnectionInitializer.initializeConnectionDescription(InternalConnection)",1,1,1
"com.mongodb.connection.InternalStreamConnectionInitializer.initializeConnectionDescriptionAsync(InternalConnection,SingleResultCallback<ConnectionDescription>)",1,3,3
"com.mongodb.connection.KillCursorProtocol.KillCursorProtocol(MongoNamespace,List<Long>)",1,1,1
"com.mongodb.connection.KillCursorProtocol.asCommandDocument()",1,3,3
"com.mongodb.connection.KillCursorProtocol.asCommandResponseDocument()",1,2,2
"com.mongodb.connection.KillCursorProtocol.execute(InternalConnection)",1,6,9
"com.mongodb.connection.KillCursorProtocol.executeAsync(InternalConnection,SingleResultCallback<Void>)",1,7,9
"com.mongodb.connection.KillCursorProtocol.getCursorIdListAsString()",1,3,3
"com.mongodb.connection.KillCursorProtocol.setCommandListener(CommandListener)",1,1,1
"com.mongodb.connection.KillCursorsMessage.KillCursorsMessage(List<Long>)",1,1,1
"com.mongodb.connection.KillCursorsMessage.encodeMessageBodyWithMetadata(BsonOutput)",1,2,2
"com.mongodb.connection.KillCursorsMessage.writeKillCursorsPrologue(int,BsonOutput)",1,1,1
"com.mongodb.connection.LegacyMessage.LegacyMessage(OpCode,MessageSettings)",1,1,1
"com.mongodb.connection.LegacyMessage.LegacyMessage(String,OpCode,MessageSettings)",1,1,1
"com.mongodb.connection.LegacyMessage.encodeMessageBodyWithMetadata(BsonOutput,SessionContext)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.LevelCountingBsonWriter(BsonWriter)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.flush()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.getBsonWriter()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.getCurrentLevel()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.pipe(BsonReader)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeBinaryData(BsonBinary)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeBinaryData(String,BsonBinary)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeBoolean(String,boolean)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeBoolean(boolean)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeDBPointer(BsonDbPointer)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeDBPointer(String,BsonDbPointer)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeDateTime(String,long)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeDateTime(long)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeDecimal128(Decimal128)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeDecimal128(String,Decimal128)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeDouble(String,double)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeDouble(double)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeEndArray()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeEndDocument()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeInt32(String,int)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeInt32(int)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeInt64(String,long)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeInt64(long)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeJavaScript(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeJavaScript(String,String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeJavaScriptWithScope(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeJavaScriptWithScope(String,String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeMaxKey()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeMaxKey(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeMinKey()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeMinKey(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeName(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeNull()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeNull(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeObjectId(ObjectId)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeObjectId(String,ObjectId)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeRegularExpression(BsonRegularExpression)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeRegularExpression(String,BsonRegularExpression)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeStartArray()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeStartArray(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeStartDocument()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeStartDocument(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeString(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeString(String,String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeSymbol(String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeSymbol(String,String)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeTimestamp(BsonTimestamp)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeTimestamp(String,BsonTimestamp)",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeUndefined()",1,1,1
"com.mongodb.connection.LevelCountingBsonWriter.writeUndefined(String)",1,1,1
"com.mongodb.connection.MessageHeader.MessageHeader(ByteBuf,int)",2,2,2
"com.mongodb.connection.MessageHeader.getMessageLength()",1,1,1
"com.mongodb.connection.MessageHeader.getOpCode()",1,1,1
"com.mongodb.connection.MessageHeader.getRequestId()",1,1,1
"com.mongodb.connection.MessageHeader.getResponseTo()",1,1,1
"com.mongodb.connection.MessageSettings.Builder.build()",1,1,1
"com.mongodb.connection.MessageSettings.Builder.maxBatchCount(int)",1,1,1
"com.mongodb.connection.MessageSettings.Builder.maxDocumentSize(int)",1,1,1
"com.mongodb.connection.MessageSettings.Builder.maxMessageSize(int)",1,1,1
"com.mongodb.connection.MessageSettings.Builder.serverVersion(ServerVersion)",1,1,1
"com.mongodb.connection.MessageSettings.MessageSettings(Builder)",1,1,1
"com.mongodb.connection.MessageSettings.builder()",1,1,1
"com.mongodb.connection.MessageSettings.getMaxBatchCount()",1,1,1
"com.mongodb.connection.MessageSettings.getMaxDocumentSize()",1,1,1
"com.mongodb.connection.MessageSettings.getMaxMessageSize()",1,1,1
"com.mongodb.connection.MessageSettings.getServerVersion()",1,1,1
"com.mongodb.connection.MultiServerCluster.DefaultServerStateListener.serverDescriptionChanged(ServerDescriptionChangedEvent)",1,1,1
"com.mongodb.connection.MultiServerCluster.MultiServerCluster(ClusterId,ClusterSettings,ClusterableServerFactory)",1,3,3
"com.mongodb.connection.MultiServerCluster.ServerTuple.ServerTuple(ClusterableServer,ServerDescription)",1,1,1
"com.mongodb.connection.MultiServerCluster.addHostsToSet(Set<String>,Set<ServerAddress>)",1,2,2
"com.mongodb.connection.MultiServerCluster.addNewHosts(Set<String>)",1,2,2
"com.mongodb.connection.MultiServerCluster.addServer(ServerAddress)",1,3,3
"com.mongodb.connection.MultiServerCluster.close()",1,3,3
"com.mongodb.connection.MultiServerCluster.connect()",1,2,2
"com.mongodb.connection.MultiServerCluster.ensureServers(ServerDescription)",1,4,4
"com.mongodb.connection.MultiServerCluster.getAllServerAddresses(ServerDescription)",1,1,1
"com.mongodb.connection.MultiServerCluster.getConnectingServerDescription(ServerAddress)",1,1,1
"com.mongodb.connection.MultiServerCluster.getNewServerDescriptionList()",1,2,2
"com.mongodb.connection.MultiServerCluster.getServer(ServerAddress)",2,1,2
"com.mongodb.connection.MultiServerCluster.handleReplicaSetMemberChanged(ServerDescription)",8,21,21
"com.mongodb.connection.MultiServerCluster.handleShardRouterChanged(ServerDescription)",1,2,2
"com.mongodb.connection.MultiServerCluster.handleStandAloneChanged(ServerDescription)",1,2,2
"com.mongodb.connection.MultiServerCluster.hasPrimary()",3,2,3
"com.mongodb.connection.MultiServerCluster.invalidateOldPrimaries(ServerAddress)",1,5,5
"com.mongodb.connection.MultiServerCluster.isNotAlreadyPrimary(ServerAddress)",1,2,2
"com.mongodb.connection.MultiServerCluster.isStalePrimary(ServerDescription)",2,3,5
"com.mongodb.connection.MultiServerCluster.onChange(ServerDescriptionChangedEvent)",4,11,15
"com.mongodb.connection.MultiServerCluster.removeExtraHosts(ServerDescription)",1,4,4
"com.mongodb.connection.MultiServerCluster.removeServer(ServerAddress)",1,2,2
"com.mongodb.connection.MultiServerCluster.updateDescription()",1,1,1
"com.mongodb.connection.NativeAuthenticator.NativeAuthenticator(MongoCredential)",1,1,1
"com.mongodb.connection.NativeAuthenticator.authenticate(InternalConnection,ConnectionDescription)",1,2,2
"com.mongodb.connection.NativeAuthenticator.authenticateAsync(InternalConnection,ConnectionDescription,SingleResultCallback<Void>)",1,3,3
"com.mongodb.connection.NativeAuthenticator.translateThrowable(Throwable)",2,2,2
"com.mongodb.connection.OpCode.OpCode(int)",1,1,1
"com.mongodb.connection.OpCode.getValue()",1,1,1
"com.mongodb.connection.PlainAuthenticator.PlainAuthenticator(MongoCredential)",1,1,1
"com.mongodb.connection.PlainAuthenticator.createSaslClient(ServerAddress)",1,4,5
"com.mongodb.connection.PlainAuthenticator.getMechanismName()",1,1,1
"com.mongodb.connection.ProtocolHelper.ProtocolHelper()",1,1,1
"com.mongodb.connection.ProtocolHelper.createBsonReader(ResponseBuffers)",1,1,1
"com.mongodb.connection.ProtocolHelper.createSpecialException(BsonDocument,ServerAddress,String)",4,3,4
"com.mongodb.connection.ProtocolHelper.createWriteResult(BsonDocument)",1,1,1
"com.mongodb.connection.ProtocolHelper.encodeMessage(RequestMessage,BsonOutput)",1,3,3
"com.mongodb.connection.ProtocolHelper.encodeMessageWithMetadata(RequestMessage,BsonOutput)",1,3,3
"com.mongodb.connection.ProtocolHelper.getClusterTime(BsonDocument)",2,1,2
"com.mongodb.connection.ProtocolHelper.getClusterTime(ResponseBuffers)",2,1,2
"com.mongodb.connection.ProtocolHelper.getCommandFailureException(BsonDocument,ServerAddress)",2,1,2
"com.mongodb.connection.ProtocolHelper.getErrorCode(BsonDocument)",1,1,1
"com.mongodb.connection.ProtocolHelper.getErrorMessage(BsonDocument,String)",1,1,1
"com.mongodb.connection.ProtocolHelper.getField(BsonReader,String)",3,3,3
"com.mongodb.connection.ProtocolHelper.getMessageSettings(ConnectionDescription)",1,1,1
"com.mongodb.connection.ProtocolHelper.getOperationTime(ResponseBuffers)",2,1,2
"com.mongodb.connection.ProtocolHelper.getQueryFailureException(BsonDocument,ServerAddress)",2,1,2
"com.mongodb.connection.ProtocolHelper.getWriteResult(BsonDocument,ServerAddress)",2,3,3
"com.mongodb.connection.ProtocolHelper.hasWriteError(BsonDocument)",1,2,2
"com.mongodb.connection.ProtocolHelper.isCommandOk(BsonDocument)",1,1,1
"com.mongodb.connection.ProtocolHelper.isCommandOk(BsonReader)",1,1,1
"com.mongodb.connection.ProtocolHelper.isCommandOk(BsonValue)",4,4,4
"com.mongodb.connection.ProtocolHelper.isCommandOk(ResponseBuffers)",1,1,1
"com.mongodb.connection.ProtocolHelper.sendCommandFailedEvent(RequestMessage,String,ConnectionDescription,long,Throwable,CommandListener)",1,3,3
"com.mongodb.connection.ProtocolHelper.sendCommandStartedEvent(RequestMessage,String,String,BsonDocument,ConnectionDescription,CommandListener)",1,3,3
"com.mongodb.connection.ProtocolHelper.sendCommandSucceededEvent(RequestMessage,String,BsonDocument,ConnectionDescription,long,CommandListener)",1,3,3
"com.mongodb.connection.ProtocolHelper.throwWriteException(BsonDocument,ServerAddress)",3,2,3
"com.mongodb.connection.QueryMessage.QueryMessage(String,int,int,BsonDocument,BsonDocument,MessageSettings)",1,1,1
"com.mongodb.connection.QueryMessage.encodeMessageBodyWithMetadata(BsonOutput)",1,2,2
"com.mongodb.connection.QueryProtocol.QueryProtocol(MongoNamespace,int,int,BsonDocument,BsonDocument,Decoder<T>)",1,1,1
"com.mongodb.connection.QueryProtocol.QueryProtocol(MongoNamespace,int,int,int,BsonDocument,BsonDocument,Decoder<T>)",1,1,1
"com.mongodb.connection.QueryProtocol.QueryResultCallback.QueryResultCallback(SingleResultCallback<QueryResult<T>>,int,long,QueryMessage,boolean,ConnectionDescription)",1,1,1
"com.mongodb.connection.QueryProtocol.QueryResultCallback.callCallback(ResponseBuffers,Throwable)",3,8,8
"com.mongodb.connection.QueryProtocol.asFindCommandDocument(ByteBufferBsonOutput,int)",1,14,16
"com.mongodb.connection.QueryProtocol.asFindCommandResponseDocument(ResponseBuffers,QueryResult<T>,boolean)",2,4,4
"com.mongodb.connection.QueryProtocol.awaitData(boolean)",1,1,1
"com.mongodb.connection.QueryProtocol.createQueryMessage(ConnectionDescription)",1,1,1
"com.mongodb.connection.QueryProtocol.execute(InternalConnection)",2,5,5
"com.mongodb.connection.QueryProtocol.executeAsync(InternalConnection,SingleResultCallback<QueryResult<T>>)",1,4,5
"com.mongodb.connection.QueryProtocol.getCommandListener()",1,1,1
"com.mongodb.connection.QueryProtocol.getCommandName(boolean)",1,1,2
"com.mongodb.connection.QueryProtocol.getNumberToReturn()",6,5,6
"com.mongodb.connection.QueryProtocol.isAwaitData()",1,1,1
"com.mongodb.connection.QueryProtocol.isNoCursorTimeout()",1,1,1
"com.mongodb.connection.QueryProtocol.isOplogReplay()",1,1,1
"com.mongodb.connection.QueryProtocol.isPartial()",1,1,1
"com.mongodb.connection.QueryProtocol.isSlaveOk()",1,1,1
"com.mongodb.connection.QueryProtocol.isTailableCursor()",1,1,1
"com.mongodb.connection.QueryProtocol.noCursorTimeout(boolean)",1,1,1
"com.mongodb.connection.QueryProtocol.oplogReplay(boolean)",1,1,1
"com.mongodb.connection.QueryProtocol.partial(boolean)",1,1,1
"com.mongodb.connection.QueryProtocol.sendQueryStartedEvent(InternalConnection,QueryMessage,ByteBufferBsonOutput,EncodingMetadata)",1,2,2
"com.mongodb.connection.QueryProtocol.sendQuerySucceededEvent(ConnectionDescription,long,QueryMessage,boolean,ResponseBuffers,QueryResult<T>)",1,2,2
"com.mongodb.connection.QueryProtocol.setCommandListener(CommandListener)",1,1,1
"com.mongodb.connection.QueryProtocol.slaveOk(boolean)",1,1,1
"com.mongodb.connection.QueryProtocol.tailableCursor(boolean)",1,1,1
"com.mongodb.connection.QueryResult.QueryResult(MongoNamespace,List<T>,long,ServerAddress)",1,1,1
"com.mongodb.connection.QueryResult.QueryResult(MongoNamespace,ReplyMessage<T>,ServerAddress)",1,1,1
"com.mongodb.connection.QueryResult.getAddress()",1,1,1
"com.mongodb.connection.QueryResult.getCursor()",1,1,2
"com.mongodb.connection.QueryResult.getNamespace()",1,1,1
"com.mongodb.connection.QueryResult.getResults()",1,1,1
"com.mongodb.connection.ReplyHeader.ReplyHeader(ByteBuf,CompressedHeader)",1,1,1
"com.mongodb.connection.ReplyHeader.ReplyHeader(ByteBuf,MessageHeader)",1,1,1
"com.mongodb.connection.ReplyHeader.ReplyHeader(int,int,MessageHeader,ByteBuf)",5,5,5
"com.mongodb.connection.ReplyHeader.getCursorId()",1,1,1
"com.mongodb.connection.ReplyHeader.getMessageLength()",1,1,1
"com.mongodb.connection.ReplyHeader.getNumberReturned()",1,1,1
"com.mongodb.connection.ReplyHeader.getRequestId()",1,1,1
"com.mongodb.connection.ReplyHeader.getResponseFlags()",1,1,1
"com.mongodb.connection.ReplyHeader.getResponseTo()",1,1,1
"com.mongodb.connection.ReplyHeader.getStartingFrom()",1,1,1
"com.mongodb.connection.ReplyHeader.isCursorNotFound()",1,1,1
"com.mongodb.connection.ReplyHeader.isQueryFailure()",1,1,1
"com.mongodb.connection.ReplyMessage.ReplyMessage(ReplyHeader,long)",2,2,2
"com.mongodb.connection.ReplyMessage.ReplyMessage(ResponseBuffers,Decoder<T>,long)",1,3,3
"com.mongodb.connection.ReplyMessage.getDocuments()",1,1,1
"com.mongodb.connection.ReplyMessage.getReplyHeader()",1,1,1
"com.mongodb.connection.RequestMessage.EncodingMetadata.EncodingMetadata(int)",1,1,1
"com.mongodb.connection.RequestMessage.EncodingMetadata.getFirstDocumentPosition()",1,1,1
"com.mongodb.connection.RequestMessage.RequestMessage(OpCode,MessageSettings)",1,1,1
"com.mongodb.connection.RequestMessage.RequestMessage(OpCode,int,MessageSettings)",1,1,1
"com.mongodb.connection.RequestMessage.RequestMessage(String,OpCode,MessageSettings)",1,1,1
"com.mongodb.connection.RequestMessage.RequestMessage(String,OpCode,int,MessageSettings)",1,1,1
"com.mongodb.connection.RequestMessage.addCollectibleDocument(BsonDocument,BsonOutput,FieldNameValidator)",1,1,1
"com.mongodb.connection.RequestMessage.addDocument(BsonDocument,BsonOutput,FieldNameValidator)",1,1,1
"com.mongodb.connection.RequestMessage.addDocument(BsonDocument,BsonOutput,FieldNameValidator,List<BsonElement>)",1,1,1
"com.mongodb.connection.RequestMessage.addDocument(T,Encoder<T>,EncoderContext,BsonOutput,FieldNameValidator,int,List<BsonElement>)",1,1,2
"com.mongodb.connection.RequestMessage.backpatchMessageLength(int,BsonOutput)",1,1,1
"com.mongodb.connection.RequestMessage.encode(BsonOutput,SessionContext)",1,1,1
"com.mongodb.connection.RequestMessage.getCodec(BsonDocument)",1,1,1
"com.mongodb.connection.RequestMessage.getCollectionName()",1,1,1
"com.mongodb.connection.RequestMessage.getCurrentGlobalId()",1,1,1
"com.mongodb.connection.RequestMessage.getEncodingMetadata()",1,1,1
"com.mongodb.connection.RequestMessage.getId()",1,1,1
"com.mongodb.connection.RequestMessage.getNamespace()",1,1,1
"com.mongodb.connection.RequestMessage.getOpCode()",1,1,1
"com.mongodb.connection.RequestMessage.getSettings()",1,1,1
"com.mongodb.connection.RequestMessage.writeMessagePrologue(BsonOutput)",1,1,1
"com.mongodb.connection.ResponseBuffers.ResponseBuffers(ReplyHeader,ByteBuf)",1,2,2
"com.mongodb.connection.ResponseBuffers.close()",1,3,3
"com.mongodb.connection.ResponseBuffers.getBodyByteBuffer()",1,1,1
"com.mongodb.connection.ResponseBuffers.getReplyHeader()",1,1,1
"com.mongodb.connection.ResponseBuffers.reset()",1,1,1
"com.mongodb.connection.ResponseCallback.ResponseCallback(long,ServerAddress)",1,1,1
"com.mongodb.connection.ResponseCallback.getRequestId()",1,1,1
"com.mongodb.connection.ResponseCallback.getServerAddress()",1,1,1
"com.mongodb.connection.ResponseCallback.onResult(ResponseBuffers,Throwable)",2,2,3
"com.mongodb.connection.SaslAuthenticator.Continuator.Continuator(SaslClient,BsonDocument,InternalConnection,SingleResultCallback<Void>)",1,1,1
"com.mongodb.connection.SaslAuthenticator.Continuator.continueConversation(BsonDocument)",1,3,3
"com.mongodb.connection.SaslAuthenticator.Continuator.onResult(BsonDocument,Throwable)",1,3,3
"com.mongodb.connection.SaslAuthenticator.Continuator.start()",1,1,1
"com.mongodb.connection.SaslAuthenticator.SaslAuthenticator(MongoCredential)",1,1,1
"com.mongodb.connection.SaslAuthenticator.authenticate(InternalConnection,ConnectionDescription)",3,5,5
"com.mongodb.connection.SaslAuthenticator.authenticateAsync(InternalConnection,ConnectionDescription,SingleResultCallback<Void>)",1,6,6
"com.mongodb.connection.SaslAuthenticator.createSaslContinueDocument(BsonInt32,byte[])",1,1,1
"com.mongodb.connection.SaslAuthenticator.createSaslStartCommandDocument(byte[])",1,1,2
"com.mongodb.connection.SaslAuthenticator.disposeOfSaslClient(SaslClient)",1,1,2
"com.mongodb.connection.SaslAuthenticator.doAsSubject(PrivilegedAction<Void>)",1,2,2
"com.mongodb.connection.SaslAuthenticator.getSubject()",1,1,1
"com.mongodb.connection.SaslAuthenticator.sendSaslContinue(BsonInt32,byte[],InternalConnection)",1,1,1
"com.mongodb.connection.SaslAuthenticator.sendSaslContinueAsync(BsonInt32,byte[],InternalConnection,SingleResultCallback<BsonDocument>)",1,1,1
"com.mongodb.connection.SaslAuthenticator.sendSaslStart(byte[],InternalConnection)",1,1,1
"com.mongodb.connection.SaslAuthenticator.sendSaslStartAsync(byte[],InternalConnection,SingleResultCallback<BsonDocument>)",1,1,1
"com.mongodb.connection.SaslAuthenticator.wrapException(Throwable)",3,3,3
"com.mongodb.connection.ScramSha1Authenticator.DefaultRandomStringGenerator.generate(int)",1,3,3
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1Authenticator(MongoCredential)",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1Authenticator(MongoCredential,RandomStringGenerator)",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.ScramSha1SaslClient(MongoCredential,RandomStringGenerator)",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.computeClientFinalMessage(byte[])",2,1,2
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.computeClientFirstMessage()",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.decodeBase64(String)",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.decodeUTF8(String)",1,1,2
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.dispose()",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.encodeBase64(byte[])",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.encodeUTF8(byte[])",1,1,2
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.evaluateChallenge(byte[])",5,4,5
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.getMechanismName()",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.getNegotiatedProperty(String)",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.h(byte[])",1,1,2
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.hasInitialResponse()",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.hi(String,byte[],int)",1,1,3
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.hmac(byte[],String)",1,1,3
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.isComplete()",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.parseServerResponse(String)",1,2,2
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.prepUserName(String)",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.unwrap(byte[],int,int)",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.wrap(byte[],int,int)",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient.xor(byte[],byte[])",1,1,2
"com.mongodb.connection.ScramSha1Authenticator.createSaslClient(ServerAddress)",1,1,1
"com.mongodb.connection.ScramSha1Authenticator.getMechanismName()",1,1,1
"com.mongodb.connection.SendMessageCallback.SendMessageCallback(InternalConnection,OutputBuffer,RequestMessage,String,long,CommandListener,SingleResultCallback<T>,SingleResultCallback<ResponseBuffers>)",1,1,1
"com.mongodb.connection.SendMessageCallback.SendMessageCallback(InternalConnection,OutputBuffer,RequestMessage,int,String,long,CommandListener,SingleResultCallback<T>,SingleResultCallback<ResponseBuffers>)",1,1,1
"com.mongodb.connection.SendMessageCallback.onResult(Void,Throwable)",1,3,3
"com.mongodb.connection.ServerDescription.Builder.address(ServerAddress)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.arbiters(Set<String>)",1,2,2
"com.mongodb.connection.ServerDescription.Builder.build()",1,1,1
"com.mongodb.connection.ServerDescription.Builder.canonicalAddress(String)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.electionId(ObjectId)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.exception(Throwable)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.hosts(Set<String>)",1,2,2
"com.mongodb.connection.ServerDescription.Builder.lastUpdateTimeNanos(long)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.lastWriteDate(Date)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.logicalSessionTimeoutMinutes(Integer)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.maxDocumentSize(int)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.maxWireVersion(int)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.minWireVersion(int)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.ok(boolean)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.passives(Set<String>)",1,2,2
"com.mongodb.connection.ServerDescription.Builder.primary(String)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.roundTripTime(long,TimeUnit)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.setName(String)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.setVersion(Integer)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.state(ServerConnectionState)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.tagSet(TagSet)",1,1,2
"com.mongodb.connection.ServerDescription.Builder.type(ServerType)",1,1,1
"com.mongodb.connection.ServerDescription.Builder.version(ServerVersion)",1,1,1
"com.mongodb.connection.ServerDescription.ServerDescription(Builder)",1,1,1
"com.mongodb.connection.ServerDescription.builder()",1,1,1
"com.mongodb.connection.ServerDescription.equals(Object)",25,15,39
"com.mongodb.connection.ServerDescription.getAddress()",1,1,1
"com.mongodb.connection.ServerDescription.getArbiters()",1,1,1
"com.mongodb.connection.ServerDescription.getCanonicalAddress()",1,1,1
"com.mongodb.connection.ServerDescription.getClusterType()",1,1,1
"com.mongodb.connection.ServerDescription.getDefaultMaxDocumentSize()",1,1,1
"com.mongodb.connection.ServerDescription.getDefaultMaxWireVersion()",1,1,1
"com.mongodb.connection.ServerDescription.getDefaultMinWireVersion()",1,1,1
"com.mongodb.connection.ServerDescription.getElectionId()",1,1,1
"com.mongodb.connection.ServerDescription.getException()",1,1,1
"com.mongodb.connection.ServerDescription.getHosts()",1,1,1
"com.mongodb.connection.ServerDescription.getLastUpdateTime(TimeUnit)",1,1,1
"com.mongodb.connection.ServerDescription.getLastWriteDate()",1,1,1
"com.mongodb.connection.ServerDescription.getLogicalSessionTimeoutMinutes()",1,1,1
"com.mongodb.connection.ServerDescription.getMaxDocumentSize()",1,1,1
"com.mongodb.connection.ServerDescription.getMaxWireVersion()",1,1,1
"com.mongodb.connection.ServerDescription.getMinWireVersion()",1,1,1
"com.mongodb.connection.ServerDescription.getPassives()",1,1,1
"com.mongodb.connection.ServerDescription.getPrimary()",1,1,1
"com.mongodb.connection.ServerDescription.getRoundTripFormattedInMilliseconds()",1,1,1
"com.mongodb.connection.ServerDescription.getRoundTripTimeNanos()",1,1,1
"com.mongodb.connection.ServerDescription.getSetName()",1,1,1
"com.mongodb.connection.ServerDescription.getSetVersion()",1,1,1
"com.mongodb.connection.ServerDescription.getShortDescription()",1,3,4
"com.mongodb.connection.ServerDescription.getState()",1,1,1
"com.mongodb.connection.ServerDescription.getTagSet()",1,1,1
"com.mongodb.connection.ServerDescription.getType()",1,1,1
"com.mongodb.connection.ServerDescription.getVersion()",1,1,1
"com.mongodb.connection.ServerDescription.hasTags(TagSet)",3,1,4
"com.mongodb.connection.ServerDescription.hashCode()",1,10,11
"com.mongodb.connection.ServerDescription.isCompatibleWithDriver()",4,1,4
"com.mongodb.connection.ServerDescription.isOk()",1,1,1
"com.mongodb.connection.ServerDescription.isPrimary()",1,1,4
"com.mongodb.connection.ServerDescription.isReplicaSetMember()",1,1,1
"com.mongodb.connection.ServerDescription.isSecondary()",1,1,4
"com.mongodb.connection.ServerDescription.isShardRouter()",1,1,1
"com.mongodb.connection.ServerDescription.isStandAlone()",1,1,1
"com.mongodb.connection.ServerDescription.toString()",1,2,4
"com.mongodb.connection.ServerDescription.translateExceptionToString()",1,2,2
"com.mongodb.connection.ServerId.ServerId(ClusterId,ServerAddress)",1,1,1
"com.mongodb.connection.ServerId.equals(Object)",5,2,6
"com.mongodb.connection.ServerId.getAddress()",1,1,1
"com.mongodb.connection.ServerId.getClusterId()",1,1,1
"com.mongodb.connection.ServerId.hashCode()",1,1,1
"com.mongodb.connection.ServerId.toString()",1,1,1
"com.mongodb.connection.ServerSettings.Builder.Builder()",1,1,1
"com.mongodb.connection.ServerSettings.Builder.Builder(ServerSettings)",1,1,1
"com.mongodb.connection.ServerSettings.Builder.addServerListener(ServerListener)",1,1,1
"com.mongodb.connection.ServerSettings.Builder.addServerMonitorListener(ServerMonitorListener)",1,1,1
"com.mongodb.connection.ServerSettings.Builder.applyConnectionString(ConnectionString)",1,2,2
"com.mongodb.connection.ServerSettings.Builder.build()",1,1,1
"com.mongodb.connection.ServerSettings.Builder.heartbeatFrequency(long,TimeUnit)",1,1,1
"com.mongodb.connection.ServerSettings.Builder.minHeartbeatFrequency(long,TimeUnit)",1,1,1
"com.mongodb.connection.ServerSettings.ServerSettings(Builder)",1,1,1
"com.mongodb.connection.ServerSettings.builder()",1,1,1
"com.mongodb.connection.ServerSettings.builder(ServerSettings)",1,1,1
"com.mongodb.connection.ServerSettings.equals(Object)",7,2,8
"com.mongodb.connection.ServerSettings.getHeartbeatFrequency(TimeUnit)",1,1,1
"com.mongodb.connection.ServerSettings.getMinHeartbeatFrequency(TimeUnit)",1,1,1
"com.mongodb.connection.ServerSettings.getServerListeners()",1,1,1
"com.mongodb.connection.ServerSettings.getServerMonitorListeners()",1,1,1
"com.mongodb.connection.ServerSettings.hashCode()",1,1,1
"com.mongodb.connection.ServerSettings.toString()",1,1,1
"com.mongodb.connection.ServerVersion.ServerVersion()",1,1,1
"com.mongodb.connection.ServerVersion.ServerVersion(List<Integer>)",1,1,1
"com.mongodb.connection.ServerVersion.ServerVersion(int,int)",1,1,1
"com.mongodb.connection.ServerVersion.compareTo(ServerVersion)",3,2,3
"com.mongodb.connection.ServerVersion.equals(Object)",4,2,5
"com.mongodb.connection.ServerVersion.getVersionList()",1,1,1
"com.mongodb.connection.ServerVersion.hashCode()",1,1,1
"com.mongodb.connection.ServerVersion.toString()",1,1,1
"com.mongodb.connection.SingleServerCluster.DefaultServerStateListener.serverDescriptionChanged(ServerDescriptionChangedEvent)",1,6,7
"com.mongodb.connection.SingleServerCluster.SingleServerCluster(ClusterId,ClusterSettings,ClusterableServerFactory)",1,2,2
"com.mongodb.connection.SingleServerCluster.close()",1,2,2
"com.mongodb.connection.SingleServerCluster.connect()",1,1,1
"com.mongodb.connection.SingleServerCluster.getInitialDescription()",1,1,1
"com.mongodb.connection.SingleServerCluster.getServer(ServerAddress)",1,1,1
"com.mongodb.connection.SingleServerCluster.publishDescription(ServerDescription)",1,4,5
"com.mongodb.connection.SnappyCompressor.compress(List<ByteBuf>,BsonOutput)",1,1,2
"com.mongodb.connection.SnappyCompressor.copy(List<ByteBuf>,byte[])",1,2,2
"com.mongodb.connection.SnappyCompressor.getId()",1,1,1
"com.mongodb.connection.SnappyCompressor.getInputStream(InputStream)",1,1,1
"com.mongodb.connection.SnappyCompressor.getName()",1,1,1
"com.mongodb.connection.SnappyCompressor.getUncompressedSize(List<ByteBuf>)",1,2,2
"com.mongodb.connection.SocketChannelStream.SocketChannelStream(ServerAddress,SocketSettings,SslSettings,BufferProvider)",1,1,1
"com.mongodb.connection.SocketChannelStream.close()",1,2,3
"com.mongodb.connection.SocketChannelStream.getAddress()",1,1,1
"com.mongodb.connection.SocketChannelStream.getBuffer(int)",1,1,1
"com.mongodb.connection.SocketChannelStream.getSettings()",1,1,1
"com.mongodb.connection.SocketChannelStream.isClosed()",1,1,1
"com.mongodb.connection.SocketChannelStream.open()",1,2,2
"com.mongodb.connection.SocketChannelStream.openAsync(AsyncCompletionHandler<Void>)",1,1,1
"com.mongodb.connection.SocketChannelStream.read(int)",3,3,3
"com.mongodb.connection.SocketChannelStream.readAsync(int,AsyncCompletionHandler<ByteBuf>)",1,1,1
"com.mongodb.connection.SocketChannelStream.write(List<ByteBuf>)",1,3,3
"com.mongodb.connection.SocketChannelStream.writeAsync(List<ByteBuf>,AsyncCompletionHandler<Void>)",1,1,1
"com.mongodb.connection.SocketSettings.Builder.applyConnectionString(ConnectionString)",1,3,3
"com.mongodb.connection.SocketSettings.Builder.build()",1,1,1
"com.mongodb.connection.SocketSettings.Builder.connectTimeout(int,TimeUnit)",1,1,1
"com.mongodb.connection.SocketSettings.Builder.keepAlive(boolean)",1,1,1
"com.mongodb.connection.SocketSettings.Builder.readTimeout(int,TimeUnit)",1,1,1
"com.mongodb.connection.SocketSettings.Builder.receiveBufferSize(int)",1,1,1
"com.mongodb.connection.SocketSettings.Builder.sendBufferSize(int)",1,1,1
"com.mongodb.connection.SocketSettings.SocketSettings(Builder)",1,1,1
"com.mongodb.connection.SocketSettings.builder()",1,1,1
"com.mongodb.connection.SocketSettings.equals(Object)",8,2,9
"com.mongodb.connection.SocketSettings.getConnectTimeout(TimeUnit)",1,1,1
"com.mongodb.connection.SocketSettings.getReadTimeout(TimeUnit)",1,1,1
"com.mongodb.connection.SocketSettings.getReceiveBufferSize()",1,1,1
"com.mongodb.connection.SocketSettings.getSendBufferSize()",1,1,1
"com.mongodb.connection.SocketSettings.hashCode()",1,1,2
"com.mongodb.connection.SocketSettings.isKeepAlive()",1,1,1
"com.mongodb.connection.SocketSettings.toString()",1,1,1
"com.mongodb.connection.SocketStream.SocketStream(ServerAddress,SocketSettings,SslSettings,SocketFactory,BufferProvider)",1,1,1
"com.mongodb.connection.SocketStream.close()",1,2,3
"com.mongodb.connection.SocketStream.getAddress()",1,1,1
"com.mongodb.connection.SocketStream.getBuffer(int)",1,1,1
"com.mongodb.connection.SocketStream.getSettings()",1,1,1
"com.mongodb.connection.SocketStream.isClosed()",1,1,1
"com.mongodb.connection.SocketStream.open()",1,2,2
"com.mongodb.connection.SocketStream.openAsync(AsyncCompletionHandler<Void>)",1,1,1
"com.mongodb.connection.SocketStream.read(int)",3,3,3
"com.mongodb.connection.SocketStream.readAsync(int,AsyncCompletionHandler<ByteBuf>)",1,1,1
"com.mongodb.connection.SocketStream.write(List<ByteBuf>)",1,2,2
"com.mongodb.connection.SocketStream.writeAsync(List<ByteBuf>,AsyncCompletionHandler<Void>)",1,1,1
"com.mongodb.connection.SocketStreamFactory.SocketStreamFactory(SocketSettings,SslSettings)",1,1,1
"com.mongodb.connection.SocketStreamFactory.SocketStreamFactory(SocketSettings,SslSettings,SocketFactory)",1,1,1
"com.mongodb.connection.SocketStreamFactory.create(ServerAddress)",1,4,4
"com.mongodb.connection.SocketStreamFactory.getSslContext()",1,2,3
"com.mongodb.connection.SocketStreamHelper.SocketStreamHelper()",1,1,1
"com.mongodb.connection.SocketStreamHelper.initialize(Socket,ServerAddress,SocketSettings,SslSettings)",3,6,7
"com.mongodb.connection.SplittablePayload.SplittablePayload(Type,List<BsonDocument>)",1,1,1
"com.mongodb.connection.SplittablePayload.getNextSplit()",1,1,1
"com.mongodb.connection.SplittablePayload.getPayload()",1,1,1
"com.mongodb.connection.SplittablePayload.getPayloadName()",3,1,4
"com.mongodb.connection.SplittablePayload.getPayloadType()",1,1,1
"com.mongodb.connection.SplittablePayload.getPosition()",1,1,1
"com.mongodb.connection.SplittablePayload.hasAnotherSplit()",1,1,1
"com.mongodb.connection.SplittablePayload.isEmpty()",1,1,1
"com.mongodb.connection.SplittablePayload.setPosition(int)",1,1,1
"com.mongodb.connection.SplittablePayloadBsonWriter.SplittablePayloadBsonWriter(BsonWriter,BsonOutput,MessageSettings,SplittablePayload)",1,1,1
"com.mongodb.connection.SplittablePayloadBsonWriter.writeEndDocument()",1,3,3
"com.mongodb.connection.SplittablePayloadBsonWriter.writeStartDocument()",1,2,2
"com.mongodb.connection.SslSettings.Builder.applyConnectionString(ConnectionString)",1,3,3
"com.mongodb.connection.SslSettings.Builder.build()",1,1,1
"com.mongodb.connection.SslSettings.Builder.context(SSLContext)",1,1,1
"com.mongodb.connection.SslSettings.Builder.enabled(boolean)",1,1,1
"com.mongodb.connection.SslSettings.Builder.invalidHostNameAllowed(boolean)",1,1,1
"com.mongodb.connection.SslSettings.SslSettings(Builder)",2,3,4
"com.mongodb.connection.SslSettings.builder()",1,1,1
"com.mongodb.connection.SslSettings.equals(Object)",5,3,7
"com.mongodb.connection.SslSettings.getContext()",1,1,1
"com.mongodb.connection.SslSettings.hashCode()",1,2,4
"com.mongodb.connection.SslSettings.isEnabled()",1,1,1
"com.mongodb.connection.SslSettings.isInvalidHostNameAllowed()",1,1,1
"com.mongodb.connection.SslSettings.toString()",1,1,1
"com.mongodb.connection.Time.Time()",1,1,1
"com.mongodb.connection.Time.makeTimeConstant()",1,1,1
"com.mongodb.connection.Time.makeTimeMove()",1,1,1
"com.mongodb.connection.Time.nanoTime()",1,2,2
"com.mongodb.connection.UpdateMessage.UpdateMessage(String,UpdateRequest,MessageSettings)",1,1,1
"com.mongodb.connection.UpdateMessage.encodeMessageBodyWithMetadata(BsonOutput)",3,2,5
"com.mongodb.connection.UpdateProtocol.UpdateProtocol(MongoNamespace,boolean,UpdateRequest)",1,1,1
"com.mongodb.connection.UpdateProtocol.createRequestMessage(MessageSettings)",1,1,1
"com.mongodb.connection.UpdateProtocol.execute(InternalConnection)",1,2,2
"com.mongodb.connection.UpdateProtocol.executeAsync(InternalConnection,SingleResultCallback<WriteConcernResult>)",1,4,4
"com.mongodb.connection.UpdateProtocol.getAsWriteCommand(ByteBufferBsonOutput,int)",1,3,3
"com.mongodb.connection.UpdateProtocol.getLogger()",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.UsageTrackingInternalConnection(InternalConnection,int)",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.close()",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.getBuffer(int)",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.getDescription()",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.getGeneration()",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.getLastUsedAt()",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.getOpenedAt()",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.isClosed()",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.open()",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.openAsync(SingleResultCallback<Void>)",1,2,2
"com.mongodb.connection.UsageTrackingInternalConnection.opened()",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.receiveMessage(int)",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.receiveMessageAsync(int,SingleResultCallback<ResponseBuffers>)",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.sendAndReceive(CommandMessage,Decoder<T>,SessionContext)",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.sendAndReceiveAsync(CommandMessage,Decoder<T>,SessionContext,SingleResultCallback<T>)",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.sendMessage(List<ByteBuf>,int)",1,1,1
"com.mongodb.connection.UsageTrackingInternalConnection.sendMessageAsync(List<ByteBuf>,int,SingleResultCallback<Void>)",1,1,1
"com.mongodb.connection.WriteCommandResultHelper.WriteCommandResultHelper()",1,1,1
"com.mongodb.connection.WriteCommandResultHelper.getBulkWriteException(Type,BsonDocument,ServerAddress)",2,1,2
"com.mongodb.connection.WriteCommandResultHelper.getBulkWriteResult(Type,BsonDocument)",1,1,1
"com.mongodb.connection.WriteCommandResultHelper.getCount(BsonDocument)",1,1,1
"com.mongodb.connection.WriteCommandResultHelper.getModifiedCount(Type,BsonDocument)",1,2,4
"com.mongodb.connection.WriteCommandResultHelper.getUpsertedItems(BsonDocument)",2,3,3
"com.mongodb.connection.WriteCommandResultHelper.getWriteConcernError(BsonDocument)",2,2,2
"com.mongodb.connection.WriteCommandResultHelper.getWriteErrors(BsonDocument)",1,3,3
"com.mongodb.connection.WriteCommandResultHelper.hasError(BsonDocument)",1,2,2
"com.mongodb.connection.WriteProtocol.UnacknowledgedWriteResultCallback.UnacknowledgedWriteResultCallback(SingleResultCallback<WriteConcernResult>,RequestMessage,OutputBuffer,InternalConnection,long)",1,1,1
"com.mongodb.connection.WriteProtocol.UnacknowledgedWriteResultCallback.onResult(Void,Throwable)",1,2,2
"com.mongodb.connection.WriteProtocol.WriteProtocol(MongoNamespace,boolean)",1,1,1
"com.mongodb.connection.WriteProtocol.execute(InternalConnection)",1,2,2
"com.mongodb.connection.WriteProtocol.executeAsync(InternalConnection,SingleResultCallback<WriteConcernResult>)",1,1,1
"com.mongodb.connection.WriteProtocol.executeAsync(RequestMessage,InternalConnection,SingleResultCallback<WriteConcernResult>)",1,2,2
"com.mongodb.connection.WriteProtocol.getBaseCommandDocument(String)",1,1,1
"com.mongodb.connection.WriteProtocol.getCommandName(RequestMessage)",5,2,5
"com.mongodb.connection.WriteProtocol.getNamespace()",1,1,1
"com.mongodb.connection.WriteProtocol.getResponseDocument()",1,1,1
"com.mongodb.connection.WriteProtocol.isOrdered()",1,1,1
"com.mongodb.connection.WriteProtocol.sendFailedEvent(InternalConnection,RequestMessage,boolean,Throwable,long)",1,2,3
"com.mongodb.connection.WriteProtocol.sendStartedEvent(InternalConnection,RequestMessage,EncodingMetadata,ByteBufferBsonOutput)",1,2,2
"com.mongodb.connection.WriteProtocol.sendSucceededEvent(InternalConnection,RequestMessage,BsonDocument,long)",1,2,2
"com.mongodb.connection.WriteProtocol.sendSucceededEvent(InternalConnection,RequestMessage,long)",1,2,2
"com.mongodb.connection.WriteProtocol.setCommandListener(CommandListener)",1,1,1
"com.mongodb.connection.X509Authenticator.X509Authenticator(MongoCredential)",1,1,1
"com.mongodb.connection.X509Authenticator.authenticate(InternalConnection,ConnectionDescription)",1,2,2
"com.mongodb.connection.X509Authenticator.authenticateAsync(InternalConnection,ConnectionDescription,SingleResultCallback<Void>)",1,3,3
"com.mongodb.connection.X509Authenticator.getAuthCommand(String)",1,2,2
"com.mongodb.connection.X509Authenticator.translateThrowable(Throwable)",2,2,2
"com.mongodb.connection.X509Authenticator.validateUserName(ConnectionDescription)",2,3,3
"com.mongodb.connection.ZlibCompressor.ZlibCompressor(MongoCompressor)",1,1,1
"com.mongodb.connection.ZlibCompressor.getId()",1,1,1
"com.mongodb.connection.ZlibCompressor.getInputStream(InputStream)",1,1,1
"com.mongodb.connection.ZlibCompressor.getName()",1,1,1
"com.mongodb.connection.ZlibCompressor.getOutputStream(OutputStream)",1,1,1
"com.mongodb.connection.netty.NettyBufferProvider.NettyBufferProvider()",1,1,1
"com.mongodb.connection.netty.NettyBufferProvider.NettyBufferProvider(ByteBufAllocator)",1,1,1
"com.mongodb.connection.netty.NettyBufferProvider.getBuffer(int)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.NettyByteBuf(ByteBuf)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.NettyByteBuf(ByteBuf,boolean)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.array()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.asByteBuf()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.asNIO()",2,2,2
"com.mongodb.connection.netty.NettyByteBuf.asReadOnly()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.capacity()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.clear()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.duplicate()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.flip()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.get()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.get(byte[])",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.get(byte[],int,int)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.get(int)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.get(int,byte[])",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.get(int,byte[],int,int)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.getDouble()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.getDouble(int)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.getInt()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.getInt(int)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.getLong()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.getLong(int)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.getReferenceCount()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.hasRemaining()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.limit()",2,2,2
"com.mongodb.connection.netty.NettyByteBuf.limit(int)",2,2,2
"com.mongodb.connection.netty.NettyByteBuf.order(ByteOrder)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.position()",2,2,2
"com.mongodb.connection.netty.NettyByteBuf.position(int)",1,2,2
"com.mongodb.connection.netty.NettyByteBuf.put(byte)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.put(byte[],int,int)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.put(int,byte)",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.release()",1,1,1
"com.mongodb.connection.netty.NettyByteBuf.remaining()",2,2,2
"com.mongodb.connection.netty.NettyByteBuf.retain()",1,1,1
"com.mongodb.connection.netty.NettyStream.FutureAsyncCompletionHandler.FutureAsyncCompletionHandler()",1,1,1
"com.mongodb.connection.netty.NettyStream.FutureAsyncCompletionHandler.completed(T)",1,1,1
"com.mongodb.connection.netty.NettyStream.FutureAsyncCompletionHandler.failed(Throwable)",1,1,1
"com.mongodb.connection.netty.NettyStream.FutureAsyncCompletionHandler.get()",4,1,5
"com.mongodb.connection.netty.NettyStream.InboundBufferHandler.channelRead0(ChannelHandlerContext,ByteBuf)",1,1,1
"com.mongodb.connection.netty.NettyStream.InboundBufferHandler.exceptionCaught(ChannelHandlerContext,Throwable)",1,2,2
"com.mongodb.connection.netty.NettyStream.NettyStream(ServerAddress,SocketSettings,SslSettings,EventLoopGroup,Class<? extends SocketChannel>,ByteBufAllocator)",1,1,1
"com.mongodb.connection.netty.NettyStream.PendingReader.PendingReader(int,AsyncCompletionHandler<ByteBuf>)",1,1,1
"com.mongodb.connection.netty.NettyStream.adjustTimeout(boolean)",1,5,5
"com.mongodb.connection.netty.NettyStream.close()",1,3,3
"com.mongodb.connection.netty.NettyStream.disableReadTimeout()",1,1,1
"com.mongodb.connection.netty.NettyStream.getAddress()",1,1,1
"com.mongodb.connection.netty.NettyStream.getAllocator()",1,1,1
"com.mongodb.connection.netty.NettyStream.getBuffer(int)",1,1,1
"com.mongodb.connection.netty.NettyStream.getSettings()",1,1,1
"com.mongodb.connection.netty.NettyStream.getSocketChannelClass()",1,1,1
"com.mongodb.connection.netty.NettyStream.getSslContext()",1,2,3
"com.mongodb.connection.netty.NettyStream.getSslSettings()",1,1,1
"com.mongodb.connection.netty.NettyStream.getWorkerGroup()",1,1,1
"com.mongodb.connection.netty.NettyStream.handleReadResponse(ByteBuf,Throwable)",1,3,4
"com.mongodb.connection.netty.NettyStream.hasBytesAvailable(int)",3,2,3
"com.mongodb.connection.netty.NettyStream.isClosed()",1,1,1
"com.mongodb.connection.netty.NettyStream.open()",1,1,1
"com.mongodb.connection.netty.NettyStream.openAsync(AsyncCompletionHandler<Void>)",1,7,7
"com.mongodb.connection.netty.NettyStream.read(int)",1,1,1
"com.mongodb.connection.netty.NettyStream.readAsync(int,AsyncCompletionHandler<ByteBuf>)",5,7,8
"com.mongodb.connection.netty.NettyStream.scheduleReadTimeout()",1,1,1
"com.mongodb.connection.netty.NettyStream.write(List<ByteBuf>)",1,1,1
"com.mongodb.connection.netty.NettyStream.writeAsync(List<ByteBuf>,AsyncCompletionHandler<Void>)",1,3,3
"com.mongodb.connection.netty.NettyStreamFactory.NettyStreamFactory(SocketSettings,SslSettings)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactory.NettyStreamFactory(SocketSettings,SslSettings,EventLoopGroup)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactory.NettyStreamFactory(SocketSettings,SslSettings,EventLoopGroup,ByteBufAllocator)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactory.NettyStreamFactory(SocketSettings,SslSettings,EventLoopGroup,Class<? extends SocketChannel>,ByteBufAllocator)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactory.create(ServerAddress)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.Builder.Builder()",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.Builder.allocator(ByteBufAllocator)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.Builder.build()",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.Builder.eventLoopGroup(EventLoopGroup)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.Builder.socketChannelClass(Class<? extends SocketChannel>)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.NettyStreamFactoryFactory()",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.NettyStreamFactoryFactory(Builder)",1,1,2
"com.mongodb.connection.netty.NettyStreamFactoryFactory.NettyStreamFactoryFactory(EventLoopGroup,ByteBufAllocator)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.builder()",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.create(SocketSettings,SslSettings)",1,1,1
"com.mongodb.connection.netty.NettyStreamFactoryFactory.toString()",1,1,1
"com.mongodb.connection.netty.ReadTimeoutHandler.ReadTimeoutHandler(long)",1,1,1
"com.mongodb.connection.netty.ReadTimeoutHandler.ReadTimeoutTask.ReadTimeoutTask(ChannelHandlerContext)",1,1,1
"com.mongodb.connection.netty.ReadTimeoutHandler.ReadTimeoutTask.run()",1,3,3
"com.mongodb.connection.netty.ReadTimeoutHandler.removeTimeout(ChannelHandlerContext)",1,2,2
"com.mongodb.connection.netty.ReadTimeoutHandler.scheduleTimeout(ChannelHandlerContext)",1,2,2
"com.mongodb.diagnostics.logging.JULLogger.JULLogger(String)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.debug(String)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.debug(String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.error(String)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.error(String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.getName()",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.info(String)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.info(String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.isDebugEnabled()",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.isEnabled(Level)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.isErrorEnabled()",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.isInfoEnabled()",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.isTraceEnabled()",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.isWarnEnabled()",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.log(Level,String)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.log(Level,String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.trace(String)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.trace(String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.warn(String)",1,1,1
"com.mongodb.diagnostics.logging.JULLogger.warn(String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.Loggers.Loggers()",1,1,1
"com.mongodb.diagnostics.logging.Loggers.getLogger(String)",3,2,4
"com.mongodb.diagnostics.logging.Loggers.shouldUseSLF4J()",1,1,2
"com.mongodb.diagnostics.logging.SLF4JLogger.SLF4JLogger(String)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.debug(String)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.debug(String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.error(String)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.error(String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.getName()",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.info(String)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.info(String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.isDebugEnabled()",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.isErrorEnabled()",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.isInfoEnabled()",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.isTraceEnabled()",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.isWarnEnabled()",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.trace(String)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.trace(String,Throwable)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.warn(String)",1,1,1
"com.mongodb.diagnostics.logging.SLF4JLogger.warn(String,Throwable)",1,1,1
"com.mongodb.event.ClusterClosedEvent.ClusterClosedEvent(ClusterId)",1,1,1
"com.mongodb.event.ClusterClosedEvent.getClusterId()",1,1,1
"com.mongodb.event.ClusterClosedEvent.toString()",1,1,1
"com.mongodb.event.ClusterDescriptionChangedEvent.ClusterDescriptionChangedEvent(ClusterId,ClusterDescription,ClusterDescription)",1,1,1
"com.mongodb.event.ClusterDescriptionChangedEvent.getClusterId()",1,1,1
"com.mongodb.event.ClusterDescriptionChangedEvent.getNewDescription()",1,1,1
"com.mongodb.event.ClusterDescriptionChangedEvent.getPreviousDescription()",1,1,1
"com.mongodb.event.ClusterDescriptionChangedEvent.toString()",1,1,1
"com.mongodb.event.ClusterEventMulticaster.ClusterEventMulticaster(List<ClusterListener>)",1,1,1
"com.mongodb.event.ClusterEventMulticaster.clusterClosed(ClusterClosedEvent)",1,4,4
"com.mongodb.event.ClusterEventMulticaster.clusterDescriptionChanged(ClusterDescriptionChangedEvent)",1,4,4
"com.mongodb.event.ClusterEventMulticaster.clusterOpening(ClusterOpeningEvent)",1,4,4
"com.mongodb.event.ClusterEventMulticaster.getClusterListeners()",1,1,1
"com.mongodb.event.ClusterListenerAdapter.clusterClosed(ClusterClosedEvent)",1,1,1
"com.mongodb.event.ClusterListenerAdapter.clusterDescriptionChanged(ClusterDescriptionChangedEvent)",1,1,1
"com.mongodb.event.ClusterListenerAdapter.clusterOpening(ClusterOpeningEvent)",1,1,1
"com.mongodb.event.ClusterOpeningEvent.ClusterOpeningEvent(ClusterId)",1,1,1
"com.mongodb.event.ClusterOpeningEvent.getClusterId()",1,1,1
"com.mongodb.event.ClusterOpeningEvent.toString()",1,1,1
"com.mongodb.event.CommandEvent.CommandEvent(int,ConnectionDescription,String)",1,1,1
"com.mongodb.event.CommandEvent.getCommandName()",1,1,1
"com.mongodb.event.CommandEvent.getConnectionDescription()",1,1,1
"com.mongodb.event.CommandEvent.getRequestId()",1,1,1
"com.mongodb.event.CommandEventMulticaster.CommandEventMulticaster(List<CommandListener>)",1,1,1
"com.mongodb.event.CommandEventMulticaster.commandFailed(CommandFailedEvent)",1,4,4
"com.mongodb.event.CommandEventMulticaster.commandStarted(CommandStartedEvent)",1,4,4
"com.mongodb.event.CommandEventMulticaster.commandSucceeded(CommandSucceededEvent)",1,4,4
"com.mongodb.event.CommandEventMulticaster.getCommandListeners()",1,1,1
"com.mongodb.event.CommandFailedEvent.CommandFailedEvent(int,ConnectionDescription,String,long,Throwable)",1,1,1
"com.mongodb.event.CommandFailedEvent.getElapsedTime(TimeUnit)",1,1,1
"com.mongodb.event.CommandFailedEvent.getThrowable()",1,1,1
"com.mongodb.event.CommandListenerMulticaster.CommandListenerMulticaster(List<CommandListener>)",1,1,1
"com.mongodb.event.CommandListenerMulticaster.commandFailed(CommandFailedEvent)",1,1,1
"com.mongodb.event.CommandListenerMulticaster.commandStarted(CommandStartedEvent)",1,1,1
"com.mongodb.event.CommandListenerMulticaster.commandSucceeded(CommandSucceededEvent)",1,1,1
"com.mongodb.event.CommandListenerMulticaster.getCommandListeners()",1,1,1
"com.mongodb.event.CommandStartedEvent.CommandStartedEvent(int,ConnectionDescription,String,String,BsonDocument)",1,1,1
"com.mongodb.event.CommandStartedEvent.getCommand()",1,1,1
"com.mongodb.event.CommandStartedEvent.getDatabaseName()",1,1,1
"com.mongodb.event.CommandSucceededEvent.CommandSucceededEvent(int,ConnectionDescription,String,BsonDocument,long)",1,1,1
"com.mongodb.event.CommandSucceededEvent.getElapsedTime(TimeUnit)",1,1,1
"com.mongodb.event.CommandSucceededEvent.getResponse()",1,1,1
"com.mongodb.event.ConnectionAddedEvent.ConnectionAddedEvent(ConnectionId)",1,1,1
"com.mongodb.event.ConnectionAddedEvent.getConnectionId()",1,1,1
"com.mongodb.event.ConnectionAddedEvent.toString()",1,1,1
"com.mongodb.event.ConnectionCheckedInEvent.ConnectionCheckedInEvent(ConnectionId)",1,1,1
"com.mongodb.event.ConnectionCheckedInEvent.getConnectionId()",1,1,1
"com.mongodb.event.ConnectionCheckedInEvent.toString()",1,1,1
"com.mongodb.event.ConnectionCheckedOutEvent.ConnectionCheckedOutEvent(ConnectionId)",1,1,1
"com.mongodb.event.ConnectionCheckedOutEvent.getConnectionId()",1,1,1
"com.mongodb.event.ConnectionCheckedOutEvent.toString()",1,1,1
"com.mongodb.event.ConnectionClosedEvent.ConnectionClosedEvent(ConnectionId)",1,1,1
"com.mongodb.event.ConnectionClosedEvent.getConnectionId()",1,1,1
"com.mongodb.event.ConnectionClosedEvent.toString()",1,1,1
"com.mongodb.event.ConnectionMessageReceivedEvent.ConnectionMessageReceivedEvent(ConnectionId,int,int)",1,1,1
"com.mongodb.event.ConnectionMessageReceivedEvent.getConnectionId()",1,1,1
"com.mongodb.event.ConnectionMessageReceivedEvent.getResponseTo()",1,1,1
"com.mongodb.event.ConnectionMessageReceivedEvent.getSize()",1,1,1
"com.mongodb.event.ConnectionMessageReceivedEvent.toString()",1,1,1
"com.mongodb.event.ConnectionMessagesSentEvent.ConnectionMessagesSentEvent(ConnectionId,int,int)",1,1,1
"com.mongodb.event.ConnectionMessagesSentEvent.getConnectionId()",1,1,1
"com.mongodb.event.ConnectionMessagesSentEvent.getRequestId()",1,1,1
"com.mongodb.event.ConnectionMessagesSentEvent.getSize()",1,1,1
"com.mongodb.event.ConnectionMessagesSentEvent.toString()",1,1,1
"com.mongodb.event.ConnectionOpenedEvent.ConnectionOpenedEvent(ConnectionId)",1,1,1
"com.mongodb.event.ConnectionOpenedEvent.getConnectionId()",1,1,1
"com.mongodb.event.ConnectionOpenedEvent.toString()",1,1,1
"com.mongodb.event.ConnectionPoolClosedEvent.ConnectionPoolClosedEvent(ServerId)",1,1,1
"com.mongodb.event.ConnectionPoolClosedEvent.getServerId()",1,1,1
"com.mongodb.event.ConnectionPoolClosedEvent.toString()",1,1,1
"com.mongodb.event.ConnectionPoolEventMulticaster.add(ConnectionPoolListener)",1,1,1
"com.mongodb.event.ConnectionPoolEventMulticaster.connectionAdded(ConnectionAddedEvent)",1,2,2
"com.mongodb.event.ConnectionPoolEventMulticaster.connectionCheckedIn(ConnectionCheckedInEvent)",1,2,2
"com.mongodb.event.ConnectionPoolEventMulticaster.connectionCheckedOut(ConnectionCheckedOutEvent)",1,2,2
"com.mongodb.event.ConnectionPoolEventMulticaster.connectionPoolClosed(ConnectionPoolClosedEvent)",1,2,2
"com.mongodb.event.ConnectionPoolEventMulticaster.connectionPoolOpened(ConnectionPoolOpenedEvent)",1,2,2
"com.mongodb.event.ConnectionPoolEventMulticaster.connectionRemoved(ConnectionRemovedEvent)",1,2,2
"com.mongodb.event.ConnectionPoolEventMulticaster.remove(ConnectionPoolListener)",1,1,1
"com.mongodb.event.ConnectionPoolEventMulticaster.waitQueueEntered(ConnectionPoolWaitQueueEnteredEvent)",1,2,2
"com.mongodb.event.ConnectionPoolEventMulticaster.waitQueueExited(ConnectionPoolWaitQueueExitedEvent)",1,2,2
"com.mongodb.event.ConnectionPoolListenerAdapter.connectionAdded(ConnectionAddedEvent)",1,1,1
"com.mongodb.event.ConnectionPoolListenerAdapter.connectionCheckedIn(ConnectionCheckedInEvent)",1,1,1
"com.mongodb.event.ConnectionPoolListenerAdapter.connectionCheckedOut(ConnectionCheckedOutEvent)",1,1,1
"com.mongodb.event.ConnectionPoolListenerAdapter.connectionPoolClosed(ConnectionPoolClosedEvent)",1,1,1
"com.mongodb.event.ConnectionPoolListenerAdapter.connectionPoolOpened(ConnectionPoolOpenedEvent)",1,1,1
"com.mongodb.event.ConnectionPoolListenerAdapter.connectionRemoved(ConnectionRemovedEvent)",1,1,1
"com.mongodb.event.ConnectionPoolListenerAdapter.waitQueueEntered(ConnectionPoolWaitQueueEnteredEvent)",1,1,1
"com.mongodb.event.ConnectionPoolListenerAdapter.waitQueueExited(ConnectionPoolWaitQueueExitedEvent)",1,1,1
"com.mongodb.event.ConnectionPoolOpenedEvent.ConnectionPoolOpenedEvent(ServerId,ConnectionPoolSettings)",1,1,1
"com.mongodb.event.ConnectionPoolOpenedEvent.getServerId()",1,1,1
"com.mongodb.event.ConnectionPoolOpenedEvent.getSettings()",1,1,1
"com.mongodb.event.ConnectionPoolOpenedEvent.toString()",1,1,1
"com.mongodb.event.ConnectionPoolWaitQueueEnteredEvent.ConnectionPoolWaitQueueEnteredEvent(ServerId)",1,1,1
"com.mongodb.event.ConnectionPoolWaitQueueEnteredEvent.getServerId()",1,1,1
"com.mongodb.event.ConnectionPoolWaitQueueEnteredEvent.toString()",1,1,1
"com.mongodb.event.ConnectionPoolWaitQueueExitedEvent.ConnectionPoolWaitQueueExitedEvent(ServerId)",1,1,1
"com.mongodb.event.ConnectionPoolWaitQueueExitedEvent.getServerId()",1,1,1
"com.mongodb.event.ConnectionPoolWaitQueueExitedEvent.toString()",1,1,1
"com.mongodb.event.ConnectionRemovedEvent.ConnectionRemovedEvent(ConnectionId)",1,1,1
"com.mongodb.event.ConnectionRemovedEvent.getConnectionId()",1,1,1
"com.mongodb.event.ConnectionRemovedEvent.toString()",1,1,1
"com.mongodb.event.ServerClosedEvent.ServerClosedEvent(ServerId)",1,1,1
"com.mongodb.event.ServerClosedEvent.getServerId()",1,1,1
"com.mongodb.event.ServerClosedEvent.toString()",1,1,1
"com.mongodb.event.ServerDescriptionChangedEvent.ServerDescriptionChangedEvent(ServerId,ServerDescription,ServerDescription)",1,1,1
"com.mongodb.event.ServerDescriptionChangedEvent.getNewDescription()",1,1,1
"com.mongodb.event.ServerDescriptionChangedEvent.getPreviousDescription()",1,1,1
"com.mongodb.event.ServerDescriptionChangedEvent.getServerId()",1,1,1
"com.mongodb.event.ServerDescriptionChangedEvent.toString()",1,1,1
"com.mongodb.event.ServerEventMulticaster.ServerEventMulticaster(List<ServerListener>)",1,1,1
"com.mongodb.event.ServerEventMulticaster.getServerListeners()",1,1,1
"com.mongodb.event.ServerEventMulticaster.serverClosed(ServerClosedEvent)",1,4,4
"com.mongodb.event.ServerEventMulticaster.serverDescriptionChanged(ServerDescriptionChangedEvent)",1,4,4
"com.mongodb.event.ServerEventMulticaster.serverOpening(ServerOpeningEvent)",1,4,4
"com.mongodb.event.ServerHeartbeatFailedEvent.ServerHeartbeatFailedEvent(ConnectionId,long,Throwable)",1,1,1
"com.mongodb.event.ServerHeartbeatFailedEvent.getConnectionId()",1,1,1
"com.mongodb.event.ServerHeartbeatFailedEvent.getElapsedTime(TimeUnit)",1,1,1
"com.mongodb.event.ServerHeartbeatFailedEvent.getThrowable()",1,1,1
"com.mongodb.event.ServerHeartbeatFailedEvent.toString()",1,1,1
"com.mongodb.event.ServerHeartbeatStartedEvent.ServerHeartbeatStartedEvent(ConnectionId)",1,1,1
"com.mongodb.event.ServerHeartbeatStartedEvent.getConnectionId()",1,1,1
"com.mongodb.event.ServerHeartbeatStartedEvent.toString()",1,1,1
"com.mongodb.event.ServerHeartbeatSucceededEvent.ServerHeartbeatSucceededEvent(ConnectionId,BsonDocument,long)",1,1,1
"com.mongodb.event.ServerHeartbeatSucceededEvent.getConnectionId()",1,1,1
"com.mongodb.event.ServerHeartbeatSucceededEvent.getElapsedTime(TimeUnit)",1,1,1
"com.mongodb.event.ServerHeartbeatSucceededEvent.getReply()",1,1,1
"com.mongodb.event.ServerHeartbeatSucceededEvent.toString()",1,1,1
"com.mongodb.event.ServerListenerAdapter.serverClosed(ServerClosedEvent)",1,1,1
"com.mongodb.event.ServerListenerAdapter.serverDescriptionChanged(ServerDescriptionChangedEvent)",1,1,1
"com.mongodb.event.ServerListenerAdapter.serverOpening(ServerOpeningEvent)",1,1,1
"com.mongodb.event.ServerMonitorEventMulticaster.ServerMonitorEventMulticaster(List<ServerMonitorListener>)",1,1,1
"com.mongodb.event.ServerMonitorEventMulticaster.getServerMonitorListeners()",1,1,1
"com.mongodb.event.ServerMonitorEventMulticaster.serverHearbeatStarted(ServerHeartbeatStartedEvent)",1,4,4
"com.mongodb.event.ServerMonitorEventMulticaster.serverHeartbeatFailed(ServerHeartbeatFailedEvent)",1,4,4
"com.mongodb.event.ServerMonitorEventMulticaster.serverHeartbeatSucceeded(ServerHeartbeatSucceededEvent)",1,4,4
"com.mongodb.event.ServerMonitorListenerAdapter.serverHearbeatStarted(ServerHeartbeatStartedEvent)",1,1,1
"com.mongodb.event.ServerMonitorListenerAdapter.serverHeartbeatFailed(ServerHeartbeatFailedEvent)",1,1,1
"com.mongodb.event.ServerMonitorListenerAdapter.serverHeartbeatSucceeded(ServerHeartbeatSucceededEvent)",1,1,1
"com.mongodb.event.ServerOpeningEvent.ServerOpeningEvent(ServerId)",1,1,1
"com.mongodb.event.ServerOpeningEvent.getServerId()",1,1,1
"com.mongodb.event.ServerOpeningEvent.toString()",1,1,1
"com.mongodb.gridfs.CLI.getGridFS()",1,2,2
"com.mongodb.gridfs.CLI.getMongo()",1,1,2
"com.mongodb.gridfs.CLI.main(String[])",14,12,15
"com.mongodb.gridfs.CLI.printUsage()",1,1,1
"com.mongodb.gridfs.GridFS.GridFS(DB)",1,1,1
"com.mongodb.gridfs.GridFS.GridFS(DB,String)",1,3,4
"com.mongodb.gridfs.GridFS.createFile()",1,1,1
"com.mongodb.gridfs.GridFS.createFile(File)",1,1,1
"com.mongodb.gridfs.GridFS.createFile(InputStream)",1,1,1
"com.mongodb.gridfs.GridFS.createFile(InputStream,String)",1,1,1
"com.mongodb.gridfs.GridFS.createFile(InputStream,String,boolean)",1,1,1
"com.mongodb.gridfs.GridFS.createFile(InputStream,boolean)",1,1,1
"com.mongodb.gridfs.GridFS.createFile(String)",1,1,1
"com.mongodb.gridfs.GridFS.createFile(byte[])",1,1,1
"com.mongodb.gridfs.GridFS.find(DBObject)",1,1,1
"com.mongodb.gridfs.GridFS.find(DBObject,DBObject)",1,3,3
"com.mongodb.gridfs.GridFS.find(ObjectId)",1,1,1
"com.mongodb.gridfs.GridFS.find(String)",1,1,1
"com.mongodb.gridfs.GridFS.find(String,DBObject)",1,1,1
"com.mongodb.gridfs.GridFS.findOne(DBObject)",1,1,1
"com.mongodb.gridfs.GridFS.findOne(ObjectId)",1,1,1
"com.mongodb.gridfs.GridFS.findOne(String)",1,1,1
"com.mongodb.gridfs.GridFS.getBucketName()",1,1,1
"com.mongodb.gridfs.GridFS.getChunksCollection()",1,1,1
"com.mongodb.gridfs.GridFS.getDB()",1,1,1
"com.mongodb.gridfs.GridFS.getFileList()",1,1,1
"com.mongodb.gridfs.GridFS.getFileList(DBObject)",1,1,1
"com.mongodb.gridfs.GridFS.getFileList(DBObject,DBObject)",1,1,1
"com.mongodb.gridfs.GridFS.getFilesCollection()",1,1,1
"com.mongodb.gridfs.GridFS.injectGridFSInstance(Object)",3,1,3
"com.mongodb.gridfs.GridFS.remove(DBObject)",2,2,3
"com.mongodb.gridfs.GridFS.remove(ObjectId)",2,1,2
"com.mongodb.gridfs.GridFS.remove(String)",2,1,2
"com.mongodb.gridfs.GridFSDBFile.GridFSInputStream.GridFSInputStream()",1,1,1
"com.mongodb.gridfs.GridFSDBFile.GridFSInputStream.available()",2,1,2
"com.mongodb.gridfs.GridFSDBFile.GridFSInputStream.read()",2,1,2
"com.mongodb.gridfs.GridFSDBFile.GridFSInputStream.read(byte[])",1,1,1
"com.mongodb.gridfs.GridFSDBFile.GridFSInputStream.read(byte[],int,int)",3,2,4
"com.mongodb.gridfs.GridFSDBFile.GridFSInputStream.skip(long)",4,2,6
"com.mongodb.gridfs.GridFSDBFile.getChunk(int)",3,1,3
"com.mongodb.gridfs.GridFSDBFile.getInputStream()",1,1,1
"com.mongodb.gridfs.GridFSDBFile.remove()",1,1,1
"com.mongodb.gridfs.GridFSDBFile.writeTo(File)",1,2,2
"com.mongodb.gridfs.GridFSDBFile.writeTo(OutputStream)",1,2,2
"com.mongodb.gridfs.GridFSDBFile.writeTo(String)",1,1,1
"com.mongodb.gridfs.GridFSFile.containsField(String)",1,1,1
"com.mongodb.gridfs.GridFSFile.containsKey(String)",1,1,1
"com.mongodb.gridfs.GridFSFile.get(String)",9,8,9
"com.mongodb.gridfs.GridFSFile.getAliases()",1,1,1
"com.mongodb.gridfs.GridFSFile.getChunkSize()",1,1,1
"com.mongodb.gridfs.GridFSFile.getContentType()",1,1,1
"com.mongodb.gridfs.GridFSFile.getFilename()",1,1,1
"com.mongodb.gridfs.GridFSFile.getGridFS()",1,1,1
"com.mongodb.gridfs.GridFSFile.getId()",1,1,1
"com.mongodb.gridfs.GridFSFile.getLength()",1,1,1
"com.mongodb.gridfs.GridFSFile.getMD5()",1,1,1
"com.mongodb.gridfs.GridFSFile.getMetaData()",1,1,1
"com.mongodb.gridfs.GridFSFile.getUploadDate()",1,1,1
"com.mongodb.gridfs.GridFSFile.isPartialObject()",1,1,1
"com.mongodb.gridfs.GridFSFile.keySet()",1,1,1
"com.mongodb.gridfs.GridFSFile.markAsPartialObject()",1,1,1
"com.mongodb.gridfs.GridFSFile.numChunks()",1,1,1
"com.mongodb.gridfs.GridFSFile.put(String,Object)",2,10,10
"com.mongodb.gridfs.GridFSFile.putAll(BSONObject)",1,1,1
"com.mongodb.gridfs.GridFSFile.putAll(Map)",1,1,1
"com.mongodb.gridfs.GridFSFile.removeField(String)",1,1,1
"com.mongodb.gridfs.GridFSFile.save()",2,1,2
"com.mongodb.gridfs.GridFSFile.setGridFS(GridFS)",1,1,1
"com.mongodb.gridfs.GridFSFile.setMetaData(DBObject)",1,1,1
"com.mongodb.gridfs.GridFSFile.toMap()",1,1,1
"com.mongodb.gridfs.GridFSFile.toString()",1,1,1
"com.mongodb.gridfs.GridFSFile.validate()",5,3,6
"com.mongodb.gridfs.GridFSInputFile.GridFSInputFile(GridFS)",1,1,1
"com.mongodb.gridfs.GridFSInputFile.GridFSInputFile(GridFS,InputStream,String)",1,1,1
"com.mongodb.gridfs.GridFSInputFile.GridFSInputFile(GridFS,InputStream,String,boolean)",1,1,2
"com.mongodb.gridfs.GridFSInputFile.GridFSInputFile(GridFS,String)",1,1,1
"com.mongodb.gridfs.GridFSInputFile.GridFSOutputStream.close()",1,1,1
"com.mongodb.gridfs.GridFSInputFile.GridFSOutputStream.write(byte[],int,int)",1,3,4
"com.mongodb.gridfs.GridFSInputFile.GridFSOutputStream.write(int)",1,1,1
"com.mongodb.gridfs.GridFSInputFile._readStream2Buffer()",4,2,5
"com.mongodb.gridfs.GridFSInputFile.createChunk(Object,int,byte[])",1,1,1
"com.mongodb.gridfs.GridFSInputFile.dumpBuffer(boolean)",3,2,5
"com.mongodb.gridfs.GridFSInputFile.finishData()",1,3,5
"com.mongodb.gridfs.GridFSInputFile.getOutputStream()",1,1,2
"com.mongodb.gridfs.GridFSInputFile.save()",1,1,1
"com.mongodb.gridfs.GridFSInputFile.save(long)",3,2,4
"com.mongodb.gridfs.GridFSInputFile.saveChunks()",1,1,1
"com.mongodb.gridfs.GridFSInputFile.saveChunks(long)",4,2,6
"com.mongodb.gridfs.GridFSInputFile.setChunkSize(long)",2,1,3
"com.mongodb.gridfs.GridFSInputFile.setContentType(String)",1,1,1
"com.mongodb.gridfs.GridFSInputFile.setFilename(String)",1,1,1
"com.mongodb.gridfs.GridFSInputFile.setId(Object)",1,1,1
"com.mongodb.internal.HexUtils.hexMD5(ByteBuffer,int,int)",1,2,2
"com.mongodb.internal.HexUtils.hexMD5(byte[])",1,1,2
"com.mongodb.internal.HexUtils.toHex(byte[])",1,3,3
"com.mongodb.internal.async.ErrorHandlingResultCallback.ErrorHandlingResultCallback(SingleResultCallback<T>,Logger)",1,1,1
"com.mongodb.internal.async.ErrorHandlingResultCallback.errorHandlingCallback(SingleResultCallback<T>,Logger)",2,1,2
"com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(T,Throwable)",1,2,2
"com.mongodb.internal.authentication.NativeAuthenticationHelper.NativeAuthenticationHelper()",1,1,1
"com.mongodb.internal.authentication.NativeAuthenticationHelper.createAuthenticationHash(String,char[])",1,1,2
"com.mongodb.internal.authentication.NativeAuthenticationHelper.getAuthCommand(String,String,String)",1,1,1
"com.mongodb.internal.authentication.NativeAuthenticationHelper.getAuthCommand(String,char[],String)",1,1,1
"com.mongodb.internal.authentication.NativeAuthenticationHelper.getNonceCommand()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.CLDIterator.hasNext()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.CLDIterator.next()",2,1,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.CLDIterator.remove()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.CLDIterator.reportingRemove()",2,3,4
"com.mongodb.internal.connection.ConcurrentLinkedDeque.ConcurrentLinkedDeque()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.ConcurrentLinkedDeque(Collection<? extends E>)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.Node(E,Node<E>,Node<E>)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.Node(Node<E>)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.append(E)",4,4,5
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.back()",1,2,3
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.casNext(Node<E>,Node<E>)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.delete()",2,6,6
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.findPredecessorOf(Node<E>)",4,2,4
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.forward()",1,2,3
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.getNext()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.getPrev()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.isDeleted()",1,2,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.isHeader()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.isMarker()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.isSpecial()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.isTrailer()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.nextNonmarker()",1,3,3
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.predecessor()",6,5,7
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.prepend(E)",4,3,4
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.replace(E)",4,5,6
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.setNext(Node<E>)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.setPrev(Node<E>)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node.successor()",4,6,7
"com.mongodb.internal.connection.ConcurrentLinkedDeque.add(E)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.addAll(Collection<? extends E>)",2,2,3
"com.mongodb.internal.connection.ConcurrentLinkedDeque.addFirst(E)",1,1,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.addLast(E)",1,1,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.checkNotNull(Object)",2,1,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.clear()",1,1,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.contains(Object)",4,2,4
"com.mongodb.internal.connection.ConcurrentLinkedDeque.descendingIterator()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.element()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.getFirst()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.getLast()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.isEmpty()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.iterator()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.offer(E)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.offerFirst(E)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.offerLast(E)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.peek()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.peekFirst()",1,1,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.peekLast()",1,1,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.poll()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.pollFirst()",4,2,4
"com.mongodb.internal.connection.ConcurrentLinkedDeque.pollLast()",4,2,4
"com.mongodb.internal.connection.ConcurrentLinkedDeque.pop()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.push(E)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.remove()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.remove(Object)",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.removeFirst()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.removeFirstOccurrence(Object)",6,4,6
"com.mongodb.internal.connection.ConcurrentLinkedDeque.removeLast()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.removeLastOccurrence(Object)",7,6,9
"com.mongodb.internal.connection.ConcurrentLinkedDeque.screenNullResult(E)",2,1,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.size()",1,1,3
"com.mongodb.internal.connection.ConcurrentLinkedDeque.toArray()",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.toArray(T[])",1,1,1
"com.mongodb.internal.connection.ConcurrentLinkedDeque.toArrayList()",1,2,2
"com.mongodb.internal.connection.ConcurrentLinkedDeque.usable(Node<?>)",1,2,2
"com.mongodb.internal.connection.ConcurrentPool.ConcurrentPool(int,ItemFactory<T>)",1,1,1
"com.mongodb.internal.connection.ConcurrentPool.acquirePermit(long,TimeUnit)",3,3,4
"com.mongodb.internal.connection.ConcurrentPool.close()",1,2,2
"com.mongodb.internal.connection.ConcurrentPool.close(T)",1,1,2
"com.mongodb.internal.connection.ConcurrentPool.createNewAndReleasePermitIfFailure(boolean)",2,2,3
"com.mongodb.internal.connection.ConcurrentPool.ensureMinSize(int,boolean)",3,2,3
"com.mongodb.internal.connection.ConcurrentPool.get()",1,1,1
"com.mongodb.internal.connection.ConcurrentPool.get(long,TimeUnit)",3,3,4
"com.mongodb.internal.connection.ConcurrentPool.getAvailableCount()",1,1,1
"com.mongodb.internal.connection.ConcurrentPool.getCount()",1,1,1
"com.mongodb.internal.connection.ConcurrentPool.getInUseCount()",1,1,1
"com.mongodb.internal.connection.ConcurrentPool.getMaxSize()",1,1,1
"com.mongodb.internal.connection.ConcurrentPool.prune()",3,4,5
"com.mongodb.internal.connection.ConcurrentPool.release(T)",1,1,1
"com.mongodb.internal.connection.ConcurrentPool.release(T,boolean)",3,3,4
"com.mongodb.internal.connection.ConcurrentPool.releasePermit()",1,1,1
"com.mongodb.internal.connection.ConcurrentPool.toString()",1,1,1
"com.mongodb.internal.connection.IndexMap.HashBased.HashBased(int,int)",1,2,2
"com.mongodb.internal.connection.IndexMap.HashBased.add(int,int)",1,1,1
"com.mongodb.internal.connection.IndexMap.HashBased.map(int)",2,1,2
"com.mongodb.internal.connection.IndexMap.RangeBased.RangeBased()",1,1,1
"com.mongodb.internal.connection.IndexMap.RangeBased.RangeBased(int,int)",1,1,1
"com.mongodb.internal.connection.IndexMap.RangeBased.add(int,int)",3,3,3
"com.mongodb.internal.connection.IndexMap.RangeBased.map(int)",3,1,3
"com.mongodb.internal.connection.IndexMap.create()",1,1,1
"com.mongodb.internal.connection.IndexMap.create(int,int)",1,1,1
"com.mongodb.internal.connection.Java8SniSslHelper.Java8SniSslHelper()",1,1,1
"com.mongodb.internal.connection.Java8SniSslHelper.enableSni(ServerAddress,SSLParameters)",1,1,2
"com.mongodb.internal.connection.NoOpSessionContext.NoOpSessionContext()",1,1,1
"com.mongodb.internal.connection.NoOpSessionContext.advanceClusterTime(BsonDocument)",1,1,1
"com.mongodb.internal.connection.NoOpSessionContext.advanceOperationTime(BsonTimestamp)",1,1,1
"com.mongodb.internal.connection.NoOpSessionContext.advanceTransactionNumber()",1,1,1
"com.mongodb.internal.connection.NoOpSessionContext.getClusterTime()",1,1,1
"com.mongodb.internal.connection.NoOpSessionContext.getOperationTime()",1,1,1
"com.mongodb.internal.connection.NoOpSessionContext.getSessionId()",1,1,1
"com.mongodb.internal.connection.NoOpSessionContext.hasSession()",1,1,1
"com.mongodb.internal.connection.NoOpSessionContext.isCausallyConsistent()",1,1,1
"com.mongodb.internal.connection.PowerOfTwoBufferPool.PooledByteBufNIO.PooledByteBufNIO(ByteBuffer)",1,1,1
"com.mongodb.internal.connection.PowerOfTwoBufferPool.PooledByteBufNIO.release()",1,2,2
"com.mongodb.internal.connection.PowerOfTwoBufferPool.PowerOfTwoBufferPool()",1,1,1
"com.mongodb.internal.connection.PowerOfTwoBufferPool.PowerOfTwoBufferPool(int)",1,2,2
"com.mongodb.internal.connection.PowerOfTwoBufferPool.createNew(int)",1,1,1
"com.mongodb.internal.connection.PowerOfTwoBufferPool.getBuffer(int)",1,2,2
"com.mongodb.internal.connection.PowerOfTwoBufferPool.log2(int)",1,1,1
"com.mongodb.internal.connection.PowerOfTwoBufferPool.release(ByteBuffer)",1,2,2
"com.mongodb.internal.connection.PowerOfTwoBufferPool.roundUpToNextHighestPowerOfTwo(int)",1,1,1
"com.mongodb.internal.connection.SslHelper.SslHelper()",1,1,1
"com.mongodb.internal.connection.SslHelper.enableHostNameVerification(SSLParameters)",1,1,1
"com.mongodb.internal.connection.SslHelper.enableSni(ServerAddress,SSLParameters)",1,2,2
"com.mongodb.internal.event.ClusterListenerMulticaster.ClusterListenerMulticaster(List<ClusterListener>)",1,1,1
"com.mongodb.internal.event.ClusterListenerMulticaster.clusterClosed(ClusterClosedEvent)",1,4,4
"com.mongodb.internal.event.ClusterListenerMulticaster.clusterDescriptionChanged(ClusterDescriptionChangedEvent)",1,4,4
"com.mongodb.internal.event.ClusterListenerMulticaster.clusterOpening(ClusterOpeningEvent)",1,4,4
"com.mongodb.internal.event.CommandListenerMulticaster.CommandListenerMulticaster(List<CommandListener>)",1,1,1
"com.mongodb.internal.event.CommandListenerMulticaster.commandFailed(CommandFailedEvent)",1,4,4
"com.mongodb.internal.event.CommandListenerMulticaster.commandStarted(CommandStartedEvent)",1,4,4
"com.mongodb.internal.event.CommandListenerMulticaster.commandSucceeded(CommandSucceededEvent)",1,4,4
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster.ConnectionPoolListenerMulticaster(List<ConnectionPoolListener>)",1,1,1
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster.connectionAdded(ConnectionAddedEvent)",1,4,4
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster.connectionCheckedIn(ConnectionCheckedInEvent)",1,4,4
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster.connectionCheckedOut(ConnectionCheckedOutEvent)",1,4,4
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster.connectionPoolClosed(ConnectionPoolClosedEvent)",1,4,4
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster.connectionPoolOpened(ConnectionPoolOpenedEvent)",1,4,4
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster.connectionRemoved(ConnectionRemovedEvent)",1,4,4
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster.waitQueueEntered(ConnectionPoolWaitQueueEnteredEvent)",1,4,4
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster.waitQueueExited(ConnectionPoolWaitQueueExitedEvent)",1,4,4
"com.mongodb.internal.event.EventListenerHelper.EventListenerHelper()",1,1,1
"com.mongodb.internal.event.EventListenerHelper.createServerListener(ServerSettings,ServerListener)",4,4,5
"com.mongodb.internal.event.EventListenerHelper.getClusterListener(ClusterSettings)",4,3,4
"com.mongodb.internal.event.EventListenerHelper.getCommandListener(List<CommandListener>)",4,3,4
"com.mongodb.internal.event.EventListenerHelper.getConnectionPoolListener(ConnectionPoolSettings)",4,3,4
"com.mongodb.internal.event.EventListenerHelper.getServerMonitorListener(ServerSettings)",4,3,4
"com.mongodb.internal.event.ServerListenerMulticaster.ServerListenerMulticaster(List<ServerListener>)",1,1,1
"com.mongodb.internal.event.ServerListenerMulticaster.serverClosed(ServerClosedEvent)",1,4,4
"com.mongodb.internal.event.ServerListenerMulticaster.serverDescriptionChanged(ServerDescriptionChangedEvent)",1,4,4
"com.mongodb.internal.event.ServerListenerMulticaster.serverOpening(ServerOpeningEvent)",1,4,4
"com.mongodb.internal.event.ServerMonitorListenerMulticaster.ServerMonitorListenerMulticaster(List<ServerMonitorListener>)",1,1,1
"com.mongodb.internal.event.ServerMonitorListenerMulticaster.serverHearbeatStarted(ServerHeartbeatStartedEvent)",1,4,4
"com.mongodb.internal.event.ServerMonitorListenerMulticaster.serverHeartbeatFailed(ServerHeartbeatFailedEvent)",1,4,4
"com.mongodb.internal.event.ServerMonitorListenerMulticaster.serverHeartbeatSucceeded(ServerHeartbeatSucceededEvent)",1,4,4
"com.mongodb.internal.management.jmx.JMXMBeanServer.registerMBean(Object,String)",1,2,2
"com.mongodb.internal.management.jmx.JMXMBeanServer.unregisterMBean(String)",1,3,3
"com.mongodb.internal.thread.DaemonThreadFactory.DaemonThreadFactory(String)",1,1,1
"com.mongodb.internal.thread.DaemonThreadFactory.newThread(Runnable)",1,1,1
"com.mongodb.internal.validator.CollectibleDocumentFieldNameValidator.getValidatorForField(String)",1,1,1
"com.mongodb.internal.validator.CollectibleDocumentFieldNameValidator.validate(String)",4,2,5
"com.mongodb.internal.validator.MappedFieldNameValidator.MappedFieldNameValidator(FieldNameValidator,Map<String, FieldNameValidator>)",1,1,1
"com.mongodb.internal.validator.MappedFieldNameValidator.getValidatorForField(String)",2,2,2
"com.mongodb.internal.validator.MappedFieldNameValidator.validate(String)",1,1,1
"com.mongodb.internal.validator.NoOpFieldNameValidator.getValidatorForField(String)",1,1,1
"com.mongodb.internal.validator.NoOpFieldNameValidator.validate(String)",1,1,1
"com.mongodb.internal.validator.UpdateFieldNameValidator.getValidatorForField(String)",1,1,1
"com.mongodb.internal.validator.UpdateFieldNameValidator.validate(String)",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.ConnectionPoolStatistics(ConnectionPoolOpenedEvent)",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.connectionAdded(ConnectionAddedEvent)",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.connectionCheckedIn(ConnectionCheckedInEvent)",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.connectionCheckedOut(ConnectionCheckedOutEvent)",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.connectionRemoved(ConnectionRemovedEvent)",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.getCheckedOutCount()",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.getHost()",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.getMaxSize()",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.getMinSize()",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.getPort()",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.getSize()",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.getWaitQueueSize()",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.waitQueueEntered(ConnectionPoolWaitQueueEnteredEvent)",1,1,1
"com.mongodb.management.ConnectionPoolStatistics.waitQueueExited(ConnectionPoolWaitQueueExitedEvent)",1,1,1
"com.mongodb.management.JMXConnectionPoolListener.connectionAdded(ConnectionAddedEvent)",1,2,2
"com.mongodb.management.JMXConnectionPoolListener.connectionCheckedIn(ConnectionCheckedInEvent)",1,2,2
"com.mongodb.management.JMXConnectionPoolListener.connectionCheckedOut(ConnectionCheckedOutEvent)",1,2,2
"com.mongodb.management.JMXConnectionPoolListener.connectionPoolClosed(ConnectionPoolClosedEvent)",1,1,1
"com.mongodb.management.JMXConnectionPoolListener.connectionPoolOpened(ConnectionPoolOpenedEvent)",1,1,1
"com.mongodb.management.JMXConnectionPoolListener.connectionRemoved(ConnectionRemovedEvent)",1,2,2
"com.mongodb.management.JMXConnectionPoolListener.containsQuotableCharacter(String)",4,3,5
"com.mongodb.management.JMXConnectionPoolListener.ensureValidValue(String)",2,2,2
"com.mongodb.management.JMXConnectionPoolListener.getMBean(ServerId)",1,1,1
"com.mongodb.management.JMXConnectionPoolListener.getMBeanObjectName(ServerId)",1,2,2
"com.mongodb.management.JMXConnectionPoolListener.getStatistics(ConnectionId)",1,1,1
"com.mongodb.management.JMXConnectionPoolListener.getStatistics(ServerId)",1,1,1
"com.mongodb.management.JMXConnectionPoolListener.waitQueueEntered(ConnectionPoolWaitQueueEnteredEvent)",1,2,2
"com.mongodb.management.JMXConnectionPoolListener.waitQueueExited(ConnectionPoolWaitQueueExitedEvent)",1,2,2
"com.mongodb.management.MBeanServerFactory.MBeanServerFactory()",1,1,1
"com.mongodb.management.MBeanServerFactory.getMBeanServer()",1,1,1
"com.mongodb.management.NullMBeanServer.registerMBean(Object,String)",1,1,1
"com.mongodb.management.NullMBeanServer.unregisterMBean(String)",1,1,1
"com.mongodb.operation.AggregateExplainOperation.AggregateExplainOperation(MongoNamespace,List<BsonDocument>)",1,1,1
"com.mongodb.operation.AggregateExplainOperation.allowDiskUse(Boolean)",1,1,1
"com.mongodb.operation.AggregateExplainOperation.collation(Collation)",1,1,1
"com.mongodb.operation.AggregateExplainOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.AggregateExplainOperation.executeAsync(AsyncReadBinding,SingleResultCallback<BsonDocument>)",1,3,3
"com.mongodb.operation.AggregateExplainOperation.getCommand()",1,5,5
"com.mongodb.operation.AggregateExplainOperation.getHint()",1,1,1
"com.mongodb.operation.AggregateExplainOperation.hint(BsonDocument)",1,1,1
"com.mongodb.operation.AggregateExplainOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.AggregateOperation.AggregateOperation(MongoNamespace,List<BsonDocument>,Decoder<T>)",1,1,1
"com.mongodb.operation.AggregateOperation.allowDiskUse(Boolean)",1,1,1
"com.mongodb.operation.AggregateOperation.asExplainableOperation(ExplainVerbosity)",1,1,1
"com.mongodb.operation.AggregateOperation.asExplainableOperationAsync(ExplainVerbosity)",1,1,1
"com.mongodb.operation.AggregateOperation.asyncTransformer(AsyncConnectionSource,AsyncConnection)",1,1,2
"com.mongodb.operation.AggregateOperation.batchSize(Integer)",1,1,1
"com.mongodb.operation.AggregateOperation.collation(Collation)",1,1,1
"com.mongodb.operation.AggregateOperation.comment(String)",1,1,1
"com.mongodb.operation.AggregateOperation.createQueryResult(BsonDocument,ConnectionDescription)",2,3,3
"com.mongodb.operation.AggregateOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.AggregateOperation.executeAsync(AsyncReadBinding,SingleResultCallback<AsyncBatchCursor<T>>)",1,3,3
"com.mongodb.operation.AggregateOperation.getAllowDiskUse()",1,1,1
"com.mongodb.operation.AggregateOperation.getBatchSize()",1,1,1
"com.mongodb.operation.AggregateOperation.getCollation()",1,1,1
"com.mongodb.operation.AggregateOperation.getCommand(ConnectionDescription,SessionContext)",1,8,8
"com.mongodb.operation.AggregateOperation.getComment()",1,1,1
"com.mongodb.operation.AggregateOperation.getHint()",1,1,1
"com.mongodb.operation.AggregateOperation.getMaxAwaitTime(TimeUnit)",1,1,1
"com.mongodb.operation.AggregateOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.AggregateOperation.getPipeline()",1,1,1
"com.mongodb.operation.AggregateOperation.getReadConcern()",1,1,1
"com.mongodb.operation.AggregateOperation.getUseCursor()",1,1,1
"com.mongodb.operation.AggregateOperation.hint(BsonDocument)",1,1,1
"com.mongodb.operation.AggregateOperation.isInline(ConnectionDescription)",1,2,3
"com.mongodb.operation.AggregateOperation.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.AggregateOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.AggregateOperation.readConcern(ReadConcern)",1,1,1
"com.mongodb.operation.AggregateOperation.toString()",1,1,1
"com.mongodb.operation.AggregateOperation.transformer(ConnectionSource,Connection)",1,1,2
"com.mongodb.operation.AggregateOperation.useCursor(Boolean)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.AggregateToCollectionOperation(MongoNamespace,List<BsonDocument>)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.AggregateToCollectionOperation(MongoNamespace,List<BsonDocument>,WriteConcern)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.allowDiskUse(Boolean)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.asExplainableOperation(ExplainVerbosity)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.collation(Collation)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.comment(String)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.execute(WriteBinding)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,3,3
"com.mongodb.operation.AggregateToCollectionOperation.getAllowDiskUse()",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.getBypassDocumentValidation()",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.getCollation()",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.getCommand(ConnectionDescription)",1,9,9
"com.mongodb.operation.AggregateToCollectionOperation.getComment()",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.getHint()",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.getPipeline()",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.hint(BsonDocument)",1,1,1
"com.mongodb.operation.AggregateToCollectionOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.AsyncChangeStreamBatchCursor.AsyncChangeStreamBatchCursor(ChangeStreamOperation<T>,AsyncBatchCursor<RawBsonDocument>,AsyncReadBinding)",1,1,1
"com.mongodb.operation.AsyncChangeStreamBatchCursor.close()",1,1,1
"com.mongodb.operation.AsyncChangeStreamBatchCursor.convertResultsCallback(SingleResultCallback<List<T>>)",5,5,5
"com.mongodb.operation.AsyncChangeStreamBatchCursor.getBatchSize()",1,1,1
"com.mongodb.operation.AsyncChangeStreamBatchCursor.getWrapped()",1,1,1
"com.mongodb.operation.AsyncChangeStreamBatchCursor.isClosed()",1,1,1
"com.mongodb.operation.AsyncChangeStreamBatchCursor.next(SingleResultCallback<List<T>>)",1,1,1
"com.mongodb.operation.AsyncChangeStreamBatchCursor.resumeableOperation(AsyncBlock,SingleResultCallback<List<RawBsonDocument>>)",1,3,5
"com.mongodb.operation.AsyncChangeStreamBatchCursor.retryOperation(AsyncBlock,SingleResultCallback<List<RawBsonDocument>>)",1,2,2
"com.mongodb.operation.AsyncChangeStreamBatchCursor.setBatchSize(int)",1,1,1
"com.mongodb.operation.AsyncChangeStreamBatchCursor.tryNext(SingleResultCallback<List<T>>)",1,1,1
"com.mongodb.operation.AsyncQueryBatchCursor.AsyncQueryBatchCursor(QueryResult<T>,int,int,long,Decoder<T>,AsyncConnectionSource,AsyncConnection)",1,3,3
"com.mongodb.operation.AsyncQueryBatchCursor.CommandResultSingleResultCallback.CommandResultSingleResultCallback(AsyncConnection,ServerCursor,SingleResultCallback<List<T>>,boolean)",1,1,1
"com.mongodb.operation.AsyncQueryBatchCursor.CommandResultSingleResultCallback.onResult(BsonDocument,Throwable)",1,3,3
"com.mongodb.operation.AsyncQueryBatchCursor.QueryResultSingleResultCallback.QueryResultSingleResultCallback(AsyncConnection,SingleResultCallback<List<T>>,boolean)",1,1,1
"com.mongodb.operation.AsyncQueryBatchCursor.QueryResultSingleResultCallback.onResult(QueryResult<T>,Throwable)",1,2,2
"com.mongodb.operation.AsyncQueryBatchCursor.asGetMoreCommandDocument(long)",1,3,3
"com.mongodb.operation.AsyncQueryBatchCursor.asKillCursorsCommandDocument(ServerCursor)",1,1,1
"com.mongodb.operation.AsyncQueryBatchCursor.close()",1,2,2
"com.mongodb.operation.AsyncQueryBatchCursor.getBatchSize()",1,1,1
"com.mongodb.operation.AsyncQueryBatchCursor.getCursorForNext()",1,2,2
"com.mongodb.operation.AsyncQueryBatchCursor.getMore(AsyncConnection,ServerCursor,SingleResultCallback<List<T>>,boolean)",1,2,2
"com.mongodb.operation.AsyncQueryBatchCursor.getMore(ServerCursor,SingleResultCallback<List<T>>,boolean)",1,2,2
"com.mongodb.operation.AsyncQueryBatchCursor.getServerCursor()",1,1,1
"com.mongodb.operation.AsyncQueryBatchCursor.handleGetMoreQueryResult(AsyncConnection,SingleResultCallback<List<T>>,QueryResult<T>,boolean)",2,7,8
"com.mongodb.operation.AsyncQueryBatchCursor.isClosed()",1,1,1
"com.mongodb.operation.AsyncQueryBatchCursor.killCursor(AsyncConnection)",1,2,2
"com.mongodb.operation.AsyncQueryBatchCursor.killCursorAsynchronouslyAndReleaseConnectionAndSource(AsyncConnection,ServerCursor)",1,2,2
"com.mongodb.operation.AsyncQueryBatchCursor.killCursorOnClose()",1,3,3
"com.mongodb.operation.AsyncQueryBatchCursor.limitReached()",1,2,2
"com.mongodb.operation.AsyncQueryBatchCursor.next(SingleResultCallback<List<T>>)",1,1,1
"com.mongodb.operation.AsyncQueryBatchCursor.next(SingleResultCallback<List<T>>,boolean)",1,7,9
"com.mongodb.operation.AsyncQueryBatchCursor.setBatchSize(int)",1,1,1
"com.mongodb.operation.AsyncQueryBatchCursor.tryNext(SingleResultCallback<List<T>>)",1,1,1
"com.mongodb.operation.AsyncSingleBatchQueryCursor.AsyncSingleBatchQueryCursor(QueryResult<T>)",1,1,1
"com.mongodb.operation.AsyncSingleBatchQueryCursor.close()",1,1,1
"com.mongodb.operation.AsyncSingleBatchQueryCursor.getBatchSize()",1,1,1
"com.mongodb.operation.AsyncSingleBatchQueryCursor.isClosed()",1,1,1
"com.mongodb.operation.AsyncSingleBatchQueryCursor.next(SingleResultCallback<List<T>>)",1,4,4
"com.mongodb.operation.AsyncSingleBatchQueryCursor.setBatchSize(int)",1,1,1
"com.mongodb.operation.AsyncSingleBatchQueryCursor.tryNext(SingleResultCallback<List<T>>)",1,1,1
"com.mongodb.operation.BaseWriteOperation.BaseWriteOperation(MongoNamespace,boolean,WriteConcern)",1,1,1
"com.mongodb.operation.BaseWriteOperation.addBulkWriteResultToResponse(BulkWriteResult,BsonDocument)",1,6,6
"com.mongodb.operation.BaseWriteOperation.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.operation.BaseWriteOperation.convertBulkWriteException(MongoBulkWriteException)",3,3,3
"com.mongodb.operation.BaseWriteOperation.execute(WriteBinding)",2,3,3
"com.mongodb.operation.BaseWriteOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<WriteConcernResult>)",1,4,4
"com.mongodb.operation.BaseWriteOperation.getBypassDocumentValidation()",1,1,1
"com.mongodb.operation.BaseWriteOperation.getCount(BulkWriteResult)",1,4,4
"com.mongodb.operation.BaseWriteOperation.getLastError(MongoBulkWriteException)",1,2,2
"com.mongodb.operation.BaseWriteOperation.getMixedBulkOperation()",1,1,1
"com.mongodb.operation.BaseWriteOperation.getNamespace()",1,1,1
"com.mongodb.operation.BaseWriteOperation.getUpdatedExisting(BulkWriteResult)",2,2,2
"com.mongodb.operation.BaseWriteOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.BaseWriteOperation.isOrdered()",1,1,1
"com.mongodb.operation.BaseWriteOperation.manufactureGetLastErrorResponse(MongoBulkWriteException)",1,4,4
"com.mongodb.operation.BaseWriteOperation.translateBulkWriteResult(BulkWriteResult)",1,2,2
"com.mongodb.operation.BsonArrayWrapper.BsonArrayWrapper(List<T>)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.add(BsonValue)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.add(int,BsonValue)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.addAll(Collection<? extends BsonValue>)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.addAll(int,Collection<? extends BsonValue>)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.clear()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.clone()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.contains(Object)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.containsAll(Collection<?>)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.equals(Object)",4,2,5
"com.mongodb.operation.BsonArrayWrapper.get(int)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.getValues()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.getWrappedArray()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.hashCode()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.indexOf(Object)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.isEmpty()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.iterator()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.lastIndexOf(Object)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.listIterator()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.listIterator(int)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.remove(Object)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.remove(int)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.removeAll(Collection<?>)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.retainAll(Collection<?>)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.set(int,BsonValue)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.size()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.subList(int,int)",1,1,1
"com.mongodb.operation.BsonArrayWrapper.toArray()",1,1,1
"com.mongodb.operation.BsonArrayWrapper.toArray(T[])",1,1,1
"com.mongodb.operation.BsonArrayWrapper.toString()",1,1,1
"com.mongodb.operation.BsonDocumentWrapperHelper.BsonDocumentWrapperHelper()",1,1,1
"com.mongodb.operation.BsonDocumentWrapperHelper.toDocument(BsonDocument)",2,1,2
"com.mongodb.operation.BsonDocumentWrapperHelper.toList(BsonDocument,String)",1,1,1
"com.mongodb.operation.BulkWriteBatch.BulkWriteBatch(MongoNamespace,ConnectionDescription,boolean,WriteConcern,Boolean,BulkWriteBatchCombiner,IndexMap,Type,BsonDocument,SplittablePayload,List<WriteRequestWithIndex>)",1,1,1
"com.mongodb.operation.BulkWriteBatch.BulkWriteBatch(MongoNamespace,ConnectionDescription,boolean,WriteConcern,Boolean,BulkWriteBatchCombiner,List<WriteRequestWithIndex>)",4,7,7
"com.mongodb.operation.BulkWriteBatch.WriteRequestEncoder.WriteRequestEncoder()",1,1,1
"com.mongodb.operation.BulkWriteBatch.WriteRequestEncoder.encode(BsonWriter,WriteRequest,EncoderContext)",4,11,13
"com.mongodb.operation.BulkWriteBatch.WriteRequestEncoder.getEncoderClass()",1,1,1
"com.mongodb.operation.BulkWriteBatch.WriteRequestWithIndex.WriteRequestWithIndex(WriteRequest,int)",1,1,1
"com.mongodb.operation.BulkWriteBatch.WriteRequestWithIndex.getType()",1,1,1
"com.mongodb.operation.BulkWriteBatch.addResult(BsonDocument)",1,3,3
"com.mongodb.operation.BulkWriteBatch.createBulkWriteBatch(MongoNamespace,ConnectionDescription,boolean,WriteConcern,Boolean,List<? extends WriteRequest>)",1,2,2
"com.mongodb.operation.BulkWriteBatch.getBulkWriteException(BsonDocument)",2,1,2
"com.mongodb.operation.BulkWriteBatch.getBulkWriteResult(BsonDocument)",1,1,1
"com.mongodb.operation.BulkWriteBatch.getCodec(BsonDocument)",1,1,1
"com.mongodb.operation.BulkWriteBatch.getCommand()",1,1,1
"com.mongodb.operation.BulkWriteBatch.getCommandName(Type)",3,1,4
"com.mongodb.operation.BulkWriteBatch.getDecoder()",1,1,1
"com.mongodb.operation.BulkWriteBatch.getError()",1,1,1
"com.mongodb.operation.BulkWriteBatch.getFieldNameValidator()",3,4,5
"com.mongodb.operation.BulkWriteBatch.getModifiedCount(BsonDocument)",1,2,4
"com.mongodb.operation.BulkWriteBatch.getNextBatch()",2,3,3
"com.mongodb.operation.BulkWriteBatch.getPayload()",1,1,1
"com.mongodb.operation.BulkWriteBatch.getPayloadType(Type)",4,1,4
"com.mongodb.operation.BulkWriteBatch.getResult()",1,1,1
"com.mongodb.operation.BulkWriteBatch.getUpsertedItems(BsonDocument)",1,2,2
"com.mongodb.operation.BulkWriteBatch.getWriteConcernError(BsonDocument)",2,2,2
"com.mongodb.operation.BulkWriteBatch.getWriteErrors(BsonDocument)",1,3,3
"com.mongodb.operation.BulkWriteBatch.hasAnotherBatch()",1,1,1
"com.mongodb.operation.BulkWriteBatch.hasError(BsonDocument)",1,2,2
"com.mongodb.operation.BulkWriteBatch.hasErrors()",1,1,1
"com.mongodb.operation.BulkWriteBatch.shouldProcessBatch()",1,2,2
"com.mongodb.operation.ChangeStreamBatchCursor.ChangeStreamBatchCursor(ChangeStreamOperation<T>,BatchCursor<RawBsonDocument>,ReadBinding)",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.close()",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.convertResults(List<RawBsonDocument>)",4,3,4
"com.mongodb.operation.ChangeStreamBatchCursor.getBatchSize()",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.getServerAddress()",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.getServerCursor()",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.getWrapped()",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.hasNext()",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.next()",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.remove()",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.resumeableOperation(Function<BatchCursor<RawBsonDocument>, R>)",1,1,4
"com.mongodb.operation.ChangeStreamBatchCursor.setBatchSize(int)",1,1,1
"com.mongodb.operation.ChangeStreamBatchCursor.tryNext()",1,1,1
"com.mongodb.operation.ChangeStreamOperation.ChangeStreamOperation(MongoNamespace,FullDocument,List<BsonDocument>,Decoder<T>)",1,1,1
"com.mongodb.operation.ChangeStreamOperation.batchSize(Integer)",1,1,1
"com.mongodb.operation.ChangeStreamOperation.collation(Collation)",1,1,1
"com.mongodb.operation.ChangeStreamOperation.createAggregateOperation()",1,2,2
"com.mongodb.operation.ChangeStreamOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.ChangeStreamOperation.executeAsync(AsyncReadBinding,SingleResultCallback<AsyncBatchCursor<T>>)",1,2,2
"com.mongodb.operation.ChangeStreamOperation.getBatchSize()",1,1,1
"com.mongodb.operation.ChangeStreamOperation.getCollation()",1,1,1
"com.mongodb.operation.ChangeStreamOperation.getDecoder()",1,1,1
"com.mongodb.operation.ChangeStreamOperation.getFullDocument()",1,1,1
"com.mongodb.operation.ChangeStreamOperation.getMaxAwaitTime(TimeUnit)",1,1,1
"com.mongodb.operation.ChangeStreamOperation.getNamespace()",1,1,1
"com.mongodb.operation.ChangeStreamOperation.getPipeline()",1,1,1
"com.mongodb.operation.ChangeStreamOperation.getReadConcern()",1,1,1
"com.mongodb.operation.ChangeStreamOperation.getResumeToken()",1,1,1
"com.mongodb.operation.ChangeStreamOperation.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.ChangeStreamOperation.readConcern(ReadConcern)",1,1,1
"com.mongodb.operation.ChangeStreamOperation.resumeAfter(BsonDocument)",1,1,1
"com.mongodb.operation.CommandOperationHelper.CommandOperationHelper()",1,1,1
"com.mongodb.operation.CommandOperationHelper.CommandProtocolExecutingCallback.CommandProtocolExecutingCallback(String,BsonDocument,FieldNameValidator,Decoder<D>,ReadPreference,CommandTransformer<D, R>,SessionContext,SingleResultCallback<R>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.CommandProtocolExecutingCallback.onResult(AsyncConnectionSource,Throwable)",1,4,4
"com.mongodb.operation.CommandOperationHelper.IdentityTransformer.apply(T,ServerAddress)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(ReadBinding,String,BsonDocument)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(ReadBinding,String,BsonDocument,CommandTransformer<BsonDocument, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(ReadBinding,String,BsonDocument,Connection)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(ReadBinding,String,BsonDocument,Connection,CommandTransformer<BsonDocument, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(ReadBinding,String,BsonDocument,Decoder<BsonDocument>,Connection,CommandTransformer<BsonDocument, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(ReadBinding,String,BsonDocument,Decoder<D>,CommandTransformer<D, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(ReadBinding,String,BsonDocument,Decoder<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(String,BsonDocument,Decoder<D>,Connection,ReadPreference,CommandTransformer<D, T>,SessionContext)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(String,BsonDocument,Decoder<T>,Connection,ReadPreference,SessionContext)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(String,BsonDocument,Decoder<T>,ConnectionSource,ReadPreference)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(String,BsonDocument,FieldNameValidator,Decoder<D>,Connection,ReadPreference,CommandTransformer<D, T>,SessionContext)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(String,BsonDocument,FieldNameValidator,Decoder<T>,ConnectionSource,ReadPreference)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(WriteBinding,String,BsonDocument)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(WriteBinding,String,BsonDocument,CommandTransformer<BsonDocument, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(WriteBinding,String,BsonDocument,Connection)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(WriteBinding,String,BsonDocument,Connection,CommandTransformer<BsonDocument, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(WriteBinding,String,BsonDocument,Decoder<BsonDocument>,Connection,CommandTransformer<BsonDocument, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(WriteBinding,String,BsonDocument,Decoder<D>,CommandTransformer<D, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(WriteBinding,String,BsonDocument,Decoder<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(WriteBinding,String,BsonDocument,FieldNameValidator,Decoder<BsonDocument>,Connection,CommandTransformer<BsonDocument, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(WriteBinding,String,BsonDocument,FieldNameValidator,Decoder<D>,CommandTransformer<D, T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncReadBinding,String,BsonDocument,AsyncConnection,CommandTransformer<BsonDocument, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncReadBinding,String,BsonDocument,CommandTransformer<BsonDocument, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncReadBinding,String,BsonDocument,Decoder<BsonDocument>,AsyncConnection,CommandTransformer<BsonDocument, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncReadBinding,String,BsonDocument,Decoder<D>,CommandTransformer<D, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncReadBinding,String,BsonDocument,Decoder<T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncReadBinding,String,BsonDocument,SingleResultCallback<BsonDocument>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncWriteBinding,String,BsonDocument,AsyncConnection,CommandTransformer<BsonDocument, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncWriteBinding,String,BsonDocument,AsyncConnection,SingleResultCallback<BsonDocument>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncWriteBinding,String,BsonDocument,CommandTransformer<BsonDocument, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncWriteBinding,String,BsonDocument,Decoder<BsonDocument>,AsyncConnection,CommandTransformer<BsonDocument, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncWriteBinding,String,BsonDocument,Decoder<D>,CommandTransformer<D, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncWriteBinding,String,BsonDocument,Decoder<T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncWriteBinding,String,BsonDocument,FieldNameValidator,Decoder<BsonDocument>,AsyncConnection,CommandTransformer<BsonDocument, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncWriteBinding,String,BsonDocument,FieldNameValidator,Decoder<D>,CommandTransformer<D, T>,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(AsyncWriteBinding,String,BsonDocument,SingleResultCallback<BsonDocument>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(String,BsonDocument,Decoder<D>,AsyncConnection,ReadPreference,CommandTransformer<D, T>,SessionContext,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocolAsync(String,BsonDocument,FieldNameValidator,Decoder<D>,AsyncConnection,ReadPreference,CommandTransformer<D, T>,SessionContext,SingleResultCallback<T>)",1,3,3
"com.mongodb.operation.CommandOperationHelper.isNamespaceError(Throwable)",2,3,3
"com.mongodb.operation.CommandOperationHelper.rethrowIfNotNamespaceError(MongoCommandException)",1,1,1
"com.mongodb.operation.CommandOperationHelper.rethrowIfNotNamespaceError(MongoCommandException,T)",2,1,2
"com.mongodb.operation.CommandReadOperation.CommandReadOperation(String,BsonDocument,Decoder<T>)",1,1,1
"com.mongodb.operation.CommandReadOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.CommandReadOperation.executeAsync(AsyncReadBinding,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CommandResultArrayCodec.CommandResultArrayCodec(CodecRegistry,Decoder<T>)",1,1,1
"com.mongodb.operation.CommandResultArrayCodec.decode(BsonReader,DecoderContext)",1,3,3
"com.mongodb.operation.CommandResultArrayCodec.readValue(BsonReader,DecoderContext)",2,2,2
"com.mongodb.operation.CommandResultCodecProvider.CommandResultCodecProvider(Decoder<P>,List<String>)",1,1,1
"com.mongodb.operation.CommandResultCodecProvider.addCodec(Codec<T>)",1,1,1
"com.mongodb.operation.CommandResultCodecProvider.addCodecs()",1,1,1
"com.mongodb.operation.CommandResultCodecProvider.equals(Object)",5,2,6
"com.mongodb.operation.CommandResultCodecProvider.get(Class<T>,CodecRegistry)",4,2,4
"com.mongodb.operation.CommandResultCodecProvider.hashCode()",1,1,1
"com.mongodb.operation.CommandResultDocumentCodec.CommandResultDocumentCodec(CodecRegistry,Decoder<T>,List<String>)",1,1,1
"com.mongodb.operation.CommandResultDocumentCodec.create(Decoder<P>,List<String>)",1,1,1
"com.mongodb.operation.CommandResultDocumentCodec.create(Decoder<P>,String)",1,1,1
"com.mongodb.operation.CommandResultDocumentCodec.readValue(BsonReader,DecoderContext)",4,4,4
"com.mongodb.operation.CommandWriteOperation.CommandWriteOperation(String,BsonDocument,Decoder<T>)",1,1,1
"com.mongodb.operation.CommandWriteOperation.execute(WriteBinding)",1,1,1
"com.mongodb.operation.CommandWriteOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<T>)",1,1,1
"com.mongodb.operation.CountOperation.CountOperation(MongoNamespace)",1,1,1
"com.mongodb.operation.CountOperation.asExplainableOperation(ExplainVerbosity)",1,1,1
"com.mongodb.operation.CountOperation.asExplainableOperationAsync(ExplainVerbosity)",1,1,1
"com.mongodb.operation.CountOperation.collation(Collation)",1,1,1
"com.mongodb.operation.CountOperation.createExplainableOperation(ExplainVerbosity)",1,1,1
"com.mongodb.operation.CountOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.CountOperation.executeAsync(AsyncReadBinding,SingleResultCallback<Long>)",1,3,3
"com.mongodb.operation.CountOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.CountOperation.getCollation()",1,1,1
"com.mongodb.operation.CountOperation.getCommand(SessionContext)",1,2,2
"com.mongodb.operation.CountOperation.getFilter()",1,1,1
"com.mongodb.operation.CountOperation.getHint()",1,1,1
"com.mongodb.operation.CountOperation.getLimit()",1,1,1
"com.mongodb.operation.CountOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.CountOperation.getReadConcern()",1,1,1
"com.mongodb.operation.CountOperation.getSkip()",1,1,1
"com.mongodb.operation.CountOperation.hint(BsonValue)",1,1,1
"com.mongodb.operation.CountOperation.limit(long)",1,1,1
"com.mongodb.operation.CountOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.CountOperation.readConcern(ReadConcern)",1,1,1
"com.mongodb.operation.CountOperation.skip(long)",1,1,1
"com.mongodb.operation.CountOperation.transformer()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.CreateCollectionOperation(String,String)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.CreateCollectionOperation(String,String,WriteConcern)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.autoIndex(boolean)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.capped(boolean)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.collation(Collation)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.execute(WriteBinding)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,3,3
"com.mongodb.operation.CreateCollectionOperation.getCollation()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.getCollectionName()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.getCommand(ConnectionDescription)",1,9,9
"com.mongodb.operation.CreateCollectionOperation.getIndexOptionDefaults()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.getMaxDocuments()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.getSizeInBytes()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.getStorageEngineOptions()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.getValidationAction()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.getValidationLevel()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.getValidator()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.indexOptionDefaults(BsonDocument)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.isAutoIndex()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.isCapped()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.isUsePowerOf2Sizes()",1,1,1
"com.mongodb.operation.CreateCollectionOperation.maxDocuments(long)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.sizeInBytes(long)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.storageEngineOptions(BsonDocument)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.usePowerOf2Sizes(Boolean)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.validationAction(ValidationAction)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.validationLevel(ValidationLevel)",1,1,1
"com.mongodb.operation.CreateCollectionOperation.validator(BsonDocument)",1,1,1
"com.mongodb.operation.CreateIndexesOperation.CreateIndexesOperation(MongoNamespace,List<IndexRequest>)",1,1,1
"com.mongodb.operation.CreateIndexesOperation.CreateIndexesOperation(MongoNamespace,List<IndexRequest>,WriteConcern)",1,1,1
"com.mongodb.operation.CreateIndexesOperation.checkForDuplicateKeyError(MongoCommandException)",2,2,2
"com.mongodb.operation.CreateIndexesOperation.execute(WriteBinding)",1,2,2
"com.mongodb.operation.CreateIndexesOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,3,3
"com.mongodb.operation.CreateIndexesOperation.getCommand(ConnectionDescription)",1,2,2
"com.mongodb.operation.CreateIndexesOperation.getIndex(IndexRequest)",1,20,20
"com.mongodb.operation.CreateIndexesOperation.getIndexNames()",1,3,3
"com.mongodb.operation.CreateIndexesOperation.getRequests()",1,1,1
"com.mongodb.operation.CreateIndexesOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.CreateIndexesOperation.translateException(Throwable)",1,2,2
"com.mongodb.operation.CreateUserOperation.CreateUserOperation(MongoCredential,boolean)",1,1,1
"com.mongodb.operation.CreateUserOperation.CreateUserOperation(MongoCredential,boolean,WriteConcern)",1,1,1
"com.mongodb.operation.CreateUserOperation.execute(WriteBinding)",1,2,2
"com.mongodb.operation.CreateUserOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,2,2
"com.mongodb.operation.CreateUserOperation.getCommand(ConnectionDescription)",1,1,1
"com.mongodb.operation.CreateUserOperation.getCredential()",1,1,1
"com.mongodb.operation.CreateUserOperation.isReadOnly()",1,1,1
"com.mongodb.operation.CreateViewOperation.CreateViewOperation(String,String,String,List<BsonDocument>,WriteConcern)",1,1,1
"com.mongodb.operation.CreateViewOperation.collation(Collation)",1,1,1
"com.mongodb.operation.CreateViewOperation.createExceptionForIncompatibleServerVersion()",1,1,1
"com.mongodb.operation.CreateViewOperation.execute(WriteBinding)",2,2,2
"com.mongodb.operation.CreateViewOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,3,3
"com.mongodb.operation.CreateViewOperation.getCollation()",1,1,1
"com.mongodb.operation.CreateViewOperation.getCommand(ConnectionDescription)",1,2,2
"com.mongodb.operation.CreateViewOperation.getDatabaseName()",1,1,1
"com.mongodb.operation.CreateViewOperation.getPipeline()",1,1,1
"com.mongodb.operation.CreateViewOperation.getViewName()",1,1,1
"com.mongodb.operation.CreateViewOperation.getViewOn()",1,1,1
"com.mongodb.operation.CreateViewOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.CurrentOpOperation.execute(ReadBinding)",2,2,2
"com.mongodb.operation.CursorHelper.CursorHelper()",1,1,1
"com.mongodb.operation.CursorHelper.getCursorDocumentFromBatchSize(Integer)",1,1,2
"com.mongodb.operation.CursorHelper.getNumberToReturn(int,int,int)",1,3,4
"com.mongodb.operation.DeleteOperation.DeleteOperation(MongoNamespace,boolean,WriteConcern,List<DeleteRequest>)",1,1,1
"com.mongodb.operation.DeleteOperation.getDeleteRequests()",1,1,1
"com.mongodb.operation.DeleteOperation.getType()",1,1,1
"com.mongodb.operation.DeleteOperation.getWriteRequests()",1,1,1
"com.mongodb.operation.DistinctOperation.DistinctOperation(MongoNamespace,String,Decoder<T>)",1,1,1
"com.mongodb.operation.DistinctOperation.asyncTransformer(ConnectionDescription)",1,1,1
"com.mongodb.operation.DistinctOperation.collation(Collation)",1,1,1
"com.mongodb.operation.DistinctOperation.createCommandDecoder()",1,1,1
"com.mongodb.operation.DistinctOperation.createQueryResult(BsonDocument,ConnectionDescription)",1,1,1
"com.mongodb.operation.DistinctOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.DistinctOperation.executeAsync(AsyncReadBinding,SingleResultCallback<AsyncBatchCursor<T>>)",1,3,3
"com.mongodb.operation.DistinctOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.DistinctOperation.getCollation()",1,1,1
"com.mongodb.operation.DistinctOperation.getCommand(SessionContext)",1,2,2
"com.mongodb.operation.DistinctOperation.getFilter()",1,1,1
"com.mongodb.operation.DistinctOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.DistinctOperation.getReadConcern()",1,1,1
"com.mongodb.operation.DistinctOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.DistinctOperation.readConcern(ReadConcern)",1,1,1
"com.mongodb.operation.DistinctOperation.transformer(ConnectionSource,Connection)",1,1,1
"com.mongodb.operation.DocumentHelper.DocumentHelper()",1,1,1
"com.mongodb.operation.DocumentHelper.putIfNotNull(BsonDocument,String,BsonValue)",1,2,2
"com.mongodb.operation.DocumentHelper.putIfNotZero(BsonDocument,String,int)",1,2,2
"com.mongodb.operation.DocumentHelper.putIfNotZero(BsonDocument,String,long)",1,2,2
"com.mongodb.operation.DocumentHelper.putIfTrue(BsonDocument,String,boolean)",1,2,2
"com.mongodb.operation.DropCollectionOperation.DropCollectionOperation(MongoNamespace)",1,1,1
"com.mongodb.operation.DropCollectionOperation.DropCollectionOperation(MongoNamespace,WriteConcern)",1,1,1
"com.mongodb.operation.DropCollectionOperation.execute(WriteBinding)",1,2,2
"com.mongodb.operation.DropCollectionOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,4,4
"com.mongodb.operation.DropCollectionOperation.getCommand(ConnectionDescription)",1,1,1
"com.mongodb.operation.DropCollectionOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.DropDatabaseOperation.DropDatabaseOperation(String)",1,1,1
"com.mongodb.operation.DropDatabaseOperation.DropDatabaseOperation(String,WriteConcern)",1,1,1
"com.mongodb.operation.DropDatabaseOperation.execute(WriteBinding)",1,1,1
"com.mongodb.operation.DropDatabaseOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,2,2
"com.mongodb.operation.DropDatabaseOperation.getCommand(ConnectionDescription)",1,1,1
"com.mongodb.operation.DropDatabaseOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.DropIndexOperation.DropIndexOperation(MongoNamespace,BsonDocument)",1,1,1
"com.mongodb.operation.DropIndexOperation.DropIndexOperation(MongoNamespace,BsonDocument,WriteConcern)",1,1,1
"com.mongodb.operation.DropIndexOperation.DropIndexOperation(MongoNamespace,String)",1,1,1
"com.mongodb.operation.DropIndexOperation.DropIndexOperation(MongoNamespace,String,WriteConcern)",1,1,1
"com.mongodb.operation.DropIndexOperation.execute(WriteBinding)",1,2,2
"com.mongodb.operation.DropIndexOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,4,4
"com.mongodb.operation.DropIndexOperation.getCommand(ConnectionDescription)",1,1,1
"com.mongodb.operation.DropIndexOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.DropUserOperation.DropUserOperation(String,String)",1,1,1
"com.mongodb.operation.DropUserOperation.DropUserOperation(String,String,WriteConcern)",1,1,1
"com.mongodb.operation.DropUserOperation.execute(WriteBinding)",1,2,2
"com.mongodb.operation.DropUserOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,2,2
"com.mongodb.operation.DropUserOperation.getCommand(ConnectionDescription)",1,1,1
"com.mongodb.operation.ExplainHelper.ExplainHelper()",1,1,1
"com.mongodb.operation.ExplainHelper.asExplainCommand(BsonDocument,ExplainVerbosity)",1,1,1
"com.mongodb.operation.ExplainHelper.getVerbosityAsString(ExplainVerbosity)",5,2,5
"com.mongodb.operation.FindAndDeleteOperation.FindAndDeleteOperation(MongoNamespace,Decoder<T>)",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.FindAndDeleteOperation(MongoNamespace,WriteConcern,Decoder<T>)",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.collation(Collation)",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.execute(WriteBinding)",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<T>)",1,3,3
"com.mongodb.operation.FindAndDeleteOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.getCollation()",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.getCommand(ConnectionDescription)",1,5,5
"com.mongodb.operation.FindAndDeleteOperation.getDecoder()",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.getFilter()",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.getNamespace()",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.getProjection()",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.getSort()",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.projection(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndDeleteOperation.sort(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndModifyHelper.FindAndModifyHelper()",1,1,1
"com.mongodb.operation.FindAndModifyHelper.createWriteConcernError(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndModifyHelper.createWriteConcernResult(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndModifyHelper.transformer()",3,2,3
"com.mongodb.operation.FindAndReplaceOperation.FindAndReplaceOperation(MongoNamespace,Decoder<T>,BsonDocument)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.FindAndReplaceOperation(MongoNamespace,WriteConcern,Decoder<T>,BsonDocument)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.collation(Collation)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.execute(WriteBinding)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<T>)",1,3,3
"com.mongodb.operation.FindAndReplaceOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getBypassDocumentValidation()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getCollation()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getCommand(ConnectionDescription)",1,7,7
"com.mongodb.operation.FindAndReplaceOperation.getDecoder()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getFilter()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getNamespace()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getProjection()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getReplacement()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getSort()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getValidator()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.isReturnOriginal()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.isUpsert()",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.projection(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.returnOriginal(boolean)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.sort(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndReplaceOperation.upsert(boolean)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.FindAndUpdateOperation(MongoNamespace,Decoder<T>,BsonDocument)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.FindAndUpdateOperation(MongoNamespace,WriteConcern,Decoder<T>,BsonDocument)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.arrayFilters(List<BsonDocument>)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.collation(Collation)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.execute(WriteBinding)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<T>)",1,3,3
"com.mongodb.operation.FindAndUpdateOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getArrayFilters()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getBypassDocumentValidation()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getCollation()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getCommand(ConnectionDescription)",1,8,8
"com.mongodb.operation.FindAndUpdateOperation.getDecoder()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getFilter()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getNamespace()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getProjection()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getSort()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getUpdate()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getValidator()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.isReturnOriginal()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.isUpsert()",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.projection(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.returnOriginal(boolean)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.sort(BsonDocument)",1,1,1
"com.mongodb.operation.FindAndUpdateOperation.upsert(boolean)",1,1,1
"com.mongodb.operation.FindOperation.ExplainResultCallback.ExplainResultCallback(SingleResultCallback<BsonDocument>)",1,1,1
"com.mongodb.operation.FindOperation.ExplainResultCallback.onResult(AsyncBatchCursor<BsonDocument>,Throwable)",1,5,5
"com.mongodb.operation.FindOperation.FindOperation(MongoNamespace,Decoder<T>)",1,1,1
"com.mongodb.operation.FindOperation.asDocument(ConnectionDescription,ReadPreference)",1,17,18
"com.mongodb.operation.FindOperation.asExplainableOperation(ExplainVerbosity)",2,3,3
"com.mongodb.operation.FindOperation.asExplainableOperationAsync(ExplainVerbosity)",1,3,3
"com.mongodb.operation.FindOperation.asyncTransformer(AsyncConnectionSource,AsyncConnection)",1,1,1
"com.mongodb.operation.FindOperation.batchSize(int)",1,1,1
"com.mongodb.operation.FindOperation.collation(Collation)",1,1,1
"com.mongodb.operation.FindOperation.comment(String)",1,1,1
"com.mongodb.operation.FindOperation.createExplainableQueryOperation()",1,2,2
"com.mongodb.operation.FindOperation.cursorType(CursorType)",1,1,1
"com.mongodb.operation.FindOperation.documentToQueryResult(BsonDocument,ServerAddress)",1,2,2
"com.mongodb.operation.FindOperation.exceptionTransformingCallback(SingleResultCallback<T>)",1,3,3
"com.mongodb.operation.FindOperation.execute(ReadBinding)",2,4,4
"com.mongodb.operation.FindOperation.executeAsync(AsyncReadBinding,SingleResultCallback<AsyncBatchCursor<T>>)",1,7,7
"com.mongodb.operation.FindOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.FindOperation.getBatchSize()",1,1,1
"com.mongodb.operation.FindOperation.getCollation()",1,1,1
"com.mongodb.operation.FindOperation.getCommand(SessionContext)",1,29,30
"com.mongodb.operation.FindOperation.getComment()",1,1,1
"com.mongodb.operation.FindOperation.getCursorType()",1,1,1
"com.mongodb.operation.FindOperation.getDecoder()",1,1,1
"com.mongodb.operation.FindOperation.getFilter()",1,1,1
"com.mongodb.operation.FindOperation.getHint()",1,1,1
"com.mongodb.operation.FindOperation.getLimit()",1,1,1
"com.mongodb.operation.FindOperation.getMax()",1,1,1
"com.mongodb.operation.FindOperation.getMaxAwaitTime(TimeUnit)",1,1,1
"com.mongodb.operation.FindOperation.getMaxScan()",1,1,1
"com.mongodb.operation.FindOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.FindOperation.getMaxTimeForCursor()",1,1,2
"com.mongodb.operation.FindOperation.getMin()",1,1,1
"com.mongodb.operation.FindOperation.getModifiers()",1,1,1
"com.mongodb.operation.FindOperation.getNamespace()",1,1,1
"com.mongodb.operation.FindOperation.getProjection()",1,1,1
"com.mongodb.operation.FindOperation.getReadConcern()",1,1,1
"com.mongodb.operation.FindOperation.getSkip()",1,1,1
"com.mongodb.operation.FindOperation.getSort()",1,1,1
"com.mongodb.operation.FindOperation.hint(BsonDocument)",1,1,1
"com.mongodb.operation.FindOperation.isAwaitData()",1,1,1
"com.mongodb.operation.FindOperation.isExplain()",1,2,2
"com.mongodb.operation.FindOperation.isNoCursorTimeout()",1,1,1
"com.mongodb.operation.FindOperation.isOplogReplay()",1,1,1
"com.mongodb.operation.FindOperation.isPartial()",1,1,1
"com.mongodb.operation.FindOperation.isReturnKey()",1,1,1
"com.mongodb.operation.FindOperation.isShowRecordId()",1,1,1
"com.mongodb.operation.FindOperation.isSlaveOk()",1,1,1
"com.mongodb.operation.FindOperation.isSnapshot()",1,1,1
"com.mongodb.operation.FindOperation.isTailableCursor()",1,1,1
"com.mongodb.operation.FindOperation.limit(int)",1,1,1
"com.mongodb.operation.FindOperation.max(BsonDocument)",1,1,1
"com.mongodb.operation.FindOperation.maxAwaitTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.FindOperation.maxScan(long)",1,1,1
"com.mongodb.operation.FindOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.FindOperation.min(BsonDocument)",1,1,1
"com.mongodb.operation.FindOperation.modifiers(BsonDocument)",1,1,1
"com.mongodb.operation.FindOperation.noCursorTimeout(boolean)",1,1,1
"com.mongodb.operation.FindOperation.oplogReplay(boolean)",1,1,1
"com.mongodb.operation.FindOperation.partial(boolean)",1,1,1
"com.mongodb.operation.FindOperation.projection(BsonDocument)",1,1,1
"com.mongodb.operation.FindOperation.readConcern(ReadConcern)",1,1,1
"com.mongodb.operation.FindOperation.returnKey(boolean)",1,1,1
"com.mongodb.operation.FindOperation.showRecordId(boolean)",1,1,1
"com.mongodb.operation.FindOperation.skip(int)",1,1,1
"com.mongodb.operation.FindOperation.slaveOk(boolean)",1,1,1
"com.mongodb.operation.FindOperation.snapshot(boolean)",1,1,1
"com.mongodb.operation.FindOperation.sort(BsonDocument)",1,1,1
"com.mongodb.operation.FindOperation.transformer(ConnectionSource,Connection)",1,1,1
"com.mongodb.operation.FindOperation.wrapInExplainIfNecessary(BsonDocument)",2,1,2
"com.mongodb.operation.FsyncUnlockOperation.execute(ReadBinding)",2,2,2
"com.mongodb.operation.FsyncUnlockOperation.execute(WriteBinding)",2,2,2
"com.mongodb.operation.FsyncUnlockOperation.queryUnlock(Connection)",1,1,1
"com.mongodb.operation.GroupOperation.GroupOperation(MongoNamespace,BsonJavaScript,BsonDocument,Decoder<T>)",1,1,1
"com.mongodb.operation.GroupOperation.asyncTransformer(AsyncConnection)",1,1,1
"com.mongodb.operation.GroupOperation.collation(Collation)",1,1,1
"com.mongodb.operation.GroupOperation.createQueryResult(BsonDocument,ConnectionDescription)",1,1,1
"com.mongodb.operation.GroupOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.GroupOperation.executeAsync(AsyncReadBinding,SingleResultCallback<AsyncBatchCursor<T>>)",1,3,3
"com.mongodb.operation.GroupOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.GroupOperation.finalizeFunction(BsonJavaScript)",1,1,1
"com.mongodb.operation.GroupOperation.getCollation()",1,1,1
"com.mongodb.operation.GroupOperation.getCommand()",1,6,6
"com.mongodb.operation.GroupOperation.getDecoder()",1,1,1
"com.mongodb.operation.GroupOperation.getFilter()",1,1,1
"com.mongodb.operation.GroupOperation.getFinalizeFunction()",1,1,1
"com.mongodb.operation.GroupOperation.getInitial()",1,1,1
"com.mongodb.operation.GroupOperation.getKey()",1,1,1
"com.mongodb.operation.GroupOperation.getKeyFunction()",1,1,1
"com.mongodb.operation.GroupOperation.getNamespace()",1,1,1
"com.mongodb.operation.GroupOperation.getReduceFunction()",1,1,1
"com.mongodb.operation.GroupOperation.key(BsonDocument)",1,1,1
"com.mongodb.operation.GroupOperation.keyFunction(BsonJavaScript)",1,1,1
"com.mongodb.operation.GroupOperation.transformer(ConnectionSource,Connection)",1,1,1
"com.mongodb.operation.IndexHelper.IndexHelper()",1,1,1
"com.mongodb.operation.IndexHelper.generateIndexName(BsonDocument)",1,5,5
"com.mongodb.operation.InsertOperation.InsertOperation(MongoNamespace,boolean,WriteConcern,List<InsertRequest>)",1,1,1
"com.mongodb.operation.InsertOperation.getInsertRequests()",1,1,1
"com.mongodb.operation.InsertOperation.getType()",1,1,1
"com.mongodb.operation.InsertOperation.getWriteRequests()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ListCollectionsOperation(String,Decoder<T>)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingAsyncBatchCursor.ProjectingAsyncBatchCursor(AsyncBatchCursor<BsonDocument>)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingAsyncBatchCursor.close()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingAsyncBatchCursor.getBatchSize()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingAsyncBatchCursor.isClosed()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingAsyncBatchCursor.next(SingleResultCallback<List<T>>)",1,2,2
"com.mongodb.operation.ListCollectionsOperation.ProjectingAsyncBatchCursor.setBatchSize(int)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingAsyncBatchCursor.tryNext(SingleResultCallback<List<T>>)",1,2,2
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.ProjectingBatchCursor(BatchCursor<BsonDocument>)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.close()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.getBatchSize()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.getServerAddress()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.getServerCursor()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.hasNext()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.next()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.remove()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.setBatchSize(int)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor.tryNext()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.asQueryDocument(ConnectionDescription,ReadPreference)",4,7,8
"com.mongodb.operation.ListCollectionsOperation.asyncTransformer(AsyncConnectionSource,AsyncConnection)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.batchSize(int)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.commandTransformer(ConnectionSource)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.createCommandDecoder()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.createNamespace()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.emptyAsyncCursor(AsyncConnectionSource)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.execute(ReadBinding)",2,3,3
"com.mongodb.operation.ListCollectionsOperation.executeAsync(AsyncReadBinding,SingleResultCallback<AsyncBatchCursor<T>>)",1,7,7
"com.mongodb.operation.ListCollectionsOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.getBatchSize()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.getCommand()",1,3,3
"com.mongodb.operation.ListCollectionsOperation.getFilter()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.getNamespace()",1,1,1
"com.mongodb.operation.ListCollectionsOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.ListCollectionsOperation.projectFromFullNamespaceToCollectionName(List<BsonDocument>)",2,2,3
"com.mongodb.operation.ListDatabasesOperation.ListDatabasesOperation(Decoder<T>)",1,1,1
"com.mongodb.operation.ListDatabasesOperation.asyncTransformer(AsyncConnectionSource,AsyncConnection)",1,1,1
"com.mongodb.operation.ListDatabasesOperation.createQueryResult(BsonDocument,ConnectionDescription)",1,1,1
"com.mongodb.operation.ListDatabasesOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.ListDatabasesOperation.executeAsync(AsyncReadBinding,SingleResultCallback<AsyncBatchCursor<T>>)",1,2,2
"com.mongodb.operation.ListDatabasesOperation.getCommand()",1,2,2
"com.mongodb.operation.ListDatabasesOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.ListDatabasesOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.ListDatabasesOperation.transformer(ConnectionSource,Connection)",1,1,1
"com.mongodb.operation.ListIndexesOperation.ListIndexesOperation(MongoNamespace,Decoder<T>)",1,1,1
"com.mongodb.operation.ListIndexesOperation.asQueryDocument(ConnectionDescription,ReadPreference)",1,4,4
"com.mongodb.operation.ListIndexesOperation.asyncTransformer(AsyncConnectionSource,AsyncConnection)",1,1,1
"com.mongodb.operation.ListIndexesOperation.batchSize(int)",1,1,1
"com.mongodb.operation.ListIndexesOperation.createCommandDecoder()",1,1,1
"com.mongodb.operation.ListIndexesOperation.emptyAsyncCursor(AsyncConnectionSource)",1,1,1
"com.mongodb.operation.ListIndexesOperation.execute(ReadBinding)",2,3,3
"com.mongodb.operation.ListIndexesOperation.executeAsync(AsyncReadBinding,SingleResultCallback<AsyncBatchCursor<T>>)",1,7,7
"com.mongodb.operation.ListIndexesOperation.getBatchSize()",1,1,1
"com.mongodb.operation.ListIndexesOperation.getCommand()",1,2,2
"com.mongodb.operation.ListIndexesOperation.getIndexNamespace()",1,1,1
"com.mongodb.operation.ListIndexesOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.ListIndexesOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.ListIndexesOperation.transformer(ConnectionSource)",1,1,1
"com.mongodb.operation.MapReduceHelper.MapReduceHelper()",1,1,1
"com.mongodb.operation.MapReduceHelper.createStatistics(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceHelper.getDuration(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceHelper.getEmitCount(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceHelper.getInputCount(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceHelper.getOutputCount(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceInlineResultsAsyncCursor.MapReduceInlineResultsAsyncCursor(QueryResult<T>,MapReduceStatistics)",1,1,1
"com.mongodb.operation.MapReduceInlineResultsAsyncCursor.getStatistics()",1,1,1
"com.mongodb.operation.MapReduceInlineResultsCursor.MapReduceInlineResultsCursor(QueryResult<T>,Decoder<T>,ConnectionSource,MapReduceStatistics)",1,1,1
"com.mongodb.operation.MapReduceInlineResultsCursor.getStatistics()",1,1,1
"com.mongodb.operation.MapReduceStatistics.MapReduceStatistics(int,int,int,int)",1,1,1
"com.mongodb.operation.MapReduceStatistics.getDuration()",1,1,1
"com.mongodb.operation.MapReduceStatistics.getEmitCount()",1,1,1
"com.mongodb.operation.MapReduceStatistics.getInputCount()",1,1,1
"com.mongodb.operation.MapReduceStatistics.getOutputCount()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.MapReduceToCollectionOperation(MongoNamespace,BsonJavaScript,BsonJavaScript,String)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.MapReduceToCollectionOperation(MongoNamespace,BsonJavaScript,BsonJavaScript,String,WriteConcern)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.action(String)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.asExplainableOperation(ExplainVerbosity)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.asExplainableOperationAsync(ExplainVerbosity)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.asValueOrNull(BsonValue)",1,1,2
"com.mongodb.operation.MapReduceToCollectionOperation.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.collation(Collation)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.createExplainableOperation(ExplainVerbosity)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.databaseName(String)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.execute(WriteBinding)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<MapReduceStatistics>)",1,3,3
"com.mongodb.operation.MapReduceToCollectionOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.finalizeFunction(BsonJavaScript)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getAction()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getBypassDocumentValidation()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getCollation()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getCollectionName()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getCommand(ConnectionDescription)",1,7,7
"com.mongodb.operation.MapReduceToCollectionOperation.getDatabaseName()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getFilter()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getFinalizeFunction()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getLimit()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getMapFunction()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getNamespace()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getReduceFunction()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getScope()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getSort()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.isJsMode()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.isNonAtomic()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.isSharded()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.isVerbose()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.jsMode(boolean)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.limit(int)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.nonAtomic(boolean)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.scope(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.sharded(boolean)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.sort(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.transformer()",1,1,1
"com.mongodb.operation.MapReduceToCollectionOperation.verbose(boolean)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.MapReduceWithInlineResultsOperation(MongoNamespace,BsonJavaScript,BsonJavaScript,Decoder<T>)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.asExplainableOperation(ExplainVerbosity)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.asExplainableOperationAsync(ExplainVerbosity)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.asValueOrNull(BsonValue)",1,1,2
"com.mongodb.operation.MapReduceWithInlineResultsOperation.asyncTransformer(AsyncConnection)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.collation(Collation)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.createExplainableOperation(ExplainVerbosity)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.createQueryResult(BsonDocument,ConnectionDescription)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.executeAsync(AsyncReadBinding,SingleResultCallback<MapReduceAsyncBatchCursor<T>>)",1,3,3
"com.mongodb.operation.MapReduceWithInlineResultsOperation.filter(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.finalizeFunction(BsonJavaScript)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getCollation()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getCommand(SessionContext)",1,2,2
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getDecoder()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getFilter()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getFinalizeFunction()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getLimit()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getMapFunction()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getMaxTime(TimeUnit)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getNamespace()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getReadConcern()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getReduceFunction()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getScope()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.getSort()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.isJsMode()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.isVerbose()",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.jsMode(boolean)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.limit(int)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.maxTime(long,TimeUnit)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.readConcern(ReadConcern)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.scope(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.sort(BsonDocument)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.transformer(ConnectionSource,Connection)",1,1,1
"com.mongodb.operation.MapReduceWithInlineResultsOperation.verbose(boolean)",1,1,1
"com.mongodb.operation.MixedBulkWriteOperation.MixedBulkWriteOperation(MongoNamespace,List<? extends WriteRequest>,boolean,WriteConcern)",1,1,1
"com.mongodb.operation.MixedBulkWriteOperation.bypassDocumentValidation(Boolean)",1,1,1
"com.mongodb.operation.MixedBulkWriteOperation.execute(WriteBinding)",2,3,3
"com.mongodb.operation.MixedBulkWriteOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<BulkWriteResult>)",1,6,6
"com.mongodb.operation.MixedBulkWriteOperation.executeBatches(Connection,SessionContext)",1,2,2
"com.mongodb.operation.MixedBulkWriteOperation.executeBatchesAsync(AsyncConnection,SessionContext,BulkWriteBatch,SingleResultCallback<BulkWriteResult>)",1,5,5
"com.mongodb.operation.MixedBulkWriteOperation.executeLegacyBatches(Connection)",1,5,5
"com.mongodb.operation.MixedBulkWriteOperation.executeLegacyBatchesAsync(AsyncConnection,List<? extends WriteRequest>,int,SingleResultCallback<BulkWriteResult>)",1,7,7
"com.mongodb.operation.MixedBulkWriteOperation.getBypassDocumentValidation()",1,1,1
"com.mongodb.operation.MixedBulkWriteOperation.getNamespace()",1,1,1
"com.mongodb.operation.MixedBulkWriteOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.MixedBulkWriteOperation.getWriteRequests()",1,1,1
"com.mongodb.operation.MixedBulkWriteOperation.isOrdered()",1,1,1
"com.mongodb.operation.MixedBulkWriteOperation.shouldAcknowledge(BulkWriteBatch,WriteConcern)",1,3,3
"com.mongodb.operation.OperationHelper.AsyncCallableWithConnectionAndSourceCallback.AsyncCallableWithConnectionAndSourceCallback(AsyncCallableWithConnectionAndSource)",1,1,1
"com.mongodb.operation.OperationHelper.AsyncCallableWithConnectionAndSourceCallback.onResult(AsyncConnectionSource,Throwable)",1,2,2
"com.mongodb.operation.OperationHelper.AsyncCallableWithConnectionCallback.AsyncCallableWithConnectionCallback(AsyncCallableWithConnection)",1,1,1
"com.mongodb.operation.OperationHelper.AsyncCallableWithConnectionCallback.onResult(AsyncConnectionSource,Throwable)",1,2,2
"com.mongodb.operation.OperationHelper.OperationHelper()",1,1,1
"com.mongodb.operation.OperationHelper.ReferenceCountedReleasingWrappedCallback.ReferenceCountedReleasingWrappedCallback(SingleResultCallback<T>,List<? extends ReferenceCounted>)",1,1,1
"com.mongodb.operation.OperationHelper.ReferenceCountedReleasingWrappedCallback.onResult(T,Throwable)",1,2,2
"com.mongodb.operation.OperationHelper.checkBypassDocumentValidationIsSupported(AsyncConnection,Boolean,WriteConcern,AsyncCallableWithConnection)",1,3,4
"com.mongodb.operation.OperationHelper.checkBypassDocumentValidationIsSupported(Connection,Boolean,WriteConcern)",2,3,4
"com.mongodb.operation.OperationHelper.createEmptyAsyncBatchCursor(MongoNamespace,ServerAddress)",1,1,1
"com.mongodb.operation.OperationHelper.createEmptyBatchCursor(MongoNamespace,Decoder<T>,ServerAddress,int)",1,1,1
"com.mongodb.operation.OperationHelper.cursorDocumentToAsyncBatchCursor(BsonDocument,Decoder<T>,AsyncConnectionSource,AsyncConnection,int)",1,1,1
"com.mongodb.operation.OperationHelper.cursorDocumentToBatchCursor(BsonDocument,Decoder<T>,ConnectionSource,int)",1,1,1
"com.mongodb.operation.OperationHelper.cursorDocumentToQueryResult(BsonDocument,ServerAddress)",1,1,1
"com.mongodb.operation.OperationHelper.cursorDocumentToQueryResult(BsonDocument,ServerAddress,String)",1,1,1
"com.mongodb.operation.OperationHelper.getMoreCursorDocumentToQueryResult(BsonDocument,ServerAddress)",1,1,1
"com.mongodb.operation.OperationHelper.releasingCallback(SingleResultCallback<T>,AsyncConnection)",1,1,1
"com.mongodb.operation.OperationHelper.releasingCallback(SingleResultCallback<T>,AsyncConnectionSource,AsyncConnection)",1,1,1
"com.mongodb.operation.OperationHelper.releasingCallback(SingleResultCallback<T>,AsyncReadBinding,AsyncConnectionSource,AsyncConnection)",1,1,1
"com.mongodb.operation.OperationHelper.serverIsAtLeastVersion(ConnectionDescription,ServerVersion)",1,1,1
"com.mongodb.operation.OperationHelper.serverIsAtLeastVersionThreeDotFour(ConnectionDescription)",1,1,1
"com.mongodb.operation.OperationHelper.serverIsAtLeastVersionThreeDotSix(ConnectionDescription)",1,1,1
"com.mongodb.operation.OperationHelper.serverIsAtLeastVersionThreeDotTwo(ConnectionDescription)",1,1,1
"com.mongodb.operation.OperationHelper.serverIsAtLeastVersionThreeDotZero(ConnectionDescription)",1,1,1
"com.mongodb.operation.OperationHelper.validateCollation(AsyncConnection,Collation,AsyncCallableWithConnection)",1,3,3
"com.mongodb.operation.OperationHelper.validateCollation(AsyncConnectionSource,AsyncConnection,Collation,AsyncCallableWithConnectionAndSource)",1,1,1
"com.mongodb.operation.OperationHelper.validateCollation(Connection,Collation)",2,3,3
"com.mongodb.operation.OperationHelper.validateCollationAndWriteConcern(AsyncConnection,Collation,WriteConcern,AsyncCallableWithConnection)",1,4,5
"com.mongodb.operation.OperationHelper.validateCollationAndWriteConcern(Connection,Collation,WriteConcern)",3,4,5
"com.mongodb.operation.OperationHelper.validateIndexRequestCollations(AsyncConnection,List<IndexRequest>,AsyncCallableWithConnection)",3,4,4
"com.mongodb.operation.OperationHelper.validateIndexRequestCollations(Connection,List<IndexRequest>)",3,3,3
"com.mongodb.operation.OperationHelper.validateReadConcern(AsyncConnection,ReadConcern,AsyncCallableWithConnection)",1,3,3
"com.mongodb.operation.OperationHelper.validateReadConcern(AsyncConnectionSource,AsyncConnection,ReadConcern,AsyncCallableWithConnectionAndSource)",1,1,1
"com.mongodb.operation.OperationHelper.validateReadConcern(Connection,ReadConcern)",2,3,3
"com.mongodb.operation.OperationHelper.validateReadConcernAndCollation(AsyncConnection,ReadConcern,Collation,AsyncCallableWithConnection)",1,2,2
"com.mongodb.operation.OperationHelper.validateReadConcernAndCollation(AsyncConnectionSource,AsyncConnection,ReadConcern,Collation,AsyncCallableWithConnectionAndSource)",1,1,1
"com.mongodb.operation.OperationHelper.validateReadConcernAndCollation(Connection,ReadConcern,Collation)",1,1,1
"com.mongodb.operation.OperationHelper.validateWriteRequestCollations(AsyncConnection,List<? extends WriteRequest>,WriteConcern,AsyncCallableWithConnection)",3,4,5
"com.mongodb.operation.OperationHelper.validateWriteRequestCollations(Connection,List<? extends WriteRequest>,WriteConcern)",3,4,5
"com.mongodb.operation.OperationHelper.validateWriteRequests(AsyncConnection,Boolean,List<? extends WriteRequest>,WriteConcern,AsyncCallableWithConnection)",1,2,2
"com.mongodb.operation.OperationHelper.validateWriteRequests(Connection,Boolean,List<? extends WriteRequest>,WriteConcern)",1,1,1
"com.mongodb.operation.OperationHelper.withConnection(AsyncReadBinding,AsyncCallableWithConnection)",1,1,1
"com.mongodb.operation.OperationHelper.withConnection(AsyncReadBinding,AsyncCallableWithConnectionAndSource)",1,1,1
"com.mongodb.operation.OperationHelper.withConnection(AsyncWriteBinding,AsyncCallableWithConnection)",1,1,1
"com.mongodb.operation.OperationHelper.withConnection(ReadBinding,CallableWithConnection<T>)",1,1,1
"com.mongodb.operation.OperationHelper.withConnection(ReadBinding,CallableWithConnectionAndSource<T>)",1,1,1
"com.mongodb.operation.OperationHelper.withConnection(WriteBinding,CallableWithConnection<T>)",1,1,1
"com.mongodb.operation.OperationHelper.withConnectionSource(AsyncConnectionSource,AsyncCallableWithConnection)",1,2,2
"com.mongodb.operation.OperationHelper.withConnectionSource(AsyncConnectionSource,AsyncCallableWithConnectionAndSource)",1,1,1
"com.mongodb.operation.OperationHelper.withConnectionSource(ConnectionSource,CallableWithConnection<T>)",1,1,1
"com.mongodb.operation.OperationHelper.withConnectionSource(ConnectionSource,CallableWithConnectionAndSource<T>)",1,1,1
"com.mongodb.operation.OrderBy.OrderBy(int)",1,1,1
"com.mongodb.operation.OrderBy.fromInt(int)",4,2,4
"com.mongodb.operation.OrderBy.getIntRepresentation()",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.ParallelCollectionScanOperation(MongoNamespace,int,Decoder<T>)",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.asyncTransformer(AsyncConnectionSource,AsyncConnection)",1,2,2
"com.mongodb.operation.ParallelCollectionScanOperation.batchSize(int)",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.createQueryResult(BsonDocument,ServerAddress)",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.executeAsync(AsyncReadBinding,SingleResultCallback<List<AsyncBatchCursor<T>>>)",1,3,3
"com.mongodb.operation.ParallelCollectionScanOperation.getBatchSize()",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.getCommand(SessionContext)",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.getCursorDocument(BsonDocument)",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.getCursorDocuments(BsonDocument)",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.getNumCursors()",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.getReadConcern()",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.readConcern(ReadConcern)",1,1,1
"com.mongodb.operation.ParallelCollectionScanOperation.transformer(ConnectionSource)",1,2,2
"com.mongodb.operation.QueryBatchCursor.QueryBatchCursor(QueryResult<T>,int,int,Decoder<T>)",1,1,1
"com.mongodb.operation.QueryBatchCursor.QueryBatchCursor(QueryResult<T>,int,int,Decoder<T>,ConnectionSource)",1,1,1
"com.mongodb.operation.QueryBatchCursor.QueryBatchCursor(QueryResult<T>,int,int,long,Decoder<T>,ConnectionSource,Connection)",1,4,4
"com.mongodb.operation.QueryBatchCursor.asGetMoreCommandDocument()",1,3,3
"com.mongodb.operation.QueryBatchCursor.asKillCursorsCommandDocument()",1,1,1
"com.mongodb.operation.QueryBatchCursor.close()",1,3,3
"com.mongodb.operation.QueryBatchCursor.getBatchSize()",1,1,1
"com.mongodb.operation.QueryBatchCursor.getMore()",2,4,4
"com.mongodb.operation.QueryBatchCursor.getServerAddress()",2,1,2
"com.mongodb.operation.QueryBatchCursor.getServerCursor()",2,1,2
"com.mongodb.operation.QueryBatchCursor.hasNext()",6,2,6
"com.mongodb.operation.QueryBatchCursor.initFromCommandResult(BsonDocument)",1,1,1
"com.mongodb.operation.QueryBatchCursor.initFromQueryResult(QueryResult<T>)",1,2,2
"com.mongodb.operation.QueryBatchCursor.killCursor()",1,2,3
"com.mongodb.operation.QueryBatchCursor.killCursor(Connection)",1,3,3
"com.mongodb.operation.QueryBatchCursor.limitReached()",1,2,2
"com.mongodb.operation.QueryBatchCursor.next()",3,1,3
"com.mongodb.operation.QueryBatchCursor.remove()",1,1,1
"com.mongodb.operation.QueryBatchCursor.setBatchSize(int)",1,1,1
"com.mongodb.operation.QueryBatchCursor.tryHasNext()",3,2,4
"com.mongodb.operation.QueryBatchCursor.tryNext()",3,1,3
"com.mongodb.operation.QueryHelper.QueryHelper()",1,1,1
"com.mongodb.operation.QueryHelper.translateCommandException(MongoCommandException,ServerCursor)",2,2,2
"com.mongodb.operation.ReadConcernHelper.ReadConcernHelper()",1,1,1
"com.mongodb.operation.ReadConcernHelper.appendReadConcernToCommand(ReadConcern,SessionContext,BsonDocument)",1,4,4
"com.mongodb.operation.ReadConcernHelper.getReadConcernLevel(ReadConcern,SessionContext)",2,3,3
"com.mongodb.operation.ReadConcernHelper.shouldAddAfterClusterTime(SessionContext)",1,2,2
"com.mongodb.operation.RenameCollectionOperation.RenameCollectionOperation(MongoNamespace,MongoNamespace)",1,1,1
"com.mongodb.operation.RenameCollectionOperation.RenameCollectionOperation(MongoNamespace,MongoNamespace,WriteConcern)",1,1,1
"com.mongodb.operation.RenameCollectionOperation.dropTarget(boolean)",1,1,1
"com.mongodb.operation.RenameCollectionOperation.execute(WriteBinding)",1,1,1
"com.mongodb.operation.RenameCollectionOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,2,2
"com.mongodb.operation.RenameCollectionOperation.getCommand(ConnectionDescription)",1,1,1
"com.mongodb.operation.RenameCollectionOperation.getWriteConcern()",1,1,1
"com.mongodb.operation.RenameCollectionOperation.isDropTarget()",1,1,1
"com.mongodb.operation.UpdateOperation.UpdateOperation(MongoNamespace,boolean,WriteConcern,List<UpdateRequest>)",1,1,1
"com.mongodb.operation.UpdateOperation.getType()",1,1,1
"com.mongodb.operation.UpdateOperation.getUpdateRequests()",1,1,1
"com.mongodb.operation.UpdateOperation.getWriteRequests()",1,1,1
"com.mongodb.operation.UpdateUserOperation.UpdateUserOperation(MongoCredential,boolean)",1,1,1
"com.mongodb.operation.UpdateUserOperation.UpdateUserOperation(MongoCredential,boolean,WriteConcern)",1,1,1
"com.mongodb.operation.UpdateUserOperation.execute(WriteBinding)",1,2,2
"com.mongodb.operation.UpdateUserOperation.executeAsync(AsyncWriteBinding,SingleResultCallback<Void>)",1,2,2
"com.mongodb.operation.UpdateUserOperation.getCommand(ConnectionDescription)",1,1,1
"com.mongodb.operation.UpdateUserOperation.getCredential()",1,1,1
"com.mongodb.operation.UpdateUserOperation.isReadOnly()",1,1,1
"com.mongodb.operation.UserExistsOperation.UserExistsOperation(String,String)",1,1,1
"com.mongodb.operation.UserExistsOperation.execute(ReadBinding)",1,1,1
"com.mongodb.operation.UserExistsOperation.executeAsync(AsyncReadBinding,SingleResultCallback<Boolean>)",1,2,2
"com.mongodb.operation.UserExistsOperation.getCommand()",1,1,1
"com.mongodb.operation.UserExistsOperation.transformer()",1,2,2
"com.mongodb.operation.UserOperationHelper.UserOperationHelper()",1,1,1
"com.mongodb.operation.UserOperationHelper.asCollectionInsertDocument(MongoCredential,boolean)",1,1,1
"com.mongodb.operation.UserOperationHelper.asCollectionQueryDocument(MongoCredential)",1,1,1
"com.mongodb.operation.UserOperationHelper.asCollectionUpdateDocument(MongoCredential,boolean)",1,1,1
"com.mongodb.operation.UserOperationHelper.asCommandDocument(MongoCredential,boolean,String)",1,1,1
"com.mongodb.operation.UserOperationHelper.getRoleName(MongoCredential,boolean)",1,1,4
"com.mongodb.operation.UserOperationHelper.translateUserCommandException(MongoCommandException)",2,3,3
"com.mongodb.operation.UserOperationHelper.userCommandCallback(SingleResultCallback<Void>)",1,4,4
"com.mongodb.operation.WriteConcernHelper.WriteConcernHelper()",1,1,1
"com.mongodb.operation.WriteConcernHelper.appendWriteConcernToCommand(WriteConcern,BsonDocument,ConnectionDescription)",1,4,4
"com.mongodb.operation.WriteConcernHelper.createWriteConcernError(BsonDocument)",1,1,1
"com.mongodb.operation.WriteConcernHelper.createWriteConcernError(BsonDocument,ServerAddress)",1,1,1
"com.mongodb.operation.WriteConcernHelper.hasWriteConcernError(BsonDocument)",1,1,1
"com.mongodb.operation.WriteConcernHelper.throwOnWriteConcernError(BsonDocument,ServerAddress)",2,2,2
"com.mongodb.operation.WriteConcernHelper.writeConcernErrorTransformer()",1,1,1
"com.mongodb.selector.CompositeServerSelector.CompositeServerSelector(List<? extends ServerSelector>)",4,3,6
"com.mongodb.selector.CompositeServerSelector.select(ClusterDescription)",1,2,2
"com.mongodb.selector.CompositeServerSelector.toString()",1,1,1
"com.mongodb.selector.LatencyMinimizingServerSelector.LatencyMinimizingServerSelector(long,TimeUnit)",1,1,1
"com.mongodb.selector.LatencyMinimizingServerSelector.getAcceptableLatencyDifference(TimeUnit)",1,1,1
"com.mongodb.selector.LatencyMinimizingServerSelector.getFastestRoundTripTimeNanos(List<ServerDescription>)",3,3,4
"com.mongodb.selector.LatencyMinimizingServerSelector.getServersWithAcceptableLatencyDifference(List<ServerDescription>,long)",3,3,4
"com.mongodb.selector.LatencyMinimizingServerSelector.select(ClusterDescription)",2,2,2
"com.mongodb.selector.LatencyMinimizingServerSelector.toString()",1,1,1
"com.mongodb.selector.PrimaryServerSelector.select(ClusterDescription)",1,1,1
"com.mongodb.selector.PrimaryServerSelector.toString()",1,1,1
"com.mongodb.selector.ReadPreferenceServerSelector.ReadPreferenceServerSelector(ReadPreference)",1,1,1
"com.mongodb.selector.ReadPreferenceServerSelector.getReadPreference()",1,1,1
"com.mongodb.selector.ReadPreferenceServerSelector.select(ClusterDescription)",2,2,2
"com.mongodb.selector.ReadPreferenceServerSelector.toString()",1,1,1
"com.mongodb.selector.ServerAddressSelector.ServerAddressSelector(ServerAddress)",1,1,1
"com.mongodb.selector.ServerAddressSelector.getServerAddress()",1,1,1
"com.mongodb.selector.ServerAddressSelector.select(ClusterDescription)",2,2,2
"com.mongodb.selector.ServerAddressSelector.toString()",1,1,1
"com.mongodb.selector.WritableServerSelector.select(ClusterDescription)",1,1,1
"com.mongodb.selector.WritableServerSelector.toString()",1,1,1
"com.mongodb.util.AbstractObjectSerializer.serialize(Object)",1,1,1
"com.mongodb.util.ClassMapBasedObjectSerializer.addObjectSerializer(Class,ObjectSerializer)",1,1,1
"com.mongodb.util.ClassMapBasedObjectSerializer.serialize(Object,StringBuilder)",5,6,7
"com.mongodb.util.JSON.parse(String)",1,1,1
"com.mongodb.util.JSON.parse(String,BSONCallback)",2,2,3
"com.mongodb.util.JSON.serialize(Object)",1,1,1
"com.mongodb.util.JSON.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSON.string(StringBuilder,String)",9,9,9
"com.mongodb.util.JSONCallback.arrayStart(String)",1,1,1
"com.mongodb.util.JSONCallback.create()",1,1,1
"com.mongodb.util.JSONCallback.createList()",1,1,1
"com.mongodb.util.JSONCallback.objectDone()",2,22,23
"com.mongodb.util.JSONCallback.objectStart(String)",1,1,1
"com.mongodb.util.JSONParseException.JSONParseException(String,int)",1,1,1
"com.mongodb.util.JSONParseException.JSONParseException(String,int,Throwable)",1,1,1
"com.mongodb.util.JSONParseException.getMessage()",1,2,2
"com.mongodb.util.JSONParser.JSONParser(String)",1,1,1
"com.mongodb.util.JSONParser.JSONParser(String,BSONCallback)",1,1,2
"com.mongodb.util.JSONParser.check(char)",1,1,1
"com.mongodb.util.JSONParser.doCallback(String,Object)",1,7,7
"com.mongodb.util.JSONParser.get()",2,2,2
"com.mongodb.util.JSONParser.parse()",1,1,1
"com.mongodb.util.JSONParser.parse(String)",2,2,10
"com.mongodb.util.JSONParser.parseArray()",1,1,1
"com.mongodb.util.JSONParser.parseArray(String)",4,4,5
"com.mongodb.util.JSONParser.parseExponent()",3,4,6
"com.mongodb.util.JSONParser.parseFraction()",3,3,5
"com.mongodb.util.JSONParser.parseNumber()",5,6,12
"com.mongodb.util.JSONParser.parseObject()",1,1,1
"com.mongodb.util.JSONParser.parseObject(String)",3,4,4
"com.mongodb.util.JSONParser.parseString(boolean)",10,8,21
"com.mongodb.util.JSONParser.read()",2,1,2
"com.mongodb.util.JSONParser.read(char)",2,1,2
"com.mongodb.util.JSONParser.readHex()",2,7,8
"com.mongodb.util.JSONParser.skipWS()",1,2,3
"com.mongodb.util.JSONSerializers.BSONTimestampSerializer.BSONTimestampSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.BSONTimestampSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.BinarySerializer.BinarySerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.BinarySerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.BinarySerializerBase.BinarySerializerBase(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.BinarySerializerBase.serialize(byte[],byte,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.ByteArraySerializer.ByteArraySerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.ByteArraySerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.CodeSerializer.CodeSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.CodeSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.CodeWScopeSerializer.CodeWScopeSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.CodeWScopeSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.CompoundObjectSerializer.CompoundObjectSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.DBObjectSerializer.DBObjectSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.DBObjectSerializer.serialize(Object,StringBuilder)",1,3,3
"com.mongodb.util.JSONSerializers.DBRefBaseSerializer.DBRefBaseSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.DBRefBaseSerializer.serialize(Object,StringBuilder)",1,2,2
"com.mongodb.util.JSONSerializers.DateSerializer.DateSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.DateSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.Decimal128Serializer.Decimal128Serializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.Decimal128Serializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.IterableSerializer.IterableSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.IterableSerializer.serialize(Object,StringBuilder)",1,3,3
"com.mongodb.util.JSONSerializers.JSONSerializers()",1,1,1
"com.mongodb.util.JSONSerializers.LegacyBSONTimestampSerializer.LegacyBSONTimestampSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.LegacyBSONTimestampSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.LegacyBinarySerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.LegacyDateSerializer.LegacyDateSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.LegacyDateSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.MapSerializer.MapSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.MapSerializer.serialize(Object,StringBuilder)",1,3,3
"com.mongodb.util.JSONSerializers.MaxKeySerializer.MaxKeySerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.MaxKeySerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.MinKeySerializer.MinKeySerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.MinKeySerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.ObjectArraySerializer.ObjectArraySerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.ObjectArraySerializer.serialize(Object,StringBuilder)",1,3,3
"com.mongodb.util.JSONSerializers.ObjectIdSerializer.ObjectIdSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.ObjectIdSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.PatternSerializer.PatternSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.PatternSerializer.serialize(Object,StringBuilder)",1,2,2
"com.mongodb.util.JSONSerializers.StringSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.SymbolSerializer.SymbolSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.SymbolSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.ToStringSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.UndefinedSerializer.UndefinedSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.UndefinedSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.UuidSerializer.UuidSerializer(ObjectSerializer)",1,1,1
"com.mongodb.util.JSONSerializers.UuidSerializer.serialize(Object,StringBuilder)",1,1,1
"com.mongodb.util.JSONSerializers.addCommonSerializers()",1,1,1
"com.mongodb.util.JSONSerializers.getLegacy()",1,1,1
"com.mongodb.util.JSONSerializers.getStrict()",1,1,1
"com.mongodb.util.Util.hexMD5(ByteBuffer,int,int)",1,1,1
"com.mongodb.util.Util.hexMD5(byte[])",1,1,1
"com.mongodb.util.Util.toHex(byte[])",1,1,1
"null.compare(BulkWriteError,BulkWriteError)",1,2,3
"null.compare(BulkWriteUpsert,BulkWriteUpsert)",1,2,3
"null.create()",1,1,1
"null.create(DBCollection)",1,1,1
"null.get()",1,1,1
"null.get(AbstractCopyOnWriteMap<K, V, M>)",1,1,1
"null.getClusterType()",1,1,1
"null.isEmpty()",1,1,1
"null.isTailable()",1,1,1
"org.bson.AbstractBsonReader.AbstractBsonReader()",1,1,1
"org.bson.AbstractBsonReader.Context.Context(Context,BsonContextType)",1,1,1
"org.bson.AbstractBsonReader.Context.getContextType()",1,1,1
"org.bson.AbstractBsonReader.Context.getParentContext()",1,1,1
"org.bson.AbstractBsonReader.Mark.Mark()",1,1,1
"org.bson.AbstractBsonReader.Mark.getContextType()",1,1,1
"org.bson.AbstractBsonReader.Mark.getParentContext()",1,1,1
"org.bson.AbstractBsonReader.Mark.reset()",1,1,1
"org.bson.AbstractBsonReader.checkPreconditions(String,BsonType)",2,1,2
"org.bson.AbstractBsonReader.close()",1,1,1
"org.bson.AbstractBsonReader.getContext()",1,1,1
"org.bson.AbstractBsonReader.getCurrentBsonType()",1,1,1
"org.bson.AbstractBsonReader.getCurrentName()",1,2,2
"org.bson.AbstractBsonReader.getNextState()",4,2,4
"org.bson.AbstractBsonReader.getState()",1,1,1
"org.bson.AbstractBsonReader.isClosed()",1,1,1
"org.bson.AbstractBsonReader.peekBinarySize()",1,1,1
"org.bson.AbstractBsonReader.peekBinarySubType()",1,1,1
"org.bson.AbstractBsonReader.readBinaryData()",1,1,1
"org.bson.AbstractBsonReader.readBinaryData(String)",1,1,1
"org.bson.AbstractBsonReader.readBoolean()",1,1,1
"org.bson.AbstractBsonReader.readBoolean(String)",1,1,1
"org.bson.AbstractBsonReader.readDBPointer()",1,1,1
"org.bson.AbstractBsonReader.readDBPointer(String)",1,1,1
"org.bson.AbstractBsonReader.readDateTime()",1,1,1
"org.bson.AbstractBsonReader.readDateTime(String)",1,1,1
"org.bson.AbstractBsonReader.readDecimal128()",1,1,1
"org.bson.AbstractBsonReader.readDecimal128(String)",1,1,1
"org.bson.AbstractBsonReader.readDouble()",1,1,1
"org.bson.AbstractBsonReader.readDouble(String)",1,1,1
"org.bson.AbstractBsonReader.readEndArray()",2,4,5
"org.bson.AbstractBsonReader.readEndDocument()",2,5,6
"org.bson.AbstractBsonReader.readInt32()",1,1,1
"org.bson.AbstractBsonReader.readInt32(String)",1,1,1
"org.bson.AbstractBsonReader.readInt64()",1,1,1
"org.bson.AbstractBsonReader.readInt64(String)",1,1,1
"org.bson.AbstractBsonReader.readJavaScript()",1,1,1
"org.bson.AbstractBsonReader.readJavaScript(String)",1,1,1
"org.bson.AbstractBsonReader.readJavaScriptWithScope()",1,1,1
"org.bson.AbstractBsonReader.readJavaScriptWithScope(String)",1,1,1
"org.bson.AbstractBsonReader.readMaxKey()",1,1,1
"org.bson.AbstractBsonReader.readMaxKey(String)",1,1,1
"org.bson.AbstractBsonReader.readMinKey()",1,1,1
"org.bson.AbstractBsonReader.readMinKey(String)",1,1,1
"org.bson.AbstractBsonReader.readName()",1,3,3
"org.bson.AbstractBsonReader.readName(String)",1,1,1
"org.bson.AbstractBsonReader.readNull()",1,1,1
"org.bson.AbstractBsonReader.readNull(String)",1,1,1
"org.bson.AbstractBsonReader.readObjectId()",1,1,1
"org.bson.AbstractBsonReader.readObjectId(String)",1,1,1
"org.bson.AbstractBsonReader.readRegularExpression()",1,1,1
"org.bson.AbstractBsonReader.readRegularExpression(String)",1,1,1
"org.bson.AbstractBsonReader.readStartArray()",1,1,1
"org.bson.AbstractBsonReader.readStartDocument()",1,1,1
"org.bson.AbstractBsonReader.readString()",1,1,1
"org.bson.AbstractBsonReader.readString(String)",1,1,1
"org.bson.AbstractBsonReader.readSymbol()",1,1,1
"org.bson.AbstractBsonReader.readSymbol(String)",1,1,1
"org.bson.AbstractBsonReader.readTimestamp()",1,1,1
"org.bson.AbstractBsonReader.readTimestamp(String)",1,1,1
"org.bson.AbstractBsonReader.readUndefined()",1,1,1
"org.bson.AbstractBsonReader.readUndefined(String)",1,1,1
"org.bson.AbstractBsonReader.setContext(Context)",1,1,1
"org.bson.AbstractBsonReader.setCurrentBsonType(BsonType)",1,1,1
"org.bson.AbstractBsonReader.setCurrentName(String)",1,1,1
"org.bson.AbstractBsonReader.setState(State)",1,1,1
"org.bson.AbstractBsonReader.setStateOnEnd()",2,2,4
"org.bson.AbstractBsonReader.skipName()",2,2,3
"org.bson.AbstractBsonReader.skipValue()",2,2,3
"org.bson.AbstractBsonReader.throwInvalidContextType(String,BsonContextType,BsonContextType...)",1,1,1
"org.bson.AbstractBsonReader.throwInvalidState(String,State...)",1,1,1
"org.bson.AbstractBsonReader.verifyBSONType(String,BsonType)",2,5,7
"org.bson.AbstractBsonReader.verifyName(String)",2,2,2
"org.bson.AbstractBsonWriter.AbstractBsonWriter(BsonWriterSettings)",1,1,1
"org.bson.AbstractBsonWriter.AbstractBsonWriter(BsonWriterSettings,FieldNameValidator)",2,1,2
"org.bson.AbstractBsonWriter.Context.Context(Context)",1,1,1
"org.bson.AbstractBsonWriter.Context.Context(Context,BsonContextType)",1,1,1
"org.bson.AbstractBsonWriter.Context.copy()",1,1,1
"org.bson.AbstractBsonWriter.Context.getContextType()",1,1,1
"org.bson.AbstractBsonWriter.Context.getParentContext()",1,1,1
"org.bson.AbstractBsonWriter.Mark.Mark()",1,1,1
"org.bson.AbstractBsonWriter.Mark.reset()",1,1,1
"org.bson.AbstractBsonWriter.checkPreconditions(String,State...)",2,2,3
"org.bson.AbstractBsonWriter.checkState(State[])",3,2,3
"org.bson.AbstractBsonWriter.close()",1,1,1
"org.bson.AbstractBsonWriter.doWriteName(String)",1,1,1
"org.bson.AbstractBsonWriter.getContext()",1,1,1
"org.bson.AbstractBsonWriter.getName()",1,1,1
"org.bson.AbstractBsonWriter.getNextState()",2,1,2
"org.bson.AbstractBsonWriter.getState()",1,1,1
"org.bson.AbstractBsonWriter.isClosed()",1,1,1
"org.bson.AbstractBsonWriter.pipe(BsonReader)",1,2,2
"org.bson.AbstractBsonWriter.pipeArray(BsonArray)",1,2,2
"org.bson.AbstractBsonWriter.pipeArray(BsonReader)",1,2,2
"org.bson.AbstractBsonWriter.pipeDocument(BsonDocument)",1,2,2
"org.bson.AbstractBsonWriter.pipeDocument(BsonReader)",1,2,2
"org.bson.AbstractBsonWriter.pipeJavascriptWithScope(BsonJavaScriptWithScope)",1,1,1
"org.bson.AbstractBsonWriter.pipeJavascriptWithScope(BsonReader)",1,1,1
"org.bson.AbstractBsonWriter.pipeValue(BsonReader)",2,2,23
"org.bson.AbstractBsonWriter.pipeValue(BsonValue)",2,2,23
"org.bson.AbstractBsonWriter.setContext(Context)",1,1,1
"org.bson.AbstractBsonWriter.setState(State)",1,1,1
"org.bson.AbstractBsonWriter.throwInvalidContextType(String,BsonContextType,BsonContextType...)",1,1,1
"org.bson.AbstractBsonWriter.throwInvalidState(String,State...)",3,5,8
"org.bson.AbstractBsonWriter.writeBinaryData(BsonBinary)",1,1,1
"org.bson.AbstractBsonWriter.writeBinaryData(String,BsonBinary)",1,1,1
"org.bson.AbstractBsonWriter.writeBoolean(String,boolean)",1,1,1
"org.bson.AbstractBsonWriter.writeBoolean(boolean)",1,1,1
"org.bson.AbstractBsonWriter.writeDBPointer(BsonDbPointer)",1,1,1
"org.bson.AbstractBsonWriter.writeDBPointer(String,BsonDbPointer)",1,1,1
"org.bson.AbstractBsonWriter.writeDateTime(String,long)",1,1,1
"org.bson.AbstractBsonWriter.writeDateTime(long)",1,1,1
"org.bson.AbstractBsonWriter.writeDecimal128(Decimal128)",1,1,1
"org.bson.AbstractBsonWriter.writeDecimal128(String,Decimal128)",1,1,1
"org.bson.AbstractBsonWriter.writeDouble(String,double)",1,1,1
"org.bson.AbstractBsonWriter.writeDouble(double)",1,1,1
"org.bson.AbstractBsonWriter.writeEndArray()",1,4,4
"org.bson.AbstractBsonWriter.writeEndDocument()",1,6,7
"org.bson.AbstractBsonWriter.writeInt32(String,int)",1,1,1
"org.bson.AbstractBsonWriter.writeInt32(int)",1,1,1
"org.bson.AbstractBsonWriter.writeInt64(String,long)",1,1,1
"org.bson.AbstractBsonWriter.writeInt64(long)",1,1,1
"org.bson.AbstractBsonWriter.writeJavaScript(String)",1,1,1
"org.bson.AbstractBsonWriter.writeJavaScript(String,String)",1,1,1
"org.bson.AbstractBsonWriter.writeJavaScriptWithScope(String)",1,1,1
"org.bson.AbstractBsonWriter.writeJavaScriptWithScope(String,String)",1,1,1
"org.bson.AbstractBsonWriter.writeMaxKey()",1,1,1
"org.bson.AbstractBsonWriter.writeMaxKey(String)",1,1,1
"org.bson.AbstractBsonWriter.writeMinKey()",1,1,1
"org.bson.AbstractBsonWriter.writeMinKey(String)",1,1,1
"org.bson.AbstractBsonWriter.writeName(String)",2,3,3
"org.bson.AbstractBsonWriter.writeNull()",1,1,1
"org.bson.AbstractBsonWriter.writeNull(String)",1,1,1
"org.bson.AbstractBsonWriter.writeObjectId(ObjectId)",1,1,1
"org.bson.AbstractBsonWriter.writeObjectId(String,ObjectId)",1,1,1
"org.bson.AbstractBsonWriter.writeRegularExpression(BsonRegularExpression)",1,1,1
"org.bson.AbstractBsonWriter.writeRegularExpression(String,BsonRegularExpression)",1,1,1
"org.bson.AbstractBsonWriter.writeStartArray()",2,2,4
"org.bson.AbstractBsonWriter.writeStartArray(String)",1,1,1
"org.bson.AbstractBsonWriter.writeStartDocument()",2,2,4
"org.bson.AbstractBsonWriter.writeStartDocument(String)",1,1,1
"org.bson.AbstractBsonWriter.writeString(String)",1,1,1
"org.bson.AbstractBsonWriter.writeString(String,String)",1,1,1
"org.bson.AbstractBsonWriter.writeSymbol(String)",1,1,1
"org.bson.AbstractBsonWriter.writeSymbol(String,String)",1,1,1
"org.bson.AbstractBsonWriter.writeTimestamp(BsonTimestamp)",1,1,1
"org.bson.AbstractBsonWriter.writeTimestamp(String,BsonTimestamp)",1,1,1
"org.bson.AbstractBsonWriter.writeUndefined()",1,1,1
"org.bson.AbstractBsonWriter.writeUndefined(String)",1,1,1
"org.bson.BSON.addDecodingHook(Class<?>,Transformer)",1,2,2
"org.bson.BSON.addEncodingHook(Class<?>,Transformer)",1,2,2
"org.bson.BSON.applyDecodingHooks(Object)",2,5,6
"org.bson.BSON.applyEncodingHooks(Object)",2,5,6
"org.bson.BSON.clearAllHooks()",1,1,1
"org.bson.BSON.clearDecodingHooks()",1,1,1
"org.bson.BSON.clearEncodingHooks()",1,1,1
"org.bson.BSON.decode(byte[])",1,1,1
"org.bson.BSON.encode(BSONObject)",1,1,1
"org.bson.BSON.getDecodingHooks(Class<?>)",1,1,1
"org.bson.BSON.getEncodingHooks(Class<?>)",1,1,1
"org.bson.BSON.hasDecodeHooks()",1,1,1
"org.bson.BSON.hasEncodeHooks()",1,1,1
"org.bson.BSON.regexFlag(char)",2,2,2
"org.bson.BSON.regexFlags(String)",2,2,3
"org.bson.BSON.regexFlags(int)",2,3,4
"org.bson.BSON.removeDecodingHook(Class<?>,Transformer)",1,1,1
"org.bson.BSON.removeDecodingHooks(Class<?>)",1,1,1
"org.bson.BSON.removeEncodingHook(Class<?>,Transformer)",1,1,1
"org.bson.BSON.removeEncodingHooks(Class<?>)",1,1,1
"org.bson.BSON.toInt(Object)",4,2,5
"org.bson.BSONCallbackAdapter.BSONCallbackAdapter(BsonWriterSettings,BSONCallback)",1,1,1
"org.bson.BSONCallbackAdapter.Context.Context(Context,BsonContextType)",1,1,1
"org.bson.BSONCallbackAdapter.Context.getParentContext()",1,1,1
"org.bson.BSONCallbackAdapter.doWriteBinaryData(BsonBinary)",1,2,2
"org.bson.BSONCallbackAdapter.doWriteBoolean(boolean)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteDBPointer(BsonDbPointer)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteDateTime(long)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteDecimal128(Decimal128)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteDouble(double)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteEndArray()",1,1,1
"org.bson.BSONCallbackAdapter.doWriteEndDocument()",1,2,2
"org.bson.BSONCallbackAdapter.doWriteInt32(int)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteInt64(long)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteJavaScript(String)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteJavaScriptWithScope(String)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteMaxKey()",1,1,1
"org.bson.BSONCallbackAdapter.doWriteMinKey()",1,1,1
"org.bson.BSONCallbackAdapter.doWriteNull()",1,1,1
"org.bson.BSONCallbackAdapter.doWriteObjectId(ObjectId)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteRegularExpression(BsonRegularExpression)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteStartArray()",1,1,1
"org.bson.BSONCallbackAdapter.doWriteStartDocument()",1,3,4
"org.bson.BSONCallbackAdapter.doWriteString(String)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteSymbol(String)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteTimestamp(BsonTimestamp)",1,1,1
"org.bson.BSONCallbackAdapter.doWriteUndefined()",1,1,1
"org.bson.BSONCallbackAdapter.flush()",1,1,1
"org.bson.BSONCallbackAdapter.getContext()",1,1,1
"org.bson.BSONCallbackAdapter.getName()",2,2,2
"org.bson.BSONException.BSONException(String)",1,1,1
"org.bson.BSONException.BSONException(String,Throwable)",1,1,1
"org.bson.BSONException.BSONException(int,String)",1,1,1
"org.bson.BSONException.BSONException(int,String,Throwable)",1,1,1
"org.bson.BSONException.getErrorCode()",1,1,1
"org.bson.BSONException.hasErrorCode()",1,1,1
"org.bson.BasicBSONCallback.BasicBSONCallback()",1,1,1
"org.bson.BasicBSONCallback._put(String,Object)",1,2,2
"org.bson.BasicBSONCallback.arrayDone()",1,1,1
"org.bson.BasicBSONCallback.arrayStart()",1,1,1
"org.bson.BasicBSONCallback.arrayStart(String)",1,1,1
"org.bson.BasicBSONCallback.create()",1,1,1
"org.bson.BasicBSONCallback.create(boolean,List<String>)",1,2,2
"org.bson.BasicBSONCallback.createBSONCallback()",1,1,1
"org.bson.BasicBSONCallback.createList()",1,1,1
"org.bson.BasicBSONCallback.cur()",1,1,1
"org.bson.BasicBSONCallback.curName()",1,1,1
"org.bson.BasicBSONCallback.get()",1,1,1
"org.bson.BasicBSONCallback.gotBinary(String,byte,byte[])",1,2,3
"org.bson.BasicBSONCallback.gotBinaryArray(String,byte[])",1,1,1
"org.bson.BasicBSONCallback.gotBoolean(String,boolean)",1,1,1
"org.bson.BasicBSONCallback.gotCode(String,String)",1,1,1
"org.bson.BasicBSONCallback.gotCodeWScope(String,String,Object)",1,1,1
"org.bson.BasicBSONCallback.gotDBRef(String,String,ObjectId)",1,1,1
"org.bson.BasicBSONCallback.gotDate(String,long)",1,1,1
"org.bson.BasicBSONCallback.gotDecimal128(String,Decimal128)",1,1,1
"org.bson.BasicBSONCallback.gotDouble(String,double)",1,1,1
"org.bson.BasicBSONCallback.gotInt(String,int)",1,1,1
"org.bson.BasicBSONCallback.gotLong(String,long)",1,1,1
"org.bson.BasicBSONCallback.gotMaxKey(String)",1,1,1
"org.bson.BasicBSONCallback.gotMinKey(String)",1,1,1
"org.bson.BasicBSONCallback.gotNull(String)",1,1,1
"org.bson.BasicBSONCallback.gotObjectId(String,ObjectId)",1,1,1
"org.bson.BasicBSONCallback.gotRegex(String,String,String)",1,1,1
"org.bson.BasicBSONCallback.gotString(String,String)",1,1,1
"org.bson.BasicBSONCallback.gotSymbol(String,String)",1,1,1
"org.bson.BasicBSONCallback.gotTimestamp(String,int,int)",1,1,1
"org.bson.BasicBSONCallback.gotUUID(String,long,long)",1,1,1
"org.bson.BasicBSONCallback.gotUndefined(String)",1,1,1
"org.bson.BasicBSONCallback.isStackEmpty()",1,1,1
"org.bson.BasicBSONCallback.objectDone()",3,3,4
"org.bson.BasicBSONCallback.objectStart()",2,1,2
"org.bson.BasicBSONCallback.objectStart(String)",1,1,1
"org.bson.BasicBSONCallback.reset()",1,1,1
"org.bson.BasicBSONCallback.setRoot(Object)",1,1,1
"org.bson.BasicBSONDecoder.decode(InputStream,BSONCallback)",1,1,1
"org.bson.BasicBSONDecoder.decode(byte[],BSONCallback)",1,1,1
"org.bson.BasicBSONDecoder.readFully(InputStream)",1,1,1
"org.bson.BasicBSONDecoder.readObject(InputStream)",1,1,1
"org.bson.BasicBSONDecoder.readObject(byte[])",1,1,1
"org.bson.BasicBSONEncoder._putObjectField(String,Object)",27,28,30
"org.bson.BasicBSONEncoder.done()",1,1,1
"org.bson.BasicBSONEncoder.encode(BSONObject)",1,1,1
"org.bson.BasicBSONEncoder.getBsonWriter()",1,1,1
"org.bson.BasicBSONEncoder.getOutputBuffer()",1,1,1
"org.bson.BasicBSONEncoder.isTopLevelDocument()",1,1,1
"org.bson.BasicBSONEncoder.putArray(String,Object)",1,18,18
"org.bson.BasicBSONEncoder.putBinary(String,Binary)",1,1,1
"org.bson.BasicBSONEncoder.putBinary(String,byte[])",1,1,1
"org.bson.BasicBSONEncoder.putBoolean(String,Boolean)",1,1,1
"org.bson.BasicBSONEncoder.putCode(String,Code)",1,1,1
"org.bson.BasicBSONEncoder.putCodeWScope(String,CodeWScope)",1,1,1
"org.bson.BasicBSONEncoder.putDate(String,Date)",1,1,1
"org.bson.BasicBSONEncoder.putDecimal128(String,Decimal128)",1,1,1
"org.bson.BasicBSONEncoder.putIterable(String,Iterable)",1,2,2
"org.bson.BasicBSONEncoder.putMap(String,Map)",1,2,2
"org.bson.BasicBSONEncoder.putMaxKey(String)",1,1,1
"org.bson.BasicBSONEncoder.putMinKey(String)",1,1,1
"org.bson.BasicBSONEncoder.putName(String)",1,2,2
"org.bson.BasicBSONEncoder.putNull(String)",1,1,1
"org.bson.BasicBSONEncoder.putNumber(String,Number)",4,4,9
"org.bson.BasicBSONEncoder.putObject(BSONObject)",3,5,6
"org.bson.BasicBSONEncoder.putObject(String,BSONObject)",1,1,1
"org.bson.BasicBSONEncoder.putObjectId(String,ObjectId)",1,1,1
"org.bson.BasicBSONEncoder.putPattern(String,Pattern)",1,1,1
"org.bson.BasicBSONEncoder.putSpecial(String,Object)",1,1,1
"org.bson.BasicBSONEncoder.putString(String,String)",1,1,1
"org.bson.BasicBSONEncoder.putSymbol(String,Symbol)",1,1,1
"org.bson.BasicBSONEncoder.putTimestamp(String,BSONTimestamp)",1,1,1
"org.bson.BasicBSONEncoder.putUUID(String,UUID)",1,1,1
"org.bson.BasicBSONEncoder.putUndefined(String)",1,1,1
"org.bson.BasicBSONEncoder.set(OutputBuffer)",2,1,2
"org.bson.BasicBSONEncoder.writeLongToArrayLittleEndian(byte[],int,long)",1,1,1
"org.bson.BasicBSONObject.BasicBSONObject()",1,1,1
"org.bson.BasicBSONObject.BasicBSONObject(Map)",1,1,1
"org.bson.BasicBSONObject.BasicBSONObject(String,Object)",1,1,1
"org.bson.BasicBSONObject.BasicBSONObject(int)",1,1,1
"org.bson.BasicBSONObject.append(String,Object)",1,1,1
"org.bson.BasicBSONObject.canonicalize(Object)",4,4,5
"org.bson.BasicBSONObject.canonicalizeBSONObject(BSONObject)",1,2,2
"org.bson.BasicBSONObject.canonicalizeList(List<Object>)",1,2,2
"org.bson.BasicBSONObject.canonicalizeMap(Map<String, Object>)",1,2,2
"org.bson.BasicBSONObject.containsField(String)",1,1,1
"org.bson.BasicBSONObject.containsKey(String)",1,1,1
"org.bson.BasicBSONObject.encode()",1,1,1
"org.bson.BasicBSONObject.equals(Object)",4,1,4
"org.bson.BasicBSONObject.get(String)",1,1,1
"org.bson.BasicBSONObject.getBoolean(String)",1,1,1
"org.bson.BasicBSONObject.getBoolean(String,boolean)",4,2,4
"org.bson.BasicBSONObject.getDate(String)",1,1,1
"org.bson.BasicBSONObject.getDate(String,Date)",1,1,2
"org.bson.BasicBSONObject.getDouble(String)",1,1,1
"org.bson.BasicBSONObject.getDouble(String,double)",2,1,2
"org.bson.BasicBSONObject.getInt(String)",2,1,2
"org.bson.BasicBSONObject.getInt(String,int)",2,1,2
"org.bson.BasicBSONObject.getLong(String)",1,1,1
"org.bson.BasicBSONObject.getLong(String,long)",2,1,2
"org.bson.BasicBSONObject.getObjectId(String)",1,1,1
"org.bson.BasicBSONObject.getObjectId(String,ObjectId)",1,1,2
"org.bson.BasicBSONObject.getString(String)",2,1,2
"org.bson.BasicBSONObject.getString(String,String)",2,1,2
"org.bson.BasicBSONObject.hashCode()",1,1,1
"org.bson.BasicBSONObject.putAll(BSONObject)",1,2,2
"org.bson.BasicBSONObject.putAll(Map)",1,2,2
"org.bson.BasicBSONObject.removeField(String)",1,1,1
"org.bson.BasicBSONObject.toInt(Object)",3,2,4
"org.bson.BasicBSONObject.toMap()",1,1,1
"org.bson.BasicBSONObject.toString()",1,1,1
"org.bson.BsonArray.BsonArray()",1,1,1
"org.bson.BsonArray.BsonArray(List<? extends BsonValue>)",1,1,1
"org.bson.BsonArray.add(BsonValue)",1,1,1
"org.bson.BsonArray.add(int,BsonValue)",1,1,1
"org.bson.BsonArray.addAll(Collection<? extends BsonValue>)",1,1,1
"org.bson.BsonArray.addAll(int,Collection<? extends BsonValue>)",1,1,1
"org.bson.BsonArray.clear()",1,1,1
"org.bson.BsonArray.clone()",2,3,7
"org.bson.BsonArray.contains(Object)",1,1,1
"org.bson.BsonArray.containsAll(Collection<?>)",1,1,1
"org.bson.BsonArray.equals(Object)",4,2,5
"org.bson.BsonArray.get(int)",1,1,1
"org.bson.BsonArray.getBsonType()",1,1,1
"org.bson.BsonArray.getValues()",1,1,1
"org.bson.BsonArray.hashCode()",1,1,1
"org.bson.BsonArray.indexOf(Object)",1,1,1
"org.bson.BsonArray.isEmpty()",1,1,1
"org.bson.BsonArray.iterator()",1,1,1
"org.bson.BsonArray.lastIndexOf(Object)",1,1,1
"org.bson.BsonArray.listIterator()",1,1,1
"org.bson.BsonArray.listIterator(int)",1,1,1
"org.bson.BsonArray.parse(String)",1,1,1
"org.bson.BsonArray.remove(Object)",1,1,1
"org.bson.BsonArray.remove(int)",1,1,1
"org.bson.BsonArray.removeAll(Collection<?>)",1,1,1
"org.bson.BsonArray.retainAll(Collection<?>)",1,1,1
"org.bson.BsonArray.set(int,BsonValue)",1,1,1
"org.bson.BsonArray.size()",1,1,1
"org.bson.BsonArray.subList(int,int)",1,1,1
"org.bson.BsonArray.toArray()",1,1,1
"org.bson.BsonArray.toArray(T[])",1,1,1
"org.bson.BsonArray.toString()",1,1,1
"org.bson.BsonBinary.BsonBinary(BsonBinarySubType,byte[])",3,1,3
"org.bson.BsonBinary.BsonBinary(byte,byte[])",2,1,2
"org.bson.BsonBinary.BsonBinary(byte[])",1,1,1
"org.bson.BsonBinary.clone(BsonBinary)",1,1,1
"org.bson.BsonBinary.equals(Object)",5,2,6
"org.bson.BsonBinary.getBsonType()",1,1,1
"org.bson.BsonBinary.getData()",1,1,1
"org.bson.BsonBinary.getType()",1,1,1
"org.bson.BsonBinary.hashCode()",1,1,1
"org.bson.BsonBinary.toString()",1,1,1
"org.bson.BsonBinaryReader.BsonBinaryReader(BsonInput)",2,1,2
"org.bson.BsonBinaryReader.BsonBinaryReader(ByteBuffer)",1,1,1
"org.bson.BsonBinaryReader.Context.Context(Context,BsonContextType,int,int)",1,1,1
"org.bson.BsonBinaryReader.Context.getParentContext()",1,1,1
"org.bson.BsonBinaryReader.Context.popContext(int)",2,2,2
"org.bson.BsonBinaryReader.Mark.Mark()",1,1,1
"org.bson.BsonBinaryReader.Mark.reset()",1,1,1
"org.bson.BsonBinaryReader.close()",1,1,1
"org.bson.BsonBinaryReader.doPeekBinarySize()",1,1,1
"org.bson.BsonBinaryReader.doPeekBinarySubType()",1,1,1
"org.bson.BsonBinaryReader.doReadBinaryData()",3,2,3
"org.bson.BsonBinaryReader.doReadBoolean()",2,2,3
"org.bson.BsonBinaryReader.doReadDBPointer()",1,1,1
"org.bson.BsonBinaryReader.doReadDateTime()",1,1,1
"org.bson.BsonBinaryReader.doReadDecimal128()",1,1,1
"org.bson.BsonBinaryReader.doReadDouble()",1,1,1
"org.bson.BsonBinaryReader.doReadEndArray()",1,1,1
"org.bson.BsonBinaryReader.doReadEndDocument()",1,2,2
"org.bson.BsonBinaryReader.doReadInt32()",1,1,1
"org.bson.BsonBinaryReader.doReadInt64()",1,1,1
"org.bson.BsonBinaryReader.doReadJavaScript()",1,1,1
"org.bson.BsonBinaryReader.doReadJavaScriptWithScope()",1,1,1
"org.bson.BsonBinaryReader.doReadMaxKey()",1,1,1
"org.bson.BsonBinaryReader.doReadMinKey()",1,1,1
"org.bson.BsonBinaryReader.doReadNull()",1,1,1
"org.bson.BsonBinaryReader.doReadObjectId()",1,1,1
"org.bson.BsonBinaryReader.doReadRegularExpression()",1,1,1
"org.bson.BsonBinaryReader.doReadStartArray()",1,1,1
"org.bson.BsonBinaryReader.doReadStartDocument()",1,1,2
"org.bson.BsonBinaryReader.doReadString()",1,1,1
"org.bson.BsonBinaryReader.doReadSymbol()",1,1,1
"org.bson.BsonBinaryReader.doReadTimestamp()",1,1,1
"org.bson.BsonBinaryReader.doReadUndefined()",1,1,1
"org.bson.BsonBinaryReader.doSkipName()",1,1,1
"org.bson.BsonBinaryReader.doSkipValue()",3,3,25
"org.bson.BsonBinaryReader.getBsonInput()",1,1,1
"org.bson.BsonBinaryReader.getContext()",1,1,1
"org.bson.BsonBinaryReader.getMark()",1,1,1
"org.bson.BsonBinaryReader.mark()",2,1,2
"org.bson.BsonBinaryReader.readBsonType()",7,9,14
"org.bson.BsonBinaryReader.readSize()",2,2,2
"org.bson.BsonBinaryReader.reset()",2,1,2
"org.bson.BsonBinarySubType.BsonBinarySubType(byte)",1,1,1
"org.bson.BsonBinarySubType.getValue()",1,1,1
"org.bson.BsonBinarySubType.isUuid(byte)",1,2,2
"org.bson.BsonBinaryWriter.BsonBinaryWriter(BsonOutput)",1,1,1
"org.bson.BsonBinaryWriter.BsonBinaryWriter(BsonOutput,FieldNameValidator)",1,1,1
"org.bson.BsonBinaryWriter.BsonBinaryWriter(BsonWriterSettings,BsonBinaryWriterSettings,BsonOutput)",1,1,1
"org.bson.BsonBinaryWriter.BsonBinaryWriter(BsonWriterSettings,BsonBinaryWriterSettings,BsonOutput,FieldNameValidator)",1,1,1
"org.bson.BsonBinaryWriter.Context.Context(Context)",1,1,1
"org.bson.BsonBinaryWriter.Context.Context(Context,BsonContextType,int)",1,1,1
"org.bson.BsonBinaryWriter.Context.copy()",1,1,1
"org.bson.BsonBinaryWriter.Context.getParentContext()",1,1,1
"org.bson.BsonBinaryWriter.Mark.Mark()",1,1,1
"org.bson.BsonBinaryWriter.Mark.reset()",1,1,1
"org.bson.BsonBinaryWriter.backpatchSize()",1,1,1
"org.bson.BsonBinaryWriter.close()",1,1,1
"org.bson.BsonBinaryWriter.doWriteBinaryData(BsonBinary)",1,2,3
"org.bson.BsonBinaryWriter.doWriteBoolean(boolean)",1,1,2
"org.bson.BsonBinaryWriter.doWriteDBPointer(BsonDbPointer)",1,1,1
"org.bson.BsonBinaryWriter.doWriteDateTime(long)",1,1,1
"org.bson.BsonBinaryWriter.doWriteDecimal128(Decimal128)",1,1,1
"org.bson.BsonBinaryWriter.doWriteDouble(double)",1,1,1
"org.bson.BsonBinaryWriter.doWriteEndArray()",1,1,1
"org.bson.BsonBinaryWriter.doWriteEndDocument()",1,3,3
"org.bson.BsonBinaryWriter.doWriteInt32(int)",1,1,1
"org.bson.BsonBinaryWriter.doWriteInt64(long)",1,1,1
"org.bson.BsonBinaryWriter.doWriteJavaScript(String)",1,1,1
"org.bson.BsonBinaryWriter.doWriteJavaScriptWithScope(String)",1,1,1
"org.bson.BsonBinaryWriter.doWriteMaxKey()",1,1,1
"org.bson.BsonBinaryWriter.doWriteMinKey()",1,1,1
"org.bson.BsonBinaryWriter.doWriteNull()",1,1,1
"org.bson.BsonBinaryWriter.doWriteObjectId(ObjectId)",1,1,1
"org.bson.BsonBinaryWriter.doWriteRegularExpression(BsonRegularExpression)",1,1,1
"org.bson.BsonBinaryWriter.doWriteStartArray()",1,1,1
"org.bson.BsonBinaryWriter.doWriteStartDocument()",1,2,2
"org.bson.BsonBinaryWriter.doWriteString(String)",1,1,1
"org.bson.BsonBinaryWriter.doWriteSymbol(String)",1,1,1
"org.bson.BsonBinaryWriter.doWriteTimestamp(BsonTimestamp)",1,1,1
"org.bson.BsonBinaryWriter.doWriteUndefined()",1,1,1
"org.bson.BsonBinaryWriter.flush()",1,1,1
"org.bson.BsonBinaryWriter.getBinaryWriterSettings()",1,1,1
"org.bson.BsonBinaryWriter.getBsonOutput()",1,1,1
"org.bson.BsonBinaryWriter.getContext()",1,1,1
"org.bson.BsonBinaryWriter.mark()",1,1,1
"org.bson.BsonBinaryWriter.pipe(BsonReader)",3,5,6
"org.bson.BsonBinaryWriter.popMaxDocumentSize()",1,1,1
"org.bson.BsonBinaryWriter.pushMaxDocumentSize(int)",1,1,1
"org.bson.BsonBinaryWriter.reset()",2,1,2
"org.bson.BsonBinaryWriter.validateSize(int)",2,2,2
"org.bson.BsonBinaryWriter.writeCurrentName()",1,2,2
"org.bson.BsonBinaryWriterSettings.BsonBinaryWriterSettings()",1,1,1
"org.bson.BsonBinaryWriterSettings.BsonBinaryWriterSettings(int)",1,1,1
"org.bson.BsonBinaryWriterSettings.getMaxDocumentSize()",1,1,1
"org.bson.BsonBoolean.BsonBoolean(boolean)",1,1,1
"org.bson.BsonBoolean.compareTo(BsonBoolean)",1,1,1
"org.bson.BsonBoolean.equals(Object)",4,2,5
"org.bson.BsonBoolean.getBsonType()",1,1,1
"org.bson.BsonBoolean.getValue()",1,1,1
"org.bson.BsonBoolean.hashCode()",1,1,2
"org.bson.BsonBoolean.toString()",1,1,1
"org.bson.BsonBoolean.valueOf(boolean)",1,1,2
"org.bson.BsonDateTime.BsonDateTime(long)",1,1,1
"org.bson.BsonDateTime.compareTo(BsonDateTime)",1,1,1
"org.bson.BsonDateTime.equals(Object)",4,2,5
"org.bson.BsonDateTime.getBsonType()",1,1,1
"org.bson.BsonDateTime.getValue()",1,1,1
"org.bson.BsonDateTime.hashCode()",1,1,1
"org.bson.BsonDateTime.toString()",1,1,1
"org.bson.BsonDbPointer.BsonDbPointer(String,ObjectId)",3,1,3
"org.bson.BsonDbPointer.equals(Object)",5,2,6
"org.bson.BsonDbPointer.getBsonType()",1,1,1
"org.bson.BsonDbPointer.getId()",1,1,1
"org.bson.BsonDbPointer.getNamespace()",1,1,1
"org.bson.BsonDbPointer.hashCode()",1,1,1
"org.bson.BsonDbPointer.toString()",1,1,1
"org.bson.BsonDecimal128.BsonDecimal128(Decimal128)",1,1,1
"org.bson.BsonDecimal128.decimal128Value()",1,1,1
"org.bson.BsonDecimal128.doubleValue()",1,1,1
"org.bson.BsonDecimal128.equals(Object)",4,2,5
"org.bson.BsonDecimal128.getBsonType()",1,1,1
"org.bson.BsonDecimal128.getValue()",1,1,1
"org.bson.BsonDecimal128.hashCode()",1,1,1
"org.bson.BsonDecimal128.intValue()",1,1,1
"org.bson.BsonDecimal128.longValue()",1,1,1
"org.bson.BsonDecimal128.toString()",1,1,1
"org.bson.BsonDocument.BsonDocument()",1,1,1
"org.bson.BsonDocument.BsonDocument(List<BsonElement>)",1,2,2
"org.bson.BsonDocument.BsonDocument(String,BsonValue)",1,1,1
"org.bson.BsonDocument.SerializationProxy.SerializationProxy(BsonDocument)",1,2,2
"org.bson.BsonDocument.SerializationProxy.readResolve()",1,1,1
"org.bson.BsonDocument.append(String,BsonValue)",1,1,1
"org.bson.BsonDocument.clear()",1,1,1
"org.bson.BsonDocument.clone()",2,3,7
"org.bson.BsonDocument.containsKey(Object)",1,1,1
"org.bson.BsonDocument.containsValue(Object)",1,1,1
"org.bson.BsonDocument.entrySet()",1,1,1
"org.bson.BsonDocument.equals(Object)",3,1,3
"org.bson.BsonDocument.get(Object)",1,1,1
"org.bson.BsonDocument.get(Object,BsonValue)",1,1,2
"org.bson.BsonDocument.getArray(Object)",1,1,1
"org.bson.BsonDocument.getArray(Object,BsonArray)",2,1,2
"org.bson.BsonDocument.getBinary(Object)",1,1,1
"org.bson.BsonDocument.getBinary(Object,BsonBinary)",2,1,2
"org.bson.BsonDocument.getBoolean(Object)",1,1,1
"org.bson.BsonDocument.getBoolean(Object,BsonBoolean)",2,1,2
"org.bson.BsonDocument.getBsonType()",1,1,1
"org.bson.BsonDocument.getDateTime(Object)",1,1,1
"org.bson.BsonDocument.getDateTime(Object,BsonDateTime)",2,1,2
"org.bson.BsonDocument.getDecimal128(Object)",1,1,1
"org.bson.BsonDocument.getDecimal128(Object,BsonDecimal128)",2,1,2
"org.bson.BsonDocument.getDocument(Object)",1,1,1
"org.bson.BsonDocument.getDocument(Object,BsonDocument)",2,1,2
"org.bson.BsonDocument.getDouble(Object)",1,1,1
"org.bson.BsonDocument.getDouble(Object,BsonDouble)",2,1,2
"org.bson.BsonDocument.getInt32(Object)",1,1,1
"org.bson.BsonDocument.getInt32(Object,BsonInt32)",2,1,2
"org.bson.BsonDocument.getInt64(Object)",1,1,1
"org.bson.BsonDocument.getInt64(Object,BsonInt64)",2,1,2
"org.bson.BsonDocument.getNumber(Object)",1,1,1
"org.bson.BsonDocument.getNumber(Object,BsonNumber)",2,1,2
"org.bson.BsonDocument.getObjectId(Object)",1,1,1
"org.bson.BsonDocument.getObjectId(Object,BsonObjectId)",2,1,2
"org.bson.BsonDocument.getRegularExpression(Object)",1,1,1
"org.bson.BsonDocument.getRegularExpression(Object,BsonRegularExpression)",2,1,2
"org.bson.BsonDocument.getString(Object)",1,1,1
"org.bson.BsonDocument.getString(Object,BsonString)",2,1,2
"org.bson.BsonDocument.getTimestamp(Object)",1,1,1
"org.bson.BsonDocument.getTimestamp(Object,BsonTimestamp)",2,1,2
"org.bson.BsonDocument.hashCode()",1,1,1
"org.bson.BsonDocument.isArray(Object)",2,1,2
"org.bson.BsonDocument.isBinary(Object)",2,1,2
"org.bson.BsonDocument.isBoolean(Object)",2,1,2
"org.bson.BsonDocument.isDateTime(Object)",2,1,2
"org.bson.BsonDocument.isDecimal128(Object)",2,1,2
"org.bson.BsonDocument.isDocument(Object)",2,1,2
"org.bson.BsonDocument.isDouble(Object)",2,1,2
"org.bson.BsonDocument.isEmpty()",1,1,1
"org.bson.BsonDocument.isInt32(Object)",2,1,2
"org.bson.BsonDocument.isInt64(Object)",2,1,2
"org.bson.BsonDocument.isNull(Object)",2,1,2
"org.bson.BsonDocument.isNumber(Object)",2,1,2
"org.bson.BsonDocument.isObjectId(Object)",2,1,2
"org.bson.BsonDocument.isString(Object)",2,1,2
"org.bson.BsonDocument.isTimestamp(Object)",2,1,2
"org.bson.BsonDocument.keySet()",1,1,1
"org.bson.BsonDocument.parse(String)",1,1,1
"org.bson.BsonDocument.put(String,BsonValue)",3,3,3
"org.bson.BsonDocument.putAll(Map<? extends String, ? extends BsonValue>)",1,2,2
"org.bson.BsonDocument.readObject(ObjectInputStream)",1,1,1
"org.bson.BsonDocument.remove(Object)",1,1,1
"org.bson.BsonDocument.size()",1,1,1
"org.bson.BsonDocument.throwIfKeyAbsent(Object)",2,1,2
"org.bson.BsonDocument.toBsonDocument(Class<C>,CodecRegistry)",1,1,1
"org.bson.BsonDocument.toJson()",1,1,1
"org.bson.BsonDocument.toJson(JsonWriterSettings)",1,1,1
"org.bson.BsonDocument.toString()",1,1,1
"org.bson.BsonDocument.values()",1,1,1
"org.bson.BsonDocument.writeReplace()",1,1,1
"org.bson.BsonDocumentReader.BsonDocumentMarkableIterator.BsonDocumentMarkableIterator(Iterator<T>)",1,1,1
"org.bson.BsonDocumentReader.BsonDocumentMarkableIterator.hasNext()",1,2,2
"org.bson.BsonDocumentReader.BsonDocumentMarkableIterator.mark()",1,1,1
"org.bson.BsonDocumentReader.BsonDocumentMarkableIterator.next()",1,4,4
"org.bson.BsonDocumentReader.BsonDocumentMarkableIterator.remove()",1,1,1
"org.bson.BsonDocumentReader.BsonDocumentMarkableIterator.reset()",1,1,1
"org.bson.BsonDocumentReader.BsonDocumentReader(BsonDocument)",1,1,1
"org.bson.BsonDocumentReader.Context.Context(Context,BsonContextType,BsonArray)",1,1,1
"org.bson.BsonDocumentReader.Context.Context(Context,BsonContextType,BsonDocument)",1,1,1
"org.bson.BsonDocumentReader.Context.getNextElement()",2,2,2
"org.bson.BsonDocumentReader.Context.getNextValue()",2,2,2
"org.bson.BsonDocumentReader.Context.mark()",1,3,3
"org.bson.BsonDocumentReader.Context.reset()",1,3,3
"org.bson.BsonDocumentReader.Mark.Mark()",1,1,1
"org.bson.BsonDocumentReader.Mark.reset()",1,1,1
"org.bson.BsonDocumentReader.doPeekBinarySize()",1,1,1
"org.bson.BsonDocumentReader.doPeekBinarySubType()",1,1,1
"org.bson.BsonDocumentReader.doReadBinaryData()",1,1,1
"org.bson.BsonDocumentReader.doReadBoolean()",1,1,1
"org.bson.BsonDocumentReader.doReadDBPointer()",1,1,1
"org.bson.BsonDocumentReader.doReadDateTime()",1,1,1
"org.bson.BsonDocumentReader.doReadDecimal128()",1,1,1
"org.bson.BsonDocumentReader.doReadDouble()",1,1,1
"org.bson.BsonDocumentReader.doReadEndArray()",1,1,1
"org.bson.BsonDocumentReader.doReadEndDocument()",2,2,4
"org.bson.BsonDocumentReader.doReadInt32()",1,1,1
"org.bson.BsonDocumentReader.doReadInt64()",1,1,1
"org.bson.BsonDocumentReader.doReadJavaScript()",1,1,1
"org.bson.BsonDocumentReader.doReadJavaScriptWithScope()",1,1,1
"org.bson.BsonDocumentReader.doReadMaxKey()",1,1,1
"org.bson.BsonDocumentReader.doReadMinKey()",1,1,1
"org.bson.BsonDocumentReader.doReadNull()",1,1,1
"org.bson.BsonDocumentReader.doReadObjectId()",1,1,1
"org.bson.BsonDocumentReader.doReadRegularExpression()",1,1,1
"org.bson.BsonDocumentReader.doReadStartArray()",1,1,1
"org.bson.BsonDocumentReader.doReadStartDocument()",1,2,2
"org.bson.BsonDocumentReader.doReadString()",1,1,1
"org.bson.BsonDocumentReader.doReadSymbol()",1,1,1
"org.bson.BsonDocumentReader.doReadTimestamp()",1,1,1
"org.bson.BsonDocumentReader.doReadUndefined()",1,1,1
"org.bson.BsonDocumentReader.doSkipName()",1,1,1
"org.bson.BsonDocumentReader.doSkipValue()",1,1,1
"org.bson.BsonDocumentReader.getContext()",1,1,1
"org.bson.BsonDocumentReader.getMark()",1,1,1
"org.bson.BsonDocumentReader.mark()",2,1,2
"org.bson.BsonDocumentReader.readBsonType()",5,7,9
"org.bson.BsonDocumentReader.reset()",2,1,2
"org.bson.BsonDocumentWrapper.BsonDocumentWrapper(T,Encoder<T>)",2,1,2
"org.bson.BsonDocumentWrapper.asBsonDocument(Object,CodecRegistry)",3,2,3
"org.bson.BsonDocumentWrapper.clear()",1,1,1
"org.bson.BsonDocumentWrapper.clone()",1,1,1
"org.bson.BsonDocumentWrapper.containsKey(Object)",1,1,1
"org.bson.BsonDocumentWrapper.containsValue(Object)",1,1,1
"org.bson.BsonDocumentWrapper.entrySet()",1,1,1
"org.bson.BsonDocumentWrapper.equals(Object)",1,1,1
"org.bson.BsonDocumentWrapper.get(Object)",1,1,1
"org.bson.BsonDocumentWrapper.getEncoder()",1,1,1
"org.bson.BsonDocumentWrapper.getUnwrapped()",2,2,3
"org.bson.BsonDocumentWrapper.getWrappedDocument()",1,1,1
"org.bson.BsonDocumentWrapper.hashCode()",1,1,1
"org.bson.BsonDocumentWrapper.isEmpty()",1,1,1
"org.bson.BsonDocumentWrapper.isUnwrapped()",1,1,1
"org.bson.BsonDocumentWrapper.keySet()",1,1,1
"org.bson.BsonDocumentWrapper.put(String,BsonValue)",1,1,1
"org.bson.BsonDocumentWrapper.putAll(Map<? extends String, ? extends BsonValue>)",1,1,1
"org.bson.BsonDocumentWrapper.readObject(ObjectInputStream)",1,1,1
"org.bson.BsonDocumentWrapper.remove(Object)",1,1,1
"org.bson.BsonDocumentWrapper.size()",1,1,1
"org.bson.BsonDocumentWrapper.toString()",1,1,1
"org.bson.BsonDocumentWrapper.values()",1,1,1
"org.bson.BsonDocumentWrapper.writeReplace()",1,1,1
"org.bson.BsonDocumentWriter.BsonDocumentWriter(BsonDocument)",1,1,1
"org.bson.BsonDocumentWriter.Context.Context()",1,1,1
"org.bson.BsonDocumentWriter.Context.Context(BsonValue,BsonContextType,Context)",1,1,1
"org.bson.BsonDocumentWriter.Context.add(BsonValue)",1,2,2
"org.bson.BsonDocumentWriter.doWriteBinaryData(BsonBinary)",1,1,1
"org.bson.BsonDocumentWriter.doWriteBoolean(boolean)",1,1,1
"org.bson.BsonDocumentWriter.doWriteDBPointer(BsonDbPointer)",1,1,1
"org.bson.BsonDocumentWriter.doWriteDateTime(long)",1,1,1
"org.bson.BsonDocumentWriter.doWriteDecimal128(Decimal128)",1,1,1
"org.bson.BsonDocumentWriter.doWriteDouble(double)",1,1,1
"org.bson.BsonDocumentWriter.doWriteEndArray()",1,1,1
"org.bson.BsonDocumentWriter.doWriteEndDocument()",1,3,3
"org.bson.BsonDocumentWriter.doWriteInt32(int)",1,1,1
"org.bson.BsonDocumentWriter.doWriteInt64(long)",1,1,1
"org.bson.BsonDocumentWriter.doWriteJavaScript(String)",1,1,1
"org.bson.BsonDocumentWriter.doWriteJavaScriptWithScope(String)",1,1,1
"org.bson.BsonDocumentWriter.doWriteMaxKey()",1,1,1
"org.bson.BsonDocumentWriter.doWriteMinKey()",1,1,1
"org.bson.BsonDocumentWriter.doWriteNull()",1,1,1
"org.bson.BsonDocumentWriter.doWriteObjectId(ObjectId)",1,1,1
"org.bson.BsonDocumentWriter.doWriteRegularExpression(BsonRegularExpression)",1,1,1
"org.bson.BsonDocumentWriter.doWriteStartArray()",1,1,1
"org.bson.BsonDocumentWriter.doWriteStartDocument()",2,2,5
"org.bson.BsonDocumentWriter.doWriteString(String)",1,1,1
"org.bson.BsonDocumentWriter.doWriteSymbol(String)",1,1,1
"org.bson.BsonDocumentWriter.doWriteTimestamp(BsonTimestamp)",1,1,1
"org.bson.BsonDocumentWriter.doWriteUndefined()",1,1,1
"org.bson.BsonDocumentWriter.flush()",1,1,1
"org.bson.BsonDocumentWriter.getContext()",1,1,1
"org.bson.BsonDocumentWriter.getDocument()",1,1,1
"org.bson.BsonDocumentWriter.write(BsonValue)",1,1,1
"org.bson.BsonDouble.BsonDouble(double)",1,1,1
"org.bson.BsonDouble.compareTo(BsonDouble)",1,1,1
"org.bson.BsonDouble.decimal128Value()",3,1,4
"org.bson.BsonDouble.doubleValue()",1,1,1
"org.bson.BsonDouble.equals(Object)",4,2,5
"org.bson.BsonDouble.getBsonType()",1,1,1
"org.bson.BsonDouble.getValue()",1,1,1
"org.bson.BsonDouble.hashCode()",1,1,1
"org.bson.BsonDouble.intValue()",1,1,1
"org.bson.BsonDouble.longValue()",1,1,1
"org.bson.BsonDouble.toString()",1,1,1
"org.bson.BsonElement.BsonElement(String,BsonValue)",1,1,1
"org.bson.BsonElement.equals(Object)",5,4,8
"org.bson.BsonElement.getName()",1,1,1
"org.bson.BsonElement.getValue()",1,1,1
"org.bson.BsonElement.hashCode()",1,3,3
"org.bson.BsonInt32.BsonInt32(int)",1,1,1
"org.bson.BsonInt32.compareTo(BsonInt32)",1,1,3
"org.bson.BsonInt32.decimal128Value()",1,1,1
"org.bson.BsonInt32.doubleValue()",1,1,1
"org.bson.BsonInt32.equals(Object)",4,2,5
"org.bson.BsonInt32.getBsonType()",1,1,1
"org.bson.BsonInt32.getValue()",1,1,1
"org.bson.BsonInt32.hashCode()",1,1,1
"org.bson.BsonInt32.intValue()",1,1,1
"org.bson.BsonInt32.longValue()",1,1,1
"org.bson.BsonInt32.toString()",1,1,1
"org.bson.BsonInt64.BsonInt64(long)",1,1,1
"org.bson.BsonInt64.compareTo(BsonInt64)",1,1,3
"org.bson.BsonInt64.decimal128Value()",1,1,1
"org.bson.BsonInt64.doubleValue()",1,1,1
"org.bson.BsonInt64.equals(Object)",4,2,5
"org.bson.BsonInt64.getBsonType()",1,1,1
"org.bson.BsonInt64.getValue()",1,1,1
"org.bson.BsonInt64.hashCode()",1,1,1
"org.bson.BsonInt64.intValue()",1,1,1
"org.bson.BsonInt64.longValue()",1,1,1
"org.bson.BsonInt64.toString()",1,1,1
"org.bson.BsonInvalidOperationException.BsonInvalidOperationException(String)",1,1,1
"org.bson.BsonInvalidOperationException.BsonInvalidOperationException(String,Throwable)",1,1,1
"org.bson.BsonJavaScript.BsonJavaScript(String)",1,1,1
"org.bson.BsonJavaScript.equals(Object)",4,2,5
"org.bson.BsonJavaScript.getBsonType()",1,1,1
"org.bson.BsonJavaScript.getCode()",1,1,1
"org.bson.BsonJavaScript.hashCode()",1,1,1
"org.bson.BsonJavaScript.toString()",1,1,1
"org.bson.BsonJavaScriptWithScope.BsonJavaScriptWithScope(String,BsonDocument)",3,1,3
"org.bson.BsonJavaScriptWithScope.clone(BsonJavaScriptWithScope)",1,1,1
"org.bson.BsonJavaScriptWithScope.equals(Object)",5,2,6
"org.bson.BsonJavaScriptWithScope.getBsonType()",1,1,1
"org.bson.BsonJavaScriptWithScope.getCode()",1,1,1
"org.bson.BsonJavaScriptWithScope.getScope()",1,1,1
"org.bson.BsonJavaScriptWithScope.hashCode()",1,1,1
"org.bson.BsonJavaScriptWithScope.toString()",1,1,1
"org.bson.BsonMaxKey.equals(Object)",1,1,1
"org.bson.BsonMaxKey.getBsonType()",1,1,1
"org.bson.BsonMaxKey.hashCode()",1,1,1
"org.bson.BsonMaxKey.toString()",1,1,1
"org.bson.BsonMinKey.equals(Object)",1,1,1
"org.bson.BsonMinKey.getBsonType()",1,1,1
"org.bson.BsonMinKey.hashCode()",1,1,1
"org.bson.BsonMinKey.toString()",1,1,1
"org.bson.BsonNull.equals(Object)",3,2,4
"org.bson.BsonNull.getBsonType()",1,1,1
"org.bson.BsonNull.hashCode()",1,1,1
"org.bson.BsonNull.toString()",1,1,1
"org.bson.BsonObjectId.BsonObjectId()",1,1,1
"org.bson.BsonObjectId.BsonObjectId(ObjectId)",2,1,2
"org.bson.BsonObjectId.compareTo(BsonObjectId)",1,1,1
"org.bson.BsonObjectId.equals(Object)",4,2,5
"org.bson.BsonObjectId.getBsonType()",1,1,1
"org.bson.BsonObjectId.getValue()",1,1,1
"org.bson.BsonObjectId.hashCode()",1,1,1
"org.bson.BsonObjectId.toString()",1,1,1
"org.bson.BsonRegularExpression.BsonRegularExpression(String)",1,1,1
"org.bson.BsonRegularExpression.BsonRegularExpression(String,String)",1,2,2
"org.bson.BsonRegularExpression.equals(Object)",5,2,6
"org.bson.BsonRegularExpression.getBsonType()",1,1,1
"org.bson.BsonRegularExpression.getOptions()",1,1,1
"org.bson.BsonRegularExpression.getPattern()",1,1,1
"org.bson.BsonRegularExpression.hashCode()",1,1,1
"org.bson.BsonRegularExpression.sortOptionCharacters(String)",1,1,1
"org.bson.BsonRegularExpression.toString()",1,1,1
"org.bson.BsonSerializationException.BsonSerializationException(String)",1,1,1
"org.bson.BsonString.BsonString(String)",2,1,2
"org.bson.BsonString.compareTo(BsonString)",1,1,1
"org.bson.BsonString.equals(Object)",4,2,5
"org.bson.BsonString.getBsonType()",1,1,1
"org.bson.BsonString.getValue()",1,1,1
"org.bson.BsonString.hashCode()",1,1,1
"org.bson.BsonString.toString()",1,1,1
"org.bson.BsonSymbol.BsonSymbol(String)",2,1,2
"org.bson.BsonSymbol.equals(Object)",4,2,5
"org.bson.BsonSymbol.getBsonType()",1,1,1
"org.bson.BsonSymbol.getSymbol()",1,1,1
"org.bson.BsonSymbol.hashCode()",1,1,1
"org.bson.BsonSymbol.toString()",1,1,1
"org.bson.BsonTimestamp.BsonTimestamp()",1,1,1
"org.bson.BsonTimestamp.BsonTimestamp(int,int)",1,1,1
"org.bson.BsonTimestamp.BsonTimestamp(long)",1,1,1
"org.bson.BsonTimestamp.compareTo(BsonTimestamp)",1,1,1
"org.bson.BsonTimestamp.equals(Object)",4,2,5
"org.bson.BsonTimestamp.getBsonType()",1,1,1
"org.bson.BsonTimestamp.getInc()",1,1,1
"org.bson.BsonTimestamp.getTime()",1,1,1
"org.bson.BsonTimestamp.getValue()",1,1,1
"org.bson.BsonTimestamp.hashCode()",1,1,1
"org.bson.BsonTimestamp.toString()",1,1,1
"org.bson.BsonType.BsonType(int)",1,1,1
"org.bson.BsonType.findByValue(int)",1,1,1
"org.bson.BsonType.getValue()",1,1,1
"org.bson.BsonType.isContainer()",1,1,2
"org.bson.BsonUndefined.equals(Object)",3,2,4
"org.bson.BsonUndefined.getBsonType()",1,1,1
"org.bson.BsonUndefined.hashCode()",1,1,1
"org.bson.BsonValue.BsonValue()",1,1,1
"org.bson.BsonValue.asArray()",1,1,1
"org.bson.BsonValue.asBinary()",1,1,1
"org.bson.BsonValue.asBoolean()",1,1,1
"org.bson.BsonValue.asDBPointer()",1,1,1
"org.bson.BsonValue.asDateTime()",1,1,1
"org.bson.BsonValue.asDecimal128()",1,1,1
"org.bson.BsonValue.asDocument()",1,1,1
"org.bson.BsonValue.asDouble()",1,1,1
"org.bson.BsonValue.asInt32()",1,1,1
"org.bson.BsonValue.asInt64()",1,1,1
"org.bson.BsonValue.asJavaScript()",1,1,1
"org.bson.BsonValue.asJavaScriptWithScope()",1,1,1
"org.bson.BsonValue.asNumber()",2,4,4
"org.bson.BsonValue.asObjectId()",1,1,1
"org.bson.BsonValue.asRegularExpression()",1,1,1
"org.bson.BsonValue.asString()",1,1,1
"org.bson.BsonValue.asSymbol()",1,1,1
"org.bson.BsonValue.asTimestamp()",1,1,1
"org.bson.BsonValue.isArray()",1,1,1
"org.bson.BsonValue.isBinary()",1,1,1
"org.bson.BsonValue.isBoolean()",1,1,1
"org.bson.BsonValue.isDBPointer()",1,1,1
"org.bson.BsonValue.isDateTime()",1,1,1
"org.bson.BsonValue.isDecimal128()",1,1,1
"org.bson.BsonValue.isDocument()",1,1,1
"org.bson.BsonValue.isDouble()",1,1,1
"org.bson.BsonValue.isInt32()",1,1,1
"org.bson.BsonValue.isInt64()",1,1,1
"org.bson.BsonValue.isJavaScript()",1,1,1
"org.bson.BsonValue.isJavaScriptWithScope()",1,1,1
"org.bson.BsonValue.isNull()",1,1,1
"org.bson.BsonValue.isNumber()",1,3,3
"org.bson.BsonValue.isObjectId()",1,1,1
"org.bson.BsonValue.isRegularExpression()",1,1,1
"org.bson.BsonValue.isString()",1,1,1
"org.bson.BsonValue.isSymbol()",1,1,1
"org.bson.BsonValue.isTimestamp()",1,1,1
"org.bson.BsonValue.throwIfInvalidType(BsonType)",2,2,2
"org.bson.BsonWriterSettings.BsonWriterSettings()",1,1,1
"org.bson.BsonWriterSettings.BsonWriterSettings(int)",1,1,1
"org.bson.BsonWriterSettings.getMaxSerializationDepth()",1,1,1
"org.bson.ByteBufNIO.ByteBufNIO(ByteBuffer)",1,1,1
"org.bson.ByteBufNIO.array()",1,1,1
"org.bson.ByteBufNIO.asNIO()",1,1,1
"org.bson.ByteBufNIO.asReadOnly()",1,1,1
"org.bson.ByteBufNIO.capacity()",1,1,1
"org.bson.ByteBufNIO.clear()",1,1,1
"org.bson.ByteBufNIO.duplicate()",1,1,1
"org.bson.ByteBufNIO.flip()",1,1,1
"org.bson.ByteBufNIO.get()",1,1,1
"org.bson.ByteBufNIO.get(byte[])",1,1,1
"org.bson.ByteBufNIO.get(byte[],int,int)",1,1,1
"org.bson.ByteBufNIO.get(int)",1,1,1
"org.bson.ByteBufNIO.get(int,byte[])",1,1,1
"org.bson.ByteBufNIO.get(int,byte[],int,int)",1,2,2
"org.bson.ByteBufNIO.getDouble()",1,1,1
"org.bson.ByteBufNIO.getDouble(int)",1,1,1
"org.bson.ByteBufNIO.getInt()",1,1,1
"org.bson.ByteBufNIO.getInt(int)",1,1,1
"org.bson.ByteBufNIO.getLong()",1,1,1
"org.bson.ByteBufNIO.getLong(int)",1,1,1
"org.bson.ByteBufNIO.getReferenceCount()",1,1,1
"org.bson.ByteBufNIO.hasRemaining()",1,1,1
"org.bson.ByteBufNIO.limit()",1,1,1
"org.bson.ByteBufNIO.limit(int)",1,1,1
"org.bson.ByteBufNIO.order(ByteOrder)",1,1,1
"org.bson.ByteBufNIO.position()",1,1,1
"org.bson.ByteBufNIO.position(int)",1,1,1
"org.bson.ByteBufNIO.put(byte)",1,1,1
"org.bson.ByteBufNIO.put(byte[],int,int)",1,1,1
"org.bson.ByteBufNIO.put(int,byte)",1,1,1
"org.bson.ByteBufNIO.release()",2,2,3
"org.bson.ByteBufNIO.remaining()",1,1,1
"org.bson.ByteBufNIO.retain()",2,2,2
"org.bson.Document.Document()",1,1,1
"org.bson.Document.Document(Map<String, Object>)",1,1,1
"org.bson.Document.Document(String,Object)",1,1,1
"org.bson.Document.append(String,Object)",1,1,1
"org.bson.Document.clear()",1,1,1
"org.bson.Document.containsKey(Object)",1,1,1
"org.bson.Document.containsValue(Object)",1,1,1
"org.bson.Document.entrySet()",1,1,1
"org.bson.Document.equals(Object)",4,2,5
"org.bson.Document.get(Object)",1,1,1
"org.bson.Document.get(Object,Class<T>)",1,1,1
"org.bson.Document.get(Object,T)",1,2,2
"org.bson.Document.getBoolean(Object)",1,1,1
"org.bson.Document.getBoolean(Object,boolean)",1,1,1
"org.bson.Document.getDate(Object)",1,1,1
"org.bson.Document.getDouble(Object)",1,1,1
"org.bson.Document.getInteger(Object)",1,1,1
"org.bson.Document.getInteger(Object,int)",1,1,1
"org.bson.Document.getLong(Object)",1,1,1
"org.bson.Document.getObjectId(Object)",1,1,1
"org.bson.Document.getString(Object)",1,1,1
"org.bson.Document.hashCode()",1,1,1
"org.bson.Document.isEmpty()",1,1,1
"org.bson.Document.keySet()",1,1,1
"org.bson.Document.parse(String)",1,1,1
"org.bson.Document.parse(String,Decoder<Document>)",1,1,1
"org.bson.Document.put(String,Object)",1,1,1
"org.bson.Document.putAll(Map<? extends String, ?>)",1,1,1
"org.bson.Document.remove(Object)",1,1,1
"org.bson.Document.size()",1,1,1
"org.bson.Document.toBsonDocument(Class<C>,CodecRegistry)",1,1,1
"org.bson.Document.toJson()",1,1,1
"org.bson.Document.toJson(Encoder<Document>)",1,1,1
"org.bson.Document.toJson(JsonWriterSettings)",1,1,1
"org.bson.Document.toJson(JsonWriterSettings,Encoder<Document>)",1,1,1
"org.bson.Document.toString()",1,1,1
"org.bson.Document.values()",1,1,1
"org.bson.EmptyBSONCallback.arrayDone()",1,1,1
"org.bson.EmptyBSONCallback.arrayStart()",1,1,1
"org.bson.EmptyBSONCallback.arrayStart(String)",1,1,1
"org.bson.EmptyBSONCallback.createBSONCallback()",1,1,1
"org.bson.EmptyBSONCallback.get()",1,1,1
"org.bson.EmptyBSONCallback.gotBinary(String,byte,byte[])",1,1,1
"org.bson.EmptyBSONCallback.gotBinaryArray(String,byte[])",1,1,1
"org.bson.EmptyBSONCallback.gotBoolean(String,boolean)",1,1,1
"org.bson.EmptyBSONCallback.gotCode(String,String)",1,1,1
"org.bson.EmptyBSONCallback.gotCodeWScope(String,String,Object)",1,1,1
"org.bson.EmptyBSONCallback.gotDBRef(String,String,ObjectId)",1,1,1
"org.bson.EmptyBSONCallback.gotDate(String,long)",1,1,1
"org.bson.EmptyBSONCallback.gotDecimal128(String,Decimal128)",1,1,1
"org.bson.EmptyBSONCallback.gotDouble(String,double)",1,1,1
"org.bson.EmptyBSONCallback.gotInt(String,int)",1,1,1
"org.bson.EmptyBSONCallback.gotLong(String,long)",1,1,1
"org.bson.EmptyBSONCallback.gotMaxKey(String)",1,1,1
"org.bson.EmptyBSONCallback.gotMinKey(String)",1,1,1
"org.bson.EmptyBSONCallback.gotNull(String)",1,1,1
"org.bson.EmptyBSONCallback.gotObjectId(String,ObjectId)",1,1,1
"org.bson.EmptyBSONCallback.gotRegex(String,String,String)",1,1,1
"org.bson.EmptyBSONCallback.gotString(String,String)",1,1,1
"org.bson.EmptyBSONCallback.gotSymbol(String,String)",1,1,1
"org.bson.EmptyBSONCallback.gotTimestamp(String,int,int)",1,1,1
"org.bson.EmptyBSONCallback.gotUUID(String,long,long)",1,1,1
"org.bson.EmptyBSONCallback.gotUndefined(String)",1,1,1
"org.bson.EmptyBSONCallback.objectDone()",1,1,1
"org.bson.EmptyBSONCallback.objectStart()",1,1,1
"org.bson.EmptyBSONCallback.objectStart(String)",1,1,1
"org.bson.EmptyBSONCallback.reset()",1,1,1
"org.bson.LazyBSONCallback.createArray(byte[],int)",1,1,1
"org.bson.LazyBSONCallback.createDBRef(String,ObjectId)",1,1,1
"org.bson.LazyBSONCallback.createObject(byte[],int)",1,1,1
"org.bson.LazyBSONCallback.get()",1,1,1
"org.bson.LazyBSONCallback.getRoot()",1,1,1
"org.bson.LazyBSONCallback.gotBinary(String,byte,byte[])",1,1,1
"org.bson.LazyBSONCallback.reset()",1,1,1
"org.bson.LazyBSONCallback.setRoot(Object)",1,1,1
"org.bson.LazyBSONDecoder.decode(InputStream,BSONCallback)",1,1,1
"org.bson.LazyBSONDecoder.decode(byte[],BSONCallback)",1,1,2
"org.bson.LazyBSONDecoder.readObject(InputStream)",1,1,1
"org.bson.LazyBSONDecoder.readObject(byte[])",1,1,1
"org.bson.LazyBSONList.LazyBSONList(byte[],LazyBSONCallback)",1,1,1
"org.bson.LazyBSONList.LazyBSONList(byte[],int,LazyBSONCallback)",1,1,1
"org.bson.LazyBSONList.LazyBSONListIterator.LazyBSONListIterator()",1,1,1
"org.bson.LazyBSONList.LazyBSONListIterator.hasNext()",1,2,2
"org.bson.LazyBSONList.LazyBSONListIterator.next()",2,2,2
"org.bson.LazyBSONList.LazyBSONListIterator.remove()",1,1,1
"org.bson.LazyBSONList.add(Object)",1,1,1
"org.bson.LazyBSONList.add(int,Object)",1,1,1
"org.bson.LazyBSONList.addAll(Collection)",1,1,1
"org.bson.LazyBSONList.addAll(int,Collection)",1,1,1
"org.bson.LazyBSONList.clear()",1,1,1
"org.bson.LazyBSONList.contains(Object)",1,1,1
"org.bson.LazyBSONList.containsAll(Collection)",1,2,2
"org.bson.LazyBSONList.get(int)",1,1,1
"org.bson.LazyBSONList.indexOf(Object)",3,2,3
"org.bson.LazyBSONList.iterator()",1,1,1
"org.bson.LazyBSONList.lastIndexOf(Object)",1,2,3
"org.bson.LazyBSONList.listIterator()",1,1,1
"org.bson.LazyBSONList.listIterator(int)",1,1,1
"org.bson.LazyBSONList.remove(Object)",1,1,1
"org.bson.LazyBSONList.remove(int)",1,1,1
"org.bson.LazyBSONList.removeAll(Collection)",1,1,1
"org.bson.LazyBSONList.retainAll(Collection)",1,1,1
"org.bson.LazyBSONList.set(int,Object)",1,1,1
"org.bson.LazyBSONList.size()",1,1,1
"org.bson.LazyBSONList.subList(int,int)",1,1,1
"org.bson.LazyBSONList.toArray()",1,1,1
"org.bson.LazyBSONList.toArray(Object[])",1,1,1
"org.bson.LazyBSONObject.LazyBSONObject(byte[],LazyBSONCallback)",1,1,1
"org.bson.LazyBSONObject.LazyBSONObject(byte[],int,LazyBSONCallback)",1,1,1
"org.bson.LazyBSONObject.containsField(String)",3,3,3
"org.bson.LazyBSONObject.containsKey(String)",1,1,1
"org.bson.LazyBSONObject.entrySet()",1,2,2
"org.bson.LazyBSONObject.equals(Object)",9,2,13
"org.bson.LazyBSONObject.get(String)",3,3,3
"org.bson.LazyBSONObject.getBSONSize()",1,1,1
"org.bson.LazyBSONObject.getBsonReader()",1,1,1
"org.bson.LazyBSONObject.getBufferForInternalBytes()",1,1,1
"org.bson.LazyBSONObject.getBytes()",1,1,1
"org.bson.LazyBSONObject.getOffset()",1,1,1
"org.bson.LazyBSONObject.hashCode()",1,1,2
"org.bson.LazyBSONObject.isEmpty()",1,1,1
"org.bson.LazyBSONObject.keySet()",1,2,2
"org.bson.LazyBSONObject.pipe(OutputStream)",1,1,1
"org.bson.LazyBSONObject.put(String,Object)",1,1,1
"org.bson.LazyBSONObject.putAll(BSONObject)",1,1,1
"org.bson.LazyBSONObject.putAll(Map)",1,1,1
"org.bson.LazyBSONObject.readArray(BsonBinaryReader)",1,1,1
"org.bson.LazyBSONObject.readDocument(BsonBinaryReader)",1,1,1
"org.bson.LazyBSONObject.readJavaScriptWithScopeDocument(BsonBinaryReader)",1,2,2
"org.bson.LazyBSONObject.readValue(BsonBinaryReader)",17,23,27
"org.bson.LazyBSONObject.removeField(String)",1,1,1
"org.bson.LazyBSONObject.toMap()",1,2,2
"org.bson.LazyBSONObject.toString()",1,1,1
"org.bson.NoOpFieldNameValidator.getValidatorForField(String)",1,1,1
"org.bson.NoOpFieldNameValidator.validate(String)",1,1,1
"org.bson.RawBsonDocument.RawBsonDocument(T,Codec<T>)",1,1,1
"org.bson.RawBsonDocument.RawBsonDocument(byte[])",1,1,1
"org.bson.RawBsonDocument.RawBsonDocument(byte[],int,int)",1,1,1
"org.bson.RawBsonDocument.SerializationProxy.SerializationProxy(byte[],int,int)",1,2,2
"org.bson.RawBsonDocument.SerializationProxy.readResolve()",1,1,1
"org.bson.RawBsonDocument.append(String,BsonValue)",1,1,1
"org.bson.RawBsonDocument.clear()",1,1,1
"org.bson.RawBsonDocument.clone()",1,1,1
"org.bson.RawBsonDocument.containsKey(Object)",4,2,4
"org.bson.RawBsonDocument.containsValue(Object)",3,2,3
"org.bson.RawBsonDocument.createReader()",1,1,1
"org.bson.RawBsonDocument.decode(Codec<T>)",1,1,1
"org.bson.RawBsonDocument.decode(Decoder<T>)",1,1,1
"org.bson.RawBsonDocument.deserializeBsonValue(BsonBinaryReader)",1,1,1
"org.bson.RawBsonDocument.entrySet()",1,1,1
"org.bson.RawBsonDocument.equals(Object)",1,1,1
"org.bson.RawBsonDocument.get(Object)",3,3,3
"org.bson.RawBsonDocument.getByteBuffer()",1,1,1
"org.bson.RawBsonDocument.hashCode()",1,1,1
"org.bson.RawBsonDocument.isEmpty()",2,1,2
"org.bson.RawBsonDocument.keySet()",1,1,1
"org.bson.RawBsonDocument.parse(String)",1,1,1
"org.bson.RawBsonDocument.put(String,BsonValue)",1,1,1
"org.bson.RawBsonDocument.putAll(Map<? extends String, ? extends BsonValue>)",1,1,1
"org.bson.RawBsonDocument.readObject(ObjectInputStream)",1,1,1
"org.bson.RawBsonDocument.remove(Object)",1,1,1
"org.bson.RawBsonDocument.size()",1,2,2
"org.bson.RawBsonDocument.toBsonDocument()",1,1,1
"org.bson.RawBsonDocument.toJson()",1,1,1
"org.bson.RawBsonDocument.toJson(JsonWriterSettings)",1,1,1
"org.bson.RawBsonDocument.values()",1,1,1
"org.bson.RawBsonDocument.writeReplace()",1,1,1
"org.bson.StringUtils.StringUtils()",1,1,1
"org.bson.StringUtils.join(String,Collection<?>)",3,2,3
"org.bson.assertions.Assertions.Assertions()",1,1,1
"org.bson.assertions.Assertions.convertToType(Class<T>,Object,String)",2,1,2
"org.bson.assertions.Assertions.isTrue(String,boolean)",2,1,2
"org.bson.assertions.Assertions.isTrueArgument(String,boolean)",2,1,2
"org.bson.assertions.Assertions.notNull(String,T)",2,1,2
"org.bson.codecs.AtomicBooleanCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.AtomicBooleanCodec.encode(BsonWriter,AtomicBoolean,EncoderContext)",1,1,1
"org.bson.codecs.AtomicBooleanCodec.getEncoderClass()",1,1,1
"org.bson.codecs.AtomicIntegerCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.AtomicIntegerCodec.encode(BsonWriter,AtomicInteger,EncoderContext)",1,1,1
"org.bson.codecs.AtomicIntegerCodec.getEncoderClass()",1,1,1
"org.bson.codecs.AtomicLongCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.AtomicLongCodec.encode(BsonWriter,AtomicLong,EncoderContext)",1,1,1
"org.bson.codecs.AtomicLongCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BigDecimalCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BigDecimalCodec.encode(BsonWriter,BigDecimal,EncoderContext)",1,1,1
"org.bson.codecs.BigDecimalCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BinaryCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BinaryCodec.encode(BsonWriter,Binary,EncoderContext)",1,1,1
"org.bson.codecs.BinaryCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BooleanCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BooleanCodec.encode(BsonWriter,Boolean,EncoderContext)",1,1,1
"org.bson.codecs.BooleanCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonArrayCodec.BsonArrayCodec()",1,1,1
"org.bson.codecs.BsonArrayCodec.BsonArrayCodec(CodecRegistry)",1,1,1
"org.bson.codecs.BsonArrayCodec.decode(BsonReader,DecoderContext)",1,2,2
"org.bson.codecs.BsonArrayCodec.encode(BsonWriter,BsonArray,EncoderContext)",1,2,2
"org.bson.codecs.BsonArrayCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonArrayCodec.readValue(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonBinaryCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonBinaryCodec.encode(BsonWriter,BsonBinary,EncoderContext)",1,1,1
"org.bson.codecs.BsonBinaryCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonBooleanCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonBooleanCodec.encode(BsonWriter,BsonBoolean,EncoderContext)",1,1,1
"org.bson.codecs.BsonBooleanCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonDBPointerCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonDBPointerCodec.encode(BsonWriter,BsonDbPointer,EncoderContext)",1,1,1
"org.bson.codecs.BsonDBPointerCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonDateTimeCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonDateTimeCodec.encode(BsonWriter,BsonDateTime,EncoderContext)",1,1,1
"org.bson.codecs.BsonDateTimeCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonDecimal128Codec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonDecimal128Codec.encode(BsonWriter,BsonDecimal128,EncoderContext)",1,1,1
"org.bson.codecs.BsonDecimal128Codec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonDocumentCodec.BsonDocumentCodec()",1,1,1
"org.bson.codecs.BsonDocumentCodec.BsonDocumentCodec(CodecRegistry)",2,1,2
"org.bson.codecs.BsonDocumentCodec.beforeFields(BsonWriter,EncoderContext,BsonDocument)",1,3,3
"org.bson.codecs.BsonDocumentCodec.decode(BsonReader,DecoderContext)",1,2,2
"org.bson.codecs.BsonDocumentCodec.documentHasId(BsonDocument)",1,1,1
"org.bson.codecs.BsonDocumentCodec.encode(BsonWriter,BsonDocument,EncoderContext)",3,2,3
"org.bson.codecs.BsonDocumentCodec.generateIdIfAbsentFromDocument(BsonDocument)",1,2,2
"org.bson.codecs.BsonDocumentCodec.getCodecRegistry()",1,1,1
"org.bson.codecs.BsonDocumentCodec.getDocumentId(BsonDocument)",1,1,1
"org.bson.codecs.BsonDocumentCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonDocumentCodec.readValue(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonDocumentCodec.skipField(EncoderContext,String)",1,2,2
"org.bson.codecs.BsonDocumentCodec.writeValue(BsonWriter,EncoderContext,BsonValue)",1,1,1
"org.bson.codecs.BsonDocumentWrapperCodec.BsonDocumentWrapperCodec(Codec<BsonDocument>)",1,1,1
"org.bson.codecs.BsonDocumentWrapperCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonWriter,BsonDocumentWrapper,EncoderContext)",1,2,2
"org.bson.codecs.BsonDocumentWrapperCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonDoubleCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonDoubleCodec.encode(BsonWriter,BsonDouble,EncoderContext)",1,1,1
"org.bson.codecs.BsonDoubleCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonInt32Codec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonInt32Codec.encode(BsonWriter,BsonInt32,EncoderContext)",1,1,1
"org.bson.codecs.BsonInt32Codec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonInt64Codec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonInt64Codec.encode(BsonWriter,BsonInt64,EncoderContext)",1,1,1
"org.bson.codecs.BsonInt64Codec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonJavaScriptCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonJavaScriptCodec.encode(BsonWriter,BsonJavaScript,EncoderContext)",1,1,1
"org.bson.codecs.BsonJavaScriptCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonJavaScriptWithScopeCodec.BsonJavaScriptWithScopeCodec(Codec<BsonDocument>)",1,1,1
"org.bson.codecs.BsonJavaScriptWithScopeCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonJavaScriptWithScopeCodec.encode(BsonWriter,BsonJavaScriptWithScope,EncoderContext)",1,1,1
"org.bson.codecs.BsonJavaScriptWithScopeCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonMaxKeyCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonMaxKeyCodec.encode(BsonWriter,BsonMaxKey,EncoderContext)",1,1,1
"org.bson.codecs.BsonMaxKeyCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonMinKeyCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonMinKeyCodec.encode(BsonWriter,BsonMinKey,EncoderContext)",1,1,1
"org.bson.codecs.BsonMinKeyCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonNullCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonNullCodec.encode(BsonWriter,BsonNull,EncoderContext)",1,1,1
"org.bson.codecs.BsonNullCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonObjectIdCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonObjectIdCodec.encode(BsonWriter,BsonObjectId,EncoderContext)",1,1,1
"org.bson.codecs.BsonObjectIdCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonRegularExpressionCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonRegularExpressionCodec.encode(BsonWriter,BsonRegularExpression,EncoderContext)",1,1,1
"org.bson.codecs.BsonRegularExpressionCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonStringCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonStringCodec.encode(BsonWriter,BsonString,EncoderContext)",1,1,1
"org.bson.codecs.BsonStringCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonSymbolCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonSymbolCodec.encode(BsonWriter,BsonSymbol,EncoderContext)",1,1,1
"org.bson.codecs.BsonSymbolCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonTimestampCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonTimestampCodec.encode(BsonWriter,BsonTimestamp,EncoderContext)",1,1,1
"org.bson.codecs.BsonTimestampCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonTypeClassMap.BsonTypeClassMap()",1,1,1
"org.bson.codecs.BsonTypeClassMap.BsonTypeClassMap(Map<BsonType, Class<?>>)",1,1,1
"org.bson.codecs.BsonTypeClassMap.addDefaults()",1,1,1
"org.bson.codecs.BsonTypeClassMap.equals(Object)",4,2,5
"org.bson.codecs.BsonTypeClassMap.get(BsonType)",1,1,1
"org.bson.codecs.BsonTypeClassMap.hashCode()",1,1,1
"org.bson.codecs.BsonTypeClassMap.keys()",1,1,1
"org.bson.codecs.BsonTypeCodecMap.BsonTypeCodecMap(BsonTypeClassMap,CodecRegistry)",1,3,4
"org.bson.codecs.BsonTypeCodecMap.get(BsonType)",3,3,3
"org.bson.codecs.BsonUndefinedCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonUndefinedCodec.encode(BsonWriter,BsonUndefined,EncoderContext)",1,1,1
"org.bson.codecs.BsonUndefinedCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonValueCodec.BsonValueCodec()",1,1,1
"org.bson.codecs.BsonValueCodec.BsonValueCodec(CodecRegistry)",1,1,1
"org.bson.codecs.BsonValueCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.BsonValueCodec.encode(BsonWriter,BsonValue,EncoderContext)",1,1,1
"org.bson.codecs.BsonValueCodec.getEncoderClass()",1,1,1
"org.bson.codecs.BsonValueCodecProvider.BsonValueCodecProvider()",1,1,1
"org.bson.codecs.BsonValueCodecProvider.addCodec(Codec<T>)",1,1,1
"org.bson.codecs.BsonValueCodecProvider.addCodecs()",1,1,1
"org.bson.codecs.BsonValueCodecProvider.get(Class<T>,CodecRegistry)",8,4,8
"org.bson.codecs.BsonValueCodecProvider.getBsonTypeClassMap()",1,1,1
"org.bson.codecs.BsonValueCodecProvider.getClassForBsonType(BsonType)",1,1,1
"org.bson.codecs.ByteArrayCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.ByteArrayCodec.encode(BsonWriter,byte[],EncoderContext)",1,1,1
"org.bson.codecs.ByteArrayCodec.getEncoderClass()",1,1,1
"org.bson.codecs.ByteCodec.decode(BsonReader,DecoderContext)",2,2,3
"org.bson.codecs.ByteCodec.encode(BsonWriter,Byte,EncoderContext)",1,1,1
"org.bson.codecs.ByteCodec.getEncoderClass()",1,1,1
"org.bson.codecs.CharacterCodec.decode(BsonReader,DecoderContext)",2,2,2
"org.bson.codecs.CharacterCodec.encode(BsonWriter,Character,EncoderContext)",1,1,1
"org.bson.codecs.CharacterCodec.getEncoderClass()",1,1,1
"org.bson.codecs.CodeCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.CodeCodec.encode(BsonWriter,Code,EncoderContext)",1,1,1
"org.bson.codecs.CodeCodec.getEncoderClass()",1,1,1
"org.bson.codecs.CodeWithScopeCodec.CodeWithScopeCodec(Codec<Document>)",1,1,1
"org.bson.codecs.CodeWithScopeCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.CodeWithScopeCodec.encode(BsonWriter,CodeWithScope,EncoderContext)",1,1,1
"org.bson.codecs.CodeWithScopeCodec.getEncoderClass()",1,1,1
"org.bson.codecs.DateCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.DateCodec.encode(BsonWriter,Date,EncoderContext)",1,1,1
"org.bson.codecs.DateCodec.getEncoderClass()",1,1,1
"org.bson.codecs.Decimal128Codec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.Decimal128Codec.encode(BsonWriter,Decimal128,EncoderContext)",1,1,1
"org.bson.codecs.Decimal128Codec.getEncoderClass()",1,1,1
"org.bson.codecs.DecoderContext.Builder.Builder()",1,1,1
"org.bson.codecs.DecoderContext.Builder.build()",1,1,1
"org.bson.codecs.DecoderContext.Builder.checkedDiscriminator(boolean)",1,1,1
"org.bson.codecs.DecoderContext.Builder.hasCheckedDiscriminator()",1,1,1
"org.bson.codecs.DecoderContext.DecoderContext(Builder)",1,1,1
"org.bson.codecs.DecoderContext.builder()",1,1,1
"org.bson.codecs.DecoderContext.decodeWithChildContext(Decoder<T>,BsonReader)",1,1,1
"org.bson.codecs.DecoderContext.hasCheckedDiscriminator()",1,1,1
"org.bson.codecs.DocumentCodec.DocumentCodec()",1,1,1
"org.bson.codecs.DocumentCodec.DocumentCodec(CodecRegistry)",1,1,1
"org.bson.codecs.DocumentCodec.DocumentCodec(CodecRegistry,BsonTypeClassMap)",1,1,1
"org.bson.codecs.DocumentCodec.DocumentCodec(CodecRegistry,BsonTypeClassMap,Transformer)",1,1,2
"org.bson.codecs.DocumentCodec.beforeFields(BsonWriter,EncoderContext,Map<String, Object>)",1,3,3
"org.bson.codecs.DocumentCodec.decode(BsonReader,DecoderContext)",1,2,2
"org.bson.codecs.DocumentCodec.documentHasId(Document)",1,1,1
"org.bson.codecs.DocumentCodec.encode(BsonWriter,Document,EncoderContext)",1,1,1
"org.bson.codecs.DocumentCodec.generateIdIfAbsentFromDocument(Document)",1,2,2
"org.bson.codecs.DocumentCodec.getDocumentId(Document)",3,1,3
"org.bson.codecs.DocumentCodec.getEncoderClass()",1,1,1
"org.bson.codecs.DocumentCodec.readList(BsonReader,DecoderContext)",1,2,2
"org.bson.codecs.DocumentCodec.readValue(BsonReader,DecoderContext)",4,6,6
"org.bson.codecs.DocumentCodec.skipField(EncoderContext,String)",1,2,2
"org.bson.codecs.DocumentCodec.writeIterable(BsonWriter,Iterable<Object>,EncoderContext)",1,2,2
"org.bson.codecs.DocumentCodec.writeMap(BsonWriter,Map<String, Object>,EncoderContext)",3,2,3
"org.bson.codecs.DocumentCodec.writeValue(BsonWriter,EncoderContext,Object)",1,4,4
"org.bson.codecs.DocumentCodecProvider.DocumentCodecProvider()",1,1,1
"org.bson.codecs.DocumentCodecProvider.DocumentCodecProvider(BsonTypeClassMap)",1,1,1
"org.bson.codecs.DocumentCodecProvider.DocumentCodecProvider(BsonTypeClassMap,Transformer)",1,1,1
"org.bson.codecs.DocumentCodecProvider.DocumentCodecProvider(Transformer)",1,1,1
"org.bson.codecs.DocumentCodecProvider.equals(Object)",5,3,7
"org.bson.codecs.DocumentCodecProvider.get(Class<T>,CodecRegistry)",3,2,3
"org.bson.codecs.DocumentCodecProvider.hashCode()",1,2,2
"org.bson.codecs.DoubleCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.DoubleCodec.encode(BsonWriter,Double,EncoderContext)",1,1,1
"org.bson.codecs.DoubleCodec.getEncoderClass()",1,1,1
"org.bson.codecs.EncoderContext.Builder.Builder()",1,1,1
"org.bson.codecs.EncoderContext.Builder.build()",1,1,1
"org.bson.codecs.EncoderContext.Builder.isEncodingCollectibleDocument(boolean)",1,1,1
"org.bson.codecs.EncoderContext.EncoderContext(Builder)",1,1,1
"org.bson.codecs.EncoderContext.builder()",1,1,1
"org.bson.codecs.EncoderContext.encodeWithChildContext(Encoder<T>,BsonWriter,T)",1,1,1
"org.bson.codecs.EncoderContext.getChildContext()",1,1,1
"org.bson.codecs.EncoderContext.isEncodingCollectibleDocument()",1,1,1
"org.bson.codecs.FloatCodec.decode(BsonReader,DecoderContext)",2,2,3
"org.bson.codecs.FloatCodec.encode(BsonWriter,Float,EncoderContext)",1,1,1
"org.bson.codecs.FloatCodec.getEncoderClass()",1,1,1
"org.bson.codecs.IntegerCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.IntegerCodec.encode(BsonWriter,Integer,EncoderContext)",1,1,1
"org.bson.codecs.IntegerCodec.getEncoderClass()",1,1,1
"org.bson.codecs.IterableCodec.IterableCodec(CodecRegistry,BsonTypeClassMap)",1,1,1
"org.bson.codecs.IterableCodec.IterableCodec(CodecRegistry,BsonTypeClassMap,Transformer)",1,1,2
"org.bson.codecs.IterableCodec.decode(BsonReader,DecoderContext)",1,2,2
"org.bson.codecs.IterableCodec.encode(BsonWriter,Iterable,EncoderContext)",1,2,2
"org.bson.codecs.IterableCodec.getEncoderClass()",1,1,1
"org.bson.codecs.IterableCodec.readValue(BsonReader,DecoderContext)",3,5,5
"org.bson.codecs.IterableCodec.writeValue(BsonWriter,EncoderContext,Object)",1,2,2
"org.bson.codecs.IterableCodecProvider.IterableCodecProvider()",1,1,1
"org.bson.codecs.IterableCodecProvider.IterableCodecProvider(BsonTypeClassMap)",1,1,1
"org.bson.codecs.IterableCodecProvider.IterableCodecProvider(BsonTypeClassMap,Transformer)",1,1,1
"org.bson.codecs.IterableCodecProvider.IterableCodecProvider(Transformer)",1,1,1
"org.bson.codecs.IterableCodecProvider.equals(Object)",5,3,7
"org.bson.codecs.IterableCodecProvider.get(Class<T>,CodecRegistry)",2,1,2
"org.bson.codecs.IterableCodecProvider.hashCode()",1,2,2
"org.bson.codecs.LongCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.LongCodec.encode(BsonWriter,Long,EncoderContext)",1,1,1
"org.bson.codecs.LongCodec.getEncoderClass()",1,1,1
"org.bson.codecs.MapCodec.MapCodec()",1,1,1
"org.bson.codecs.MapCodec.MapCodec(CodecRegistry)",1,1,1
"org.bson.codecs.MapCodec.MapCodec(CodecRegistry,BsonTypeClassMap)",1,1,1
"org.bson.codecs.MapCodec.MapCodec(CodecRegistry,BsonTypeClassMap,Transformer)",1,1,2
"org.bson.codecs.MapCodec.decode(BsonReader,DecoderContext)",1,2,2
"org.bson.codecs.MapCodec.encode(BsonWriter,Map<String, Object>,EncoderContext)",1,2,2
"org.bson.codecs.MapCodec.getEncoderClass()",1,1,1
"org.bson.codecs.MapCodec.readValue(BsonReader,DecoderContext)",4,6,6
"org.bson.codecs.MapCodec.writeValue(BsonWriter,EncoderContext,Object)",1,2,2
"org.bson.codecs.MapCodecProvider.MapCodecProvider()",1,1,1
"org.bson.codecs.MapCodecProvider.MapCodecProvider(BsonTypeClassMap)",1,1,1
"org.bson.codecs.MapCodecProvider.MapCodecProvider(BsonTypeClassMap,Transformer)",1,1,1
"org.bson.codecs.MapCodecProvider.MapCodecProvider(Transformer)",1,1,1
"org.bson.codecs.MapCodecProvider.equals(Object)",5,3,7
"org.bson.codecs.MapCodecProvider.get(Class<T>,CodecRegistry)",2,1,2
"org.bson.codecs.MapCodecProvider.hashCode()",1,2,2
"org.bson.codecs.MaxKeyCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.MaxKeyCodec.encode(BsonWriter,MaxKey,EncoderContext)",1,1,1
"org.bson.codecs.MaxKeyCodec.getEncoderClass()",1,1,1
"org.bson.codecs.MinKeyCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.MinKeyCodec.encode(BsonWriter,MinKey,EncoderContext)",1,1,1
"org.bson.codecs.MinKeyCodec.getEncoderClass()",1,1,1
"org.bson.codecs.NumberCodecHelper.NumberCodecHelper()",1,1,1
"org.bson.codecs.NumberCodecHelper.decodeDouble(BsonReader)",3,3,6
"org.bson.codecs.NumberCodecHelper.decodeInt(BsonReader)",4,4,7
"org.bson.codecs.NumberCodecHelper.decodeLong(BsonReader)",3,3,6
"org.bson.codecs.NumberCodecHelper.invalidConversion(Class<T>,Number)",1,1,1
"org.bson.codecs.ObjectIdCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.ObjectIdCodec.encode(BsonWriter,ObjectId,EncoderContext)",1,1,1
"org.bson.codecs.ObjectIdCodec.getEncoderClass()",1,1,1
"org.bson.codecs.ObjectIdGenerator.generate()",1,1,1
"org.bson.codecs.PatternCodec.RegexFlag.RegexFlag(int,char,String)",1,1,1
"org.bson.codecs.PatternCodec.RegexFlag.getByCharacter(char)",1,1,1
"org.bson.codecs.PatternCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.PatternCodec.encode(BsonWriter,Pattern,EncoderContext)",1,1,1
"org.bson.codecs.PatternCodec.getEncoderClass()",1,1,1
"org.bson.codecs.PatternCodec.getOptionsAsInt(BsonRegularExpression)",4,4,6
"org.bson.codecs.PatternCodec.getOptionsAsString(Pattern)",2,3,4
"org.bson.codecs.RawBsonDocumentCodec.RawBsonDocumentCodec()",1,1,1
"org.bson.codecs.RawBsonDocumentCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.RawBsonDocumentCodec.encode(BsonWriter,RawBsonDocument,EncoderContext)",1,1,1
"org.bson.codecs.RawBsonDocumentCodec.getEncoderClass()",1,1,1
"org.bson.codecs.ShortCodec.decode(BsonReader,DecoderContext)",2,2,3
"org.bson.codecs.ShortCodec.encode(BsonWriter,Short,EncoderContext)",1,1,1
"org.bson.codecs.ShortCodec.getEncoderClass()",1,1,1
"org.bson.codecs.StringCodec.decode(BsonReader,DecoderContext)",2,2,2
"org.bson.codecs.StringCodec.encode(BsonWriter,String,EncoderContext)",1,1,1
"org.bson.codecs.StringCodec.getEncoderClass()",1,1,1
"org.bson.codecs.SymbolCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.SymbolCodec.encode(BsonWriter,Symbol,EncoderContext)",1,1,1
"org.bson.codecs.SymbolCodec.getEncoderClass()",1,1,1
"org.bson.codecs.UuidCodec.UuidCodec()",1,1,1
"org.bson.codecs.UuidCodec.UuidCodec(UuidRepresentation)",1,1,1
"org.bson.codecs.UuidCodec.decode(BsonReader,DecoderContext)",5,5,9
"org.bson.codecs.UuidCodec.encode(BsonWriter,UUID,EncoderContext)",2,3,6
"org.bson.codecs.UuidCodec.getEncoderClass()",1,1,1
"org.bson.codecs.UuidCodec.readLongFromArrayBigEndian(byte[],int)",1,1,1
"org.bson.codecs.UuidCodec.writeLongToArrayBigEndian(byte[],int,long)",1,1,1
"org.bson.codecs.UuidCodecHelper.UuidCodecHelper()",1,1,1
"org.bson.codecs.UuidCodecHelper.reverseByteArray(byte[],int,int)",1,1,2
"org.bson.codecs.UuidCodecProvider.UuidCodecProvider(UuidRepresentation)",1,1,1
"org.bson.codecs.UuidCodecProvider.get(Class<T>,CodecRegistry)",2,1,2
"org.bson.codecs.ValueCodecProvider.ValueCodecProvider()",1,1,1
"org.bson.codecs.ValueCodecProvider.addCodec(Codec<T>)",1,1,1
"org.bson.codecs.ValueCodecProvider.addCodecs()",1,1,1
"org.bson.codecs.ValueCodecProvider.equals(Object)",3,2,4
"org.bson.codecs.ValueCodecProvider.get(Class<T>,CodecRegistry)",1,1,1
"org.bson.codecs.ValueCodecProvider.hashCode()",1,1,1
"org.bson.codecs.configuration.ChildCodecRegistry.ChildCodecRegistry(ChildCodecRegistry<?>,Class<T>)",1,1,1
"org.bson.codecs.configuration.ChildCodecRegistry.ChildCodecRegistry(ProvidersCodecRegistry,Class<T>)",1,1,1
"org.bson.codecs.configuration.ChildCodecRegistry.equals(Object)",6,3,8
"org.bson.codecs.configuration.ChildCodecRegistry.get(Class<U>)",2,2,2
"org.bson.codecs.configuration.ChildCodecRegistry.getCodecClass()",1,1,1
"org.bson.codecs.configuration.ChildCodecRegistry.hasCycles(Class<U>)",3,2,3
"org.bson.codecs.configuration.ChildCodecRegistry.hashCode()",1,2,2
"org.bson.codecs.configuration.CodecCache.containsKey(Class<?>)",1,1,1
"org.bson.codecs.configuration.CodecCache.getOrThrow(Class<T>)",3,3,3
"org.bson.codecs.configuration.CodecCache.put(Class<?>,Codec<?>)",1,1,1
"org.bson.codecs.configuration.CodecConfigurationException.CodecConfigurationException(String)",1,1,1
"org.bson.codecs.configuration.CodecConfigurationException.CodecConfigurationException(String,Throwable)",1,1,1
"org.bson.codecs.configuration.CodecRegistries.CodecRegistries()",1,1,1
"org.bson.codecs.configuration.CodecRegistries.fromCodecs(Codec<?>...)",1,1,1
"org.bson.codecs.configuration.CodecRegistries.fromCodecs(List<? extends Codec<?>>)",1,1,1
"org.bson.codecs.configuration.CodecRegistries.fromProviders(CodecProvider...)",1,1,1
"org.bson.codecs.configuration.CodecRegistries.fromProviders(List<? extends CodecProvider>)",1,1,1
"org.bson.codecs.configuration.CodecRegistries.fromRegistries(CodecRegistry...)",1,1,1
"org.bson.codecs.configuration.CodecRegistries.fromRegistries(List<? extends CodecRegistry>)",1,2,2
"org.bson.codecs.configuration.CodecRegistries.providerFromRegistry(CodecRegistry)",2,2,3
"org.bson.codecs.configuration.LazyCodec.LazyCodec(CodecRegistry,Class<T>)",1,1,1
"org.bson.codecs.configuration.LazyCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.configuration.LazyCodec.encode(BsonWriter,T,EncoderContext)",1,1,1
"org.bson.codecs.configuration.LazyCodec.getEncoderClass()",1,1,1
"org.bson.codecs.configuration.LazyCodec.getWrapped()",1,2,2
"org.bson.codecs.configuration.MapOfCodecsProvider.MapOfCodecsProvider(List<? extends Codec<?>>)",1,2,2
"org.bson.codecs.configuration.MapOfCodecsProvider.get(Class<T>,CodecRegistry)",1,1,1
"org.bson.codecs.configuration.Optional.Some.Some(T)",1,1,1
"org.bson.codecs.configuration.Optional.Some.get()",1,1,1
"org.bson.codecs.configuration.Optional.Some.isEmpty()",1,1,1
"org.bson.codecs.configuration.Optional.Some.toString()",1,1,1
"org.bson.codecs.configuration.Optional.empty()",1,1,1
"org.bson.codecs.configuration.Optional.isDefined()",1,1,1
"org.bson.codecs.configuration.Optional.of(T)",2,1,2
"org.bson.codecs.configuration.Optional.toString()",1,1,1
"org.bson.codecs.configuration.ProvidersCodecRegistry.ProvidersCodecRegistry(List<? extends CodecProvider>)",1,2,2
"org.bson.codecs.configuration.ProvidersCodecRegistry.equals(Object)",6,3,7
"org.bson.codecs.configuration.ProvidersCodecRegistry.get(ChildCodecRegistry)",4,4,4
"org.bson.codecs.configuration.ProvidersCodecRegistry.get(Class<T>)",1,1,1
"org.bson.codecs.configuration.ProvidersCodecRegistry.get(Class<T>,CodecRegistry)",3,2,3
"org.bson.codecs.configuration.ProvidersCodecRegistry.hashCode()",1,1,1
"org.bson.codecs.pojo.AutomaticPojoCodec.AutomaticPojoCodec(PojoCodec<T>)",1,1,1
"org.bson.codecs.pojo.AutomaticPojoCodec.decode(BsonReader,DecoderContext)",1,2,2
"org.bson.codecs.pojo.AutomaticPojoCodec.encode(BsonWriter,T,EncoderContext)",1,2,2
"org.bson.codecs.pojo.AutomaticPojoCodec.getClassModel()",1,1,1
"org.bson.codecs.pojo.AutomaticPojoCodec.getEncoderClass()",1,1,1
"org.bson.codecs.pojo.ClassModel.ClassModel(Class<T>,Map<String, TypeParameterMap>,InstanceCreatorFactory<T>,Boolean,String,String,PropertyModel<?>,List<PropertyModel<?>>)",1,1,1
"org.bson.codecs.pojo.ClassModel.builder(Class<S>)",1,1,1
"org.bson.codecs.pojo.ClassModel.equals(Object)",11,5,15
"org.bson.codecs.pojo.ClassModel.getDiscriminator()",1,1,1
"org.bson.codecs.pojo.ClassModel.getDiscriminatorKey()",1,1,1
"org.bson.codecs.pojo.ClassModel.getIdPropertyModel()",1,1,1
"org.bson.codecs.pojo.ClassModel.getInstanceCreator()",1,1,1
"org.bson.codecs.pojo.ClassModel.getInstanceCreatorFactory()",1,1,1
"org.bson.codecs.pojo.ClassModel.getName()",1,1,1
"org.bson.codecs.pojo.ClassModel.getPropertyModel(String)",3,2,3
"org.bson.codecs.pojo.ClassModel.getPropertyModels()",1,1,1
"org.bson.codecs.pojo.ClassModel.getPropertyNameToTypeParameterMap()",1,1,1
"org.bson.codecs.pojo.ClassModel.getType()",1,1,1
"org.bson.codecs.pojo.ClassModel.hasTypeParameters()",1,1,1
"org.bson.codecs.pojo.ClassModel.hashCode()",1,4,5
"org.bson.codecs.pojo.ClassModel.toString()",1,1,1
"org.bson.codecs.pojo.ClassModel.useDiscriminator()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.ClassModelBuilder(Class<T>)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.addProperty(PropertyModelBuilder<?>)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.annotations(List<Annotation>)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.build()",1,5,6
"org.bson.codecs.pojo.ClassModelBuilder.checkForDuplicates(String,String,Map<String, Integer>,String)",2,2,2
"org.bson.codecs.pojo.ClassModelBuilder.conventions(List<Convention>)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.discriminator(String)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.discriminatorKey(String)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.enableDiscriminator(boolean)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.getAnnotations()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.getConventions()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.getDiscriminator()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.getDiscriminatorKey()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.getIdPropertyName()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.getInstanceCreatorFactory()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.getProperty(String)",3,2,3
"org.bson.codecs.pojo.ClassModelBuilder.getPropertyModelBuilders()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.getPropertyNameToTypeParameterMap()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.getType()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.idPropertyName(String)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.instanceCreatorFactory(InstanceCreatorFactory<T>)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.propertyNameToTypeParameterMap(Map<String, TypeParameterMap>)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.removeProperty(String)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.toString()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.type(Class<T>)",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.useDiscriminator()",1,1,1
"org.bson.codecs.pojo.ClassModelBuilder.validatePropertyModels(String,List<PropertyModel<?>>)",2,6,6
"org.bson.codecs.pojo.CollectionCodec.CollectionCodec(Class<Collection<T>>,Codec<T>)",1,1,1
"org.bson.codecs.pojo.CollectionCodec.decode(BsonReader,DecoderContext)",1,2,2
"org.bson.codecs.pojo.CollectionCodec.encode(BsonWriter,Collection<T>,EncoderContext)",1,2,2
"org.bson.codecs.pojo.CollectionCodec.getEncoderClass()",1,1,1
"org.bson.codecs.pojo.CollectionCodec.getInstance()",1,2,2
"org.bson.codecs.pojo.ConventionAnnotationImpl.addCreatorPropertyToClassModelBuilder(ClassModelBuilder<T>,String,Class<S>)",1,1,1
"org.bson.codecs.pojo.ConventionAnnotationImpl.apply(ClassModelBuilder<?>)",1,3,3
"org.bson.codecs.pojo.ConventionAnnotationImpl.cleanPropertyBuilders(ClassModelBuilder<?>)",1,5,5
"org.bson.codecs.pojo.ConventionAnnotationImpl.processClassAnnotation(ClassModelBuilder<?>,Annotation)",1,4,4
"org.bson.codecs.pojo.ConventionAnnotationImpl.processCreatorAnnotation(ClassModelBuilder<T>)",16,15,16
"org.bson.codecs.pojo.ConventionAnnotationImpl.processPropertyAnnotations(ClassModelBuilder<?>,PropertyModelBuilder<?>)",1,10,10
"org.bson.codecs.pojo.ConventionDefaultsImpl.apply(ClassModelBuilder<?>)",1,8,8
"org.bson.codecs.pojo.Conventions.Conventions()",1,1,1
"org.bson.codecs.pojo.CreatorExecutable.CreatorExecutable(Class<T>,Constructor<T>)",1,1,1
"org.bson.codecs.pojo.CreatorExecutable.CreatorExecutable(Class<T>,Constructor<T>,Method)",5,7,8
"org.bson.codecs.pojo.CreatorExecutable.CreatorExecutable(Class<T>,Method)",1,1,1
"org.bson.codecs.pojo.CreatorExecutable.checkHasAnExecutable()",2,2,3
"org.bson.codecs.pojo.CreatorExecutable.getError(Class<?>,String)",1,1,1
"org.bson.codecs.pojo.CreatorExecutable.getError(Class<?>,boolean,String)",1,1,2
"org.bson.codecs.pojo.CreatorExecutable.getInstance()",2,3,3
"org.bson.codecs.pojo.CreatorExecutable.getInstance(Object[])",2,3,3
"org.bson.codecs.pojo.CreatorExecutable.getParameterTypes()",1,1,1
"org.bson.codecs.pojo.CreatorExecutable.getProperties()",1,1,1
"org.bson.codecs.pojo.CreatorExecutable.getType()",1,1,1
"org.bson.codecs.pojo.DiscriminatorLookup.DiscriminatorLookup(Map<Class<?>, ClassModel<?>>,Set<String>)",1,3,3
"org.bson.codecs.pojo.DiscriminatorLookup.addClassModel(ClassModel<?>)",1,2,2
"org.bson.codecs.pojo.DiscriminatorLookup.getClassForName(String)",1,1,2
"org.bson.codecs.pojo.DiscriminatorLookup.lookup(String)",3,4,4
"org.bson.codecs.pojo.DiscriminatorLookup.searchPackages(String)",3,2,3
"org.bson.codecs.pojo.EnumCodec.EnumCodec(Class<T>)",1,1,1
"org.bson.codecs.pojo.EnumCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.pojo.EnumCodec.encode(BsonWriter,T,EncoderContext)",1,1,1
"org.bson.codecs.pojo.EnumCodec.getEncoderClass()",1,1,1
"org.bson.codecs.pojo.InstanceCreatorFactoryImpl.InstanceCreatorFactoryImpl(CreatorExecutable<T>)",1,1,1
"org.bson.codecs.pojo.InstanceCreatorFactoryImpl.create()",1,1,1
"org.bson.codecs.pojo.InstanceCreatorImpl.InstanceCreatorImpl(CreatorExecutable<T>)",1,3,3
"org.bson.codecs.pojo.InstanceCreatorImpl.constructInstanceAndProcessCachedValues()",1,3,3
"org.bson.codecs.pojo.InstanceCreatorImpl.getInstance()",2,4,4
"org.bson.codecs.pojo.InstanceCreatorImpl.set(S,PropertyModel<S>)",1,4,5
"org.bson.codecs.pojo.InstanceCreatorImpl.setPropertyValue(PropertyModel<S>,Object)",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.clear()",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.containsKey(Object)",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.containsValue(Object)",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.entrySet()",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.get(Object)",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.isEmpty()",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.keySet()",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.put(Map<String, Integer>,Integer)",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.putAll(Map<? extends Map<String, Integer>, ? extends Integer>)",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.remove(Object)",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.size()",1,1,1
"org.bson.codecs.pojo.InvalidMapImplementation.values()",1,1,1
"org.bson.codecs.pojo.LazyPojoCodec.LazyPojoCodec(ClassModel<T>,CodecRegistry,DiscriminatorLookup,ConcurrentMap<ClassModel<?>, Codec<?>>)",1,1,1
"org.bson.codecs.pojo.LazyPojoCodec.decode(BsonReader,DecoderContext)",1,1,1
"org.bson.codecs.pojo.LazyPojoCodec.encode(BsonWriter,T,EncoderContext)",1,1,1
"org.bson.codecs.pojo.LazyPojoCodec.getClassModel()",1,1,1
"org.bson.codecs.pojo.LazyPojoCodec.getEncoderClass()",1,1,1
"org.bson.codecs.pojo.LazyPojoCodec.getPojoCodec()",1,1,2
"org.bson.codecs.pojo.MapCodec.MapCodec(Class<Map<String, T>>,Codec<T>)",1,1,1
"org.bson.codecs.pojo.MapCodec.decode(BsonReader,DecoderContext)",1,2,2
"org.bson.codecs.pojo.MapCodec.encode(BsonWriter,Map<String, T>,EncoderContext)",1,2,2
"org.bson.codecs.pojo.MapCodec.getEncoderClass()",1,1,1
"org.bson.codecs.pojo.MapCodec.getInstance()",1,2,2
"org.bson.codecs.pojo.PojoBuilderHelper.PojoBuilderHelper()",1,1,1
"org.bson.codecs.pojo.PojoBuilderHelper.configureClassModelBuilder(ClassModelBuilder<T>,Class<T>)",1,21,21
"org.bson.codecs.pojo.PojoBuilderHelper.createPropertyModelBuilder(PropertyMetadata<T>)",1,2,2
"org.bson.codecs.pojo.PojoBuilderHelper.getGenericType(Method)",1,2,2
"org.bson.codecs.pojo.PojoBuilderHelper.getNestedTypeData(Builder<T>,Type)",1,5,5
"org.bson.codecs.pojo.PojoBuilderHelper.getOrCreateProperty(String,String,Map<String, PropertyMetadata<?>>,TypeData<T>,Map<String, TypeParameterMap>,TypeData<S>,List<String>,Type)",2,3,3
"org.bson.codecs.pojo.PojoBuilderHelper.getTypeData(Method)",2,2,2
"org.bson.codecs.pojo.PojoBuilderHelper.getTypeData(Type,Class<T>)",1,3,3
"org.bson.codecs.pojo.PojoBuilderHelper.getTypeParameterMap(List<String>,Type)",1,5,5
"org.bson.codecs.pojo.PojoBuilderHelper.isGetter(Method)",4,6,6
"org.bson.codecs.pojo.PojoBuilderHelper.isPropertyMethod(Method)",1,2,2
"org.bson.codecs.pojo.PojoBuilderHelper.isSetter(Method)",2,4,4
"org.bson.codecs.pojo.PojoBuilderHelper.specializePropertyModelBuilder(PropertyModelBuilder<V>,PropertyMetadata<V>)",1,7,7
"org.bson.codecs.pojo.PojoBuilderHelper.stateNotNull(String,V)",2,2,2
"org.bson.codecs.pojo.PojoBuilderHelper.toPropertyName(String)",1,1,2
"org.bson.codecs.pojo.PojoCodecImpl.PojoCodecImpl(ClassModel<T>,CodecRegistry,DiscriminatorLookup)",1,1,1
"org.bson.codecs.pojo.PojoCodecImpl.PojoCodecImpl(ClassModel<T>,CodecRegistry,DiscriminatorLookup,ConcurrentMap<ClassModel<?>, Codec<?>>,boolean)",1,3,3
"org.bson.codecs.pojo.PojoCodecImpl.addToCache(PropertyModel<S>)",1,2,2
"org.bson.codecs.pojo.PojoCodecImpl.areEquivalentTypes(Class<S>,Class<V>)",4,5,6
"org.bson.codecs.pojo.PojoCodecImpl.decode(BsonReader,DecoderContext)",3,3,3
"org.bson.codecs.pojo.PojoCodecImpl.decodeProperties(BsonReader,DecoderContext,InstanceCreator<T>)",1,4,4
"org.bson.codecs.pojo.PojoCodecImpl.decodePropertyModel(BsonReader,DecoderContext,InstanceCreator<T>,String,PropertyModel<S>)",2,7,7
"org.bson.codecs.pojo.PojoCodecImpl.encode(BsonWriter,T,EncoderContext)",4,5,6
"org.bson.codecs.pojo.PojoCodecImpl.encodeProperty(BsonWriter,T,EncoderContext,PropertyModel<S>)",1,4,4
"org.bson.codecs.pojo.PojoCodecImpl.getClassModel()",1,1,1
"org.bson.codecs.pojo.PojoCodecImpl.getCodecFromClass(Class<S>)",1,2,3
"org.bson.codecs.pojo.PojoCodecImpl.getCodecFromDocument(BsonReader,boolean,String,CodecRegistry,DiscriminatorLookup,Codec<T>)",1,5,5
"org.bson.codecs.pojo.PojoCodecImpl.getCodecFromTypeData(TypeData<S>)",1,6,7
"org.bson.codecs.pojo.PojoCodecImpl.getEncoderClass()",1,1,1
"org.bson.codecs.pojo.PojoCodecImpl.getInstanceCodec(PropertyModel<S>,Class<V>)",1,2,2
"org.bson.codecs.pojo.PojoCodecImpl.getPropertyModelByWriteName(ClassModel<T>,String)",3,3,4
"org.bson.codecs.pojo.PojoCodecImpl.getSpecializedClassModel(ClassModel<S>,PropertyModel<V>)",2,9,11
"org.bson.codecs.pojo.PojoCodecImpl.getSpecializedPropertyModel(PropertyModel<V>,TypeParameterMap,List<TypeData<?>>)",2,5,6
"org.bson.codecs.pojo.PojoCodecImpl.shouldSpecialize(ClassModel<T>)",4,3,5
"org.bson.codecs.pojo.PojoCodecImpl.specializePojoCodec(PropertyModel<S>,Codec<S>)",1,3,4
"org.bson.codecs.pojo.PojoCodecImpl.toString()",1,1,1
"org.bson.codecs.pojo.PojoCodecProvider.Builder.Builder()",1,1,1
"org.bson.codecs.pojo.PojoCodecProvider.Builder.automatic(boolean)",1,1,1
"org.bson.codecs.pojo.PojoCodecProvider.Builder.build()",1,4,4
"org.bson.codecs.pojo.PojoCodecProvider.Builder.conventions(List<Convention>)",1,1,1
"org.bson.codecs.pojo.PojoCodecProvider.Builder.register(Class<?>...)",1,1,1
"org.bson.codecs.pojo.PojoCodecProvider.Builder.register(ClassModel<?>...)",1,2,2
"org.bson.codecs.pojo.PojoCodecProvider.Builder.register(String...)",1,1,1
"org.bson.codecs.pojo.PojoCodecProvider.PojoCodecProvider(boolean,Map<Class<?>, ClassModel<?>>,Set<String>,List<Convention>)",1,1,1
"org.bson.codecs.pojo.PojoCodecProvider.builder()",1,1,1
"org.bson.codecs.pojo.PojoCodecProvider.createClassModel(Class<T>,List<Convention>)",1,2,2
"org.bson.codecs.pojo.PojoCodecProvider.get(Class<T>,CodecRegistry)",1,1,1
"org.bson.codecs.pojo.PojoCodecProvider.getPojoCodec(Class<T>,CodecRegistry)",4,7,9
"org.bson.codecs.pojo.PropertyAccessorImpl.PropertyAccessorImpl(PropertyMetadata<T>)",1,1,1
"org.bson.codecs.pojo.PropertyAccessorImpl.get(S)",3,4,4
"org.bson.codecs.pojo.PropertyAccessorImpl.getError(Exception)",1,1,1
"org.bson.codecs.pojo.PropertyAccessorImpl.set(S,T)",1,4,4
"org.bson.codecs.pojo.PropertyAccessorImpl.setError(Exception)",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.PropertyMetadata(String,String,TypeData<T>)",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.addReadAnnotation(Annotation)",2,2,2
"org.bson.codecs.pojo.PropertyMetadata.addWriteAnnotation(Annotation)",2,2,2
"org.bson.codecs.pojo.PropertyMetadata.field(Field)",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getDeclaringClassName()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getField()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getGetter()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getName()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getReadAnnotations()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getSetter()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getTypeData()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getTypeParameterMap()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getTypeParameters()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.getWriteAnnotations()",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.isDeserializable()",2,6,6
"org.bson.codecs.pojo.PropertyMetadata.isPublicAndNotStaticOrTransient(int)",1,2,2
"org.bson.codecs.pojo.PropertyMetadata.isSerializable()",2,4,4
"org.bson.codecs.pojo.PropertyMetadata.notStaticOrTransient(int)",1,2,2
"org.bson.codecs.pojo.PropertyMetadata.setGetter(Method)",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.setSetter(Method)",1,1,1
"org.bson.codecs.pojo.PropertyMetadata.typeParameterInfo(TypeParameterMap,TypeData<S>)",1,2,3
"org.bson.codecs.pojo.PropertyModel.PropertyModel(String,String,String,TypeData<T>,Codec<T>,PropertySerialization<T>,Boolean,PropertyAccessor<T>)",1,1,1
"org.bson.codecs.pojo.PropertyModel.builder()",1,1,1
"org.bson.codecs.pojo.PropertyModel.cachedCodec(Codec<T>)",1,1,1
"org.bson.codecs.pojo.PropertyModel.equals(Object)",12,11,22
"org.bson.codecs.pojo.PropertyModel.getCachedCodec()",1,1,1
"org.bson.codecs.pojo.PropertyModel.getCodec()",1,1,1
"org.bson.codecs.pojo.PropertyModel.getName()",1,1,1
"org.bson.codecs.pojo.PropertyModel.getPropertyAccessor()",1,1,1
"org.bson.codecs.pojo.PropertyModel.getPropertySerialization()",1,1,1
"org.bson.codecs.pojo.PropertyModel.getReadName()",1,1,1
"org.bson.codecs.pojo.PropertyModel.getTypeData()",1,1,1
"org.bson.codecs.pojo.PropertyModel.getWriteName()",1,1,1
"org.bson.codecs.pojo.PropertyModel.hashCode()",1,10,10
"org.bson.codecs.pojo.PropertyModel.isReadable()",1,1,1
"org.bson.codecs.pojo.PropertyModel.isWritable()",1,1,1
"org.bson.codecs.pojo.PropertyModel.shouldSerialize(T)",1,1,1
"org.bson.codecs.pojo.PropertyModel.toString()",1,1,1
"org.bson.codecs.pojo.PropertyModel.useDiscriminator()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.PropertyModelBuilder()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.build()",2,3,3
"org.bson.codecs.pojo.PropertyModelBuilder.codec(Codec<T>)",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.discriminatorEnabled(boolean)",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.getCodec()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.getName()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.getPropertyAccessor()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.getPropertySerialization()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.getReadAnnotations()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.getReadName()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.getTypeData()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.getWriteAnnotations()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.getWriteName()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.isDiscriminatorEnabled()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.isReadable()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.isWritable()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.propertyAccessor(PropertyAccessor<T>)",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.propertyName(String)",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.propertySerialization(PropertySerialization<T>)",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.readAnnotations(List<Annotation>)",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.readName(String)",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.toString()",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.typeData(TypeData<T>)",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.writeAnnotations(List<Annotation>)",1,1,1
"org.bson.codecs.pojo.PropertyModelBuilder.writeName(String)",1,1,1
"org.bson.codecs.pojo.PropertyModelSerializationImpl.PropertyModelSerializationImpl()",1,1,1
"org.bson.codecs.pojo.PropertyModelSerializationImpl.shouldSerialize(T)",1,1,1
"org.bson.codecs.pojo.TypeData.Builder.Builder(Class<T>)",1,1,1
"org.bson.codecs.pojo.TypeData.Builder.addTypeParameter(TypeData<S>)",1,1,1
"org.bson.codecs.pojo.TypeData.Builder.addTypeParameters(List<TypeData<?>>)",1,2,2
"org.bson.codecs.pojo.TypeData.Builder.build()",1,1,1
"org.bson.codecs.pojo.TypeData.Builder.validate()",15,12,15
"org.bson.codecs.pojo.TypeData.TypeData(Class<T>,List<TypeData<?>>)",1,1,1
"org.bson.codecs.pojo.TypeData.boxType(Class<S>)",2,2,2
"org.bson.codecs.pojo.TypeData.builder(Class<T>)",1,1,1
"org.bson.codecs.pojo.TypeData.equals(Object)",5,1,5
"org.bson.codecs.pojo.TypeData.getType()",1,1,1
"org.bson.codecs.pojo.TypeData.getTypeClass(Class<S>)",1,4,5
"org.bson.codecs.pojo.TypeData.getTypeParameters()",1,1,1
"org.bson.codecs.pojo.TypeData.hashCode()",1,1,1
"org.bson.codecs.pojo.TypeData.isAssignableFrom(Class<?>)",1,1,1
"org.bson.codecs.pojo.TypeData.nestedTypeParameters(List<TypeData<?>>)",1,4,4
"org.bson.codecs.pojo.TypeData.toString()",1,2,2
"org.bson.codecs.pojo.TypeParameterMap.Builder.Builder()",1,1,1
"org.bson.codecs.pojo.TypeParameterMap.Builder.addIndex(int)",1,1,1
"org.bson.codecs.pojo.TypeParameterMap.Builder.addIndex(int,int)",1,1,1
"org.bson.codecs.pojo.TypeParameterMap.Builder.build()",2,2,3
"org.bson.codecs.pojo.TypeParameterMap.TypeParameterMap(Map<Integer, Integer>)",1,1,1
"org.bson.codecs.pojo.TypeParameterMap.builder()",1,1,1
"org.bson.codecs.pojo.TypeParameterMap.equals(Object)",4,2,5
"org.bson.codecs.pojo.TypeParameterMap.getPropertyToClassParamIndexMap()",1,1,1
"org.bson.codecs.pojo.TypeParameterMap.hasTypeParameters()",1,1,1
"org.bson.codecs.pojo.TypeParameterMap.hashCode()",1,1,1
"org.bson.codecs.pojo.TypeParameterMap.toString()",1,1,1
"org.bson.diagnostics.JULLogger.JULLogger(String)",1,1,1
"org.bson.diagnostics.JULLogger.debug(String)",1,1,1
"org.bson.diagnostics.JULLogger.debug(String,Throwable)",1,1,1
"org.bson.diagnostics.JULLogger.error(String)",1,1,1
"org.bson.diagnostics.JULLogger.error(String,Throwable)",1,1,1
"org.bson.diagnostics.JULLogger.getName()",1,1,1
"org.bson.diagnostics.JULLogger.info(String)",1,1,1
"org.bson.diagnostics.JULLogger.info(String,Throwable)",1,1,1
"org.bson.diagnostics.JULLogger.isDebugEnabled()",1,1,1
"org.bson.diagnostics.JULLogger.isEnabled(Level)",1,1,1
"org.bson.diagnostics.JULLogger.isErrorEnabled()",1,1,1
"org.bson.diagnostics.JULLogger.isInfoEnabled()",1,1,1
"org.bson.diagnostics.JULLogger.isTraceEnabled()",1,1,1
"org.bson.diagnostics.JULLogger.isWarnEnabled()",1,1,1
"org.bson.diagnostics.JULLogger.log(Level,String)",1,1,1
"org.bson.diagnostics.JULLogger.log(Level,String,Throwable)",1,1,1
"org.bson.diagnostics.JULLogger.trace(String)",1,1,1
"org.bson.diagnostics.JULLogger.trace(String,Throwable)",1,1,1
"org.bson.diagnostics.JULLogger.warn(String)",1,1,1
"org.bson.diagnostics.JULLogger.warn(String,Throwable)",1,1,1
"org.bson.diagnostics.Loggers.Loggers()",1,1,1
"org.bson.diagnostics.Loggers.getLogger(String)",3,2,4
"org.bson.diagnostics.Loggers.shouldUseSLF4J()",1,1,2
"org.bson.diagnostics.SLF4JLogger.SLF4JLogger(String)",1,1,1
"org.bson.diagnostics.SLF4JLogger.debug(String)",1,1,1
"org.bson.diagnostics.SLF4JLogger.debug(String,Throwable)",1,1,1
"org.bson.diagnostics.SLF4JLogger.error(String)",1,1,1
"org.bson.diagnostics.SLF4JLogger.error(String,Throwable)",1,1,1
"org.bson.diagnostics.SLF4JLogger.getName()",1,1,1
"org.bson.diagnostics.SLF4JLogger.info(String)",1,1,1
"org.bson.diagnostics.SLF4JLogger.info(String,Throwable)",1,1,1
"org.bson.diagnostics.SLF4JLogger.isDebugEnabled()",1,1,1
"org.bson.diagnostics.SLF4JLogger.isErrorEnabled()",1,1,1
"org.bson.diagnostics.SLF4JLogger.isInfoEnabled()",1,1,1
"org.bson.diagnostics.SLF4JLogger.isTraceEnabled()",1,1,1
"org.bson.diagnostics.SLF4JLogger.isWarnEnabled()",1,1,1
"org.bson.diagnostics.SLF4JLogger.trace(String)",1,1,1
"org.bson.diagnostics.SLF4JLogger.trace(String,Throwable)",1,1,1
"org.bson.diagnostics.SLF4JLogger.warn(String)",1,1,1
"org.bson.diagnostics.SLF4JLogger.warn(String,Throwable)",1,1,1
"org.bson.internal.Base64.Base64()",1,1,1
"org.bson.internal.Base64.byteArrayToString(byte[])",1,1,1
"org.bson.internal.Base64.decode(String)",4,3,6
"org.bson.internal.Base64.encode(byte[])",2,2,8
"org.bson.internal.UnsignedLongs.UnsignedLongs()",1,1,1
"org.bson.internal.UnsignedLongs.compare(long,long)",1,1,1
"org.bson.internal.UnsignedLongs.compareLongs(long,long)",1,1,3
"org.bson.internal.UnsignedLongs.divide(long,long)",4,2,5
"org.bson.internal.UnsignedLongs.overflowInParse(long,int,int)",4,1,4
"org.bson.internal.UnsignedLongs.parse(String)",5,3,6
"org.bson.internal.UnsignedLongs.remainder(long,long)",4,2,5
"org.bson.internal.UnsignedLongs.toString(long)",2,2,2
"org.bson.io.BasicOutputBuffer.BasicOutputBuffer()",1,1,1
"org.bson.io.BasicOutputBuffer.BasicOutputBuffer(int)",1,1,1
"org.bson.io.BasicOutputBuffer.close()",1,1,1
"org.bson.io.BasicOutputBuffer.ensure(int)",2,1,3
"org.bson.io.BasicOutputBuffer.ensureOpen()",2,1,2
"org.bson.io.BasicOutputBuffer.getByteBuffers()",1,1,1
"org.bson.io.BasicOutputBuffer.getInternalBuffer()",1,1,1
"org.bson.io.BasicOutputBuffer.getPosition()",1,1,1
"org.bson.io.BasicOutputBuffer.getSize()",1,1,1
"org.bson.io.BasicOutputBuffer.pipe(OutputStream)",1,1,1
"org.bson.io.BasicOutputBuffer.truncateToPosition(int)",2,1,3
"org.bson.io.BasicOutputBuffer.write(byte[])",1,1,1
"org.bson.io.BasicOutputBuffer.write(int,int)",3,3,3
"org.bson.io.BasicOutputBuffer.writeByte(int)",1,1,1
"org.bson.io.BasicOutputBuffer.writeBytes(byte[],int,int)",1,1,1
"org.bson.io.Bits.readFully(InputStream,byte[])",1,1,1
"org.bson.io.Bits.readFully(InputStream,byte[],int)",1,1,1
"org.bson.io.Bits.readFully(InputStream,byte[],int,int)",4,2,4
"org.bson.io.Bits.readInt(InputStream)",1,1,1
"org.bson.io.Bits.readInt(InputStream,byte[])",1,1,1
"org.bson.io.Bits.readInt(byte[])",1,1,1
"org.bson.io.Bits.readInt(byte[],int)",1,1,1
"org.bson.io.Bits.readIntBE(byte[],int)",1,1,1
"org.bson.io.Bits.readLong(InputStream)",1,1,1
"org.bson.io.Bits.readLong(InputStream,byte[])",1,1,1
"org.bson.io.Bits.readLong(byte[])",1,1,1
"org.bson.io.Bits.readLong(byte[],int)",1,1,1
"org.bson.io.ByteBufferBsonInput.ByteBufferBsonInput(ByteBuf)",2,1,2
"org.bson.io.ByteBufferBsonInput.close()",1,1,1
"org.bson.io.ByteBufferBsonInput.ensureAvailable(int)",2,2,2
"org.bson.io.ByteBufferBsonInput.ensureOpen()",2,1,2
"org.bson.io.ByteBufferBsonInput.getPosition()",1,1,1
"org.bson.io.ByteBufferBsonInput.hasRemaining()",1,1,1
"org.bson.io.ByteBufferBsonInput.mark(int)",1,1,1
"org.bson.io.ByteBufferBsonInput.readByte()",1,1,1
"org.bson.io.ByteBufferBsonInput.readBytes(byte[])",1,1,1
"org.bson.io.ByteBufferBsonInput.readBytes(byte[],int,int)",1,1,1
"org.bson.io.ByteBufferBsonInput.readCString()",1,1,1
"org.bson.io.ByteBufferBsonInput.readDouble()",1,1,1
"org.bson.io.ByteBufferBsonInput.readInt32()",1,1,1
"org.bson.io.ByteBufferBsonInput.readInt64()",1,1,1
"org.bson.io.ByteBufferBsonInput.readObjectId()",1,1,1
"org.bson.io.ByteBufferBsonInput.readString()",2,2,2
"org.bson.io.ByteBufferBsonInput.readString(int)",5,3,5
"org.bson.io.ByteBufferBsonInput.readUntilNullByte()",1,1,2
"org.bson.io.ByteBufferBsonInput.reset()",2,1,2
"org.bson.io.ByteBufferBsonInput.skip(int)",1,1,1
"org.bson.io.ByteBufferBsonInput.skipCString()",1,1,1
"org.bson.io.OutputBuffer.close()",1,1,1
"org.bson.io.OutputBuffer.size()",1,1,1
"org.bson.io.OutputBuffer.toByteArray()",1,1,2
"org.bson.io.OutputBuffer.toString()",1,1,1
"org.bson.io.OutputBuffer.write(byte[])",1,1,1
"org.bson.io.OutputBuffer.write(byte[],int,int)",1,1,1
"org.bson.io.OutputBuffer.write(int)",1,1,1
"org.bson.io.OutputBuffer.writeBytes(byte[])",1,1,1
"org.bson.io.OutputBuffer.writeCString(String)",1,1,1
"org.bson.io.OutputBuffer.writeCharacters(String,boolean)",3,6,7
"org.bson.io.OutputBuffer.writeDouble(double)",1,1,1
"org.bson.io.OutputBuffer.writeInt(int)",1,1,1
"org.bson.io.OutputBuffer.writeInt32(int)",1,1,1
"org.bson.io.OutputBuffer.writeInt32(int,int)",1,1,1
"org.bson.io.OutputBuffer.writeInt64(long)",1,1,1
"org.bson.io.OutputBuffer.writeLong(long)",1,1,1
"org.bson.io.OutputBuffer.writeObjectId(ObjectId)",1,1,1
"org.bson.io.OutputBuffer.writeString(String)",1,1,1
"org.bson.json.DateTimeFormatter.DateTimeFormatter()",1,1,1
"org.bson.json.DateTimeFormatter.Java8DateTimeFormatter.format(long)",1,1,1
"org.bson.json.DateTimeFormatter.Java8DateTimeFormatter.parse(String)",1,2,2
"org.bson.json.DateTimeFormatter.JaxbDateTimeFormatter.format(long)",1,2,3
"org.bson.json.DateTimeFormatter.JaxbDateTimeFormatter.parse(String)",1,2,3
"org.bson.json.DateTimeFormatter.format(long)",1,1,1
"org.bson.json.DateTimeFormatter.loadDateTimeFormatter(String)",1,1,6
"org.bson.json.DateTimeFormatter.parse(String)",1,1,1
"org.bson.json.ExtendedJsonBinaryConverter.convert(BsonBinary,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonDateTimeConverter.convert(Long,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonDecimal128Converter.convert(Decimal128,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonDoubleConverter.convert(Double,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonInt32Converter.convert(Integer,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonInt64Converter.convert(Long,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonMaxKeyConverter.convert(BsonMaxKey,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonMinKeyConverter.convert(BsonMinKey,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonObjectIdConverter.convert(ObjectId,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonRegularExpressionConverter.convert(BsonRegularExpression,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonTimestampConverter.convert(BsonTimestamp,StrictJsonWriter)",1,1,1
"org.bson.json.ExtendedJsonTimestampConverter.toUnsignedLong(int)",1,1,1
"org.bson.json.ExtendedJsonUndefinedConverter.convert(BsonUndefined,StrictJsonWriter)",1,1,1
"org.bson.json.JsonBooleanConverter.convert(Boolean,StrictJsonWriter)",1,1,1
"org.bson.json.JsonBuffer.JsonBuffer(String)",1,1,1
"org.bson.json.JsonBuffer.getPosition()",1,1,1
"org.bson.json.JsonBuffer.read()",3,3,3
"org.bson.json.JsonBuffer.setPosition(int)",1,1,1
"org.bson.json.JsonBuffer.substring(int)",1,1,1
"org.bson.json.JsonBuffer.substring(int,int)",1,1,1
"org.bson.json.JsonBuffer.unread(int)",1,2,3
"org.bson.json.JsonDoubleConverter.convert(Double,StrictJsonWriter)",1,1,1
"org.bson.json.JsonInt32Converter.convert(Integer,StrictJsonWriter)",1,1,1
"org.bson.json.JsonJavaScriptConverter.convert(String,StrictJsonWriter)",1,1,1
"org.bson.json.JsonNullConverter.convert(BsonNull,StrictJsonWriter)",1,1,1
"org.bson.json.JsonParseException.JsonParseException()",1,1,1
"org.bson.json.JsonParseException.JsonParseException(String)",1,1,1
"org.bson.json.JsonParseException.JsonParseException(String,Object...)",1,1,1
"org.bson.json.JsonParseException.JsonParseException(Throwable)",1,1,1
"org.bson.json.JsonReader.Context.Context(Context,BsonContextType)",1,1,1
"org.bson.json.JsonReader.Context.getContextType()",1,1,1
"org.bson.json.JsonReader.Context.getParentContext()",1,1,1
"org.bson.json.JsonReader.JsonReader(String)",1,1,1
"org.bson.json.JsonReader.Mark.Mark()",1,1,1
"org.bson.json.JsonReader.Mark.reset()",1,1,1
"org.bson.json.JsonReader.decodeHex(String)",4,2,5
"org.bson.json.JsonReader.doPeekBinarySize()",1,1,1
"org.bson.json.JsonReader.doPeekBinarySubType()",1,1,1
"org.bson.json.JsonReader.doReadBinaryData()",1,1,1
"org.bson.json.JsonReader.doReadBoolean()",1,1,1
"org.bson.json.JsonReader.doReadDBPointer()",1,1,1
"org.bson.json.JsonReader.doReadDateTime()",1,1,1
"org.bson.json.JsonReader.doReadDecimal128()",1,1,1
"org.bson.json.JsonReader.doReadDouble()",1,1,1
"org.bson.json.JsonReader.doReadEndArray()",1,4,4
"org.bson.json.JsonReader.doReadEndDocument()",2,6,7
"org.bson.json.JsonReader.doReadInt32()",1,1,1
"org.bson.json.JsonReader.doReadInt64()",1,1,1
"org.bson.json.JsonReader.doReadJavaScript()",1,1,1
"org.bson.json.JsonReader.doReadJavaScriptWithScope()",1,1,1
"org.bson.json.JsonReader.doReadMaxKey()",1,1,1
"org.bson.json.JsonReader.doReadMinKey()",1,1,1
"org.bson.json.JsonReader.doReadNull()",1,1,1
"org.bson.json.JsonReader.doReadObjectId()",1,1,1
"org.bson.json.JsonReader.doReadRegularExpression()",1,1,1
"org.bson.json.JsonReader.doReadStartArray()",1,1,1
"org.bson.json.JsonReader.doReadStartDocument()",1,1,1
"org.bson.json.JsonReader.doReadString()",1,1,1
"org.bson.json.JsonReader.doReadSymbol()",1,1,1
"org.bson.json.JsonReader.doReadTimestamp()",1,1,1
"org.bson.json.JsonReader.doReadUndefined()",1,1,1
"org.bson.json.JsonReader.doSkipName()",1,1,1
"org.bson.json.JsonReader.doSkipValue()",2,5,25
"org.bson.json.JsonReader.getContext()",1,1,1
"org.bson.json.JsonReader.getMark()",1,1,1
"org.bson.json.JsonReader.mark()",2,1,2
"org.bson.json.JsonReader.popToken()",2,2,2
"org.bson.json.JsonReader.pushToken(JsonToken)",2,1,2
"org.bson.json.JsonReader.readBinarySubtypeFromExtendedJson()",3,4,4
"org.bson.json.JsonReader.readBsonType()",9,44,57
"org.bson.json.JsonReader.readDbPointerIdFromExtendedJson()",1,1,1
"org.bson.json.JsonReader.readIntFromExtendedJson()",3,3,3
"org.bson.json.JsonReader.readStringFromExtendedJson()",2,2,2
"org.bson.json.JsonReader.reset()",2,1,2
"org.bson.json.JsonReader.verifyString(String)",3,3,5
"org.bson.json.JsonReader.verifyToken(JsonTokenType)",2,2,2
"org.bson.json.JsonReader.verifyToken(JsonTokenType,Object)",3,3,3
"org.bson.json.JsonReader.visitBinDataConstructor()",3,4,4
"org.bson.json.JsonReader.visitBinDataExtendedJson(String)",5,5,5
"org.bson.json.JsonReader.visitDBPointerConstructor()",1,1,1
"org.bson.json.JsonReader.visitDateTimeConstructor()",11,12,16
"org.bson.json.JsonReader.visitDateTimeConstructorWithOutNew()",5,4,5
"org.bson.json.JsonReader.visitDateTimeExtendedJson()",5,6,7
"org.bson.json.JsonReader.visitDbPointerExtendedJson()",3,3,3
"org.bson.json.JsonReader.visitEmptyConstructor()",1,2,2
"org.bson.json.JsonReader.visitExtendedJSON()",20,22,23
"org.bson.json.JsonReader.visitHexDataConstructor()",4,4,5
"org.bson.json.JsonReader.visitISODateTimeConstructor()",5,7,7
"org.bson.json.JsonReader.visitJavaScriptExtendedJson()",2,2,4
"org.bson.json.JsonReader.visitLegacyBinaryExtendedJson(String)",1,4,4
"org.bson.json.JsonReader.visitMaxKeyExtendedJson()",1,1,1
"org.bson.json.JsonReader.visitMinKeyExtendedJson()",1,1,1
"org.bson.json.JsonReader.visitNew()",15,22,22
"org.bson.json.JsonReader.visitNewRegularExpressionExtendedJson()",3,3,3
"org.bson.json.JsonReader.visitNumberDecimalConstructor()",3,5,5
"org.bson.json.JsonReader.visitNumberDecimalExtendedJson()",1,2,2
"org.bson.json.JsonReader.visitNumberDoubleExtendedJson()",1,2,2
"org.bson.json.JsonReader.visitNumberIntConstructor()",3,3,3
"org.bson.json.JsonReader.visitNumberIntExtendedJson()",1,2,2
"org.bson.json.JsonReader.visitNumberLongConstructor()",3,4,4
"org.bson.json.JsonReader.visitNumberLongExtendedJson()",1,2,2
"org.bson.json.JsonReader.visitObjectIdConstructor()",1,1,1
"org.bson.json.JsonReader.visitObjectIdExtendedJson()",1,1,1
"org.bson.json.JsonReader.visitRegularExpressionConstructor()",1,2,2
"org.bson.json.JsonReader.visitRegularExpressionExtendedJson(String)",1,3,3
"org.bson.json.JsonReader.visitSymbolExtendedJson()",1,1,1
"org.bson.json.JsonReader.visitTimestampConstructor()",3,3,3
"org.bson.json.JsonReader.visitTimestampExtendedJson()",3,3,3
"org.bson.json.JsonReader.visitUUIDConstructor(String)",1,2,3
"org.bson.json.JsonReader.visitUndefinedExtendedJson()",2,2,2
"org.bson.json.JsonScanner.JsonScanner(JsonBuffer)",1,1,1
"org.bson.json.JsonScanner.JsonScanner(String)",1,1,1
"org.bson.json.JsonScanner.getBufferPosition()",1,1,1
"org.bson.json.JsonScanner.nextToken()",15,11,20
"org.bson.json.JsonScanner.scanNumber(char)",17,20,57
"org.bson.json.JsonScanner.scanRegularExpression()",7,7,17
"org.bson.json.JsonScanner.scanString(char)",6,7,19
"org.bson.json.JsonScanner.scanUnquotedString()",1,4,4
"org.bson.json.JsonScanner.setBufferPosition(int)",1,1,1
"org.bson.json.JsonStringConverter.convert(String,StrictJsonWriter)",1,1,1
"org.bson.json.JsonSymbolConverter.convert(String,StrictJsonWriter)",1,1,1
"org.bson.json.JsonToken.JsonToken(JsonTokenType,Object)",1,1,1
"org.bson.json.JsonToken.getType()",1,1,1
"org.bson.json.JsonToken.getValue()",1,1,1
"org.bson.json.JsonToken.getValue(Class<T>)",13,14,14
"org.bson.json.JsonWriter.Context.Context(Context,BsonContextType)",1,1,1
"org.bson.json.JsonWriter.Context.Context(Context,BsonContextType,String)",1,1,1
"org.bson.json.JsonWriter.Context.getParentContext()",1,1,1
"org.bson.json.JsonWriter.JsonWriter(Writer)",1,1,1
"org.bson.json.JsonWriter.JsonWriter(Writer,JsonWriterSettings)",1,1,1
"org.bson.json.JsonWriter.doWriteBinaryData(BsonBinary)",1,1,1
"org.bson.json.JsonWriter.doWriteBoolean(boolean)",1,1,1
"org.bson.json.JsonWriter.doWriteDBPointer(BsonDbPointer)",1,2,2
"org.bson.json.JsonWriter.doWriteDateTime(long)",1,1,1
"org.bson.json.JsonWriter.doWriteDecimal128(Decimal128)",1,1,1
"org.bson.json.JsonWriter.doWriteDouble(double)",1,1,1
"org.bson.json.JsonWriter.doWriteEndArray()",1,1,1
"org.bson.json.JsonWriter.doWriteEndDocument()",1,2,2
"org.bson.json.JsonWriter.doWriteInt32(int)",1,1,1
"org.bson.json.JsonWriter.doWriteInt64(long)",1,1,1
"org.bson.json.JsonWriter.doWriteJavaScript(String)",1,1,1
"org.bson.json.JsonWriter.doWriteJavaScriptWithScope(String)",1,1,1
"org.bson.json.JsonWriter.doWriteMaxKey()",1,1,1
"org.bson.json.JsonWriter.doWriteMinKey()",1,1,1
"org.bson.json.JsonWriter.doWriteName(String)",1,1,1
"org.bson.json.JsonWriter.doWriteNull()",1,1,1
"org.bson.json.JsonWriter.doWriteObjectId(ObjectId)",1,1,1
"org.bson.json.JsonWriter.doWriteRegularExpression(BsonRegularExpression)",1,1,1
"org.bson.json.JsonWriter.doWriteStartArray()",1,1,1
"org.bson.json.JsonWriter.doWriteStartDocument()",1,1,2
"org.bson.json.JsonWriter.doWriteString(String)",1,1,1
"org.bson.json.JsonWriter.doWriteSymbol(String)",1,1,1
"org.bson.json.JsonWriter.doWriteTimestamp(BsonTimestamp)",1,1,1
"org.bson.json.JsonWriter.doWriteUndefined()",1,1,1
"org.bson.json.JsonWriter.flush()",1,1,1
"org.bson.json.JsonWriter.getContext()",1,1,1
"org.bson.json.JsonWriter.getWriter()",1,1,1
"org.bson.json.JsonWriterSettings.Builder.Builder()",1,1,1
"org.bson.json.JsonWriterSettings.Builder.binaryConverter(Converter<BsonBinary>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.booleanConverter(Converter<Boolean>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.build()",1,1,1
"org.bson.json.JsonWriterSettings.Builder.dateTimeConverter(Converter<Long>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.decimal128Converter(Converter<Decimal128>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.doubleConverter(Converter<Double>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.indent(boolean)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.indentCharacters(String)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.int32Converter(Converter<Integer>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.int64Converter(Converter<Long>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.javaScriptConverter(Converter<String>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.maxKeyConverter(Converter<BsonMaxKey>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.minKeyConverter(Converter<BsonMinKey>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.newLineCharacters(String)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.nullConverter(Converter<BsonNull>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.objectIdConverter(Converter<ObjectId>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.outputMode(JsonMode)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.regularExpressionConverter(Converter<BsonRegularExpression>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.stringConverter(Converter<String>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.symbolConverter(Converter<String>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.timestampConverter(Converter<BsonTimestamp>)",1,1,1
"org.bson.json.JsonWriterSettings.Builder.undefinedConverter(Converter<BsonUndefined>)",1,1,1
"org.bson.json.JsonWriterSettings.JsonWriterSettings()",1,1,1
"org.bson.json.JsonWriterSettings.JsonWriterSettings(Builder)",1,2,52
"org.bson.json.JsonWriterSettings.JsonWriterSettings(JsonMode)",1,1,1
"org.bson.json.JsonWriterSettings.JsonWriterSettings(JsonMode,String)",1,1,1
"org.bson.json.JsonWriterSettings.JsonWriterSettings(JsonMode,String,String)",1,1,1
"org.bson.json.JsonWriterSettings.JsonWriterSettings(JsonMode,boolean)",1,1,1
"org.bson.json.JsonWriterSettings.JsonWriterSettings(boolean)",1,1,1
"org.bson.json.JsonWriterSettings.builder()",1,1,1
"org.bson.json.JsonWriterSettings.getBinaryConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getBooleanConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getDateTimeConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getDecimal128Converter()",1,1,1
"org.bson.json.JsonWriterSettings.getDoubleConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getIndentCharacters()",1,1,1
"org.bson.json.JsonWriterSettings.getInt32Converter()",1,1,1
"org.bson.json.JsonWriterSettings.getInt64Converter()",1,1,1
"org.bson.json.JsonWriterSettings.getJavaScriptConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getMaxKeyConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getMinKeyConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getNewLineCharacters()",1,1,1
"org.bson.json.JsonWriterSettings.getNullConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getObjectIdConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getOutputMode()",1,1,1
"org.bson.json.JsonWriterSettings.getRegularExpressionConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getStringConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getSymbolConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getTimestampConverter()",1,1,1
"org.bson.json.JsonWriterSettings.getUndefinedConverter()",1,1,1
"org.bson.json.JsonWriterSettings.isIndent()",1,1,1
"org.bson.json.LegacyExtendedJsonBinaryConverter.convert(BsonBinary,StrictJsonWriter)",1,1,1
"org.bson.json.LegacyExtendedJsonDateTimeConverter.convert(Long,StrictJsonWriter)",1,1,1
"org.bson.json.LegacyExtendedJsonRegularExpressionConverter.convert(BsonRegularExpression,StrictJsonWriter)",1,1,1
"org.bson.json.RelaxedExtendedJsonDateTimeConverter.convert(Long,StrictJsonWriter)",1,2,3
"org.bson.json.RelaxedExtendedJsonDoubleConverter.convert(Double,StrictJsonWriter)",1,3,3
"org.bson.json.RelaxedExtendedJsonInt64Converter.convert(Long,StrictJsonWriter)",1,1,1
"org.bson.json.ShellBinaryConverter.convert(BsonBinary,StrictJsonWriter)",1,1,1
"org.bson.json.ShellDateTimeConverter.convert(Long,StrictJsonWriter)",1,2,3
"org.bson.json.ShellDecimal128Converter.convert(Decimal128,StrictJsonWriter)",1,1,1
"org.bson.json.ShellInt64Converter.convert(Long,StrictJsonWriter)",1,2,3
"org.bson.json.ShellMaxKeyConverter.convert(BsonMaxKey,StrictJsonWriter)",1,1,1
"org.bson.json.ShellMinKeyConverter.convert(BsonMinKey,StrictJsonWriter)",1,1,1
"org.bson.json.ShellObjectIdConverter.convert(ObjectId,StrictJsonWriter)",1,1,1
"org.bson.json.ShellRegularExpressionConverter.convert(BsonRegularExpression,StrictJsonWriter)",1,2,2
"org.bson.json.ShellTimestampConverter.convert(BsonTimestamp,StrictJsonWriter)",1,1,1
"org.bson.json.ShellUndefinedConverter.convert(BsonUndefined,StrictJsonWriter)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.StrictCharacterStreamJsonWriter(Writer,StrictCharacterStreamJsonWriterSettings)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.StrictJsonContext.StrictJsonContext(StrictJsonContext,JsonContextType,String)",1,1,2
"org.bson.json.StrictCharacterStreamJsonWriter.checkPreconditions(State...)",2,1,2
"org.bson.json.StrictCharacterStreamJsonWriter.checkState(State...)",3,1,3
"org.bson.json.StrictCharacterStreamJsonWriter.flush()",1,2,2
"org.bson.json.StrictCharacterStreamJsonWriter.getWriter()",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.preWriteValue()",1,3,3
"org.bson.json.StrictCharacterStreamJsonWriter.setNextState()",1,1,2
"org.bson.json.StrictCharacterStreamJsonWriter.throwBSONException(IOException)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.write(String)",1,2,2
"org.bson.json.StrictCharacterStreamJsonWriter.write(char)",1,2,2
"org.bson.json.StrictCharacterStreamJsonWriter.writeBoolean(String,boolean)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeBoolean(boolean)",1,1,2
"org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray()",2,2,3
"org.bson.json.StrictCharacterStreamJsonWriter.writeEndObject()",1,4,4
"org.bson.json.StrictCharacterStreamJsonWriter.writeName(String)",1,3,3
"org.bson.json.StrictCharacterStreamJsonWriter.writeNull()",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeNull(String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeNumber(String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeNumber(String,String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeRaw(String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeRaw(String,String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeStartArray()",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeStartArray(String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeStartObject()",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeStartObject(String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeString(String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeString(String,String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriter.writeStringHelper(String)",3,4,12
"org.bson.json.StrictCharacterStreamJsonWriterSettings.Builder.Builder()",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriterSettings.Builder.build()",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriterSettings.Builder.indent(boolean)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriterSettings.Builder.indentCharacters(String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriterSettings.Builder.newLineCharacters(String)",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriterSettings.StrictCharacterStreamJsonWriterSettings(Builder)",1,2,2
"org.bson.json.StrictCharacterStreamJsonWriterSettings.builder()",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriterSettings.getIndentCharacters()",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriterSettings.getNewLineCharacters()",1,1,1
"org.bson.json.StrictCharacterStreamJsonWriterSettings.isIndent()",1,1,1
"org.bson.types.BSONTimestamp.BSONTimestamp()",1,1,1
"org.bson.types.BSONTimestamp.BSONTimestamp(int,int)",1,1,1
"org.bson.types.BSONTimestamp.compareTo(BSONTimestamp)",2,2,2
"org.bson.types.BSONTimestamp.equals(Object)",3,3,4
"org.bson.types.BSONTimestamp.getInc()",1,1,1
"org.bson.types.BSONTimestamp.getTime()",2,1,2
"org.bson.types.BSONTimestamp.hashCode()",1,1,1
"org.bson.types.BSONTimestamp.toString()",1,1,1
"org.bson.types.BasicBSONList._getInt(String)",1,1,1
"org.bson.types.BasicBSONList._getInt(String,boolean)",2,1,3
"org.bson.types.BasicBSONList.containsField(String)",2,2,3
"org.bson.types.BasicBSONList.containsKey(String)",1,1,1
"org.bson.types.BasicBSONList.get(String)",3,1,3
"org.bson.types.BasicBSONList.keySet()",1,1,1
"org.bson.types.BasicBSONList.put(String,Object)",1,1,1
"org.bson.types.BasicBSONList.put(int,Object)",1,2,2
"org.bson.types.BasicBSONList.putAll(BSONObject)",1,2,2
"org.bson.types.BasicBSONList.putAll(Map)",1,2,2
"org.bson.types.BasicBSONList.removeField(String)",3,1,3
"org.bson.types.BasicBSONList.toMap()",1,2,2
"org.bson.types.Binary.Binary(BsonBinarySubType,byte[])",1,1,1
"org.bson.types.Binary.Binary(byte,byte[])",1,1,1
"org.bson.types.Binary.Binary(byte[])",1,1,1
"org.bson.types.Binary.equals(Object)",5,2,6
"org.bson.types.Binary.getData()",1,1,1
"org.bson.types.Binary.getType()",1,1,1
"org.bson.types.Binary.hashCode()",1,1,1
"org.bson.types.Binary.length()",1,1,1
"org.bson.types.Code.Code(String)",1,1,1
"org.bson.types.Code.equals(Object)",4,2,5
"org.bson.types.Code.getCode()",1,1,1
"org.bson.types.Code.hashCode()",1,1,1
"org.bson.types.Code.toString()",1,1,1
"org.bson.types.CodeWScope.CodeWScope(String,BSONObject)",1,1,1
"org.bson.types.CodeWScope.equals(Object)",3,2,4
"org.bson.types.CodeWScope.getScope()",1,1,1
"org.bson.types.CodeWScope.hashCode()",1,1,1
"org.bson.types.CodeWithScope.CodeWithScope(String,Document)",1,1,1
"org.bson.types.CodeWithScope.equals(Object)",5,3,7
"org.bson.types.CodeWithScope.getScope()",1,1,1
"org.bson.types.CodeWithScope.hashCode()",1,1,1
"org.bson.types.Decimal128.Decimal128(BigDecimal)",1,1,1
"org.bson.types.Decimal128.Decimal128(BigDecimal,boolean)",3,5,10
"org.bson.types.Decimal128.Decimal128(long)",1,1,1
"org.bson.types.Decimal128.Decimal128(long,long)",1,1,1
"org.bson.types.Decimal128.bigDecimalValue()",4,2,5
"org.bson.types.Decimal128.bigDecimalValueNoNegativeZeroCheck()",2,2,3
"org.bson.types.Decimal128.clampAndRound(BigDecimal)",4,7,7
"org.bson.types.Decimal128.ensureExactRounding(BigDecimal,int)",3,2,3
"org.bson.types.Decimal128.equals(Object)",5,2,6
"org.bson.types.Decimal128.fromIEEE754BIDEncoding(long,long)",1,1,1
"org.bson.types.Decimal128.getBytes()",1,1,3
"org.bson.types.Decimal128.getExponent()",2,1,2
"org.bson.types.Decimal128.getHigh()",1,1,1
"org.bson.types.Decimal128.getLow()",1,1,1
"org.bson.types.Decimal128.hashCode()",1,1,1
"org.bson.types.Decimal128.isFinite()",1,1,1
"org.bson.types.Decimal128.isInfinite()",1,1,1
"org.bson.types.Decimal128.isNaN()",1,1,1
"org.bson.types.Decimal128.isNegative()",1,1,1
"org.bson.types.Decimal128.parse(String)",5,1,5
"org.bson.types.Decimal128.toString()",4,2,4
"org.bson.types.Decimal128.toStringWithBigDecimal()",1,8,9
"org.bson.types.Decimal128.twoHighestCombinationBitsAreSet()",1,1,1
"org.bson.types.MaxKey.equals(Object)",1,1,1
"org.bson.types.MaxKey.hashCode()",1,1,1
"org.bson.types.MaxKey.toString()",1,1,1
"org.bson.types.MinKey.equals(Object)",1,1,1
"org.bson.types.MinKey.hashCode()",1,1,1
"org.bson.types.MinKey.toString()",1,1,1
"org.bson.types.ObjectId.ObjectId()",1,1,1
"org.bson.types.ObjectId.ObjectId(ByteBuffer)",1,1,1
"org.bson.types.ObjectId.ObjectId(Date)",1,1,1
"org.bson.types.ObjectId.ObjectId(Date,int)",1,1,1
"org.bson.types.ObjectId.ObjectId(Date,int,short,int)",1,1,1
"org.bson.types.ObjectId.ObjectId(String)",1,1,1
"org.bson.types.ObjectId.ObjectId(byte[])",1,1,1
"org.bson.types.ObjectId.ObjectId(int,int,int)",1,1,1
"org.bson.types.ObjectId.ObjectId(int,int,short,int)",1,1,1
"org.bson.types.ObjectId.ObjectId(int,int,short,int,boolean)",3,1,4
"org.bson.types.ObjectId.compareTo(ObjectId)",4,1,5
"org.bson.types.ObjectId.createFromLegacyFormat(int,int,int)",1,1,1
"org.bson.types.ObjectId.createMachineIdentifier()",1,4,5
"org.bson.types.ObjectId.createProcessIdentifier()",1,3,3
"org.bson.types.ObjectId.dateToTimestampSeconds(Date)",1,1,1
"org.bson.types.ObjectId.equals(Object)",7,2,8
"org.bson.types.ObjectId.get()",1,1,1
"org.bson.types.ObjectId.getCounter()",1,1,1
"org.bson.types.ObjectId.getCurrentCounter()",1,1,1
"org.bson.types.ObjectId.getDate()",1,1,1
"org.bson.types.ObjectId.getGeneratedMachineIdentifier()",1,1,1
"org.bson.types.ObjectId.getGeneratedProcessIdentifier()",1,1,1
"org.bson.types.ObjectId.getMachineIdentifier()",1,1,1
"org.bson.types.ObjectId.getProcessIdentifier()",1,1,1
"org.bson.types.ObjectId.getTime()",1,1,1
"org.bson.types.ObjectId.getTimeSecond()",1,1,1
"org.bson.types.ObjectId.getTimestamp()",1,1,1
"org.bson.types.ObjectId.hashCode()",1,1,1
"org.bson.types.ObjectId.int0(int)",1,1,1
"org.bson.types.ObjectId.int1(int)",1,1,1
"org.bson.types.ObjectId.int2(int)",1,1,1
"org.bson.types.ObjectId.int3(int)",1,1,1
"org.bson.types.ObjectId.isValid(String)",7,2,10
"org.bson.types.ObjectId.legacyToBytes(int,int,int)",1,1,1
"org.bson.types.ObjectId.makeInt(byte,byte,byte,byte)",1,1,1
"org.bson.types.ObjectId.parseHexString(String)",2,2,3
"org.bson.types.ObjectId.putToByteBuffer(ByteBuffer)",1,1,1
"org.bson.types.ObjectId.short0(short)",1,1,1
"org.bson.types.ObjectId.short1(short)",1,1,1
"org.bson.types.ObjectId.toByteArray()",1,1,1
"org.bson.types.ObjectId.toHexString()",1,1,2
"org.bson.types.ObjectId.toString()",1,1,1
"org.bson.types.ObjectId.toStringMongod()",1,1,1
"org.bson.types.StringRangeSet.StringRangeSet(int)",1,1,1
"org.bson.types.StringRangeSet.add(String)",1,1,1
"org.bson.types.StringRangeSet.addAll(Collection<? extends String>)",1,1,1
"org.bson.types.StringRangeSet.clear()",1,1,1
"org.bson.types.StringRangeSet.contains(Object)",2,2,4
"org.bson.types.StringRangeSet.containsAll(Collection<?>)",3,2,3
"org.bson.types.StringRangeSet.intToString(int)",1,2,2
"org.bson.types.StringRangeSet.isEmpty()",1,1,1
"org.bson.types.StringRangeSet.iterator()",2,1,2
"org.bson.types.StringRangeSet.remove(Object)",1,1,1
"org.bson.types.StringRangeSet.removeAll(Collection<?>)",1,1,1
"org.bson.types.StringRangeSet.retainAll(Collection<?>)",1,1,1
"org.bson.types.StringRangeSet.size()",1,1,1
"org.bson.types.StringRangeSet.toArray()",1,2,2
"org.bson.types.StringRangeSet.toArray(T[])",1,3,4
"org.bson.types.Symbol.Symbol(String)",1,1,1
"org.bson.types.Symbol.equals(Object)",4,2,5
"org.bson.types.Symbol.getSymbol()",1,1,1
"org.bson.types.Symbol.hashCode()",1,1,1
"org.bson.types.Symbol.toString()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.AbstractCopyOnWriteMap(N,Type)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.add(E)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.addAll(Collection<? extends E>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.contains(Object)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.containsAll(Collection<?>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.equals(Object)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.hashCode()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.isEmpty()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.iterator()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.size()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.toArray()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.toArray(T[])",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.CollectionView.toString()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.EntrySet.clear()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.EntrySet.getDelegate()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.EntrySet.remove(Object)",2,1,2
"org.bson.util.AbstractCopyOnWriteMap.EntrySet.removeAll(Collection<?>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.EntrySet.retainAll(Collection<?>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Immutable.entrySet()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Immutable.keySet()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Immutable.values()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.KeySet.clear()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.KeySet.getDelegate()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.KeySet.remove(Object)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.KeySet.removeAll(Collection<?>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.KeySet.retainAll(Collection<?>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Mutable.entrySet()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Mutable.keySet()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Mutable.values()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.UnmodifiableIterator.UnmodifiableIterator(Iterator<T>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.UnmodifiableIterator.hasNext()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.UnmodifiableIterator.next()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.UnmodifiableIterator.remove()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Values.clear()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Values.getDelegate()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Values.remove(Object)",2,1,2
"org.bson.util.AbstractCopyOnWriteMap.Values.removeAll(Collection<?>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.Values.retainAll(Collection<?>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.View.View()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.clear()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.containsKey(Object)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.containsValue(Object)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.copy()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.entrySet()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.equals(Object)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.equals(Object,Object)",2,1,2
"org.bson.util.AbstractCopyOnWriteMap.get(Object)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.getDelegate()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.hashCode()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.isEmpty()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.keySet()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.put(K,V)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.putAll(Map<? extends K, ? extends V>)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.putIfAbsent(K,V)",2,2,2
"org.bson.util.AbstractCopyOnWriteMap.remove(Object)",2,1,2
"org.bson.util.AbstractCopyOnWriteMap.remove(Object,Object)",2,3,3
"org.bson.util.AbstractCopyOnWriteMap.replace(K,V)",2,1,2
"org.bson.util.AbstractCopyOnWriteMap.replace(K,V,V)",2,2,3
"org.bson.util.AbstractCopyOnWriteMap.set(M)",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.size()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.toString()",1,1,1
"org.bson.util.AbstractCopyOnWriteMap.values()",1,1,1
"org.bson.util.ClassAncestry.computeAncestry(Class<?>)",1,1,1
"org.bson.util.ClassAncestry.computeAncestry(Class<T>,List<Class<?>>)",2,3,5
"org.bson.util.ClassAncestry.getAncestry(Class<T>)",3,2,3
"org.bson.util.ClassAncestry.getClassAncestryCache()",1,1,1
"org.bson.util.ClassMap.ComputeFunction.apply(Class<?>)",3,2,3
"org.bson.util.ClassMap.clear()",1,1,1
"org.bson.util.ClassMap.get(Object)",1,1,1
"org.bson.util.ClassMap.getAncestry(Class<T>)",1,1,1
"org.bson.util.ClassMap.isEmpty()",1,1,1
"org.bson.util.ClassMap.put(Class<?>,T)",1,1,1
"org.bson.util.ClassMap.remove(Object)",1,1,1
"org.bson.util.ClassMap.size()",1,1,1
"org.bson.util.ComputingMap.ComputingMap(ConcurrentMap<K, V>,Function<K, V>)",1,1,1
"org.bson.util.ComputingMap.apply(K)",1,1,1
"org.bson.util.ComputingMap.clear()",1,1,1
"org.bson.util.ComputingMap.containsKey(Object)",1,1,1
"org.bson.util.ComputingMap.containsValue(Object)",1,1,1
"org.bson.util.ComputingMap.create(Function<K, V>)",1,1,1
"org.bson.util.ComputingMap.entrySet()",1,1,1
"org.bson.util.ComputingMap.equals(Object)",1,1,1
"org.bson.util.ComputingMap.get(Object)",4,2,4
"org.bson.util.ComputingMap.hashCode()",1,1,1
"org.bson.util.ComputingMap.isEmpty()",1,1,1
"org.bson.util.ComputingMap.keySet()",1,1,1
"org.bson.util.ComputingMap.put(K,V)",1,1,1
"org.bson.util.ComputingMap.putAll(Map<? extends K, ? extends V>)",1,1,1
"org.bson.util.ComputingMap.putIfAbsent(K,V)",1,1,1
"org.bson.util.ComputingMap.remove(Object)",1,1,1
"org.bson.util.ComputingMap.remove(Object,Object)",1,1,1
"org.bson.util.ComputingMap.replace(K,V)",1,1,1
"org.bson.util.ComputingMap.replace(K,V,V)",1,1,1
"org.bson.util.ComputingMap.size()",1,1,1
"org.bson.util.ComputingMap.values()",1,1,1
"org.bson.util.CopyOnWriteMap.Builder.Builder()",1,1,1
"org.bson.util.CopyOnWriteMap.Builder.addAll(Map<? extends K, ? extends V>)",1,1,1
"org.bson.util.CopyOnWriteMap.Builder.liveViews()",1,1,1
"org.bson.util.CopyOnWriteMap.Builder.newHashMap()",1,1,1
"org.bson.util.CopyOnWriteMap.Builder.newLinkedMap()",1,1,1
"org.bson.util.CopyOnWriteMap.Builder.stableViews()",1,1,1
"org.bson.util.CopyOnWriteMap.CopyOnWriteMap()",1,1,1
"org.bson.util.CopyOnWriteMap.CopyOnWriteMap(Map<? extends K, ? extends V>)",1,1,1
"org.bson.util.CopyOnWriteMap.CopyOnWriteMap(Map<? extends K, ? extends V>,Type)",1,1,1
"org.bson.util.CopyOnWriteMap.CopyOnWriteMap(Type)",1,1,1
"org.bson.util.CopyOnWriteMap.Hash.Hash(Map<? extends K, ? extends V>,Type)",1,1,1
"org.bson.util.CopyOnWriteMap.Hash.copy(N)",1,1,1
"org.bson.util.CopyOnWriteMap.Linked.Linked(Map<? extends K, ? extends V>,Type)",1,1,1
"org.bson.util.CopyOnWriteMap.Linked.copy(N)",1,1,1
"org.bson.util.CopyOnWriteMap.builder()",1,1,1
"org.bson.util.CopyOnWriteMap.newHashMap()",1,1,1
"org.bson.util.CopyOnWriteMap.newHashMap(Map<? extends K, ? extends V>)",1,1,1
"org.bson.util.CopyOnWriteMap.newLinkedMap()",1,1,1
"org.bson.util.CopyOnWriteMap.newLinkedMap(Map<? extends K, ? extends V>)",1,1,1

Class,OCavg,WMC
"DocTaglet","1,30",13
"ManualTaglet","1,00",4
"ServerReleaseTaglet","1,00",4
"com.mongodb.AcknowledgedBulkWriteResult","1,91",21
"com.mongodb.AggregateIterableImpl","1,53",23
"com.mongodb.AggregationOptions","1,00",9
"com.mongodb.AggregationOptions.Builder","1,00",8
"com.mongodb.AggregationOptions.OutputMode",n/a,0
"com.mongodb.AggregationOutput","1,00",2
"com.mongodb.AuthenticationMechanism","1,50",6
"com.mongodb.BSONTimestampCodec","1,00",3
"com.mongodb.BasicDBList","1,75",7
"com.mongodb.BasicDBObject","1,19",19
"com.mongodb.BasicDBObjectBuilder","1,18",13
"com.mongodb.BasicDBObjectFactory","1,00",2
"com.mongodb.BulkUpdateRequestBuilder","1,00",7
"com.mongodb.BulkWriteError","1,75",14
"com.mongodb.BulkWriteException","2,67",16
"com.mongodb.BulkWriteHelper","1,71",12
"com.mongodb.BulkWriteOperation","1,11",10
"com.mongodb.BulkWriteRequestBuilder","1,00",10
"com.mongodb.BulkWriteResult",n/a,0
"com.mongodb.BulkWriteUpsert","1,67",10
"com.mongodb.Bytes","16,00",16
"com.mongodb.Bytes.OptionHolder","1,40",7
"com.mongodb.ChangeStreamIterableImpl","1,27",14
"com.mongodb.ClientSessionBinding","1,11",10
"com.mongodb.ClientSessionBinding.SessionBindingConnectionSource","1,00",7
"com.mongodb.ClientSessionContext","1,00",10
"com.mongodb.ClientSessionOptions","1,00",5
"com.mongodb.ClientSessionOptions.Builder","1,00",5
"com.mongodb.CommandResult","1,83",11
"com.mongodb.CompoundDBObjectCodec","1,00",7
"com.mongodb.ConnectionString","4,29",219
"com.mongodb.CursorType","1,00",3
"com.mongodb.DB","1,69",83
"com.mongodb.DBAddress","1,57",22
"com.mongodb.DBCollection","1,60",255
"com.mongodb.DBCollectionObjectFactory","1,50",15
"com.mongodb.DBCursor","1,73",116
"com.mongodb.DBCursor.IteratorOrArray",n/a,0
"com.mongodb.DBCursor.OptionalFinalizer","1,33",4
"com.mongodb.DBDecoderAdapter","1,00",2
"com.mongodb.DBDecoderAdapter.BufferExposingByteArrayOutputStream","1,00",2
"com.mongodb.DBEncoderAdapter","1,00",3
"com.mongodb.DBEncoderFactoryAdapter","1,00",3
"com.mongodb.DBObjectCodec","2,22",60
"com.mongodb.DBObjectCodecProvider","2,00",10
"com.mongodb.DBObjectCollationHelper","11,00",22
"com.mongodb.DBObjects","1,00",2
"com.mongodb.DBRef","2,00",16
"com.mongodb.DBRefCodec","1,25",5
"com.mongodb.DBRefCodecProvider","2,00",6
"com.mongodb.DefaultDBCallback","1,83",11
"com.mongodb.DefaultDBDecoder","1,00",5
"com.mongodb.DefaultDBEncoder","1,20",6
"com.mongodb.DistinctIterableImpl","1,17",7
"com.mongodb.DocumentToDBRefTransformer","2,33",7
"com.mongodb.DuplicateKeyException","1,00",1
"com.mongodb.ErrorCategory","3,00",3
"com.mongodb.ExplainVerbosity",n/a,0
"com.mongodb.FindIterableImpl","1,07",29
"com.mongodb.GroupCommand","2,50",15
"com.mongodb.InsertOptions","1,00",8
"com.mongodb.InsertRequest","1,00",3
"com.mongodb.LazyDBCallback","1,25",5
"com.mongodb.LazyDBDecoder","1,00",5
"com.mongodb.LazyDBEncoder","2,00",2
"com.mongodb.LazyDBList","1,00",4
"com.mongodb.LazyDBObject","1,00",4
"com.mongodb.ListCollectionsIterableImpl","1,33",8
"com.mongodb.ListDatabasesIterableImpl","1,00",4
"com.mongodb.ListIndexesIterableImpl","1,25",5
"com.mongodb.MapReduceCommand","1,45",45
"com.mongodb.MapReduceCommand.OutputType",n/a,0
"com.mongodb.MapReduceIterableImpl","1,36",30
"com.mongodb.MapReduceIterableImpl.WrappedMapReduceReadOperation","1,00",3
"com.mongodb.MapReduceOutput","1,31",17
"com.mongodb.MappingIterable","1,10",11
"com.mongodb.Mongo","1,30",99
"com.mongodb.Mongo.ClientSessionImpl","1,75",21
"com.mongodb.Mongo.Holder","1,50",6
"com.mongodb.Mongo.ServerCursorAndNamespace","1,00",1
"com.mongodb.MongoBatchCursorAdapter","1,56",14
"com.mongodb.MongoBulkWriteException","2,43",17
"com.mongodb.MongoChangeStreamException","1,00",1
"com.mongodb.MongoClient","1,03",32
"com.mongodb.MongoClientException","1,00",2
"com.mongodb.MongoClientOptions","2,30",108
"com.mongodb.MongoClientOptions.Builder","1,07",43
"com.mongodb.MongoClientURI","3,46",45
"com.mongodb.MongoCollectionImpl","1,21",170
"com.mongodb.MongoCommandException","1,00",7
"com.mongodb.MongoCompressor","1,40",14
"com.mongodb.MongoConfigurationException","1,00",1
"com.mongodb.MongoCredential","2,00",38
"com.mongodb.MongoCursorAdapter","1,00",7
"com.mongodb.MongoCursorNotFoundException","1,00",3
"com.mongodb.MongoDatabaseImpl","1,16",52
"com.mongodb.MongoException","1,33",8
"com.mongodb.MongoExecutionTimeoutException","1,00",1
"com.mongodb.MongoGridFSException","1,00",2
"com.mongodb.MongoIncompatibleDriverException","1,00",2
"com.mongodb.MongoInternalException","1,00",2
"com.mongodb.MongoInterruptedException","1,00",1
"com.mongodb.MongoIterableImpl","1,14",16
"com.mongodb.MongoMappingCursor","1,12",9
"com.mongodb.MongoNamespace","1,75",21
"com.mongodb.MongoNodeIsRecoveringException","1,00",1
"com.mongodb.MongoNotPrimaryException","1,00",1
"com.mongodb.MongoOptions","2,06",97
"com.mongodb.MongoQueryException","1,00",3
"com.mongodb.MongoSecurityException","1,00",3
"com.mongodb.MongoServerException","1,00",3
"com.mongodb.MongoSocketClosedException","1,00",1
"com.mongodb.MongoSocketException","1,00",3
"com.mongodb.MongoSocketOpenException","1,00",1
"com.mongodb.MongoSocketReadException","1,00",2
"com.mongodb.MongoSocketReadTimeoutException","1,00",1
"com.mongodb.MongoSocketWriteException","1,00",1
"com.mongodb.MongoTimeoutException","1,00",1
"com.mongodb.MongoURI","1,00",16
"com.mongodb.MongoWaitQueueFullException","1,00",1
"com.mongodb.MongoWriteConcernException","1,00",4
"com.mongodb.MongoWriteException","1,00",2
"com.mongodb.ParallelScanOptions","1,00",5
"com.mongodb.ParallelScanOptions.Builder","1,00",4
"com.mongodb.QueryBuilder","1,40",49
"com.mongodb.QueryBuilder.NullObject",n/a,0
"com.mongodb.QueryBuilder.QueryBuilderException","1,00",1
"com.mongodb.QueryOperators","1,00",1
"com.mongodb.ReadConcern","1,57",11
"com.mongodb.ReadConcernLevel","1,67",5
"com.mongodb.ReadPreference","1,48",46
"com.mongodb.ReadPreference.PrimaryReadPreference","1,00",9
"com.mongodb.ReflectionDBObject","1,38",22
"com.mongodb.ReflectionDBObject.FieldInfo","1,00",2
"com.mongodb.ReflectionDBObject.JavaWrapper","3,17",19
"com.mongodb.RemoveRequest","1,00",4
"com.mongodb.ReplaceRequest","1,00",6
"com.mongodb.ReplicaSetStatus","1,43",10
"com.mongodb.ServerAddress","1,80",27
"com.mongodb.ServerCursor","2,00",12
"com.mongodb.ServerSessionPool","1,56",14
"com.mongodb.ServerSessionPool.ServerSessionImpl","1,00",7
"com.mongodb.ServerSessionPool.ServerSessionItemFactory","1,25",5
"com.mongodb.Tag","1,67",10
"com.mongodb.TagSet","1,75",14
"com.mongodb.TaggableReadPreference","2,89",52
"com.mongodb.TaggableReadPreference.NearestReadPreference","1,75",7
"com.mongodb.TaggableReadPreference.PrimaryPreferredReadPreference","1,25",5
"com.mongodb.TaggableReadPreference.SecondaryPreferredReadPreference","1,25",5
"com.mongodb.TaggableReadPreference.SecondaryReadPreference","1,75",7
"com.mongodb.UnacknowledgedBulkWriteResult","1,17",14
"com.mongodb.UpdateRequest","1,00",8
"com.mongodb.WriteConcern","1,76",65
"com.mongodb.WriteConcern.Majority","1,00",2
"com.mongodb.WriteConcernError","1,71",12
"com.mongodb.WriteConcernException","2,00",14
"com.mongodb.WriteConcernResult","1,65",28
"com.mongodb.WriteError","1,56",14
"com.mongodb.WriteRequest",n/a,0
"com.mongodb.WriteResult","1,22",11
"com.mongodb.assertions.Assertions","1,83",11
"com.mongodb.async.client.AbstractSubscription","2,24",38
"com.mongodb.async.client.AggregateIterableImpl","1,47",28
"com.mongodb.async.client.AwaitingWriteOperationIterable","2,42",29
"com.mongodb.async.client.ChangeStreamIterableImpl","1,21",17
"com.mongodb.async.client.DistinctIterableImpl","1,09",12
"com.mongodb.async.client.FindIterableImpl","1,03",33
"com.mongodb.async.client.FlatteningSingleResultCallbackSubscription","1,25",5
"com.mongodb.async.client.ListCollectionsIterableImpl","1,08",14
"com.mongodb.async.client.ListDatabasesIterableImpl","1,00",11
"com.mongodb.async.client.ListIndexesIterableImpl","1,00",11
"com.mongodb.async.client.MapReduceIterableImpl","1,22",33
"com.mongodb.async.client.MappingAsyncBatchCursor","1,33",12
"com.mongodb.async.client.MappingIterable","1,31",17
"com.mongodb.async.client.MongoClientImpl","1,06",18
"com.mongodb.async.client.MongoClientSettings","1,00",18
"com.mongodb.async.client.MongoClientSettings.Builder","1,06",19
"com.mongodb.async.client.MongoClients","1,57",22
"com.mongodb.async.client.MongoCollectionImpl","1,45",116
"com.mongodb.async.client.MongoDatabaseImpl","1,26",34
"com.mongodb.async.client.MongoIterableSubscription","2,12",17
"com.mongodb.async.client.NettyMongoClients","1,00",3
"com.mongodb.async.client.Observables","1,00",7
"com.mongodb.async.client.OperationIterable","1,53",23
"com.mongodb.async.client.SingleResultCallbackSubscription","1,25",5
"com.mongodb.async.client.gridfs.GridFSBucketImpl","1,38",72
"com.mongodb.async.client.gridfs.GridFSBuckets","1,00",3
"com.mongodb.async.client.gridfs.GridFSDownloadStreamImpl","2,25",54
"com.mongodb.async.client.gridfs.GridFSFindIterableImpl","1,00",14
"com.mongodb.async.client.gridfs.GridFSIndexCheckImpl","2,00",22
"com.mongodb.async.client.gridfs.GridFSUploadStreamImpl","1,95",43
"com.mongodb.async.client.gridfs.helpers.AsyncStreamHelper","1,38",22
"com.mongodb.async.client.gridfs.helpers.AsynchronousChannelHelper","1,00",21
"com.mongodb.binding.AbstractReferenceCounted","1,67",5
"com.mongodb.binding.AsyncClusterBinding","1,12",9
"com.mongodb.binding.AsyncClusterBinding.AsyncClusterBindingConnectionSource","1,00",6
"com.mongodb.binding.AsyncSingleConnectionReadBinding","1,17",7
"com.mongodb.binding.AsyncSingleConnectionReadBinding.AsyncSingleConnectionSource","1,17",7
"com.mongodb.binding.ClusterBinding","1,00",6
"com.mongodb.binding.ClusterBinding.ClusterBindingConnectionSource","1,00",6
"com.mongodb.binding.SingleConnectionReadBinding","1,17",7
"com.mongodb.binding.SingleConnectionReadBinding.SingleConnectionSource","1,17",7
"com.mongodb.binding.SingleServerBinding","1,00",7
"com.mongodb.binding.SingleServerBinding.SingleServerBindingConnectionSource","1,00",6
"com.mongodb.bulk.BulkWriteError","1,60",8
"com.mongodb.bulk.BulkWriteResult","1,64",41
"com.mongodb.bulk.BulkWriteUpsert","1,67",10
"com.mongodb.bulk.DeleteRequest","1,00",7
"com.mongodb.bulk.IndexRequest","1,10",44
"com.mongodb.bulk.InsertRequest","1,00",3
"com.mongodb.bulk.UpdateRequest","1,17",14
"com.mongodb.bulk.WriteConcernError","1,71",12
"com.mongodb.bulk.WriteRequest","1,00",1
"com.mongodb.bulk.WriteRequest.Type",n/a,0
"com.mongodb.client.MongoDriverInformation","1,00",6
"com.mongodb.client.MongoDriverInformation.Builder","1,14",8
"com.mongodb.client.gridfs.GridFSBucketImpl","1,35",62
"com.mongodb.client.gridfs.GridFSBuckets","1,00",3
"com.mongodb.client.gridfs.GridFSDownloadStream",n/a,0
"com.mongodb.client.gridfs.GridFSDownloadStreamImpl","2,28",41
"com.mongodb.client.gridfs.GridFSFindIterableImpl","1,00",14
"com.mongodb.client.gridfs.GridFSUploadStream","1,00",1
"com.mongodb.client.gridfs.GridFSUploadStreamImpl","1,92",23
"com.mongodb.client.gridfs.codecs.GridFSFileCodec","1,80",9
"com.mongodb.client.gridfs.codecs.GridFSFileCodecProvider","2,00",2
"com.mongodb.client.gridfs.model.GridFSDownloadByNameOptions","1,00",3
"com.mongodb.client.gridfs.model.GridFSDownloadOptions","1,00",3
"com.mongodb.client.gridfs.model.GridFSFile","2,25",36
"com.mongodb.client.gridfs.model.GridFSUploadOptions","1,00",5
"com.mongodb.client.jndi.MongoClientFactory","9,00",9
"com.mongodb.client.model.Accumulators","1,00",12
"com.mongodb.client.model.Aggregates","1,14",32
"com.mongodb.client.model.Aggregates.AddFieldsStage","1,33",4
"com.mongodb.client.model.Aggregates.BucketAutoStage","1,33",4
"com.mongodb.client.model.Aggregates.BucketStage","1,67",5
"com.mongodb.client.model.Aggregates.FacetStage","1,67",5
"com.mongodb.client.model.Aggregates.GraphLookupStage","1,67",5
"com.mongodb.client.model.Aggregates.GroupStage","1,33",4
"com.mongodb.client.model.Aggregates.ReplaceRootStage","1,00",3
"com.mongodb.client.model.Aggregates.SimplePipelineStage","1,00",3
"com.mongodb.client.model.Aggregates.SortByCountStage","1,00",3
"com.mongodb.client.model.BsonField","1,00",4
"com.mongodb.client.model.BucketAutoOptions","1,20",6
"com.mongodb.client.model.BucketGranularity","1,50",6
"com.mongodb.client.model.BucketOptions","1,20",6
"com.mongodb.client.model.BuildersHelper","2,00",4
"com.mongodb.client.model.BulkWriteOptions","1,00",4
"com.mongodb.client.model.Collation","3,12",50
"com.mongodb.client.model.Collation.Builder","1,00",12
"com.mongodb.client.model.CollationAlternate","2,00",6
"com.mongodb.client.model.CollationCaseFirst","2,00",6
"com.mongodb.client.model.CollationMaxVariable","2,00",6
"com.mongodb.client.model.CollationStrength","3,00",9
"com.mongodb.client.model.CountOptions","1,00",12
"com.mongodb.client.model.CreateCollectionOptions","1,00",18
"com.mongodb.client.model.CreateViewOptions","1,00",2
"com.mongodb.client.model.DBCollectionCountOptions","1,00",19
"com.mongodb.client.model.DBCollectionDistinctOptions","1,00",9
"com.mongodb.client.model.DBCollectionFindAndModifyOptions","1,00",23
"com.mongodb.client.model.DBCollectionFindOptions","1,00",32
"com.mongodb.client.model.DBCollectionRemoveOptions","1,00",7
"com.mongodb.client.model.DBCollectionUpdateOptions","1,00",15
"com.mongodb.client.model.DBCreateViewOptions","1,00",2
"com.mongodb.client.model.DeleteManyModel","1,00",4
"com.mongodb.client.model.DeleteOneModel","1,00",4
"com.mongodb.client.model.DeleteOptions","1,00",2
"com.mongodb.client.model.Facet","1,00",4
"com.mongodb.client.model.Field","2,00",10
"com.mongodb.client.model.Filters","1,05",61
"com.mongodb.client.model.Filters.AndFilter","3,17",19
"com.mongodb.client.model.Filters.GeometryOperatorFilter","1,50",6
"com.mongodb.client.model.Filters.IterableOperatorFilter","1,33",4
"com.mongodb.client.model.Filters.NotFilter","2,00",8
"com.mongodb.client.model.Filters.OperatorFilter","1,00",3
"com.mongodb.client.model.Filters.OrNorFilter","1,33",4
"com.mongodb.client.model.Filters.OrNorFilter.Operator","1,00",1
"com.mongodb.client.model.Filters.SimpleEncodingFilter","1,00",3
"com.mongodb.client.model.Filters.SimpleFilter","1,00",3
"com.mongodb.client.model.Filters.TextFilter","2,00",6
"com.mongodb.client.model.FindOneAndDeleteOptions","1,00",8
"com.mongodb.client.model.FindOneAndReplaceOptions","1,00",14
"com.mongodb.client.model.FindOneAndUpdateOptions","1,00",16
"com.mongodb.client.model.FindOptions","1,00",45
"com.mongodb.client.model.GraphLookupOptions","1,60",8
"com.mongodb.client.model.IndexModel","1,00",4
"com.mongodb.client.model.IndexOptionDefaults","1,00",2
"com.mongodb.client.model.IndexOptions","1,06",38
"com.mongodb.client.model.Indexes","1,20",18
"com.mongodb.client.model.InsertManyOptions","1,00",4
"com.mongodb.client.model.InsertOneModel","1,00",2
"com.mongodb.client.model.InsertOneOptions","1,00",2
"com.mongodb.client.model.MapReduceAction","1,00",2
"com.mongodb.client.model.ParallelCollectionScanOptions","1,00",2
"com.mongodb.client.model.Projections","1,07",16
"com.mongodb.client.model.Projections.ElemMatchFilterProjection","1,00",3
"com.mongodb.client.model.Projections.FieldsProjection","1,67",5
"com.mongodb.client.model.PushOptions","1,44",13
"com.mongodb.client.model.RenameCollectionOptions","1,00",2
"com.mongodb.client.model.ReplaceOneModel","1,00",5
"com.mongodb.client.model.ReturnDocument",n/a,0
"com.mongodb.client.model.SimpleExpression","1,00",3
"com.mongodb.client.model.Sorts","1,11",10
"com.mongodb.client.model.Sorts.CompoundSort","1,67",5
"com.mongodb.client.model.TextSearchOptions","1,00",7
"com.mongodb.client.model.UnwindOptions","1,00",4
"com.mongodb.client.model.UpdateManyModel","1,00",5
"com.mongodb.client.model.UpdateOneModel","1,00",5
"com.mongodb.client.model.UpdateOptions","1,00",8
"com.mongodb.client.model.Updates","1,00",33
"com.mongodb.client.model.Updates.CompositeUpdate","2,33",7
"com.mongodb.client.model.Updates.PullAllUpdate","1,33",4
"com.mongodb.client.model.Updates.PushUpdate","2,33",7
"com.mongodb.client.model.Updates.SimpleUpdate","1,00",3
"com.mongodb.client.model.Updates.WithEachUpdate","1,20",6
"com.mongodb.client.model.ValidationAction","1,67",5
"com.mongodb.client.model.ValidationLevel","1,67",5
"com.mongodb.client.model.ValidationOptions","1,00",6
"com.mongodb.client.model.WriteModel","1,00",1
"com.mongodb.client.model.changestream.ChangeStreamDocument","1,90",19
"com.mongodb.client.model.changestream.ChangeStreamDocumentCodec","1,00",4
"com.mongodb.client.model.changestream.FullDocument","2,00",6
"com.mongodb.client.model.changestream.OperationType","1,75",7
"com.mongodb.client.model.changestream.OperationTypeCodec","1,00",3
"com.mongodb.client.model.changestream.UpdateDescription","2,33",14
"com.mongodb.client.model.geojson.CoordinateReferenceSystem",n/a,0
"com.mongodb.client.model.geojson.CoordinateReferenceSystemType","1,00",2
"com.mongodb.client.model.geojson.GeoJsonObjectType","1,00",2
"com.mongodb.client.model.geojson.Geometry","1,71",12
"com.mongodb.client.model.geojson.GeometryCollection","1,71",12
"com.mongodb.client.model.geojson.LineString","1,71",12
"com.mongodb.client.model.geojson.MultiLineString","1,86",13
"com.mongodb.client.model.geojson.MultiPoint","1,71",12
"com.mongodb.client.model.geojson.MultiPolygon","1,71",12
"com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem","1,50",9
"com.mongodb.client.model.geojson.Point","1,62",13
"com.mongodb.client.model.geojson.Polygon","1,60",16
"com.mongodb.client.model.geojson.PolygonCoordinates","2,00",12
"com.mongodb.client.model.geojson.Position","1,67",10
"com.mongodb.client.model.geojson.codecs.AbstractGeometryCodec","1,00",4
"com.mongodb.client.model.geojson.codecs.GeoJsonCodecProvider","10,00",10
"com.mongodb.client.model.geojson.codecs.GeometryCodec","1,00",1
"com.mongodb.client.model.geojson.codecs.GeometryCollectionCodec","1,00",1
"com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper","5,70",114
"com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper","2,31",30
"com.mongodb.client.model.geojson.codecs.LineStringCodec","1,00",1
"com.mongodb.client.model.geojson.codecs.MultiLineStringCodec","1,00",1
"com.mongodb.client.model.geojson.codecs.MultiPointCodec","1,00",1
"com.mongodb.client.model.geojson.codecs.MultiPolygonCodec","1,00",1
"com.mongodb.client.model.geojson.codecs.NamedCoordinateReferenceSystemCodec","1,33",4
"com.mongodb.client.model.geojson.codecs.PointCodec","1,00",1
"com.mongodb.client.model.geojson.codecs.PolygonCodec","1,00",1
"com.mongodb.client.result.DeleteResult","1,00",2
"com.mongodb.client.result.DeleteResult.AcknowledgedDeleteResult","1,50",9
"com.mongodb.client.result.DeleteResult.UnacknowledgedDeleteResult","1,40",7
"com.mongodb.client.result.UpdateResult","1,00",2
"com.mongodb.client.result.UpdateResult.AcknowledgedUpdateResult","2,11",19
"com.mongodb.client.result.UpdateResult.UnacknowledgedUpdateResult","1,22",11
"com.mongodb.connection.AbstractByteBufBsonDocument","1,27",38
"com.mongodb.connection.AbstractReferenceCounted","1,67",5
"com.mongodb.connection.AsynchronousSocketChannelStream","1,26",24
"com.mongodb.connection.AsynchronousSocketChannelStream.AsyncWritableByteChannelAdapter","1,00",1
"com.mongodb.connection.AsynchronousSocketChannelStream.AsyncWritableByteChannelAdapter.WriteCompletionHandler","1,00",3
"com.mongodb.connection.AsynchronousSocketChannelStream.BaseCompletionHandler","1,00",2
"com.mongodb.connection.AsynchronousSocketChannelStream.BasicCompletionHandler","2,00",6
"com.mongodb.connection.AsynchronousSocketChannelStream.OpenCompletionHandler","1,33",4
"com.mongodb.connection.AsynchronousSocketChannelStreamFactory","1,33",4
"com.mongodb.connection.AsynchronousSocketChannelStreamFactoryFactory","1,00",4
"com.mongodb.connection.AsynchronousSocketChannelStreamFactoryFactory.Builder","1,00",2
"com.mongodb.connection.Authenticator","1,00",2
"com.mongodb.connection.BaseCluster","2,26",61
"com.mongodb.connection.BaseCluster.ServerSelectionRequest","1,00",4
"com.mongodb.connection.BaseCluster.WaitQueueHandler","6,00",6
"com.mongodb.connection.BaseQueryMessage","1,40",21
"com.mongodb.connection.BsonWriterHelper","1,90",19
"com.mongodb.connection.BulkWriteBatchCombiner","1,74",33
"com.mongodb.connection.ByteBufBsonDocument","1,50",15
"com.mongodb.connection.ByteBufPayloadBsonDocument","2,00",18
"com.mongodb.connection.ByteBufferBsonOutput","2,00",28
"com.mongodb.connection.ByteBufferBsonOutput.BufferPositionPair","1,00",1
"com.mongodb.connection.ChangeEvent","2,00",12
"com.mongodb.connection.ClientMetadataHelper","3,00",36
"com.mongodb.connection.ClusterClock","2,00",6
"com.mongodb.connection.ClusterClockAdvancingSessionContext","1,00",9
"com.mongodb.connection.ClusterConnectionMode",n/a,0
"com.mongodb.connection.ClusterDescription","1,58",52
"com.mongodb.connection.ClusterId","1,75",14
"com.mongodb.connection.ClusterSettings","2,50",40
"com.mongodb.connection.ClusterSettings.Builder","1,54",20
"com.mongodb.connection.ClusterType",n/a,0
"com.mongodb.connection.CommandHelper","1,56",14
"com.mongodb.connection.CommandMessage","1,69",27
"com.mongodb.connection.CommandProtocolImpl","1,38",11
"com.mongodb.connection.CommandResultBaseCallback","2,00",4
"com.mongodb.connection.CommandResultCallback","2,50",5
"com.mongodb.connection.CompositeByteBuf","1,39",57
"com.mongodb.connection.CompositeByteBuf.Component","1,00",1
"com.mongodb.connection.CompressedHeader","1,33",8
"com.mongodb.connection.CompressedMessage","1,00",5
"com.mongodb.connection.Compressor","2,25",9
"com.mongodb.connection.Compressor.BufferExposingByteArrayOutputStream","1,00",2
"com.mongodb.connection.Compressor.ByteBufInputStream","1,67",5
"com.mongodb.connection.ConnectionDescription","1,56",25
"com.mongodb.connection.ConnectionId","1,89",17
"com.mongodb.connection.ConnectionPoolSettings","1,73",26
"com.mongodb.connection.ConnectionPoolSettings.Builder","1,46",19
"com.mongodb.connection.DefaultAuthenticator","1,25",5
"com.mongodb.connection.DefaultClusterFactory","1,43",10
"com.mongodb.connection.DefaultClusterableServerFactory","1,00",3
"com.mongodb.connection.DefaultConnectionFactory","1,00",2
"com.mongodb.connection.DefaultConnectionPool","2,03",59
"com.mongodb.connection.DefaultConnectionPool.PooledConnection","1,35",23
"com.mongodb.connection.DefaultConnectionPool.UsageTrackingInternalConnectionItemFactory","2,60",13
"com.mongodb.connection.DefaultServer","1,36",15
"com.mongodb.connection.DefaultServer.DefaultServerProtocolExecutor","1,33",8
"com.mongodb.connection.DefaultServer.DefaultServerStateListener","1,00",1
"com.mongodb.connection.DefaultServerConnection","1,06",34
"com.mongodb.connection.DefaultServerMonitor","6,40",32
"com.mongodb.connection.DefaultServerMonitor.ServerMonitorRunnable","2,67",16
"com.mongodb.connection.DefaultServerMonitorFactory","1,00",2
"com.mongodb.connection.DeleteMessage","1,50",3
"com.mongodb.connection.DeleteProtocol","1,57",11
"com.mongodb.connection.DescriptionHelper","2,06",35
"com.mongodb.connection.ElementExtendingBsonWriter","1,50",3
"com.mongodb.connection.ExponentiallyWeightedMovingAverage","1,50",6
"com.mongodb.connection.FutureAsyncCompletionHandler","1,50",9
"com.mongodb.connection.GSSAPIAuthenticator","1,80",9
"com.mongodb.connection.GetMoreMessage","1,00",4
"com.mongodb.connection.GetMoreProtocol","2,57",18
"com.mongodb.connection.GetMoreProtocol.GetMoreResultCallback","4,50",9
"com.mongodb.connection.InsertMessage","1,00",3
"com.mongodb.connection.InsertProtocol","1,43",10
"com.mongodb.connection.InternalStreamConnection","2,00",80
"com.mongodb.connection.InternalStreamConnection.CommandEventSender","2,67",16
"com.mongodb.connection.InternalStreamConnection.MessageHeaderCallback","2,00",4
"com.mongodb.connection.InternalStreamConnection.MessageHeaderCallback.MessageCallback","2,00",4
"com.mongodb.connection.InternalStreamConnectionFactory","3,67",11
"com.mongodb.connection.InternalStreamConnectionInitializer","1,69",27
"com.mongodb.connection.InternalStreamConnectionInitializer.CompoundAuthenticator","1,60",8
"com.mongodb.connection.KillCursorProtocol","2,75",22
"com.mongodb.connection.KillCursorsMessage","1,33",4
"com.mongodb.connection.LegacyMessage","1,00",3
"com.mongodb.connection.LevelCountingBsonWriter","1,00",50
"com.mongodb.connection.MessageHeader","1,20",6
"com.mongodb.connection.MessageSettings","1,00",6
"com.mongodb.connection.MessageSettings.Builder","1,00",5
"com.mongodb.connection.MultiServerCluster","3,45",76
"com.mongodb.connection.MultiServerCluster.DefaultServerStateListener","1,00",1
"com.mongodb.connection.MultiServerCluster.ServerTuple","1,00",1
"com.mongodb.connection.NativeAuthenticator","1,50",9
"com.mongodb.connection.OpCode","1,00",2
"com.mongodb.connection.PlainAuthenticator","1,75",7
"com.mongodb.connection.ProtocolHelper","1,80",45
"com.mongodb.connection.QueryMessage","1,50",3
"com.mongodb.connection.QueryProtocol","2,24",56
"com.mongodb.connection.QueryProtocol.QueryResultCallback","3,50",7
"com.mongodb.connection.QueryResult","1,17",7
"com.mongodb.connection.ReplyHeader","1,33",16
"com.mongodb.connection.ReplyMessage","1,75",7
"com.mongodb.connection.RequestMessage","1,05",20
"com.mongodb.connection.RequestMessage.EncodingMetadata","1,00",2
"com.mongodb.connection.ResponseBuffers","1,60",8
"com.mongodb.connection.ResponseCallback","1,50",6
"com.mongodb.connection.SaslAuthenticator","1,62",26
"com.mongodb.connection.SaslAuthenticator.Continuator","1,40",7
"com.mongodb.connection.ScramSha1Authenticator","1,00",4
"com.mongodb.connection.ScramSha1Authenticator.DefaultRandomStringGenerator","3,00",3
"com.mongodb.connection.ScramSha1Authenticator.ScramSha1SaslClient","1,33",28
"com.mongodb.connection.SendMessageCallback","1,67",5
"com.mongodb.connection.ServerConnectionState",n/a,0
"com.mongodb.connection.ServerDescription","2,44",100
"com.mongodb.connection.ServerDescription.Builder","1,17",27
"com.mongodb.connection.ServerId","1,67",10
"com.mongodb.connection.ServerSettings","1,60",16
"com.mongodb.connection.ServerSettings.Builder","1,12",9
"com.mongodb.connection.ServerType","1,00",8
"com.mongodb.connection.ServerVersion","1,62",13
"com.mongodb.connection.SingleServerCluster","1,83",11
"com.mongodb.connection.SingleServerCluster.DefaultServerStateListener","5,00",5
"com.mongodb.connection.SnappyCompressor","1,33",8
"com.mongodb.connection.SocketChannelStream","1,42",17
"com.mongodb.connection.SocketSettings","1,80",18
"com.mongodb.connection.SocketSettings.Builder","1,29",9
"com.mongodb.connection.SocketStream","1,33",16
"com.mongodb.connection.SocketStreamFactory","2,00",8
"com.mongodb.connection.SocketStreamHelper","3,50",7
"com.mongodb.connection.SplittablePayload","1,22",11
"com.mongodb.connection.SplittablePayload.Type",n/a,0
"com.mongodb.connection.SplittablePayloadBsonWriter","1,67",5
"com.mongodb.connection.SslSettings","2,12",17
"com.mongodb.connection.SslSettings.Builder","1,40",7
"com.mongodb.connection.Time","1,25",5
"com.mongodb.connection.UpdateMessage","3,00",6
"com.mongodb.connection.UpdateProtocol","1,71",12
"com.mongodb.connection.UsageTrackingInternalConnection","1,05",22
"com.mongodb.connection.WriteCommandResultHelper","1,89",17
"com.mongodb.connection.WriteProtocol","1,57",22
"com.mongodb.connection.WriteProtocol.UnacknowledgedWriteResultCallback","1,50",3
"com.mongodb.connection.X509Authenticator","1,57",11
"com.mongodb.connection.ZlibCompressor","1,00",5
"com.mongodb.connection.netty.NettyBufferProvider","1,00",3
"com.mongodb.connection.netty.NettyByteBuf","1,17",41
"com.mongodb.connection.netty.NettyStream","1,96",55
"com.mongodb.connection.netty.NettyStream.FutureAsyncCompletionHandler","1,75",7
"com.mongodb.connection.netty.NettyStream.InboundBufferHandler","1,50",3
"com.mongodb.connection.netty.NettyStream.PendingReader","1,00",1
"com.mongodb.connection.netty.NettyStreamFactory","1,00",5
"com.mongodb.connection.netty.NettyStreamFactoryFactory","1,17",7
"com.mongodb.connection.netty.NettyStreamFactoryFactory.Builder","1,00",5
"com.mongodb.connection.netty.ReadTimeoutHandler","1,67",5
"com.mongodb.connection.netty.ReadTimeoutHandler.ReadTimeoutTask","1,50",3
"com.mongodb.diagnostics.logging.JULLogger","1,00",20
"com.mongodb.diagnostics.logging.Loggers","1,67",5
"com.mongodb.diagnostics.logging.SLF4JLogger","1,00",17
"com.mongodb.event.ClusterClosedEvent","1,00",3
"com.mongodb.event.ClusterDescriptionChangedEvent","1,00",5
"com.mongodb.event.ClusterEventMulticaster","2,20",11
"com.mongodb.event.ClusterListenerAdapter","1,00",3
"com.mongodb.event.ClusterOpeningEvent","1,00",3
"com.mongodb.event.CommandEvent","1,00",4
"com.mongodb.event.CommandEventMulticaster","2,20",11
"com.mongodb.event.CommandFailedEvent","1,00",3
"com.mongodb.event.CommandListenerMulticaster","1,00",5
"com.mongodb.event.CommandStartedEvent","1,00",3
"com.mongodb.event.CommandSucceededEvent","1,00",3
"com.mongodb.event.ConnectionAddedEvent","1,00",3
"com.mongodb.event.ConnectionCheckedInEvent","1,00",3
"com.mongodb.event.ConnectionCheckedOutEvent","1,00",3
"com.mongodb.event.ConnectionClosedEvent","1,00",3
"com.mongodb.event.ConnectionMessageReceivedEvent","1,00",5
"com.mongodb.event.ConnectionMessagesSentEvent","1,00",5
"com.mongodb.event.ConnectionOpenedEvent","1,00",3
"com.mongodb.event.ConnectionPoolClosedEvent","1,00",3
"com.mongodb.event.ConnectionPoolEventMulticaster","1,80",18
"com.mongodb.event.ConnectionPoolListenerAdapter","1,00",8
"com.mongodb.event.ConnectionPoolOpenedEvent","1,00",4
"com.mongodb.event.ConnectionPoolWaitQueueEnteredEvent","1,00",3
"com.mongodb.event.ConnectionPoolWaitQueueExitedEvent","1,00",3
"com.mongodb.event.ConnectionRemovedEvent","1,00",3
"com.mongodb.event.ServerClosedEvent","1,00",3
"com.mongodb.event.ServerDescriptionChangedEvent","1,00",5
"com.mongodb.event.ServerEventMulticaster","2,20",11
"com.mongodb.event.ServerHeartbeatFailedEvent","1,00",5
"com.mongodb.event.ServerHeartbeatStartedEvent","1,00",3
"com.mongodb.event.ServerHeartbeatSucceededEvent","1,00",5
"com.mongodb.event.ServerListenerAdapter","1,00",3
"com.mongodb.event.ServerMonitorEventMulticaster","2,20",11
"com.mongodb.event.ServerMonitorListenerAdapter","1,00",3
"com.mongodb.event.ServerOpeningEvent","1,00",3
"com.mongodb.gridfs.CLI","5,00",20
"com.mongodb.gridfs.GridFS","1,34",39
"com.mongodb.gridfs.GridFSDBFile","1,67",10
"com.mongodb.gridfs.GridFSDBFile.GridFSInputStream","2,50",15
"com.mongodb.gridfs.GridFSFile","1,81",49
"com.mongodb.gridfs.GridFSInputFile","2,00",34
"com.mongodb.gridfs.GridFSInputFile.GridFSOutputStream","2,00",6
"com.mongodb.internal.HexUtils","2,00",6
"com.mongodb.internal.async.ErrorHandlingResultCallback","1,33",4
"com.mongodb.internal.authentication.NativeAuthenticationHelper","1,00",5
"com.mongodb.internal.connection.ConcurrentLinkedDeque","1,84",70
"com.mongodb.internal.connection.ConcurrentLinkedDeque.CLDIterator","1,75",7
"com.mongodb.internal.connection.ConcurrentLinkedDeque.Node","2,23",49
"com.mongodb.internal.connection.ConcurrentPool","1,94",33
"com.mongodb.internal.connection.ConcurrentPool.Prune",n/a,0
"com.mongodb.internal.connection.IndexMap","1,00",2
"com.mongodb.internal.connection.IndexMap.HashBased","1,67",5
"com.mongodb.internal.connection.IndexMap.RangeBased","2,00",8
"com.mongodb.internal.connection.Java8SniSslHelper","1,00",2
"com.mongodb.internal.connection.NoOpSessionContext","1,00",9
"com.mongodb.internal.connection.PowerOfTwoBufferPool","1,30",13
"com.mongodb.internal.connection.PowerOfTwoBufferPool.PooledByteBufNIO","1,50",3
"com.mongodb.internal.connection.SslHelper","1,33",4
"com.mongodb.internal.event.ClusterListenerMulticaster","2,50",10
"com.mongodb.internal.event.CommandListenerMulticaster","2,50",10
"com.mongodb.internal.event.ConnectionPoolListenerMulticaster","2,78",25
"com.mongodb.internal.event.EventListenerHelper","3,67",22
"com.mongodb.internal.event.ServerListenerMulticaster","2,50",10
"com.mongodb.internal.event.ServerMonitorListenerMulticaster","2,50",10
"com.mongodb.internal.management.jmx.JMXMBeanServer","1,50",3
"com.mongodb.internal.thread.DaemonThreadFactory","1,00",2
"com.mongodb.internal.validator.CollectibleDocumentFieldNameValidator","2,50",5
"com.mongodb.internal.validator.MappedFieldNameValidator","1,33",4
"com.mongodb.internal.validator.NoOpFieldNameValidator","1,00",2
"com.mongodb.internal.validator.UpdateFieldNameValidator","1,00",2
"com.mongodb.management.ConnectionPoolStatistics","1,00",14
"com.mongodb.management.JMXConnectionPoolListener","1,79",25
"com.mongodb.management.MBeanServerFactory","1,00",2
"com.mongodb.management.NullMBeanServer","1,00",2
"com.mongodb.operation.AggregateExplainOperation","1,50",18
"com.mongodb.operation.AggregateOperation","1,34",47
"com.mongodb.operation.AggregateToCollectionOperation","1,39",32
"com.mongodb.operation.AsyncChangeStreamBatchCursor","1,44",23
"com.mongodb.operation.AsyncQueryBatchCursor","1,91",44
"com.mongodb.operation.AsyncQueryBatchCursor.CommandResultSingleResultCallback","2,00",4
"com.mongodb.operation.AsyncQueryBatchCursor.QueryResultSingleResultCallback","1,50",3
"com.mongodb.operation.AsyncSingleBatchQueryCursor","1,29",9
"com.mongodb.operation.BaseWriteOperation","2,06",35
"com.mongodb.operation.BsonArrayWrapper","1,10",33
"com.mongodb.operation.BsonDocumentWrapperHelper","1,33",4
"com.mongodb.operation.BulkWriteBatch","2,08",50
"com.mongodb.operation.BulkWriteBatch.WriteRequestEncoder","4,33",13
"com.mongodb.operation.BulkWriteBatch.WriteRequestWithIndex","1,00",2
"com.mongodb.operation.ChangeStreamBatchCursor","1,19",19
"com.mongodb.operation.ChangeStreamOperation","1,11",21
"com.mongodb.operation.CommandOperationHelper","1,07",46
"com.mongodb.operation.CommandOperationHelper.CommandProtocolExecutingCallback","1,75",7
"com.mongodb.operation.CommandOperationHelper.IdentityTransformer","1,00",1
"com.mongodb.operation.CommandReadOperation","1,00",3
"com.mongodb.operation.CommandResultArrayCodec","2,00",6
"com.mongodb.operation.CommandResultCodecProvider","2,17",13
"com.mongodb.operation.CommandResultDocumentCodec","1,75",7
"com.mongodb.operation.CommandWriteOperation","1,00",3
"com.mongodb.operation.CountOperation","1,12",29
"com.mongodb.operation.CreateCollectionOperation","1,31",42
"com.mongodb.operation.CreateIndexesOperation","2,73",41
"com.mongodb.operation.CreateUserOperation","1,11",10
"com.mongodb.operation.CreateViewOperation","1,29",18
"com.mongodb.operation.CurrentOpOperation","1,50",3
"com.mongodb.operation.CursorHelper","2,00",6
"com.mongodb.operation.DeleteOperation","1,00",4
"com.mongodb.operation.DistinctOperation","1,14",24
"com.mongodb.operation.DocumentHelper","1,80",9
"com.mongodb.operation.DropCollectionOperation","1,22",11
"com.mongodb.operation.DropDatabaseOperation","1,12",9
"com.mongodb.operation.DropIndexOperation","1,18",13
"com.mongodb.operation.DropUserOperation","1,14",8
"com.mongodb.operation.ExplainHelper","2,33",7
"com.mongodb.operation.FindAndDeleteOperation","1,19",25
"com.mongodb.operation.FindAndModifyHelper","1,40",7
"com.mongodb.operation.FindAndReplaceOperation","1,17",34
"com.mongodb.operation.FindAndUpdateOperation","1,19",37
"com.mongodb.operation.FindOperation","1,73",137
"com.mongodb.operation.FindOperation.ExplainResultCallback","2,00",6
"com.mongodb.operation.FsyncUnlockOperation","1,40",7
"com.mongodb.operation.GroupOperation","1,27",33
"com.mongodb.operation.IndexHelper","3,00",6
"com.mongodb.operation.InsertOperation","1,00",4
"com.mongodb.operation.ListCollectionsOperation","1,67",40
"com.mongodb.operation.ListCollectionsOperation.ProjectingAsyncBatchCursor","1,22",11
"com.mongodb.operation.ListCollectionsOperation.ProjectingBatchCursor","1,00",10
"com.mongodb.operation.ListDatabasesOperation","1,15",15
"com.mongodb.operation.ListIndexesOperation","1,45",29
"com.mongodb.operation.MapReduceHelper","1,00",6
"com.mongodb.operation.MapReduceInlineResultsAsyncCursor","1,00",2
"com.mongodb.operation.MapReduceInlineResultsCursor","1,00",2
"com.mongodb.operation.MapReduceStatistics","1,00",5
"com.mongodb.operation.MapReduceToCollectionOperation","1,15",54
"com.mongodb.operation.MapReduceWithInlineResultsOperation","1,10",44
"com.mongodb.operation.MixedBulkWriteOperation","1,84",35
"com.mongodb.operation.OperationHelper","1,48",80
"com.mongodb.operation.OperationHelper.AsyncCallableWithConnectionAndSourceCallback","1,50",3
"com.mongodb.operation.OperationHelper.AsyncCallableWithConnectionCallback","1,50",3
"com.mongodb.operation.OperationHelper.ReferenceCountedReleasingWrappedCallback","1,50",3
"com.mongodb.operation.OrderBy","2,00",6
"com.mongodb.operation.ParallelCollectionScanOperation","1,21",23
"com.mongodb.operation.QueryBatchCursor","2,29",48
"com.mongodb.operation.QueryHelper","1,50",3
"com.mongodb.operation.ReadConcernHelper","2,00",8
"com.mongodb.operation.RenameCollectionOperation","1,10",11
"com.mongodb.operation.UpdateOperation","1,00",4
"com.mongodb.operation.UpdateUserOperation","1,11",10
"com.mongodb.operation.UserExistsOperation","1,12",9
"com.mongodb.operation.UserOperationHelper","1,67",15
"com.mongodb.operation.WriteConcernHelper","1,25",10
"com.mongodb.selector.CompositeServerSelector","3,00",9
"com.mongodb.selector.LatencyMinimizingServerSelector","2,17",13
"com.mongodb.selector.PrimaryServerSelector","1,00",2
"com.mongodb.selector.ReadPreferenceServerSelector","1,25",5
"com.mongodb.selector.ServerAddressSelector","1,25",5
"com.mongodb.selector.WritableServerSelector","1,00",2
"com.mongodb.util.AbstractObjectSerializer","1,00",1
"com.mongodb.util.ClassMapBasedObjectSerializer","3,50",7
"com.mongodb.util.JSON","2,80",14
"com.mongodb.util.JSONCallback","5,20",26
"com.mongodb.util.JSONParseException","1,33",4
"com.mongodb.util.JSONParser","4,32",82
"com.mongodb.util.JSONSerializers","1,00",4
"com.mongodb.util.JSONSerializers.BSONTimestampSerializer","1,00",2
"com.mongodb.util.JSONSerializers.BinarySerializer","1,00",2
"com.mongodb.util.JSONSerializers.BinarySerializerBase","1,00",2
"com.mongodb.util.JSONSerializers.ByteArraySerializer","1,00",2
"com.mongodb.util.JSONSerializers.CodeSerializer","1,00",2
"com.mongodb.util.JSONSerializers.CodeWScopeSerializer","1,00",2
"com.mongodb.util.JSONSerializers.CompoundObjectSerializer","1,00",1
"com.mongodb.util.JSONSerializers.DBObjectSerializer","2,00",4
"com.mongodb.util.JSONSerializers.DBRefBaseSerializer","1,50",3
"com.mongodb.util.JSONSerializers.DateSerializer","1,00",2
"com.mongodb.util.JSONSerializers.Decimal128Serializer","1,00",2
"com.mongodb.util.JSONSerializers.IterableSerializer","2,00",4
"com.mongodb.util.JSONSerializers.LegacyBSONTimestampSerializer","1,00",2
"com.mongodb.util.JSONSerializers.LegacyBinarySerializer","1,00",1
"com.mongodb.util.JSONSerializers.LegacyDateSerializer","1,00",2
"com.mongodb.util.JSONSerializers.MapSerializer","2,00",4
"com.mongodb.util.JSONSerializers.MaxKeySerializer","1,00",2
"com.mongodb.util.JSONSerializers.MinKeySerializer","1,00",2
"com.mongodb.util.JSONSerializers.ObjectArraySerializer","2,00",4
"com.mongodb.util.JSONSerializers.ObjectIdSerializer","1,00",2
"com.mongodb.util.JSONSerializers.PatternSerializer","1,50",3
"com.mongodb.util.JSONSerializers.StringSerializer","1,00",1
"com.mongodb.util.JSONSerializers.SymbolSerializer","1,00",2
"com.mongodb.util.JSONSerializers.ToStringSerializer","1,00",1
"com.mongodb.util.JSONSerializers.UndefinedSerializer","1,00",2
"com.mongodb.util.JSONSerializers.UuidSerializer","1,00",2
"com.mongodb.util.Util","1,00",3
"org.bson.AbstractBsonReader","1,41",93
"org.bson.AbstractBsonReader.Context","1,00",3
"org.bson.AbstractBsonReader.Mark","1,00",4
"org.bson.AbstractBsonReader.State",n/a,0
"org.bson.AbstractBsonWriter","2,01",139
"org.bson.AbstractBsonWriter.Context","1,00",5
"org.bson.AbstractBsonWriter.Mark","1,00",2
"org.bson.AbstractBsonWriter.State",n/a,0
"org.bson.BSON","1,86",39
"org.bson.BSONCallbackAdapter","1,19",32
"org.bson.BSONCallbackAdapter.Context","1,00",2
"org.bson.BSONException","1,00",6
"org.bson.BasicBSONCallback","1,18",46
"org.bson.BasicBSONDecoder","1,00",5
"org.bson.BasicBSONEncoder","2,67",88
"org.bson.BasicBSONObject","1,71",60
"org.bson.BsonArray","1,28",41
"org.bson.BsonBinary","1,70",17
"org.bson.BsonBinaryReader","2,19",81
"org.bson.BsonBinaryReader.Context","1,33",4
"org.bson.BsonBinaryReader.Mark","1,00",2
"org.bson.BsonBinarySubType","1,00",3
"org.bson.BsonBinaryWriter","1,32",53
"org.bson.BsonBinaryWriter.Context","1,00",4
"org.bson.BsonBinaryWriter.Mark","1,00",2
"org.bson.BsonBinaryWriterSettings","1,00",3
"org.bson.BsonBoolean","1,62",13
"org.bson.BsonContextType",n/a,0
"org.bson.BsonDateTime","1,43",10
"org.bson.BsonDbPointer","1,86",13
"org.bson.BsonDecimal128","1,30",13
"org.bson.BsonDocument","1,59",113
"org.bson.BsonDocument.SerializationProxy","1,50",3
"org.bson.BsonDocumentReader","1,39",46
"org.bson.BsonDocumentReader.BsonDocumentMarkableIterator","1,50",9
"org.bson.BsonDocumentReader.Context","2,00",12
"org.bson.BsonDocumentReader.Mark","1,00",2
"org.bson.BsonDocumentWrapper","1,21",29
"org.bson.BsonDocumentWriter","1,21",34
"org.bson.BsonDocumentWriter.Context","1,33",4
"org.bson.BsonDouble","1,55",17
"org.bson.BsonElement","2,60",13
"org.bson.BsonInt32","1,45",16
"org.bson.BsonInt64","1,45",16
"org.bson.BsonInvalidOperationException","1,00",2
"org.bson.BsonJavaScript","1,50",9
"org.bson.BsonJavaScriptWithScope","1,75",14
"org.bson.BsonMaxKey","1,00",4
"org.bson.BsonMinKey","1,00",4
"org.bson.BsonNull","1,50",6
"org.bson.BsonNumber",n/a,0
"org.bson.BsonObjectId","1,50",12
"org.bson.BsonRegularExpression","1,56",14
"org.bson.BsonSerializationException","1,00",1
"org.bson.BsonString","1,57",11
"org.bson.BsonSymbol","1,67",10
"org.bson.BsonTimestamp","1,27",14
"org.bson.BsonType","1,25",5
"org.bson.BsonUndefined","1,67",5
"org.bson.BsonValue","1,05",41
"org.bson.BsonWriterSettings","1,00",3
"org.bson.ByteBufNIO","1,12",37
"org.bson.Document","1,11",41
"org.bson.EmptyBSONCallback","1,00",30
"org.bson.LazyBSONCallback","1,00",8
"org.bson.LazyBSONDecoder","1,00",4
"org.bson.LazyBSONList","1,21",29
"org.bson.LazyBSONList.LazyBSONListIterator","1,50",6
"org.bson.LazyBSONObject","2,05",80
"org.bson.NoOpFieldNameValidator","1,00",2
"org.bson.RawBsonDocument","1,30",39
"org.bson.RawBsonDocument.SerializationProxy","1,50",3
"org.bson.StringUtils","2,00",4
"org.bson.UuidRepresentation",n/a,0
"org.bson.assertions.Assertions","1,80",9
"org.bson.codecs.AtomicBooleanCodec","1,00",3
"org.bson.codecs.AtomicIntegerCodec","1,00",3
"org.bson.codecs.AtomicLongCodec","1,00",3
"org.bson.codecs.BigDecimalCodec","1,00",3
"org.bson.codecs.BinaryCodec","1,00",3
"org.bson.codecs.BooleanCodec","1,00",3
"org.bson.codecs.BsonArrayCodec","1,33",8
"org.bson.codecs.BsonBinaryCodec","1,00",3
"org.bson.codecs.BsonBooleanCodec","1,00",3
"org.bson.codecs.BsonDBPointerCodec","1,00",3
"org.bson.codecs.BsonDateTimeCodec","1,00",3
"org.bson.codecs.BsonDecimal128Codec","1,00",3
"org.bson.codecs.BsonDocumentCodec","1,46",19
"org.bson.codecs.BsonDocumentWrapperCodec","1,25",5
"org.bson.codecs.BsonDoubleCodec","1,00",3
"org.bson.codecs.BsonInt32Codec","1,00",3
"org.bson.codecs.BsonInt64Codec","1,00",3
"org.bson.codecs.BsonJavaScriptCodec","1,00",3
"org.bson.codecs.BsonJavaScriptWithScopeCodec","1,00",4
"org.bson.codecs.BsonMaxKeyCodec","1,00",3
"org.bson.codecs.BsonMinKeyCodec","1,00",3
"org.bson.codecs.BsonNullCodec","1,00",3
"org.bson.codecs.BsonObjectIdCodec","1,00",3
"org.bson.codecs.BsonRegularExpressionCodec","1,00",3
"org.bson.codecs.BsonStringCodec","1,00",3
"org.bson.codecs.BsonSymbolCodec","1,00",3
"org.bson.codecs.BsonTimestampCodec","1,00",3
"org.bson.codecs.BsonTypeClassMap","1,43",10
"org.bson.codecs.BsonTypeCodecMap","3,00",6
"org.bson.codecs.BsonUndefinedCodec","1,00",3
"org.bson.codecs.BsonValueCodec","1,00",5
"org.bson.codecs.BsonValueCodecProvider","2,17",13
"org.bson.codecs.ByteArrayCodec","1,00",3
"org.bson.codecs.ByteCodec","1,33",4
"org.bson.codecs.CharacterCodec","1,33",4
"org.bson.codecs.CodeCodec","1,00",3
"org.bson.codecs.CodeWithScopeCodec","1,00",4
"org.bson.codecs.DateCodec","1,00",3
"org.bson.codecs.Decimal128Codec","1,00",3
"org.bson.codecs.DecoderContext","1,00",4
"org.bson.codecs.DecoderContext.Builder","1,00",4
"org.bson.codecs.DocumentCodec","1,89",34
"org.bson.codecs.DocumentCodecProvider","2,14",15
"org.bson.codecs.DoubleCodec","1,00",3
"org.bson.codecs.EncoderContext","1,00",5
"org.bson.codecs.EncoderContext.Builder","1,00",3
"org.bson.codecs.FloatCodec","1,33",4
"org.bson.codecs.IntegerCodec","1,00",3
"org.bson.codecs.IterableCodec","1,75",14
"org.bson.codecs.IterableCodecProvider","2,00",14
"org.bson.codecs.LongCodec","1,00",3
"org.bson.codecs.MapCodec","1,70",17
"org.bson.codecs.MapCodecProvider","2,00",14
"org.bson.codecs.MaxKeyCodec","1,00",3
"org.bson.codecs.MinKeyCodec","1,00",3
"org.bson.codecs.NumberCodecHelper","4,20",21
"org.bson.codecs.ObjectIdCodec","1,00",3
"org.bson.codecs.ObjectIdGenerator","1,00",1
"org.bson.codecs.PatternCodec","2,40",12
"org.bson.codecs.PatternCodec.RegexFlag","1,50",3
"org.bson.codecs.RawBsonDocumentCodec","1,00",4
"org.bson.codecs.ShortCodec","1,33",4
"org.bson.codecs.StringCodec","1,33",4
"org.bson.codecs.SymbolCodec","1,00",3
"org.bson.codecs.UuidCodec","2,71",19
"org.bson.codecs.UuidCodecHelper","1,50",3
"org.bson.codecs.UuidCodecProvider","1,50",3
"org.bson.codecs.ValueCodecProvider","1,33",8
"org.bson.codecs.configuration.ChildCodecRegistry","2,43",17
"org.bson.codecs.configuration.CodecCache","1,67",5
"org.bson.codecs.configuration.CodecConfigurationException","1,00",2
"org.bson.codecs.configuration.CodecRegistries","1,22",11
"org.bson.codecs.configuration.LazyCodec","1,20",6
"org.bson.codecs.configuration.MapOfCodecsProvider","1,50",3
"org.bson.codecs.configuration.Optional","1,17",7
"org.bson.codecs.configuration.Optional.Some","1,00",4
"org.bson.codecs.configuration.ProvidersCodecRegistry","2,67",16
"org.bson.codecs.pojo.AutomaticPojoCodec","1,00",5
"org.bson.codecs.pojo.ClassModel","2,12",36
"org.bson.codecs.pojo.ClassModelBuilder","1,44",39
"org.bson.codecs.pojo.CollectionCodec","1,40",7
"org.bson.codecs.pojo.ConventionAnnotationImpl","6,33",38
"org.bson.codecs.pojo.ConventionDefaultsImpl","6,00",6
"org.bson.codecs.pojo.Conventions","1,00",1
"org.bson.codecs.pojo.CreatorExecutable","1,91",21
"org.bson.codecs.pojo.DiscriminatorLookup","2,60",13
"org.bson.codecs.pojo.EnumCodec","1,00",4
"org.bson.codecs.pojo.InstanceCreatorFactoryImpl","1,00",2
"org.bson.codecs.pojo.InstanceCreatorImpl","2,80",14
"org.bson.codecs.pojo.InvalidMapImplementation","1,00",12
"org.bson.codecs.pojo.LazyPojoCodec","1,17",7
"org.bson.codecs.pojo.MapCodec","1,40",7
"org.bson.codecs.pojo.PojoBuilderHelper","3,73",56
"org.bson.codecs.pojo.PojoCodec",n/a,0
"org.bson.codecs.pojo.PojoCodecImpl","3,33",70
"org.bson.codecs.pojo.PojoCodecProvider","2,00",10
"org.bson.codecs.pojo.PojoCodecProvider.Builder","1,57",11
"org.bson.codecs.pojo.PropertyAccessorImpl","1,80",9
"org.bson.codecs.pojo.PropertyMetadata","1,24",26
"org.bson.codecs.pojo.PropertyModel","2,61",47
"org.bson.codecs.pojo.PropertyModelBuilder","1,04",26
"org.bson.codecs.pojo.PropertyModelSerializationImpl","1,00",2
"org.bson.codecs.pojo.TypeData","2,09",23
"org.bson.codecs.pojo.TypeData.Builder","4,00",20
"org.bson.codecs.pojo.TypeParameterMap","1,43",10
"org.bson.codecs.pojo.TypeParameterMap.Builder","1,25",5
"org.bson.diagnostics.JULLogger","1,00",20
"org.bson.diagnostics.Loggers","1,67",5
"org.bson.diagnostics.SLF4JLogger","1,00",17
"org.bson.internal.Base64","4,25",17
"org.bson.internal.UnsignedLongs","3,38",27
"org.bson.io.BasicOutputBuffer","1,40",21
"org.bson.io.Bits","1,25",15
"org.bson.io.ByteBufferBsonInput","1,52",32
"org.bson.io.OutputBuffer","1,28",23
"org.bson.json.DateTimeFormatter","1,00",4
"org.bson.json.DateTimeFormatter.Java8DateTimeFormatter","1,00",3
"org.bson.json.DateTimeFormatter.JaxbDateTimeFormatter","1,00",2
"org.bson.json.ExtendedJsonBinaryConverter","1,00",1
"org.bson.json.ExtendedJsonDateTimeConverter","1,00",1
"org.bson.json.ExtendedJsonDecimal128Converter","1,00",1
"org.bson.json.ExtendedJsonDoubleConverter","1,00",1
"org.bson.json.ExtendedJsonInt32Converter","1,00",1
"org.bson.json.ExtendedJsonInt64Converter","1,00",1
"org.bson.json.ExtendedJsonMaxKeyConverter","1,00",1
"org.bson.json.ExtendedJsonMinKeyConverter","1,00",1
"org.bson.json.ExtendedJsonObjectIdConverter","1,00",1
"org.bson.json.ExtendedJsonRegularExpressionConverter","1,00",1
"org.bson.json.ExtendedJsonTimestampConverter","1,00",2
"org.bson.json.ExtendedJsonUndefinedConverter","1,00",1
"org.bson.json.JsonBooleanConverter","1,00",1
"org.bson.json.JsonBuffer","1,43",10
"org.bson.json.JsonDoubleConverter","1,00",1
"org.bson.json.JsonInt32Converter","1,00",1
"org.bson.json.JsonJavaScriptConverter","1,00",1
"org.bson.json.JsonMode",n/a,0
"org.bson.json.JsonNullConverter","1,00",1
"org.bson.json.JsonParseException","1,00",4
"org.bson.json.JsonReader","3,38",257
"org.bson.json.JsonReader.Context","1,00",3
"org.bson.json.JsonReader.Mark","1,00",2
"org.bson.json.JsonScanner","12,67",114
"org.bson.json.JsonScanner.NumberState",n/a,0
"org.bson.json.JsonScanner.RegularExpressionState",n/a,0
"org.bson.json.JsonStringConverter","1,00",1
"org.bson.json.JsonSymbolConverter","1,00",1
"org.bson.json.JsonToken","4,00",16
"org.bson.json.JsonTokenType",n/a,0
"org.bson.json.JsonWriter","1,10",34
"org.bson.json.JsonWriter.Context","1,00",3
"org.bson.json.JsonWriterSettings","2,24",65
"org.bson.json.JsonWriterSettings.Builder","1,00",23
"org.bson.json.LegacyExtendedJsonBinaryConverter","1,00",1
"org.bson.json.LegacyExtendedJsonDateTimeConverter","1,00",1
"org.bson.json.LegacyExtendedJsonRegularExpressionConverter","1,00",1
"org.bson.json.RelaxedExtendedJsonDateTimeConverter","2,00",2
"org.bson.json.RelaxedExtendedJsonDoubleConverter","2,00",2
"org.bson.json.RelaxedExtendedJsonInt64Converter","1,00",1
"org.bson.json.ShellBinaryConverter","1,00",1
"org.bson.json.ShellDateTimeConverter","2,00",2
"org.bson.json.ShellDecimal128Converter","1,00",1
"org.bson.json.ShellInt64Converter","2,00",2
"org.bson.json.ShellMaxKeyConverter","1,00",1
"org.bson.json.ShellMinKeyConverter","1,00",1
"org.bson.json.ShellObjectIdConverter","1,00",1
"org.bson.json.ShellRegularExpressionConverter","2,00",2
"org.bson.json.ShellTimestampConverter","1,00",1
"org.bson.json.ShellUndefinedConverter","1,00",1
"org.bson.json.StrictCharacterStreamJsonWriter","1,86",52
"org.bson.json.StrictCharacterStreamJsonWriter.JsonContextType",n/a,0
"org.bson.json.StrictCharacterStreamJsonWriter.State",n/a,0
"org.bson.json.StrictCharacterStreamJsonWriter.StrictJsonContext","2,00",2
"org.bson.json.StrictCharacterStreamJsonWriterSettings","1,20",6
"org.bson.json.StrictCharacterStreamJsonWriterSettings.Builder","1,00",5
"org.bson.types.BSONTimestamp","1,50",12
"org.bson.types.BasicBSONList","1,83",22
"org.bson.types.Binary","1,50",12
"org.bson.types.Code","1,60",8
"org.bson.types.CodeWScope","1,50",6
"org.bson.types.CodeWithScope","2,25",9
"org.bson.types.Decimal128","2,78",64
"org.bson.types.MaxKey","1,00",3
"org.bson.types.MinKey","1,00",3
"org.bson.types.ObjectId","1,56",67
"org.bson.types.StringRangeSet","1,56",28
"org.bson.types.Symbol","1,60",8
"org.bson.util.AbstractCopyOnWriteMap","1,25",30
"org.bson.util.AbstractCopyOnWriteMap.CollectionView","1,00",12
"org.bson.util.AbstractCopyOnWriteMap.EntrySet","1,20",6
"org.bson.util.AbstractCopyOnWriteMap.Immutable","1,00",3
"org.bson.util.AbstractCopyOnWriteMap.KeySet","1,00",5
"org.bson.util.AbstractCopyOnWriteMap.Mutable","1,00",3
"org.bson.util.AbstractCopyOnWriteMap.UnmodifiableIterator","1,00",4
"org.bson.util.AbstractCopyOnWriteMap.Values","1,20",6
"org.bson.util.AbstractCopyOnWriteMap.View","1,00",1
"org.bson.util.AbstractCopyOnWriteMap.View.Type","1,00",2
"org.bson.util.ClassAncestry","2,25",9
"org.bson.util.ClassMap","1,00",7
"org.bson.util.ClassMap.ComputeFunction","3,00",3
"org.bson.util.ComputingMap","1,14",24
"org.bson.util.CopyOnWriteMap","1,00",9
"org.bson.util.CopyOnWriteMap.Builder","1,00",6
"org.bson.util.CopyOnWriteMap.Hash","1,00",2
"org.bson.util.CopyOnWriteMap.Linked","1,00",2

Package,v(G)avg,v(G)tot
"","1,17",21
"com.mongodb","1,69",2.896
"com.mongodb.assertions","1,83",11
"com.mongodb.async.client","1,41",512
"com.mongodb.async.client.gridfs","1,96",192
"com.mongodb.async.client.gridfs.helpers","2,08",27
"com.mongodb.binding","1,11",72
"com.mongodb.bulk","1,51",128
"com.mongodb.client","1,15",15
"com.mongodb.client.gridfs","1,67",157
"com.mongodb.client.gridfs.codecs","1,83",11
"com.mongodb.client.gridfs.model","1,89",51
"com.mongodb.client.jndi","11,00",11
"com.mongodb.client.model","1,20",814
"com.mongodb.client.model.changestream","1,83",55
"com.mongodb.client.model.geojson","1,80",148
"com.mongodb.client.model.geojson.codecs","3,53",173
"com.mongodb.client.result","1,64",54
"com.mongodb.connection","1,89",2.217
"com.mongodb.connection.netty","1,50",132
"com.mongodb.diagnostics.logging","1,10",44
"com.mongodb.event","1,31",185
"com.mongodb.gridfs","1,99",183
"com.mongodb.internal","2,33",7
"com.mongodb.internal.async","1,67",5
"com.mongodb.internal.authentication","1,20",6
"com.mongodb.internal.connection","1,96",222
"com.mongodb.internal.event","3,45",107
"com.mongodb.internal.management.jmx","2,50",5
"com.mongodb.internal.thread","1,00",2
"com.mongodb.internal.validator","1,56",14
"com.mongodb.management","1,38",44
"com.mongodb.operation","1,60",1.413
"com.mongodb.selector","1,71",36
"com.mongodb.util","2,38",214
"org.bson","1,56",1.587
"org.bson.assertions","1,80",9
"org.bson.codecs","1,51",414
"org.bson.codecs.configuration","1,72",74
"org.bson.codecs.pojo","2,29",590
"org.bson.diagnostics","1,10",44
"org.bson.internal","3,58",43
"org.bson.io","1,41",93
"org.bson.json","2,69",733
"org.bson.types","1,96",261
"org.bson.util","1,18",137

Module,v(G)avg,v(G)tot
"bson_main","1,83",3.325
"driver-async_main","1,55",731
"driver-core_main","1,72",6.656
"driver_main","1,59",3.436
"util_main","1,17",21

Project,v(G)avg,v(G)tot
"project","1,70",14.169

