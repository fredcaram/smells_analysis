Complexity metrics,Qua, 13 dez 2017 11:02:27 BRST
Method,ev(G),iv(G),v(G)
"org.argouml.application.Main.addPostLoadAction(Runnable)",1,1,1
"org.argouml.application.Main.main(String[])",3,23,24
"org.argouml.application.PostLoad.PostLoad(Vector)",1,1,1
"org.argouml.application.PostLoad.run()",1,4,4
"org.argouml.application.PostLoad.setThread(Thread)",1,1,1
"org.argouml.application.PreloadClasses.run()",1,1,1
"org.argouml.application.StartCritics.run()",1,2,2
"org.argouml.application.api.Argo.Argo()",1,1,1
"org.argouml.application.api.Argo.getArgoHome()",1,1,1
"org.argouml.application.api.Argo.getArgoRoot()",1,1,1
"org.argouml.application.api.Argo.getDirectory()",1,1,1
"org.argouml.application.api.Argo.getPlugins(Class)",1,1,1
"org.argouml.application.api.Argo.getPlugins(Class,Object[])",1,1,1
"org.argouml.application.api.Argo.initializeModules()",1,1,1
"org.argouml.application.api.Argo.localize(String,String)",1,1,1
"org.argouml.application.api.Argo.lookupIconResource(String)",1,1,1
"org.argouml.application.api.Argo.lookupIconResource(String,String)",1,1,1
"org.argouml.application.api.Argo.setDirectory(String)",1,1,1
"org.argouml.application.api.Configuration.Configuration()",1,1,1
"org.argouml.application.api.Configuration.addListener(ConfigurationKey,PropertyChangeListener)",1,1,1
"org.argouml.application.api.Configuration.addListener(PropertyChangeListener)",1,1,1
"org.argouml.application.api.Configuration.getBoolean(ConfigurationKey)",1,1,1
"org.argouml.application.api.Configuration.getBoolean(ConfigurationKey,boolean)",1,1,1
"org.argouml.application.api.Configuration.getConfigurationHandler()",1,1,1
"org.argouml.application.api.Configuration.getDouble(ConfigurationKey)",1,1,1
"org.argouml.application.api.Configuration.getDouble(ConfigurationKey,double)",1,1,1
"org.argouml.application.api.Configuration.getFactory()",1,1,1
"org.argouml.application.api.Configuration.getInteger(ConfigurationKey)",1,1,1
"org.argouml.application.api.Configuration.getInteger(ConfigurationKey,int)",1,1,1
"org.argouml.application.api.Configuration.getString(ConfigurationKey)",1,1,1
"org.argouml.application.api.Configuration.getString(ConfigurationKey,String)",1,1,1
"org.argouml.application.api.Configuration.load()",1,1,1
"org.argouml.application.api.Configuration.load(File)",1,1,1
"org.argouml.application.api.Configuration.load(URL)",1,1,1
"org.argouml.application.api.Configuration.makeKey(ConfigurationKey,String)",1,1,1
"org.argouml.application.api.Configuration.makeKey(String)",1,1,1
"org.argouml.application.api.Configuration.makeKey(String,String)",1,1,1
"org.argouml.application.api.Configuration.makeKey(String,String,String)",1,1,1
"org.argouml.application.api.Configuration.makeKey(String,String,String,String)",1,1,1
"org.argouml.application.api.Configuration.makeKey(String,String,String,String,String)",1,1,1
"org.argouml.application.api.Configuration.removeListener(ConfigurationKey,PropertyChangeListener)",1,1,1
"org.argouml.application.api.Configuration.removeListener(PropertyChangeListener)",1,1,1
"org.argouml.application.api.Configuration.save()",1,1,1
"org.argouml.application.api.Configuration.save(boolean)",1,1,1
"org.argouml.application.api.Configuration.setBoolean(ConfigurationKey,boolean)",1,1,1
"org.argouml.application.api.Configuration.setDouble(ConfigurationKey,double)",1,1,1
"org.argouml.application.api.Configuration.setInteger(ConfigurationKey,int)",1,1,1
"org.argouml.application.api.Configuration.setString(ConfigurationKey,String)",1,1,1
"org.argouml.application.api.Notation.Notation()",1,1,1
"org.argouml.application.api.Notation.finalize()",1,1,1
"org.argouml.application.api.Notation.findNotation(String)",1,1,1
"org.argouml.application.api.Notation.generate(NotationContext,Object)",22,20,22
"org.argouml.application.api.Notation.generate(NotationContext,Object,boolean)",4,3,4
"org.argouml.application.api.Notation.generateAction(NotationContext,MAction)",1,1,1
"org.argouml.application.api.Notation.generateAction(NotationName,MAction)",1,1,1
"org.argouml.application.api.Notation.generateAssociation(NotationContext,MAssociation)",1,1,1
"org.argouml.application.api.Notation.generateAssociation(NotationName,MAssociation)",1,1,1
"org.argouml.application.api.Notation.generateAssociationEnd(NotationContext,MAssociationEnd)",1,1,1
"org.argouml.application.api.Notation.generateAssociationEnd(NotationName,MAssociationEnd)",1,1,1
"org.argouml.application.api.Notation.generateAttribute(NotationContext,MAttribute)",1,1,1
"org.argouml.application.api.Notation.generateAttribute(NotationContext,MAttribute,boolean)",1,1,1
"org.argouml.application.api.Notation.generateAttribute(NotationName,MAttribute,boolean)",1,1,1
"org.argouml.application.api.Notation.generateClassifier(NotationContext,MClassifier)",1,1,1
"org.argouml.application.api.Notation.generateClassifier(NotationName,MClassifier)",1,1,1
"org.argouml.application.api.Notation.generateClassifierRef(NotationContext,MClassifier)",1,1,1
"org.argouml.application.api.Notation.generateClassifierRef(NotationName,MClassifier)",1,1,1
"org.argouml.application.api.Notation.generateExpression(NotationName,MExpression)",1,1,1
"org.argouml.application.api.Notation.generateGuard(NotationContext,MGuard)",1,1,1
"org.argouml.application.api.Notation.generateGuard(NotationName,MGuard)",1,1,1
"org.argouml.application.api.Notation.generateMessage(NotationContext,MMessage)",1,1,1
"org.argouml.application.api.Notation.generateMessage(NotationName,MMessage)",1,1,1
"org.argouml.application.api.Notation.generateMultiplicity(NotationContext,MMultiplicity)",1,1,1
"org.argouml.application.api.Notation.generateMultiplicity(NotationName,MMultiplicity)",1,1,1
"org.argouml.application.api.Notation.generateName(NotationName,String)",1,1,1
"org.argouml.application.api.Notation.generateOperation(NotationContext,MOperation)",1,1,1
"org.argouml.application.api.Notation.generateOperation(NotationContext,MOperation,boolean)",1,1,1
"org.argouml.application.api.Notation.generateOperation(NotationName,MOperation,boolean)",1,1,1
"org.argouml.application.api.Notation.generatePackage(NotationContext,MPackage)",1,1,1
"org.argouml.application.api.Notation.generatePackage(NotationName,MPackage)",1,1,1
"org.argouml.application.api.Notation.generateParameter(NotationContext,MParameter)",1,1,1
"org.argouml.application.api.Notation.generateParameter(NotationName,MParameter)",1,1,1
"org.argouml.application.api.Notation.generateState(NotationContext,MState)",1,1,1
"org.argouml.application.api.Notation.generateState(NotationName,MState)",1,1,1
"org.argouml.application.api.Notation.generateStateBody(NotationContext,MState)",1,1,1
"org.argouml.application.api.Notation.generateStateBody(NotationName,MState)",1,1,1
"org.argouml.application.api.Notation.generateStereotype(NotationContext,MStereotype)",1,1,1
"org.argouml.application.api.Notation.generateStereotype(NotationName,MStereotype)",1,1,1
"org.argouml.application.api.Notation.generateTaggedValue(NotationContext,MTaggedValue)",1,1,1
"org.argouml.application.api.Notation.generateTaggedValue(NotationName,MTaggedValue)",1,1,1
"org.argouml.application.api.Notation.generateTransition(NotationContext,MTransition)",1,1,1
"org.argouml.application.api.Notation.generateTransition(NotationName,MTransition)",1,1,1
"org.argouml.application.api.Notation.getAvailableNotations()",1,1,1
"org.argouml.application.api.Notation.getDefaultNotation()",1,1,1
"org.argouml.application.api.Notation.getDefaultProvider()",1,1,1
"org.argouml.application.api.Notation.getInstance()",1,1,1
"org.argouml.application.api.Notation.getNotation(NotationContext)",2,1,2
"org.argouml.application.api.Notation.getProvider(NotationName)",1,1,1
"org.argouml.application.api.Notation.getUseGuillemots()",1,1,1
"org.argouml.application.api.Notation.makeNotation(String)",1,1,1
"org.argouml.application.api.Notation.makeNotation(String,Icon)",1,1,1
"org.argouml.application.api.Notation.makeNotation(String,String)",1,1,1
"org.argouml.application.api.Notation.makeNotation(String,String,Icon)",1,1,1
"org.argouml.application.api.Notation.propertyChange(PropertyChangeEvent)",1,1,1
"org.argouml.application.api.Notation.setDefaultNotation(NotationName)",1,1,1
"org.argouml.application.api.Notation.setUseGuillemots(boolean)",1,1,1
"org.argouml.application.configuration.ConfigurationFactory.ConfigurationFactory()",1,1,1
"org.argouml.application.configuration.ConfigurationFactory.getConfigurationHandler()",1,1,1
"org.argouml.application.configuration.ConfigurationFactory.getInstance()",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.ConfigurationHandler()",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.ConfigurationHandler(boolean)",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.addListener(ConfigurationKey,PropertyChangeListener)",1,1,2
"org.argouml.application.configuration.ConfigurationHandler.addListener(PropertyChangeListener)",1,1,2
"org.argouml.application.configuration.ConfigurationHandler.getBoolean(ConfigurationKey,boolean)",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.getDouble(ConfigurationKey,double)",1,1,2
"org.argouml.application.configuration.ConfigurationHandler.getInteger(ConfigurationKey,int)",1,1,2
"org.argouml.application.configuration.ConfigurationHandler.getString(ConfigurationKey,String)",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.hasKey(ConfigurationKey)",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.isChangeable()",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.isChanged()",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.isLoaded()",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.load(File)",2,3,4
"org.argouml.application.configuration.ConfigurationHandler.load(URL)",2,3,4
"org.argouml.application.configuration.ConfigurationHandler.loadDefault()",2,2,4
"org.argouml.application.configuration.ConfigurationHandler.loadIfNecessary()",1,2,2
"org.argouml.application.configuration.ConfigurationHandler.loadUnspecified()",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.removeListener(ConfigurationKey,PropertyChangeListener)",1,2,2
"org.argouml.application.configuration.ConfigurationHandler.removeListener(PropertyChangeListener)",1,2,2
"org.argouml.application.configuration.ConfigurationHandler.save(File)",2,3,4
"org.argouml.application.configuration.ConfigurationHandler.save(URL)",2,3,4
"org.argouml.application.configuration.ConfigurationHandler.saveDefault()",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.saveDefault(boolean)",5,4,6
"org.argouml.application.configuration.ConfigurationHandler.saveUnspecified()",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.setBoolean(ConfigurationKey,boolean)",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.setDouble(ConfigurationKey,double)",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.setInteger(ConfigurationKey,int)",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.setString(ConfigurationKey,String)",1,1,1
"org.argouml.application.configuration.ConfigurationHandler.workerSetValue(ConfigurationKey,String)",1,2,2
"org.argouml.application.configuration.ConfigurationKeyImpl.ConfigurationKeyImpl(ConfigurationKey,String)",1,1,1
"org.argouml.application.configuration.ConfigurationKeyImpl.ConfigurationKeyImpl(String)",1,1,1
"org.argouml.application.configuration.ConfigurationKeyImpl.ConfigurationKeyImpl(String,String)",1,1,1
"org.argouml.application.configuration.ConfigurationKeyImpl.ConfigurationKeyImpl(String,String,String)",1,1,1
"org.argouml.application.configuration.ConfigurationKeyImpl.ConfigurationKeyImpl(String,String,String,String)",1,1,1
"org.argouml.application.configuration.ConfigurationKeyImpl.ConfigurationKeyImpl(String,String,String,String,String)",1,1,1
"org.argouml.application.configuration.ConfigurationKeyImpl.getKey()",1,1,1
"org.argouml.application.configuration.ConfigurationKeyImpl.isChangedProperty(PropertyChangeEvent)",2,1,2
"org.argouml.application.configuration.ConfigurationKeyImpl.toString()",1,1,1
"org.argouml.application.configuration.ConfigurationProperties.ConfigurationProperties()",1,2,2
"org.argouml.application.configuration.ConfigurationProperties.getDefaultPath()",1,1,1
"org.argouml.application.configuration.ConfigurationProperties.getValue(String,String)",1,1,2
"org.argouml.application.configuration.ConfigurationProperties.loadFile(File)",1,3,3
"org.argouml.application.configuration.ConfigurationProperties.loadURL(URL)",1,3,3
"org.argouml.application.configuration.ConfigurationProperties.saveFile(File)",1,3,3
"org.argouml.application.configuration.ConfigurationProperties.saveURL(URL)",1,1,1
"org.argouml.application.configuration.ConfigurationProperties.setValue(String,String)",1,1,1
"org.argouml.application.events.ArgoEvent.ArgoEvent(int,Object)",1,1,1
"org.argouml.application.events.ArgoEvent.getEventEndRange()",1,2,2
"org.argouml.application.events.ArgoEvent.getEventStartRange()",1,1,1
"org.argouml.application.events.ArgoEvent.getEventType()",1,1,1
"org.argouml.application.events.ArgoEvent.toString()",1,1,1
"org.argouml.application.events.ArgoEventPump.ArgoEventPump()",1,1,1
"org.argouml.application.events.ArgoEventPump.Pair.Pair(int,ArgoEventListener)",1,1,1
"org.argouml.application.events.ArgoEventPump.Pair.getEventType()",1,1,1
"org.argouml.application.events.ArgoEventPump.Pair.getListener()",1,1,1
"org.argouml.application.events.ArgoEventPump.Pair.toString()",1,1,1
"org.argouml.application.events.ArgoEventPump.addListener(ArgoEventListener)",1,1,1
"org.argouml.application.events.ArgoEventPump.addListener(int,ArgoEventListener)",1,1,1
"org.argouml.application.events.ArgoEventPump.doAddListener(int,ArgoEventListener)",1,1,2
"org.argouml.application.events.ArgoEventPump.doFireEvent(ArgoEvent)",2,5,6
"org.argouml.application.events.ArgoEventPump.doRemoveListener(int,ArgoEventListener)",2,1,2
"org.argouml.application.events.ArgoEventPump.fireEvent(ArgoEvent)",1,1,1
"org.argouml.application.events.ArgoEventPump.getInstance()",1,1,1
"org.argouml.application.events.ArgoEventPump.handleFireEvent(ArgoEvent,ArgoEventListener)",1,10,10
"org.argouml.application.events.ArgoEventPump.handleFireModuleEvent(ArgoModuleEvent,ArgoModuleEventListener)",2,2,6
"org.argouml.application.events.ArgoEventPump.handleFireNotationEvent(ArgoNotationEvent,ArgoNotationEventListener)",2,2,7
"org.argouml.application.events.ArgoEventPump.removeListener(ArgoEventListener)",1,1,1
"org.argouml.application.events.ArgoEventPump.removeListener(int,ArgoEventListener)",1,1,1
"org.argouml.application.events.ArgoModuleEvent.ArgoModuleEvent(int,ArgoModule)",1,1,1
"org.argouml.application.events.ArgoModuleEvent.getEventStartRange()",1,1,1
"org.argouml.application.events.ArgoNotationEvent.ArgoNotationEvent(int,Object)",1,1,1
"org.argouml.application.events.ArgoNotationEvent.getEventStartRange()",1,1,1
"org.argouml.application.helpers.DiagramHelper.DiagramHelper()",1,1,1
"org.argouml.application.helpers.DiagramHelper.getDiagramMenuItem()",1,1,1
"org.argouml.application.helpers.DiagramHelper.getDiagramResourceBundleKey()",1,1,1
"org.argouml.application.helpers.DiagramHelper.getModulePopUpActions(Vector,Object)",1,1,1
"org.argouml.application.helpers.DiagramHelper.inContext(Object[])",1,1,1
"org.argouml.application.helpers.DiagramHelper.initializeModule()",1,1,1
"org.argouml.application.helpers.DiagramHelper.isModuleEnabled()",1,1,1
"org.argouml.application.helpers.DiagramHelper.setModuleEnabled(boolean)",1,1,1
"org.argouml.application.helpers.DiagramHelper.shutdownModule()",1,1,1
"org.argouml.application.helpers.ModuleHelper.ModuleHelper()",1,1,1
"org.argouml.application.helpers.ModuleHelper.getModulePopUpActions(Vector,Object)",1,1,1
"org.argouml.application.helpers.ModuleHelper.isModuleEnabled()",1,1,1
"org.argouml.application.helpers.ModuleHelper.setModuleEnabled(boolean)",1,1,1
"org.argouml.application.helpers.ResourceBundleHelper.getModulePopUpActions(Vector,Object)",1,1,1
"org.argouml.application.helpers.ResourceBundleHelper.inContext(Object[])",1,1,1
"org.argouml.application.helpers.ResourceBundleHelper.initializeModule()",1,1,1
"org.argouml.application.helpers.ResourceBundleHelper.isModuleEnabled()",1,1,1
"org.argouml.application.helpers.ResourceBundleHelper.setModuleEnabled(boolean)",1,1,1
"org.argouml.application.helpers.ResourceBundleHelper.shutdownModule()",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.SettingsTabHelper()",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.createCheckBox(String)",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.createLabel(String)",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.createTextField()",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.getModulePopUpActions(Vector,Object)",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.getSettingsTabPanel()",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.getTabPanel()",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.getTabResourceBundleKey()",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.inContext(Object[])",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.initializeModule()",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.isModuleEnabled()",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.localize(String)",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.setModuleEnabled(boolean)",1,1,1
"org.argouml.application.helpers.SettingsTabHelper.shutdownModule()",1,1,1
"org.argouml.application.modules.ModuleLoader.JarFileFilter.accept(File)",1,3,3
"org.argouml.application.modules.ModuleLoader.ModuleLoader()",1,5,5
"org.argouml.application.modules.ModuleLoader.activateModule(ArgoModule)",1,1,1
"org.argouml.application.modules.ModuleLoader.addModuleAction(Vector,Object)",1,4,4
"org.argouml.application.modules.ModuleLoader.classImplements(Object,Class)",2,1,2
"org.argouml.application.modules.ModuleLoader.fireEvent(int,ArgoModule)",1,1,1
"org.argouml.application.modules.ModuleLoader.getArgoHome()",1,1,1
"org.argouml.application.modules.ModuleLoader.getArgoRoot()",1,1,1
"org.argouml.application.modules.ModuleLoader.getCurrentSingleton(Class)",1,1,2
"org.argouml.application.modules.ModuleLoader.getInstance()",1,1,2
"org.argouml.application.modules.ModuleLoader.getModule(String)",4,3,4
"org.argouml.application.modules.ModuleLoader.getModules()",1,1,1
"org.argouml.application.modules.ModuleLoader.getPlugin(Class,Object[])",7,6,7
"org.argouml.application.modules.ModuleLoader.getPlugins(Class,Object[])",3,8,8
"org.argouml.application.modules.ModuleLoader.hasPlugin(Class,Object[])",8,7,8
"org.argouml.application.modules.ModuleLoader.initialize()",1,1,1
"org.argouml.application.modules.ModuleLoader.keyAlreadyLoaded(String)",4,3,4
"org.argouml.application.modules.ModuleLoader.loadClassFromLoader(ClassLoader,String,String,boolean)",2,9,11
"org.argouml.application.modules.ModuleLoader.loadInternalModules(Class,String)",1,2,2
"org.argouml.application.modules.ModuleLoader.loadModules(InputStream,String)",6,6,10
"org.argouml.application.modules.ModuleLoader.loadModulesFromClassPathJars()",1,3,3
"org.argouml.application.modules.ModuleLoader.loadModulesFromExtensionDir()",1,4,4
"org.argouml.application.modules.ModuleLoader.loadModulesFromFile(String)",1,2,2
"org.argouml.application.modules.ModuleLoader.loadModulesFromJar(String)",1,2,2
"org.argouml.application.modules.ModuleLoader.loadModulesFromNamedDirectory(String)",1,4,5
"org.argouml.application.modules.ModuleLoader.loadModulesFromPredefinedLists()",1,7,7
"org.argouml.application.modules.ModuleLoader.processJarFile(ClassLoader,File)",1,11,11
"org.argouml.application.modules.ModuleLoader.requestNewSingleton(Class,ArgoSingletonModule)",3,2,4
"org.argouml.application.modules.ModuleLoader.shutdown()",1,4,4
"org.argouml.application.notation.NotationNameImpl.NotationNameImpl(String)",1,1,1
"org.argouml.application.notation.NotationNameImpl.NotationNameImpl(String,Icon)",1,1,1
"org.argouml.application.notation.NotationNameImpl.NotationNameImpl(String,String)",1,1,1
"org.argouml.application.notation.NotationNameImpl.NotationNameImpl(String,String,Icon)",1,1,1
"org.argouml.application.notation.NotationNameImpl.equals(NotationName)",2,2,2
"org.argouml.application.notation.NotationNameImpl.findNotation(String)",3,3,4
"org.argouml.application.notation.NotationNameImpl.fireEvent(int,NotationName)",1,1,1
"org.argouml.application.notation.NotationNameImpl.getAvailableNotations()",1,1,1
"org.argouml.application.notation.NotationNameImpl.getConfigurationValue()",1,1,1
"org.argouml.application.notation.NotationNameImpl.getIcon()",1,1,1
"org.argouml.application.notation.NotationNameImpl.getName()",1,1,1
"org.argouml.application.notation.NotationNameImpl.getNotation(String)",1,1,1
"org.argouml.application.notation.NotationNameImpl.getNotation(String,String)",1,1,1
"org.argouml.application.notation.NotationNameImpl.getNotationNameString(String,String)",3,1,3
"org.argouml.application.notation.NotationNameImpl.getTitle()",1,1,1
"org.argouml.application.notation.NotationNameImpl.getVersion()",1,1,1
"org.argouml.application.notation.NotationNameImpl.makeNotation(String,String,Icon)",1,2,2
"org.argouml.application.notation.NotationNameImpl.moduleDisabled(ArgoModuleEvent)",1,1,1
"org.argouml.application.notation.NotationNameImpl.moduleEnabled(ArgoModuleEvent)",1,1,1
"org.argouml.application.notation.NotationNameImpl.moduleLoaded(ArgoModuleEvent)",1,1,1
"org.argouml.application.notation.NotationNameImpl.moduleUnloaded(ArgoModuleEvent)",1,1,1
"org.argouml.application.notation.NotationNameImpl.toString()",2,1,2
"org.argouml.application.notation.NotationProviderFactory.NotationProviderFactory()",1,3,3
"org.argouml.application.notation.NotationProviderFactory.finalize()",1,1,1
"org.argouml.application.notation.NotationProviderFactory.fireEvent(int,NotationProvider)",1,1,1
"org.argouml.application.notation.NotationProviderFactory.getDefaultProvider()",1,2,2
"org.argouml.application.notation.NotationProviderFactory.getInstance()",1,1,1
"org.argouml.application.notation.NotationProviderFactory.getNotations()",1,2,2
"org.argouml.application.notation.NotationProviderFactory.getProvider(NotationName)",3,4,4
"org.argouml.application.notation.NotationProviderFactory.getProviders()",1,1,1
"org.argouml.application.notation.NotationProviderFactory.moduleDisabled(ArgoModuleEvent)",1,1,1
"org.argouml.application.notation.NotationProviderFactory.moduleEnabled(ArgoModuleEvent)",1,1,1
"org.argouml.application.notation.NotationProviderFactory.moduleLoaded(ArgoModuleEvent)",1,2,2
"org.argouml.application.notation.NotationProviderFactory.moduleUnloaded(ArgoModuleEvent)",1,1,1
"org.argouml.application.security.ArgoAwtExceptionHandler.ArgoAwtExceptionHandler()",1,1,1
"org.argouml.application.security.ArgoAwtExceptionHandler.handle(Throwable)",2,1,2
"org.argouml.application.security.ArgoClassLoader.ArgoClassLoader(JarFile)",1,1,1
"org.argouml.application.security.ArgoClassLoader.loadClass(String)",1,4,5
"org.argouml.application.security.ArgoJarClassLoader.ArgoJarClassLoader(URL)",1,1,1
"org.argouml.application.security.ArgoJarClassLoader.getMainClassName()",1,2,2
"org.argouml.application.security.ArgoJarClassLoader.invokeClass(String,String[])",2,3,5
"org.argouml.application.security.ArgoSecurityException.ArgoSecurityException()",1,1,1
"org.argouml.application.security.ArgoSecurityException.ArgoSecurityException(boolean)",1,1,1
"org.argouml.application.security.ArgoSecurityException.isHidden()",1,1,1
"org.argouml.application.security.ArgoSecurityManager.ArgoSecurityManager()",1,1,1
"org.argouml.application.security.ArgoSecurityManager.checkPermission(Permission)",7,4,7
"org.argouml.application.security.ArgoSecurityManager.getAllowExit()",1,1,1
"org.argouml.application.security.ArgoSecurityManager.getInstance()",1,1,1
"org.argouml.application.security.ArgoSecurityManager.setAllowExit(boolean)",1,1,1
"org.argouml.cognitive.Decision.Decision(String,int)",1,1,1
"org.argouml.cognitive.Decision.equals(Object)",2,1,2
"org.argouml.cognitive.Decision.getName()",1,1,1
"org.argouml.cognitive.Decision.getPriority()",1,1,1
"org.argouml.cognitive.Decision.setName(String)",1,1,1
"org.argouml.cognitive.Decision.setPriority(int)",1,1,1
"org.argouml.cognitive.Decision.toString()",1,1,1
"org.argouml.cognitive.DecisionModel.DecisionModel()",1,1,1
"org.argouml.cognitive.DecisionModel.defineDecision(String,int)",1,2,2
"org.argouml.cognitive.DecisionModel.findDecision(String)",2,1,3
"org.argouml.cognitive.DecisionModel.getDecisions()",1,1,1
"org.argouml.cognitive.DecisionModel.isConsidering(String)",2,1,2
"org.argouml.cognitive.DecisionModel.setDecisionPriority(String,int)",2,2,2
"org.argouml.cognitive.DecisionModel.startConsidering(Decision)",1,1,1
"org.argouml.cognitive.DecisionModel.startConsidering(String)",1,1,1
"org.argouml.cognitive.DecisionModel.stopConsidering(Decision)",1,1,1
"org.argouml.cognitive.DecisionModel.stopConsidering(String)",1,1,1
"org.argouml.cognitive.Design.Design()",1,1,1
"org.argouml.cognitive.Design.addElement(DesignMaterial)",1,2,2
"org.argouml.cognitive.Design.critique(Designer)",1,2,2
"org.argouml.cognitive.Design.elements()",1,1,1
"org.argouml.cognitive.Design.getSubdesigns()",1,1,1
"org.argouml.cognitive.Design.iterator()",1,1,1
"org.argouml.cognitive.Design.removeElement(DesignMaterial)",1,1,1
"org.argouml.cognitive.Design.setSubdesigns(Vector)",1,1,1
"org.argouml.cognitive.Design.toString()",1,2,2
"org.argouml.cognitive.Design.transativelyIncludes(DesignMaterial)",4,3,5
"org.argouml.cognitive.DesignMaterial.DesignMaterial()",1,1,1
"org.argouml.cognitive.DesignMaterial.DesignMaterial(Hashtable)",1,1,1
"org.argouml.cognitive.DesignMaterial.addParent(Design)",1,1,1
"org.argouml.cognitive.DesignMaterial.addPersistantObserver(Observer)",1,1,2
"org.argouml.cognitive.DesignMaterial.addPropertyChangeListener(PropertyChangeListener)",1,1,2
"org.argouml.cognitive.DesignMaterial.canPut(String)",1,1,1
"org.argouml.cognitive.DesignMaterial.changedProperty(String)",1,1,1
"org.argouml.cognitive.DesignMaterial.critique(Designer)",1,1,1
"org.argouml.cognitive.DesignMaterial.define(String,Object)",2,2,2
"org.argouml.cognitive.DesignMaterial.define(String,boolean)",1,2,2
"org.argouml.cognitive.DesignMaterial.define(String,int)",1,2,2
"org.argouml.cognitive.DesignMaterial.dispose()",1,2,2
"org.argouml.cognitive.DesignMaterial.firePropertyChange(String,Object,Object)",3,3,5
"org.argouml.cognitive.DesignMaterial.firePropertyChange(String,boolean,boolean)",1,1,1
"org.argouml.cognitive.DesignMaterial.firePropertyChange(String,int,int)",1,1,1
"org.argouml.cognitive.DesignMaterial.get(String)",1,1,1
"org.argouml.cognitive.DesignMaterial.get(String,Object)",1,1,2
"org.argouml.cognitive.DesignMaterial.getBoolProperty(String)",1,1,1
"org.argouml.cognitive.DesignMaterial.getBoolProperty(String,boolean)",2,2,2
"org.argouml.cognitive.DesignMaterial.getBoolean(String)",1,1,1
"org.argouml.cognitive.DesignMaterial.getHighlight()",1,1,1
"org.argouml.cognitive.DesignMaterial.getIntProperty(String)",1,1,1
"org.argouml.cognitive.DesignMaterial.getIntProperty(String,int)",2,2,2
"org.argouml.cognitive.DesignMaterial.getProperty(String)",1,1,1
"org.argouml.cognitive.DesignMaterial.getProperty(String,Object)",1,1,1
"org.argouml.cognitive.DesignMaterial.inform(ToDoItem)",1,1,1
"org.argouml.cognitive.DesignMaterial.keysIn(String)",2,2,2
"org.argouml.cognitive.DesignMaterial.notifyObservers(Object)",1,1,1
"org.argouml.cognitive.DesignMaterial.notifyPersistantObservers(Object)",2,2,3
"org.argouml.cognitive.DesignMaterial.parents()",1,1,1
"org.argouml.cognitive.DesignMaterial.put(Hashtable)",1,2,2
"org.argouml.cognitive.DesignMaterial.put(String,Object)",2,1,3
"org.argouml.cognitive.DesignMaterial.put(String,boolean)",1,1,2
"org.argouml.cognitive.DesignMaterial.put(String,int)",1,1,1
"org.argouml.cognitive.DesignMaterial.removeParent(Design)",1,1,1
"org.argouml.cognitive.DesignMaterial.removePendingItems(Designer)",1,1,1
"org.argouml.cognitive.DesignMaterial.removePersistObserver(Observer)",1,1,1
"org.argouml.cognitive.DesignMaterial.removeProperty(String)",1,1,1
"org.argouml.cognitive.DesignMaterial.removePropertyChangeListener(PropertyChangeListener)",2,1,2
"org.argouml.cognitive.DesignMaterial.setHighlight(boolean)",1,1,1
"org.argouml.cognitive.DesignMaterial.setProperty(String,Object)",1,2,2
"org.argouml.cognitive.DesignMaterial.setProperty(String,boolean)",1,2,2
"org.argouml.cognitive.DesignMaterial.setProperty(String,int)",1,2,2
"org.argouml.cognitive.Designer.Designer()",1,1,1
"org.argouml.cognitive.Designer.addToDoItems(ToDoList)",1,1,1
"org.argouml.cognitive.Designer.canFixIt(ToDoItem)",1,1,1
"org.argouml.cognitive.Designer.containsKnowledgeType(String)",1,1,1
"org.argouml.cognitive.Designer.critique(Design)",1,1,1
"org.argouml.cognitive.Designer.critiqueASAP(Object,String)",2,2,3
"org.argouml.cognitive.Designer.defineDecision(String,int)",1,1,1
"org.argouml.cognitive.Designer.determineActiveCritics()",1,1,1
"org.argouml.cognitive.Designer.disruptiveThreshold()",1,1,1
"org.argouml.cognitive.Designer.disruptivelyWarn(ToDoItem)",1,1,1
"org.argouml.cognitive.Designer.expand(String,VectorSet)",1,1,1
"org.argouml.cognitive.Designer.fixIt(ToDoItem,Object)",1,1,1
"org.argouml.cognitive.Designer.getAgency()",1,1,1
"org.argouml.cognitive.Designer.getAutoCritique()",1,1,1
"org.argouml.cognitive.Designer.getChildGenerator()",1,1,1
"org.argouml.cognitive.Designer.getClarifier()",1,1,1
"org.argouml.cognitive.Designer.getCritiquingInterval()",1,1,1
"org.argouml.cognitive.Designer.getCritiquingRoot()",1,1,1
"org.argouml.cognitive.Designer.getDecisionModel()",1,1,1
"org.argouml.cognitive.Designer.getDecisions()",1,1,1
"org.argouml.cognitive.Designer.getExpertEmail()",1,1,1
"org.argouml.cognitive.Designer.getGoalModel()",1,1,1
"org.argouml.cognitive.Designer.getGoals()",1,1,1
"org.argouml.cognitive.Designer.getKnowledgeTypes()",1,1,1
"org.argouml.cognitive.Designer.getPrefs()",1,1,1
"org.argouml.cognitive.Designer.getSupportedDecisions()",1,1,1
"org.argouml.cognitive.Designer.getSupportedGoals()",1,1,1
"org.argouml.cognitive.Designer.getToDoList()",1,1,1
"org.argouml.cognitive.Designer.hasGoal(String)",1,1,1
"org.argouml.cognitive.Designer.inform(ToDoItem)",1,2,2
"org.argouml.cognitive.Designer.isConsidering(Decision)",1,1,1
"org.argouml.cognitive.Designer.isConsidering(String)",1,1,1
"org.argouml.cognitive.Designer.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.cognitive.Designer.nondisruptivelyWarn(ToDoItem)",1,1,1
"org.argouml.cognitive.Designer.propertyChange(PropertyChangeEvent)",1,1,1
"org.argouml.cognitive.Designer.propertySet(MElementEvent)",1,1,1
"org.argouml.cognitive.Designer.recovered(MElementEvent)",1,1,1
"org.argouml.cognitive.Designer.removeToDoItems(ToDoList)",1,1,1
"org.argouml.cognitive.Designer.removed(MElementEvent)",1,1,1
"org.argouml.cognitive.Designer.roleAdded(MElementEvent)",1,1,1
"org.argouml.cognitive.Designer.roleRemoved(MElementEvent)",1,1,1
"org.argouml.cognitive.Designer.run()",1,13,13
"org.argouml.cognitive.Designer.setAutoCritique(boolean)",1,1,1
"org.argouml.cognitive.Designer.setChildGenerator(ChildGenerator)",1,1,1
"org.argouml.cognitive.Designer.setCritiquingInterval(int)",1,1,1
"org.argouml.cognitive.Designer.setCritiquingRoot(Object)",1,1,1
"org.argouml.cognitive.Designer.setDecisionPriority(String,int)",1,1,1
"org.argouml.cognitive.Designer.setExpertEmail(String)",1,1,1
"org.argouml.cognitive.Designer.setGoalPriority(String,int)",1,1,1
"org.argouml.cognitive.Designer.snooze()",1,1,1
"org.argouml.cognitive.Designer.spawnCritiquer(Object)",1,1,1
"org.argouml.cognitive.Designer.startConsidering(Decision)",1,1,1
"org.argouml.cognitive.Designer.startConsidering(String)",1,1,1
"org.argouml.cognitive.Designer.startDesiring(String)",1,1,1
"org.argouml.cognitive.Designer.stillValid(ToDoItem,Designer)",1,1,1
"org.argouml.cognitive.Designer.stopConsidering(Decision)",1,1,1
"org.argouml.cognitive.Designer.stopConsidering(String)",1,1,1
"org.argouml.cognitive.Designer.stopDesiring(String)",1,1,1
"org.argouml.cognitive.Designer.supports(Decision)",1,1,1
"org.argouml.cognitive.Designer.supports(Goal)",1,1,1
"org.argouml.cognitive.Designer.theDesigner()",1,1,1
"org.argouml.cognitive.Designer.theDesigner(Designer)",1,1,1
"org.argouml.cognitive.Designer.toString()",1,1,1
"org.argouml.cognitive.Designer.unsnooze()",1,1,1
"org.argouml.cognitive.Goal.Goal(String,int)",1,1,1
"org.argouml.cognitive.Goal.equals(Object)",2,1,2
"org.argouml.cognitive.Goal.getName()",1,1,1
"org.argouml.cognitive.Goal.getPriority()",1,1,1
"org.argouml.cognitive.Goal.setName(String)",1,1,1
"org.argouml.cognitive.Goal.setPriority(int)",1,1,1
"org.argouml.cognitive.Goal.toString()",1,1,1
"org.argouml.cognitive.GoalModel.GoalModel()",1,1,1
"org.argouml.cognitive.GoalModel.addGoal(Goal)",1,1,1
"org.argouml.cognitive.GoalModel.getGoals()",1,1,1
"org.argouml.cognitive.GoalModel.hasGoal(String)",3,3,3
"org.argouml.cognitive.GoalModel.removeGoal(Goal)",1,1,1
"org.argouml.cognitive.GoalModel.setGoalPriority(String,int)",1,1,1
"org.argouml.cognitive.GoalModel.startDesiring(String)",1,1,1
"org.argouml.cognitive.GoalModel.stopDesiring(String)",1,1,1
"org.argouml.cognitive.ToDoItem.ToDoItem(Critic)",1,1,1
"org.argouml.cognitive.ToDoItem.ToDoItem(Critic,Object,Designer)",1,1,1
"org.argouml.cognitive.ToDoItem.ToDoItem(Critic,VectorSet,Designer)",1,1,1
"org.argouml.cognitive.ToDoItem.ToDoItem(Poster,String,int,String,String,VectorSet)",1,1,1
"org.argouml.cognitive.ToDoItem.action()",1,1,1
"org.argouml.cognitive.ToDoItem.canFixIt()",1,1,1
"org.argouml.cognitive.ToDoItem.changed()",1,1,1
"org.argouml.cognitive.ToDoItem.containsKnowledgeType(String)",1,1,1
"org.argouml.cognitive.ToDoItem.deselect()",1,3,3
"org.argouml.cognitive.ToDoItem.equals(Object)",2,1,4
"org.argouml.cognitive.ToDoItem.fixIt()",1,1,1
"org.argouml.cognitive.ToDoItem.getClarifier()",3,1,3
"org.argouml.cognitive.ToDoItem.getDescription()",1,1,1
"org.argouml.cognitive.ToDoItem.getExpertEmail()",1,1,1
"org.argouml.cognitive.ToDoItem.getHeadline()",1,1,1
"org.argouml.cognitive.ToDoItem.getMoreInfoURL()",1,1,1
"org.argouml.cognitive.ToDoItem.getOffenders()",1,1,1
"org.argouml.cognitive.ToDoItem.getPoster()",1,1,1
"org.argouml.cognitive.ToDoItem.getPriority()",1,1,1
"org.argouml.cognitive.ToDoItem.getProgress()",2,2,2
"org.argouml.cognitive.ToDoItem.getWizard()",1,1,1
"org.argouml.cognitive.ToDoItem.select()",1,3,3
"org.argouml.cognitive.ToDoItem.setDescription(String)",1,1,1
"org.argouml.cognitive.ToDoItem.setHeadline(String)",1,1,1
"org.argouml.cognitive.ToDoItem.setMoreInfoURL(String)",1,1,1
"org.argouml.cognitive.ToDoItem.setPriority(int)",1,1,1
"org.argouml.cognitive.ToDoItem.stillValid(Designer)",3,3,5
"org.argouml.cognitive.ToDoItem.supports(Decision)",1,1,1
"org.argouml.cognitive.ToDoItem.supports(Goal)",1,1,1
"org.argouml.cognitive.ToDoItem.toString()",1,1,1
"org.argouml.cognitive.ToDoList.ToDoList()",1,1,1
"org.argouml.cognitive.ToDoList.addAll(ToDoList)",1,2,2
"org.argouml.cognitive.ToDoList.addE(ToDoItem)",3,2,4
"org.argouml.cognitive.ToDoList.addElement(ToDoItem)",1,1,1
"org.argouml.cognitive.ToDoList.addToDoListListener(ToDoListListener)",1,1,1
"org.argouml.cognitive.ToDoList.elementAt(int)",1,1,1
"org.argouml.cognitive.ToDoList.elements()",1,1,1
"org.argouml.cognitive.ToDoList.elementsForOffender(Object)",2,3,4
"org.argouml.cognitive.ToDoList.explicitlyResolve(ToDoItem,String)",1,1,1
"org.argouml.cognitive.ToDoList.fireToDoItemAdded(ToDoItem)",1,1,1
"org.argouml.cognitive.ToDoList.fireToDoItemChanged(ToDoItem)",1,4,4
"org.argouml.cognitive.ToDoList.fireToDoItemRemoved(ToDoItem)",1,1,1
"org.argouml.cognitive.ToDoList.fireToDoItemsAdded(Vector)",1,3,4
"org.argouml.cognitive.ToDoList.fireToDoItemsRemoved(Vector)",1,3,4
"org.argouml.cognitive.ToDoList.fireToDoListChanged()",1,3,4
"org.argouml.cognitive.ToDoList.forceValidityCheck()",1,1,1
"org.argouml.cognitive.ToDoList.forceValidityCheck(Vector)",1,5,5
"org.argouml.cognitive.ToDoList.getDecisions()",1,1,1
"org.argouml.cognitive.ToDoList.getGoals()",1,1,1
"org.argouml.cognitive.ToDoList.getKnowledgeTypes()",1,1,1
"org.argouml.cognitive.ToDoList.getOffenders()",1,1,1
"org.argouml.cognitive.ToDoList.getPosters()",1,1,1
"org.argouml.cognitive.ToDoList.getToDoItems()",1,1,1
"org.argouml.cognitive.ToDoList.notifyObservers()",1,1,1
"org.argouml.cognitive.ToDoList.notifyObservers(Object)",1,1,1
"org.argouml.cognitive.ToDoList.notifyObservers(String,Object)",1,1,1
"org.argouml.cognitive.ToDoList.recomputeAllKnowledgeTypes()",1,1,2
"org.argouml.cognitive.ToDoList.recomputeAllOffenders()",1,2,2
"org.argouml.cognitive.ToDoList.recomputeAllPosters()",1,2,2
"org.argouml.cognitive.ToDoList.removeAll(ToDoList)",1,2,2
"org.argouml.cognitive.ToDoList.removeAllElements()",1,2,2
"org.argouml.cognitive.ToDoList.removeE(ToDoItem)",1,1,1
"org.argouml.cognitive.ToDoList.removeElement(ToDoItem)",1,1,1
"org.argouml.cognitive.ToDoList.removeToDoListListener(ToDoListListener)",1,1,1
"org.argouml.cognitive.ToDoList.resolve(ToDoItem)",1,1,1
"org.argouml.cognitive.ToDoList.run()",1,3,3
"org.argouml.cognitive.ToDoList.size()",1,1,1
"org.argouml.cognitive.ToDoList.sort()",1,1,1
"org.argouml.cognitive.ToDoList.spawnValidityChecker(Designer)",1,1,1
"org.argouml.cognitive.ToDoList.toString()",1,2,2
"org.argouml.cognitive.ToDoListEvent.ToDoListEvent()",1,1,1
"org.argouml.cognitive.ToDoListEvent.ToDoListEvent(Vector)",1,1,1
"org.argouml.cognitive.ToDoListEvent.getToDoItems()",1,1,1
"org.argouml.cognitive.checklist.CheckItem.CheckItem(String,String)",1,1,1
"org.argouml.cognitive.checklist.CheckItem.CheckItem(String,String,String,Predicate)",1,1,1
"org.argouml.cognitive.checklist.CheckItem.equals(Object)",2,1,2
"org.argouml.cognitive.checklist.CheckItem.expand(String,Object)",1,1,1
"org.argouml.cognitive.checklist.CheckItem.getCategory()",1,1,1
"org.argouml.cognitive.checklist.CheckItem.getDescription()",1,1,1
"org.argouml.cognitive.checklist.CheckItem.getDescription(Object)",1,1,1
"org.argouml.cognitive.checklist.CheckItem.getMoreInfoURL()",1,1,1
"org.argouml.cognitive.checklist.CheckItem.getPredicate()",1,1,1
"org.argouml.cognitive.checklist.CheckItem.setCategory(String)",1,1,1
"org.argouml.cognitive.checklist.CheckItem.setDescription(String)",1,1,1
"org.argouml.cognitive.checklist.CheckItem.setMoreInfoURL(String)",1,1,1
"org.argouml.cognitive.checklist.CheckItem.setPredicate(Predicate)",1,1,1
"org.argouml.cognitive.checklist.CheckItem.toString()",1,1,1
"org.argouml.cognitive.checklist.CheckManager.CheckManager()",1,1,1
"org.argouml.cognitive.checklist.CheckManager.getChecklistFor(Object)",4,2,4
"org.argouml.cognitive.checklist.CheckManager.getStatusFor(Object)",1,2,2
"org.argouml.cognitive.checklist.CheckManager.register(Object,Checklist)",1,1,1
"org.argouml.cognitive.checklist.Checklist.Checklist()",1,1,1
"org.argouml.cognitive.checklist.Checklist.addAll(Checklist)",1,2,2
"org.argouml.cognitive.checklist.Checklist.addItem(CheckItem)",1,1,1
"org.argouml.cognitive.checklist.Checklist.addItem(String)",1,1,1
"org.argouml.cognitive.checklist.Checklist.elementAt(int)",1,1,1
"org.argouml.cognitive.checklist.Checklist.elements()",1,1,1
"org.argouml.cognitive.checklist.Checklist.getCheckItems()",1,1,1
"org.argouml.cognitive.checklist.Checklist.removeItem(CheckItem)",1,1,1
"org.argouml.cognitive.checklist.Checklist.setNextCategory(String)",1,1,1
"org.argouml.cognitive.checklist.Checklist.size()",1,1,1
"org.argouml.cognitive.checklist.Checklist.sort()",1,1,1
"org.argouml.cognitive.checklist.Checklist.toString()",1,2,2
"org.argouml.cognitive.checklist.ChecklistStatus.ChecklistStatus()",1,1,1
"org.argouml.cognitive.checklist.ChecklistStatus.addAll(ChecklistStatus)",1,2,2
"org.argouml.cognitive.checklist.ChecklistStatus.addItem(CheckItem)",1,1,1
"org.argouml.cognitive.checklist.ChecklistStatus.contains(CheckItem)",1,1,1
"org.argouml.cognitive.checklist.ChecklistStatus.elementAt(int)",1,1,1
"org.argouml.cognitive.checklist.ChecklistStatus.elements()",1,1,1
"org.argouml.cognitive.checklist.ChecklistStatus.getCheckItems()",1,1,1
"org.argouml.cognitive.checklist.ChecklistStatus.removeItem(CheckItem)",1,1,1
"org.argouml.cognitive.checklist.ChecklistStatus.toString()",1,2,2
"org.argouml.cognitive.checklist.ui.TabChecklist.TabChecklist()",1,1,1
"org.argouml.cognitive.checklist.ui.TabChecklist.actionPerformed(ActionEvent)",1,1,1
"org.argouml.cognitive.checklist.ui.TabChecklist.getTarget()",1,1,1
"org.argouml.cognitive.checklist.ui.TabChecklist.refresh()",1,1,1
"org.argouml.cognitive.checklist.ui.TabChecklist.resizeColumns()",1,1,1
"org.argouml.cognitive.checklist.ui.TabChecklist.setTarget(Object)",3,1,3
"org.argouml.cognitive.checklist.ui.TabChecklist.shouldBeEnabled()",1,1,1
"org.argouml.cognitive.checklist.ui.TabChecklist.valueChanged(ListSelectionEvent)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.TableModelChecklist(TabChecklist)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.delayedVetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.getColumnClass(int)",3,1,3
"org.argouml.cognitive.checklist.ui.TableModelChecklist.getColumnCount()",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.getColumnName(int)",3,1,3
"org.argouml.cognitive.checklist.ui.TableModelChecklist.getRowCount()",3,1,3
"org.argouml.cognitive.checklist.ui.TableModelChecklist.getValueAt(int,int)",4,3,5
"org.argouml.cognitive.checklist.ui.TableModelChecklist.isCellEditable(int,int)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.propertySet(MElementEvent)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.recovered(MElementEvent)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.removed(MElementEvent)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.roleAdded(MElementEvent)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.roleRemoved(MElementEvent)",1,1,1
"org.argouml.cognitive.checklist.ui.TableModelChecklist.setTarget(MModelElement)",1,3,3
"org.argouml.cognitive.checklist.ui.TableModelChecklist.setValueAt(Object,int,int)",4,3,6
"org.argouml.cognitive.checklist.ui.TableModelChecklist.vetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.cognitive.critics.Agency.Agency()",1,1,1
"org.argouml.cognitive.critics.Agency.Agency(ControlMech)",1,1,1
"org.argouml.cognitive.critics.Agency.addCritic(Critic)",3,2,4
"org.argouml.cognitive.critics.Agency.addStaticObserver(Observer)",2,2,2
"org.argouml.cognitive.critics.Agency.applyAllCritics(Object,Designer)",1,1,1
"org.argouml.cognitive.critics.Agency.applyAllCritics(Object,Designer,long)",1,1,1
"org.argouml.cognitive.critics.Agency.applyCritics(Object,Designer,Vector,long)",1,5,5
"org.argouml.cognitive.critics.Agency.criticsForClass(Class)",2,3,4
"org.argouml.cognitive.critics.Agency.criticsForSpecificClass(Class)",1,2,2
"org.argouml.cognitive.critics.Agency.determineActiveCritics(Designer)",1,3,3
"org.argouml.cognitive.critics.Agency.getCriticRegistry()",1,1,1
"org.argouml.cognitive.critics.Agency.getCritics()",1,1,1
"org.argouml.cognitive.critics.Agency.notifyStaticObservers(Object)",1,2,2
"org.argouml.cognitive.critics.Agency.register(Critic,Class)",1,2,2
"org.argouml.cognitive.critics.Agency.register(String,String)",2,6,6
"org.argouml.cognitive.critics.Agency.theAgency()",2,2,2
"org.argouml.cognitive.critics.AndCM.isRelevant(Critic,Designer)",3,2,3
"org.argouml.cognitive.critics.CompositeCM.addMech(ControlMech)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.CompoundCritic()",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.CompoundCritic(Critic,Critic)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.CompoundCritic(Critic,Critic,Critic)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.CompoundCritic(Critic,Critic,Critic,Critic)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.addCritic(Critic)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.addKnowledgeType(String)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.addSupportedDecision(Decision)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.addSupportedGoal(Goal)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.containsKnowledgeType(String)",3,2,3
"org.argouml.cognitive.critics.CompoundCritic.critique(Object,Designer)",3,4,4
"org.argouml.cognitive.critics.CompoundCritic.expand(String,VectorSet)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.getClarifier()",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.getCritics()",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.getKnowledgeTypes()",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.getSupportedDecisions()",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.getSupportedGoals()",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.isActive()",3,2,3
"org.argouml.cognitive.critics.CompoundCritic.isEnabled()",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.removeCritic(Critic)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.setCritics(Vector)",1,1,1
"org.argouml.cognitive.critics.CompoundCritic.supports(Decision)",3,2,3
"org.argouml.cognitive.critics.CompoundCritic.supports(Goal)",3,2,3
"org.argouml.cognitive.critics.CompoundCritic.toDoItem(Object,Designer)",1,1,1
"org.argouml.cognitive.critics.ControlMech.ControlMech()",1,1,1
"org.argouml.cognitive.critics.ControlMech.isRelevant(Critic,Designer)",1,1,1
"org.argouml.cognitive.critics.CrNodesOverlap.CrNodesOverlap()",1,1,1
"org.argouml.cognitive.critics.CrNodesOverlap.computeOffenders(Diagram)",12,8,18
"org.argouml.cognitive.critics.CrNodesOverlap.predicate2(Object,Designer)",3,1,3
"org.argouml.cognitive.critics.CrNodesOverlap.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.cognitive.critics.CrNodesOverlap.toDoItem(Object,Designer)",1,1,1
"org.argouml.cognitive.critics.CrZeroLengthEdge.CrZeroLengthEdge()",1,1,1
"org.argouml.cognitive.critics.CrZeroLengthEdge.predicate2(Object,Designer)",3,1,3
"org.argouml.cognitive.critics.Critic.Critic()",1,2,2
"org.argouml.cognitive.critics.Critic.addControlRec(String,Object)",1,1,1
"org.argouml.cognitive.critics.Critic.addKnowledgeType(String)",1,1,1
"org.argouml.cognitive.critics.Critic.addSupportedDecision(Decision)",1,1,1
"org.argouml.cognitive.critics.Critic.addSupportedGoal(Goal)",1,1,1
"org.argouml.cognitive.critics.Critic.addTrigger(String)",1,1,1
"org.argouml.cognitive.critics.Critic.beActive()",1,2,2
"org.argouml.cognitive.critics.Critic.beInactive()",1,2,2
"org.argouml.cognitive.critics.Critic.canFixIt(ToDoItem)",1,1,1
"org.argouml.cognitive.critics.Critic.containsKnowledgeType(String)",1,1,1
"org.argouml.cognitive.critics.Critic.critique(Object,Designer)",1,2,2
"org.argouml.cognitive.critics.Critic.expand(String,VectorSet)",1,1,1
"org.argouml.cognitive.critics.Critic.fixIt(ToDoItem,Object)",1,1,1
"org.argouml.cognitive.critics.Critic.getArg(String)",1,1,1
"org.argouml.cognitive.critics.Critic.getArgs()",1,1,1
"org.argouml.cognitive.critics.Critic.getClarifier()",1,1,1
"org.argouml.cognitive.critics.Critic.getControlRec(String)",1,1,1
"org.argouml.cognitive.critics.Critic.getCriticCategory()",1,1,1
"org.argouml.cognitive.critics.Critic.getCriticKey()",1,1,1
"org.argouml.cognitive.critics.Critic.getCriticName()",1,1,1
"org.argouml.cognitive.critics.Critic.getCriticType()",1,1,1
"org.argouml.cognitive.critics.Critic.getDecisionCategory()",1,1,1
"org.argouml.cognitive.critics.Critic.getDescription(VectorSet,Designer)",1,1,1
"org.argouml.cognitive.critics.Critic.getDescriptionTemplate()",1,1,1
"org.argouml.cognitive.critics.Critic.getExpertEmail()",1,1,1
"org.argouml.cognitive.critics.Critic.getHeadline()",1,1,1
"org.argouml.cognitive.critics.Critic.getHeadline(Object,Designer)",1,1,1
"org.argouml.cognitive.critics.Critic.getHeadline(VectorSet,Designer)",1,1,1
"org.argouml.cognitive.critics.Critic.getKnowledgeTypes()",1,1,1
"org.argouml.cognitive.critics.Critic.getMoreInfoURL()",1,1,1
"org.argouml.cognitive.critics.Critic.getMoreInfoURL(VectorSet,Designer)",1,1,1
"org.argouml.cognitive.critics.Critic.getPriority()",1,1,1
"org.argouml.cognitive.critics.Critic.getPriority(VectorSet,Designer)",1,1,1
"org.argouml.cognitive.critics.Critic.getSupportedDecisions()",1,1,1
"org.argouml.cognitive.critics.Critic.getSupportedGoals()",1,1,1
"org.argouml.cognitive.critics.Critic.getTriggerMask()",1,1,1
"org.argouml.cognitive.critics.Critic.getWizardClass(ToDoItem)",1,1,1
"org.argouml.cognitive.critics.Critic.initWizard(Wizard)",1,1,1
"org.argouml.cognitive.critics.Critic.isActive()",1,1,1
"org.argouml.cognitive.critics.Critic.isEnabled()",1,1,1
"org.argouml.cognitive.critics.Critic.isRelevantToDecisions(Designer)",2,1,3
"org.argouml.cognitive.critics.Critic.isRelevantToGoals(Designer)",1,1,1
"org.argouml.cognitive.critics.Critic.makeWizard(ToDoItem)",2,3,3
"org.argouml.cognitive.critics.Critic.matchReason(long)",1,1,2
"org.argouml.cognitive.critics.Critic.postItem(ToDoItem,Object,Designer)",1,2,2
"org.argouml.cognitive.critics.Critic.predicate(Object,Designer)",1,1,1
"org.argouml.cognitive.critics.Critic.reasonCodeFor(String)",1,1,1
"org.argouml.cognitive.critics.Critic.setArg(String,Object)",1,1,1
"org.argouml.cognitive.critics.Critic.setArgs(Hashtable)",1,1,1
"org.argouml.cognitive.critics.Critic.setDecisionCategory(String)",1,1,1
"org.argouml.cognitive.critics.Critic.setDescription(String)",1,1,1
"org.argouml.cognitive.critics.Critic.setEnabled(boolean)",1,1,2
"org.argouml.cognitive.critics.Critic.setExpertEmail(String)",1,1,1
"org.argouml.cognitive.critics.Critic.setHeadline(String)",1,1,1
"org.argouml.cognitive.critics.Critic.setKnowledgeTypes(String)",1,1,1
"org.argouml.cognitive.critics.Critic.setKnowledgeTypes(String,String)",1,1,1
"org.argouml.cognitive.critics.Critic.setKnowledgeTypes(String,String,String)",1,1,1
"org.argouml.cognitive.critics.Critic.setKnowledgeTypes(VectorSet)",1,1,1
"org.argouml.cognitive.critics.Critic.setMoreInfoURL(String)",1,1,1
"org.argouml.cognitive.critics.Critic.setPriority(int)",1,1,1
"org.argouml.cognitive.critics.Critic.snooze()",1,1,1
"org.argouml.cognitive.critics.Critic.snoozeOrder()",1,1,1
"org.argouml.cognitive.critics.Critic.stillValid(ToDoItem,Designer)",4,3,4
"org.argouml.cognitive.critics.Critic.supports(Decision)",1,1,1
"org.argouml.cognitive.critics.Critic.supports(Goal)",1,1,1
"org.argouml.cognitive.critics.Critic.toDoItem(Object,Designer)",1,1,1
"org.argouml.cognitive.critics.Critic.toString()",1,1,1
"org.argouml.cognitive.critics.Critic.unsnooze()",1,1,1
"org.argouml.cognitive.critics.CurDecisionCM.isRelevant(Critic,Designer)",1,1,1
"org.argouml.cognitive.critics.DesignGoalsCM.isRelevant(Critic,Designer)",1,1,1
"org.argouml.cognitive.critics.EnabledCM.isRelevant(Critic,Designer)",1,1,1
"org.argouml.cognitive.critics.HistoryItemCritique.HistoryItemCritique(ToDoItem)",1,1,1
"org.argouml.cognitive.critics.HistoryItemCritique.toString()",2,1,2
"org.argouml.cognitive.critics.NotSnoozedCM.isRelevant(Critic,Designer)",1,1,1
"org.argouml.cognitive.critics.OrCM.isRelevant(Critic,Designer)",3,2,3
"org.argouml.cognitive.critics.SnoozeOrder.SnoozeOrder()",1,1,1
"org.argouml.cognitive.critics.SnoozeOrder.getSnoozed()",1,1,1
"org.argouml.cognitive.critics.SnoozeOrder.nextInterval(long)",1,1,1
"org.argouml.cognitive.critics.SnoozeOrder.setSnoozed(boolean)",1,2,2
"org.argouml.cognitive.critics.SnoozeOrder.snooze()",1,2,2
"org.argouml.cognitive.critics.SnoozeOrder.unsnooze()",1,1,1
"org.argouml.cognitive.critics.StandardCM.StandardCM()",1,1,1
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.CriticBrowserDialog()",1,1,1
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.actionPerformed(ActionEvent)",6,6,6
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.insertUpdate(DocumentEvent)",1,4,4
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.itemStateChanged(ItemEvent)",1,3,3
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.setTarget(Object)",1,4,4
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.setTargetDesc()",2,1,2
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.setTargetHeadline()",2,1,2
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.setTargetMoreInfo()",2,1,2
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.setTargetPriority()",3,4,6
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.setTargetUseClarifiers()",1,1,1
"org.argouml.cognitive.critics.ui.CriticBrowserDialog.valueChanged(ListSelectionEvent)",3,2,3
"org.argouml.cognitive.critics.ui.TableModelCritics.TableModelCritics()",1,1,1
"org.argouml.cognitive.critics.ui.TableModelCritics.delayedVetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.cognitive.critics.ui.TableModelCritics.getColumnClass(int)",4,1,4
"org.argouml.cognitive.critics.ui.TableModelCritics.getColumnCount()",1,1,1
"org.argouml.cognitive.critics.ui.TableModelCritics.getColumnName(int)",4,1,4
"org.argouml.cognitive.critics.ui.TableModelCritics.getRowCount()",2,1,2
"org.argouml.cognitive.critics.ui.TableModelCritics.getValueAt(int,int)",4,4,6
"org.argouml.cognitive.critics.ui.TableModelCritics.isCellEditable(int,int)",1,1,1
"org.argouml.cognitive.critics.ui.TableModelCritics.setTarget(Vector)",1,1,1
"org.argouml.cognitive.critics.ui.TableModelCritics.setValueAt(Object,int,int)",3,1,3
"org.argouml.cognitive.critics.ui.TableModelCritics.vetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.cognitive.ui.AddToDoItemDialog.AddToDoItemDialog()",1,1,1
"org.argouml.cognitive.ui.AddToDoItemDialog.actionPerformed(ActionEvent)",2,4,6
"org.argouml.cognitive.ui.DesignIssuesDialog.DesignIssuesDialog(Frame)",1,1,1
"org.argouml.cognitive.ui.DesignIssuesDialog.actionPerformed(ActionEvent)",1,2,2
"org.argouml.cognitive.ui.DesignIssuesDialog.initMainPanel()",1,1,2
"org.argouml.cognitive.ui.DesignIssuesDialog.stateChanged(ChangeEvent)",1,2,2
"org.argouml.cognitive.ui.DismissToDoItemDialog.DismissToDoItemDialog()",1,1,1
"org.argouml.cognitive.ui.DismissToDoItemDialog.actionPerformed(ActionEvent)",4,4,4
"org.argouml.cognitive.ui.DismissToDoItemDialog.setTarget(Object)",1,1,1
"org.argouml.cognitive.ui.DismissToDoItemDialog.setVisible(boolean)",1,2,2
"org.argouml.cognitive.ui.GoListToDecisionsToItems.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToDecisionsToItems.getChild(Object,int)",3,5,5
"org.argouml.cognitive.ui.GoListToDecisionsToItems.getChildCount(Object)",3,5,5
"org.argouml.cognitive.ui.GoListToDecisionsToItems.getDecisions()",1,1,1
"org.argouml.cognitive.ui.GoListToDecisionsToItems.getIndexOfChild(Object,Object)",3,5,5
"org.argouml.cognitive.ui.GoListToDecisionsToItems.getPrereqs()",1,1,1
"org.argouml.cognitive.ui.GoListToDecisionsToItems.getProvidedTypes()",1,1,1
"org.argouml.cognitive.ui.GoListToDecisionsToItems.getRoot()",1,1,1
"org.argouml.cognitive.ui.GoListToDecisionsToItems.isLeaf(Object)",3,2,4
"org.argouml.cognitive.ui.GoListToDecisionsToItems.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToDecisionsToItems.setRoot(Object)",1,1,1
"org.argouml.cognitive.ui.GoListToDecisionsToItems.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.cognitive.ui.GoListToGoalsToItems.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToGoalsToItems.getChild(Object,int)",3,5,5
"org.argouml.cognitive.ui.GoListToGoalsToItems.getChildCount(Object)",3,5,5
"org.argouml.cognitive.ui.GoListToGoalsToItems.getGoals()",1,1,1
"org.argouml.cognitive.ui.GoListToGoalsToItems.getIndexOfChild(Object,Object)",3,5,5
"org.argouml.cognitive.ui.GoListToGoalsToItems.getPrereqs()",1,1,1
"org.argouml.cognitive.ui.GoListToGoalsToItems.getProvidedTypes()",1,1,1
"org.argouml.cognitive.ui.GoListToGoalsToItems.getRoot()",1,1,1
"org.argouml.cognitive.ui.GoListToGoalsToItems.isLeaf(Object)",3,2,4
"org.argouml.cognitive.ui.GoListToGoalsToItems.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToGoalsToItems.setRoot(Object)",1,1,1
"org.argouml.cognitive.ui.GoListToGoalsToItems.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.cognitive.ui.GoListToOffenderToItem.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToOffenderToItem.getChild(Object,int)",1,2,2
"org.argouml.cognitive.ui.GoListToOffenderToItem.getChildCount(Object)",1,2,2
"org.argouml.cognitive.ui.GoListToOffenderToItem.getChildren(Object)",3,4,5
"org.argouml.cognitive.ui.GoListToOffenderToItem.getIndexOfChild(Object,Object)",1,2,2
"org.argouml.cognitive.ui.GoListToOffenderToItem.getPrereqs()",1,1,1
"org.argouml.cognitive.ui.GoListToOffenderToItem.getProvidedTypes()",1,1,1
"org.argouml.cognitive.ui.GoListToOffenderToItem.getRoot()",1,1,1
"org.argouml.cognitive.ui.GoListToOffenderToItem.isLeaf(Object)",3,1,3
"org.argouml.cognitive.ui.GoListToOffenderToItem.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToOffenderToItem.setRoot(Object)",1,1,1
"org.argouml.cognitive.ui.GoListToOffenderToItem.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.cognitive.ui.GoListToPosterToItem.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToPosterToItem.getChild(Object,int)",1,2,2
"org.argouml.cognitive.ui.GoListToPosterToItem.getChildCount(Object)",1,2,2
"org.argouml.cognitive.ui.GoListToPosterToItem.getChildren(Object)",3,4,5
"org.argouml.cognitive.ui.GoListToPosterToItem.getIndexOfChild(Object,Object)",1,2,2
"org.argouml.cognitive.ui.GoListToPosterToItem.getPrereqs()",1,1,1
"org.argouml.cognitive.ui.GoListToPosterToItem.getProvidedTypes()",1,1,1
"org.argouml.cognitive.ui.GoListToPosterToItem.getRoot()",1,1,1
"org.argouml.cognitive.ui.GoListToPosterToItem.isLeaf(Object)",3,1,3
"org.argouml.cognitive.ui.GoListToPosterToItem.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToPosterToItem.setRoot(Object)",1,1,1
"org.argouml.cognitive.ui.GoListToPosterToItem.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.cognitive.ui.GoListToPriorityToItem.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToPriorityToItem.getChild(Object,int)",6,4,6
"org.argouml.cognitive.ui.GoListToPriorityToItem.getChildCount(Object)",3,4,5
"org.argouml.cognitive.ui.GoListToPriorityToItem.getIndexOfChild(Object,Object)",6,4,6
"org.argouml.cognitive.ui.GoListToPriorityToItem.getPrereqs()",1,1,1
"org.argouml.cognitive.ui.GoListToPriorityToItem.getProvidedTypes()",1,1,1
"org.argouml.cognitive.ui.GoListToPriorityToItem.getRoot()",1,1,1
"org.argouml.cognitive.ui.GoListToPriorityToItem.isLeaf(Object)",3,2,4
"org.argouml.cognitive.ui.GoListToPriorityToItem.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToPriorityToItem.setRoot(Object)",1,1,1
"org.argouml.cognitive.ui.GoListToPriorityToItem.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.cognitive.ui.GoListToTypeToItem.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToTypeToItem.getChild(Object,int)",3,5,5
"org.argouml.cognitive.ui.GoListToTypeToItem.getChildCount(Object)",3,5,5
"org.argouml.cognitive.ui.GoListToTypeToItem.getIndexOfChild(Object,Object)",3,5,5
"org.argouml.cognitive.ui.GoListToTypeToItem.getPrereqs()",1,1,1
"org.argouml.cognitive.ui.GoListToTypeToItem.getProvidedTypes()",1,1,1
"org.argouml.cognitive.ui.GoListToTypeToItem.getRoot()",1,1,1
"org.argouml.cognitive.ui.GoListToTypeToItem.isLeaf(Object)",3,2,4
"org.argouml.cognitive.ui.GoListToTypeToItem.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.GoListToTypeToItem.setRoot(Object)",1,1,1
"org.argouml.cognitive.ui.GoListToTypeToItem.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.cognitive.ui.GoalsDialog.GoalsDialog(Frame)",1,1,1
"org.argouml.cognitive.ui.GoalsDialog.actionPerformed(ActionEvent)",1,2,2
"org.argouml.cognitive.ui.GoalsDialog.initMainPanel()",1,1,2
"org.argouml.cognitive.ui.GoalsDialog.stateChanged(ChangeEvent)",1,2,2
"org.argouml.cognitive.ui.KnowledgeTypeNode.KnowledgeTypeNode(String)",1,1,1
"org.argouml.cognitive.ui.KnowledgeTypeNode.getName()",1,1,1
"org.argouml.cognitive.ui.KnowledgeTypeNode.getTypes()",1,2,2
"org.argouml.cognitive.ui.KnowledgeTypeNode.toString()",1,1,1
"org.argouml.cognitive.ui.PriorityNode.PriorityNode(String,int)",1,1,1
"org.argouml.cognitive.ui.PriorityNode.getName()",1,1,1
"org.argouml.cognitive.ui.PriorityNode.getPriorities()",1,2,2
"org.argouml.cognitive.ui.PriorityNode.getPriority()",1,1,1
"org.argouml.cognitive.ui.PriorityNode.toString()",1,1,1
"org.argouml.cognitive.ui.TabToDo.TabToDo()",1,1,1
"org.argouml.cognitive.ui.TabToDo.getTarget()",1,1,1
"org.argouml.cognitive.ui.TabToDo.refresh()",1,1,1
"org.argouml.cognitive.ui.TabToDo.setTarget(Object)",1,3,3
"org.argouml.cognitive.ui.TabToDo.showDescription()",1,2,2
"org.argouml.cognitive.ui.TabToDo.showStep(JPanel)",1,3,3
"org.argouml.cognitive.ui.TabToDo.updateActionsEnabled()",1,1,1
"org.argouml.cognitive.ui.ToDoByDecision.ToDoByDecision()",1,1,1
"org.argouml.cognitive.ui.ToDoByDecision.toDoItemsAdded(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByDecision.toDoItemsChanged(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByDecision.toDoItemsRemoved(ToDoListEvent)",2,2,5
"org.argouml.cognitive.ui.ToDoByDecision.toDoListChanged(ToDoListEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoByGoal.ToDoByGoal()",1,1,1
"org.argouml.cognitive.ui.ToDoByGoal.toDoItemsAdded(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByGoal.toDoItemsChanged(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByGoal.toDoItemsRemoved(ToDoListEvent)",2,2,5
"org.argouml.cognitive.ui.ToDoByGoal.toDoListChanged(ToDoListEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoByOffender.ToDoByOffender()",1,1,1
"org.argouml.cognitive.ui.ToDoByOffender.toDoItemsAdded(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByOffender.toDoItemsChanged(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByOffender.toDoItemsRemoved(ToDoListEvent)",1,1,2
"org.argouml.cognitive.ui.ToDoByOffender.toDoListChanged(ToDoListEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoByPoster.ToDoByPoster()",1,1,1
"org.argouml.cognitive.ui.ToDoByPoster.toDoItemsAdded(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByPoster.toDoItemsChanged(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByPoster.toDoItemsRemoved(ToDoListEvent)",1,1,2
"org.argouml.cognitive.ui.ToDoByPoster.toDoListChanged(ToDoListEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoByPriority.ToDoByPriority()",1,1,1
"org.argouml.cognitive.ui.ToDoByPriority.toDoItemsAdded(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByPriority.toDoItemsChanged(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByPriority.toDoItemsRemoved(ToDoListEvent)",2,2,5
"org.argouml.cognitive.ui.ToDoByPriority.toDoListChanged(ToDoListEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoByType.ToDoByType()",1,1,1
"org.argouml.cognitive.ui.ToDoByType.toDoItemsAdded(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByType.toDoItemsChanged(ToDoListEvent)",6,3,7
"org.argouml.cognitive.ui.ToDoByType.toDoItemsRemoved(ToDoListEvent)",2,2,5
"org.argouml.cognitive.ui.ToDoByType.toDoListChanged(ToDoListEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoPane.ToDoPane()",1,1,1
"org.argouml.cognitive.ui.ToDoPane.getCurPerspective()",1,1,1
"org.argouml.cognitive.ui.ToDoPane.getMinimumSize()",1,1,1
"org.argouml.cognitive.ui.ToDoPane.getPerspectives()",1,1,1
"org.argouml.cognitive.ui.ToDoPane.getPreferredSize()",1,1,1
"org.argouml.cognitive.ui.ToDoPane.getQuadrant()",1,1,1
"org.argouml.cognitive.ui.ToDoPane.getRoot()",1,1,1
"org.argouml.cognitive.ui.ToDoPane.getSelectedObject()",1,1,1
"org.argouml.cognitive.ui.ToDoPane.isFlat()",1,1,1
"org.argouml.cognitive.ui.ToDoPane.itemStateChanged(ItemEvent)",1,2,2
"org.argouml.cognitive.ui.ToDoPane.mouseClicked(MouseEvent)",1,4,4
"org.argouml.cognitive.ui.ToDoPane.mouseEntered(MouseEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoPane.mouseExited(MouseEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoPane.mousePressed(MouseEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoPane.mouseReleased(MouseEvent)",1,1,1
"org.argouml.cognitive.ui.ToDoPane.myDoubleClick(int,TreePath)",2,2,3
"org.argouml.cognitive.ui.ToDoPane.mySingleClick(int,TreePath)",2,1,2
"org.argouml.cognitive.ui.ToDoPane.selectItem(ToDoItem)",4,2,4
"org.argouml.cognitive.ui.ToDoPane.setCurPerspective(TreeModel)",2,2,3
"org.argouml.cognitive.ui.ToDoPane.setFlat(boolean)",1,1,1
"org.argouml.cognitive.ui.ToDoPane.setPerspectives(Vector)",1,5,5
"org.argouml.cognitive.ui.ToDoPane.setRoot(ToDoList)",1,1,1
"org.argouml.cognitive.ui.ToDoPane.toDoItemsAdded(ToDoListEvent)",1,2,2
"org.argouml.cognitive.ui.ToDoPane.toDoItemsChanged(ToDoListEvent)",1,2,2
"org.argouml.cognitive.ui.ToDoPane.toDoItemsRemoved(ToDoListEvent)",1,2,2
"org.argouml.cognitive.ui.ToDoPane.toDoListChanged(ToDoListEvent)",1,2,2
"org.argouml.cognitive.ui.ToDoPane.toggleFlat()",1,2,2
"org.argouml.cognitive.ui.ToDoPane.updateCountLabel()",1,2,5
"org.argouml.cognitive.ui.ToDoPane.updateTree()",1,2,2
"org.argouml.cognitive.ui.ToDoPane.valueChanged(TreeSelectionEvent)",1,3,3
"org.argouml.cognitive.ui.ToDoPerspective.ToDoPerspective(String)",1,1,1
"org.argouml.cognitive.ui.ToDoPerspective.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.ToDoPerspective.fireTreeNodesChanged(Object,Object[],int[],Object[])",1,3,4
"org.argouml.cognitive.ui.ToDoPerspective.fireTreeNodesInserted(Object,Object[],int[],Object[])",1,3,4
"org.argouml.cognitive.ui.ToDoPerspective.fireTreeNodesRemoved(Object,Object[],int[],Object[])",1,3,4
"org.argouml.cognitive.ui.ToDoPerspective.fireTreeStructureChanged(Object[])",1,3,4
"org.argouml.cognitive.ui.ToDoPerspective.getRegisteredPerspectives()",1,1,1
"org.argouml.cognitive.ui.ToDoPerspective.getRegisteredRules()",1,1,1
"org.argouml.cognitive.ui.ToDoPerspective.registerPerspective(ToDoPerspective)",1,1,1
"org.argouml.cognitive.ui.ToDoPerspective.registerRule(TreeModelPrereqs)",1,1,1
"org.argouml.cognitive.ui.ToDoPerspective.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.cognitive.ui.ToDoPerspective.unregisterPerspective(ToDoPerspective)",1,1,1
"org.argouml.cognitive.ui.ToDoTreeRenderer.getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean)",9,15,15
"org.argouml.cognitive.ui.WizDescription.WizDescription()",1,1,1
"org.argouml.cognitive.ui.WizDescription.setTarget(Object)",9,9,9
"org.argouml.cognitive.ui.WizStep.WizStep()",1,1,1
"org.argouml.cognitive.ui.WizStep.actionPerformed(ActionEvent)",1,5,5
"org.argouml.cognitive.ui.WizStep.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.cognitive.ui.WizStep.doBack()",1,2,2
"org.argouml.cognitive.ui.WizStep.doFinsh()",1,2,2
"org.argouml.cognitive.ui.WizStep.doHelp()",2,1,2
"org.argouml.cognitive.ui.WizStep.doNext()",1,2,2
"org.argouml.cognitive.ui.WizStep.enableButtons()",3,6,6
"org.argouml.cognitive.ui.WizStep.getTarget()",1,1,1
"org.argouml.cognitive.ui.WizStep.getWizard()",2,2,2
"org.argouml.cognitive.ui.WizStep.insertUpdate(DocumentEvent)",1,1,1
"org.argouml.cognitive.ui.WizStep.refresh()",1,1,1
"org.argouml.cognitive.ui.WizStep.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.cognitive.ui.WizStep.setTarget(Object)",1,1,1
"org.argouml.cognitive.ui.WizStep.updateTabToDo()",1,2,2
"org.argouml.cognitive.ui.WizStepChoice.WizStepChoice(Wizard,String,Vector)",1,2,2
"org.argouml.cognitive.ui.WizStepChoice.actionPerformed(ActionEvent)",3,3,5
"org.argouml.cognitive.ui.WizStepChoice.getSelectedIndex()",1,1,1
"org.argouml.cognitive.ui.WizStepConfirm.WizStepConfirm()",1,1,1
"org.argouml.cognitive.ui.WizStepConfirm.WizStepConfirm(Wizard,String)",1,1,1
"org.argouml.cognitive.ui.WizStepCue.WizStepCue(Wizard,String)",1,1,1
"org.argouml.cognitive.ui.WizStepManyTextFields.WizStepManyTextFields(Wizard,String,Vector)",1,2,2
"org.argouml.cognitive.ui.WizStepManyTextFields.getStrings()",1,2,2
"org.argouml.cognitive.ui.WizStepTextField.WizStepTextField()",1,1,1
"org.argouml.cognitive.ui.WizStepTextField.WizStepTextField(Wizard,String,String,String)",1,1,1
"org.argouml.cognitive.ui.WizStepTextField.getText()",1,1,1
"org.argouml.kernel.ArgoFileFilter.accept(File)",4,1,4
"org.argouml.kernel.ArgoFileFilter.getDescription()",1,1,1
"org.argouml.kernel.ArgoFileFilter.getExtension(File)",3,3,4
"org.argouml.kernel.ChildGenDMElements.gen(Object)",2,2,2
"org.argouml.kernel.DelayedChangeNotify.DelayedChangeNotify(DelayedVChangeListener,PropertyChangeEvent)",1,1,1
"org.argouml.kernel.DelayedChangeNotify.run()",1,1,1
"org.argouml.kernel.History.History()",1,1,1
"org.argouml.kernel.History.addHistoryListener(HistoryListener)",1,1,1
"org.argouml.kernel.History.addItem(HistoryItem)",1,1,1
"org.argouml.kernel.History.addItem(String,String)",1,1,1
"org.argouml.kernel.History.addItem(String,String,Object,Object,Object)",1,1,1
"org.argouml.kernel.History.addItem(ToDoItem,String)",1,1,1
"org.argouml.kernel.History.addItemCritique(ToDoItem)",1,1,1
"org.argouml.kernel.History.addItemManipulation(String,String,Object,Object,Object)",1,1,1
"org.argouml.kernel.History.addItemResolution(ToDoItem,String)",1,1,1
"org.argouml.kernel.History.fireHistoryAdded(HistoryItem,int)",1,3,4
"org.argouml.kernel.History.getItems()",1,1,1
"org.argouml.kernel.History.removeHistoryListener(HistoryListener)",1,1,1
"org.argouml.kernel.HistoryEvent.HistoryEvent(History,HistoryItem,int)",1,1,1
"org.argouml.kernel.HistoryEvent.getIndex()",1,1,1
"org.argouml.kernel.HistoryItem.HistoryItem(String,String)",1,1,1
"org.argouml.kernel.HistoryItem.HistoryItem(String,String,Object,Object,Object)",1,1,1
"org.argouml.kernel.HistoryItem.HistoryItem(ToDoItem,String)",1,1,1
"org.argouml.kernel.HistoryItem.getDescription()",1,1,1
"org.argouml.kernel.HistoryItem.getHeadline()",1,1,1
"org.argouml.kernel.HistoryItem.getRelatedItems()",1,1,1
"org.argouml.kernel.HistoryItem.setRelatedItems(Vector)",1,1,1
"org.argouml.kernel.HistoryItem.toString()",2,1,2
"org.argouml.kernel.HistoryItemManipulation.HistoryItemManipulation(String,String)",1,1,1
"org.argouml.kernel.HistoryItemManipulation.HistoryItemManipulation(String,String,Object,Object,Object)",1,1,1
"org.argouml.kernel.HistoryItemManipulation.toString()",2,1,2
"org.argouml.kernel.HistoryItemResolve.HistoryItemResolve(ToDoItem)",1,1,1
"org.argouml.kernel.HistoryItemResolve.HistoryItemResolve(ToDoItem,String)",1,1,1
"org.argouml.kernel.HistoryItemResolve.toString()",2,1,2
"org.argouml.kernel.PredInstanceOf.PredInstanceOf(Class)",1,1,1
"org.argouml.kernel.PredInstanceOf.predicate(Object)",1,1,1
"org.argouml.kernel.Project.Project()",1,1,1
"org.argouml.kernel.Project.Project(File)",1,1,1
"org.argouml.kernel.Project.Project(MModel)",1,1,2
"org.argouml.kernel.Project.Project(URL)",1,1,1
"org.argouml.kernel.Project.addDiagram(ArgoDiagram)",1,1,1
"org.argouml.kernel.Project.addMember(ArgoDiagram)",1,1,1
"org.argouml.kernel.Project.addMember(MModel)",4,5,6
"org.argouml.kernel.Project.addMember(String,String)",5,3,5
"org.argouml.kernel.Project.addModel(MNamespace)",1,2,2
"org.argouml.kernel.Project.addSearchPath(String)",1,1,1
"org.argouml.kernel.Project.addStat(Vector,String,int)",1,1,1
"org.argouml.kernel.Project.addVetoableChangeListener(VetoableChangeListener)",1,1,1
"org.argouml.kernel.Project.defineType(MClassifier)",1,1,2
"org.argouml.kernel.Project.findMemberByName(String)",3,2,3
"org.argouml.kernel.Project.findMemberURLInSearchPath(String)",1,3,3
"org.argouml.kernel.Project.findType(String)",4,6,8
"org.argouml.kernel.Project.findTypeInModel(String,MNamespace)",5,5,7
"org.argouml.kernel.Project.getAuthorname()",1,1,1
"org.argouml.kernel.Project.getBaseName()",3,3,3
"org.argouml.kernel.Project.getCurrentNamespace()",1,1,1
"org.argouml.kernel.Project.getDefinedTypes()",1,1,1
"org.argouml.kernel.Project.getDefinedTypesVector()",1,1,1
"org.argouml.kernel.Project.getDescription()",1,1,1
"org.argouml.kernel.Project.getDiagrams()",1,1,1
"org.argouml.kernel.Project.getGenerationPrefs()",1,1,1
"org.argouml.kernel.Project.getHistoryFile()",1,1,1
"org.argouml.kernel.Project.getInitialTarget()",3,3,3
"org.argouml.kernel.Project.getMembers()",1,1,1
"org.argouml.kernel.Project.getModel()",2,1,2
"org.argouml.kernel.Project.getModels()",1,1,1
"org.argouml.kernel.Project.getName()",2,1,2
"org.argouml.kernel.Project.getPresentationCountFor(MModelElement)",1,2,2
"org.argouml.kernel.Project.getSearchPath()",1,1,1
"org.argouml.kernel.Project.getStats()",1,1,1
"org.argouml.kernel.Project.getURL()",1,1,1
"org.argouml.kernel.Project.getVersion()",1,1,1
"org.argouml.kernel.Project.getVetoSupport()",1,1,2
"org.argouml.kernel.Project.isInTrash(Object)",1,1,1
"org.argouml.kernel.Project.load(URL)",1,1,1
"org.argouml.kernel.Project.loadAllMembers()",1,1,1
"org.argouml.kernel.Project.loadMembersOfType(String)",2,4,6
"org.argouml.kernel.Project.loadProject(URL)",1,6,7
"org.argouml.kernel.Project.loadZippedProjectMembers(URL)",1,5,5
"org.argouml.kernel.Project.makeEmptyProject()",1,1,2
"org.argouml.kernel.Project.moveFromTrash(Object)",1,1,1
"org.argouml.kernel.Project.moveToTrash(Object)",2,1,2
"org.argouml.kernel.Project.needsSave()",1,1,1
"org.argouml.kernel.Project.postLoad()",1,2,2
"org.argouml.kernel.Project.postSave()",1,2,2
"org.argouml.kernel.Project.preSave()",1,2,2
"org.argouml.kernel.Project.removeDiagram(ArgoDiagram)",1,1,1
"org.argouml.kernel.Project.removeMember(ArgoDiagram)",1,1,1
"org.argouml.kernel.Project.removeVetoableChangeListener(VetoableChangeListener)",1,1,1
"org.argouml.kernel.Project.resetStats()",1,1,1
"org.argouml.kernel.Project.saveAllMembers(String,boolean)",1,1,1
"org.argouml.kernel.Project.saveAllMembers(String,boolean,Writer,ZipOutputStream)",2,7,7
"org.argouml.kernel.Project.setAuthorname(String)",1,1,1
"org.argouml.kernel.Project.setCurrentNamespace(MNamespace)",1,1,1
"org.argouml.kernel.Project.setDefinedTypes(Hashtable)",1,1,1
"org.argouml.kernel.Project.setDescription(String)",1,1,1
"org.argouml.kernel.Project.setFile(File)",1,3,3
"org.argouml.kernel.Project.setGenerationPrefs(GenerationPreferences)",1,1,1
"org.argouml.kernel.Project.setHistoryFile(String)",1,1,1
"org.argouml.kernel.Project.setName(String)",1,2,2
"org.argouml.kernel.Project.setNeedsSave(boolean)",1,1,1
"org.argouml.kernel.Project.setStat(String,int)",1,23,23
"org.argouml.kernel.Project.setURL(URL)",1,1,1
"org.argouml.kernel.Project.setVersion(String)",1,1,1
"org.argouml.kernel.Project.trashInternal(Object)",1,6,6
"org.argouml.kernel.Project.updateMemberNames()",1,2,2
"org.argouml.kernel.ProjectMember.ProjectMember(String,Project)",1,1,1
"org.argouml.kernel.ProjectMember.getName()",1,2,2
"org.argouml.kernel.ProjectMember.getProject()",1,1,1
"org.argouml.kernel.ProjectMember.getURL()",1,1,1
"org.argouml.kernel.ProjectMember.setName(String)",1,1,1
"org.argouml.kernel.ProjectMember.updateProjectName()",2,3,4
"org.argouml.kernel.ResetStatsLater.run()",1,1,1
"org.argouml.kernel.Wizard.Wizard()",1,1,1
"org.argouml.kernel.Wizard.back()",1,2,3
"org.argouml.kernel.Wizard.canFinish()",1,1,1
"org.argouml.kernel.Wizard.canGoBack()",1,1,1
"org.argouml.kernel.Wizard.canGoNext()",1,1,1
"org.argouml.kernel.Wizard.doAction()",1,1,1
"org.argouml.kernel.Wizard.finish()",1,3,3
"org.argouml.kernel.Wizard.getCurrentPanel()",1,1,1
"org.argouml.kernel.Wizard.getPanel(int)",2,3,3
"org.argouml.kernel.Wizard.getProgress()",1,1,1
"org.argouml.kernel.Wizard.getToDoItem()",1,1,1
"org.argouml.kernel.Wizard.isFinsished()",1,1,1
"org.argouml.kernel.Wizard.isStarted()",1,1,1
"org.argouml.kernel.Wizard.next()",1,4,4
"org.argouml.kernel.Wizard.redoAction()",1,1,1
"org.argouml.kernel.Wizard.redoAction(int)",1,1,1
"org.argouml.kernel.Wizard.setToDoItem(ToDoItem)",1,1,1
"org.argouml.kernel.Wizard.undoAction()",1,1,1
"org.argouml.kernel.Wizard.undoAction(int)",1,1,1
"org.argouml.language.NotationResourceBundle.getContents()",1,1,1
"org.argouml.language.NotationResourceBundle.getModuleAuthor()",1,1,1
"org.argouml.language.NotationResourceBundle.getModuleDescription()",1,1,1
"org.argouml.language.NotationResourceBundle.getModuleKey()",1,1,1
"org.argouml.language.NotationResourceBundle.getModuleName()",1,1,1
"org.argouml.language.NotationResourceBundle.getModuleVersion()",1,1,1
"org.argouml.language.helpers.NotationHelper.NotationHelper(NotationName)",1,1,1
"org.argouml.language.helpers.NotationHelper.generate(Object)",23,21,23
"org.argouml.language.helpers.NotationHelper.generateClassifierRef(MClassifier)",2,1,2
"org.argouml.language.helpers.NotationHelper.generateExpression(MConstraint)",2,1,2
"org.argouml.language.helpers.NotationHelper.generateExpression(MExpression)",2,1,2
"org.argouml.language.helpers.NotationHelper.generateName(String)",1,1,1
"org.argouml.language.helpers.NotationHelper.generateStereotype(MStereotype)",1,1,1
"org.argouml.language.helpers.NotationHelper.generateUninterpreted(String)",2,1,2
"org.argouml.language.helpers.NotationHelper.getLeftGuillemot()",1,1,2
"org.argouml.language.helpers.NotationHelper.getNotation()",1,1,1
"org.argouml.language.helpers.NotationHelper.getRightGuillemot()",1,1,2
"org.argouml.language.java.Token.AttributeKey.AttributeKey()",1,1,1
"org.argouml.language.java.Token.AttributeKey.toString()",1,1,1
"org.argouml.language.java.Token.Declaration.Declaration(String,int)",1,1,1
"org.argouml.language.java.Token.MExpression.MExpression(String,int)",1,1,1
"org.argouml.language.java.Token.Modifier.Modifier(String,int)",1,1,1
"org.argouml.language.java.Token.Operator.Operator(String,int)",1,1,1
"org.argouml.language.java.Token.Punctuation.Punctuation(String,int)",1,1,1
"org.argouml.language.java.Token.Special.Special(String,int)",1,1,1
"org.argouml.language.java.Token.Statement.Statement(String,int)",1,1,1
"org.argouml.language.java.Token.Token(String,int)",1,1,1
"org.argouml.language.java.Token.Type.Type(String,int)",1,1,1
"org.argouml.language.java.Token.Value.Value(String,int)",1,1,1
"org.argouml.language.java.Token.equals(Object)",2,1,2
"org.argouml.language.java.Token.getCategory()",1,1,1
"org.argouml.language.java.Token.getScanValue()",1,1,1
"org.argouml.language.java.Token.hashCode()",1,1,1
"org.argouml.language.java.Token.toString()",1,1,1
"org.argouml.language.java.cognitive.critics.CrMultipleInheritance.CrMultipleInheritance()",1,1,1
"org.argouml.language.java.cognitive.critics.CrMultipleInheritance.getWizardClass(ToDoItem)",1,1,1
"org.argouml.language.java.cognitive.critics.CrMultipleInheritance.initWizard(Wizard)",1,2,2
"org.argouml.language.java.cognitive.critics.CrMultipleInheritance.predicate2(Object,Designer)",3,2,4
"org.argouml.language.java.cognitive.critics.CrMultipleInheritance.sd(String)",1,1,1
"org.argouml.language.java.generator.AnonymousClassCodePiece.AnonymousClassCodePiece(CodePiece,int)",1,1,1
"org.argouml.language.java.generator.AnonymousClassCodePiece.getEndLine()",1,1,1
"org.argouml.language.java.generator.AnonymousClassCodePiece.getEndPosition()",1,1,1
"org.argouml.language.java.generator.AnonymousClassCodePiece.getStartLine()",1,1,1
"org.argouml.language.java.generator.AnonymousClassCodePiece.getStartPosition()",1,1,1
"org.argouml.language.java.generator.AnonymousClassCodePiece.getText()",1,1,1
"org.argouml.language.java.generator.AnonymousClassCodePiece.write(Writer,Stack,int)",1,2,2
"org.argouml.language.java.generator.AttributeCodePiece.AttributeCodePiece(CodePiece,CodePiece,Vector)",1,3,3
"org.argouml.language.java.generator.AttributeCodePiece.getEndLine()",1,1,1
"org.argouml.language.java.generator.AttributeCodePiece.getEndPosition()",1,1,1
"org.argouml.language.java.generator.AttributeCodePiece.getStartLine()",1,1,1
"org.argouml.language.java.generator.AttributeCodePiece.getStartPosition()",1,1,1
"org.argouml.language.java.generator.AttributeCodePiece.getText()",1,1,1
"org.argouml.language.java.generator.AttributeCodePiece.write(Writer,Stack,int)",1,12,12
"org.argouml.language.java.generator.ClassCodePiece.ClassCodePiece(CodePiece,String)",1,1,1
"org.argouml.language.java.generator.ClassCodePiece.getEndLine()",1,1,1
"org.argouml.language.java.generator.ClassCodePiece.getEndPosition()",1,1,1
"org.argouml.language.java.generator.ClassCodePiece.getStartLine()",1,1,1
"org.argouml.language.java.generator.ClassCodePiece.getStartPosition()",1,1,1
"org.argouml.language.java.generator.ClassCodePiece.getText()",1,1,1
"org.argouml.language.java.generator.ClassCodePiece.write(Writer,Stack,int)",1,12,12
"org.argouml.language.java.generator.ClassifierEndCodePiece.ClassifierEndCodePiece(CodePiece)",1,1,1
"org.argouml.language.java.generator.ClassifierEndCodePiece.getEndLine()",1,1,1
"org.argouml.language.java.generator.ClassifierEndCodePiece.getEndPosition()",1,1,1
"org.argouml.language.java.generator.ClassifierEndCodePiece.getStartLine()",1,1,1
"org.argouml.language.java.generator.ClassifierEndCodePiece.getStartPosition()",1,1,1
"org.argouml.language.java.generator.ClassifierEndCodePiece.getText()",1,1,1
"org.argouml.language.java.generator.ClassifierEndCodePiece.write(Writer,Stack,int)",1,7,7
"org.argouml.language.java.generator.CodeGenerator.CodeGenerator()",1,1,1
"org.argouml.language.java.generator.CodeGenerator.generate(MClassifier,File)",1,3,3
"org.argouml.language.java.generator.CodeGenerator.generateAttribute(MAttribute,MClassifier,Writer)",1,1,1
"org.argouml.language.java.generator.CodeGenerator.generateClass(MClass,Writer)",1,7,7
"org.argouml.language.java.generator.CodeGenerator.generateInterface(MInterface,Writer)",1,7,7
"org.argouml.language.java.generator.CodeGenerator.generateJavadoc(MModelElement,Writer)",6,12,16
"org.argouml.language.java.generator.CodeGenerator.generateOperation(MOperation,MClassifier,Writer)",1,3,3
"org.argouml.language.java.generator.CodeGenerator.process(MClassifier,String)",1,2,2
"org.argouml.language.java.generator.CodeGenerator.update(MClassifier,File)",1,1,1
"org.argouml.language.java.generator.CodePieceCollector.CodePieceCollector()",1,1,1
"org.argouml.language.java.generator.CodePieceCollector.add(NamedCodePiece)",3,4,5
"org.argouml.language.java.generator.CodePieceCollector.filter(File,File,MNamespace)",1,7,7
"org.argouml.language.java.generator.CompositeCodePiece.CompositeCodePiece(CodePiece)",1,2,2
"org.argouml.language.java.generator.CompositeCodePiece.add(CodePiece)",1,2,2
"org.argouml.language.java.generator.CompositeCodePiece.getEndLine()",1,1,1
"org.argouml.language.java.generator.CompositeCodePiece.getEndPosition()",1,1,1
"org.argouml.language.java.generator.CompositeCodePiece.getStartLine()",1,1,1
"org.argouml.language.java.generator.CompositeCodePiece.getStartPosition()",1,1,1
"org.argouml.language.java.generator.CompositeCodePiece.getText()",1,2,4
"org.argouml.language.java.generator.GeneratorJava.Generate(Object)",1,1,1
"org.argouml.language.java.generator.GeneratorJava.GenerateFile(MClassifier,String)",7,12,16
"org.argouml.language.java.generator.GeneratorJava.GeneratorJava()",1,1,1
"org.argouml.language.java.generator.GeneratorJava.canParse()",1,1,1
"org.argouml.language.java.generator.GeneratorJava.canParse(Object)",1,1,1
"org.argouml.language.java.generator.GeneratorJava.generateAction(MAction)",2,3,3
"org.argouml.language.java.generator.GeneratorJava.generateAssociation(MAssociation)",1,1,1
"org.argouml.language.java.generator.GeneratorJava.generateAssociationEnd(MAssociationEnd)",2,9,11
"org.argouml.language.java.generator.GeneratorJava.generateAssociationFrom(MAssociation,MAssociationEnd)",1,3,3
"org.argouml.language.java.generator.GeneratorJava.generateAttribute(MAttribute,boolean)",1,5,6
"org.argouml.language.java.generator.GeneratorJava.generateChangability(MStructuralFeature)",2,1,2
"org.argouml.language.java.generator.GeneratorJava.generateClassList(Collection)",2,2,4
"org.argouml.language.java.generator.GeneratorJava.generateClassifier(MClassifier)",3,23,27
"org.argouml.language.java.generator.GeneratorJava.generateConstraint(MConstraint)",2,3,4
"org.argouml.language.java.generator.GeneratorJava.generateConstraintEnrichedDocComment(MModelElement)",6,12,18
"org.argouml.language.java.generator.GeneratorJava.generateConstraintEnrichedDocComment(MModelElement,MAssociationEnd)",2,4,5
"org.argouml.language.java.generator.GeneratorJava.generateConstraints(MModelElement)",2,4,5
"org.argouml.language.java.generator.GeneratorJava.generateDefaultReturnStatement(MClassifier)",10,1,10
"org.argouml.language.java.generator.GeneratorJava.generateGeneralzation(Collection)",2,2,4
"org.argouml.language.java.generator.GeneratorJava.generateGuard(MGuard)",2,2,2
"org.argouml.language.java.generator.GeneratorJava.generateHeader(MClassifier,String,String)",1,1,2
"org.argouml.language.java.generator.GeneratorJava.generateMessage(MMessage)",2,1,2
"org.argouml.language.java.generator.GeneratorJava.generateMethodBody(MOperation)",5,6,6
"org.argouml.language.java.generator.GeneratorJava.generateMultiplicity(MMultiplicity)",4,2,6
"org.argouml.language.java.generator.GeneratorJava.generateMultiplicityRange(MMultiplicityRange)",5,4,6
"org.argouml.language.java.generator.GeneratorJava.generateOperation(MOperation,boolean)",1,8,9
"org.argouml.language.java.generator.GeneratorJava.generatePackage(MPackage)",1,3,3
"org.argouml.language.java.generator.GeneratorJava.generateParameter(MParameter)",1,1,1
"org.argouml.language.java.generator.GeneratorJava.generateScope(MFeature)",2,1,2
"org.argouml.language.java.generator.GeneratorJava.generateSpecification(MClass)",2,2,4
"org.argouml.language.java.generator.GeneratorJava.generateState(MState)",1,1,1
"org.argouml.language.java.generator.GeneratorJava.generateStateBody(MState)",1,5,9
"org.argouml.language.java.generator.GeneratorJava.generateStereotype(MStereotype)",1,1,1
"org.argouml.language.java.generator.GeneratorJava.generateTaggedValue(MTaggedValue)",3,3,5
"org.argouml.language.java.generator.GeneratorJava.generateTaggedValues(MModelElement)",2,7,8
"org.argouml.language.java.generator.GeneratorJava.generateTransition(MTransition)",1,1,4
"org.argouml.language.java.generator.GeneratorJava.generateVisibility(MFeature)",4,1,4
"org.argouml.language.java.generator.GeneratorJava.generateVisibility(MVisibilityKind)",4,1,4
"org.argouml.language.java.generator.GeneratorJava.getInstance()",1,1,1
"org.argouml.language.java.generator.GeneratorJava.getModuleAuthor()",1,1,1
"org.argouml.language.java.generator.GeneratorJava.getModuleDescription()",1,1,1
"org.argouml.language.java.generator.GeneratorJava.getModuleKey()",1,1,1
"org.argouml.language.java.generator.GeneratorJava.getModuleName()",1,1,1
"org.argouml.language.java.generator.GeneratorJava.getModuleVersion()",1,1,1
"org.argouml.language.java.generator.GeneratorJava.update(MClassifier,File)",1,1,1
"org.argouml.language.java.generator.InterfaceCodePiece.InterfaceCodePiece(CodePiece,String)",1,1,1
"org.argouml.language.java.generator.InterfaceCodePiece.getEndLine()",1,1,1
"org.argouml.language.java.generator.InterfaceCodePiece.getEndPosition()",1,1,1
"org.argouml.language.java.generator.InterfaceCodePiece.getStartLine()",1,1,1
"org.argouml.language.java.generator.InterfaceCodePiece.getStartPosition()",1,1,1
"org.argouml.language.java.generator.InterfaceCodePiece.getText()",1,1,1
"org.argouml.language.java.generator.InterfaceCodePiece.write(Writer,Stack,int)",1,9,9
"org.argouml.language.java.generator.JavaLexer.JavaLexer(InputBuffer)",1,1,1
"org.argouml.language.java.generator.JavaLexer.JavaLexer(InputStream)",1,1,1
"org.argouml.language.java.generator.JavaLexer.JavaLexer(LexerSharedInputState)",1,1,1
"org.argouml.language.java.generator.JavaLexer.JavaLexer(Reader)",1,1,1
"org.argouml.language.java.generator.JavaLexer.mASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mBAND(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mBAND_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mBNOT(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mBOR(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mBOR_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mBSR(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mBSR_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mBXOR(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mBXOR_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mCHAR_LITERAL(boolean)",3,4,6
"org.argouml.language.java.generator.JavaLexer.mCOLON(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mCOMMA(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mDEC(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mDIV(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mDIV_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mEQUAL(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mESC(boolean)",13,50,52
"org.argouml.language.java.generator.JavaLexer.mEXPONENT(boolean)",6,12,15
"org.argouml.language.java.generator.JavaLexer.mFLOAT_SUFFIX(boolean)",2,7,9
"org.argouml.language.java.generator.JavaLexer.mGE(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mGT(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mHEX_DIGIT(boolean)",2,6,8
"org.argouml.language.java.generator.JavaLexer.mIDENT(boolean)",4,14,16
"org.argouml.language.java.generator.JavaLexer.mINC(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mJAVADOC(boolean)",7,23,25
"org.argouml.language.java.generator.JavaLexer.mLAND(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mLBRACK(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mLCURLY(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mLE(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mLNOT(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mLOR(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mLPAREN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mLT(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mMINUS(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mMINUS_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mML_COMMENT(boolean)",11,37,39
"org.argouml.language.java.generator.JavaLexer.mMOD(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mMOD_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mNOT_EQUAL(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mNUM_INT(boolean)",25,54,56
"org.argouml.language.java.generator.JavaLexer.mPLUS(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mPLUS_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mQUESTION(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mRBRACK(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mRCURLY(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mRPAREN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mSEMI(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mSL(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mSL_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mSL_COMMENT(boolean)",4,8,10
"org.argouml.language.java.generator.JavaLexer.mSR(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mSR_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mSTAR(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mSTAR_ASSIGN(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mSTRING_LITERAL(boolean)",4,5,7
"org.argouml.language.java.generator.JavaLexer.mVOCAB(boolean)",1,2,4
"org.argouml.language.java.generator.JavaLexer.mWS(boolean)",6,12,14
"org.argouml.language.java.generator.JavaLexer.nextToken()",43,106,108
"org.argouml.language.java.generator.JavaRecognizer.JavaRecognizer(ParserSharedInputState)",1,1,1
"org.argouml.language.java.generator.JavaRecognizer.JavaRecognizer(TokenBuffer)",1,1,1
"org.argouml.language.java.generator.JavaRecognizer.JavaRecognizer(TokenBuffer,int)",1,1,1
"org.argouml.language.java.generator.JavaRecognizer.JavaRecognizer(TokenStream)",1,1,1
"org.argouml.language.java.generator.JavaRecognizer.JavaRecognizer(TokenStream,int)",1,1,1
"org.argouml.language.java.generator.JavaRecognizer.aCase()",2,8,8
"org.argouml.language.java.generator.JavaRecognizer.additiveExpression()",4,11,11
"org.argouml.language.java.generator.JavaRecognizer.andExpression()",3,6,6
"org.argouml.language.java.generator.JavaRecognizer.argList()",2,4,5
"org.argouml.language.java.generator.JavaRecognizer.arrayInitializer()",6,14,16
"org.argouml.language.java.generator.JavaRecognizer.assignmentExpression()",4,30,31
"org.argouml.language.java.generator.JavaRecognizer.builtInType()",2,20,29
"org.argouml.language.java.generator.JavaRecognizer.builtInTypeSpec()",3,8,9
"org.argouml.language.java.generator.JavaRecognizer.caseSList()",3,4,4
"org.argouml.language.java.generator.JavaRecognizer.casesGroup()",4,8,8
"org.argouml.language.java.generator.JavaRecognizer.classBlock()",3,10,10
"org.argouml.language.java.generator.JavaRecognizer.classDefinition(CodePiece)",1,10,10
"org.argouml.language.java.generator.JavaRecognizer.classTypeSpec()",3,8,9
"org.argouml.language.java.generator.JavaRecognizer.compilationUnit(CodePieceCollector)",6,11,13
"org.argouml.language.java.generator.JavaRecognizer.compoundStatement()",3,6,6
"org.argouml.language.java.generator.JavaRecognizer.conditionalExpression()",2,8,9
"org.argouml.language.java.generator.JavaRecognizer.constant()",2,10,10
"org.argouml.language.java.generator.JavaRecognizer.ctorHead(CompositeCodePiece,CompositeCodePiece)",2,9,10
"org.argouml.language.java.generator.JavaRecognizer.declaration()",1,4,4
"org.argouml.language.java.generator.JavaRecognizer.declaratorBrackets()",3,7,7
"org.argouml.language.java.generator.JavaRecognizer.equalityExpression()",4,11,11
"org.argouml.language.java.generator.JavaRecognizer.exclusiveOrExpression()",3,6,6
"org.argouml.language.java.generator.JavaRecognizer.expression()",1,2,2
"org.argouml.language.java.generator.JavaRecognizer.expressionList()",3,6,6
"org.argouml.language.java.generator.JavaRecognizer.field()",13,49,52
"org.argouml.language.java.generator.JavaRecognizer.forCond()",2,4,5
"org.argouml.language.java.generator.JavaRecognizer.forInit()",4,9,10
"org.argouml.language.java.generator.JavaRecognizer.forIter()",2,4,5
"org.argouml.language.java.generator.JavaRecognizer.handler()",1,6,6
"org.argouml.language.java.generator.JavaRecognizer.identifier()",3,8,9
"org.argouml.language.java.generator.JavaRecognizer.identifierStar()",4,15,17
"org.argouml.language.java.generator.JavaRecognizer.implementsClause()",4,12,14
"org.argouml.language.java.generator.JavaRecognizer.importDefinition()",1,4,4
"org.argouml.language.java.generator.JavaRecognizer.inclusiveOrExpression()",3,6,6
"org.argouml.language.java.generator.JavaRecognizer.initializer()",2,6,6
"org.argouml.language.java.generator.JavaRecognizer.interfaceDefinition(CodePiece)",1,8,8
"org.argouml.language.java.generator.JavaRecognizer.interfaceExtends()",4,12,14
"org.argouml.language.java.generator.JavaRecognizer.logicalAndExpression()",3,6,6
"org.argouml.language.java.generator.JavaRecognizer.logicalOrExpression()",3,6,6
"org.argouml.language.java.generator.JavaRecognizer.modifier()",2,24,35
"org.argouml.language.java.generator.JavaRecognizer.modifiers()",3,6,6
"org.argouml.language.java.generator.JavaRecognizer.multiplicativeExpression()",4,12,12
"org.argouml.language.java.generator.JavaRecognizer.newArrayDeclarator()",5,10,11
"org.argouml.language.java.generator.JavaRecognizer.newExpression()",6,17,19
"org.argouml.language.java.generator.JavaRecognizer.packageDefinition()",1,6,7
"org.argouml.language.java.generator.JavaRecognizer.parameterDeclaration()",1,6,7
"org.argouml.language.java.generator.JavaRecognizer.parameterDeclarationList()",4,10,12
"org.argouml.language.java.generator.JavaRecognizer.parameterDeclaratorBrackets()",3,5,5
"org.argouml.language.java.generator.JavaRecognizer.parameterModifier()",2,4,5
"org.argouml.language.java.generator.JavaRecognizer.postfixExpression()",13,45,47
"org.argouml.language.java.generator.JavaRecognizer.primaryExpression()",4,30,30
"org.argouml.language.java.generator.JavaRecognizer.relationalExpression()",5,20,20
"org.argouml.language.java.generator.JavaRecognizer.returnTypeBrackersOnEndOfMethodHead()",3,8,8
"org.argouml.language.java.generator.JavaRecognizer.shiftExpression()",4,13,13
"org.argouml.language.java.generator.JavaRecognizer.statement()",19,108,112
"org.argouml.language.java.generator.JavaRecognizer.superClassClause()",2,6,8
"org.argouml.language.java.generator.JavaRecognizer.throwsClause()",3,7,7
"org.argouml.language.java.generator.JavaRecognizer.tryBlock()",4,10,11
"org.argouml.language.java.generator.JavaRecognizer.type()",2,6,6
"org.argouml.language.java.generator.JavaRecognizer.typeDefinition()",6,16,17
"org.argouml.language.java.generator.JavaRecognizer.typeSpec()",2,6,6
"org.argouml.language.java.generator.JavaRecognizer.unaryExpression()",2,16,16
"org.argouml.language.java.generator.JavaRecognizer.unaryExpressionNotPlusMinus()",6,26,27
"org.argouml.language.java.generator.JavaRecognizer.varInitializer()",2,6,8
"org.argouml.language.java.generator.JavaRecognizer.variableDeclarator()",1,5,6
"org.argouml.language.java.generator.JavaRecognizer.variableDefinitions()",3,8,8
"org.argouml.language.java.generator.OperationCodePiece.OperationCodePiece(CodePiece,CodePiece,String)",1,2,2
"org.argouml.language.java.generator.OperationCodePiece.getEndLine()",1,1,1
"org.argouml.language.java.generator.OperationCodePiece.getEndPosition()",1,1,1
"org.argouml.language.java.generator.OperationCodePiece.getStartLine()",1,1,1
"org.argouml.language.java.generator.OperationCodePiece.getStartPosition()",1,1,1
"org.argouml.language.java.generator.OperationCodePiece.getText()",1,1,1
"org.argouml.language.java.generator.OperationCodePiece.write(Writer,Stack,int)",1,21,21
"org.argouml.language.java.generator.PackageCodePiece.PackageCodePiece(CodePiece)",1,1,1
"org.argouml.language.java.generator.PackageCodePiece.getEndLine()",1,1,1
"org.argouml.language.java.generator.PackageCodePiece.getEndPosition()",1,1,1
"org.argouml.language.java.generator.PackageCodePiece.getStartLine()",1,1,1
"org.argouml.language.java.generator.PackageCodePiece.getStartPosition()",1,1,1
"org.argouml.language.java.generator.PackageCodePiece.getText()",1,1,1
"org.argouml.language.java.generator.PackageCodePiece.write(Writer,Stack,int)",1,2,2
"org.argouml.language.java.generator.ParseState.ParseState(MClassifier)",1,1,1
"org.argouml.language.java.generator.ParseState.ParseState(MNamespace)",1,1,1
"org.argouml.language.java.generator.ParseState.getClassifier()",1,1,1
"org.argouml.language.java.generator.ParseState.getNamespace()",1,1,1
"org.argouml.language.java.generator.ParseState.getNewFeatures()",1,1,1
"org.argouml.language.java.generator.ParseState.getNewInnerClasses()",1,1,1
"org.argouml.language.java.generator.ParseState.newClassifier(String)",1,2,2
"org.argouml.language.java.generator.ParseState.newFeature(MFeature)",1,1,1
"org.argouml.language.java.generator.SimpleCodePiece.SimpleCodePiece(String,int,int,int)",1,1,1
"org.argouml.language.java.generator.SimpleCodePiece.SimpleCodePiece(Token)",1,1,1
"org.argouml.language.java.generator.SimpleCodePiece.getEndLine()",1,1,1
"org.argouml.language.java.generator.SimpleCodePiece.getEndPosition()",1,1,1
"org.argouml.language.java.generator.SimpleCodePiece.getStartLine()",1,1,1
"org.argouml.language.java.generator.SimpleCodePiece.getStartPosition()",1,1,1
"org.argouml.language.java.generator.SimpleCodePiece.getText()",1,1,1
"org.argouml.language.java.ui.JavaContext.JavaContext()",1,3,3
"org.argouml.language.java.ui.JavaContext.JavaView.JavaView(Element)",1,1,1
"org.argouml.language.java.ui.JavaContext.JavaView.drawUnselectedText(Graphics,int,int,int,int)",1,3,5
"org.argouml.language.java.ui.JavaContext.JavaView.paint(Graphics,Shape)",1,1,1
"org.argouml.language.java.ui.JavaContext.JavaView.updateScanner(int)",1,4,4
"org.argouml.language.java.ui.JavaContext.create(Element)",1,1,1
"org.argouml.language.java.ui.JavaContext.getFont(int)",2,3,4
"org.argouml.language.java.ui.JavaContext.getForeground(int)",2,3,5
"org.argouml.language.java.ui.JavaContext.getStyleForScanValue(int)",2,1,2
"org.argouml.language.java.ui.JavaDocument.AttributeKey.AttributeKey()",1,1,1
"org.argouml.language.java.ui.JavaDocument.AttributeKey.toString()",1,1,1
"org.argouml.language.java.ui.JavaDocument.DocumentInputStream.DocumentInputStream(int,int)",1,1,2
"org.argouml.language.java.ui.JavaDocument.DocumentInputStream.loadSegment()",1,1,2
"org.argouml.language.java.ui.JavaDocument.DocumentInputStream.read()",3,2,3
"org.argouml.language.java.ui.JavaDocument.JavaDocument()",1,1,1
"org.argouml.language.java.ui.JavaDocument.LocalEnvironment.error(Object,int,String,Object,Object,Object)",1,1,1
"org.argouml.language.java.ui.JavaDocument.Scanner.Scanner()",1,1,1
"org.argouml.language.java.ui.JavaDocument.Scanner.getEndOffset()",1,1,1
"org.argouml.language.java.ui.JavaDocument.Scanner.getStartOffset()",1,1,1
"org.argouml.language.java.ui.JavaDocument.Scanner.setRange(int,int)",1,1,1
"org.argouml.language.java.ui.JavaDocument.createScanner()",1,1,2
"org.argouml.language.java.ui.JavaDocument.getScannerStart(int)",1,3,3
"org.argouml.language.java.ui.JavaDocument.insertUpdate(DefaultDocumentEvent,AttributeSet)",1,5,8
"org.argouml.language.java.ui.JavaDocument.removeUpdate(DefaultDocumentEvent)",1,1,1
"org.argouml.language.java.ui.JavaEditorKit.JavaEditorKit()",1,1,1
"org.argouml.language.java.ui.JavaEditorKit.clone()",1,1,1
"org.argouml.language.java.ui.JavaEditorKit.createDefaultDocument()",1,1,1
"org.argouml.language.java.ui.JavaEditorKit.getContentType()",1,1,1
"org.argouml.language.java.ui.JavaEditorKit.getStylePreferences()",1,1,2
"org.argouml.language.java.ui.JavaEditorKit.getViewFactory()",1,1,1
"org.argouml.language.java.ui.JavaEditorKit.setStylePreferences(JavaContext)",1,1,1
"org.argouml.language.java.ui.TabJavaSrc.TabJavaSrc()",1,3,3
"org.argouml.language.java.ui.TabJavaSrc.changedUpdate(DocumentEvent)",1,2,2
"org.argouml.language.java.ui.TabJavaSrc.genText()",2,3,4
"org.argouml.language.java.ui.TabJavaSrc.getTarget()",1,1,1
"org.argouml.language.java.ui.TabJavaSrc.insertUpdate(DocumentEvent)",1,2,2
"org.argouml.language.java.ui.TabJavaSrc.parseText(String)",2,3,4
"org.argouml.language.java.ui.TabJavaSrc.refresh()",1,1,1
"org.argouml.language.java.ui.TabJavaSrc.removeUpdate(DocumentEvent)",1,2,2
"org.argouml.language.java.ui.TabJavaSrc.setTarget(Object)",1,4,6
"org.argouml.language.java.ui.TabJavaSrc.shouldBeEnabled()",1,1,1
"org.argouml.language.ui.ActionNotation.ActionNotation()",1,1,1
"org.argouml.language.ui.ActionNotation.actionPerformed(ActionEvent)",4,4,4
"org.argouml.language.ui.ActionNotation.getInstance()",1,1,1
"org.argouml.language.ui.ActionNotation.getMenu()",1,1,1
"org.argouml.language.ui.ActionNotation.menuCanceled(MenuEvent)",1,1,1
"org.argouml.language.ui.ActionNotation.menuDeselected(MenuEvent)",1,1,1
"org.argouml.language.ui.ActionNotation.menuSelected(MenuEvent)",1,4,4
"org.argouml.language.ui.NotationComboBox.NotationComboBox()",1,1,1
"org.argouml.language.ui.NotationComboBox.getInstance()",1,1,2
"org.argouml.language.ui.NotationComboBox.notationAdded(ArgoNotationEvent)",1,1,1
"org.argouml.language.ui.NotationComboBox.notationChanged(ArgoNotationEvent)",1,1,1
"org.argouml.language.ui.NotationComboBox.notationProviderAdded(ArgoNotationEvent)",1,1,1
"org.argouml.language.ui.NotationComboBox.notationProviderRemoved(ArgoNotationEvent)",1,1,1
"org.argouml.language.ui.NotationComboBox.notationRemoved(ArgoNotationEvent)",1,1,1
"org.argouml.language.ui.NotationComboBox.refresh()",1,4,4
"org.argouml.language.ui.SettingsTabNotation.SettingsTabNotation()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.getModuleAuthor()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.getModuleDescription()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.getModuleKey()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.getModuleName()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.getModuleVersion()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.getTabKey()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.getTabResourceBundleKey()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.handleSettingsTabCancel()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.handleSettingsTabRefresh()",1,1,1
"org.argouml.language.ui.SettingsTabNotation.handleSettingsTabSave()",1,1,1
"org.argouml.ocl.ArgoAny.ArgoAny(MClassifier)",1,1,1
"org.argouml.ocl.ArgoAny.conformsTo(Type)",2,3,3
"org.argouml.ocl.ArgoAny.equals(Object)",2,1,2
"org.argouml.ocl.ArgoAny.getOclRepresentation(MClassifier)",1,5,10
"org.argouml.ocl.ArgoAny.hasState(String)",1,1,1
"org.argouml.ocl.ArgoAny.hashCode()",2,1,2
"org.argouml.ocl.ArgoAny.internalNavigateParameterized(String,Type[],boolean)",7,7,11
"org.argouml.ocl.ArgoAny.navigateParameterized(String,Type[])",1,1,1
"org.argouml.ocl.ArgoAny.navigateParameterizedQuery(String,Type[])",1,1,1
"org.argouml.ocl.ArgoAny.navigateQualified(String,Type[])",6,20,28
"org.argouml.ocl.ArgoAny.operationMatchesCall(MOperation,String,Type[])",5,4,7
"org.argouml.ocl.ArgoAny.toString()",2,1,2
"org.argouml.ocl.ArgoFacade.ArgoFacade(Object)",1,1,2
"org.argouml.ocl.ArgoFacade.getClassifier(String)",4,4,5
"org.argouml.ocl.OCLEvaluator.OCLEvaluator()",1,1,1
"org.argouml.ocl.OCLEvaluator.evalToString(Object,String)",1,11,14
"org.argouml.ocl.OCLEvaluator.evalToString(Object,String,String)",1,6,8
"org.argouml.ocl.OCLExpander.OCLExpander(Map)",1,1,1
"org.argouml.ocl.OCLExpander.evaluate(Map,String)",1,1,1
"org.argouml.ocl.OCLUtil.OCLUtil()",1,1,1
"org.argouml.ocl.OCLUtil.getContextString(MModelElement)",3,6,7
"org.argouml.ocl.OCLUtil.getInnerMostEnclosingNamespace(MModelElement)",1,2,3
"org.argouml.pattern.cognitive.critics.CrConsiderSingleton.CrConsiderSingleton()",1,1,1
"org.argouml.pattern.cognitive.critics.CrConsiderSingleton.predicate2(Object,Designer)",14,9,14
"org.argouml.pattern.cognitive.critics.CrConsiderSingleton.sd(String)",1,1,1
"org.argouml.pattern.cognitive.critics.CrSingletonViolated.CrSingletonViolated()",1,1,1
"org.argouml.pattern.cognitive.critics.CrSingletonViolated.predicate2(Object,Designer)",3,2,4
"org.argouml.pattern.cognitive.critics.CrSingletonViolated.sd(String)",1,1,1
"org.argouml.persistence.DBLoader.DBLoader()",1,8,8
"org.argouml.persistence.DBLoader.addAttributes(MClassifier,String)",1,7,7
"org.argouml.persistence.DBLoader.addConstraints(MClassifier,String)",1,3,3
"org.argouml.persistence.DBLoader.addOperations(MClassifier,String)",1,4,4
"org.argouml.persistence.DBLoader.addParameters(MBehavioralFeature)",1,5,5
"org.argouml.persistence.DBLoader.errorMessage(String,Exception)",1,1,1
"org.argouml.persistence.DBLoader.hasConnection()",1,1,1
"org.argouml.persistence.DBLoader.main(String[])",1,1,1
"org.argouml.persistence.DBLoader.read(MGeneralizableElement,String)",1,2,2
"org.argouml.persistence.DBLoader.read(String)",1,6,9
"org.argouml.persistence.DBLoader.readAbstraction(MModel,String,String,String,String,String)",1,2,2
"org.argouml.persistence.DBLoader.readActor(MModel,String,String,String,String,String)",1,2,2
"org.argouml.persistence.DBLoader.readAssociation(MModel,String,String,String,String,String)",1,3,3
"org.argouml.persistence.DBLoader.readAssociationEnd(MModel,String,String,String,String,String)",1,11,11
"org.argouml.persistence.DBLoader.readClass(MModel,String,String,String,String,String)",1,2,2
"org.argouml.persistence.DBLoader.readDataType(String,String)",1,1,1
"org.argouml.persistence.DBLoader.readDependency(MDependency,String)",1,2,2
"org.argouml.persistence.DBLoader.readGeneralization(MModel,String,String,String,String,String)",1,5,5
"org.argouml.persistence.DBLoader.readInterface(MModel,String,String,String,String,String)",1,2,2
"org.argouml.persistence.DBLoader.readModel(String,String,Statement)",1,15,15
"org.argouml.persistence.DBLoader.readStereotype(String)",1,1,1
"org.argouml.persistence.DBLoader.readUsage(MModel,String,String,String,String,String)",1,2,2
"org.argouml.persistence.DBLoader.readUseCase(MModel,String,String,String,String,String)",1,2,2
"org.argouml.persistence.DBWriter.DBWriter()",1,8,8
"org.argouml.persistence.DBWriter.errorMessage(String,Exception)",1,1,1
"org.argouml.persistence.DBWriter.hasConnection()",1,1,1
"org.argouml.persistence.DBWriter.main(String[])",1,1,1
"org.argouml.persistence.DBWriter.store(MAbstraction,Statement)",1,2,2
"org.argouml.persistence.DBWriter.store(MActor,Statement)",1,1,1
"org.argouml.persistence.DBWriter.store(MAssociation,Statement)",1,4,4
"org.argouml.persistence.DBWriter.store(MAssociationEnd,Statement)",1,9,10
"org.argouml.persistence.DBWriter.store(MAttribute,Statement)",1,2,2
"org.argouml.persistence.DBWriter.store(MBehavioralFeature,Statement)",1,2,3
"org.argouml.persistence.DBWriter.store(MClass,Statement)",1,1,2
"org.argouml.persistence.DBWriter.store(MClassifier,Statement)",1,3,3
"org.argouml.persistence.DBWriter.store(MConstraint,Statement)",1,3,3
"org.argouml.persistence.DBWriter.store(MDataType,Statement)",1,1,1
"org.argouml.persistence.DBWriter.store(MDependency,Statement)",1,3,3
"org.argouml.persistence.DBWriter.store(MFeature,Statement)",1,4,4
"org.argouml.persistence.DBWriter.store(MGeneralizableElement,Statement)",1,1,4
"org.argouml.persistence.DBWriter.store(MGeneralization,Statement)",1,3,3
"org.argouml.persistence.DBWriter.store(MInterface,Statement)",1,1,1
"org.argouml.persistence.DBWriter.store(MModel)",1,4,6
"org.argouml.persistence.DBWriter.store(MModel,Statement)",1,1,1
"org.argouml.persistence.DBWriter.store(MModelElement,Statement)",1,6,6
"org.argouml.persistence.DBWriter.store(MNamespace,Statement)",1,13,13
"org.argouml.persistence.DBWriter.store(MOperation,Statement)",1,3,6
"org.argouml.persistence.DBWriter.store(MPackage,Statement)",1,1,1
"org.argouml.persistence.DBWriter.store(MParameter,Statement)",1,7,7
"org.argouml.persistence.DBWriter.store(MStereotype,Statement)",1,1,1
"org.argouml.persistence.DBWriter.store(MStructuralFeature,Statement)",1,6,6
"org.argouml.persistence.DBWriter.store(MUseCase,Statement)",1,1,1
"org.argouml.ui.AboutBox.AboutBox()",1,1,1
"org.argouml.ui.ActionAboutArgoUML.ActionAboutArgoUML()",1,1,1
"org.argouml.ui.ActionAboutArgoUML.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionAboutArgoUML.shouldBeEnabled()",1,1,1
"org.argouml.ui.ActionAutoCritique.ActionAutoCritique()",1,1,1
"org.argouml.ui.ActionAutoCritique.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionCreateMultiple.ActionCreateMultiple()",1,1,1
"org.argouml.ui.ActionCreateMultiple.shouldBeEnabled()",1,1,1
"org.argouml.ui.ActionEmailExpert.ActionEmailExpert()",1,1,1
"org.argouml.ui.ActionEmailExpert.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionFind.ActionFind()",1,1,1
"org.argouml.ui.ActionFind.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionFlatToDo.ActionFlatToDo()",1,1,1
"org.argouml.ui.ActionFlatToDo.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionGoToCritique.ActionGoToCritique(ToDoItem)",1,1,1
"org.argouml.ui.ActionGoToCritique.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionGoToCritique.shouldBeEnabled()",1,1,1
"org.argouml.ui.ActionGoToDetails.ActionGoToDetails(String)",1,1,1
"org.argouml.ui.ActionGoToDetails.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionGoToDetails.shouldBeEnabled()",2,2,3
"org.argouml.ui.ActionGoToEdit.ActionGoToEdit(String)",1,1,1
"org.argouml.ui.ActionGoToEdit.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionGoToEdit.shouldBeEnabled()",2,2,3
"org.argouml.ui.ActionGotoDiagram.ActionGotoDiagram()",1,1,1
"org.argouml.ui.ActionGotoDiagram.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionMoreInfo.ActionMoreInfo()",1,1,1
"org.argouml.ui.ActionNavBack.ActionNavBack()",1,1,1
"org.argouml.ui.ActionNavBack.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionNavBack.shouldBeEnabled()",3,2,4
"org.argouml.ui.ActionNavConfig.ActionNavConfig()",1,1,1
"org.argouml.ui.ActionNavConfig.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionNavForw.ActionNavForw()",1,1,1
"org.argouml.ui.ActionNavForw.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionNavForw.shouldBeEnabled()",2,2,3
"org.argouml.ui.ActionNewToDoItem.ActionNewToDoItem()",1,1,1
"org.argouml.ui.ActionNewToDoItem.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionNextDetailsTab.ActionNextDetailsTab()",1,1,1
"org.argouml.ui.ActionNextDetailsTab.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionNextEditTab.ActionNextEditTab()",1,1,1
"org.argouml.ui.ActionNextEditTab.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionOpenCritics.ActionOpenCritics()",1,1,1
"org.argouml.ui.ActionOpenCritics.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionOpenDecisions.ActionOpenDecisions()",1,1,1
"org.argouml.ui.ActionOpenDecisions.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionOpenGoals.ActionOpenGoals()",1,1,1
"org.argouml.ui.ActionOpenGoals.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionPrint.ActionPrint()",1,1,1
"org.argouml.ui.ActionPrint.actionPerformed(ActionEvent)",1,2,2
"org.argouml.ui.ActionRedo.ActionRedo()",1,1,1
"org.argouml.ui.ActionRedo.shouldBeEnabled()",1,1,1
"org.argouml.ui.ActionResolve.ActionResolve()",1,1,1
"org.argouml.ui.ActionResolve.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionSaveConfiguration.ActionSaveConfiguration()",1,1,1
"org.argouml.ui.ActionSaveConfiguration.actionPerformed(ActionEvent)",1,2,2
"org.argouml.ui.ActionSettings.ActionSettings()",1,1,1
"org.argouml.ui.ActionSettings.actionPerformed(ActionEvent)",1,19,19
"org.argouml.ui.ActionSettings.getInstance()",1,1,1
"org.argouml.ui.ActionSettings.localize(String)",1,1,1
"org.argouml.ui.ActionSettings.moduleDisabled(ArgoModuleEvent)",1,1,1
"org.argouml.ui.ActionSettings.moduleEnabled(ArgoModuleEvent)",1,1,1
"org.argouml.ui.ActionSettings.moduleLoaded(ArgoModuleEvent)",1,1,1
"org.argouml.ui.ActionSettings.moduleUnloaded(ArgoModuleEvent)",1,1,1
"org.argouml.ui.ActionShowRapidButtons.ActionShowRapidButtons()",1,1,1
"org.argouml.ui.ActionShowRapidButtons.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.ActionSnooze.ActionSnooze()",1,1,1
"org.argouml.ui.ActionSnooze.actionPerformed(ActionEvent)",2,1,2
"org.argouml.ui.ActionUndo.ActionUndo()",1,1,1
"org.argouml.ui.ActionUndo.shouldBeEnabled()",1,1,1
"org.argouml.ui.Actions.addAction(AbstractAction)",1,1,1
"org.argouml.ui.Actions.updateAllEnabled()",1,2,2
"org.argouml.ui.ArgoDiagram.ArgoDiagram()",1,1,1
"org.argouml.ui.ArgoDiagram.ArgoDiagram(String)",1,1,2
"org.argouml.ui.ArgoDiagram.addChangeRegistryAsListener(ChangeRegistry)",1,1,1
"org.argouml.ui.ArgoDiagram.removeChangeRegistryAsListener(ChangeRegistry)",1,1,1
"org.argouml.ui.ArgoDiagram.setName(String)",1,1,1
"org.argouml.ui.ComponentResizer.ComponentResizer()",1,1,1
"org.argouml.ui.ComponentResizer.componentMoved(ComponentEvent)",1,2,2
"org.argouml.ui.ComponentResizer.componentResized(ComponentEvent)",1,4,4
"org.argouml.ui.DetailsPane.DetailsPane(StatusBar)",1,6,6
"org.argouml.ui.DetailsPane.addNavigationListener(NavigationListener)",1,3,3
"org.argouml.ui.DetailsPane.addToPropTab(Class,PropPanel)",1,3,3
"org.argouml.ui.DetailsPane.getIndexOfNamedTab(String)",3,3,4
"org.argouml.ui.DetailsPane.getMinimumSize()",1,1,1
"org.argouml.ui.DetailsPane.getPreferredSize()",1,1,1
"org.argouml.ui.DetailsPane.getQuadrant()",1,1,1
"org.argouml.ui.DetailsPane.getTabs()",1,1,1
"org.argouml.ui.DetailsPane.getTarget()",1,1,1
"org.argouml.ui.DetailsPane.mouseClicked(MouseEvent)",3,4,5
"org.argouml.ui.DetailsPane.mouseEntered(MouseEvent)",1,1,1
"org.argouml.ui.DetailsPane.mouseExited(MouseEvent)",1,1,1
"org.argouml.ui.DetailsPane.mousePressed(MouseEvent)",1,1,1
"org.argouml.ui.DetailsPane.mouseReleased(MouseEvent)",1,1,1
"org.argouml.ui.DetailsPane.myDoubleClick(int)",1,2,2
"org.argouml.ui.DetailsPane.mySingleClick(int)",1,1,1
"org.argouml.ui.DetailsPane.removeNavigationListener(NavigationListener)",1,3,3
"org.argouml.ui.DetailsPane.selectNextTab()",3,3,3
"org.argouml.ui.DetailsPane.selectTabNamed(String)",1,2,2
"org.argouml.ui.DetailsPane.setTarget(Object)",2,10,28
"org.argouml.ui.DetailsPane.setToDoItem(Object)",1,3,3
"org.argouml.ui.DetailsPane.stateChanged(ChangeEvent)",1,5,5
"org.argouml.ui.DiagramResourceBundle.getContents()",1,1,1
"org.argouml.ui.DiagramResourceBundle_de.getContents()",1,1,1
"org.argouml.ui.DiagramResourceBundle_es.getContents()",1,1,1
"org.argouml.ui.DiagramResourceBundle_fr.getContents()",1,1,1
"org.argouml.ui.DisplayTextTree.DisplayTextTree()",1,1,1
"org.argouml.ui.DisplayTextTree.addListenerToNode(Object)",1,7,7
"org.argouml.ui.DisplayTextTree.addListenerToPath(TreePath)",1,1,1
"org.argouml.ui.DisplayTextTree.convertValueToText(Object,boolean,boolean,boolean,int,boolean)",5,7,9
"org.argouml.ui.DisplayTextTree.fireTreeCollapsed(TreePath)",2,1,3
"org.argouml.ui.DisplayTextTree.fireTreeExpanded(TreePath)",3,1,4
"org.argouml.ui.DisplayTextTree.forceUpdate()",1,2,2
"org.argouml.ui.DisplayTextTree.getExpandedPaths()",1,2,2
"org.argouml.ui.DisplayTextTree.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.ui.DisplayTextTree.propertySet(MElementEvent)",1,1,1
"org.argouml.ui.DisplayTextTree.recovered(MElementEvent)",1,1,1
"org.argouml.ui.DisplayTextTree.reexpand()",2,1,3
"org.argouml.ui.DisplayTextTree.removed(MElementEvent)",1,1,1
"org.argouml.ui.DisplayTextTree.roleAdded(MElementEvent)",1,1,1
"org.argouml.ui.DisplayTextTree.roleRemoved(MElementEvent)",1,1,1
"org.argouml.ui.DisplayTextTree.setModel(TreeModel)",1,7,7
"org.argouml.ui.DisplayTextTree.vetoableChange(PropertyChangeEvent)",1,2,2
"org.argouml.ui.EmailExpertDialog.EmailExpertDialog()",1,1,1
"org.argouml.ui.EmailExpertDialog.actionPerformed(ActionEvent)",1,3,3
"org.argouml.ui.EmailExpertDialog.setTarget(Object)",1,1,1
"org.argouml.ui.FindDialog.FindDialog()",1,1,1
"org.argouml.ui.FindDialog.actionPerformed(ActionEvent)",1,3,3
"org.argouml.ui.FindDialog.doClearTabs()",1,2,2
"org.argouml.ui.FindDialog.doSearch()",1,4,7
"org.argouml.ui.FindDialog.initConstraintsTab()",1,1,1
"org.argouml.ui.FindDialog.initHelpTab()",1,1,1
"org.argouml.ui.FindDialog.initModifiedTab()",1,1,1
"org.argouml.ui.FindDialog.initNameLocTab()",1,1,1
"org.argouml.ui.FindDialog.initTagValsTab()",1,1,1
"org.argouml.ui.FindDialog.initTypes()",1,1,1
"org.argouml.ui.FindDialog.main(String[])",1,1,1
"org.argouml.ui.FindDialog.mouseClicked(MouseEvent)",3,4,5
"org.argouml.ui.FindDialog.mouseEntered(MouseEvent)",1,1,1
"org.argouml.ui.FindDialog.mouseExited(MouseEvent)",1,1,1
"org.argouml.ui.FindDialog.mousePressed(MouseEvent)",1,1,1
"org.argouml.ui.FindDialog.mouseReleased(MouseEvent)",1,1,1
"org.argouml.ui.FindDialog.myDoubleClick(int)",1,3,3
"org.argouml.ui.FindDialog.setVisible(boolean)",1,1,1
"org.argouml.ui.HistoryListModel.HistoryListModel()",1,1,1
"org.argouml.ui.HistoryListModel.addListDataListener(ListDataListener)",1,1,1
"org.argouml.ui.HistoryListModel.fireIntervalAdded(Object,int,int)",1,3,4
"org.argouml.ui.HistoryListModel.getElementAt(int)",1,1,1
"org.argouml.ui.HistoryListModel.getSize()",1,1,1
"org.argouml.ui.HistoryListModel.historyAdded(HistoryEvent)",1,1,1
"org.argouml.ui.HistoryListModel.removeListDataListener(ListDataListener)",1,1,1
"org.argouml.ui.InitMenusLater.InitMenusLater(JMenu,JMenu,JMenu,JMenu,JMenu,JMenu,JMenu)",1,1,1
"org.argouml.ui.InitMenusLater.run()",1,1,1
"org.argouml.ui.JasonsBigTheme.getControlTextFont()",1,1,1
"org.argouml.ui.JasonsBigTheme.getEmphasisTextFont()",1,1,1
"org.argouml.ui.JasonsBigTheme.getMenuTextFont()",1,1,1
"org.argouml.ui.JasonsBigTheme.getName()",1,1,1
"org.argouml.ui.JasonsBigTheme.getPrimary1()",1,1,1
"org.argouml.ui.JasonsBigTheme.getPrimary2()",1,1,1
"org.argouml.ui.JasonsBigTheme.getPrimary3()",1,1,1
"org.argouml.ui.JasonsBigTheme.getSecondary1()",1,1,1
"org.argouml.ui.JasonsBigTheme.getSecondary2()",1,1,1
"org.argouml.ui.JasonsBigTheme.getSecondary3()",1,1,1
"org.argouml.ui.JasonsBigTheme.getSubTextFont()",1,1,1
"org.argouml.ui.JasonsBigTheme.getSystemTextFont()",1,1,1
"org.argouml.ui.JasonsBigTheme.getUserTextFont()",1,1,1
"org.argouml.ui.JasonsBigTheme.getWindowTitleFont()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getControlTextFont()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getEmphasisTextFont()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getMenuTextFont()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getName()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getPrimary1()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getPrimary2()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getPrimary3()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getSecondary1()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getSecondary2()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getSecondary3()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getSubTextFont()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getSystemTextFont()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getUserTextFont()",1,1,1
"org.argouml.ui.JasonsHugeTheme.getWindowTitleFont()",1,1,1
"org.argouml.ui.JasonsTheme.getControlTextFont()",1,1,1
"org.argouml.ui.JasonsTheme.getEmphasisTextFont()",1,1,1
"org.argouml.ui.JasonsTheme.getMenuTextFont()",1,1,1
"org.argouml.ui.JasonsTheme.getName()",1,1,1
"org.argouml.ui.JasonsTheme.getPrimary1()",1,1,1
"org.argouml.ui.JasonsTheme.getPrimary2()",1,1,1
"org.argouml.ui.JasonsTheme.getPrimary3()",1,1,1
"org.argouml.ui.JasonsTheme.getSecondary1()",1,1,1
"org.argouml.ui.JasonsTheme.getSecondary2()",1,1,1
"org.argouml.ui.JasonsTheme.getSecondary3()",1,1,1
"org.argouml.ui.JasonsTheme.getSubTextFont()",1,1,1
"org.argouml.ui.JasonsTheme.getSystemTextFont()",1,1,1
"org.argouml.ui.JasonsTheme.getUserTextFont()",1,1,1
"org.argouml.ui.JasonsTheme.getWindowTitleFont()",1,1,1
"org.argouml.ui.LeftArrowIcon.getIconHeight()",1,1,1
"org.argouml.ui.LeftArrowIcon.getIconWidth()",1,1,1
"org.argouml.ui.LeftArrowIcon.paintIcon(Component,Graphics,int,int)",1,1,1
"org.argouml.ui.Menu.Menu(String)",1,1,1
"org.argouml.ui.Menu.addCheckItem(Action)",1,1,1
"org.argouml.ui.MenuResourceBundle.getContents()",1,1,1
"org.argouml.ui.MenuResourceBundle_de.getContents()",1,1,1
"org.argouml.ui.MenuResourceBundle_en_GB.getContents()",1,1,1
"org.argouml.ui.MenuResourceBundle_es.getContents()",1,1,1
"org.argouml.ui.MenuResourceBundle_fr.getContents()",1,1,1
"org.argouml.ui.MultiEditorPane.MultiEditorPane(StatusBar)",1,4,4
"org.argouml.ui.MultiEditorPane.addNavigationListener(NavigationListener)",1,3,3
"org.argouml.ui.MultiEditorPane.getIndexOfNamedTab(String)",3,3,4
"org.argouml.ui.MultiEditorPane.getMinimumSize()",1,1,1
"org.argouml.ui.MultiEditorPane.getPreferredSize()",1,1,1
"org.argouml.ui.MultiEditorPane.getQuadrant()",1,1,1
"org.argouml.ui.MultiEditorPane.getTarget()",1,1,1
"org.argouml.ui.MultiEditorPane.mouseClicked(MouseEvent)",3,4,5
"org.argouml.ui.MultiEditorPane.mouseEntered(MouseEvent)",1,1,1
"org.argouml.ui.MultiEditorPane.mouseExited(MouseEvent)",1,1,1
"org.argouml.ui.MultiEditorPane.mousePressed(MouseEvent)",1,1,1
"org.argouml.ui.MultiEditorPane.mouseReleased(MouseEvent)",1,1,1
"org.argouml.ui.MultiEditorPane.myDoubleClick(int)",1,2,2
"org.argouml.ui.MultiEditorPane.mySingleClick(int)",1,1,1
"org.argouml.ui.MultiEditorPane.removeNavigationListener(NavigationListener)",1,3,3
"org.argouml.ui.MultiEditorPane.select(Object)",1,2,2
"org.argouml.ui.MultiEditorPane.selectNextTab()",3,3,3
"org.argouml.ui.MultiEditorPane.selectTabNamed(String)",1,2,2
"org.argouml.ui.MultiEditorPane.setTarget(Object)",2,3,7
"org.argouml.ui.MultiEditorPane.stateChanged(ChangeEvent)",1,3,3
"org.argouml.ui.NavPerspective.NavPerspective(String)",1,1,1
"org.argouml.ui.NavPerspective.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.ui.NavPerspective.clone()",1,1,1
"org.argouml.ui.NavPerspective.fireTreeNodesChanged(Object,Object[],int[],Object[])",1,3,4
"org.argouml.ui.NavPerspective.fireTreeNodesInserted(Object,Object[],int[],Object[])",1,3,4
"org.argouml.ui.NavPerspective.fireTreeNodesRemoved(Object,Object[],int[],Object[])",1,3,4
"org.argouml.ui.NavPerspective.fireTreeStructureChanged(Object,Object[])",1,1,1
"org.argouml.ui.NavPerspective.fireTreeStructureChanged(Object,Object[],int[],Object[])",1,3,4
"org.argouml.ui.NavPerspective.getRegisteredPerspectives()",1,1,1
"org.argouml.ui.NavPerspective.getRegisteredRules()",1,1,1
"org.argouml.ui.NavPerspective.registerPerspective(NavPerspective)",1,1,1
"org.argouml.ui.NavPerspective.registerRule(TreeModelPrereqs)",1,1,1
"org.argouml.ui.NavPerspective.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.ui.NavPerspective.unregisterPerspective(NavPerspective)",1,1,1
"org.argouml.ui.NavPerspective.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.ui.NavigationHistory.isNavigateBackEnabled()",2,3,3
"org.argouml.ui.NavigationHistory.isNavigateForwardEnabled()",1,3,3
"org.argouml.ui.NavigationHistory.navigateBack(boolean)",1,8,15
"org.argouml.ui.NavigationHistory.navigateForward(boolean)",1,9,15
"org.argouml.ui.NavigationHistory.navigateTo(Object)",1,3,4
"org.argouml.ui.NavigationHistory.open(Object)",1,1,1
"org.argouml.ui.NavigatorConfigDialog.NavigatorConfigDialog(Frame)",1,1,1
"org.argouml.ui.NavigatorConfigDialog.actionPerformed(ActionEvent)",1,9,9
"org.argouml.ui.NavigatorConfigDialog.doAddRule()",3,3,3
"org.argouml.ui.NavigatorConfigDialog.doDupPers()",2,3,3
"org.argouml.ui.NavigatorConfigDialog.doNewPers()",1,1,1
"org.argouml.ui.NavigatorConfigDialog.doOk()",1,1,1
"org.argouml.ui.NavigatorConfigDialog.doRemovePers()",2,3,3
"org.argouml.ui.NavigatorConfigDialog.doRemoveRule()",3,3,3
"org.argouml.ui.NavigatorConfigDialog.doSelectLibRule()",1,1,2
"org.argouml.ui.NavigatorConfigDialog.doSelectPers()",2,1,3
"org.argouml.ui.NavigatorConfigDialog.doSelectRule()",1,1,2
"org.argouml.ui.NavigatorConfigDialog.initPanesPanel()",1,1,1
"org.argouml.ui.NavigatorConfigDialog.initPersPanel()",1,1,1
"org.argouml.ui.NavigatorConfigDialog.main(String[])",1,1,1
"org.argouml.ui.NavigatorConfigDialog.mouseClicked(MouseEvent)",2,5,6
"org.argouml.ui.NavigatorConfigDialog.mouseEntered(MouseEvent)",1,1,1
"org.argouml.ui.NavigatorConfigDialog.mouseExited(MouseEvent)",1,1,1
"org.argouml.ui.NavigatorConfigDialog.mousePressed(MouseEvent)",1,1,1
"org.argouml.ui.NavigatorConfigDialog.mouseReleased(MouseEvent)",1,1,1
"org.argouml.ui.NavigatorConfigDialog.stateChanged(ChangeEvent)",1,1,1
"org.argouml.ui.NavigatorConfigDialog.valueChanged(ListSelectionEvent)",2,4,5
"org.argouml.ui.NavigatorPane.NavigatorKeyListener.keyPressed(KeyEvent)",1,3,4
"org.argouml.ui.NavigatorPane.NavigatorMouseListener.mouseClicked(MouseEvent)",1,5,5
"org.argouml.ui.NavigatorPane.NavigatorMouseListener.mousePressed(MouseEvent)",1,2,2
"org.argouml.ui.NavigatorPane.NavigatorMouseListener.mouseReleased(MouseEvent)",1,2,2
"org.argouml.ui.NavigatorPane.NavigatorMouseListener.showPopupMenu(MouseEvent)",1,5,11
"org.argouml.ui.NavigatorPane.NavigatorPane()",1,1,1
"org.argouml.ui.NavigatorPane.addToHistory(Object)",1,4,4
"org.argouml.ui.NavigatorPane.canNavBack()",1,2,2
"org.argouml.ui.NavigatorPane.canNavForw()",1,1,1
"org.argouml.ui.NavigatorPane.clearHistory()",1,1,1
"org.argouml.ui.NavigatorPane.forceUpdate()",1,1,1
"org.argouml.ui.NavigatorPane.getCurPerspective()",1,1,1
"org.argouml.ui.NavigatorPane.getMinimumSize()",1,1,1
"org.argouml.ui.NavigatorPane.getPerspectives()",1,1,1
"org.argouml.ui.NavigatorPane.getPreferredSize()",1,1,1
"org.argouml.ui.NavigatorPane.getQuadrant()",1,1,1
"org.argouml.ui.NavigatorPane.getRoot()",1,1,1
"org.argouml.ui.NavigatorPane.getSelectedObject()",1,1,1
"org.argouml.ui.NavigatorPane.itemStateChanged(ItemEvent)",1,1,1
"org.argouml.ui.NavigatorPane.menuLocalize(String)",1,1,1
"org.argouml.ui.NavigatorPane.myDoubleClick(int,TreePath)",2,1,2
"org.argouml.ui.NavigatorPane.mySingleClick(int,TreePath)",3,2,3
"org.argouml.ui.NavigatorPane.navBack()",2,1,2
"org.argouml.ui.NavigatorPane.navDown()",1,1,2
"org.argouml.ui.NavigatorPane.navForw()",1,1,1
"org.argouml.ui.NavigatorPane.navUp()",1,2,2
"org.argouml.ui.NavigatorPane.setCurPerspective(NavPerspective)",2,2,3
"org.argouml.ui.NavigatorPane.setPerspectives(Vector)",1,7,7
"org.argouml.ui.NavigatorPane.setRoot(Object)",1,2,2
"org.argouml.ui.NavigatorPane.setSelection(Object,Object)",1,1,1
"org.argouml.ui.NavigatorPane.updateTree()",1,2,2
"org.argouml.ui.NavigatorPane.valueChanged(TreeSelectionEvent)",1,1,1
"org.argouml.ui.ProjectBrowser.ProjectBrowser()",1,1,1
"org.argouml.ui.ProjectBrowser.ProjectBrowser(String,StatusBar)",1,1,3
"org.argouml.ui.ProjectBrowser.appendPluggableMenus(JMenuItem,String)",1,2,2
"org.argouml.ui.ProjectBrowser.createPanels()",1,1,2
"org.argouml.ui.ProjectBrowser.getActiveDiagram()",1,1,1
"org.argouml.ui.ProjectBrowser.getAppName()",1,1,1
"org.argouml.ui.ProjectBrowser.getCurPerspective()",1,1,1
"org.argouml.ui.ProjectBrowser.getDetailsPane()",1,1,1
"org.argouml.ui.ProjectBrowser.getDetailsTarget()",1,1,1
"org.argouml.ui.ProjectBrowser.getEditorPane()",1,1,1
"org.argouml.ui.ProjectBrowser.getJMenuBar()",1,1,1
"org.argouml.ui.ProjectBrowser.getLocale()",1,1,1
"org.argouml.ui.ProjectBrowser.getNavPane()",1,1,1
"org.argouml.ui.ProjectBrowser.getPerspectives()",1,1,1
"org.argouml.ui.ProjectBrowser.getProject()",1,2,2
"org.argouml.ui.ProjectBrowser.getShortcut(String)",1,1,1
"org.argouml.ui.ProjectBrowser.getStatusBar()",1,1,1
"org.argouml.ui.ProjectBrowser.getTarget()",2,1,2
"org.argouml.ui.ProjectBrowser.getToDoPane()",1,1,1
"org.argouml.ui.ProjectBrowser.getToDoPerspectives()",1,1,1
"org.argouml.ui.ProjectBrowser.initMenus()",1,2,2
"org.argouml.ui.ProjectBrowser.isNavigateBackEnabled()",1,1,1
"org.argouml.ui.ProjectBrowser.isNavigateForwardEnabled()",1,1,1
"org.argouml.ui.ProjectBrowser.jumpToDiagramShowing(VectorSet)",7,9,12
"org.argouml.ui.ProjectBrowser.menuLocalize(String)",1,1,1
"org.argouml.ui.ProjectBrowser.moduleDisabled(ArgoModuleEvent)",1,1,1
"org.argouml.ui.ProjectBrowser.moduleEnabled(ArgoModuleEvent)",1,1,1
"org.argouml.ui.ProjectBrowser.moduleLoaded(ArgoModuleEvent)",1,10,10
"org.argouml.ui.ProjectBrowser.moduleUnloaded(ArgoModuleEvent)",1,1,1
"org.argouml.ui.ProjectBrowser.navigateBack(boolean)",1,3,3
"org.argouml.ui.ProjectBrowser.navigateForward(boolean)",1,3,3
"org.argouml.ui.ProjectBrowser.navigateTo(Object)",1,1,1
"org.argouml.ui.ProjectBrowser.open(Object)",1,1,1
"org.argouml.ui.ProjectBrowser.select(Object)",1,1,1
"org.argouml.ui.ProjectBrowser.setAccelerator(JMenuItem,KeyStroke)",1,2,2
"org.argouml.ui.ProjectBrowser.setActiveDiagram(ArgoDiagram)",1,1,1
"org.argouml.ui.ProjectBrowser.setAppName(String)",1,1,1
"org.argouml.ui.ProjectBrowser.setCurPerspective(NavPerspective)",1,1,1
"org.argouml.ui.ProjectBrowser.setDetailsTarget(Object)",1,1,1
"org.argouml.ui.ProjectBrowser.setMnemonic(JMenuItem,String,char)",1,3,3
"org.argouml.ui.ProjectBrowser.setPerspectives(Vector)",1,1,1
"org.argouml.ui.ProjectBrowser.setProject(Project)",1,1,1
"org.argouml.ui.ProjectBrowser.setTarget(Object)",3,7,7
"org.argouml.ui.ProjectBrowser.setTitle(String)",1,3,3
"org.argouml.ui.ProjectBrowser.setToDoCurPerspective(TreeModel)",1,1,1
"org.argouml.ui.ProjectBrowser.setToDoItem(Object)",1,1,1
"org.argouml.ui.ProjectBrowser.setToDoPerspectives(Vector)",1,1,1
"org.argouml.ui.ProjectBrowser.setVisible(boolean)",1,2,2
"org.argouml.ui.ProjectBrowser.showStatus(String)",1,1,1
"org.argouml.ui.ProjectBrowser.updateTitle()",1,2,2
"org.argouml.ui.SettingsResourceBundle.getContents()",1,1,1
"org.argouml.ui.SettingsResourceBundle_de.getContents()",1,1,1
"org.argouml.ui.SettingsResourceBundle_es.getContents()",1,1,1
"org.argouml.ui.SettingsResourceBundle_fr.getContents()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.SettingsTabEnvironment()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.getModuleAuthor()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.getModuleDescription()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.getModuleKey()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.getModuleName()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.getModuleVersion()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.getTabKey()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.handleSettingsTabCancel()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.handleSettingsTabRefresh()",1,1,1
"org.argouml.ui.SettingsTabEnvironment.handleSettingsTabSave()",1,1,1
"org.argouml.ui.SettingsTabPreferences.SettingsTabPreferences()",1,1,1
"org.argouml.ui.SettingsTabPreferences.getModuleAuthor()",1,1,1
"org.argouml.ui.SettingsTabPreferences.getModuleDescription()",1,1,1
"org.argouml.ui.SettingsTabPreferences.getModuleKey()",1,1,1
"org.argouml.ui.SettingsTabPreferences.getModuleName()",1,1,1
"org.argouml.ui.SettingsTabPreferences.getModuleVersion()",1,1,1
"org.argouml.ui.SettingsTabPreferences.getTabKey()",1,1,1
"org.argouml.ui.SettingsTabPreferences.handleSettingsTabCancel()",1,1,1
"org.argouml.ui.SettingsTabPreferences.handleSettingsTabRefresh()",1,1,1
"org.argouml.ui.SettingsTabPreferences.handleSettingsTabSave()",1,1,1
"org.argouml.ui.SettingsTabUser.SettingsTabUser()",1,1,1
"org.argouml.ui.SettingsTabUser.getModuleAuthor()",1,1,1
"org.argouml.ui.SettingsTabUser.getModuleDescription()",1,1,1
"org.argouml.ui.SettingsTabUser.getModuleKey()",1,1,1
"org.argouml.ui.SettingsTabUser.getModuleName()",1,1,1
"org.argouml.ui.SettingsTabUser.getModuleVersion()",1,1,1
"org.argouml.ui.SettingsTabUser.getTabKey()",1,1,1
"org.argouml.ui.SettingsTabUser.handleSettingsTabCancel()",1,1,1
"org.argouml.ui.SettingsTabUser.handleSettingsTabRefresh()",1,1,1
"org.argouml.ui.SettingsTabUser.handleSettingsTabSave()",1,1,1
"org.argouml.ui.SpacerPanel.SpacerPanel()",1,1,1
"org.argouml.ui.SpacerPanel.SpacerPanel(int,int)",1,1,1
"org.argouml.ui.SpacerPanel.getMinimumSize()",1,1,1
"org.argouml.ui.SpacerPanel.getPreferredSize()",1,1,1
"org.argouml.ui.SpacerPanel.getSize()",1,1,1
"org.argouml.ui.SplashScreen.SplashScreen(String,String)",1,2,2
"org.argouml.ui.SplashScreen.getStatusBar()",1,1,1
"org.argouml.ui.SplashScreen.preload(Vector)",1,1,1
"org.argouml.ui.SplashScreen.setVisible(boolean)",1,1,1
"org.argouml.ui.SplashScreen.showStatus(String)",1,1,1
"org.argouml.ui.StatusBar.StatusBar()",1,1,1
"org.argouml.ui.StatusBar.doFakeProgress(String,int)",1,1,1
"org.argouml.ui.StatusBar.incProgress(int)",1,1,1
"org.argouml.ui.StatusBar.run()",1,2,4
"org.argouml.ui.StatusBar.showProgress(int)",1,1,1
"org.argouml.ui.StatusBar.showStatus(String)",1,1,1
"org.argouml.ui.StylePanel.StylePanel(String)",1,1,1
"org.argouml.ui.StylePanel.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.StylePanel.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.ui.StylePanel.getTarget()",1,1,1
"org.argouml.ui.StylePanel.insertUpdate(DocumentEvent)",1,1,1
"org.argouml.ui.StylePanel.itemStateChanged(ItemEvent)",1,1,1
"org.argouml.ui.StylePanel.refresh()",1,1,1
"org.argouml.ui.StylePanel.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.ui.StylePanel.setTarget(Fig)",1,1,1
"org.argouml.ui.StylePanel.shouldBeEnabled()",1,1,1
"org.argouml.ui.StylePanel.valueChanged(ListSelectionEvent)",1,1,1
"org.argouml.ui.StylePanelFig.StylePanelFig()",1,1,1
"org.argouml.ui.StylePanelFig.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.ui.StylePanelFig.initChoices()",1,1,1
"org.argouml.ui.StylePanelFig.insertUpdate(DocumentEvent)",1,2,2
"org.argouml.ui.StylePanelFig.itemStateChanged(ItemEvent)",1,3,3
"org.argouml.ui.StylePanelFig.refresh()",1,3,3
"org.argouml.ui.StylePanelFig.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.ui.StylePanelFig.setTargetBBox()",3,2,4
"org.argouml.ui.StylePanelFig.setTargetFill()",2,2,4
"org.argouml.ui.StylePanelFig.setTargetLine()",2,2,5
"org.argouml.ui.StylePanelFigRRect.StylePanelFigRRect()",1,1,1
"org.argouml.ui.StylePanelFigRRect.insertUpdate(DocumentEvent)",1,2,2
"org.argouml.ui.StylePanelFigRRect.refresh()",1,1,1
"org.argouml.ui.StylePanelFigRRect.setTargetRounding()",3,1,3
"org.argouml.ui.StylePanelFigText.StylePanelFigText()",1,1,1
"org.argouml.ui.StylePanelFigText.initChoices2()",1,1,1
"org.argouml.ui.StylePanelFigText.itemStateChanged(ItemEvent)",1,7,7
"org.argouml.ui.StylePanelFigText.refresh()",1,2,7
"org.argouml.ui.StylePanelFigText.setTargetFont()",3,1,3
"org.argouml.ui.StylePanelFigText.setTargetJustification()",3,1,3
"org.argouml.ui.StylePanelFigText.setTargetSize()",2,1,2
"org.argouml.ui.StylePanelFigText.setTargetStyle()",3,1,3
"org.argouml.ui.StylePanelFigText.setTargetTextColor()",2,2,3
"org.argouml.ui.StylePanelFigText.setTargetTextFill()",2,2,3
"org.argouml.ui.TabDocs.TabDocs()",1,1,1
"org.argouml.ui.TabDocs.genText()",3,3,5
"org.argouml.ui.TabDocs.parseText(String)",2,3,4
"org.argouml.ui.TabHash.TabHash()",1,1,1
"org.argouml.ui.TabHash.genText()",2,1,2
"org.argouml.ui.TabHistory.TabHistory()",1,1,1
"org.argouml.ui.TabHistory.getListCellRendererComponent(JList,Object,int,boolean,boolean)",2,7,7
"org.argouml.ui.TabHistory.mouseDragged(MouseEvent)",1,1,1
"org.argouml.ui.TabHistory.mouseMoved(MouseEvent)",2,1,2
"org.argouml.ui.TabHistory.valueChanged(ListSelectionEvent)",1,2,2
"org.argouml.ui.TabResults.TabResults()",1,1,1
"org.argouml.ui.TabResults.TabResults(boolean)",1,3,3
"org.argouml.ui.TabResults.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.TabResults.depthFirst(Object,Diagram)",3,3,5
"org.argouml.ui.TabResults.mouseClicked(MouseEvent)",1,2,2
"org.argouml.ui.TabResults.mouseEntered(MouseEvent)",1,1,1
"org.argouml.ui.TabResults.mouseExited(MouseEvent)",1,1,1
"org.argouml.ui.TabResults.mousePressed(MouseEvent)",1,1,1
"org.argouml.ui.TabResults.mouseReleased(MouseEvent)",1,1,1
"org.argouml.ui.TabResults.myDoubleClick(Object)",1,3,3
"org.argouml.ui.TabResults.run()",1,1,1
"org.argouml.ui.TabResults.setGenerator(ChildGenerator)",1,1,1
"org.argouml.ui.TabResults.setPredicate(PredicateFind)",1,1,1
"org.argouml.ui.TabResults.setResults(Vector,Vector)",1,1,1
"org.argouml.ui.TabResults.setRoot(Object)",1,1,1
"org.argouml.ui.TabResults.spawn()",1,1,1
"org.argouml.ui.TabResults.valueChanged(ListSelectionEvent)",2,2,4
"org.argouml.ui.TabSpawnable.TabSpawnable()",1,1,1
"org.argouml.ui.TabSpawnable.TabSpawnable(String)",1,1,1
"org.argouml.ui.TabSpawnable.TabSpawnable(String,boolean)",1,1,1
"org.argouml.ui.TabSpawnable.clone()",1,2,2
"org.argouml.ui.TabSpawnable.getTitle()",1,1,1
"org.argouml.ui.TabSpawnable.setTitle(String)",1,1,1
"org.argouml.ui.TabSpawnable.spawn()",2,5,6
"org.argouml.ui.TabTable.TabTable()",1,1,1
"org.argouml.ui.TabTable.initPanels()",1,1,1
"org.argouml.ui.TabText.TabText(String)",1,1,1
"org.argouml.ui.TabText.TabText(String,boolean)",1,2,2
"org.argouml.ui.TabText.changedUpdate(DocumentEvent)",1,2,2
"org.argouml.ui.TabText.genText()",2,1,2
"org.argouml.ui.TabText.getTarget()",1,1,1
"org.argouml.ui.TabText.insertUpdate(DocumentEvent)",1,2,2
"org.argouml.ui.TabText.parseText(String)",1,1,2
"org.argouml.ui.TabText.refresh()",1,1,1
"org.argouml.ui.TabText.removeUpdate(DocumentEvent)",1,2,2
"org.argouml.ui.TabText.setTarget(Object)",1,3,3
"org.argouml.ui.TabText.shouldBeEnabled()",1,1,1
"org.argouml.ui.TablePanel.TablePanel(String)",1,1,1
"org.argouml.ui.TablePanel.actionPerformed(ActionEvent)",1,1,1
"org.argouml.ui.TablePanel.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.ui.TablePanel.getTarget()",1,1,1
"org.argouml.ui.TablePanel.initTableModels()",1,1,1
"org.argouml.ui.TablePanel.insertUpdate(DocumentEvent)",1,2,2
"org.argouml.ui.TablePanel.itemStateChanged(ItemEvent)",1,3,3
"org.argouml.ui.TablePanel.objectSelected(Object)",1,1,1
"org.argouml.ui.TablePanel.refresh()",1,1,1
"org.argouml.ui.TablePanel.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.ui.TablePanel.setEditors(JTable)",1,1,1
"org.argouml.ui.TablePanel.setFilter()",1,1,1
"org.argouml.ui.TablePanel.setTablePerspective()",1,1,1
"org.argouml.ui.TablePanel.setTarget(Object)",1,3,3
"org.argouml.ui.TablePanel.shouldBeEnabled()",1,1,1
"org.argouml.ui.TablePanel.updateContext()",1,5,6
"org.argouml.ui.TablePanel.valueChanged(ListSelectionEvent)",5,5,6
"org.argouml.ui.ToDoItemAction.ToDoItemAction(String)",1,1,1
"org.argouml.ui.ToDoItemAction.ToDoItemAction(String,boolean)",1,1,1
"org.argouml.ui.ToDoItemAction.shouldBeEnabled(Object)",1,1,1
"org.argouml.ui.ToDoItemAction.updateEnabled(Object)",2,1,2
"org.argouml.ui.TreeModelComposite.TreeModelComposite(String)",1,1,1
"org.argouml.ui.TreeModelComposite.TreeModelComposite(String,Vector)",1,1,1
"org.argouml.ui.TreeModelComposite.addFlatChildren(Object)",2,4,5
"org.argouml.ui.TreeModelComposite.addSubTreeModel(TreeModel)",2,4,6
"org.argouml.ui.TreeModelComposite.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.ui.TreeModelComposite.calcFlatChildren()",1,1,1
"org.argouml.ui.TreeModelComposite.fireTreeStructureChanged()",1,1,1
"org.argouml.ui.TreeModelComposite.fireTreeStructureChanged(TreePath)",1,1,1
"org.argouml.ui.TreeModelComposite.getChild(Object,int)",4,4,5
"org.argouml.ui.TreeModelComposite.getChildCount(Object)",2,3,4
"org.argouml.ui.TreeModelComposite.getFlat()",1,1,1
"org.argouml.ui.TreeModelComposite.getIndexOfChild(Object,Object)",4,3,5
"org.argouml.ui.TreeModelComposite.getName()",1,1,1
"org.argouml.ui.TreeModelComposite.getRoot()",1,1,1
"org.argouml.ui.TreeModelComposite.getSubTreeModels()",1,1,1
"org.argouml.ui.TreeModelComposite.isAlwaysLeaf(Object)",1,1,1
"org.argouml.ui.TreeModelComposite.isLeaf(Object)",3,2,3
"org.argouml.ui.TreeModelComposite.removeSubTreeModel(TreeModel)",1,1,1
"org.argouml.ui.TreeModelComposite.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.ui.TreeModelComposite.setFlat(boolean)",1,2,2
"org.argouml.ui.TreeModelComposite.setName(String)",1,1,1
"org.argouml.ui.TreeModelComposite.setRoot(Object)",1,1,1
"org.argouml.ui.TreeModelComposite.toString()",2,2,2
"org.argouml.ui.TreeModelComposite.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.ui.TreeResourceBundle.getContents()",1,1,1
"org.argouml.ui.TreeResourceBundle_de.getContents()",1,1,1
"org.argouml.ui.TreeResourceBundle_fr.getContents()",1,1,1
"org.argouml.ui.UpArrowIcon.getIconHeight()",1,1,1
"org.argouml.ui.UpArrowIcon.getIconWidth()",1,1,1
"org.argouml.ui.UpArrowIcon.paintIcon(Component,Graphics,int,int)",1,1,1
"org.argouml.ui.UpdateTreeHack.UpdateTreeHack(DisplayTextTree)",1,1,1
"org.argouml.ui.UpdateTreeHack.run()",1,1,1
"org.argouml.ui.UsageStatistic.UsageStatistic(String,int)",1,1,1
"org.argouml.ui.WindowCloser.WindowCloser()",1,1,1
"org.argouml.ui.WindowCloser.windowClosing(WindowEvent)",1,1,1
"org.argouml.uml.AttrKeyword.AttrKeyword(String)",1,1,1
"org.argouml.uml.AttrKeyword.KeywordFor(MAttribute)",4,4,5
"org.argouml.uml.AttrKeyword.equals(Object)",2,1,2
"org.argouml.uml.AttrKeyword.hashCode()",1,1,1
"org.argouml.uml.AttrKeyword.set(MAttribute)",1,2,6
"org.argouml.uml.AttrKeyword.toString()",1,1,1
"org.argouml.uml.ColumnAbstract.ColumnAbstract()",1,1,1
"org.argouml.uml.ColumnAbstract.getValueFor(Object)",2,1,3
"org.argouml.uml.ColumnAbstract.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnAction.ColumnAction()",1,1,1
"org.argouml.uml.ColumnAction.getValueFor(Object)",2,3,4
"org.argouml.uml.ColumnAction.setValueFor(Object,Object)",3,2,4
"org.argouml.uml.ColumnActionType.ColumnActionType()",1,1,1
"org.argouml.uml.ColumnActionType.getValueFor(Object)",2,1,7
"org.argouml.uml.ColumnActionType.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnAttrKeyword.ColumnAttrKeyword()",1,1,1
"org.argouml.uml.ColumnAttrKeyword.getValueFor(Object)",2,1,2
"org.argouml.uml.ColumnAttrKeyword.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnBaseForComponentInstance.ColumnBaseForComponentInstance()",1,1,1
"org.argouml.uml.ColumnBaseForComponentInstance.getValueFor(Object)",2,6,7
"org.argouml.uml.ColumnBaseForComponentInstance.setValueFor(Object,Object)",11,9,16
"org.argouml.uml.ColumnBaseForNodeInstance.ColumnBaseForNodeInstance()",1,1,1
"org.argouml.uml.ColumnBaseForNodeInstance.getValueFor(Object)",2,6,7
"org.argouml.uml.ColumnBaseForNodeInstance.setValueFor(Object,Object)",11,9,16
"org.argouml.uml.ColumnBaseForObject.ColumnBaseForObject()",1,1,1
"org.argouml.uml.ColumnBaseForObject.getValueFor(Object)",2,6,7
"org.argouml.uml.ColumnBaseForObject.setValueFor(Object,Object)",11,9,17
"org.argouml.uml.ColumnClassKeyword.ColumnClassKeyword()",1,1,1
"org.argouml.uml.ColumnClassKeyword.getValueFor(Object)",2,1,2
"org.argouml.uml.ColumnClassKeyword.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnClassVisibility.ColumnClassVisibility()",1,1,1
"org.argouml.uml.ColumnClassVisibility.getValueFor(Object)",2,1,2
"org.argouml.uml.ColumnClassVisibility.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnClient.ColumnClient()",1,1,1
"org.argouml.uml.ColumnClient.getValueFor(Object)",2,6,7
"org.argouml.uml.ColumnClient.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnCommunication.ColumnCommunication()",1,1,1
"org.argouml.uml.ColumnCommunication.getValueFor(Object)",2,1,3
"org.argouml.uml.ColumnCommunication.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnCompNode.ColumnCompNode()",1,1,1
"org.argouml.uml.ColumnCompNode.getValueFor(Object)",2,5,6
"org.argouml.uml.ColumnCompNode.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnCompNodeInstance.ColumnCompNodeInstance()",1,1,1
"org.argouml.uml.ColumnCompNodeInstance.getValueFor(Object)",2,2,3
"org.argouml.uml.ColumnCompNodeInstance.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnComponentInstance.ColumnComponentInstance()",1,1,1
"org.argouml.uml.ColumnComponentInstance.getValueFor(Object)",2,2,3
"org.argouml.uml.ColumnComponentInstance.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnDescriptor.ColumnDescriptor(String,Class,boolean)",1,1,1
"org.argouml.uml.ColumnDescriptor.getColumnClass()",1,1,1
"org.argouml.uml.ColumnDescriptor.getName()",1,1,1
"org.argouml.uml.ColumnDescriptor.isEditable(Object)",1,1,1
"org.argouml.uml.ColumnDstLinkType.ColumnDstLinkType()",1,1,1
"org.argouml.uml.ColumnDstLinkType.getValueFor(Object)",2,5,6
"org.argouml.uml.ColumnDstLinkType.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnDstMultiplicity.ColumnDstMultiplicity()",1,1,1
"org.argouml.uml.ColumnDstMultiplicity.getValueFor(Object)",4,4,5
"org.argouml.uml.ColumnDstMultiplicity.setValueFor(Object,Object)",3,2,4
"org.argouml.uml.ColumnDstName.ColumnDstName()",1,1,1
"org.argouml.uml.ColumnDstName.getValueFor(Object)",4,4,5
"org.argouml.uml.ColumnDstName.setValueFor(Object,Object)",3,2,4
"org.argouml.uml.ColumnDstNavigability.ColumnDstNavigability()",1,1,1
"org.argouml.uml.ColumnDstNavigability.getValueFor(Object)",3,2,4
"org.argouml.uml.ColumnDstNavigability.setValueFor(Object,Object)",3,2,4
"org.argouml.uml.ColumnDstType.ColumnDstType()",1,1,1
"org.argouml.uml.ColumnDstType.getValueFor(Object)",4,5,6
"org.argouml.uml.ColumnDstType.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnEffect.ColumnEffect()",1,1,1
"org.argouml.uml.ColumnEffect.getValueFor(Object)",3,1,3
"org.argouml.uml.ColumnEffect.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnEntry.ColumnEntry()",1,1,1
"org.argouml.uml.ColumnEntry.getValueFor(Object)",3,2,3
"org.argouml.uml.ColumnEntry.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnExit.ColumnExit()",1,1,1
"org.argouml.uml.ColumnExit.getValueFor(Object)",3,2,3
"org.argouml.uml.ColumnExit.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnExtends.ColumnExtends()",1,1,1
"org.argouml.uml.ColumnExtends.getValueFor(Object)",3,3,6
"org.argouml.uml.ColumnExtends.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnFeatureVis.ColumnFeatureVis()",1,1,1
"org.argouml.uml.ColumnFeatureVis.getValueFor(Object)",3,3,3
"org.argouml.uml.ColumnFeatureVis.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnGuard.ColumnGuard()",1,1,1
"org.argouml.uml.ColumnGuard.getValueFor(Object)",3,1,3
"org.argouml.uml.ColumnGuard.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnImplLocation.ColumnImplLocation()",1,1,1
"org.argouml.uml.ColumnImplLocation.getValueFor(Object)",2,9,11
"org.argouml.uml.ColumnImplLocation.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnLeaf.ColumnLeaf()",1,1,1
"org.argouml.uml.ColumnLeaf.getValueFor(Object)",2,1,3
"org.argouml.uml.ColumnLeaf.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnName.ColumnName()",1,1,1
"org.argouml.uml.ColumnName.getValueFor(Object)",3,5,6
"org.argouml.uml.ColumnName.isEditable(Object)",1,2,2
"org.argouml.uml.ColumnName.setValueFor(Object,Object)",4,1,4
"org.argouml.uml.ColumnOperKeyword.ColumnOperKeyword()",1,1,1
"org.argouml.uml.ColumnOperKeyword.getValueFor(Object)",2,1,2
"org.argouml.uml.ColumnOperKeyword.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnParent.ColumnParent()",1,1,1
"org.argouml.uml.ColumnParent.getValueFor(Object)",3,2,3
"org.argouml.uml.ColumnParent.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnQuery.ColumnQuery()",1,1,1
"org.argouml.uml.ColumnQuery.getValueFor(Object)",2,1,3
"org.argouml.uml.ColumnQuery.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnReturn.ColumnReturn()",1,1,1
"org.argouml.uml.ColumnReturn.getValueFor(Object)",3,3,4
"org.argouml.uml.ColumnReturn.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnRoot.ColumnRoot()",1,1,1
"org.argouml.uml.ColumnRoot.getValueFor(Object)",2,1,3
"org.argouml.uml.ColumnRoot.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnSource.ColumnSource()",1,1,1
"org.argouml.uml.ColumnSource.getValueFor(Object)",3,2,3
"org.argouml.uml.ColumnSource.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnSrcLinkType.ColumnSrcLinkType()",1,1,1
"org.argouml.uml.ColumnSrcLinkType.getValueFor(Object)",2,5,6
"org.argouml.uml.ColumnSrcLinkType.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnSrcMultiplicity.ColumnSrcMultiplicity()",1,1,1
"org.argouml.uml.ColumnSrcMultiplicity.getValueFor(Object)",4,4,5
"org.argouml.uml.ColumnSrcMultiplicity.setValueFor(Object,Object)",3,2,4
"org.argouml.uml.ColumnSrcName.ColumnSrcName()",1,1,1
"org.argouml.uml.ColumnSrcName.getValueFor(Object)",4,4,5
"org.argouml.uml.ColumnSrcName.setValueFor(Object,Object)",3,2,4
"org.argouml.uml.ColumnSrcNavigability.ColumnSrcNavigability()",1,1,1
"org.argouml.uml.ColumnSrcNavigability.getValueFor(Object)",3,2,4
"org.argouml.uml.ColumnSrcNavigability.setValueFor(Object,Object)",3,2,4
"org.argouml.uml.ColumnSrcType.ColumnSrcType()",1,1,1
"org.argouml.uml.ColumnSrcType.getValueFor(Object)",4,5,6
"org.argouml.uml.ColumnSrcType.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnStereotype.ColumnStereotype()",1,1,1
"org.argouml.uml.ColumnStereotype.getValueFor(Object)",3,4,4
"org.argouml.uml.ColumnStereotype.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnSupplier.ColumnSupplier()",1,1,1
"org.argouml.uml.ColumnSupplier.getValueFor(Object)",2,6,7
"org.argouml.uml.ColumnSupplier.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnTarget.ColumnTarget()",1,1,1
"org.argouml.uml.ColumnTarget.getValueFor(Object)",3,2,3
"org.argouml.uml.ColumnTarget.setValueFor(Object,Object)",1,1,1
"org.argouml.uml.ColumnTrigger.ColumnTrigger()",1,1,1
"org.argouml.uml.ColumnTrigger.getValueFor(Object)",3,1,3
"org.argouml.uml.ColumnTrigger.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.ColumnType.ColumnType()",1,1,1
"org.argouml.uml.ColumnType.getValueFor(Object)",2,1,2
"org.argouml.uml.ColumnType.setValueFor(Object,Object)",4,2,4
"org.argouml.uml.ColumnVisibility.ColumnVisibility()",1,1,1
"org.argouml.uml.ColumnVisibility.getValueFor(Object)",3,3,4
"org.argouml.uml.ColumnVisibility.setValueFor(Object,Object)",3,1,3
"org.argouml.uml.DocumentationManager.defaultFor(Object)",6,1,6
"org.argouml.uml.DocumentationManager.getComments(Object)",2,8,9
"org.argouml.uml.DocumentationManager.getDocs(Object)",2,8,8
"org.argouml.uml.DocumentationManager.hasDocs(Object)",5,5,6
"org.argouml.uml.DocumentationManager.setDocs(Object,String)",1,1,1
"org.argouml.uml.GenAncestorClasses.accumulateAncestors(MGeneralizableElement,Vector)",2,3,4
"org.argouml.uml.GenAncestorClasses.gen(Object)",3,3,3
"org.argouml.uml.GenCompositeClasses.gen(Object)",5,6,8
"org.argouml.uml.GenDescendantClasses.accumulateDescendants(MGeneralizableElement,Vector)",2,3,4
"org.argouml.uml.GenDescendantClasses.gen(Object)",3,3,3
"org.argouml.uml.MMUtil.buildAssociation(MClassifier,MClassifier)",1,1,1
"org.argouml.uml.MMUtil.buildAssociation(MClassifier,boolean,MClassifier,boolean)",1,1,1
"org.argouml.uml.MMUtil.buildAttribute(MClassifier)",1,1,1
"org.argouml.uml.MMUtil.buildBinding(MModelElement,MModelElement)",1,3,3
"org.argouml.uml.MMUtil.buildDependency(MModelElement,MModelElement)",1,3,3
"org.argouml.uml.MMUtil.buildGeneralization(MGeneralizableElement,MGeneralizableElement)",2,3,4
"org.argouml.uml.MMUtil.buildMessage(MAssociationRole)",1,1,1
"org.argouml.uml.MMUtil.buildMessage(MAssociationRole,String)",2,1,2
"org.argouml.uml.MMUtil.buildOperation(MClassifier)",1,1,1
"org.argouml.uml.MMUtil.buildRealization(MModelElement,MModelElement)",1,3,3
"org.argouml.uml.MMUtil.buildUsage(MModelElement,MModelElement)",1,3,3
"org.argouml.uml.MMUtil.getAllSupertypes(MClassifier)",1,4,4
"org.argouml.uml.MMUtil.getAssociateEnds(MClassifier)",1,3,3
"org.argouml.uml.MMUtil.getAssociateEndsInh(MClassifier)",1,2,2
"org.argouml.uml.MMUtil.getAttributes(MClassifier)",1,3,3
"org.argouml.uml.MMUtil.getAttributesInh(MClassifier)",1,2,2
"org.argouml.uml.MMUtil.getOperations(MClassifier)",1,3,3
"org.argouml.uml.MMUtil.getOperationsInh(MClassifier)",1,2,2
"org.argouml.uml.MMUtil.getRealizationStereotype()",1,1,1
"org.argouml.uml.MMUtil.getReturnParameter(MOperation)",4,5,6
"org.argouml.uml.MMUtil.getSpecifications(MClassifier)",1,6,6
"org.argouml.uml.MMUtil.getSubtypes(MClassifier)",1,2,2
"org.argouml.uml.MMUtil.getSupertypes(MClassifier)",1,2,2
"org.argouml.uml.MMUtil.remove(MClassifier)",1,10,10
"org.argouml.uml.MMUtil.remove(MLink)",1,1,1
"org.argouml.uml.MMUtil.remove(MObject)",1,3,3
"org.argouml.uml.MMUtil.remove(MStateVertex)",1,3,3
"org.argouml.uml.MMUtil.remove(MStimulus)",1,1,1
"org.argouml.uml.MMUtil.setReturnParameter(MOperation,MParameter)",1,3,3
"org.argouml.uml.OperKeyword.KeywordFor(MOperation)",4,2,4
"org.argouml.uml.OperKeyword.OperKeyword(String)",1,1,1
"org.argouml.uml.OperKeyword.equals(Object)",2,1,2
"org.argouml.uml.OperKeyword.hashCode()",1,1,1
"org.argouml.uml.OperKeyword.set(MOperation)",1,1,9
"org.argouml.uml.OperKeyword.toString()",1,1,1
"org.argouml.uml.PredicateFind.PredicateFind(Predicate,Predicate,Predicate,Predicate)",1,1,1
"org.argouml.uml.PredicateFind.matchDiagram(Diagram)",1,1,1
"org.argouml.uml.PredicateFind.matchPackage(MModel)",1,1,1
"org.argouml.uml.PredicateFind.predicate(Object)",2,3,4
"org.argouml.uml.ProfileJava.ProfileJava()",1,9,9
"org.argouml.uml.ProfileJava.buildPath(StringBuffer,MModelElement,String)",1,5,6
"org.argouml.uml.ProfileJava.defaultAssocEndName(MAssociationEnd,MNamespace)",1,4,4
"org.argouml.uml.ProfileJava.defaultAssocName(MAssociation,MNamespace)",1,3,3
"org.argouml.uml.ProfileJava.defaultGeneralizationName(MGeneralization,MNamespace)",1,1,1
"org.argouml.uml.ProfileJava.defaultName(MModelElement,MNamespace)",1,4,5
"org.argouml.uml.ProfileJava.formatCollection(Iterator,MNamespace)",1,5,5
"org.argouml.uml.ProfileJava.formatElement(MModelElement,MNamespace)",1,7,7
"org.argouml.uml.ProfileJava.getElementSeparator()",1,1,1
"org.argouml.uml.ProfileJava.getEmptyCollection()",1,1,1
"org.argouml.uml.ProfileJava.getPathSeparator()",1,1,1
"org.argouml.uml.ProfileJava.getProfileModel()",1,1,1
"org.argouml.uml.ProjectMemberModel.ProjectMemberModel(MModel,Project)",1,1,1
"org.argouml.uml.ProjectMemberModel.ProjectMemberModel(String,Project)",1,1,1
"org.argouml.uml.ProjectMemberModel.getFileExtension()",1,1,1
"org.argouml.uml.ProjectMemberModel.getModel()",1,1,1
"org.argouml.uml.ProjectMemberModel.getType()",1,1,1
"org.argouml.uml.ProjectMemberModel.load()",1,1,1
"org.argouml.uml.ProjectMemberModel.save(String,boolean)",1,1,1
"org.argouml.uml.ProjectMemberModel.save(String,boolean,Writer)",2,3,3
"org.argouml.uml.ProjectMemberModel.setModel(MModel)",1,1,1
"org.argouml.uml.SuperclassGen.gen(Object)",2,2,3
"org.argouml.uml.TMResults.TMResults()",1,1,1
"org.argouml.uml.TMResults.getColumnClass(int)",1,1,1
"org.argouml.uml.TMResults.getColumnCount()",1,1,1
"org.argouml.uml.TMResults.getColumnName(int)",5,1,5
"org.argouml.uml.TMResults.getRowCount()",2,1,2
"org.argouml.uml.TMResults.getValueAt(int,int)",19,14,24
"org.argouml.uml.TMResults.isCellEditable(int,int)",1,1,1
"org.argouml.uml.TMResults.setTarget(Vector,Vector)",1,1,1
"org.argouml.uml.TMResults.setValueAt(Object,int,int)",1,1,1
"org.argouml.uml.TableModelAttr.TableModelAttr()",1,1,1
"org.argouml.uml.TableModelAttr.initColumns()",1,1,1
"org.argouml.uml.TableModelAttr.rowObjectsFor(Object)",2,1,2
"org.argouml.uml.TableModelAttr.toString()",1,1,1
"org.argouml.uml.TableModelComposite.TableModelComposite()",1,1,1
"org.argouml.uml.TableModelComposite.addColumn(ColumnDescriptor)",1,1,1
"org.argouml.uml.TableModelComposite.delayedVetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.uml.TableModelComposite.getColumnClass(int)",2,2,2
"org.argouml.uml.TableModelComposite.getColumnCount()",1,1,1
"org.argouml.uml.TableModelComposite.getColumnName(int)",2,2,2
"org.argouml.uml.TableModelComposite.getRowCount()",1,1,2
"org.argouml.uml.TableModelComposite.getRowObjects()",1,1,1
"org.argouml.uml.TableModelComposite.getValueAt(int,int)",3,5,5
"org.argouml.uml.TableModelComposite.initColumns()",1,1,1
"org.argouml.uml.TableModelComposite.isCellEditable(int,int)",3,3,5
"org.argouml.uml.TableModelComposite.rowObjectsFor(Object)",1,1,1
"org.argouml.uml.TableModelComposite.setAllowAddition(boolean)",1,1,1
"org.argouml.uml.TableModelComposite.setAllowRemoval(boolean)",1,1,1
"org.argouml.uml.TableModelComposite.setFilter(Predicate)",1,1,1
"org.argouml.uml.TableModelComposite.setTarget(Object)",1,1,1
"org.argouml.uml.TableModelComposite.setValueAt(Object,int,int)",3,9,9
"org.argouml.uml.TableModelComposite.vetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.uml.TableModelOper.TableModelOper()",1,1,1
"org.argouml.uml.TableModelOper.initColumns()",1,1,1
"org.argouml.uml.TableModelOper.rowObjectsFor(Object)",2,1,2
"org.argouml.uml.TableModelOper.toString()",1,1,1
"org.argouml.uml.UMLChangeRegistry.UMLChangeRegistry()",1,1,1
"org.argouml.uml.UMLChangeRegistry.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.UMLChangeRegistry.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.UMLChangeRegistry.recovered(MElementEvent)",1,1,1
"org.argouml.uml.UMLChangeRegistry.removed(MElementEvent)",1,1,1
"org.argouml.uml.UMLChangeRegistry.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.UMLChangeRegistry.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.UUIDManager.UUIDManager()",1,1,1
"org.argouml.uml.UUIDManager.createModelUUIDS(MNamespace)",1,6,19
"org.argouml.uml.UUIDManager.getNewUUID()",1,3,3
"org.argouml.uml.cognitive.ChildGenFind.gen(Object)",7,7,7
"org.argouml.uml.cognitive.ChildGenRelated.gen(Object)",8,13,14
"org.argouml.uml.cognitive.EOElement.apply(Object)",2,1,2
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle.getContents()",1,1,1
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle_de.getContents()",1,1,1
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle_en_GB.getContents()",1,1,1
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle_es.getContents()",1,1,1
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle_fr.getContents()",1,1,1
"org.argouml.uml.cognitive.checklist.ChActor.ChActor()",1,1,1
"org.argouml.uml.cognitive.checklist.ChAssociation.ChAssociation()",1,1,1
"org.argouml.uml.cognitive.checklist.ChAttribute.ChAttribute()",1,1,1
"org.argouml.uml.cognitive.checklist.ChClass.ChClass()",1,1,1
"org.argouml.uml.cognitive.checklist.ChInstance.ChInstance()",1,1,1
"org.argouml.uml.cognitive.checklist.ChInterface.ChInterface()",1,1,1
"org.argouml.uml.cognitive.checklist.ChLink.ChLink()",1,1,1
"org.argouml.uml.cognitive.checklist.ChOperation.ChOperation()",1,1,1
"org.argouml.uml.cognitive.checklist.ChState.ChState()",1,1,1
"org.argouml.uml.cognitive.checklist.ChTransition.ChTransition()",1,1,1
"org.argouml.uml.cognitive.checklist.ChUseCase.ChUseCase()",1,1,1
"org.argouml.uml.cognitive.checklist.Init.addChecklist(ResourceBundle,Class,String)",1,2,2
"org.argouml.uml.cognitive.checklist.Init.init(Locale)",1,1,1
"org.argouml.uml.cognitive.checklist.UMLCheckItem.UMLCheckItem(String,String)",1,1,1
"org.argouml.uml.cognitive.checklist.UMLCheckItem.UMLCheckItem(String,String,String,Predicate)",1,1,1
"org.argouml.uml.cognitive.checklist.UMLCheckItem.expand(String,Object)",1,2,2
"org.argouml.uml.cognitive.checklist.UMLChecklist.UMLChecklist()",1,1,1
"org.argouml.uml.cognitive.checklist.UMLChecklist.UMLChecklist(String[][])",1,3,3
"org.argouml.uml.cognitive.checklist.UMLChecklist.addItem(String)",1,1,1
"org.argouml.uml.cognitive.checklist.UMLChecklist.setNextCategory(String)",1,1,1
"org.argouml.uml.cognitive.critics.ChildGenDerivedClasses.gen(Object)",2,3,4
"org.argouml.uml.cognitive.critics.ChildGenUML.gen(Object)",13,19,19
"org.argouml.uml.cognitive.critics.ClAttributeCompartment.getIconHeight()",1,1,1
"org.argouml.uml.cognitive.critics.ClAttributeCompartment.getIconWidth()",1,1,1
"org.argouml.uml.cognitive.critics.ClAttributeCompartment.hit(int,int)",2,2,2
"org.argouml.uml.cognitive.critics.ClAttributeCompartment.paintIcon(Component,Graphics,int,int)",8,3,8
"org.argouml.uml.cognitive.critics.ClAttributeCompartment.setFig(Fig)",1,1,1
"org.argouml.uml.cognitive.critics.ClAttributeCompartment.setToDoItem(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.ClClassName.getIconHeight()",1,1,1
"org.argouml.uml.cognitive.critics.ClClassName.getIconWidth()",1,1,1
"org.argouml.uml.cognitive.critics.ClClassName.hit(int,int)",1,4,4
"org.argouml.uml.cognitive.critics.ClClassName.paintIcon(Component,Graphics,int,int)",7,5,9
"org.argouml.uml.cognitive.critics.ClClassName.setFig(Fig)",1,1,1
"org.argouml.uml.cognitive.critics.ClClassName.setToDoItem(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.ClOperationCompartment.getIconHeight()",1,1,1
"org.argouml.uml.cognitive.critics.ClOperationCompartment.getIconWidth()",1,1,1
"org.argouml.uml.cognitive.critics.ClOperationCompartment.hit(int,int)",2,1,2
"org.argouml.uml.cognitive.critics.ClOperationCompartment.paintIcon(Component,Graphics,int,int)",8,3,8
"org.argouml.uml.cognitive.critics.ClOperationCompartment.setFig(Fig)",1,1,1
"org.argouml.uml.cognitive.critics.ClOperationCompartment.setToDoItem(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrAlreadyRealizes.CrAlreadyRealizes()",1,1,1
"org.argouml.uml.cognitive.critics.CrAlreadyRealizes.accumIndirect(MGeneralizableElement,Vector)",1,3,3
"org.argouml.uml.cognitive.critics.CrAlreadyRealizes.findIndirectRealizations(MClassifier)",3,2,3
"org.argouml.uml.cognitive.critics.CrAlreadyRealizes.getSpecifications(MClassifier)",2,4,5
"org.argouml.uml.cognitive.critics.CrAlreadyRealizes.predicate2(Object,Designer)",4,1,5
"org.argouml.uml.cognitive.critics.CrAssocNameConflict.CrAssocNameConflict()",1,1,1
"org.argouml.uml.cognitive.critics.CrAssocNameConflict.predicate2(Object,Designer)",4,1,5
"org.argouml.uml.cognitive.critics.CrAttrNameConflict.CrAttrNameConflict()",1,1,1
"org.argouml.uml.cognitive.critics.CrAttrNameConflict.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrAttrNameConflict.predicate2(Object,Designer)",7,2,9
"org.argouml.uml.cognitive.critics.CrCallWithoutReturn.CrCallWithoutReturn()",1,1,1
"org.argouml.uml.cognitive.critics.CrCallWithoutReturn.computeOffenders(UMLSequenceDiagram)",1,14,15
"org.argouml.uml.cognitive.critics.CrCallWithoutReturn.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrCallWithoutReturn.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrCallWithoutReturn.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrCircularAssocClass.CrCircularAssocClass()",1,1,1
"org.argouml.uml.cognitive.critics.CrCircularAssocClass.predicate2(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrCircularComposition.CrCircularComposition()",1,1,1
"org.argouml.uml.cognitive.critics.CrCircularComposition.computeOffenders(MClassifier)",1,2,3
"org.argouml.uml.cognitive.critics.CrCircularComposition.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrCircularComposition.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrCircularComposition.stillValid(ToDoItem,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrCircularComposition.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrCircularInheritance.CrCircularInheritance()",1,1,1
"org.argouml.uml.cognitive.critics.CrCircularInheritance.computeOffenders(MGeneralizableElement)",1,2,3
"org.argouml.uml.cognitive.critics.CrCircularInheritance.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrCircularInheritance.stillValid(ToDoItem,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrCircularInheritance.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrClassMustBeAbstract.CrClassMustBeAbstract()",1,1,1
"org.argouml.uml.cognitive.critics.CrClassMustBeAbstract.predicate2(Object,Designer)",3,1,4
"org.argouml.uml.cognitive.critics.CrClassWithoutComponent.CrClassWithoutComponent()",1,1,1
"org.argouml.uml.cognitive.critics.CrClassWithoutComponent.computeOffenders(UMLDeploymentDiagram)",3,5,6
"org.argouml.uml.cognitive.critics.CrClassWithoutComponent.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrClassWithoutComponent.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrClassWithoutComponent.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrCompInstanceWithoutNode.CrCompInstanceWithoutNode()",1,1,1
"org.argouml.uml.cognitive.critics.CrCompInstanceWithoutNode.computeOffenders(UMLDeploymentDiagram)",3,9,11
"org.argouml.uml.cognitive.critics.CrCompInstanceWithoutNode.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrCompInstanceWithoutNode.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrCompInstanceWithoutNode.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrComponentInstanceWithoutClassifier.CrComponentInstanceWithoutClassifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrComponentInstanceWithoutClassifier.computeOffenders(UMLDeploymentDiagram)",6,9,12
"org.argouml.uml.cognitive.critics.CrComponentInstanceWithoutClassifier.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrComponentInstanceWithoutClassifier.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrComponentInstanceWithoutClassifier.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrComponentWithoutNode.CrComponentWithoutNode()",1,1,1
"org.argouml.uml.cognitive.critics.CrComponentWithoutNode.computeOffenders(UMLDeploymentDiagram)",3,10,12
"org.argouml.uml.cognitive.critics.CrComponentWithoutNode.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrComponentWithoutNode.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrComponentWithoutNode.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrConflictingComposites.CrConflictingComposites()",1,1,1
"org.argouml.uml.cognitive.critics.CrConflictingComposites.hasCompositeEnd(MAssociation)",3,2,3
"org.argouml.uml.cognitive.critics.CrConflictingComposites.predicate2(Object,Designer)",6,2,9
"org.argouml.uml.cognitive.critics.CrConstructorNeeded.CrConstructorNeeded()",1,1,1
"org.argouml.uml.cognitive.critics.CrConstructorNeeded.getReturnType(MBehavioralFeature)",3,2,3
"org.argouml.uml.cognitive.critics.CrConstructorNeeded.predicate2(Object,Designer)",11,5,18
"org.argouml.uml.cognitive.critics.CrCrossNamespaceAssoc.CrCrossNamespaceAssoc()",1,1,1
"org.argouml.uml.cognitive.critics.CrCrossNamespaceAssoc.predicate2(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrDisambigClassName.CrDisambigClassName()",1,1,1
"org.argouml.uml.cognitive.critics.CrDisambigClassName.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrDisambigClassName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrDisambigClassName.initWizard(Wizard)",1,2,2
"org.argouml.uml.cognitive.critics.CrDisambigClassName.predicate2(Object,Designer)",10,3,12
"org.argouml.uml.cognitive.critics.CrDisambigStateName.CrDisambigStateName()",1,1,1
"org.argouml.uml.cognitive.critics.CrDisambigStateName.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrDisambigStateName.predicate2(Object,Designer)",12,4,15
"org.argouml.uml.cognitive.critics.CrDupParamName.CrDupParamName()",1,1,1
"org.argouml.uml.cognitive.critics.CrDupParamName.predicate2(Object,Designer)",5,3,8
"org.argouml.uml.cognitive.critics.CrDupRoleNames.CrDupRoleNames()",1,1,1
"org.argouml.uml.cognitive.critics.CrDupRoleNames.predicate2(Object,Designer)",5,2,7
"org.argouml.uml.cognitive.critics.CrEmptyPackage.CrEmptyPackage()",1,1,1
"org.argouml.uml.cognitive.critics.CrEmptyPackage.predicate2(Object,Designer)",3,2,4
"org.argouml.uml.cognitive.critics.CrFinalSubclassed.CrFinalSubclassed()",1,1,1
"org.argouml.uml.cognitive.critics.CrFinalSubclassed.predicate2(Object,Designer)",4,2,5
"org.argouml.uml.cognitive.critics.CrIllegalGeneralization.CrIllegalGeneralization()",1,1,1
"org.argouml.uml.cognitive.critics.CrIllegalGeneralization.predicate2(Object,Designer)",4,1,5
"org.argouml.uml.cognitive.critics.CrIllegalName.CrIllegalName()",1,1,1
"org.argouml.uml.cognitive.critics.CrIllegalName.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrIllegalName.predicate2(Object,Designer)",5,4,7
"org.argouml.uml.cognitive.critics.CrInstanceWithoutClassifier.CrInstanceWithoutClassifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrInstanceWithoutClassifier.computeOffenders(UMLDeploymentDiagram)",6,6,8
"org.argouml.uml.cognitive.critics.CrInstanceWithoutClassifier.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrInstanceWithoutClassifier.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrInstanceWithoutClassifier.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrInterfaceAllPublic.CrInterfaceAllPublic()",1,1,1
"org.argouml.uml.cognitive.critics.CrInterfaceAllPublic.predicate2(Object,Designer)",5,1,6
"org.argouml.uml.cognitive.critics.CrInterfaceOperOnly.CrInterfaceOperOnly()",1,1,1
"org.argouml.uml.cognitive.critics.CrInterfaceOperOnly.predicate2(Object,Designer)",5,2,5
"org.argouml.uml.cognitive.critics.CrInterfaceWithoutComponent.CrInterfaceWithoutComponent()",1,1,1
"org.argouml.uml.cognitive.critics.CrInterfaceWithoutComponent.computeOffenders(UMLDeploymentDiagram)",3,5,6
"org.argouml.uml.cognitive.critics.CrInterfaceWithoutComponent.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrInterfaceWithoutComponent.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrInterfaceWithoutComponent.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrInvalidBranch.CrInvalidBranch()",1,1,1
"org.argouml.uml.cognitive.critics.CrInvalidBranch.predicate2(Object,Designer)",5,3,7
"org.argouml.uml.cognitive.critics.CrInvalidFork.CrInvalidFork()",1,1,1
"org.argouml.uml.cognitive.critics.CrInvalidFork.predicate2(Object,Designer)",5,3,7
"org.argouml.uml.cognitive.critics.CrInvalidInitial.CrInvalidInitial()",1,1,1
"org.argouml.uml.cognitive.critics.CrInvalidInitial.predicate2(Object,Designer)",4,2,5
"org.argouml.uml.cognitive.critics.CrInvalidJoin.CrInvalidJoin()",1,1,1
"org.argouml.uml.cognitive.critics.CrInvalidJoin.predicate2(Object,Designer)",5,3,7
"org.argouml.uml.cognitive.critics.CrLinkWithoutStimulus.CrLinkWithoutStimulus()",1,1,1
"org.argouml.uml.cognitive.critics.CrLinkWithoutStimulus.computeOffenders(UMLSequenceDiagram)",1,6,7
"org.argouml.uml.cognitive.critics.CrLinkWithoutStimulus.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrLinkWithoutStimulus.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrLinkWithoutStimulus.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrMergeClasses.CrMergeClasses()",1,1,1
"org.argouml.uml.cognitive.critics.CrMergeClasses.predicate2(Object,Designer)",4,3,6
"org.argouml.uml.cognitive.critics.CrMissingAttrName.CrMissingAttrName()",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingAttrName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingAttrName.initWizard(Wizard)",1,4,4
"org.argouml.uml.cognitive.critics.CrMissingAttrName.predicate2(Object,Designer)",4,2,5
"org.argouml.uml.cognitive.critics.CrMissingClassName.CrMissingClassName()",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingClassName.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingClassName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingClassName.initWizard(Wizard)",1,3,3
"org.argouml.uml.cognitive.critics.CrMissingClassName.predicate2(Object,Designer)",3,4,6
"org.argouml.uml.cognitive.critics.CrMissingOperName.CrMissingOperName()",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingOperName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingOperName.initWizard(Wizard)",1,4,4
"org.argouml.uml.cognitive.critics.CrMissingOperName.predicate2(Object,Designer)",4,2,5
"org.argouml.uml.cognitive.critics.CrMissingStateName.CrMissingStateName()",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingStateName.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingStateName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrMissingStateName.initWizard(Wizard)",1,4,4
"org.argouml.uml.cognitive.critics.CrMissingStateName.predicate2(Object,Designer)",3,4,6
"org.argouml.uml.cognitive.critics.CrMultiComposite.CrMultiComposite()",1,1,1
"org.argouml.uml.cognitive.critics.CrMultiComposite.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrMultiComposite.predicate2(Object,Designer)",4,1,4
"org.argouml.uml.cognitive.critics.CrMultipleAgg.CrMultipleAgg()",1,1,1
"org.argouml.uml.cognitive.critics.CrMultipleAgg.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrMultipleAgg.predicate2(Object,Designer)",3,2,6
"org.argouml.uml.cognitive.critics.CrMultipleInitialStates.CrMultipleInitialStates()",1,1,1
"org.argouml.uml.cognitive.critics.CrMultipleInitialStates.computeOffenders(MPseudostate)",2,5,5
"org.argouml.uml.cognitive.critics.CrMultipleInitialStates.predicate2(Object,Designer)",5,4,8
"org.argouml.uml.cognitive.critics.CrMultipleInitialStates.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrMultipleInitialStates.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrNWayAgg.CrNWayAgg()",1,1,1
"org.argouml.uml.cognitive.critics.CrNWayAgg.predicate2(Object,Designer)",4,3,8
"org.argouml.uml.cognitive.critics.CrNameConflict.CrNameConflict()",1,1,1
"org.argouml.uml.cognitive.critics.CrNameConflict.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrNameConflict.initWizard(Wizard)",1,2,2
"org.argouml.uml.cognitive.critics.CrNameConflict.predicate2(Object,Designer)",8,2,10
"org.argouml.uml.cognitive.critics.CrNameConflictAC.CrNameConflictAC()",1,1,1
"org.argouml.uml.cognitive.critics.CrNameConflictAC.predicate2(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrNameConfusion.CrNameConfusion()",1,1,1
"org.argouml.uml.cognitive.critics.CrNameConfusion.computeOffenders(MModelElement)",7,6,13
"org.argouml.uml.cognitive.critics.CrNameConfusion.confusable(String,String)",1,1,1
"org.argouml.uml.cognitive.critics.CrNameConfusion.countDiffs(String,String)",2,2,4
"org.argouml.uml.cognitive.critics.CrNameConfusion.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrNameConfusion.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrNameConfusion.initWizard(Wizard)",1,2,2
"org.argouml.uml.cognitive.critics.CrNameConfusion.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrNameConfusion.stillValid(ToDoItem,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrNameConfusion.strip(String)",1,3,3
"org.argouml.uml.cognitive.critics.CrNameConfusion.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrNavFromInterface.CrNavFromInterface()",1,1,1
"org.argouml.uml.cognitive.critics.CrNavFromInterface.predicate2(Object,Designer)",7,4,9
"org.argouml.uml.cognitive.critics.CrNoAssociations.CrNoAssociations()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoAssociations.getInheritedAssociationEnds(MClassifier,int)",1,3,5
"org.argouml.uml.cognitive.critics.CrNoAssociations.predicate2(Object,Designer)",3,2,4
"org.argouml.uml.cognitive.critics.CrNoGuard.CrNoGuard()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoGuard.predicate2(Object,Designer)",5,5,9
"org.argouml.uml.cognitive.critics.CrNoIncomingTransitions.CrNoIncomingTransitions()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoIncomingTransitions.predicate2(Object,Designer)",5,5,9
"org.argouml.uml.cognitive.critics.CrNoInitialState.CrNoInitialState()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoInitialState.predicate2(Object,Designer)",4,3,7
"org.argouml.uml.cognitive.critics.CrNoInstanceVariables.CrNoInstanceVariables()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoInstanceVariables.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoInstanceVariables.getInheritedStructuralFeatures(MClassifier,int)",1,3,5
"org.argouml.uml.cognitive.critics.CrNoInstanceVariables.predicate2(Object,Designer)",5,2,7
"org.argouml.uml.cognitive.critics.CrNoOperations.CrNoOperations()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoOperations.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoOperations.getInheritedBehavioralFeatures(MClassifier,int)",1,5,7
"org.argouml.uml.cognitive.critics.CrNoOperations.predicate2(Object,Designer)",5,2,5
"org.argouml.uml.cognitive.critics.CrNoOutgoingTransitions.CrNoOutgoingTransitions()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoOutgoingTransitions.predicate2(Object,Designer)",5,4,8
"org.argouml.uml.cognitive.critics.CrNoTransitions.CrNoTransitions()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoTransitions.predicate2(Object,Designer)",5,6,12
"org.argouml.uml.cognitive.critics.CrNoTriggerOrGuard.CrNoTriggerOrGuard()",1,1,1
"org.argouml.uml.cognitive.critics.CrNoTriggerOrGuard.predicate2(Object,Designer)",6,7,12
"org.argouml.uml.cognitive.critics.CrNodeInsideElement.CrNodeInsideElement()",1,1,1
"org.argouml.uml.cognitive.critics.CrNodeInsideElement.computeOffenders(UMLDeploymentDiagram)",3,4,5
"org.argouml.uml.cognitive.critics.CrNodeInsideElement.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrNodeInsideElement.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrNodeInsideElement.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrNodeInstanceInsideElement.CrNodeInstanceInsideElement()",1,1,1
"org.argouml.uml.cognitive.critics.CrNodeInstanceInsideElement.computeOffenders(UMLDeploymentDiagram)",3,4,5
"org.argouml.uml.cognitive.critics.CrNodeInstanceInsideElement.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrNodeInstanceInsideElement.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrNodeInstanceInsideElement.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrNodeInstanceWithoutClassifier.CrNodeInstanceWithoutClassifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrNodeInstanceWithoutClassifier.computeOffenders(UMLDeploymentDiagram)",6,5,7
"org.argouml.uml.cognitive.critics.CrNodeInstanceWithoutClassifier.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrNodeInstanceWithoutClassifier.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrNodeInstanceWithoutClassifier.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrNonAggDataType.CrNonAggDataType()",1,1,1
"org.argouml.uml.cognitive.critics.CrNonAggDataType.predicate2(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrObjectWithoutClassifier.CrObjectWithoutClassifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrObjectWithoutClassifier.computeOffenders(UMLDeploymentDiagram)",6,5,7
"org.argouml.uml.cognitive.critics.CrObjectWithoutClassifier.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrObjectWithoutClassifier.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrObjectWithoutClassifier.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrObjectWithoutComponent.CrObjectWithoutComponent()",1,1,1
"org.argouml.uml.cognitive.critics.CrObjectWithoutComponent.computeOffenders(UMLDeploymentDiagram)",3,6,7
"org.argouml.uml.cognitive.critics.CrObjectWithoutComponent.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrObjectWithoutComponent.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrObjectWithoutComponent.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrOperNameConflict.CrOperNameConflict()",1,1,1
"org.argouml.uml.cognitive.critics.CrOperNameConflict.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrOperNameConflict.predicate2(Object,Designer)",6,2,7
"org.argouml.uml.cognitive.critics.CrOperNameConflict.signaturesMatch(MBehavioralFeature,MBehavioralFeature)",9,2,12
"org.argouml.uml.cognitive.critics.CrOppEndConflict.CrOppEndConflict()",1,1,1
"org.argouml.uml.cognitive.critics.CrOppEndConflict.predicate2(Object,Designer)",10,3,12
"org.argouml.uml.cognitive.critics.CrOppEndVsAttr.CrOppEndVsAttr()",1,1,1
"org.argouml.uml.cognitive.critics.CrOppEndVsAttr.predicate2(Object,Designer)",11,4,15
"org.argouml.uml.cognitive.critics.CrParamTypeNotImported.CrParamTypeNotImported()",1,1,1
"org.argouml.uml.cognitive.critics.CrParamTypeNotImported.predicate2(Object,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrReservedName.CrReservedName()",1,1,1
"org.argouml.uml.cognitive.critics.CrReservedName.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrReservedName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrReservedName.initWizard(Wizard)",1,2,2
"org.argouml.uml.cognitive.critics.CrReservedName.predicate2(Object,Designer)",6,4,10
"org.argouml.uml.cognitive.critics.CrReturnWithoutCall.CrReturnWithoutCall()",1,1,1
"org.argouml.uml.cognitive.critics.CrReturnWithoutCall.computeOffenders(UMLSequenceDiagram)",1,16,17
"org.argouml.uml.cognitive.critics.CrReturnWithoutCall.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrReturnWithoutCall.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrReturnWithoutCall.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrSeqInstanceWithoutClassifier.CrSeqInstanceWithoutClassifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrSeqInstanceWithoutClassifier.computeOffenders(UMLSequenceDiagram)",6,6,8
"org.argouml.uml.cognitive.critics.CrSeqInstanceWithoutClassifier.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrSeqInstanceWithoutClassifier.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrSeqInstanceWithoutClassifier.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrSignatureConflict.CrSignatureConflict()",1,1,1
"org.argouml.uml.cognitive.critics.CrSignatureConflict.predicate2(Object,Designer)",8,3,8
"org.argouml.uml.cognitive.critics.CrStimulusWithWrongPosition.CrStimulusWithWrongPosition()",1,1,1
"org.argouml.uml.cognitive.critics.CrStimulusWithWrongPosition.computeOffenders(UMLSequenceDiagram)",7,19,22
"org.argouml.uml.cognitive.critics.CrStimulusWithWrongPosition.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrStimulusWithWrongPosition.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrStimulusWithWrongPosition.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrSubclassReference.CrSubclassReference()",1,1,1
"org.argouml.uml.cognitive.critics.CrSubclassReference.computeOffenders(MClassifier)",6,7,11
"org.argouml.uml.cognitive.critics.CrSubclassReference.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrSubclassReference.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrSubclassReference.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrTooManyAssoc.CrTooManyAssoc()",1,1,1
"org.argouml.uml.cognitive.critics.CrTooManyAssoc.predicate2(Object,Designer)",3,2,4
"org.argouml.uml.cognitive.critics.CrTooManyAttr.CrTooManyAttr()",1,1,1
"org.argouml.uml.cognitive.critics.CrTooManyAttr.predicate2(Object,Designer)",4,2,6
"org.argouml.uml.cognitive.critics.CrTooManyClasses.CrTooManyClasses()",1,1,1
"org.argouml.uml.cognitive.critics.CrTooManyClasses.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrTooManyOper.CrTooManyOper()",1,1,1
"org.argouml.uml.cognitive.critics.CrTooManyOper.predicate2(Object,Designer)",4,2,6
"org.argouml.uml.cognitive.critics.CrTooManyStates.CrTooManyStates()",1,1,1
"org.argouml.uml.cognitive.critics.CrTooManyStates.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrTooManyTransitions.CrTooManyTransitions()",1,1,1
"org.argouml.uml.cognitive.critics.CrTooManyTransitions.predicate2(Object,Designer)",3,3,5
"org.argouml.uml.cognitive.critics.CrUML.CrUML()",1,1,1
"org.argouml.uml.cognitive.critics.CrUML.expand(String,VectorSet)",5,3,7
"org.argouml.uml.cognitive.critics.CrUML.getMoreInfoURL(VectorSet,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrUML.predicate(Object,Designer)",2,2,2
"org.argouml.uml.cognitive.critics.CrUML.predicate2(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrUML.sd(String)",1,1,1
"org.argouml.uml.cognitive.critics.CrUML.setDescription(String)",1,1,1
"org.argouml.uml.cognitive.critics.CrUML.setHeadline(String)",1,1,1
"org.argouml.uml.cognitive.critics.CrUML.setResource(String)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalAttrName.CrUnconventionalAttrName()",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalAttrName.computeOffenders(MFeature)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalAttrName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalAttrName.initWizard(Wizard)",1,3,3
"org.argouml.uml.cognitive.critics.CrUnconventionalAttrName.predicate2(Object,Designer)",7,4,10
"org.argouml.uml.cognitive.critics.CrUnconventionalAttrName.stillValid(ToDoItem,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrUnconventionalAttrName.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalClassName.CrUnconventionalClassName()",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalClassName.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalClassName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalClassName.initWizard(Wizard)",1,2,2
"org.argouml.uml.cognitive.critics.CrUnconventionalClassName.predicate2(Object,Designer)",5,3,8
"org.argouml.uml.cognitive.critics.CrUnconventionalOperName.CrUnconventionalOperName()",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalOperName.computeOffenders(MFeature)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalOperName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalOperName.initWizard(Wizard)",1,2,2
"org.argouml.uml.cognitive.critics.CrUnconventionalOperName.predicate2(Object,Designer)",6,4,9
"org.argouml.uml.cognitive.critics.CrUnconventionalOperName.stillValid(ToDoItem,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrUnconventionalOperName.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalPackName.CrUnconventionalPackName()",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalPackName.getClarifier()",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalPackName.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnconventionalPackName.initWizard(Wizard)",1,6,7
"org.argouml.uml.cognitive.critics.CrUnconventionalPackName.predicate2(Object,Designer)",6,5,9
"org.argouml.uml.cognitive.critics.CrUnnavigableAssoc.CrUnnavigableAssoc()",1,1,1
"org.argouml.uml.cognitive.critics.CrUnnavigableAssoc.getWizardClass(ToDoItem)",1,1,1
"org.argouml.uml.cognitive.critics.CrUnnavigableAssoc.predicate2(Object,Designer)",4,3,5
"org.argouml.uml.cognitive.critics.CrUselessAbstract.CrUselessAbstract()",1,1,1
"org.argouml.uml.cognitive.critics.CrUselessAbstract.predicate2(Object,Designer)",4,1,5
"org.argouml.uml.cognitive.critics.CrUselessInterface.CrUselessInterface()",1,1,1
"org.argouml.uml.cognitive.critics.CrUselessInterface.getRealizations(MClassifier)",2,4,5
"org.argouml.uml.cognitive.critics.CrUselessInterface.predicate2(Object,Designer)",3,2,4
"org.argouml.uml.cognitive.critics.CrUtilityViolated.CrUtilityViolated()",1,1,1
"org.argouml.uml.cognitive.critics.CrUtilityViolated.getInheritedStructuralFeatures(MClassifier,int)",1,3,5
"org.argouml.uml.cognitive.critics.CrUtilityViolated.predicate2(Object,Designer)",5,2,7
"org.argouml.uml.cognitive.critics.CrWrongDepEnds.CrWrongDepEnds()",1,1,1
"org.argouml.uml.cognitive.critics.CrWrongDepEnds.computeOffenders(UMLDeploymentDiagram)",4,14,20
"org.argouml.uml.cognitive.critics.CrWrongDepEnds.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrWrongDepEnds.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrWrongDepEnds.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.CrWrongLinkEnds.CrWrongLinkEnds()",1,1,1
"org.argouml.uml.cognitive.critics.CrWrongLinkEnds.computeOffenders(UMLDeploymentDiagram)",4,8,12
"org.argouml.uml.cognitive.critics.CrWrongLinkEnds.predicate2(Object,Designer)",3,1,3
"org.argouml.uml.cognitive.critics.CrWrongLinkEnds.stillValid(ToDoItem,Designer)",2,1,2
"org.argouml.uml.cognitive.critics.CrWrongLinkEnds.toDoItem(Object,Designer)",1,1,1
"org.argouml.uml.cognitive.critics.Init.init()",1,1,1
"org.argouml.uml.cognitive.critics.WizAssocComposite.WizAssocComposite()",1,1,1
"org.argouml.uml.cognitive.critics.WizAssocComposite.canFinish()",4,3,6
"org.argouml.uml.cognitive.critics.WizAssocComposite.doAction(int)",3,5,7
"org.argouml.uml.cognitive.critics.WizAssocComposite.getModelElement()",3,3,3
"org.argouml.uml.cognitive.critics.WizAssocComposite.getNumSteps()",1,1,1
"org.argouml.uml.cognitive.critics.WizAssocComposite.getOptions()",1,5,5
"org.argouml.uml.cognitive.critics.WizAssocComposite.makePanel(int)",2,3,3
"org.argouml.uml.cognitive.critics.WizAssocComposite.setInstructions(String)",1,1,1
"org.argouml.uml.cognitive.critics.WizBreakCircularComp.WizBreakCircularComp()",1,1,1
"org.argouml.uml.cognitive.critics.WizBreakCircularComp.canFinish()",5,5,9
"org.argouml.uml.cognitive.critics.WizBreakCircularComp.canGoNext()",1,1,1
"org.argouml.uml.cognitive.critics.WizBreakCircularComp.doAction(int)",4,9,11
"org.argouml.uml.cognitive.critics.WizBreakCircularComp.getNumSteps()",1,1,1
"org.argouml.uml.cognitive.critics.WizBreakCircularComp.getOptions1()",1,3,3
"org.argouml.uml.cognitive.critics.WizBreakCircularComp.getOptions2()",1,4,4
"org.argouml.uml.cognitive.critics.WizBreakCircularComp.makePanel(int)",2,4,7
"org.argouml.uml.cognitive.critics.WizCueCards.WizCueCards()",1,1,1
"org.argouml.uml.cognitive.critics.WizCueCards.addCue(String)",1,1,1
"org.argouml.uml.cognitive.critics.WizCueCards.canFinish()",1,1,1
"org.argouml.uml.cognitive.critics.WizCueCards.doAction(int)",1,1,1
"org.argouml.uml.cognitive.critics.WizCueCards.getModelElement()",3,3,3
"org.argouml.uml.cognitive.critics.WizCueCards.getNumSteps()",1,1,1
"org.argouml.uml.cognitive.critics.WizCueCards.makePanel(int)",2,2,2
"org.argouml.uml.cognitive.critics.WizMEName.WizMEName()",1,1,1
"org.argouml.uml.cognitive.critics.WizMEName.canGoNext()",4,2,5
"org.argouml.uml.cognitive.critics.WizMEName.doAction(int)",2,4,4
"org.argouml.uml.cognitive.critics.WizMEName.getModelElement()",3,3,3
"org.argouml.uml.cognitive.critics.WizMEName.getNumSteps()",1,1,1
"org.argouml.uml.cognitive.critics.WizMEName.getSuggestion()",3,2,3
"org.argouml.uml.cognitive.critics.WizMEName.makePanel(int)",2,3,3
"org.argouml.uml.cognitive.critics.WizMEName.setInstructions(String)",1,1,1
"org.argouml.uml.cognitive.critics.WizMEName.setMustEdit(boolean)",1,1,1
"org.argouml.uml.cognitive.critics.WizMEName.setSuggestion(String)",1,1,1
"org.argouml.uml.cognitive.critics.WizManyNames.WizManyNames()",1,1,1
"org.argouml.uml.cognitive.critics.WizManyNames.doAction(int)",2,5,5
"org.argouml.uml.cognitive.critics.WizManyNames.getNumSteps()",1,1,1
"org.argouml.uml.cognitive.critics.WizManyNames.makePanel(int)",2,4,4
"org.argouml.uml.cognitive.critics.WizManyNames.setInstructions(String)",1,1,1
"org.argouml.uml.cognitive.critics.WizManyNames.setMEs(Vector)",1,1,1
"org.argouml.uml.cognitive.critics.WizNavigable.WizNavigable()",1,1,1
"org.argouml.uml.cognitive.critics.WizNavigable.canFinish()",4,3,6
"org.argouml.uml.cognitive.critics.WizNavigable.doAction(int)",3,5,7
"org.argouml.uml.cognitive.critics.WizNavigable.getModelElement()",3,3,3
"org.argouml.uml.cognitive.critics.WizNavigable.getNumSteps()",1,1,1
"org.argouml.uml.cognitive.critics.WizNavigable.getOptions()",1,5,5
"org.argouml.uml.cognitive.critics.WizNavigable.makePanel(int)",2,3,3
"org.argouml.uml.cognitive.critics.WizNavigable.setInstructions(String)",1,1,1
"org.argouml.uml.diagram.ProjectMemberDiagram.ProjectMemberDiagram(ArgoDiagram,Project)",1,1,1
"org.argouml.uml.diagram.ProjectMemberDiagram.ProjectMemberDiagram(String,Project)",1,1,1
"org.argouml.uml.diagram.ProjectMemberDiagram.getDiagram()",1,1,1
"org.argouml.uml.diagram.ProjectMemberDiagram.getFileExtension()",1,1,1
"org.argouml.uml.diagram.ProjectMemberDiagram.getType()",1,1,1
"org.argouml.uml.diagram.ProjectMemberDiagram.load()",1,1,2
"org.argouml.uml.diagram.ProjectMemberDiagram.save(String,boolean)",1,1,1
"org.argouml.uml.diagram.ProjectMemberDiagram.save(String,boolean,Writer)",1,2,2
"org.argouml.uml.diagram.ProjectMemberDiagram.setDiagram(ArgoDiagram)",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.FigActionState()",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.FigActionState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.clone()",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.getFillColor()",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.getFilled()",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.getLineColor()",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.makeSelection()",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.placeString()",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.activity.ui.FigActionState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.activity.ui.FigActionState.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.SelectionActionState(Fig)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.addIncomingTrans(MutableGraphModel,MStateVertex,MStateVertex)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.addOutgoingTrans(MutableGraphModel,MStateVertex,MStateVertex)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.buttonClicked(int)",3,9,11
"org.argouml.uml.diagram.activity.ui.SelectionActionState.dragHandle(int,int,int,int,Handle)",4,4,10
"org.argouml.uml.diagram.activity.ui.SelectionActionState.hitHandle(Rectangle,Handle)",5,9,14
"org.argouml.uml.diagram.activity.ui.SelectionActionState.mouseEntered(MouseEvent)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.paintButtons(Graphics)",1,5,5
"org.argouml.uml.diagram.activity.ui.SelectionActionState.setIncomingAboveButtonEnabled(boolean)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.setIncomingButtonEnabled(boolean)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.setIncomingLeftButtonEnabled(boolean)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.setOutgoingBelowButtonEnabled(boolean)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.setOutgoingButtonEnabled(boolean)",1,1,1
"org.argouml.uml.diagram.activity.ui.SelectionActionState.setOutgoingRightButtonEnabled(boolean)",1,1,1
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram.UMLActivityDiagram()",1,1,2
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram.UMLActivityDiagram(MNamespace)",1,4,5
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram.UMLActivityDiagram(MNamespace,MActivityGraph)",1,5,6
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram.getOwner()",2,1,2
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram.getStateMachine()",1,1,1
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram.initToolBar()",1,1,1
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram.initialize(Object)",2,2,4
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram.setStateMachine(MStateMachine)",1,1,1
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram.setup(MNamespace,MActivityGraph)",1,2,2
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.addEdge(Object)",2,2,3
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.addNode(Object)",2,2,3
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.addNodeRelatedEdges(Object)",1,4,4
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.canAddEdge(Object)",8,2,10
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.canAddNode(Object)",1,1,2
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.canConnect(Object,Object)",2,1,3
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.connect(Object,Object)",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.connect(Object,Object,Class)",2,2,4
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.getDestPort(Object)",2,2,2
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.getEdges()",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.getInEdges(Object)",3,3,4
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.getNamespace()",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.getNodes()",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.getOutEdges(Object)",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.getOwner(Object)",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.getPorts(Object)",1,2,2
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.getSourcePort(Object)",2,2,2
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.removeEdge(Object)",2,1,2
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.removeNode(Object)",2,1,2
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.removed(MElementEvent)",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.setNamespace(MNamespace)",2,4,4
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel.vetoableChange(PropertyChangeEvent)",1,6,6
"org.argouml.uml.diagram.collaboration.ui.CollabDiagramRenderer.getFigEdgeFor(GraphModel,Layer,Object)",2,3,3
"org.argouml.uml.diagram.collaboration.ui.CollabDiagramRenderer.getFigNodeFor(GraphModel,Layer,Object)",3,1,3
"org.argouml.uml.diagram.collaboration.ui.FigAssociationRole.FigAssociationRole()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigAssociationRole.FigAssociationRole(Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigAssociationRole.chooseArrowHead(MAggregationKind,boolean)",8,6,8
"org.argouml.uml.diagram.collaboration.ui.FigAssociationRole.modelChanged()",2,5,9
"org.argouml.uml.diagram.collaboration.ui.FigAssociationRole.textEdited(FigText)",2,4,5
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.FigClassifierRole()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.FigClassifierRole(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.clone()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.dispose()",2,1,2
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.getFillColor()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.getFilled()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.getLineColor()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.getLineWidth()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.modelChanged()",2,6,8
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.placeString()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.textEdited(FigText)",1,2,2
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole.updateStereotypeText()",2,1,2
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.getChildren(Object)",2,1,2
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.getPrereqs()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.getRoot()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.toString()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.getChildren(Object)",4,3,7
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.getPrereqs()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.getRoot()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.toString()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.getChildren(Object)",2,1,2
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.getPrereqs()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.getRoot()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.toString()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.getChildren(Object)",3,2,5
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.getPrereqs()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.getRoot()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.toString()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram.UMLCollaborationDiagram()",1,1,2
"org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram.UMLCollaborationDiagram(MNamespace)",1,1,1
"org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram.getNumMessages()",1,2,3
"org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram.initToolBar()",1,1,1
"org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram.postLoad()",1,5,5
"org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram.setNamespace(MNamespace)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.addEdge(Object)",2,2,3
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.addNode(Object)",2,3,4
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.addNodeRelatedEdges(Object)",1,15,15
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.canAddEdge(Object)",10,4,14
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.canAddNode(Object)",1,1,7
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.canConnect(Object,Object)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.connect(Object,Object)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.connect(Object,Object,Class)",23,23,33
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.getDestPort(Object)",2,2,2
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.getEdges()",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.getInEdges(Object)",9,12,16
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.getNamespace()",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.getNodes()",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.getOutEdges(Object)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.getOwner(Object)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.getPorts(Object)",1,8,8
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.getSourcePort(Object)",2,2,2
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.removeEdge(Object)",2,1,2
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.removeNode(Object)",2,1,2
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.removed(MElementEvent)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.setNamespace(MNamespace)",1,3,3
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel.vetoableChange(PropertyChangeEvent)",1,13,13
"org.argouml.uml.diagram.deployment.TableModelAssoc_in_DeplByProps.TableModelAssoc_in_DeplByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelAssoc_in_DeplByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelAssoc_in_DeplByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.deployment.TableModelAssoc_in_DeplByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelClass_in_DeplByProps.TableModelClass_in_DeplByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelClass_in_DeplByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelClass_in_DeplByProps.rowObjectsFor(Object)",3,6,8
"org.argouml.uml.diagram.deployment.TableModelClass_in_DeplByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelCompInstanceByProps.TableModelCompInstanceByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelCompInstanceByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelCompInstanceByProps.rowObjectsFor(Object)",3,6,8
"org.argouml.uml.diagram.deployment.TableModelCompInstanceByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelComponentByProps.TableModelComponentByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelComponentByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelComponentByProps.rowObjectsFor(Object)",3,6,8
"org.argouml.uml.diagram.deployment.TableModelComponentByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelDependency_in_DeplByProps.TableModelDependency_in_DeplByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelDependency_in_DeplByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelDependency_in_DeplByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.deployment.TableModelDependency_in_DeplByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelInterface_in_DeplByProps.TableModelInterface_in_DeplByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelInterface_in_DeplByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelInterface_in_DeplByProps.rowObjectsFor(Object)",3,6,8
"org.argouml.uml.diagram.deployment.TableModelInterface_in_DeplByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelLinkByProps.TableModelLinkByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelLinkByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelLinkByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.deployment.TableModelLinkByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelNodeByProps.TableModelNodeByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelNodeByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelNodeByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.deployment.TableModelNodeByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelNodeInstanceByProps.TableModelNodeInstanceByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelNodeInstanceByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelNodeInstanceByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.deployment.TableModelNodeInstanceByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelObjectByProps.TableModelObjectByProps()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelObjectByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.deployment.TableModelObjectByProps.rowObjectsFor(Object)",4,9,12
"org.argouml.uml.diagram.deployment.TableModelObjectByProps.toString()",1,1,1
"org.argouml.uml.diagram.deployment.ui.DeploymentDiagramRenderer.getFigEdgeFor(GraphModel,Layer,Object)",4,6,6
"org.argouml.uml.diagram.deployment.ui.DeploymentDiagramRenderer.getFigNodeFor(GraphModel,Layer,Object)",8,1,8
"org.argouml.uml.diagram.deployment.ui.FigComponent.FigComponent()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.FigComponent(GraphModel,Object)",1,3,3
"org.argouml.uml.diagram.deployment.ui.FigComponent.clone()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.getHandleBox()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.getUseTrapRect()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.makeSelection()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.modelChanged()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.mousePressed(MouseEvent)",1,2,2
"org.argouml.uml.diagram.deployment.ui.FigComponent.placeString()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.setBounds(int,int,int,int)",1,2,2
"org.argouml.uml.diagram.deployment.ui.FigComponent.setEnclosingFig(Fig)",2,17,18
"org.argouml.uml.diagram.deployment.ui.FigComponent.setHandleBox(int,int,int,int)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.setNode(Vector)",1,4,5
"org.argouml.uml.diagram.deployment.ui.FigComponent.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.setUnderline(boolean)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponent.updateStereotypeText()",2,1,2
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.FigComponentInstance()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.FigComponentInstance(GraphModel,Object)",1,3,3
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.clone()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.getUseTrapRect()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.makeSelection()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.modelChanged()",2,7,9
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.mousePressed(MouseEvent)",1,2,2
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.placeString()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.setBounds(int,int,int,int)",2,2,3
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.setEnclosingFig(Fig)",2,12,13
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.setNode(Vector)",1,4,5
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.textEdited(FigText)",1,2,2
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance.updateStereotypeText()",2,1,2
"org.argouml.uml.diagram.deployment.ui.FigMNode.FigMNode()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNode.FigMNode(GraphModel,Object)",1,3,3
"org.argouml.uml.diagram.deployment.ui.FigMNode.clone()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNode.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNode.getUseTrapRect()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNode.makeSelection()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNode.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNode.placeString()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNode.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.deployment.ui.FigMNode.setEnclosingFig(Fig)",1,4,4
"org.argouml.uml.diagram.deployment.ui.FigMNode.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNode.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.FigMNodeInstance()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.FigMNodeInstance(GraphModel,Object)",1,3,3
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.clone()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.getUseTrapRect()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.makeSelection()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.modelChanged()",2,7,9
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.placeString()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.setEnclosingFig(Fig)",1,4,4
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance.textEdited(FigText)",1,2,2
"org.argouml.uml.diagram.deployment.ui.FigObject.FigObject()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.FigObject(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.clone()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.getFillColor()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.getFilled()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.getLineColor()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.getLineWidth()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.makeSelection()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.modelChanged()",2,7,9
"org.argouml.uml.diagram.deployment.ui.FigObject.placeString()",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.deployment.ui.FigObject.setEnclosingFig(Fig)",2,8,9
"org.argouml.uml.diagram.deployment.ui.FigObject.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.deployment.ui.FigObject.textEdited(FigText)",1,4,4
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.getIndexOfChild(Object,Object)",3,3,3
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.getPrereqs()",1,1,1
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.getRoot()",1,1,1
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.toString()",1,1,1
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponent.SelectionComponent(Fig)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponent.addCompClassAbove(MutableGraphModel,MComponent,MComponent)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponent.addCompClassBelow(MutableGraphModel,MComponent,MComponent)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponent.addCompClassLeft(MutableGraphModel,MComponent,MComponent)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponent.addCompClassRight(MutableGraphModel,MComponent,MComponent)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponent.buttonClicked(int)",3,9,11
"org.argouml.uml.diagram.deployment.ui.SelectionComponent.dragHandle(int,int,int,int,Handle)",3,4,9
"org.argouml.uml.diagram.deployment.ui.SelectionComponent.hitHandle(Rectangle,Handle)",5,5,10
"org.argouml.uml.diagram.deployment.ui.SelectionComponent.paintButtons(Graphics)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance.SelectionComponentInstance(Fig)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance.addCompClassAbove(MutableGraphModel,MComponentInstance,MComponentInstance)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance.addCompClassBelow(MutableGraphModel,MComponentInstance,MComponentInstance)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance.addCompClassLeft(MutableGraphModel,MComponentInstance,MComponentInstance)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance.addCompClassRight(MutableGraphModel,MComponentInstance,MComponentInstance)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance.buttonClicked(int)",3,9,11
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance.dragHandle(int,int,int,int,Handle)",3,4,9
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance.hitHandle(Rectangle,Handle)",5,5,10
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance.paintButtons(Graphics)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNode.SelectionNode(Fig)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNode.addNodeClassAbove(MutableGraphModel,MNode,MNode)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNode.addNodeClassBelow(MutableGraphModel,MNode,MNode)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNode.addNodeClassLeft(MutableGraphModel,MNode,MNode)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNode.addNodeClassRight(MutableGraphModel,MNode,MNode)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNode.buttonClicked(int)",3,9,11
"org.argouml.uml.diagram.deployment.ui.SelectionNode.dragHandle(int,int,int,int,Handle)",3,4,9
"org.argouml.uml.diagram.deployment.ui.SelectionNode.hitHandle(Rectangle,Handle)",5,5,10
"org.argouml.uml.diagram.deployment.ui.SelectionNode.paintButtons(Graphics)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance.SelectionNodeInstance(Fig)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance.addCompClassAbove(MutableGraphModel,MNodeInstance,MNodeInstance)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance.addCompClassBelow(MutableGraphModel,MNodeInstance,MNodeInstance)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance.addCompClassLeft(MutableGraphModel,MNodeInstance,MNodeInstance)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance.addCompClassRight(MutableGraphModel,MNodeInstance,MNodeInstance)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance.buttonClicked(int)",3,9,11
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance.dragHandle(int,int,int,int,Handle)",3,4,9
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance.hitHandle(Rectangle,Handle)",5,5,10
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance.paintButtons(Graphics)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionObject.SelectionObject(Fig)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionObject.addObjectClassAbove(MutableGraphModel,MObject,MObject)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionObject.addObjectClassBelow(MutableGraphModel,MObject,MObject)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionObject.addObjectClassLeft(MutableGraphModel,MObject,MObject)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionObject.addObjectClassRight(MutableGraphModel,MObject,MObject)",1,1,1
"org.argouml.uml.diagram.deployment.ui.SelectionObject.buttonClicked(int)",3,9,11
"org.argouml.uml.diagram.deployment.ui.SelectionObject.dragHandle(int,int,int,int,Handle)",3,4,9
"org.argouml.uml.diagram.deployment.ui.SelectionObject.hitHandle(Rectangle,Handle)",5,5,10
"org.argouml.uml.diagram.deployment.ui.SelectionObject.paintButtons(Graphics)",1,1,1
"org.argouml.uml.diagram.deployment.ui.TablePanelUMLDeploymentDiagram.TablePanelUMLDeploymentDiagram()",1,1,1
"org.argouml.uml.diagram.deployment.ui.TablePanelUMLDeploymentDiagram.initTableModels()",1,1,1
"org.argouml.uml.diagram.deployment.ui.TablePanelUMLDeploymentDiagram.objectSelected(Object)",1,5,5
"org.argouml.uml.diagram.deployment.ui.TablePanelUMLDeploymentDiagram.setTablePerspective()",1,5,5
"org.argouml.uml.diagram.deployment.ui.TablePanelUMLDeploymentDiagram.valueChanged(ListSelectionEvent)",17,21,22
"org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram.UMLDeploymentDiagram()",1,1,2
"org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram.UMLDeploymentDiagram(MNamespace)",1,1,1
"org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram.initToolBar()",1,1,1
"org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram.setNamespace(MNamespace)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.addEdge(Object)",2,2,3
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.addNode(Object)",2,2,3
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.addNodeRelatedEdges(Object)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.canAddEdge(Object)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.canAddNode(Object)",1,1,2
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.canConnect(Object,Object)",2,1,3
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.connect(Object,Object)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.connect(Object,Object,Class)",2,8,13
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.getDestPort(Object)",2,2,2
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.getEdges()",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.getInEdges(Object)",3,3,4
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.getNamespace()",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.getNodes()",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.getOutEdges(Object)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.getOwner(Object)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.getPorts(Object)",1,2,2
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.getSourcePort(Object)",2,2,2
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.removeEdge(Object)",2,1,2
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.removeNode(Object)",2,1,2
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.removed(MElementEvent)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.setNamespace(MNamespace)",1,3,3
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel.vetoableChange(PropertyChangeEvent)",1,6,6
"org.argouml.uml.diagram.sequence.TableModelSeqActionByProps.TableModelSeqActionByProps()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqActionByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqActionByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.sequence.TableModelSeqActionByProps.toString()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqLinkByProps.TableModelSeqLinkByProps()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqLinkByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqLinkByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.sequence.TableModelSeqLinkByProps.toString()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqObjectByProps.TableModelSeqObjectByProps()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqObjectByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqObjectByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.sequence.TableModelSeqObjectByProps.toString()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqStimulusByProps.TableModelSeqStimulusByProps()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqStimulusByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.sequence.TableModelSeqStimulusByProps.rowObjectsFor(Object)",3,5,7
"org.argouml.uml.diagram.sequence.TableModelSeqStimulusByProps.toString()",1,1,1
"org.argouml.uml.diagram.sequence.ui.ActionAddLink.ActionAddLink(Class,String)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.FigSeqLink()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.FigSeqLink(Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.addFigSeqStimulusWithAction()",1,5,6
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.delete()",1,9,9
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.deletePathItems()",1,3,3
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.getContents()",2,2,2
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.getPortNumber(Vector)",1,9,10
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.modelChanged()",3,2,4
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.mouseClicked(MouseEvent)",1,3,3
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.mouseReleased(MouseEvent)",1,2,2
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.ownerName()",2,2,2
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.removed(MElementEvent)",1,5,5
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.setActivations(FigSeqObject,FigSeqObject,FigSeqObject,int)",1,29,38
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.setArrowHeads(MLink,Vector)",1,12,13
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.setDefaultAction()",1,5,5
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.textEdited(FigText)",2,4,5
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.updateActivations(FigSeqObject,FigSeqObject,FigRect,FigRect,Vector,int,int)",2,27,44
"org.argouml.uml.diagram.sequence.ui.FigSeqLink.updatePorts(FigSeqObject,FigSeqObject,FigDynPort,FigDynPort,Vector,int,int)",2,22,25
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.FigSeqObject()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.FigSeqObject(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.bindPort(Object,Fig)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.breakActivation(FigSeqLink,Vector)",1,7,7
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.canConcat(int)",1,3,4
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.canDo(boolean,FigSeqLink,int)",1,5,7
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.changePosition(Vector)",1,8,8
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.clone()",1,3,3
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.concatActivation(FigSeqLink,Vector)",1,11,12
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.edgesCount(Vector)",1,3,5
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.getContents()",2,2,2
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.hitPort(int,int)",3,2,3
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.makeSelection()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.modelChanged()",2,5,8
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.mouseClicked(MouseEvent)",1,4,5
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.mouseDragged(MouseEvent)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.mouseMoved(MouseEvent)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.mousePressed(MouseEvent)",1,2,2
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.mouseReleased(MouseEvent)",1,3,3
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.nearestLink(Vector,int,Vector)",1,2,5
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.ownerName()",2,2,2
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.parseDynObjects(String)",1,7,7
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.placeString()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.setBounds(int,int,int,int,int)",2,10,25
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.setForCreate(FigSeqLink,String,boolean)",1,5,8
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.setForDestroy(FigSeqLink,String,boolean)",1,5,8
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.terminateSymbolSetBounds(int,int,int,int)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.textEdited(FigText)",1,2,2
"org.argouml.uml.diagram.sequence.ui.FigSeqObject.translate(int,int)",1,2,2
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.FigSeqStimulus()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.FigSeqStimulus(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.addPathItemToLink(Layer)",1,4,6
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.clone()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.dispose()",2,1,2
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.getFilled()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.modelChanged()",2,12,13
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.mouseReleased(MouseEvent)",1,3,3
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.ownerName()",2,2,2
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.placeString()",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus.textEdited(FigText)",1,2,2
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.getChildren(Object)",2,1,2
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.getPrereqs()",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.getRoot()",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.toString()",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.getChildren(Object)",2,1,2
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.getPrereqs()",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.getRoot()",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.toString()",1,1,1
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.sequence.ui.SelectionSeqObject.SelectionSeqObject(Fig)",1,1,1
"org.argouml.uml.diagram.sequence.ui.SelectionSeqObject.addLinkStimulusCall(MutableGraphModel,MObject,MObject)",1,1,1
"org.argouml.uml.diagram.sequence.ui.SelectionSeqObject.addLinkStimulusReturn(MutableGraphModel,MObject,MObject)",1,1,1
"org.argouml.uml.diagram.sequence.ui.SelectionSeqObject.buttonClicked(int)",4,6,10
"org.argouml.uml.diagram.sequence.ui.SelectionSeqObject.dragHandle(int,int,int,int,Handle)",3,4,8
"org.argouml.uml.diagram.sequence.ui.SelectionSeqObject.hitHandle(Rectangle,Handle)",5,3,8
"org.argouml.uml.diagram.sequence.ui.SelectionSeqObject.mouseReleased(MouseEvent)",2,2,3
"org.argouml.uml.diagram.sequence.ui.SelectionSeqObject.paintButtons(Graphics)",1,1,1
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramLayout.SequenceDiagramLayout(String,GraphModel)",1,1,1
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramLayout.edgeAdded(GraphEvent)",3,4,4
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramLayout.getFigSeqLinks()",1,3,3
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramLayout.getFigSeqObjects()",1,3,3
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramLayout.getFigSeqStimuli()",1,3,3
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramLayout.getMaxStimulusWidth(FigSeqObject,FigSeqObject)",1,7,7
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramLayout.nodeAdded(GraphEvent)",3,4,4
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramLayout.placeAllFigures()",1,17,21
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramRenderer.getFigEdgeFor(GraphModel,Layer,Object)",2,3,3
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramRenderer.getFigNodeFor(GraphModel,Layer,Object)",3,1,3
"org.argouml.uml.diagram.sequence.ui.TablePanelUMLSequenceDiagram.TablePanelUMLSequenceDiagram()",1,1,1
"org.argouml.uml.diagram.sequence.ui.TablePanelUMLSequenceDiagram.initTableModels()",1,1,1
"org.argouml.uml.diagram.sequence.ui.TablePanelUMLSequenceDiagram.objectSelected(Object)",1,2,2
"org.argouml.uml.diagram.sequence.ui.TablePanelUMLSequenceDiagram.setTablePerspective()",1,2,2
"org.argouml.uml.diagram.sequence.ui.TablePanelUMLSequenceDiagram.valueChanged(ListSelectionEvent)",5,5,6
"org.argouml.uml.diagram.sequence.ui.UMLSequenceDiagram.UMLSequenceDiagram()",1,1,2
"org.argouml.uml.diagram.sequence.ui.UMLSequenceDiagram.UMLSequenceDiagram(MNamespace)",1,1,1
"org.argouml.uml.diagram.sequence.ui.UMLSequenceDiagram.getNumStimuluss()",1,2,3
"org.argouml.uml.diagram.sequence.ui.UMLSequenceDiagram.initToolBar()",1,1,1
"org.argouml.uml.diagram.sequence.ui.UMLSequenceDiagram.postLoad()",1,8,9
"org.argouml.uml.diagram.sequence.ui.UMLSequenceDiagram.setNamespace(MNamespace)",1,1,1
"org.argouml.uml.diagram.state.PredIsFinalState.PredIsFinalState()",1,1,1
"org.argouml.uml.diagram.state.PredIsFinalState.predicate(Object)",1,1,1
"org.argouml.uml.diagram.state.PredIsStartState.PredIsStartState()",1,1,1
"org.argouml.uml.diagram.state.PredIsStartState.predicate(Object)",1,2,2
"org.argouml.uml.diagram.state.StateDiagramGraphModel.addEdge(Object)",3,2,3
"org.argouml.uml.diagram.state.StateDiagramGraphModel.addNode(Object)",3,2,3
"org.argouml.uml.diagram.state.StateDiagramGraphModel.addNodeRelatedEdges(Object)",1,4,4
"org.argouml.uml.diagram.state.StateDiagramGraphModel.canAddEdge(Object)",5,2,7
"org.argouml.uml.diagram.state.StateDiagramGraphModel.canAddNode(Object)",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.canConnect(Object,Object)",6,4,6
"org.argouml.uml.diagram.state.StateDiagramGraphModel.connect(Object,Object)",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.connect(Object,Object,Class)",7,5,7
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getDestPort(Object)",2,2,2
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getEdges()",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getInEdges(Object)",2,2,2
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getMachine()",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getNamespace()",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getNodes()",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getOutEdges(Object)",2,2,2
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getOwner(Object)",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getPorts(Object)",1,3,3
"org.argouml.uml.diagram.state.StateDiagramGraphModel.getSourcePort(Object)",2,2,2
"org.argouml.uml.diagram.state.StateDiagramGraphModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.removeEdge(Object)",2,1,2
"org.argouml.uml.diagram.state.StateDiagramGraphModel.removeNode(Object)",2,1,2
"org.argouml.uml.diagram.state.StateDiagramGraphModel.removed(MElementEvent)",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.diagram.state.StateDiagramGraphModel.setMachine(MStateMachine)",1,3,3
"org.argouml.uml.diagram.state.StateDiagramGraphModel.setNamespace(MNamespace)",1,3,3
"org.argouml.uml.diagram.state.StateDiagramGraphModel.vetoableChange(PropertyChangeEvent)",1,6,6
"org.argouml.uml.diagram.state.TableModelStateByProps.TableModelStateByProps()",1,1,1
"org.argouml.uml.diagram.state.TableModelStateByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.state.TableModelStateByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.state.TableModelStateByProps.toString()",1,1,1
"org.argouml.uml.diagram.state.TableModelTransByProps.TableModelTransByProps()",1,1,1
"org.argouml.uml.diagram.state.TableModelTransByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.state.TableModelTransByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.state.TableModelTransByProps.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.ActionCreatePseudostate.ActionCreatePseudostate(MPseudostateKind,String)",1,1,1
"org.argouml.uml.diagram.state.ui.ActionCreatePseudostate.makeNode()",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.FigBranchState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.FigBranchState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.isResizable()",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.keyPressed(KeyEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.makeSelection()",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigBranchState.setOwner(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.FigCompositeState.FigCompositeState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.FigCompositeState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.getUseTrapRect()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.makeSelection()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.modelChanged()",2,1,2
"org.argouml.uml.diagram.state.ui.FigCompositeState.placeString()",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.state.ui.FigCompositeState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigCompositeState.textEdited(FigText)",3,2,3
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.FigDeepHistoryState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.FigDeepHistoryState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.isResizable()",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.keyPressed(KeyEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.makeSelection()",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.placeString()",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState.setOwner(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.FigFinalState.FigFinalState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.FigFinalState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.isResizable()",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.keyPressed(KeyEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.makeSelection()",1,3,3
"org.argouml.uml.diagram.state.ui.FigFinalState.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigFinalState.setOwner(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.FigForkState.FigForkState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.FigForkState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.keyPressed(KeyEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.setBounds(int,int,int,int)",1,1,2
"org.argouml.uml.diagram.state.ui.FigForkState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigForkState.setOwner(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.FigHistoryState.FigHistoryState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.FigHistoryState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.isResizable()",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.keyPressed(KeyEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.makeSelection()",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.placeString()",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigHistoryState.setOwner(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.FigInitialState.FigInitialState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.FigInitialState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.isResizable()",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.keyPressed(KeyEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.makeSelection()",3,5,6
"org.argouml.uml.diagram.state.ui.FigInitialState.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigInitialState.setOwner(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.FigJoinState.FigJoinState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.FigJoinState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.keyPressed(KeyEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.setBounds(int,int,int,int)",1,1,2
"org.argouml.uml.diagram.state.ui.FigJoinState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigJoinState.setOwner(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.FigShallowHistoryState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.FigShallowHistoryState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.isResizable()",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.keyPressed(KeyEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.makeSelection()",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.mouseClicked(MouseEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.placeString()",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState.setOwner(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.FigState.FigState()",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.FigState(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.clone()",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.getFillColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.getFilled()",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.getLineColor()",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.getLineWidth()",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.makeSelection()",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.modelChanged()",2,1,2
"org.argouml.uml.diagram.state.ui.FigState.placeString()",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.state.ui.FigState.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigState.textEdited(FigText)",3,2,3
"org.argouml.uml.diagram.state.ui.FigStateVertex.FigStateVertex()",1,1,1
"org.argouml.uml.diagram.state.ui.FigStateVertex.FigStateVertex(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigStateVertex.setEnclosingFig(Fig)",2,6,7
"org.argouml.uml.diagram.state.ui.FigTransition.FigTransition()",1,1,1
"org.argouml.uml.diagram.state.ui.FigTransition.FigTransition(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.FigTransition.modelChanged()",2,1,2
"org.argouml.uml.diagram.state.ui.FigTransition.textEdited(FigText)",2,1,2
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.getChildren(Object)",4,5,9
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineDiagram.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.getChild(Object,int)",6,3,6
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.getChildCount(Object)",5,3,5
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.getIndexOfChild(Object,Object)",6,3,6
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToStartState.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToState.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToState.getChild(Object,int)",6,3,6
"org.argouml.uml.diagram.state.ui.GoMachineToState.getChildCount(Object)",5,3,5
"org.argouml.uml.diagram.state.ui.GoMachineToState.getIndexOfChild(Object,Object)",6,3,6
"org.argouml.uml.diagram.state.ui.GoMachineToState.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToState.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToState.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToState.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoMachineToState.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToState.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToState.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToState.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.getChild(Object,int)",3,3,4
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.getChildCount(Object)",3,3,4
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.getIndexOfChild(Object,Object)",3,3,4
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoMachineToTrans.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoProjectMachine.accumMachines(MNamespace,Vector)",1,4,4
"org.argouml.uml.diagram.state.ui.GoProjectMachine.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoProjectMachine.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.state.ui.GoProjectMachine.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.state.ui.GoProjectMachine.getChildren(Object)",3,1,4
"org.argouml.uml.diagram.state.ui.GoProjectMachine.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.state.ui.GoProjectMachine.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoProjectMachine.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoProjectMachine.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoProjectMachine.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoProjectMachine.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoProjectMachine.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoProjectMachine.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoProjectMachine.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.getChild(Object,int)",3,2,3
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.getIndexOfChild(Object,Object)",5,3,5
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToDownstream.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.getChild(Object,int)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.getChildCount(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.getChildren(Object)",4,5,8
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.getIndexOfChild(Object,Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.getChild(Object,int)",2,3,3
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.getChild(Object,int)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.getChildCount(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.getChildren(Object)",3,3,6
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.getIndexOfChild(Object,Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.isLeaf(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToSubstate.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.getChild(Object,int)",3,2,3
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.getIndexOfChild(Object,Object)",5,3,5
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoStateToUpstream.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.getChild(Object,int)",2,2,3
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.getChildCount(Object)",2,1,2
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.getIndexOfChild(Object,Object)",3,2,3
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.isLeaf(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToSourceState.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.getChild(Object,int)",2,2,3
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.getChildCount(Object)",2,1,2
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.getIndexOfChild(Object,Object)",3,2,3
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.getPrereqs()",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.getRoot()",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.isLeaf(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.toString()",1,1,1
"org.argouml.uml.diagram.state.ui.GoTransToTargetState.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.state.ui.PropPanelUMLStateDiagram.PropPanelUMLStateDiagram()",1,1,1
"org.argouml.uml.diagram.state.ui.SelectionState.SelectionState(Fig)",1,1,1
"org.argouml.uml.diagram.state.ui.SelectionState.addIncomingTrans(MutableGraphModel,MStateVertex,MStateVertex)",1,1,1
"org.argouml.uml.diagram.state.ui.SelectionState.addOutgoingTrans(MutableGraphModel,MStateVertex,MStateVertex)",1,1,1
"org.argouml.uml.diagram.state.ui.SelectionState.buttonClicked(int)",3,5,7
"org.argouml.uml.diagram.state.ui.SelectionState.dragHandle(int,int,int,int,Handle)",4,4,8
"org.argouml.uml.diagram.state.ui.SelectionState.hitHandle(Rectangle,Handle)",5,5,10
"org.argouml.uml.diagram.state.ui.SelectionState.mouseEntered(MouseEvent)",1,1,1
"org.argouml.uml.diagram.state.ui.SelectionState.paintButtons(Graphics)",1,3,3
"org.argouml.uml.diagram.state.ui.SelectionState.setIncomingButtonEnabled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.SelectionState.setOutgoingButtonEnabled(boolean)",1,1,1
"org.argouml.uml.diagram.state.ui.StateDiagramRenderer.getFigEdgeFor(GraphModel,Layer,Object)",2,2,2
"org.argouml.uml.diagram.state.ui.StateDiagramRenderer.getFigNodeFor(GraphModel,Layer,Object)",13,12,13
"org.argouml.uml.diagram.state.ui.TablePanelUMLStateDiagram.TablePanelUMLStateDiagram()",1,1,1
"org.argouml.uml.diagram.state.ui.TablePanelUMLStateDiagram.initTableModels()",1,1,1
"org.argouml.uml.diagram.state.ui.UMLStateDiagram.UMLStateDiagram()",1,1,2
"org.argouml.uml.diagram.state.ui.UMLStateDiagram.UMLStateDiagram(MClass,MStateMachine)",1,5,6
"org.argouml.uml.diagram.state.ui.UMLStateDiagram.getOwner()",2,1,2
"org.argouml.uml.diagram.state.ui.UMLStateDiagram.getStateMachine()",1,1,1
"org.argouml.uml.diagram.state.ui.UMLStateDiagram.initToolBar()",1,1,1
"org.argouml.uml.diagram.state.ui.UMLStateDiagram.initialize(Object)",2,2,4
"org.argouml.uml.diagram.state.ui.UMLStateDiagram.setStateMachine(MStateMachine)",1,1,1
"org.argouml.uml.diagram.state.ui.UMLStateDiagram.setup(MClass,MStateMachine)",1,2,2
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.addEdge(Object)",2,3,4
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.addNode(Object)",2,4,5
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.addNodeRelatedEdges(Object)",1,12,12
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.canAddEdge(Object)",13,5,17
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.canAddNode(Object)",2,1,6
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.canConnect(Object,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.connect(Object,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.connect(Object,Object,Class)",17,17,23
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.getDestPort(Object)",2,2,2
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.getEdges()",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.getInEdges(Object)",5,6,8
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.getNamespace()",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.getNodes()",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.getOutEdges(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.getOwner(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.getPorts(Object)",1,5,5
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.getSourcePort(Object)",2,2,2
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.removeEdge(Object)",2,1,2
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.removeNode(Object)",2,1,2
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.removed(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.setNamespace(MNamespace)",1,3,3
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel.vetoableChange(PropertyChangeEvent)",1,8,8
"org.argouml.uml.diagram.static_structure.MMClassKeyword.KeywordFor(MClassifier)",3,1,3
"org.argouml.uml.diagram.static_structure.MMClassKeyword.MMClassKeyword(String)",1,1,1
"org.argouml.uml.diagram.static_structure.MMClassKeyword.equals(Object)",2,1,2
"org.argouml.uml.diagram.static_structure.MMClassKeyword.hashCode()",1,1,1
"org.argouml.uml.diagram.static_structure.MMClassKeyword.set(MClassifier)",1,1,1
"org.argouml.uml.diagram.static_structure.MMClassKeyword.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.MMClassVisibility.MMClassVisibility(String)",1,1,1
"org.argouml.uml.diagram.static_structure.MMClassVisibility.VisibilityFor(MClassifier)",1,1,1
"org.argouml.uml.diagram.static_structure.MMClassVisibility.equals(Object)",2,1,2
"org.argouml.uml.diagram.static_structure.MMClassVisibility.hashCode()",1,1,1
"org.argouml.uml.diagram.static_structure.MMClassVisibility.set(MClassifier)",2,2,3
"org.argouml.uml.diagram.static_structure.MMClassVisibility.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.TableModelAssocByProps.TableModelAssocByProps()",1,1,1
"org.argouml.uml.diagram.static_structure.TableModelAssocByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.static_structure.TableModelAssocByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.static_structure.TableModelAssocByProps.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.TableModelClassByProps.TableModelClassByProps()",1,1,1
"org.argouml.uml.diagram.static_structure.TableModelClassByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.static_structure.TableModelClassByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.static_structure.TableModelClassByProps.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.ClassdiagramLayouter(UMLDiagram)",1,3,3
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.add(ClassdiagramNode)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.add(LayoutedObject)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getClassdiagramNode(int)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getClassdiagramNode4owner(MClassifier)",3,3,3
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getColumns(int)",1,2,3
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getHGap()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getMinimumDiagramSize()",1,4,4
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getObject(int)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getObjects()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getObjectsInRow(int)",1,4,4
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getRowHeight(int)",1,4,4
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getRows()",1,3,3
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.getVGap()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.layout()",1,44,48
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter.remove(LayoutedObject)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.ClassdiagramNode(FigNode)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.addDownlink(ClassdiagramNode)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.addRank(int)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.addUplink(ClassdiagramNode)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getColumn()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getDownlink(int)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getDownlinks()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getFigure()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getLocation()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getRank()",1,5,5
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getSize()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getUplink(int)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getUplinks()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.getWeight()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.isPackage()",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.setColumn(int)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.setFigure(FigNode)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.setLocation(Point)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.setRank(int)",1,1,1
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode.setWeight(float)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.ClassDiagramRenderer.getFigEdgeFor(GraphModel,Layer,Object)",6,9,9
"org.argouml.uml.diagram.static_structure.ui.ClassDiagramRenderer.getFigNodeFor(GraphModel,Layer,Object)",6,1,6
"org.argouml.uml.diagram.static_structure.ui.FigClass.FigClass()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.FigClass(GraphModel,Object)",1,3,3
"org.argouml.uml.diagram.static_structure.ui.FigClass.MyFigText.MyFigText(int,int,int,int,Fig)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.MyFigText.getFillColor()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.MyFigText.getFilled()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.MyFigText.getLineColor()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.MyFigText.getLineWidth()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.MyFigText.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.calcBounds()",2,1,2
"org.argouml.uml.diagram.static_structure.ui.FigClass.clone()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.getAttributesFig()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.getMinimumSize()",1,4,7
"org.argouml.uml.diagram.static_structure.ui.FigClass.getOperationsFig()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.getPopUpActions(MouseEvent)",1,7,7
"org.argouml.uml.diagram.static_structure.ui.FigClass.getUpdatedSize(FigGroup,int,int,int,int)",1,2,4
"org.argouml.uml.diagram.static_structure.ui.FigClass.isAttributeVisible()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.isOperationVisible()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.makeSelection()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.modelChanged()",2,19,20
"org.argouml.uml.diagram.static_structure.ui.FigClass.mousePressed(MouseEvent)",1,11,11
"org.argouml.uml.diagram.static_structure.ui.FigClass.placeString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.renderingChanged()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.setAttributeVisible(boolean)",1,4,6
"org.argouml.uml.diagram.static_structure.ui.FigClass.setBounds(int,int,int,int)",1,3,8
"org.argouml.uml.diagram.static_structure.ui.FigClass.setEnclosingFig(Fig)",2,10,11
"org.argouml.uml.diagram.static_structure.ui.FigClass.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.setOperationVisible(boolean)",1,4,6
"org.argouml.uml.diagram.static_structure.ui.FigClass.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigClass.textEdited(FigText)",4,7,8
"org.argouml.uml.diagram.static_structure.ui.FigClass.translate(int,int)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.FigClass.updateStereotypeText()",4,5,7
"org.argouml.uml.diagram.static_structure.ui.FigEdgeNote.FigEdgeNote()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigEdgeNote.FigEdgeNote(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigEdgeNote.canEdit(Fig)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigEdgeNote.setFig(Fig)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInstance.FigInstance()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInstance.FigInstance(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInstance.clone()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInstance.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInstance.placeString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInstance.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.static_structure.ui.FigInstance.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.FigInterface()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.FigInterface(GraphModel,Object)",1,3,3
"org.argouml.uml.diagram.static_structure.ui.FigInterface.MyFigText.MyFigText(int,int,int,int,Fig)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.MyFigText.getFillColor()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.MyFigText.getFilled()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.MyFigText.getLineColor()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.MyFigText.getLineWidth()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.MyFigText.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.calcBounds()",2,1,2
"org.argouml.uml.diagram.static_structure.ui.FigInterface.clone()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.getMinimumSize()",1,3,5
"org.argouml.uml.diagram.static_structure.ui.FigInterface.getPopUpActions(MouseEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.getUpdatedSize(FigGroup,int,int,int,int)",1,2,4
"org.argouml.uml.diagram.static_structure.ui.FigInterface.makeSelection()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.modelChanged()",2,11,12
"org.argouml.uml.diagram.static_structure.ui.FigInterface.mousePressed(MouseEvent)",1,7,7
"org.argouml.uml.diagram.static_structure.ui.FigInterface.placeString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.renderingChanged()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.setBounds(int,int,int,int)",1,3,6
"org.argouml.uml.diagram.static_structure.ui.FigInterface.setEnclosingFig(Fig)",2,10,11
"org.argouml.uml.diagram.static_structure.ui.FigInterface.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigInterface.textEdited(FigText)",3,4,5
"org.argouml.uml.diagram.static_structure.ui.FigInterface.translate(int,int)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.FigLink.FigLink()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigLink.FigLink(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigLink.canEdit(Fig)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.FigNote()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.FigNote(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.FigNote(MModelElement)",1,3,3
"org.argouml.uml.diagram.static_structure.ui.FigNote.clone()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.delayedVetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.delete()",1,2,2
"org.argouml.uml.diagram.static_structure.ui.FigNote.getFillColor()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.getFilled()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.getLineColor()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.getLineWidth()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.getUseTrapRect()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.keyPressed(KeyEvent)",5,3,5
"org.argouml.uml.diagram.static_structure.ui.FigNote.keyReleased(KeyEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.keyTyped(KeyEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.modelChanged()",1,3,3
"org.argouml.uml.diagram.static_structure.ui.FigNote.mouseClicked(MouseEvent)",6,7,9
"org.argouml.uml.diagram.static_structure.ui.FigNote.placeString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.propertyChange(PropertyChangeEvent)",1,4,4
"org.argouml.uml.diagram.static_structure.ui.FigNote.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.recovered(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.removed(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.retrieveNote()",1,2,2
"org.argouml.uml.diagram.static_structure.ui.FigNote.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.static_structure.ui.FigNote.setEnclosingFig(Fig)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.setOwner(Object)",1,4,4
"org.argouml.uml.diagram.static_structure.ui.FigNote.storeNote(String)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.FigNote.textEdited(FigText)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.FigNote.updateBounds()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigNote.vetoableChange(PropertyChangeEvent)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.FigPackage.FigPackage()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.FigPackage(GraphModel,Object)",1,3,3
"org.argouml.uml.diagram.static_structure.ui.FigPackage.clone()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.getFillColor()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.getFilled()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.getLineColor()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.getLineWidth()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.getUseTrapRect()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.placeString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.setBounds(int,int,int,int)",2,1,2
"org.argouml.uml.diagram.static_structure.ui.FigPackage.setEnclosingFig(Fig)",2,7,8
"org.argouml.uml.diagram.static_structure.ui.FigPackage.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.FigPackage.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.getChild(Object,int)",3,3,5
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.getChildCount(Object)",2,1,2
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.getIndexOfChild(Object,Object)",3,3,4
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.getPrereqs()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.getRoot()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.isLeaf(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.getChild(Object,int)",3,3,5
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.getChildCount(Object)",2,1,2
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.getIndexOfChild(Object,Object)",3,3,4
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.getPrereqs()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.getRoot()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.isLeaf(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.getChildren(MClass)",3,5,8
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.getIndexOfChild(Object,Object)",3,3,3
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.getPrereqs()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.getRoot()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.getChildren(Object)",3,5,8
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.getPrereqs()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.getRoot()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.getChild(Object,int)",2,3,3
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.getChildren(MClass)",3,5,8
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.getIndexOfChild(Object,Object)",4,3,4
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.getPrereqs()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.getRoot()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.getChildren(Object)",6,3,9
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.getPrereqs()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.getRoot()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.getChildren(Object)",3,2,5
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.getIndexOfChild(Object,Object)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.getPrereqs()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.getRoot()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.getChildren(Object)",3,2,5
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.getIndexOfChild(Object,Object)",2,2,2
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.getPrereqs()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.getRoot()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.toString()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.SelectionClass(Fig)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.addAssocClassLeft(MutableGraphModel,MClass,MClass)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.addAssocClassRight(MutableGraphModel,MClass,MClass)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.addSubClass(MutableGraphModel,MClass,MClass)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.addSuperClass(MutableGraphModel,MClass,MClass)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.buttonClicked(int)",3,9,11
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.dragHandle(int,int,int,int,Handle)",3,4,9
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.hitHandle(Rectangle,Handle)",5,5,10
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.mouseEntered(MouseEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.SelectionClass.paintButtons(Graphics)",1,3,3
"org.argouml.uml.diagram.static_structure.ui.SelectionInterface.SelectionInterface(Fig)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.SelectionInterface.addRealization(MutableGraphModel,MInterface,MClass)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.SelectionInterface.buttonClicked(int)",3,3,5
"org.argouml.uml.diagram.static_structure.ui.SelectionInterface.dragHandle(int,int,int,int,Handle)",3,4,6
"org.argouml.uml.diagram.static_structure.ui.SelectionInterface.hitHandle(Rectangle,Handle)",5,2,7
"org.argouml.uml.diagram.static_structure.ui.SelectionInterface.paintButtons(Graphics)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.StylePanelFigClass.StylePanelFigClass()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.StylePanelFigClass.insertUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.StylePanelFigClass.itemStateChanged(ItemEvent)",1,3,3
"org.argouml.uml.diagram.static_structure.ui.StylePanelFigClass.refresh()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.StylePanelFigClass.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.TablePanelUMLClassDiagram.TablePanelUMLClassDiagram()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.TablePanelUMLClassDiagram.initTableModels()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.TablePanelUMLClassDiagram.objectSelected(Object)",1,2,2
"org.argouml.uml.diagram.static_structure.ui.TablePanelUMLClassDiagram.setTablePerspective()",1,2,2
"org.argouml.uml.diagram.static_structure.ui.TablePanelUMLClassDiagram.valueChanged(ListSelectionEvent)",8,9,10
"org.argouml.uml.diagram.static_structure.ui.UMLClassDiagram.UMLClassDiagram()",1,1,2
"org.argouml.uml.diagram.static_structure.ui.UMLClassDiagram.UMLClassDiagram(MNamespace)",1,1,1
"org.argouml.uml.diagram.static_structure.ui.UMLClassDiagram.initToolBar()",1,1,1
"org.argouml.uml.diagram.static_structure.ui.UMLClassDiagram.setNamespace(MNamespace)",1,1,1
"org.argouml.uml.diagram.ui.ActionAddExistingNode.ActionAddExistingNode(String)",1,1,1
"org.argouml.uml.diagram.ui.ActionAddExistingNode.ActionAddExistingNode(String,Object)",1,1,1
"org.argouml.uml.diagram.ui.ActionAddExistingNode.actionPerformed(ActionEvent)",2,2,3
"org.argouml.uml.diagram.ui.ActionAddExistingNode.makeEdge()",1,1,1
"org.argouml.uml.diagram.ui.ActionAddExistingNode.makeGraphModel()",1,1,1
"org.argouml.uml.diagram.ui.ActionAddExistingNode.makeNode()",1,1,1
"org.argouml.uml.diagram.ui.ActionAddExistingNode.shouldBeEnabled()",2,1,2
"org.argouml.uml.diagram.ui.DiagramInfo.DiagramInfo(Diagram)",1,1,1
"org.argouml.uml.diagram.ui.DiagramInfo.updateName()",1,1,6
"org.argouml.uml.diagram.ui.FigAssociation.FigAssociation()",1,1,1
"org.argouml.uml.diagram.ui.FigAssociation.FigAssociation(Object)",1,1,1
"org.argouml.uml.diagram.ui.FigAssociation.chooseArrowHead(MAggregationKind,boolean)",8,8,10
"org.argouml.uml.diagram.ui.FigAssociation.getPopUpActions(MouseEvent)",1,3,5
"org.argouml.uml.diagram.ui.FigAssociation.modelChanged()",2,5,9
"org.argouml.uml.diagram.ui.FigAssociation.setOwner(Object)",1,5,5
"org.argouml.uml.diagram.ui.FigAssociation.textEdited(FigText)",3,4,6
"org.argouml.uml.diagram.ui.FigDependency.FigDependency()",1,1,1
"org.argouml.uml.diagram.ui.FigDependency.FigDependency(Object)",1,1,1
"org.argouml.uml.diagram.ui.FigDependency.canEdit(Fig)",1,1,1
"org.argouml.uml.diagram.ui.FigDependency.modelChanged()",1,1,1
"org.argouml.uml.diagram.ui.FigDependency.setFig(Fig)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.FigEdgeModelElement()",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.FigEdgeModelElement(Object)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.canEdit(Fig)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.delayedVetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.delete()",1,2,2
"org.argouml.uml.diagram.ui.FigEdgeModelElement.finalize()",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.getContextNotation()",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.getNameFig()",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.getPopUpActions(MouseEvent)",4,5,6
"org.argouml.uml.diagram.ui.FigEdgeModelElement.getSquaredDistance(Point,Point)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.getStereotypeFig()",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.getTipString(MouseEvent)",1,5,6
"org.argouml.uml.diagram.ui.FigEdgeModelElement.hitClarifier(int,int)",11,7,17
"org.argouml.uml.diagram.ui.FigEdgeModelElement.keyPressed(KeyEvent)",2,3,4
"org.argouml.uml.diagram.ui.FigEdgeModelElement.keyReleased(KeyEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.keyTyped(KeyEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.makeSelection()",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.modelChanged()",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.mouseClicked(MouseEvent)",2,4,5
"org.argouml.uml.diagram.ui.FigEdgeModelElement.mouseEntered(MouseEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.mouseExited(MouseEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.mousePressed(MouseEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.mouseReleased(MouseEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.notationAdded(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.notationChanged(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.notationProviderAdded(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.notationProviderRemoved(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.notationRemoved(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.paintClarifiers(Graphics)",1,5,5
"org.argouml.uml.diagram.ui.FigEdgeModelElement.propertyChange(PropertyChangeEvent)",1,4,4
"org.argouml.uml.diagram.ui.FigEdgeModelElement.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.recovered(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.removed(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.renderingChanged()",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigEdgeModelElement.setOwner(Object)",1,4,4
"org.argouml.uml.diagram.ui.FigEdgeModelElement.textEdited(FigText)",3,2,3
"org.argouml.uml.diagram.ui.FigEdgeModelElement.updateNameText()",2,1,2
"org.argouml.uml.diagram.ui.FigEdgeModelElement.updateStereotypeText()",2,1,2
"org.argouml.uml.diagram.ui.FigEdgeModelElement.vetoableChange(PropertyChangeEvent)",1,2,2
"org.argouml.uml.diagram.ui.FigGeneralization.FigGeneralization()",1,1,1
"org.argouml.uml.diagram.ui.FigGeneralization.FigGeneralization(Object)",1,1,1
"org.argouml.uml.diagram.ui.FigGeneralization.canEdit(Fig)",1,1,1
"org.argouml.uml.diagram.ui.FigGeneralization.modelChanged()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.FigMessage()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.FigMessage(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.addPathItemToFigAssociationRole(Layer)",1,4,6
"org.argouml.uml.diagram.ui.FigMessage.clone()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.dispose()",2,1,2
"org.argouml.uml.diagram.ui.FigMessage.getArrow()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.getFillColor()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.getFilled()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.getLineColor()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.getLineWidth()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.modelChanged()",2,6,7
"org.argouml.uml.diagram.ui.FigMessage.placeString()",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.setArrow(int)",2,5,5
"org.argouml.uml.diagram.ui.FigMessage.setBounds(int,int,int,int)",2,2,3
"org.argouml.uml.diagram.ui.FigMessage.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.ui.FigMessage.textEdited(FigText)",1,2,2
"org.argouml.uml.diagram.ui.FigNodeModelElement.FigNodeModelElement()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.FigNodeModelElement(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.delayedVetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.delete()",1,2,2
"org.argouml.uml.diagram.ui.FigNodeModelElement.elementOrdering(Vector)",1,5,6
"org.argouml.uml.diagram.ui.FigNodeModelElement.finalize()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.getContextNotation()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.getEnclosedFigs()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.getEnclosingFig()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.getNameFig()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.getPopUpActions(MouseEvent)",4,5,6
"org.argouml.uml.diagram.ui.FigNodeModelElement.getTipString(MouseEvent)",1,5,6
"org.argouml.uml.diagram.ui.FigNodeModelElement.hitClarifier(int,int)",11,7,17
"org.argouml.uml.diagram.ui.FigNodeModelElement.keyPressed(KeyEvent)",5,3,5
"org.argouml.uml.diagram.ui.FigNodeModelElement.keyReleased(KeyEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.keyTyped(KeyEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.makeSelection()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.modelChanged()",2,2,3
"org.argouml.uml.diagram.ui.FigNodeModelElement.mouseClicked(MouseEvent)",6,9,11
"org.argouml.uml.diagram.ui.FigNodeModelElement.notationAdded(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.notationChanged(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.notationProviderAdded(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.notationProviderRemoved(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.notationRemoved(ArgoNotationEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.paintClarifiers(Graphics)",1,5,5
"org.argouml.uml.diagram.ui.FigNodeModelElement.placeString()",2,3,3
"org.argouml.uml.diagram.ui.FigNodeModelElement.propertyChange(PropertyChangeEvent)",1,4,4
"org.argouml.uml.diagram.ui.FigNodeModelElement.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.recovered(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.removed(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.renderingChanged()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.setEnclosingFig(Fig)",1,3,3
"org.argouml.uml.diagram.ui.FigNodeModelElement.setOwner(Object)",1,4,4
"org.argouml.uml.diagram.ui.FigNodeModelElement.textEdited(FigText)",3,2,3
"org.argouml.uml.diagram.ui.FigNodeModelElement.updateBounds()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.updateStereotypeText()",1,1,1
"org.argouml.uml.diagram.ui.FigNodeModelElement.vetoableChange(PropertyChangeEvent)",1,2,2
"org.argouml.uml.diagram.ui.FigNote.FigNote()",1,1,1
"org.argouml.uml.diagram.ui.FigNote.FigNote(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.ui.FigNote.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.ui.FigNote.setBounds(int,int,int,int)",1,1,1
"org.argouml.uml.diagram.ui.FigNote.setOwner(Object)",1,2,2
"org.argouml.uml.diagram.ui.FigRealization.FigRealization()",1,1,1
"org.argouml.uml.diagram.ui.FigRealization.FigRealization(Object)",1,1,1
"org.argouml.uml.diagram.ui.FigRealization.canEdit(Fig)",1,1,1
"org.argouml.uml.diagram.ui.FigRealization.modelChanged()",1,1,1
"org.argouml.uml.diagram.ui.FigRealization.setFig(Fig)",1,1,1
"org.argouml.uml.diagram.ui.FigTrace.FigTrace()",1,1,1
"org.argouml.uml.diagram.ui.FigTrace.FigTrace(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToBeh.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToBeh.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.ui.GoClassifierToBeh.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.ui.GoClassifierToBeh.getIndexOfChild(Object,Object)",3,3,3
"org.argouml.uml.diagram.ui.GoClassifierToBeh.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToBeh.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToBeh.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToBeh.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoClassifierToBeh.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToBeh.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToBeh.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToBeh.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToStr.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToStr.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.ui.GoClassifierToStr.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.ui.GoClassifierToStr.getIndexOfChild(Object,Object)",3,3,3
"org.argouml.uml.diagram.ui.GoClassifierToStr.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToStr.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToStr.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToStr.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoClassifierToStr.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToStr.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToStr.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoClassifierToStr.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoDiagramToEdge.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoDiagramToEdge.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.ui.GoDiagramToEdge.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.ui.GoDiagramToEdge.getIndexOfChild(Object,Object)",3,3,3
"org.argouml.uml.diagram.ui.GoDiagramToEdge.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoDiagramToEdge.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoDiagramToEdge.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoDiagramToEdge.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoDiagramToEdge.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoDiagramToEdge.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoDiagramToEdge.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoElement2DependentElement.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoElement2DependentElement.getChild(Object,int)",3,2,3
"org.argouml.uml.diagram.ui.GoElement2DependentElement.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.ui.GoElement2DependentElement.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.ui.GoElement2DependentElement.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoElement2DependentElement.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoElement2DependentElement.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoElement2DependentElement.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoElement2DependentElement.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoElement2DependentElement.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoElement2DependentElement.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoElement2DependentElement.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoElementToMachine.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoElementToMachine.getChild(Object,int)",3,2,3
"org.argouml.uml.diagram.ui.GoElementToMachine.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.ui.GoElementToMachine.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.ui.GoElementToMachine.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoElementToMachine.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoElementToMachine.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoElementToMachine.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoElementToMachine.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoElementToMachine.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoElementToMachine.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoElementToMachine.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoElementToReqElement.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoElementToReqElement.getChild(Object,int)",3,2,3
"org.argouml.uml.diagram.ui.GoElementToReqElement.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.ui.GoElementToReqElement.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.ui.GoElementToReqElement.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoElementToReqElement.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoElementToReqElement.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoElementToReqElement.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoElementToReqElement.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoElementToReqElement.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoElementToReqElement.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoElementToReqElement.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoFilteredChildren.GoFilteredChildren(String,TreeModelPrereqs,Predicate)",1,1,1
"org.argouml.uml.diagram.ui.GoFilteredChildren.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoFilteredChildren.getChild(Object,int)",4,2,4
"org.argouml.uml.diagram.ui.GoFilteredChildren.getChildCount(Object)",1,2,3
"org.argouml.uml.diagram.ui.GoFilteredChildren.getIndexOfChild(Object,Object)",4,2,4
"org.argouml.uml.diagram.ui.GoFilteredChildren.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoFilteredChildren.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoFilteredChildren.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoFilteredChildren.isLeaf(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoFilteredChildren.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoFilteredChildren.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoFilteredChildren.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoGenElementToDerived.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoGenElementToDerived.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.ui.GoGenElementToDerived.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.ui.GoGenElementToDerived.getIndexOfChild(Object,Object)",2,2,2
"org.argouml.uml.diagram.ui.GoGenElementToDerived.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoGenElementToDerived.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoGenElementToDerived.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoGenElementToDerived.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoGenElementToDerived.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoGenElementToDerived.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoGenElementToDerived.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoInteractionMessages.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoInteractionMessages.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.ui.GoInteractionMessages.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.ui.GoInteractionMessages.getChildren(Object)",2,1,2
"org.argouml.uml.diagram.ui.GoInteractionMessages.getIndexOfChild(Object,Object)",2,3,3
"org.argouml.uml.diagram.ui.GoInteractionMessages.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoInteractionMessages.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoInteractionMessages.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoInteractionMessages.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoInteractionMessages.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoInteractionMessages.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoInteractionMessages.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoInteractionMessages.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToBaseElements.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToBaseElements.getChild(Object,int)",5,5,7
"org.argouml.uml.diagram.ui.GoModelToBaseElements.getChildCount(Object)",2,5,6
"org.argouml.uml.diagram.ui.GoModelToBaseElements.getIndexOfChild(Object,Object)",5,5,6
"org.argouml.uml.diagram.ui.GoModelToBaseElements.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToBaseElements.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToBaseElements.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToBaseElements.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoModelToBaseElements.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToBaseElements.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToBaseElements.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToBaseElements.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToDiagram.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToDiagram.getChild(Object,int)",4,3,5
"org.argouml.uml.diagram.ui.GoModelToDiagram.getChildCount(Object)",2,3,4
"org.argouml.uml.diagram.ui.GoModelToDiagram.getIndexOfChild(Object,Object)",5,3,5
"org.argouml.uml.diagram.ui.GoModelToDiagram.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToDiagram.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToDiagram.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToDiagram.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoModelToDiagram.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToDiagram.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToDiagram.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToElements.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToElements.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.ui.GoModelToElements.getChildCount(Object)",2,3,3
"org.argouml.uml.diagram.ui.GoModelToElements.getIndexOfChild(Object,Object)",3,3,3
"org.argouml.uml.diagram.ui.GoModelToElements.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToElements.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToElements.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToElements.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoModelToElements.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToElements.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoModelToElements.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoModelToElements.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoProjectDiagram.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoProjectDiagram.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.ui.GoProjectDiagram.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.ui.GoProjectDiagram.getIndexOfChild(Object,Object)",3,3,3
"org.argouml.uml.diagram.ui.GoProjectDiagram.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoProjectDiagram.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoProjectDiagram.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoProjectDiagram.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoProjectDiagram.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoProjectDiagram.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoProjectDiagram.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.GoProjectModel.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoProjectModel.getChild(Object,int)",2,2,2
"org.argouml.uml.diagram.ui.GoProjectModel.getChildCount(Object)",2,2,2
"org.argouml.uml.diagram.ui.GoProjectModel.getIndexOfChild(Object,Object)",3,3,3
"org.argouml.uml.diagram.ui.GoProjectModel.getPrereqs()",1,1,1
"org.argouml.uml.diagram.ui.GoProjectModel.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.ui.GoProjectModel.getRoot()",1,1,1
"org.argouml.uml.diagram.ui.GoProjectModel.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.ui.GoProjectModel.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.ui.GoProjectModel.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.ui.GoProjectModel.toString()",1,1,1
"org.argouml.uml.diagram.ui.GoProjectModel.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.ModeCreateEdgeAndNode()",1,1,1
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.ModeCreateEdgeAndNode(Editor,Class,Class,boolean)",1,1,1
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.createNewItem(MouseEvent,int,int)",1,1,1
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.done()",1,2,2
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.instructions()",1,1,1
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.keyTyped(KeyEvent)",1,2,2
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.mouseDragged(MouseEvent)",3,2,3
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.mouseMoved(MouseEvent)",1,1,1
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.mousePressed(MouseEvent)",1,1,1
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.mouseReleased(MouseEvent)",11,21,31
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.postProcessEdge()",1,2,2
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode.setup(FigNode,Object,int,int,boolean)",1,1,1
"org.argouml.uml.diagram.ui.PropPanelDiagram.PropPanelDiagram()",1,1,1
"org.argouml.uml.diagram.ui.PropPanelDiagram.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.diagram.ui.PropPanelDiagram.removeElement()",1,3,3
"org.argouml.uml.diagram.ui.PropPanelString.PropPanelString()",1,1,1
"org.argouml.uml.diagram.ui.PropPanelString.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.diagram.ui.PropPanelString.getTarget()",1,1,1
"org.argouml.uml.diagram.ui.PropPanelString.insertUpdate(DocumentEvent)",1,2,2
"org.argouml.uml.diagram.ui.PropPanelString.refresh()",1,1,1
"org.argouml.uml.diagram.ui.PropPanelString.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.diagram.ui.PropPanelString.setTarget(Object)",2,1,2
"org.argouml.uml.diagram.ui.PropPanelString.setTargetName()",1,1,1
"org.argouml.uml.diagram.ui.PropPanelString.shouldBeEnabled()",1,1,1
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement.SPFigEdgeModelElement()",1,1,1
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement.initChoices()",1,1,1
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement.insertUpdate(DocumentEvent)",1,2,2
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement.itemStateChanged(ItemEvent)",1,2,2
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement.refresh()",1,2,2
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement.setTargetBBox()",3,2,4
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement.setTargetLine()",2,2,5
"org.argouml.uml.diagram.ui.SelectionEdgeClarifiers.SelectionEdgeClarifiers(Fig)",1,1,1
"org.argouml.uml.diagram.ui.SelectionEdgeClarifiers.paint(Graphics)",1,1,1
"org.argouml.uml.diagram.ui.SelectionMoveClarifiers.SelectionMoveClarifiers(Fig)",1,1,1
"org.argouml.uml.diagram.ui.SelectionMoveClarifiers.paint(Graphics)",1,1,1
"org.argouml.uml.diagram.ui.SelectionNodeClarifiers.SelectionNodeClarifiers(Fig)",1,1,1
"org.argouml.uml.diagram.ui.SelectionNodeClarifiers.paint(Graphics)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.SelectionWButtons(Fig)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.buttonClicked(int)",1,1,2
"org.argouml.uml.diagram.ui.SelectionWButtons.getBounds()",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.hideButtons()",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.hitAbove(int,int,int,int,Rectangle)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.hitBelow(int,int,int,int,Rectangle)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.hitLeft(int,int,int,int,Rectangle)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.hitRight(int,int,int,int,Rectangle)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.intersectsRect(Rectangle,int,int,int,int)",1,1,4
"org.argouml.uml.diagram.ui.SelectionWButtons.mouseEntered(MouseEvent)",1,1,2
"org.argouml.uml.diagram.ui.SelectionWButtons.mouseExited(MouseEvent)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.mousePressed(MouseEvent)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.mouseReleased(MouseEvent)",2,2,3
"org.argouml.uml.diagram.ui.SelectionWButtons.paint(Graphics)",4,2,5
"org.argouml.uml.diagram.ui.SelectionWButtons.paintButton(Icon,Graphics,int,int,int)",1,3,3
"org.argouml.uml.diagram.ui.SelectionWButtons.paintButtonAbove(Icon,Graphics,int,int,int)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.paintButtonBelow(Icon,Graphics,int,int,int)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.paintButtonLeft(Icon,Graphics,int,int,int)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.paintButtonRight(Icon,Graphics,int,int,int)",1,1,1
"org.argouml.uml.diagram.ui.SelectionWButtons.toggleShowRapidButtons()",1,1,1
"org.argouml.uml.diagram.ui.StylePanelFigMessage.StylePanelFigMessage()",1,1,1
"org.argouml.uml.diagram.ui.StylePanelFigMessage.insertUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.diagram.ui.StylePanelFigMessage.itemStateChanged(ItemEvent)",1,2,2
"org.argouml.uml.diagram.ui.StylePanelFigMessage.refresh()",1,1,1
"org.argouml.uml.diagram.ui.StylePanelFigMessage.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.diagram.ui.StylePanelFigMessage.setTargetArrow()",2,1,3
"org.argouml.uml.diagram.ui.TabDiagram.TabDiagram()",1,1,1
"org.argouml.uml.diagram.ui.TabDiagram.clone()",1,1,1
"org.argouml.uml.diagram.ui.TabDiagram.getJGraph()",1,1,1
"org.argouml.uml.diagram.ui.TabDiagram.getTarget()",1,1,1
"org.argouml.uml.diagram.ui.TabDiagram.modeChange(ModeChangeEvent)",1,3,3
"org.argouml.uml.diagram.ui.TabDiagram.refresh()",1,1,1
"org.argouml.uml.diagram.ui.TabDiagram.removeGraphSelectionListener(GraphSelectionListener)",1,1,1
"org.argouml.uml.diagram.ui.TabDiagram.removeModeChangeListener(ModeChangeListener)",1,1,1
"org.argouml.uml.diagram.ui.TabDiagram.selectionChanged(GraphSelectionEvent)",1,2,2
"org.argouml.uml.diagram.ui.TabDiagram.setTarget(Object)",2,2,3
"org.argouml.uml.diagram.ui.TabDiagram.setVisible(boolean)",1,1,1
"org.argouml.uml.diagram.ui.TabDiagram.shouldBeEnabled()",1,1,1
"org.argouml.uml.diagram.ui.UMLDiagram.UMLDiagram()",1,1,1
"org.argouml.uml.diagram.ui.UMLDiagram.UMLDiagram(MNamespace)",1,1,1
"org.argouml.uml.diagram.ui.UMLDiagram.UMLDiagram(String,MNamespace)",1,1,2
"org.argouml.uml.diagram.ui.UMLDiagram.getClassAndModelID()",2,1,2
"org.argouml.uml.diagram.ui.UMLDiagram.getNamespace()",1,1,1
"org.argouml.uml.diagram.ui.UMLDiagram.getOwner()",1,1,1
"org.argouml.uml.diagram.ui.UMLDiagram.initialize(Object)",1,2,2
"org.argouml.uml.diagram.ui.UMLDiagram.setName(String)",1,1,1
"org.argouml.uml.diagram.ui.UMLDiagram.setNamespace(MNamespace)",1,1,1
"org.argouml.uml.diagram.use_case.TableModelActorByProps.TableModelActorByProps()",1,1,1
"org.argouml.uml.diagram.use_case.TableModelActorByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.use_case.TableModelActorByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.use_case.TableModelActorByProps.toString()",1,1,1
"org.argouml.uml.diagram.use_case.TableModelUseCaseByProps.TableModelUseCaseByProps()",1,1,1
"org.argouml.uml.diagram.use_case.TableModelUseCaseByProps.initColumns()",1,1,1
"org.argouml.uml.diagram.use_case.TableModelUseCaseByProps.rowObjectsFor(Object)",2,3,4
"org.argouml.uml.diagram.use_case.TableModelUseCaseByProps.toString()",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.addEdge(Object)",2,3,4
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.addNode(Object)",2,2,3
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.addNodeRelatedEdges(Object)",1,12,12
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.canAddEdge(Object)",11,4,14
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.canAddNode(Object)",1,1,2
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.canConnect(Object,Object)",2,1,3
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.connect(Object,Object)",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.connect(Object,Object,Class)",4,4,10
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.getDestPort(Object)",2,2,2
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.getEdges()",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.getInEdges(Object)",5,5,7
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.getNamespace()",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.getNodes()",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.getOutEdges(Object)",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.getOwner(Object)",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.getPorts(Object)",1,3,3
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.getSourcePort(Object)",2,2,2
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.removeEdge(Object)",2,1,2
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.removeNode(Object)",2,1,2
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.removed(MElementEvent)",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.setNamespace(MNamespace)",1,3,3
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel.vetoableChange(PropertyChangeEvent)",1,6,6
"org.argouml.uml.diagram.use_case.ui.FigActor.FigActor()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.FigActor(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.clone()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.getFillColor()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.getFilled()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.getLineColor()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.getLineWidth()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.isResizable()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.makeSelection()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.placeString()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.setBounds(int,int,int,int)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigActor.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.FigUseCase()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.FigUseCase(GraphModel,Object)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.clone()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.getFillColor()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.getFilled()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.getLineColor()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.getLineWidth()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.getMinimumSize()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.makeSelection()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.placeString()",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.setBounds(int,int,int,int)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.setFillColor(Color)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.setFilled(boolean)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.setLineColor(Color)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.setLineWidth(int)",1,1,1
"org.argouml.uml.diagram.use_case.ui.FigUseCase.setOwner(Object)",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.getChild(Object,int)",4,3,5
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.getChildCount(Object)",3,2,5
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.getIndexOfChild(Object,Object)",4,2,6
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.getPrereqs()",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.getRoot()",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.toString()",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToActor.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.addTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.getChild(Object,int)",4,3,5
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.getChildCount(Object)",3,2,5
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.getIndexOfChild(Object,Object)",4,2,6
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.getPrereqs()",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.getProvidedTypes()",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.getRoot()",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.isLeaf(Object)",1,2,2
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.removeTreeModelListener(TreeModelListener)",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.setRoot(Object)",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.toString()",1,1,1
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase.valueForPathChanged(TreePath,Object)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionActor.SelectionActor(Fig)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionActor.addAssocClassLeft(MutableGraphModel,MActor,MUseCase)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionActor.addAssocClassRight(MutableGraphModel,MActor,MUseCase)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionActor.buttonClicked(int)",3,5,7
"org.argouml.uml.diagram.use_case.ui.SelectionActor.dragHandle(int,int,int,int,Handle)",3,4,7
"org.argouml.uml.diagram.use_case.ui.SelectionActor.hitHandle(Rectangle,Handle)",5,3,8
"org.argouml.uml.diagram.use_case.ui.SelectionActor.paintButtons(Graphics)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase.SelectionUseCase(Fig)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase.addAssocClassLeft(MutableGraphModel,MUseCase,MClassifier)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase.addAssocClassRight(MutableGraphModel,MUseCase,MClassifier)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase.addSubClass(MutableGraphModel,MUseCase,MClassifier)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase.addSuperClass(MutableGraphModel,MUseCase,MClassifier)",1,1,1
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase.buttonClicked(int)",3,9,13
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase.dragHandle(int,int,int,int,Handle)",3,4,11
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase.hitHandle(Rectangle,Handle)",5,5,10
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase.paintButtons(Graphics)",1,1,1
"org.argouml.uml.diagram.use_case.ui.TablePanelUMLUseCaseDiagram.TablePanelUMLUseCaseDiagram()",1,1,1
"org.argouml.uml.diagram.use_case.ui.TablePanelUMLUseCaseDiagram.initTableModels()",1,1,1
"org.argouml.uml.diagram.use_case.ui.UMLUseCaseDiagram.UMLUseCaseDiagram()",1,1,2
"org.argouml.uml.diagram.use_case.ui.UMLUseCaseDiagram.UMLUseCaseDiagram(MNamespace)",1,1,1
"org.argouml.uml.diagram.use_case.ui.UMLUseCaseDiagram.initToolBar()",1,1,1
"org.argouml.uml.diagram.use_case.ui.UMLUseCaseDiagram.setNamespace(MNamespace)",1,1,1
"org.argouml.uml.diagram.use_case.ui.UseCaseDiagramRenderer.getFigEdgeFor(GraphModel,Layer,Object)",4,5,5
"org.argouml.uml.diagram.use_case.ui.UseCaseDiagramRenderer.getFigNodeFor(GraphModel,Layer,Object)",3,1,3
"org.argouml.uml.generator.GenerationPreferences.GenerationPreferences()",1,1,2
"org.argouml.uml.generator.GenerationPreferences.getHeaderComment()",1,1,1
"org.argouml.uml.generator.GenerationPreferences.getOutputDir()",1,1,1
"org.argouml.uml.generator.GenerationPreferences.setHeaderComment(String)",1,1,1
"org.argouml.uml.generator.GenerationPreferences.setOutputDir(String)",1,1,1
"org.argouml.uml.generator.Generator.Generator(NotationName)",1,1,1
"org.argouml.uml.generator.Generator.generate(Object)",23,21,23
"org.argouml.uml.generator.Generator.generateClassifierRef(MClassifier)",2,1,2
"org.argouml.uml.generator.Generator.generateExpression(MConstraint)",2,1,2
"org.argouml.uml.generator.Generator.generateExpression(MExpression)",2,1,2
"org.argouml.uml.generator.Generator.generateName(String)",1,1,1
"org.argouml.uml.generator.Generator.generateStereotype(MStereotype)",3,1,3
"org.argouml.uml.generator.Generator.generateUninterpreted(String)",2,1,2
"org.argouml.uml.generator.Generator.getModulePopUpActions(Vector,Object)",1,1,1
"org.argouml.uml.generator.Generator.getNotation()",1,1,1
"org.argouml.uml.generator.Generator.inContext(Object[])",1,1,1
"org.argouml.uml.generator.Generator.initializeModule()",1,1,1
"org.argouml.uml.generator.Generator.isModuleEnabled()",1,1,1
"org.argouml.uml.generator.Generator.setModuleEnabled(boolean)",1,1,1
"org.argouml.uml.generator.Generator.shutdownModule()",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.Generate(Object)",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.GeneratorDisplay()",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.canParse()",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.canParse(Object)",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.generateAction(MAction)",2,3,3
"org.argouml.uml.generator.GeneratorDisplay.generateAssociation(MAssociation)",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.generateAssociationEnd(MAssociationEnd)",2,9,11
"org.argouml.uml.generator.GeneratorDisplay.generateAssociationFrom(MAssociation,MAssociationEnd)",1,3,3
"org.argouml.uml.generator.GeneratorDisplay.generateAttribute(MAttribute,boolean)",1,3,4
"org.argouml.uml.generator.GeneratorDisplay.generateChangability(MStructuralFeature)",2,1,2
"org.argouml.uml.generator.GeneratorDisplay.generateClassList(Collection)",2,2,4
"org.argouml.uml.generator.GeneratorDisplay.generateClassifier(MClassifier)",3,7,13
"org.argouml.uml.generator.GeneratorDisplay.generateConstraint(MConstraint)",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.generateConstraints(MModelElement)",2,3,5
"org.argouml.uml.generator.GeneratorDisplay.generateGeneralization(Collection,boolean)",2,5,7
"org.argouml.uml.generator.GeneratorDisplay.generateGuard(MGuard)",2,2,2
"org.argouml.uml.generator.GeneratorDisplay.generateMessage(MMessage)",2,1,2
"org.argouml.uml.generator.GeneratorDisplay.generateMultiplicity(MMultiplicity)",4,2,6
"org.argouml.uml.generator.GeneratorDisplay.generateMultiplicityRange(MMultiplicityRange)",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.generateOperation(MOperation,boolean)",1,8,9
"org.argouml.uml.generator.GeneratorDisplay.generatePackage(MPackage)",1,6,6
"org.argouml.uml.generator.GeneratorDisplay.generateParameter(MParameter)",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.generateScope(MFeature)",2,1,2
"org.argouml.uml.generator.GeneratorDisplay.generateState(MState)",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.generateStateBody(MState)",1,5,9
"org.argouml.uml.generator.GeneratorDisplay.generateTaggedValue(MTaggedValue)",2,1,2
"org.argouml.uml.generator.GeneratorDisplay.generateTransition(MTransition)",1,1,4
"org.argouml.uml.generator.GeneratorDisplay.generateVisibility(MFeature)",4,1,4
"org.argouml.uml.generator.GeneratorDisplay.generateVisibility(MVisibilityKind)",5,1,5
"org.argouml.uml.generator.GeneratorDisplay.getInstance()",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.getModuleAuthor()",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.getModuleDescription()",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.getModuleKey()",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.getModuleName()",1,1,1
"org.argouml.uml.generator.GeneratorDisplay.getModuleVersion()",1,1,1
"org.argouml.uml.generator.Parser.parseExpression(String)",1,1,1
"org.argouml.uml.generator.Parser.parseName(String)",1,1,1
"org.argouml.uml.generator.Parser.parseUninterpreted(String)",1,1,1
"org.argouml.uml.generator.ParserDisplay.parseAction(String)",1,1,1
"org.argouml.uml.generator.ParserDisplay.parseAttribute(String)",1,3,3
"org.argouml.uml.generator.ParserDisplay.parseAttributeCompartment(MClassifier,String)",1,3,3
"org.argouml.uml.generator.ParserDisplay.parseAttributeFig(MClassifier,MAttribute,String)",2,5,7
"org.argouml.uml.generator.ParserDisplay.parseClassifierRole(MClassifierRole,String)",2,10,11
"org.argouml.uml.generator.ParserDisplay.parseComponentInstance(MComponentInstance,String)",2,6,7
"org.argouml.uml.generator.ParserDisplay.parseEvent(String)",1,1,1
"org.argouml.uml.generator.ParserDisplay.parseGuard(String)",1,1,1
"org.argouml.uml.generator.ParserDisplay.parseMessage(MMessage,String)",2,3,4
"org.argouml.uml.generator.ParserDisplay.parseMultiplicity(String)",1,1,1
"org.argouml.uml.generator.ParserDisplay.parseNodeInstance(MNodeInstance,String)",2,6,7
"org.argouml.uml.generator.ParserDisplay.parseObject(MObject,String)",2,5,6
"org.argouml.uml.generator.ParserDisplay.parseOperation(String)",1,3,3
"org.argouml.uml.generator.ParserDisplay.parseOperationCompartment(MClassifier,String)",1,4,4
"org.argouml.uml.generator.ParserDisplay.parseOperationFig(MClassifier,MOperation,String)",2,5,7
"org.argouml.uml.generator.ParserDisplay.parseOutColon(String)",2,3,3
"org.argouml.uml.generator.ParserDisplay.parseOutInitValue(MAttribute,String)",2,1,2
"org.argouml.uml.generator.ParserDisplay.parseOutKeywords(MFeature,String)",7,7,8
"org.argouml.uml.generator.ParserDisplay.parseOutName(MModelElement,String)",3,3,4
"org.argouml.uml.generator.ParserDisplay.parseOutParams(MOperation,String)",1,4,4
"org.argouml.uml.generator.ParserDisplay.parseOutReturnType(MOperation,String)",1,1,2
"org.argouml.uml.generator.ParserDisplay.parseOutType(MAttribute,String)",1,4,5
"org.argouml.uml.generator.ParserDisplay.parseOutVisibility(MFeature,String)",4,12,12
"org.argouml.uml.generator.ParserDisplay.parseParameter(String)",1,3,3
"org.argouml.uml.generator.ParserDisplay.parseState(String)",1,1,1
"org.argouml.uml.generator.ParserDisplay.parseStateBody(MState,String)",5,5,6
"org.argouml.uml.generator.ParserDisplay.parseStateEntyAction(MState,String)",1,3,3
"org.argouml.uml.generator.ParserDisplay.parseStateExitAction(MState,String)",1,3,3
"org.argouml.uml.generator.ParserDisplay.parseStereotype(String)",1,1,1
"org.argouml.uml.generator.ParserDisplay.parseStimulus(MStimulus,String)",3,5,7
"org.argouml.uml.generator.ParserDisplay.parseTaggedValue(String)",1,1,1
"org.argouml.uml.generator.ParserDisplay.parseTransition(MTransition,String)",2,11,12
"org.argouml.uml.generator.ui.ClassGenerationDialog.ClassGenerationDialog(Vector)",1,1,1
"org.argouml.uml.generator.ui.ClassGenerationDialog.actionPerformed(ActionEvent)",1,8,9
"org.argouml.uml.generator.ui.ClassGenerationDialog.compile(String[])",1,9,13
"org.argouml.uml.generator.ui.ClassGenerationDialog.getClasspathEntries()",1,4,4
"org.argouml.uml.generator.ui.ClassGenerationDialog.getMaximumSize()",1,1,1
"org.argouml.uml.generator.ui.TableModelClassChecks.TableModelClassChecks()",1,1,1
"org.argouml.uml.generator.ui.TableModelClassChecks.getChecked()",1,1,1
"org.argouml.uml.generator.ui.TableModelClassChecks.getColumnClass(int)",3,1,3
"org.argouml.uml.generator.ui.TableModelClassChecks.getColumnCount()",1,1,1
"org.argouml.uml.generator.ui.TableModelClassChecks.getColumnName(int)",3,1,3
"org.argouml.uml.generator.ui.TableModelClassChecks.getRowCount()",2,1,2
"org.argouml.uml.generator.ui.TableModelClassChecks.getValueAt(int,int)",3,3,5
"org.argouml.uml.generator.ui.TableModelClassChecks.isCellEditable(int,int)",1,2,2
"org.argouml.uml.generator.ui.TableModelClassChecks.setTarget(Vector)",1,3,3
"org.argouml.uml.generator.ui.TableModelClassChecks.setValueAt(Object,int,int)",3,2,4
"org.argouml.uml.reveng.DiagramInterface.DiagramInterface(Editor)",1,1,1
"org.argouml.uml.reveng.DiagramInterface.addClass(MClass)",1,2,2
"org.argouml.uml.reveng.DiagramInterface.addClassDiagram(MPackage,String)",1,1,2
"org.argouml.uml.reveng.DiagramInterface.addInterface(MInterface)",1,2,2
"org.argouml.uml.reveng.DiagramInterface.addPackage(MPackage)",1,2,2
"org.argouml.uml.reveng.DiagramInterface.getDiagramName(MPackage)",1,1,1
"org.argouml.uml.reveng.DiagramInterface.getDiagramName(String)",1,1,1
"org.argouml.uml.reveng.DiagramInterface.getEditor()",1,1,1
"org.argouml.uml.reveng.DiagramInterface.getModifiedDiagrams()",1,1,1
"org.argouml.uml.reveng.DiagramInterface.isInDiagram(MPackage)",3,3,3
"org.argouml.uml.reveng.DiagramInterface.markDiagramAsModified(Object)",1,2,2
"org.argouml.uml.reveng.DiagramInterface.resetModifiedDiagrams()",1,1,1
"org.argouml.uml.reveng.DiagramInterface.selectClassDiagram(MPackage,String)",1,3,3
"org.argouml.uml.reveng.Import.doDirectory(Project,File)",1,5,5
"org.argouml.uml.reveng.Import.doFile(Project,File)",1,6,6
"org.argouml.uml.reveng.Import.getConfigPanel()",1,2,2
"org.argouml.uml.reveng.Import.needsSave()",1,1,1
"org.argouml.uml.reveng.Import.parseFile(Project,File)",1,2,2
"org.argouml.uml.reveng.java.ArgoToken.getWhitespace()",1,1,1
"org.argouml.uml.reveng.java.ArgoToken.setWhitespace(String)",1,1,1
"org.argouml.uml.reveng.java.ClassifierContext.ClassifierContext(Context,MClassifier)",1,1,1
"org.argouml.uml.reveng.java.ClassifierContext.get(String)",3,3,3
"org.argouml.uml.reveng.java.ClassifierContext.getInterface(String)",3,4,4
"org.argouml.uml.reveng.java.ClassifierNotFoundException.ClassifierNotFoundException(String)",1,1,1
"org.argouml.uml.reveng.java.Context.Context(Context)",1,1,1
"org.argouml.uml.reveng.java.Context.getJavaName(MPackage)",3,3,3
"org.argouml.uml.reveng.java.JavaImport.getConfigPanel()",1,2,2
"org.argouml.uml.reveng.java.JavaImport.parseFile(Project,File,DiagramInterface)",2,1,2
"org.argouml.uml.reveng.java.JavaLexer.JavaLexer(InputBuffer)",1,1,1
"org.argouml.uml.reveng.java.JavaLexer.JavaLexer(InputStream)",1,1,1
"org.argouml.uml.reveng.java.JavaLexer.JavaLexer(LexerSharedInputState)",1,1,1
"org.argouml.uml.reveng.java.JavaLexer.JavaLexer(Reader)",1,1,1
"org.argouml.uml.reveng.java.JavaLexer.addWhitespace(String)",1,1,1
"org.argouml.uml.reveng.java.JavaLexer.getJavadocComment()",1,1,1
"org.argouml.uml.reveng.java.JavaLexer.getWhitespaceBuffer()",1,1,1
"org.argouml.uml.reveng.java.JavaLexer.mASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mBAND(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mBAND_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mBNOT(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mBOR(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mBOR_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mBSR(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mBSR_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mBXOR(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mBXOR_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mCHAR_LITERAL(boolean)",3,4,6
"org.argouml.uml.reveng.java.JavaLexer.mCOLON(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mCOMMA(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mDEC(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mDIV(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mDIV_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mEQUAL(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mESC(boolean)",13,50,52
"org.argouml.uml.reveng.java.JavaLexer.mEXPONENT(boolean)",6,12,15
"org.argouml.uml.reveng.java.JavaLexer.mFLOAT_SUFFIX(boolean)",2,7,9
"org.argouml.uml.reveng.java.JavaLexer.mGE(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mGT(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mHEX_DIGIT(boolean)",2,6,8
"org.argouml.uml.reveng.java.JavaLexer.mIDENT(boolean)",4,14,16
"org.argouml.uml.reveng.java.JavaLexer.mINC(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mJAVADOC(boolean)",7,23,25
"org.argouml.uml.reveng.java.JavaLexer.mLAND(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mLBRACK(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mLCURLY(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mLE(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mLNOT(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mLOR(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mLPAREN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mLT(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mMINUS(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mMINUS_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mML_COMMENT(boolean)",11,37,39
"org.argouml.uml.reveng.java.JavaLexer.mMOD(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mMOD_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mNOT_EQUAL(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mNUM_INT(boolean)",25,54,56
"org.argouml.uml.reveng.java.JavaLexer.mPLUS(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mPLUS_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mQUESTION(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mRBRACK(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mRCURLY(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mRPAREN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mSEMI(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mSL(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mSL_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mSL_COMMENT(boolean)",4,8,10
"org.argouml.uml.reveng.java.JavaLexer.mSR(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mSR_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mSTAR(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mSTAR_ASSIGN(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mSTRING_LITERAL(boolean)",4,5,7
"org.argouml.uml.reveng.java.JavaLexer.mVOCAB(boolean)",1,2,4
"org.argouml.uml.reveng.java.JavaLexer.mWS(boolean)",6,12,14
"org.argouml.uml.reveng.java.JavaLexer.makeToken(int)",1,1,1
"org.argouml.uml.reveng.java.JavaLexer.nextToken()",43,106,108
"org.argouml.uml.reveng.java.JavaLexer.setJavadocComment(String)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.JavaRecognizer(ParserSharedInputState)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.JavaRecognizer(TokenBuffer)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.JavaRecognizer(TokenBuffer,int)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.JavaRecognizer(TokenStream)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.JavaRecognizer(TokenStream,int)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.aCase()",2,4,4
"org.argouml.uml.reveng.java.JavaRecognizer.activateExpressionTracking()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.additiveExpression()",4,7,7
"org.argouml.uml.reveng.java.JavaRecognizer.andExpression()",3,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.appendExpression(String)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.argList()",2,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.arrayInitializer()",6,8,10
"org.argouml.uml.reveng.java.JavaRecognizer.assignmentExpression()",4,16,17
"org.argouml.uml.reveng.java.JavaRecognizer.builtInType()",2,11,20
"org.argouml.uml.reveng.java.JavaRecognizer.builtInTypeSpec()",3,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.caseSList()",3,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.casesGroup()",4,6,6
"org.argouml.uml.reveng.java.JavaRecognizer.classBlock()",3,5,5
"org.argouml.uml.reveng.java.JavaRecognizer.classDefinition(String,short)",1,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.classTypeSpec()",3,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.classVariableDeclarator(String,short,String)",1,2,2
"org.argouml.uml.reveng.java.JavaRecognizer.classVariableDefinitions(String,short,String)",3,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.compilationUnit(Modeller,JavaLexer)",6,7,8
"org.argouml.uml.reveng.java.JavaRecognizer.compoundStatement()",3,7,7
"org.argouml.uml.reveng.java.JavaRecognizer.conditionalExpression()",2,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.constant()",2,6,6
"org.argouml.uml.reveng.java.JavaRecognizer.ctorHead(short)",2,4,5
"org.argouml.uml.reveng.java.JavaRecognizer.deactivateExpressionTracking()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.declaration()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.declaratorBrackets()",3,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.equalityExpression()",4,7,7
"org.argouml.uml.reveng.java.JavaRecognizer.exclusiveOrExpression()",3,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.expression()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.expressionList()",3,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.field()",11,25,27
"org.argouml.uml.reveng.java.JavaRecognizer.forCond()",2,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.forInit()",4,7,8
"org.argouml.uml.reveng.java.JavaRecognizer.forIter()",2,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.getBody()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.getExpression()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.getJavadocComment()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.getMethod()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.getModeller()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.handler()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.identifier()",3,5,5
"org.argouml.uml.reveng.java.JavaRecognizer.identifierStar()",4,8,10
"org.argouml.uml.reveng.java.JavaRecognizer.implementsClause()",4,7,8
"org.argouml.uml.reveng.java.JavaRecognizer.importDefinition()",2,4,4
"org.argouml.uml.reveng.java.JavaRecognizer.inclusiveOrExpression()",3,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.initializer()",2,4,4
"org.argouml.uml.reveng.java.JavaRecognizer.interfaceDefinition(String,short)",1,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.interfaceExtends()",4,7,8
"org.argouml.uml.reveng.java.JavaRecognizer.isInCompoundStatement()",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.logicalAndExpression()",3,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.logicalOrExpression()",3,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.match(int)",1,2,3
"org.argouml.uml.reveng.java.JavaRecognizer.modifier()",2,13,23
"org.argouml.uml.reveng.java.JavaRecognizer.modifiers()",3,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.multiplicativeExpression()",4,7,7
"org.argouml.uml.reveng.java.JavaRecognizer.newArrayDeclarator()",5,7,8
"org.argouml.uml.reveng.java.JavaRecognizer.newExpression()",6,10,12
"org.argouml.uml.reveng.java.JavaRecognizer.packageDefinition()",2,4,4
"org.argouml.uml.reveng.java.JavaRecognizer.parameterDeclaration()",1,2,2
"org.argouml.uml.reveng.java.JavaRecognizer.parameterDeclarationList()",4,7,8
"org.argouml.uml.reveng.java.JavaRecognizer.parameterDeclaratorBrackets()",3,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.parameterModifier()",2,3,5
"org.argouml.uml.reveng.java.JavaRecognizer.postfixExpression()",17,28,30
"org.argouml.uml.reveng.java.JavaRecognizer.primaryExpression()",2,11,11
"org.argouml.uml.reveng.java.JavaRecognizer.relationalExpression()",5,12,12
"org.argouml.uml.reveng.java.JavaRecognizer.returnTypeBrackersOnEndOfMethodHead()",3,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.setBody(String)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.setIsInCompoundStatement(boolean)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.setLexer(JavaLexer)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.setMethod(Object)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.setModeller(Modeller)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.shiftExpression()",4,8,8
"org.argouml.uml.reveng.java.JavaRecognizer.statement()",19,41,45
"org.argouml.uml.reveng.java.JavaRecognizer.superClassClause()",2,3,4
"org.argouml.uml.reveng.java.JavaRecognizer.throwsClause()",3,3,3
"org.argouml.uml.reveng.java.JavaRecognizer.tryBlock()",4,5,6
"org.argouml.uml.reveng.java.JavaRecognizer.type()",2,4,4
"org.argouml.uml.reveng.java.JavaRecognizer.typeDefinition()",5,9,9
"org.argouml.uml.reveng.java.JavaRecognizer.typeSpec()",2,4,6
"org.argouml.uml.reveng.java.JavaRecognizer.unaryExpression()",2,7,7
"org.argouml.uml.reveng.java.JavaRecognizer.unaryExpressionNotPlusMinus()",6,13,14
"org.argouml.uml.reveng.java.JavaRecognizer.varInitializer()",2,7,8
"org.argouml.uml.reveng.java.JavaRecognizer.variableDeclarator(String,short,String)",1,1,1
"org.argouml.uml.reveng.java.JavaRecognizer.variableDefinitions(String,short,String)",3,3,3
"org.argouml.uml.reveng.java.Modeller.Modeller(MModel,DiagramInterface,boolean,boolean)",1,1,1
"org.argouml.uml.reveng.java.Modeller.addAnonymousClass(String)",1,3,4
"org.argouml.uml.reveng.java.Modeller.addAttribute(short,String,String,String,String)",1,11,12
"org.argouml.uml.reveng.java.Modeller.addBodyToOperation(Object,String)",3,3,5
"org.argouml.uml.reveng.java.Modeller.addClass(String,short,String,Vector,String)",1,4,5
"org.argouml.uml.reveng.java.Modeller.addClassifier(MClassifier,String,short,String)",1,3,3
"org.argouml.uml.reveng.java.Modeller.addDocumentationTag(MModelElement,String)",2,17,21
"org.argouml.uml.reveng.java.Modeller.addImport(String)",1,2,3
"org.argouml.uml.reveng.java.Modeller.addInterface(String,short,Vector,String)",1,2,3
"org.argouml.uml.reveng.java.Modeller.addJavadocTagContents(MModelElement,String,String)",1,7,7
"org.argouml.uml.reveng.java.Modeller.addOperation(short,String,String,Vector,String)",1,6,7
"org.argouml.uml.reveng.java.Modeller.addPackage(String)",1,2,2
"org.argouml.uml.reveng.java.Modeller.getAbstraction(MPackage,MInterface,MClass)",4,4,5
"org.argouml.uml.reveng.java.Modeller.getAssociationEnd(String,MClassifier)",1,3,5
"org.argouml.uml.reveng.java.Modeller.getAttribute(String,String,MClassifier)",1,5,5
"org.argouml.uml.reveng.java.Modeller.getClassifierName(String)",2,2,2
"org.argouml.uml.reveng.java.Modeller.getContext(String)",1,2,2
"org.argouml.uml.reveng.java.Modeller.getDiagram()",1,1,1
"org.argouml.uml.reveng.java.Modeller.getException()",1,1,1
"org.argouml.uml.reveng.java.Modeller.getGeneralization(MPackage,MClassifier,MClassifier)",3,3,4
"org.argouml.uml.reveng.java.Modeller.getMethod(String)",1,2,2
"org.argouml.uml.reveng.java.Modeller.getOperation(String)",1,2,2
"org.argouml.uml.reveng.java.Modeller.getPackage(String)",1,4,4
"org.argouml.uml.reveng.java.Modeller.getPackageName(String)",2,2,2
"org.argouml.uml.reveng.java.Modeller.getRelativePackageName(String)",1,1,1
"org.argouml.uml.reveng.java.Modeller.getStereotype(String)",1,2,2
"org.argouml.uml.reveng.java.Modeller.getTaggedValue(MModelElement,String)",3,2,3
"org.argouml.uml.reveng.java.Modeller.popClassifier()",1,3,3
"org.argouml.uml.reveng.java.Modeller.searchPackageInModel(String)",2,3,3
"org.argouml.uml.reveng.java.Modeller.setScope(MAssociationEnd,short)",1,2,2
"org.argouml.uml.reveng.java.Modeller.setScope(MFeature,short)",1,2,2
"org.argouml.uml.reveng.java.Modeller.setVisibility(MModelElement,short)",1,4,4
"org.argouml.uml.reveng.java.OuterClassifierContext.OuterClassifierContext(Context,MClassifier,MPackage,String)",1,1,1
"org.argouml.uml.reveng.java.OuterClassifierContext.get(String)",1,5,6
"org.argouml.uml.reveng.java.OuterClassifierContext.getInterface(String)",3,6,6
"org.argouml.uml.reveng.java.PackageContext.PackageContext(Context,MPackage)",1,1,1
"org.argouml.uml.reveng.java.PackageContext.get(String)",2,15,18
"org.argouml.uml.reveng.java.PackageContext.getInterface(String)",2,5,8
"org.argouml.uml.reveng.java.ParseState.ParseState(MModel,MPackage)",1,1,1
"org.argouml.uml.reveng.java.ParseState.ParseState(ParseState,MClassifier,MPackage)",1,1,1
"org.argouml.uml.reveng.java.ParseState.addClassifierContext(MClassifier)",1,1,1
"org.argouml.uml.reveng.java.ParseState.addPackageContext(MPackage)",1,1,1
"org.argouml.uml.reveng.java.ParseState.anonymousClass()",1,1,1
"org.argouml.uml.reveng.java.ParseState.feature(MFeature)",1,1,1
"org.argouml.uml.reveng.java.ParseState.getClassifier()",1,1,1
"org.argouml.uml.reveng.java.ParseState.getClassnamePrefix()",1,1,1
"org.argouml.uml.reveng.java.ParseState.getContext()",1,1,1
"org.argouml.uml.reveng.java.ParseState.getFeature(String)",3,2,3
"org.argouml.uml.reveng.java.ParseState.getMethod(String)",3,3,4
"org.argouml.uml.reveng.java.ParseState.getOperation(String)",3,3,4
"org.argouml.uml.reveng.java.ParseState.innerClassifier(MClassifier)",1,1,1
"org.argouml.uml.reveng.java.ParseState.outerClassifier()",1,1,1
"org.argouml.uml.reveng.java.ParseState.removeObsoleteFeatures()",1,2,2
"org.argouml.uml.reveng.java.ParseState.removeObsoleteInnerClasses()",1,3,3
"org.argouml.uml.ui.ActionActivityDiagram.ActionActivityDiagram()",1,1,1
"org.argouml.uml.ui.ActionActivityDiagram.actionPerformed(ActionEvent)",2,3,6
"org.argouml.uml.ui.ActionActivityDiagram.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.ActionAddAttribute.ActionAddAttribute()",1,1,1
"org.argouml.uml.ui.ActionAddAttribute.actionPerformed(ActionEvent)",2,1,2
"org.argouml.uml.ui.ActionAddAttribute.shouldBeEnabled()",1,2,2
"org.argouml.uml.ui.ActionAddInternalTrans.ActionAddInternalTrans()",1,1,1
"org.argouml.uml.ui.ActionAddInternalTrans.actionPerformed(ActionEvent)",2,1,2
"org.argouml.uml.ui.ActionAddInternalTrans.shouldBeEnabled()",1,2,2
"org.argouml.uml.ui.ActionAddMessage.ActionAddMessage()",1,1,1
"org.argouml.uml.ui.ActionAddMessage.actionPerformed(ActionEvent)",2,2,4
"org.argouml.uml.ui.ActionAddMessage.shouldBeEnabled()",1,2,2
"org.argouml.uml.ui.ActionAddNote.ActionAddNote()",1,1,1
"org.argouml.uml.ui.ActionAddNote.actionPerformed(ActionEvent)",4,5,10
"org.argouml.uml.ui.ActionAddNote.shouldBeEnabled()",1,2,3
"org.argouml.uml.ui.ActionAddOperation.ActionAddOperation()",1,1,1
"org.argouml.uml.ui.ActionAddOperation.actionPerformed(ActionEvent)",2,1,2
"org.argouml.uml.ui.ActionAddOperation.shouldBeEnabled()",1,2,2
"org.argouml.uml.ui.ActionAddTopLevelPackage.ActionAddTopLevelPackage()",1,1,1
"org.argouml.uml.ui.ActionAddTopLevelPackage.actionPerformed(ActionEvent)",1,1,2
"org.argouml.uml.ui.ActionAggregation.ActionAggregation(MAggregationKind,String)",1,1,1
"org.argouml.uml.ui.ActionAggregation.actionPerformed(ActionEvent)",1,3,3
"org.argouml.uml.ui.ActionAggregation.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.ActionClassDiagram.ActionClassDiagram()",1,1,1
"org.argouml.uml.ui.ActionClassDiagram.actionPerformed(ActionEvent)",1,1,3
"org.argouml.uml.ui.ActionCollaborationDiagram.ActionCollaborationDiagram()",1,1,1
"org.argouml.uml.ui.ActionCollaborationDiagram.actionPerformed(ActionEvent)",1,1,2
"org.argouml.uml.ui.ActionCompartmentDisplay.ActionCompartmentDisplay(boolean,String)",1,1,1
"org.argouml.uml.ui.ActionCompartmentDisplay.actionPerformed(ActionEvent)",1,7,7
"org.argouml.uml.ui.ActionCompartmentDisplay.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.ActionCopy.ActionCopy()",1,1,1
"org.argouml.uml.ui.ActionCopy.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.ActionCopy.shouldBeEnabled()",1,1,2
"org.argouml.uml.ui.ActionCut.ActionCut()",1,1,1
"org.argouml.uml.ui.ActionCut.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.ActionDeleteFromDiagram.ActionDeleteFromDiagram()",1,1,1
"org.argouml.uml.ui.ActionDeleteFromDiagram.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.ActionDeleteFromDiagram.shouldBeEnabled()",1,1,2
"org.argouml.uml.ui.ActionDeploymentDiagram.ActionDeploymentDiagram()",1,1,1
"org.argouml.uml.ui.ActionDeploymentDiagram.actionPerformed(ActionEvent)",1,1,3
"org.argouml.uml.ui.ActionEmptyTrash.ActionEmptyTrash()",1,1,1
"org.argouml.uml.ui.ActionEmptyTrash.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.ActionEmptyTrash.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.ActionExit.ActionExit()",1,1,1
"org.argouml.uml.ui.ActionExit.actionPerformed(ActionEvent)",5,6,8
"org.argouml.uml.ui.ActionGenerateAll.ActionGenerateAll()",1,1,1
"org.argouml.uml.ui.ActionGenerateAll.actionPerformed(ActionEvent)",4,2,7
"org.argouml.uml.ui.ActionGenerateAll.shouldBeEnabled()",1,2,2
"org.argouml.uml.ui.ActionGenerateOne.ActionGenerateOne()",1,1,1
"org.argouml.uml.ui.ActionGenerateOne.actionPerformed(ActionEvent)",3,2,6
"org.argouml.uml.ui.ActionGenerateOne.shouldBeEnabled()",5,3,8
"org.argouml.uml.ui.ActionImportFromSources.ActionImportFromSources()",1,1,1
"org.argouml.uml.ui.ActionImportFromSources.actionPerformed(ActionEvent)",4,6,7
"org.argouml.uml.ui.ActionLayout.ActionLayout(String)",1,1,1
"org.argouml.uml.ui.ActionLayout.actionPerformed(ActionEvent)",1,2,2
"org.argouml.uml.ui.ActionLayout.shouldBeEnabled()",1,2,2
"org.argouml.uml.ui.ActionLoadModelFromDB.ActionLoadModelFromDB()",1,1,1
"org.argouml.uml.ui.ActionLoadModelFromDB.actionPerformed(ActionEvent)",2,3,4
"org.argouml.uml.ui.ActionLoadModelFromDB.shouldBeEnabled()",1,1,2
"org.argouml.uml.ui.ActionMultiplicity.ActionMultiplicity(MMultiplicity,String)",1,1,1
"org.argouml.uml.ui.ActionMultiplicity.actionPerformed(ActionEvent)",1,3,3
"org.argouml.uml.ui.ActionMultiplicity.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.ActionNew.ActionNew()",1,1,1
"org.argouml.uml.ui.ActionNew.actionPerformed(ActionEvent)",5,6,8
"org.argouml.uml.ui.ActionOpenProject.ActionOpenProject()",1,1,1
"org.argouml.uml.ui.ActionOpenProject.actionPerformed(ActionEvent)",7,10,13
"org.argouml.uml.ui.ActionPaste.ActionPaste()",1,1,1
"org.argouml.uml.ui.ActionPaste.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.ActionPaste.shouldBeEnabled()",2,1,2
"org.argouml.uml.ui.ActionProperties.ActionProperties()",1,1,1
"org.argouml.uml.ui.ActionProperties.actionPerformed(ActionEvent)",2,1,2
"org.argouml.uml.ui.ActionProperties.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.ActionRemoveFromModel.ActionRemoveFromModel()",1,1,1
"org.argouml.uml.ui.ActionRemoveFromModel.actionPerformed(ActionEvent)",5,8,10
"org.argouml.uml.ui.ActionRemoveFromModel.shouldBeEnabled()",3,1,4
"org.argouml.uml.ui.ActionRemoveFromModel.sureRemove(MModelElement)",2,3,7
"org.argouml.uml.ui.ActionSaveGIF.ActionSaveGIF()",1,1,1
"org.argouml.uml.ui.ActionSaveGIF.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.ActionSaveGIF.trySave(boolean)",6,13,16
"org.argouml.uml.ui.ActionSaveGraphics.ActionSaveGraphics()",1,1,1
"org.argouml.uml.ui.ActionSaveGraphics.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.ActionSaveGraphics.trySave(boolean)",10,17,20
"org.argouml.uml.ui.ActionSaveProject.ActionSaveProject()",1,1,1
"org.argouml.uml.ui.ActionSaveProject.ActionSaveProject(String,boolean)",1,1,1
"org.argouml.uml.ui.ActionSaveProject.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.ActionSaveProject.shouldBeEnabled()",1,4,4
"org.argouml.uml.ui.ActionSaveProject.trySave(boolean)",1,9,9
"org.argouml.uml.ui.ActionSaveProjectAs.ActionSaveProjectAs()",1,1,1
"org.argouml.uml.ui.ActionSaveProjectAs.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.ActionSaveProjectAs.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.ActionSaveProjectAs.trySave(boolean)",3,11,14
"org.argouml.uml.ui.ActionSequenceDiagram.ActionSequenceDiagram()",1,1,1
"org.argouml.uml.ui.ActionSequenceDiagram.actionPerformed(ActionEvent)",1,1,3
"org.argouml.uml.ui.ActionStateDiagram.ActionStateDiagram()",1,1,1
"org.argouml.uml.ui.ActionStateDiagram.actionPerformed(ActionEvent)",2,3,4
"org.argouml.uml.ui.ActionStateDiagram.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.ActionStoreModelToDB.ActionStoreModelToDB()",1,1,1
"org.argouml.uml.ui.ActionStoreModelToDB.actionPerformed(ActionEvent)",3,3,3
"org.argouml.uml.ui.ActionStoreModelToDB.shouldBeEnabled()",1,1,2
"org.argouml.uml.ui.ActionUseCaseDiagram.ActionUseCaseDiagram()",1,1,1
"org.argouml.uml.ui.ActionUseCaseDiagram.actionPerformed(ActionEvent)",1,1,3
"org.argouml.uml.ui.ActionZoom.ActionZoom(int)",1,1,1
"org.argouml.uml.ui.ActionZoom.actionPerformed(ActionEvent)",1,2,2
"org.argouml.uml.ui.ActionZoom.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.CmdUMLProperties.CmdUMLProperties()",1,1,1
"org.argouml.uml.ui.CmdUMLProperties.doIt()",2,1,2
"org.argouml.uml.ui.CmdUMLProperties.undoIt()",1,1,1
"org.argouml.uml.ui.EnumerationAdapter.EnumerationAdapter(Iterator)",1,1,1
"org.argouml.uml.ui.EnumerationAdapter.hasMoreElements()",1,1,1
"org.argouml.uml.ui.EnumerationAdapter.nextElement()",1,1,1
"org.argouml.uml.ui.InitPanelsLater.InitPanelsLater(Hashtable,TabProps)",1,1,1
"org.argouml.uml.ui.InitPanelsLater.run()",1,4,4
"org.argouml.uml.ui.ModelElementRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)",1,2,2
"org.argouml.uml.ui.PropPanel.PropPanel(String,ImageIcon,int)",1,3,3
"org.argouml.uml.ui.PropPanel.PropPanel(String,int)",1,1,1
"org.argouml.uml.ui.PropPanel.addCaption(Component,int,int,double)",1,1,1
"org.argouml.uml.ui.PropPanel.addCaption(String,int,int,double)",1,1,1
"org.argouml.uml.ui.PropPanel.addField(Component,int,int,double)",1,1,2
"org.argouml.uml.ui.PropPanel.addLinkField(Component,int,int,double)",1,1,1
"org.argouml.uml.ui.PropPanel.addMElementListener(MBase)",1,1,1
"org.argouml.uml.ui.PropPanel.addNavigationListener(NavigationListener)",1,1,1
"org.argouml.uml.ui.PropPanel.addPromiscuousListener(MBase,MElementListener)",1,3,3
"org.argouml.uml.ui.PropPanel.formatCollection(Iterator)",1,1,1
"org.argouml.uml.ui.PropPanel.formatElement(MModelElement)",1,1,1
"org.argouml.uml.ui.PropPanel.formatNamespace(MNamespace)",1,1,1
"org.argouml.uml.ui.PropPanel.getDisplayNamespace()",1,2,2
"org.argouml.uml.ui.PropPanel.getModelElement()",1,1,1
"org.argouml.uml.ui.PropPanel.getProfile()",1,1,2
"org.argouml.uml.ui.PropPanel.getResourceBundle()",1,1,1
"org.argouml.uml.ui.PropPanel.getStereotype()",1,2,2
"org.argouml.uml.ui.PropPanel.getTarget()",1,1,1
"org.argouml.uml.ui.PropPanel.isAcceptibleStereotype(MModelElement)",1,4,4
"org.argouml.uml.ui.PropPanel.isNavigateBackEnabled()",1,3,3
"org.argouml.uml.ui.PropPanel.isNavigateForwardEnabled()",1,3,3
"org.argouml.uml.ui.PropPanel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanel.loadPromiscMethods()",1,3,3
"org.argouml.uml.ui.PropPanel.localize(String)",1,3,5
"org.argouml.uml.ui.PropPanel.navigateBack(boolean)",1,2,3
"org.argouml.uml.ui.PropPanel.navigateBackAction()",1,1,1
"org.argouml.uml.ui.PropPanel.navigateForward(boolean)",1,2,3
"org.argouml.uml.ui.PropPanel.navigateForwardAction()",1,1,1
"org.argouml.uml.ui.PropPanel.navigateTo(Object)",1,2,2
"org.argouml.uml.ui.PropPanel.open(Object)",1,2,2
"org.argouml.uml.ui.PropPanel.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanel.refresh()",1,1,1
"org.argouml.uml.ui.PropPanel.removeElement()",1,5,5
"org.argouml.uml.ui.PropPanel.removeMElementListener(MBase)",1,1,1
"org.argouml.uml.ui.PropPanel.removeNavigationListener(NavigationListener)",1,1,1
"org.argouml.uml.ui.PropPanel.removePromiscuousListener(MBase,MElementListener)",1,3,3
"org.argouml.uml.ui.PropPanel.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanel.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanel.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanel.setNameEventListening(Class[])",1,1,3
"org.argouml.uml.ui.PropPanel.setStereotype(MStereotype)",1,2,2
"org.argouml.uml.ui.PropPanel.setTarget(Object)",1,5,7
"org.argouml.uml.ui.PropPanel.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.PropPanelButton.PropPanelButton(PropPanel,JPanel,Icon,String,String,String)",1,3,3
"org.argouml.uml.ui.PropPanelButton.actionPerformed(ActionEvent)",1,4,5
"org.argouml.uml.ui.PropPanelButton.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanelButton.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanelButton.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanelButton.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanelButton.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanelButton.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.PropPanelButton.targetChanged()",1,1,1
"org.argouml.uml.ui.PropPanelButton.targetReasserted()",1,5,7
"org.argouml.uml.ui.TabConstraints.ConstraintModel.CR.CR(MConstraint,int)",1,1,1
"org.argouml.uml.ui.TabConstraints.ConstraintModel.CR.CR(int)",1,1,1
"org.argouml.uml.ui.TabConstraints.ConstraintModel.CR.getData()",2,2,2
"org.argouml.uml.ui.TabConstraints.ConstraintModel.CR.getName()",2,2,2
"org.argouml.uml.ui.TabConstraints.ConstraintModel.CR.setData(String,EditingUtilities)",3,8,9
"org.argouml.uml.ui.TabConstraints.ConstraintModel.CR.setName(String,EditingUtilities)",3,5,7
"org.argouml.uml.ui.TabConstraints.ConstraintModel.ConstraintModel(MModelElementImpl)",1,1,1
"org.argouml.uml.ui.TabConstraints.ConstraintModel.addConstraint()",1,1,1
"org.argouml.uml.ui.TabConstraints.ConstraintModel.addConstraintChangeListener(ConstraintChangeListener)",1,1,1
"org.argouml.uml.ui.TabConstraints.ConstraintModel.fireConstraintAdded()",1,4,4
"org.argouml.uml.ui.TabConstraints.ConstraintModel.fireConstraintDataChanged(int,MConstraint,MConstraint)",1,3,4
"org.argouml.uml.ui.TabConstraints.ConstraintModel.fireConstraintNameChanged(int,MConstraint,MConstraint)",1,3,4
"org.argouml.uml.ui.TabConstraints.ConstraintModel.fireConstraintRemoved(MConstraint,int)",1,3,4
"org.argouml.uml.ui.TabConstraints.ConstraintModel.getConstraintAt(int)",1,1,1
"org.argouml.uml.ui.TabConstraints.ConstraintModel.getConstraintCount()",1,1,1
"org.argouml.uml.ui.TabConstraints.ConstraintModel.removeConstraintAt(int)",2,3,4
"org.argouml.uml.ui.TabConstraints.ConstraintModel.removeConstraintChangeListener(ConstraintChangeListener)",1,1,1
"org.argouml.uml.ui.TabConstraints.ConstraintModel.representationFor(int)",3,2,4
"org.argouml.uml.ui.TabConstraints.TabConstraints()",1,1,1
"org.argouml.uml.ui.TabConstraints.getTarget()",1,1,1
"org.argouml.uml.ui.TabConstraints.refresh()",1,1,1
"org.argouml.uml.ui.TabConstraints.setTarget(Object)",2,1,2
"org.argouml.uml.ui.TabConstraints.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.TabDocumentation.TabDocumentation()",1,1,1
"org.argouml.uml.ui.TabDocumentation.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.TabDocumentation.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.TabProps.TabProps()",1,1,1
"org.argouml.uml.ui.TabProps.TabProps(String,String)",1,2,2
"org.argouml.uml.ui.TabProps.addNavigationListener(NavigationListener)",1,1,1
"org.argouml.uml.ui.TabProps.addPanel(Class,PropPanel)",1,1,1
"org.argouml.uml.ui.TabProps.finalize()",1,1,1
"org.argouml.uml.ui.TabProps.findPanelFor(Class)",3,2,6
"org.argouml.uml.ui.TabProps.getClassBaseName()",1,1,1
"org.argouml.uml.ui.TabProps.getTarget()",1,1,1
"org.argouml.uml.ui.TabProps.initPanels()",1,1,1
"org.argouml.uml.ui.TabProps.isNavigateBackEnabled()",1,3,3
"org.argouml.uml.ui.TabProps.isNavigateForwardEnabled()",1,3,3
"org.argouml.uml.ui.TabProps.moduleDisabled(ArgoModuleEvent)",1,1,1
"org.argouml.uml.ui.TabProps.moduleEnabled(ArgoModuleEvent)",1,1,1
"org.argouml.uml.ui.TabProps.moduleLoaded(ArgoModuleEvent)",1,3,3
"org.argouml.uml.ui.TabProps.moduleUnloaded(ArgoModuleEvent)",1,1,1
"org.argouml.uml.ui.TabProps.navigateBack(boolean)",1,2,3
"org.argouml.uml.ui.TabProps.navigateForward(boolean)",1,2,3
"org.argouml.uml.ui.TabProps.navigateTo(Object)",1,2,2
"org.argouml.uml.ui.TabProps.open(Object)",1,2,2
"org.argouml.uml.ui.TabProps.panelClassFor(Class)",1,5,6
"org.argouml.uml.ui.TabProps.refresh()",1,1,1
"org.argouml.uml.ui.TabProps.removeNavigationListener(NavigationListener)",1,1,1
"org.argouml.uml.ui.TabProps.setTarget(Object)",4,5,7
"org.argouml.uml.ui.TabProps.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.TabSrc.TabSrc()",1,1,1
"org.argouml.uml.ui.TabSrc.finalize()",1,1,1
"org.argouml.uml.ui.TabSrc.genText()",2,3,4
"org.argouml.uml.ui.TabSrc.getContextNotation()",1,1,1
"org.argouml.uml.ui.TabSrc.itemStateChanged(ItemEvent)",1,2,2
"org.argouml.uml.ui.TabSrc.notationAdded(ArgoNotationEvent)",1,1,1
"org.argouml.uml.ui.TabSrc.notationChanged(ArgoNotationEvent)",1,1,1
"org.argouml.uml.ui.TabSrc.notationProviderAdded(ArgoNotationEvent)",1,1,1
"org.argouml.uml.ui.TabSrc.notationProviderRemoved(ArgoNotationEvent)",1,1,1
"org.argouml.uml.ui.TabSrc.notationRemoved(ArgoNotationEvent)",1,1,1
"org.argouml.uml.ui.TabSrc.parseText(String)",2,3,4
"org.argouml.uml.ui.TabSrc.refresh()",1,1,1
"org.argouml.uml.ui.TabSrc.setTarget(Object)",1,3,5
"org.argouml.uml.ui.TabStyle.TabStyle()",1,1,1
"org.argouml.uml.ui.TabStyle.TabStyle(String,String,String)",1,1,1
"org.argouml.uml.ui.TabStyle.delayedVetoableChange(PropertyChangeEvent)",1,2,2
"org.argouml.uml.ui.TabStyle.findPanelFor(Class)",3,2,5
"org.argouml.uml.ui.TabStyle.getAlternativeClassBaseName()",1,1,1
"org.argouml.uml.ui.TabStyle.getClassBaseName()",1,1,1
"org.argouml.uml.ui.TabStyle.getTarget()",1,1,1
"org.argouml.uml.ui.TabStyle.initPanels()",1,1,1
"org.argouml.uml.ui.TabStyle.panelClassFor(Class)",1,2,4
"org.argouml.uml.ui.TabStyle.propertyChange(PropertyChangeEvent)",1,1,1
"org.argouml.uml.ui.TabStyle.refresh()",1,1,1
"org.argouml.uml.ui.TabStyle.setTarget(Fig)",2,7,8
"org.argouml.uml.ui.TabStyle.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.TabTaggedValues.TabTaggedValues()",1,1,1
"org.argouml.uml.ui.TabTaggedValues.getTarget()",1,1,1
"org.argouml.uml.ui.TabTaggedValues.refresh()",1,1,1
"org.argouml.uml.ui.TabTaggedValues.resizeColumns()",1,1,1
"org.argouml.uml.ui.TabTaggedValues.setTarget(Object)",2,1,2
"org.argouml.uml.ui.TabTaggedValues.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.TabUMLDisplay.TabUMLDisplay()",1,1,1
"org.argouml.uml.ui.TabUMLDisplay.genText()",2,1,2
"org.argouml.uml.ui.TabUMLDisplay.parseText(String)",1,1,2
"org.argouml.uml.ui.TabUMLDisplay.setTarget(Object)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.TableModelTaggedValues(TabTaggedValues)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.delayedVetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.getColumnClass(int)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.getColumnCount()",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.getColumnName(int)",3,1,3
"org.argouml.uml.ui.TableModelTaggedValues.getRowCount()",2,1,2
"org.argouml.uml.ui.TableModelTaggedValues.getValueAt(int,int)",6,3,6
"org.argouml.uml.ui.TableModelTaggedValues.isCellEditable(int,int)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.TableModelTaggedValues.setTarget(MModelElement)",1,3,3
"org.argouml.uml.ui.TableModelTaggedValues.setValueAt(Object,int,int)",3,7,10
"org.argouml.uml.ui.TableModelTaggedValues.vetoableChange(PropertyChangeEvent)",1,1,1
"org.argouml.uml.ui.UMLAction.UMLAction(String)",1,1,1
"org.argouml.uml.ui.UMLAction.UMLAction(String,boolean)",1,1,1
"org.argouml.uml.ui.UMLAction.UMLAction(String,boolean,boolean)",1,4,4
"org.argouml.uml.ui.UMLAction.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.UMLAction.getMnemonic(String)",1,1,1
"org.argouml.uml.ui.UMLAction.getShortcut(String)",1,1,1
"org.argouml.uml.ui.UMLAction.markNeedsSave()",1,1,1
"org.argouml.uml.ui.UMLAction.shouldBeEnabled()",1,1,1
"org.argouml.uml.ui.UMLAction.stripJunk(String)",1,2,3
"org.argouml.uml.ui.UMLAction.updateEnabled()",1,1,1
"org.argouml.uml.ui.UMLAction.updateEnabled(Object)",1,1,1
"org.argouml.uml.ui.UMLAssociationEndListModel.UMLAssociationEndListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLAssociationEndListModel.add(int)",1,2,2
"org.argouml.uml.ui.UMLAssociationEndListModel.buildPopup(JPopupMenu,int)",1,5,5
"org.argouml.uml.ui.UMLAssociationEndListModel.delete(int)",1,3,3
"org.argouml.uml.ui.UMLAssociationEndListModel.getAssociationEnds()",1,2,2
"org.argouml.uml.ui.UMLAssociationEndListModel.getModelElementAt(int)",1,1,1
"org.argouml.uml.ui.UMLAssociationEndListModel.moveDown(int)",1,2,2
"org.argouml.uml.ui.UMLAssociationEndListModel.moveUp(int)",1,2,2
"org.argouml.uml.ui.UMLAssociationEndListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLAssociationsListModel.UMLAssociationsListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLAssociationsListModel.createModelElement()",1,1,1
"org.argouml.uml.ui.UMLAssociationsListModel.isProperClass(Object)",1,1,1
"org.argouml.uml.ui.UMLAttributesListModel.UMLAttributesListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLAttributesListModel.add(int)",1,2,2
"org.argouml.uml.ui.UMLAttributesListModel.delete(int)",1,4,5
"org.argouml.uml.ui.UMLAttributesListModel.getCache()",1,2,2
"org.argouml.uml.ui.UMLAttributesListModel.getRawCollection()",1,2,2
"org.argouml.uml.ui.UMLAttributesListModel.isProperClass(Object)",1,1,1
"org.argouml.uml.ui.UMLAttributesListModel.moveDown(int)",1,2,2
"org.argouml.uml.ui.UMLAttributesListModel.moveUp(int)",1,2,2
"org.argouml.uml.ui.UMLAttributesListModel.resetCache()",1,1,1
"org.argouml.uml.ui.UMLBooleanProperty.UMLBooleanProperty(String)",1,1,1
"org.argouml.uml.ui.UMLBooleanProperty.getPropertyName()",1,1,1
"org.argouml.uml.ui.UMLBooleanProperty.isAffected(MElementEvent)",2,3,4
"org.argouml.uml.ui.UMLChangeAction.UMLChangeAction(String)",1,1,1
"org.argouml.uml.ui.UMLChangeAction.UMLChangeAction(String,boolean)",1,1,1
"org.argouml.uml.ui.UMLChangeAction.actionPerformed(ActionEvent)",1,1,1
"org.argouml.uml.ui.UMLChangeDispatch.UMLChangeDispatch(Container,int)",1,1,1
"org.argouml.uml.ui.UMLChangeDispatch.dispatch(Container)",2,5,12
"org.argouml.uml.ui.UMLChangeDispatch.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLChangeDispatch.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLChangeDispatch.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLChangeDispatch.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLChangeDispatch.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLChangeDispatch.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLChangeDispatch.run()",1,3,4
"org.argouml.uml.ui.UMLChangeDispatch.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLChangeDispatch.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLCheckBox.UMLCheckBox(String,UMLUserInterfaceContainer,UMLBooleanProperty)",1,1,1
"org.argouml.uml.ui.UMLCheckBox.itemStateChanged(ItemEvent)",1,1,1
"org.argouml.uml.ui.UMLCheckBox.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLCheckBox.propertySet(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLCheckBox.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLCheckBox.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLCheckBox.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLCheckBox.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLCheckBox.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLCheckBox.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLCheckBox.update()",1,3,5
"org.argouml.uml.ui.UMLClassifierComboBoxModel.UMLClassifierComboBoxModel(UMLUserInterfaceContainer,String,String,String,String,boolean,Class,boolean)",1,1,1
"org.argouml.uml.ui.UMLClassifierComboBoxModel.makeSelection(MModel,MClassifier)",1,13,13
"org.argouml.uml.ui.UMLClassifierComboBoxModel.roleAdded(MElementEvent)",1,6,6
"org.argouml.uml.ui.UMLClassifierComboBoxModel.targetChanged()",1,4,4
"org.argouml.uml.ui.UMLClassifierListModel.UMLClassifierListModel(UMLUserInterfaceContainer,String,boolean,Class,Class)",1,1,1
"org.argouml.uml.ui.UMLClassifierListModel.add(int)",1,4,4
"org.argouml.uml.ui.UMLClassifierListModel.buildPopup(JPopupMenu,int)",1,2,2
"org.argouml.uml.ui.UMLClassifierListModel.createCollection(int)",1,1,1
"org.argouml.uml.ui.UMLClassifierListModel.delete(int)",1,3,4
"org.argouml.uml.ui.UMLClassifierListModel.getCache()",1,2,2
"org.argouml.uml.ui.UMLClassifierListModel.getRawCollection()",1,2,2
"org.argouml.uml.ui.UMLClassifierListModel.isProperClass(Object)",1,1,1
"org.argouml.uml.ui.UMLClassifierListModel.resetCache()",1,1,1
"org.argouml.uml.ui.UMLClassifierNameComparator.UMLClassifierNameComparator()",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.UMLClassifiersListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.addActor(int)",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.addClass(int)",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.addDatatype(int)",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.addException(int)",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.addInterface(int)",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.addSignal(int)",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.addUseCase(int)",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.buildPopup(JPopupMenu,int)",1,4,4
"org.argouml.uml.ui.UMLClassifiersListModel.createModelElement()",1,1,1
"org.argouml.uml.ui.UMLClassifiersListModel.isProperClass(Object)",1,1,1
"org.argouml.uml.ui.UMLClientDependencyListModel.UMLClientDependencyListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLClientDependencyListModel.add(int)",1,3,3
"org.argouml.uml.ui.UMLClientDependencyListModel.delete(int)",1,3,3
"org.argouml.uml.ui.UMLClientDependencyListModel.formatElement(MModelElement)",1,3,4
"org.argouml.uml.ui.UMLClientDependencyListModel.getClientDependencies()",1,2,2
"org.argouml.uml.ui.UMLClientDependencyListModel.getModelElementAt(int)",1,1,1
"org.argouml.uml.ui.UMLClientDependencyListModel.moveDown(int)",1,2,2
"org.argouml.uml.ui.UMLClientDependencyListModel.moveUp(int)",1,2,2
"org.argouml.uml.ui.UMLClientDependencyListModel.open(int)",1,1,1
"org.argouml.uml.ui.UMLClientDependencyListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLComboBox.UMLComboBox(UMLComboBoxModel)",1,1,1
"org.argouml.uml.ui.UMLComboBox.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLComboBox.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLComboBox.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLComboBox.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLComboBox.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLComboBox.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLComboBox.setModel(ComboBoxModel)",1,4,4
"org.argouml.uml.ui.UMLComboBox.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLComboBox.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLComboBoxEntry.UMLComboBoxEntry(MModelElement,Profile,boolean)",1,2,2
"org.argouml.uml.ui.UMLComboBoxEntry.checkCollision(String,String)",1,6,6
"org.argouml.uml.ui.UMLComboBoxEntry.compareTo(Object)",1,6,6
"org.argouml.uml.ui.UMLComboBoxEntry.findNamespace(MNamespace,MModel)",6,6,8
"org.argouml.uml.ui.UMLComboBoxEntry.getElement(MModel)",1,4,5
"org.argouml.uml.ui.UMLComboBoxEntry.getLongName()",1,3,3
"org.argouml.uml.ui.UMLComboBoxEntry.getShortName()",1,1,1
"org.argouml.uml.ui.UMLComboBoxEntry.isPhantom()",1,1,1
"org.argouml.uml.ui.UMLComboBoxEntry.nameChanged(MModelElement)",1,2,3
"org.argouml.uml.ui.UMLComboBoxEntry.setElement(MModelElement,boolean)",1,1,1
"org.argouml.uml.ui.UMLComboBoxEntry.toString()",1,1,1
"org.argouml.uml.ui.UMLComboBoxEntry.updateName()",1,2,2
"org.argouml.uml.ui.UMLComboBoxModel.UMLComboBoxModel(UMLUserInterfaceContainer,String,String,String,String,boolean,Class,boolean)",1,7,7
"org.argouml.uml.ui.UMLComboBoxModel.actionPerformed(ActionEvent)",1,4,4
"org.argouml.uml.ui.UMLComboBoxModel.addElementsFromProfileModel()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.allowVoid()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.collectElements(MNamespace,Profile,boolean)",7,8,9
"org.argouml.uml.ui.UMLComboBoxModel.getContainer()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.getElementAt(int)",3,2,3
"org.argouml.uml.ui.UMLComboBoxModel.getGetMethod()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.getModel()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.getSelectedItem()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.getSet()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.getSetMethod()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.getSize()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.isAcceptible(MModelElement)",1,3,3
"org.argouml.uml.ui.UMLComboBoxModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.propertySet(MElementEvent)",5,8,8
"org.argouml.uml.ui.UMLComboBoxModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.removed(MElementEvent)",3,4,4
"org.argouml.uml.ui.UMLComboBoxModel.roleAdded(MElementEvent)",1,3,3
"org.argouml.uml.ui.UMLComboBoxModel.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.setModel(MModel)",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.setSelectedItem(Object)",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.targetChanged()",3,14,15
"org.argouml.uml.ui.UMLComboBoxModel.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLComboBoxModel.updateElement(MModelElement)",1,8,8
"org.argouml.uml.ui.UMLComboBoxNavigator.UMLComboBoxNavigator(UMLUserInterfaceContainer,String,JComboBox)",1,1,1
"org.argouml.uml.ui.UMLComboBoxNavigator.actionPerformed(ActionEvent)",1,4,4
"org.argouml.uml.ui.UMLConnectionListModel.UMLConnectionListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLConnectionListModel.add(int)",1,2,2
"org.argouml.uml.ui.UMLConnectionListModel.delete(int)",1,5,5
"org.argouml.uml.ui.UMLConnectionListModel.getConnections()",1,2,2
"org.argouml.uml.ui.UMLConnectionListModel.getModelElementAt(int)",1,3,3
"org.argouml.uml.ui.UMLConnectionListModel.moveDown(int)",1,2,2
"org.argouml.uml.ui.UMLConnectionListModel.moveUp(int)",1,2,2
"org.argouml.uml.ui.UMLConnectionListModel.open(int)",1,2,2
"org.argouml.uml.ui.UMLConnectionListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLConnectionListModel.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLEnumerationBooleanProperty.UMLEnumerationBooleanProperty(String,Class,String,String,Class,Object,Object)",1,3,3
"org.argouml.uml.ui.UMLEnumerationBooleanProperty.getProperty(Object)",1,5,7
"org.argouml.uml.ui.UMLEnumerationBooleanProperty.setProperty(Object,boolean)",1,5,6
"org.argouml.uml.ui.UMLExpressionBodyField.UMLExpressionBodyField(UMLExpressionModel,boolean)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.insertUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.targetChanged()",1,2,2
"org.argouml.uml.ui.UMLExpressionBodyField.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLExpressionBodyField.update()",1,5,5
"org.argouml.uml.ui.UMLExpressionLanguageField.UMLExpressionLanguageField(UMLExpressionModel,boolean)",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.insertUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.propertySet(MElementEvent)",1,3,3
"org.argouml.uml.ui.UMLExpressionLanguageField.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.targetChanged()",1,2,2
"org.argouml.uml.ui.UMLExpressionLanguageField.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLExpressionLanguageField.update()",1,5,5
"org.argouml.uml.ui.UMLExpressionModel.UMLExpressionModel(UMLUserInterfaceContainer,Class,String,Class,String,String)",1,4,4
"org.argouml.uml.ui.UMLExpressionModel.getBody()",2,2,3
"org.argouml.uml.ui.UMLExpressionModel.getExpression()",1,4,5
"org.argouml.uml.ui.UMLExpressionModel.getLanguage()",2,2,3
"org.argouml.uml.ui.UMLExpressionModel.propertySet(MElementEvent)",1,2,3
"org.argouml.uml.ui.UMLExpressionModel.setBody(String)",1,5,7
"org.argouml.uml.ui.UMLExpressionModel.setExpression(String,String)",1,3,3
"org.argouml.uml.ui.UMLExpressionModel.setLanguage(String)",1,5,7
"org.argouml.uml.ui.UMLExpressionModel.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLExtendListModel.UMLExtendListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLExtendListModel.add(int)",1,2,2
"org.argouml.uml.ui.UMLExtendListModel.buildPopup(JPopupMenu,int)",1,2,2
"org.argouml.uml.ui.UMLExtendListModel.delete(int)",1,3,3
"org.argouml.uml.ui.UMLExtendListModel.getExtends()",1,2,2
"org.argouml.uml.ui.UMLExtendListModel.getModelElementAt(int)",1,2,2
"org.argouml.uml.ui.UMLExtendListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLExtensionPointListModel.UMLExtensionPointListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLExtensionPointListModel.add(int)",1,2,2
"org.argouml.uml.ui.UMLExtensionPointListModel.buildPopup(JPopupMenu,int)",1,2,2
"org.argouml.uml.ui.UMLExtensionPointListModel.delete(int)",1,2,2
"org.argouml.uml.ui.UMLExtensionPointListModel.getExtensionPoints()",1,2,2
"org.argouml.uml.ui.UMLExtensionPointListModel.getModelElementAt(int)",1,2,2
"org.argouml.uml.ui.UMLExtensionPointListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLGeneralizationListModel.UMLGeneralizationListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLGeneralizationListModel.add(int)",1,3,3
"org.argouml.uml.ui.UMLGeneralizationListModel.delete(int)",1,3,3
"org.argouml.uml.ui.UMLGeneralizationListModel.formatElement(MModelElement)",1,3,3
"org.argouml.uml.ui.UMLGeneralizationListModel.getGeneralizations()",1,2,2
"org.argouml.uml.ui.UMLGeneralizationListModel.getModelElementAt(int)",1,1,1
"org.argouml.uml.ui.UMLGeneralizationListModel.moveDown(int)",1,2,2
"org.argouml.uml.ui.UMLGeneralizationListModel.moveUp(int)",1,2,2
"org.argouml.uml.ui.UMLGeneralizationListModel.open(int)",1,2,2
"org.argouml.uml.ui.UMLGeneralizationListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLGeneralizationsListModel.UMLGeneralizationsListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLGeneralizationsListModel.createModelElement()",1,1,1
"org.argouml.uml.ui.UMLGeneralizationsListModel.isProperClass(Object)",1,1,1
"org.argouml.uml.ui.UMLIncludeListModel.UMLIncludeListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLIncludeListModel.add(int)",1,2,2
"org.argouml.uml.ui.UMLIncludeListModel.buildPopup(JPopupMenu,int)",1,2,2
"org.argouml.uml.ui.UMLIncludeListModel.delete(int)",1,3,3
"org.argouml.uml.ui.UMLIncludeListModel.getIncludes()",1,2,2
"org.argouml.uml.ui.UMLIncludeListModel.getModelElementAt(int)",1,2,2
"org.argouml.uml.ui.UMLIncludeListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLInitialValueComboBox.UMLInitialValueComboBox(UMLUserInterfaceContainer)",1,4,4
"org.argouml.uml.ui.UMLInitialValueComboBox.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLInitialValueComboBox.propertySet(MElementEvent)",1,3,3
"org.argouml.uml.ui.UMLInitialValueComboBox.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLInitialValueComboBox.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLInitialValueComboBox.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLInitialValueComboBox.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLInitialValueComboBox.targetChanged()",1,7,7
"org.argouml.uml.ui.UMLInitialValueComboBox.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLInitialValueComboBox.update()",1,3,3
"org.argouml.uml.ui.UMLInitialValueComboBox.updateDefaults()",1,3,3
"org.argouml.uml.ui.UMLList.UMLList(UMLModelElementListModel,boolean)",1,2,2
"org.argouml.uml.ui.UMLList.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLList.mouseClicked(MouseEvent)",1,3,3
"org.argouml.uml.ui.UMLList.mouseEntered(MouseEvent)",1,2,2
"org.argouml.uml.ui.UMLList.mouseExited(MouseEvent)",1,2,2
"org.argouml.uml.ui.UMLList.mousePressed(MouseEvent)",1,2,2
"org.argouml.uml.ui.UMLList.mouseReleased(MouseEvent)",1,2,2
"org.argouml.uml.ui.UMLList.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLList.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLList.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLList.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLList.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLList.showPopup(MouseEvent)",1,3,3
"org.argouml.uml.ui.UMLList.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLList.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLListCellRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)",4,4,6
"org.argouml.uml.ui.UMLListMenuItem.UMLListMenuItem(String,Object,String,int)",1,2,2
"org.argouml.uml.ui.UMLListMenuItem.actionPerformed(ActionEvent)",1,3,3
"org.argouml.uml.ui.UMLMetaclassComboBox.UMLMetaclassComboBox(UMLUserInterfaceContainer,String,String,String)",1,3,3
"org.argouml.uml.ui.UMLMetaclassComboBox.itemStateChanged(ItemEvent)",1,2,3
"org.argouml.uml.ui.UMLMetaclassComboBox.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMetaclassComboBox.propertySet(MElementEvent)",1,4,4
"org.argouml.uml.ui.UMLMetaclassComboBox.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMetaclassComboBox.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMetaclassComboBox.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMetaclassComboBox.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMetaclassComboBox.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLMetaclassComboBox.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLMetaclassComboBox.update()",3,4,5
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.UMLMetaclassInstanceTreeNode(UMLUserInterfaceContainer,TreeNode,String,Class,Class[])",1,1,1
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.children()",1,2,2
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.getAllowsChildren()",1,1,1
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.getChildAt(int)",2,4,4
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.getChildCount()",1,2,2
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.getIndex(TreeNode)",1,2,2
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.getParent()",1,1,1
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.isLeaf()",1,1,1
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.setCollection(Collection)",1,1,1
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.toString()",1,1,1
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode.update()",1,8,9
"org.argouml.uml.ui.UMLModelElementCachedListModel.UMLModelElementCachedListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLModelElementCachedListModel.addElement(Collection,int,MModelElement,Object)",3,3,3
"org.argouml.uml.ui.UMLModelElementCachedListModel.buildCache()",1,4,6
"org.argouml.uml.ui.UMLModelElementCachedListModel.createCollection(int)",1,1,1
"org.argouml.uml.ui.UMLModelElementCachedListModel.getModelElementAt(int)",1,2,2
"org.argouml.uml.ui.UMLModelElementCachedListModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLModelElementCachedListModel.propertySet(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLModelElementCachedListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLModelElementCachedListModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLModelElementCachedListModel.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLModelElementCachedListModel.roleAdded(MElementEvent)",1,5,6
"org.argouml.uml.ui.UMLModelElementCachedListModel.roleRemoved(MElementEvent)",1,5,5
"org.argouml.uml.ui.UMLModelElementCachedListModel.swap(Collection,int,Object,Object)",6,6,6
"org.argouml.uml.ui.UMLModelElementCachedListModel.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.UMLModelElementListModel(UMLUserInterfaceContainer,String,boolean)",1,1,2
"org.argouml.uml.ui.UMLModelElementListModel.addAtUtil(Collection,MModelElement,int)",1,3,3
"org.argouml.uml.ui.UMLModelElementListModel.buildPopup(JPopupMenu,int)",1,5,6
"org.argouml.uml.ui.UMLModelElementListModel.elementAtUtil(Collection,int,Class)",5,6,7
"org.argouml.uml.ui.UMLModelElementListModel.formatElement(MModelElement)",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.getContainer()",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.getElementAt(int)",1,4,6
"org.argouml.uml.ui.UMLModelElementListModel.getModelElementSize()",3,2,3
"org.argouml.uml.ui.UMLModelElementListModel.getProperty()",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.getSize()",1,1,3
"org.argouml.uml.ui.UMLModelElementListModel.getTarget()",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.getUpperBound()",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.moveDownUtil(Collection,int)",1,3,3
"org.argouml.uml.ui.UMLModelElementListModel.moveUpUtil(Collection,int)",1,3,3
"org.argouml.uml.ui.UMLModelElementListModel.navigateTo(MModelElement)",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.open(int)",1,3,4
"org.argouml.uml.ui.UMLModelElementListModel.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.resetSize()",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.roleAdded(MElementEvent)",1,8,9
"org.argouml.uml.ui.UMLModelElementListModel.roleRemoved(MElementEvent)",1,4,4
"org.argouml.uml.ui.UMLModelElementListModel.setUpperBound(int)",1,1,1
"org.argouml.uml.ui.UMLModelElementListModel.targetChanged()",1,5,7
"org.argouml.uml.ui.UMLModelElementListModel.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLModelElementNameComparator.UMLModelElementNameComparator()",1,1,1
"org.argouml.uml.ui.UMLModelElementNameComparator.compare(Object,Object)",1,2,2
"org.argouml.uml.ui.UMLModelElementNameComparator.equals(Object)",2,1,2
"org.argouml.uml.ui.UMLModelElementNameComparator.toString(Object)",1,3,5
"org.argouml.uml.ui.UMLModelElementTreeNode.UMLModelElementTreeNode(TreeNode,UMLUserInterfaceContainer,MModelElement)",1,1,1
"org.argouml.uml.ui.UMLModelElementTreeNode.children()",1,1,1
"org.argouml.uml.ui.UMLModelElementTreeNode.getAllowsChildren()",1,1,1
"org.argouml.uml.ui.UMLModelElementTreeNode.getChildAt(int)",1,1,1
"org.argouml.uml.ui.UMLModelElementTreeNode.getChildCount()",1,1,1
"org.argouml.uml.ui.UMLModelElementTreeNode.getIndex(TreeNode)",1,1,1
"org.argouml.uml.ui.UMLModelElementTreeNode.getModelElement()",1,1,1
"org.argouml.uml.ui.UMLModelElementTreeNode.getParent()",1,1,1
"org.argouml.uml.ui.UMLModelElementTreeNode.isLeaf()",1,1,1
"org.argouml.uml.ui.UMLModelElementTreeNode.toString()",1,1,1
"org.argouml.uml.ui.UMLMultiplicityComboBox.UMLMultiplicityComboBox(UMLUserInterfaceContainer,Class)",1,2,2
"org.argouml.uml.ui.UMLMultiplicityComboBox.itemStateChanged(ItemEvent)",1,3,4
"org.argouml.uml.ui.UMLMultiplicityComboBox.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMultiplicityComboBox.propertySet(MElementEvent)",1,3,3
"org.argouml.uml.ui.UMLMultiplicityComboBox.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMultiplicityComboBox.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMultiplicityComboBox.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMultiplicityComboBox.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLMultiplicityComboBox.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLMultiplicityComboBox.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLMultiplicityComboBox.update()",3,8,9
"org.argouml.uml.ui.UMLNameEventListener.UMLNameEventListener(Container,Class[])",1,1,1
"org.argouml.uml.ui.UMLNameEventListener.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLNameEventListener.propertySet(MElementEvent)",1,7,8
"org.argouml.uml.ui.UMLNameEventListener.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLNameEventListener.removed(MElementEvent)",1,4,5
"org.argouml.uml.ui.UMLNameEventListener.roleAdded(MElementEvent)",1,6,7
"org.argouml.uml.ui.UMLNameEventListener.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLNamespaceListModel.UMLNamespaceListModel(UMLUserInterfaceContainer)",1,1,1
"org.argouml.uml.ui.UMLNamespaceListModel.buildPopup(JPopupMenu,int)",1,1,1
"org.argouml.uml.ui.UMLNamespaceListModel.getModelElementAt(int)",1,2,2
"org.argouml.uml.ui.UMLNamespaceListModel.recalcModelElementSize()",1,1,2
"org.argouml.uml.ui.UMLNamespaceProperty.UMLNamespaceProperty()",1,1,1
"org.argouml.uml.ui.UMLNamespaceProperty.getProperty(UMLUserInterfaceContainer)",1,2,2
"org.argouml.uml.ui.UMLNamespaceProperty.setProperty(UMLUserInterfaceContainer,String)",1,1,1
"org.argouml.uml.ui.UMLNamespaceProperty.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLOperationsListModel.UMLOperationsListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLOperationsListModel.add(int)",1,2,2
"org.argouml.uml.ui.UMLOperationsListModel.delete(int)",1,3,4
"org.argouml.uml.ui.UMLOperationsListModel.getCache()",1,2,2
"org.argouml.uml.ui.UMLOperationsListModel.getRawCollection()",1,2,2
"org.argouml.uml.ui.UMLOperationsListModel.isProperClass(Object)",1,1,1
"org.argouml.uml.ui.UMLOperationsListModel.moveDown(int)",1,2,3
"org.argouml.uml.ui.UMLOperationsListModel.moveUp(int)",1,2,3
"org.argouml.uml.ui.UMLOperationsListModel.resetCache()",1,1,1
"org.argouml.uml.ui.UMLOwnedElementListModel.UMLOwnedElementListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLOwnedElementListModel.add(int)",1,3,3
"org.argouml.uml.ui.UMLOwnedElementListModel.addElement(MModelElement,int)",1,2,2
"org.argouml.uml.ui.UMLOwnedElementListModel.delete(int)",1,4,5
"org.argouml.uml.ui.UMLOwnedElementListModel.getCache()",1,2,2
"org.argouml.uml.ui.UMLOwnedElementListModel.getRawCollection()",1,2,2
"org.argouml.uml.ui.UMLOwnedElementListModel.isProperClass(Object)",1,1,1
"org.argouml.uml.ui.UMLOwnedElementListModel.moveDown(int)",1,2,2
"org.argouml.uml.ui.UMLOwnedElementListModel.moveUp(int)",1,2,2
"org.argouml.uml.ui.UMLOwnedElementListModel.resetCache()",1,1,1
"org.argouml.uml.ui.UMLOwnedElementRootNode.UMLOwnedElementRootNode(UMLUserInterfaceContainer,String,boolean)",1,4,4
"org.argouml.uml.ui.UMLOwnedElementRootNode.buildPopup(TreeModel,JPopupMenu,TreePath)",1,7,7
"org.argouml.uml.ui.UMLOwnedElementRootNode.checkEvent(MElementEvent)",1,3,4
"org.argouml.uml.ui.UMLOwnedElementRootNode.children()",1,1,1
"org.argouml.uml.ui.UMLOwnedElementRootNode.getChildAt(int)",1,1,1
"org.argouml.uml.ui.UMLOwnedElementRootNode.getChildCount()",1,1,1
"org.argouml.uml.ui.UMLOwnedElementRootNode.getIndex(TreeNode)",1,1,1
"org.argouml.uml.ui.UMLOwnedElementRootNode.listRoleItemSet(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLOwnedElementRootNode.propertySet(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLOwnedElementRootNode.recovered(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLOwnedElementRootNode.removed(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLOwnedElementRootNode.roleAdded(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLOwnedElementRootNode.roleRemoved(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLOwnedElementRootNode.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLOwnedElementRootNode.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLOwnedElementRootNode.update()",1,4,4
"org.argouml.uml.ui.UMLPackagesListModel.UMLPackagesListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLPackagesListModel.createModelElement()",1,1,1
"org.argouml.uml.ui.UMLPackagesListModel.isProperClass(Object)",1,1,1
"org.argouml.uml.ui.UMLRadioButton.UMLRadioButton(String,UMLUserInterfaceContainer,UMLBooleanProperty)",1,1,1
"org.argouml.uml.ui.UMLRadioButton.itemStateChanged(ItemEvent)",1,1,1
"org.argouml.uml.ui.UMLRadioButton.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLRadioButton.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLRadioButton.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLRadioButton.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLRadioButton.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLRadioButton.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLRadioButton.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLRadioButton.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLRadioButton.update()",1,2,3
"org.argouml.uml.ui.UMLReflectionBooleanProperty.UMLReflectionBooleanProperty(String,Class,String,String)",1,3,3
"org.argouml.uml.ui.UMLReflectionBooleanProperty.getProperty(Object)",1,4,6
"org.argouml.uml.ui.UMLReflectionBooleanProperty.setProperty(Object,boolean)",1,5,6
"org.argouml.uml.ui.UMLReflectionListModel.UMLReflectionListModel(UMLUserInterfaceContainer,String,boolean,String,String,String,String)",1,5,5
"org.argouml.uml.ui.UMLReflectionListModel.add(int)",1,4,4
"org.argouml.uml.ui.UMLReflectionListModel.buildPopup(JPopupMenu,int)",1,9,10
"org.argouml.uml.ui.UMLReflectionListModel.delete(int)",1,4,4
"org.argouml.uml.ui.UMLReflectionListModel.getModelElementAt(int)",6,6,10
"org.argouml.uml.ui.UMLReflectionListModel.moveDown(int)",1,4,5
"org.argouml.uml.ui.UMLReflectionListModel.moveUp(int)",1,4,5
"org.argouml.uml.ui.UMLReflectionListModel.recalcModelElementSize()",1,6,6
"org.argouml.uml.ui.UMLResourceBundle.getContents()",1,1,1
"org.argouml.uml.ui.UMLResourceBundle_de.getContents()",1,1,1
"org.argouml.uml.ui.UMLResourceBundle_en_GB.getContents()",1,1,1
"org.argouml.uml.ui.UMLResourceBundle_fr.getContents()",1,1,1
"org.argouml.uml.ui.UMLSpecializationListModel.UMLSpecializationListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLSpecializationListModel.buildPopup(JPopupMenu,int)",1,2,2
"org.argouml.uml.ui.UMLSpecializationListModel.formatElement(MModelElement)",1,3,3
"org.argouml.uml.ui.UMLSpecializationListModel.getModelElementAt(int)",1,2,2
"org.argouml.uml.ui.UMLSpecializationListModel.getSpecializations()",1,2,2
"org.argouml.uml.ui.UMLSpecializationListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLStereotypeComboBox.UMLStereotypeComboBox(UMLUserInterfaceContainer)",1,1,1
"org.argouml.uml.ui.UMLStereotypesListModel.UMLStereotypesListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLStereotypesListModel.createModelElement()",1,1,1
"org.argouml.uml.ui.UMLStereotypesListModel.isProperClass(Object)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.UMLStimulusActionTextField(UMLUserInterfaceContainer,UMLStimulusActionTextProperty)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.insertUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.propertySet(MElementEvent)",1,3,4
"org.argouml.uml.ui.UMLStimulusActionTextField.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextField.update()",1,5,5
"org.argouml.uml.ui.UMLStimulusActionTextProperty.UMLStimulusActionTextProperty(String)",1,1,1
"org.argouml.uml.ui.UMLStimulusActionTextProperty.getProperty(UMLUserInterfaceContainer)",1,3,3
"org.argouml.uml.ui.UMLStimulusActionTextProperty.isAffected(MElementEvent)",2,3,4
"org.argouml.uml.ui.UMLStimulusActionTextProperty.setProperty(UMLUserInterfaceContainer,String)",1,6,6
"org.argouml.uml.ui.UMLStimulusActionTextProperty.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLStimulusListModel.UMLStimulusListModel(UMLUserInterfaceContainer,String,boolean,String)",1,1,1
"org.argouml.uml.ui.UMLStimulusListModel.getModelElementAt(int)",1,2,2
"org.argouml.uml.ui.UMLStimulusListModel.getStimuli()",1,3,3
"org.argouml.uml.ui.UMLStimulusListModel.open(int)",1,2,2
"org.argouml.uml.ui.UMLStimulusListModel.recalcModelElementSize()",1,2,2
"org.argouml.uml.ui.UMLSupplierDependencyListModel.UMLSupplierDependencyListModel(UMLUserInterfaceContainer,String,boolean)",1,1,1
"org.argouml.uml.ui.UMLSupplierDependencyListModel.formatElement(MModelElement)",1,2,2
"org.argouml.uml.ui.UMLSupplierDependencyListModel.getModelElementAt(int)",1,1,1
"org.argouml.uml.ui.UMLSupplierDependencyListModel.recalcModelElementSize()",1,1,1
"org.argouml.uml.ui.UMLTaggedBooleanProperty.UMLTaggedBooleanProperty(String)",1,1,1
"org.argouml.uml.ui.UMLTaggedBooleanProperty.getProperty(Object)",5,5,6
"org.argouml.uml.ui.UMLTaggedBooleanProperty.setProperty(Object,boolean)",5,8,8
"org.argouml.uml.ui.UMLTaggedTextProperty.UMLTaggedTextProperty(String)",1,1,1
"org.argouml.uml.ui.UMLTaggedTextProperty.getProperty(UMLUserInterfaceContainer)",1,2,2
"org.argouml.uml.ui.UMLTaggedTextProperty.isAffected(MElementEvent)",2,3,4
"org.argouml.uml.ui.UMLTaggedTextProperty.setProperty(UMLUserInterfaceContainer,String)",1,2,2
"org.argouml.uml.ui.UMLTaggedTextProperty.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLTextArea.UMLTextArea(UMLUserInterfaceContainer,UMLTextProperty)",1,1,1
"org.argouml.uml.ui.UMLTextArea.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLTextArea.insertUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLTextArea.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextArea.propertySet(MElementEvent)",1,3,4
"org.argouml.uml.ui.UMLTextArea.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextArea.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLTextArea.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextArea.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextArea.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextArea.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLTextArea.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLTextArea.update()",1,5,5
"org.argouml.uml.ui.UMLTextField.UMLTextField(UMLUserInterfaceContainer,UMLTextProperty)",1,1,1
"org.argouml.uml.ui.UMLTextField.changedUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLTextField.insertUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLTextField.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextField.propertySet(MElementEvent)",1,3,4
"org.argouml.uml.ui.UMLTextField.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextField.removeUpdate(DocumentEvent)",1,1,1
"org.argouml.uml.ui.UMLTextField.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextField.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextField.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTextField.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLTextField.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLTextField.update()",1,9,9
"org.argouml.uml.ui.UMLTextProperty.UMLTextProperty(Class,String,String,String)",1,3,3
"org.argouml.uml.ui.UMLTextProperty.UMLTextProperty(String)",1,1,1
"org.argouml.uml.ui.UMLTextProperty.getProperty(UMLUserInterfaceContainer)",1,5,5
"org.argouml.uml.ui.UMLTextProperty.isAffected(MElementEvent)",2,3,4
"org.argouml.uml.ui.UMLTextProperty.setProperty(UMLUserInterfaceContainer,String)",1,8,8
"org.argouml.uml.ui.UMLTextProperty.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLTree.UMLTree(UMLUserInterfaceContainer,UMLTreeModel,boolean)",1,2,2
"org.argouml.uml.ui.UMLTree.listRoleItemSet(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.mouseClicked(MouseEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.mouseEntered(MouseEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.mouseExited(MouseEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.mousePressed(MouseEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.mouseReleased(MouseEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.propertySet(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.recovered(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.removed(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.roleAdded(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.roleRemoved(MElementEvent)",1,2,2
"org.argouml.uml.ui.UMLTree.setModel(TreeModel)",1,2,2
"org.argouml.uml.ui.UMLTree.showPopup(MouseEvent)",1,4,4
"org.argouml.uml.ui.UMLTree.targetChanged()",1,2,2
"org.argouml.uml.ui.UMLTree.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLTree.valueChanged(TreeSelectionEvent)",1,4,4
"org.argouml.uml.ui.UMLTreeCellRenderer.getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean)",1,13,19
"org.argouml.uml.ui.UMLTreeMenuItem.UMLTreeMenuItem(String,Object,String,boolean)",1,2,2
"org.argouml.uml.ui.UMLTreeMenuItem.actionPerformed(ActionEvent)",1,2,2
"org.argouml.uml.ui.UMLTreeMenuItem.setModelElement(MModelElement)",1,2,3
"org.argouml.uml.ui.UMLTreeModel.UMLTreeModel(UMLUserInterfaceContainer,UMLTreeRootNode)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.buildPopup(JPopupMenu,TreePath)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.fireTreeStructureChanged()",1,1,1
"org.argouml.uml.ui.UMLTreeModel.formatElement(MModelElement)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.getTarget()",1,1,1
"org.argouml.uml.ui.UMLTreeModel.listRoleItemSet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.navigateTo(MModelElement)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.propertySet(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.recovered(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.roleAdded(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.roleRemoved(MElementEvent)",1,1,1
"org.argouml.uml.ui.UMLTreeModel.targetChanged()",1,1,1
"org.argouml.uml.ui.UMLTreeModel.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLTreeRootNode.UMLTreeRootNode(UMLUserInterfaceContainer,String)",1,1,1
"org.argouml.uml.ui.UMLTreeRootNode.getAllowsChildren()",1,1,1
"org.argouml.uml.ui.UMLTreeRootNode.getContainer()",1,1,1
"org.argouml.uml.ui.UMLTreeRootNode.getModel()",1,1,1
"org.argouml.uml.ui.UMLTreeRootNode.getParent()",1,1,1
"org.argouml.uml.ui.UMLTreeRootNode.getProperty()",1,1,1
"org.argouml.uml.ui.UMLTreeRootNode.isLeaf()",1,1,1
"org.argouml.uml.ui.UMLTreeRootNode.setModel(UMLTreeModel)",1,1,1
"org.argouml.uml.ui.UMLTreeRootNode.targetReasserted()",1,1,1
"org.argouml.uml.ui.UMLVisibilityPanel.UMLVisibilityPanel(UMLUserInterfaceContainer,Class,int,boolean)",1,2,2
"org.argouml.uml.ui.behavior.activity_graphs.PropPanelActionState.PropPanelActionState()",1,1,1
"org.argouml.uml.ui.behavior.activity_graphs.PropPanelActionState.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationRole.PropPanelAssociationRole()",1,1,1
"org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationRole.addMessage(Integer)",2,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationRole.getAssociationEnds()",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationRole.getMessages()",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationRole.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationRole.setAssociationEnds(Collection)",1,2,3
"org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationRole.setMessages(Collection)",1,2,3
"org.argouml.uml.ui.behavior.collaborations.PropPanelClassifierRole.PropPanelClassifierRole()",1,1,1
"org.argouml.uml.ui.behavior.collaborations.PropPanelClassifierRole.getClassifier()",1,3,3
"org.argouml.uml.ui.behavior.collaborations.PropPanelClassifierRole.isAcceptibleBase(MModelElement)",1,1,1
"org.argouml.uml.ui.behavior.collaborations.PropPanelClassifierRole.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.collaborations.PropPanelClassifierRole.setClassifier(MClassifier)",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage.PropPanelMessage()",1,1,1
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage.addAction(Integer)",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage.deleteAction(Integer)",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage.getAction()",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage.getActivator()",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage.getPredecessor()",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage.getReceiver()",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage.getSender()",1,2,2
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelCallAction.PropPanelCallAction()",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelCallAction.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelComponentInstance.PropPanelComponentInstance()",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelComponentInstance.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelInstance.PropPanelInstance()",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelInstance.getClassifier()",1,5,5
"org.argouml.uml.ui.behavior.common_behavior.PropPanelInstance.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelInstance.isAcceptibleClassifier(MModelElement)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelInstance.setClassifier(MClassifier)",1,5,5
"org.argouml.uml.ui.behavior.common_behavior.PropPanelLink.PropPanelLink()",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelLink.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelLink.navigateNamespace()",1,3,3
"org.argouml.uml.ui.behavior.common_behavior.PropPanelLink.removeElement()",1,2,2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelNodeInstance.PropPanelNodeInstance()",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelNodeInstance.isAcceptibleBaseMetaClass(String)",1,2,2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelObject.PropPanelObject()",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelObject.getClassifier()",1,5,5
"org.argouml.uml.ui.behavior.common_behavior.PropPanelObject.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelObject.isAcceptibleClassifier(MModelElement)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelObject.navigateNamespace()",1,3,3
"org.argouml.uml.ui.behavior.common_behavior.PropPanelObject.removeElement()",1,2,2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelObject.setClassifier(MClassifier)",1,5,5
"org.argouml.uml.ui.behavior.common_behavior.PropPanelSignal.PropPanelSignal()",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelSignal.isAcceptibleBaseMetaClass(String)",1,4,4
"org.argouml.uml.ui.behavior.common_behavior.PropPanelSignal.newSignal()",1,3,3
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.PropPanelStimulus()",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.getAssociation()",1,3,3
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.getReceiver()",1,2,2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.getSender()",1,2,2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.isAcceptibleAssociation(MModelElement)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.isAcceptibleReceiver(MModelElement)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.isAcceptibleSender(MModelElement)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.navigateNamespace()",1,3,3
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.removeElement()",1,2,2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.removed(MElementEvent)",1,1,1
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.setAssociation(MAssociation)",1,5,5
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.setReceiver(MInstance)",1,2,2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus.setSender(MInstance)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelCallEvent.PropPanelCallEvent()",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelCallEvent.getOperation()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelCallEvent.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelCallEvent.setOperation(MOperation)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelCompositeState.PropPanelCompositeState()",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelCompositeState.getSubvertices()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelCompositeState.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelEvent.PropPanelEvent(String,ImageIcon,int)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelEvent.PropPanelEvent(String,int)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelEvent.addParameter(Integer)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelEvent.buttonAddParameter()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelEvent.getParameters()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelEvent.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelEvent.setParameters(Collection)",1,3,3
"org.argouml.uml.ui.behavior.state_machines.PropPanelFinalState.PropPanelFinalState()",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelFinalState.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelGuard.PropPanelGuard()",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelGuard.getTransition()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelGuard.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelPseudostate.PropPanelPseudostate()",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelPseudostate.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelSimpleState.PropPanelSimpleState()",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelSimpleState.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.PropPanelState(String,ImageIcon,int)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.PropPanelState(String,int)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.addDoActivity(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.addEntryAction(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.addExitAction(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.addInternalTransition(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.deleteDoActivity(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.deleteEntryAction(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.deleteExitAction(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.getDoActivity()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.getEntryAction()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.getExitAction()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.getInternalTransitions()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelStateVertex.PropPanelStateVertex(String,ImageIcon,int)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelStateVertex.PropPanelStateVertex(String,int)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelStateVertex.getIncomings()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelStateVertex.getOutgoings()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelStateVertex.getStateMachine()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelStateVertex.navigateUp()",1,3,3
"org.argouml.uml.ui.behavior.state_machines.PropPanelStateVertex.removeElement()",1,3,3
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.PropPanelTransition()",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.addEffect(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.addGuard(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.addTrigger(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.deleteEffect(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.deleteGuard(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.deleteTrigger(Integer)",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.getEffect()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.getGuard()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.getStateMachine()",1,3,3
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.getTransitionSource()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.getTransitionTarget()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.getTrigger()",1,2,2
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition.navigateUp()",1,3,3
"org.argouml.uml.ui.behavior.use_cases.PropPanelActor.PropPanelActor()",1,1,1
"org.argouml.uml.ui.behavior.use_cases.PropPanelActor.isAcceptibleBaseMetaClass(String)",1,2,2
"org.argouml.uml.ui.behavior.use_cases.PropPanelActor.newActor()",1,3,3
"org.argouml.uml.ui.behavior.use_cases.PropPanelUseCase.PropPanelUseCase()",1,1,1
"org.argouml.uml.ui.behavior.use_cases.PropPanelUseCase.isAcceptibleBaseMetaClass(String)",1,4,4
"org.argouml.uml.ui.behavior.use_cases.PropPanelUseCase.newUseCase()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelAbstraction.PropPanelAbstraction()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelAbstraction.getClients()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAbstraction.getSuppliers()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAbstraction.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelAbstraction.setClients(Collection)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAbstraction.setSuppliers(Collection)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAssociation.PropPanelAssociation()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelAssociation.addAssociationEnd()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAssociation.addGeneralization()",1,4,4
"org.argouml.uml.ui.foundation.core.PropPanelAssociation.isAcceptibleBaseMetaClass(String)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAssociation.newAssociation()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.PropPanelAssociationEnd()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.getAssociation()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.getDisplayNamespace(Object)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.getType()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.gotoOther()",5,6,6
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.isAcceptibleType(MModelElement)",1,1,2
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.navigateUp()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.newClass()",1,4,4
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.newInterface()",1,6,6
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd.setType(MClassifier)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAttribute.PropPanelAttribute()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelAttribute.getDisplayNamespace()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelAttribute.getOwner()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAttribute.getType()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelAttribute.isAcceptibleBaseMetaClass(String)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelAttribute.isAcceptibleType(MModelElement)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelAttribute.navigateUp()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelAttribute.newAttribute()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelAttribute.setType(MClassifier)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelClass.PropPanelClass()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelClass.addInnerClass()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelClass.isAcceptibleBaseMetaClass(String)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelClass.newClass()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelClassifier.PropPanelClassifier(String,ImageIcon,int)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelClassifier.PropPanelClassifier(String,int)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelClassifier.addAssociation()",1,4,4
"org.argouml.uml.ui.foundation.core.PropPanelClassifier.addAttribute()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelClassifier.addGeneralization()",1,4,4
"org.argouml.uml.ui.foundation.core.PropPanelClassifier.addOperation()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelClassifier.isAcceptibleBaseMetaClass(String)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelClassifier.removeElement()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelComponent.PropPanelComponent()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelComponent.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelDataType.PropPanelDataType()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelDataType.addAttribute()",8,9,10
"org.argouml.uml.ui.foundation.core.PropPanelDataType.isAcceptibleBaseMetaClass(String)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelDataType.newDataType()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelDependency.PropPanelDependency()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelDependency.getClients()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelDependency.getSuppliers()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelDependency.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelDependency.setClients(Collection)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelDependency.setSuppliers(Collection)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.PropPanelGeneralization()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.getChild()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.getParentElement()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.getPowertype()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.isAcceptible(MGeneralizableElement,MModelElement)",3,3,3
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.isAcceptibleChild(MModelElement)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.isAcceptibleParent(MModelElement)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.isAcceptiblePowertype(MModelElement)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.navigateUp()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.newModelElement()",1,6,7
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.setChild(MGeneralizableElement)",1,3,4
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.setParentElement(MGeneralizableElement)",1,3,4
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.setPowertype(MClassifier)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization.updateButton()",1,6,7
"org.argouml.uml.ui.foundation.core.PropPanelInterface.PropPanelInterface()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelInterface.isAcceptibleBaseMetaClass(String)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelInterface.newInterface()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.PropPanelModelElement(String,ImageIcon,int)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.PropPanelModelElement(String,int)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.addDataType()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.addRealization()",1,2,3
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.getModulePopUpActions(Vector,Object)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.getPropertyPanel()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.inContext(Object[])",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.initializeModule()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.isModuleEnabled()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.navigateNamespace()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.navigateUp()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.setModuleEnabled(boolean)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElement.shutdownModule()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElementImpl.PropPanelModelElementImpl()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelModelElementImpl.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelNamespace.PropPanelNamespace(String,ImageIcon,int)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelNamespace.PropPanelNamespace(String,int)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelNamespace.addClass()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelNamespace.addInterface()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelNamespace.addPackage()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelNamespace.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelNode.PropPanelNode()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelNode.getResidents()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelNode.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelNode.setResidents(Collection)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelOperation.PropPanelOperation()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelOperation.addParameter(Integer)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelOperation.addRaisedSignal(Integer)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelOperation.buttonAddOperation()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelOperation.buttonAddParameter()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelOperation.buttonAddRaisedSignal()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelOperation.getDisplayNamespace()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelOperation.getOwner()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelOperation.getParameters()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelOperation.getRaisedSignals()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelOperation.getReturnType()",5,5,5
"org.argouml.uml.ui.foundation.core.PropPanelOperation.isAcceptibleBaseMetaClass(String)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelOperation.navigateUp()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelOperation.setParameters(Collection)",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelOperation.setRaisedSignals(Collection)",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelOperation.setReturnType(MClassifier)",9,9,10
"org.argouml.uml.ui.foundation.core.PropPanelParameter.PropPanelParameter()",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelParameter.addDataType(MModelElement)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelParameter.addParameter()",1,3,3
"org.argouml.uml.ui.foundation.core.PropPanelParameter.getBehavioralFeature()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelParameter.getType()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelParameter.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelParameter.isAcceptibleType(MModelElement)",1,1,1
"org.argouml.uml.ui.foundation.core.PropPanelParameter.navigateUp()",1,2,2
"org.argouml.uml.ui.foundation.core.PropPanelParameter.setType(MClassifier)",1,2,2
"org.argouml.uml.ui.foundation.extension_mechanisms.PropPanelStereotype.PropPanelStereotype()",1,1,1
"org.argouml.uml.ui.foundation.extension_mechanisms.PropPanelStereotype.getBaseClass()",1,2,2
"org.argouml.uml.ui.foundation.extension_mechanisms.PropPanelStereotype.isAcceptibleBaseMetaClass(String)",1,1,1
"org.argouml.uml.ui.foundation.extension_mechanisms.PropPanelStereotype.newStereotype()",1,3,3
"org.argouml.uml.ui.foundation.extension_mechanisms.PropPanelStereotype.setBaseClass(String)",1,2,2
"org.argouml.uml.ui.model_management.PropPanelModel.PropPanelModel()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelModel.getClassForPanel()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelModel.getModuleAuthor()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelModel.getModuleDescription()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelModel.getModuleKey()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelModel.getModuleName()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelModel.getModuleVersion()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelModel.isAcceptibleBaseMetaClass(String)",1,4,4
"org.argouml.uml.ui.model_management.PropPanelPackage.PropPanelPackage()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.PropPanelPackage(String,ImageIcon,int)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addActor()",1,2,2
"org.argouml.uml.ui.model_management.PropPanelPackage.addActor(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addAssociation()",1,2,2
"org.argouml.uml.ui.model_management.PropPanelPackage.addAssociation(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addClass(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addDataType(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addGeneralization()",1,2,2
"org.argouml.uml.ui.model_management.PropPanelPackage.addGeneralization(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addInterface(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addPackage(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addRealization(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addStereotype()",1,2,2
"org.argouml.uml.ui.model_management.PropPanelPackage.addStereotype(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.addUseCase()",1,2,2
"org.argouml.uml.ui.model_management.PropPanelPackage.addUseCase(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.deleteElement(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.formatElement(MModelElement)",1,1,2
"org.argouml.uml.ui.model_management.PropPanelPackage.getClassForPanel()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.getModuleAuthor()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.getModuleDescription()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.getModuleKey()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.getModuleName()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.getModuleVersion()",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.isAcceptibleBaseMetaClass(String)",1,2,2
"org.argouml.uml.ui.model_management.PropPanelPackage.navigateElement(MModelElement)",1,1,1
"org.argouml.uml.ui.model_management.PropPanelPackage.openElement(MModelElement)",1,1,1
"org.argouml.util.ChangeRegistry.ChangeRegistry()",1,1,1
"org.argouml.util.ChangeRegistry.edgeAdded(GraphEvent)",1,1,1
"org.argouml.util.ChangeRegistry.edgeRemoved(GraphEvent)",1,1,1
"org.argouml.util.ChangeRegistry.graphChanged(GraphEvent)",1,1,1
"org.argouml.util.ChangeRegistry.hasChanged()",1,1,1
"org.argouml.util.ChangeRegistry.nodeAdded(GraphEvent)",1,1,1
"org.argouml.util.ChangeRegistry.nodeRemoved(GraphEvent)",1,1,1
"org.argouml.util.ChangeRegistry.setChangeFlag(boolean)",1,1,1
"org.argouml.util.CheckResourceBundle.CheckResourceBundle()",1,7,8
"org.argouml.util.CheckResourceBundle.getKeys()",1,2,2
"org.argouml.util.CheckResourceBundle.handleGetObject(String)",1,7,8
"org.argouml.util.ConfigLoader.loadTabs(Vector,String,StatusBar)",1,12,12
"org.argouml.util.ConfigLoader.parseConfigLine(String,String,int,String,StatusBar)",5,7,10
"org.argouml.util.ConfigLoader.stripBeforeColon(String)",1,1,1
"org.argouml.util.SubInputStream.SubInputStream(ZipInputStream)",1,1,1
"org.argouml.util.SubInputStream.close()",1,1,1
"org.argouml.util.SubInputStream.getNextEntry()",1,1,1
"org.argouml.util.SuffixFilter.SuffixFilter(String,String)",1,1,1
"org.argouml.util.SuffixFilter.accept(File)",4,1,4
"org.argouml.util.SuffixFilter.getDescription()",1,1,1
"org.argouml.util.SuffixFilter.getExtension(File)",2,1,2
"org.argouml.util.SuffixFilter.getExtension(String)",2,3,3
"org.argouml.util.Tools.getComponentVersionInfo(StringBuffer,String)",1,5,5
"org.argouml.util.Tools.getVersionInfo()",1,7,7
"org.argouml.util.Tools.logVersionInfo()",3,2,4
"org.argouml.util.Trash.Trash()",1,1,1
"org.argouml.util.Trash.addItemFrom(Object,Vector)",2,3,3
"org.argouml.util.Trash.contains(Object)",3,2,3
"org.argouml.util.Trash.emptyTrash()",1,2,2
"org.argouml.util.Trash.getSize()",1,1,1
"org.argouml.util.Trash.recoverItem(Object)",1,1,2
"org.argouml.util.Trash.removeItem(Object)",2,2,2
"org.argouml.util.TrashItem.TrashItem(Object,Vector)",1,1,2
"org.argouml.util.TrashItem.equals(Object)",2,1,2
"org.argouml.util.TrashItem.hashCode()",1,1,1
"org.argouml.util.logging.ThrowableRenderer.ThrowableRenderer()",1,1,1
"org.argouml.util.logging.ThrowableRenderer.doRender(Object)",3,3,3
"org.argouml.util.logging.ThrowableRenderer.endThrowable(StringBuffer,Throwable)",1,1,1
"org.argouml.util.logging.ThrowableRenderer.startThrowable(StringBuffer,String,Throwable)",1,1,1
"org.argouml.xml.DTDEntityResolver.DTDEntityResolver()",1,1,1
"org.argouml.xml.DTDEntityResolver.resolveEntity(String,String)",3,5,8
"org.argouml.xml.NodeRealizerAdapter.NodeRealizerAdapter()",1,1,1
"org.argouml.xml.NodeRealizerAdapter.getAttribute(Node,String)",1,1,1
"org.argouml.xml.NodeRealizerAdapter.getText(Node)",3,1,3
"org.argouml.xml.NodeRealizerAdapter.postRealize(Node)",1,1,1
"org.argouml.xml.NodeRealizerAdapter.preRealize(Node)",1,1,1
"org.argouml.xml.SAXParserBase.SAXParserBase()",1,1,1
"org.argouml.xml.SAXParserBase.characters(char[],int,int)",1,3,3
"org.argouml.xml.SAXParserBase.endElement(String)",1,3,3
"org.argouml.xml.SAXParserBase.getParseTime()",1,1,1
"org.argouml.xml.SAXParserBase.getStats()",1,1,1
"org.argouml.xml.SAXParserBase.ignoreElement(XMLElement)",1,1,1
"org.argouml.xml.SAXParserBase.notImplemented(XMLElement)",1,1,1
"org.argouml.xml.SAXParserBase.parse(InputStream)",1,5,5
"org.argouml.xml.SAXParserBase.parse(URL)",1,1,1
"org.argouml.xml.SAXParserBase.resolveEntity(String,String)",1,4,6
"org.argouml.xml.SAXParserBase.setDebug(boolean)",1,1,1
"org.argouml.xml.SAXParserBase.setStats(boolean)",1,1,1
"org.argouml.xml.SAXParserBase.startElement(String,AttributeList)",1,4,4
"org.argouml.xml.XMLElement.XMLElement(String,AttributeList)",1,1,1
"org.argouml.xml.XMLElement.addText(String)",1,1,1
"org.argouml.xml.XMLElement.getAttribute(String)",1,1,1
"org.argouml.xml.XMLElement.getAttributeName(int)",1,1,1
"org.argouml.xml.XMLElement.getAttributeValue(int)",1,1,1
"org.argouml.xml.XMLElement.getName()",1,1,1
"org.argouml.xml.XMLElement.getNumAttributes()",1,1,1
"org.argouml.xml.XMLElement.getText()",1,1,1
"org.argouml.xml.XMLElement.resetText()",1,1,1
"org.argouml.xml.XMLElement.setAttributes(AttributeList)",1,1,1
"org.argouml.xml.XMLElement.setName(String)",1,1,1
"org.argouml.xml.XMLElement.setText(String)",1,1,1
"org.argouml.xml.XMLRealizer.XMLRealizer(Node)",1,1,1
"org.argouml.xml.XMLRealizer.clearCache()",1,1,1
"org.argouml.xml.XMLRealizer.disableCache()",1,1,1
"org.argouml.xml.XMLRealizer.enableCache()",1,1,2
"org.argouml.xml.XMLRealizer.isCacheEnabled()",1,1,1
"org.argouml.xml.XMLRealizer.realize(RealizerFactory)",1,1,1
"org.argouml.xml.XMLRealizer.recurse(Node)",2,7,9
"org.argouml.xml.XMLTokenTableBase.XMLTokenTableBase(int)",1,1,1
"org.argouml.xml.XMLTokenTableBase.addToken(String,Integer)",1,5,6
"org.argouml.xml.XMLTokenTableBase.getDbg()",1,1,1
"org.argouml.xml.XMLTokenTableBase.setDbg(boolean)",1,1,1
"org.argouml.xml.XMLTokenTableBase.toToken(String,boolean)",4,3,4
"org.argouml.xml.argo.ArgoParser.ArgoParser()",1,1,1
"org.argouml.xml.argo.ArgoParser.getProject()",1,1,1
"org.argouml.xml.argo.ArgoParser.handleArgo(XMLElement)",1,1,1
"org.argouml.xml.argo.ArgoParser.handleAuthorname(XMLElement)",1,1,1
"org.argouml.xml.argo.ArgoParser.handleDescription(XMLElement)",1,1,1
"org.argouml.xml.argo.ArgoParser.handleDocumentation(XMLElement)",1,1,1
"org.argouml.xml.argo.ArgoParser.handleEndElement(XMLElement)",2,5,11
"org.argouml.xml.argo.ArgoParser.handleHistoryfile(XMLElement)",2,1,2
"org.argouml.xml.argo.ArgoParser.handleMember(XMLElement)",1,2,2
"org.argouml.xml.argo.ArgoParser.handleSearchpath(XMLElement)",1,1,1
"org.argouml.xml.argo.ArgoParser.handleStartElement(XMLElement)",2,5,7
"org.argouml.xml.argo.ArgoParser.handleVersion(XMLElement)",1,1,1
"org.argouml.xml.argo.ArgoParser.readProject(InputStream,boolean)",2,5,6
"org.argouml.xml.argo.ArgoParser.readProject(URL)",1,1,1
"org.argouml.xml.argo.ArgoParser.readProject(URL,boolean)",1,2,2
"org.argouml.xml.argo.ArgoParser.setURL(URL)",1,1,1
"org.argouml.xml.argo.ArgoTokenTable.ArgoTokenTable()",1,1,1
"org.argouml.xml.argo.ArgoTokenTable.setupTokens()",1,1,1
"org.argouml.xml.pgml.PGMLParser.PGMLParser()",1,1,1
"org.argouml.xml.pgml.PGMLParser.getEntityPaths()",1,1,1
"org.argouml.xml.pgml.PGMLParser.translateClassName(String)",3,2,3
"org.argouml.xml.xmi.XMIParser.XMIParser()",1,1,1
"org.argouml.xml.xmi.XMIParser.getCurModel()",1,1,1
"org.argouml.xml.xmi.XMIParser.getUUIDRefs()",1,1,1
"org.argouml.xml.xmi.XMIParser.readModels(Project,URL)",1,8,8
"org.argouml.xml.xmi.XMIParser.setProject(Project)",1,1,1

Class,OCavg,WMC
"org.argouml.application.Main","12,00",24
"org.argouml.application.PostLoad","1,33",4
"org.argouml.application.PreloadClasses","1,00",1
"org.argouml.application.StartCritics","2,00",2
"org.argouml.application.api.Argo","1,09",12
"org.argouml.application.api.Configuration","1,00",30
"org.argouml.application.api.Notation","1,44",82
"org.argouml.application.configuration.ConfigurationFactory","1,67",5
"org.argouml.application.configuration.ConfigurationHandler","1,90",55
"org.argouml.application.configuration.ConfigurationKeyImpl","1,11",10
"org.argouml.application.configuration.ConfigurationProperties","1,38",11
"org.argouml.application.events.ArgoEvent","1,20",6
"org.argouml.application.events.ArgoEventPump","2,85",37
"org.argouml.application.events.ArgoEventPump.Pair","1,00",4
"org.argouml.application.events.ArgoModuleEvent","1,00",2
"org.argouml.application.events.ArgoNotationEvent","1,00",2
"org.argouml.application.helpers.DiagramHelper","1,00",9
"org.argouml.application.helpers.ModuleHelper","1,00",4
"org.argouml.application.helpers.ResourceBundleHelper","1,00",6
"org.argouml.application.helpers.SettingsTabHelper","1,00",14
"org.argouml.application.modules.ModuleLoader","3,36",94
"org.argouml.application.modules.ModuleLoader.JarFileFilter","1,00",1
"org.argouml.application.notation.NotationNameImpl","1,32",29
"org.argouml.application.notation.NotationProviderFactory","1,67",20
"org.argouml.application.security.ArgoAwtExceptionHandler","1,50",3
"org.argouml.application.security.ArgoClassLoader","2,00",4
"org.argouml.application.security.ArgoJarClassLoader","1,67",5
"org.argouml.application.security.ArgoSecurityException","1,00",3
"org.argouml.application.security.ArgoSecurityManager","2,20",11
"org.argouml.cognitive.Decision","1,14",8
"org.argouml.cognitive.DecisionModel","1,50",15
"org.argouml.cognitive.Design","1,60",16
"org.argouml.cognitive.DesignMaterial","1,51",65
"org.argouml.cognitive.Designer","1,19",76
"org.argouml.cognitive.Goal","1,14",8
"org.argouml.cognitive.GoalModel","1,25",10
"org.argouml.cognitive.ToDoItem","1,33",40
"org.argouml.cognitive.ToDoList","1,73",69
"org.argouml.cognitive.ToDoListEvent","1,00",3
"org.argouml.cognitive.checklist.CheckItem","1,07",15
"org.argouml.cognitive.checklist.CheckManager","2,00",8
"org.argouml.cognitive.checklist.Checklist","1,17",14
"org.argouml.cognitive.checklist.ChecklistStatus","1,22",11
"org.argouml.cognitive.checklist.ui.TabChecklist","1,25",10
"org.argouml.cognitive.checklist.ui.TableModelChecklist","2,00",34
"org.argouml.cognitive.critics.Agency","2,00",32
"org.argouml.cognitive.critics.AndCM","3,00",3
"org.argouml.cognitive.critics.CompositeCM","1,00",1
"org.argouml.cognitive.critics.CompoundCritic","1,43",33
"org.argouml.cognitive.critics.ControlMech","1,00",2
"org.argouml.cognitive.critics.CrNodesOverlap","4,00",20
"org.argouml.cognitive.critics.CrZeroLengthEdge","2,00",4
"org.argouml.cognitive.critics.Critic","1,18",80
"org.argouml.cognitive.critics.CurDecisionCM","1,00",1
"org.argouml.cognitive.critics.DesignGoalsCM","1,00",1
"org.argouml.cognitive.critics.EnabledCM","1,00",1
"org.argouml.cognitive.critics.HistoryItemCritique","1,50",3
"org.argouml.cognitive.critics.NotSnoozedCM","1,00",1
"org.argouml.cognitive.critics.OrCM","3,00",3
"org.argouml.cognitive.critics.SnoozeOrder","1,33",8
"org.argouml.cognitive.critics.StandardCM","1,00",1
"org.argouml.cognitive.critics.ui.CriticBrowserDialog","2,69",35
"org.argouml.cognitive.critics.ui.TableModelCritics","2,27",25
"org.argouml.cognitive.ui.AddToDoItemDialog","3,50",7
"org.argouml.cognitive.ui.DesignIssuesDialog","1,75",7
"org.argouml.cognitive.ui.DismissToDoItemDialog","2,00",8
"org.argouml.cognitive.ui.GoListToDecisionsToItems","2,17",26
"org.argouml.cognitive.ui.GoListToGoalsToItems","2,17",26
"org.argouml.cognitive.ui.GoListToOffenderToItem","1,75",21
"org.argouml.cognitive.ui.GoListToPosterToItem","1,75",21
"org.argouml.cognitive.ui.GoListToPriorityToItem","2,45",27
"org.argouml.cognitive.ui.GoListToTypeToItem","2,27",25
"org.argouml.cognitive.ui.GoalsDialog","1,75",7
"org.argouml.cognitive.ui.KnowledgeTypeNode","1,25",5
"org.argouml.cognitive.ui.PriorityNode","1,20",6
"org.argouml.cognitive.ui.TabToDo","1,71",12
"org.argouml.cognitive.ui.ToDoByDecision","4,20",21
"org.argouml.cognitive.ui.ToDoByGoal","4,20",21
"org.argouml.cognitive.ui.ToDoByOffender","3,60",18
"org.argouml.cognitive.ui.ToDoByPoster","3,60",18
"org.argouml.cognitive.ui.ToDoByPriority","4,20",21
"org.argouml.cognitive.ui.ToDoByType","4,20",21
"org.argouml.cognitive.ui.ToDoPane","1,90",57
"org.argouml.cognitive.ui.ToDoPerspective","2,00",24
"org.argouml.cognitive.ui.ToDoTreeRenderer","15,00",15
"org.argouml.cognitive.ui.WizDescription","5,00",10
"org.argouml.cognitive.ui.WizStep","2,00",30
"org.argouml.cognitive.ui.WizStepChoice","2,67",8
"org.argouml.cognitive.ui.WizStepConfirm","1,00",2
"org.argouml.cognitive.ui.WizStepCue","1,00",1
"org.argouml.cognitive.ui.WizStepManyTextFields","2,00",4
"org.argouml.cognitive.ui.WizStepTextField","1,00",3
"org.argouml.kernel.ArgoFileFilter","2,67",8
"org.argouml.kernel.ChildGenDMElements","2,00",2
"org.argouml.kernel.DelayedChangeNotify","1,00",2
"org.argouml.kernel.History","1,25",15
"org.argouml.kernel.HistoryEvent","1,00",2
"org.argouml.kernel.HistoryItem","1,12",9
"org.argouml.kernel.HistoryItemManipulation","1,33",4
"org.argouml.kernel.HistoryItemResolve","1,33",4
"org.argouml.kernel.PredInstanceOf","1,00",2
"org.argouml.kernel.Project","2,14",150
"org.argouml.kernel.ProjectMember","1,50",9
"org.argouml.kernel.ResetStatsLater","1,00",1
"org.argouml.kernel.Wizard","1,42",27
"org.argouml.language.NotationResourceBundle","1,00",6
"org.argouml.language.helpers.NotationHelper","3,55",39
"org.argouml.language.java.JavaConstants",n/a,0
"org.argouml.language.java.Token","1,17",7
"org.argouml.language.java.Token.AttributeKey","1,00",2
"org.argouml.language.java.Token.Declaration","1,00",1
"org.argouml.language.java.Token.MExpression","1,00",1
"org.argouml.language.java.Token.Modifier","1,00",1
"org.argouml.language.java.Token.Operator","1,00",1
"org.argouml.language.java.Token.Punctuation","1,00",1
"org.argouml.language.java.Token.Special","1,00",1
"org.argouml.language.java.Token.Statement","1,00",1
"org.argouml.language.java.Token.Type","1,00",1
"org.argouml.language.java.Token.Value","1,00",1
"org.argouml.language.java.cognitive.critics.CrMultipleInheritance","1,60",8
"org.argouml.language.java.generator.AnonymousClassCodePiece","1,14",8
"org.argouml.language.java.generator.AttributeCodePiece","2,86",20
"org.argouml.language.java.generator.ClassCodePiece","2,57",18
"org.argouml.language.java.generator.ClassifierEndCodePiece","1,86",13
"org.argouml.language.java.generator.CodeGenerator","3,42",41
"org.argouml.language.java.generator.CodePiece",n/a,0
"org.argouml.language.java.generator.CodePieceCollector","3,67",11
"org.argouml.language.java.generator.CompositeCodePiece","1,71",12
"org.argouml.language.java.generator.GeneratorJava","3,83",184
"org.argouml.language.java.generator.InterfaceCodePiece","2,14",15
"org.argouml.language.java.generator.JavaLexer","4,86",306
"org.argouml.language.java.generator.JavaRecognizer","11,92",846
"org.argouml.language.java.generator.JavaUML",n/a,0
"org.argouml.language.java.generator.NamedCodePiece",n/a,0
"org.argouml.language.java.generator.OperationCodePiece","3,86",27
"org.argouml.language.java.generator.PackageCodePiece","1,14",8
"org.argouml.language.java.generator.ParseState","1,12",9
"org.argouml.language.java.generator.SimpleCodePiece","1,00",7
"org.argouml.language.java.ui.JavaContext","2,80",14
"org.argouml.language.java.ui.JavaContext.JavaView","2,25",9
"org.argouml.language.java.ui.JavaDocument","2,40",12
"org.argouml.language.java.ui.JavaDocument.AttributeKey","1,00",2
"org.argouml.language.java.ui.JavaDocument.DocumentInputStream","1,67",5
"org.argouml.language.java.ui.JavaDocument.LocalEnvironment","1,00",1
"org.argouml.language.java.ui.JavaDocument.Scanner","1,00",4
"org.argouml.language.java.ui.JavaEditorKit","1,14",8
"org.argouml.language.java.ui.TabJavaSrc","2,60",26
"org.argouml.language.ui.ActionNotation","1,86",13
"org.argouml.language.ui.NotationComboBox","1,38",11
"org.argouml.language.ui.SettingsTabNotation","1,00",11
"org.argouml.ocl.ArgoAny","4,33",52
"org.argouml.ocl.ArgoFacade","3,00",6
"org.argouml.ocl.OCLEvaluator","5,67",17
"org.argouml.ocl.OCLExpander","1,00",2
"org.argouml.ocl.OCLUtil","3,33",10
"org.argouml.pattern.cognitive.critics.CrConsiderSingleton","5,33",16
"org.argouml.pattern.cognitive.critics.CrSingletonViolated","1,67",5
"org.argouml.pattern.cognitive.critics.PatternStereotypes",n/a,0
"org.argouml.persistence.DBLoader","3,61",83
"org.argouml.persistence.DBWriter","3,41",99
"org.argouml.ui.AboutBox","1,00",1
"org.argouml.ui.ActionAboutArgoUML","1,00",3
"org.argouml.ui.ActionAutoCritique","1,00",2
"org.argouml.ui.ActionCreateMultiple","1,00",2
"org.argouml.ui.ActionEmailExpert","1,00",2
"org.argouml.ui.ActionFind","1,00",2
"org.argouml.ui.ActionFlatToDo","1,00",2
"org.argouml.ui.ActionGoToCritique","1,00",3
"org.argouml.ui.ActionGoToDetails","1,33",4
"org.argouml.ui.ActionGoToEdit","1,33",4
"org.argouml.ui.ActionGotoDiagram","1,00",2
"org.argouml.ui.ActionMoreInfo","1,00",1
"org.argouml.ui.ActionNavBack","1,67",5
"org.argouml.ui.ActionNavConfig","1,00",2
"org.argouml.ui.ActionNavForw","1,33",4
"org.argouml.ui.ActionNewToDoItem","1,00",2
"org.argouml.ui.ActionNextDetailsTab","1,00",2
"org.argouml.ui.ActionNextEditTab","1,00",2
"org.argouml.ui.ActionOpenCritics","1,00",2
"org.argouml.ui.ActionOpenDecisions","1,00",2
"org.argouml.ui.ActionOpenGoals","1,00",2
"org.argouml.ui.ActionPrint","1,50",3
"org.argouml.ui.ActionRedo","1,00",2
"org.argouml.ui.ActionResolve","1,00",2
"org.argouml.ui.ActionSaveConfiguration","1,50",3
"org.argouml.ui.ActionSettings","2,75",22
"org.argouml.ui.ActionShowRapidButtons","1,00",2
"org.argouml.ui.ActionSnooze","1,50",3
"org.argouml.ui.ActionUndo","1,00",2
"org.argouml.ui.Actions","1,50",3
"org.argouml.ui.ArgoDiagram","1,00",5
"org.argouml.ui.ComponentResizer","2,33",7
"org.argouml.ui.DetailsPane","2,95",65
"org.argouml.ui.DiagramResourceBundle","1,00",1
"org.argouml.ui.DiagramResourceBundle_de","1,00",1
"org.argouml.ui.DiagramResourceBundle_es","1,00",1
"org.argouml.ui.DiagramResourceBundle_fr","1,00",1
"org.argouml.ui.DisplayTextTree","2,59",44
"org.argouml.ui.EmailExpertDialog","1,67",5
"org.argouml.ui.FindDialog","1,72",31
"org.argouml.ui.HistoryListModel","1,43",10
"org.argouml.ui.InitMenusLater","1,00",2
"org.argouml.ui.JasonsBigTheme","1,00",14
"org.argouml.ui.JasonsHugeTheme","1,00",14
"org.argouml.ui.JasonsTheme","1,00",14
"org.argouml.ui.LeftArrowIcon","1,00",3
"org.argouml.ui.Menu","1,00",2
"org.argouml.ui.MenuResourceBundle","1,00",1
"org.argouml.ui.MenuResourceBundle_de","1,00",1
"org.argouml.ui.MenuResourceBundle_en_GB","1,00",1
"org.argouml.ui.MenuResourceBundle_es","1,00",1
"org.argouml.ui.MenuResourceBundle_fr","1,00",1
"org.argouml.ui.MultiEditorPane","2,20",44
"org.argouml.ui.NavPerspective","1,80",27
"org.argouml.ui.NavigationHistory","6,00",36
"org.argouml.ui.NavigatorConfigDialog","2,10",44
"org.argouml.ui.NavigatorPane","1,59",43
"org.argouml.ui.NavigatorPane.NavigatorKeyListener","3,00",3
"org.argouml.ui.NavigatorPane.NavigatorMouseListener","3,50",14
"org.argouml.ui.ProjectBrowser","1,78",89
"org.argouml.ui.SettingsResourceBundle","1,00",1
"org.argouml.ui.SettingsResourceBundle_de","1,00",1
"org.argouml.ui.SettingsResourceBundle_es","1,00",1
"org.argouml.ui.SettingsResourceBundle_fr","1,00",1
"org.argouml.ui.SettingsTabEnvironment","1,00",10
"org.argouml.ui.SettingsTabPreferences","1,00",10
"org.argouml.ui.SettingsTabUser","1,00",10
"org.argouml.ui.SpacerPanel","1,00",5
"org.argouml.ui.SplashScreen","1,20",6
"org.argouml.ui.StatusBar","1,17",7
"org.argouml.ui.StylePanel","1,00",11
"org.argouml.ui.StylePanelFig","2,20",22
"org.argouml.ui.StylePanelFigRRect","1,75",7
"org.argouml.ui.StylePanelFigText","3,10",31
"org.argouml.ui.TabDocs","3,33",10
"org.argouml.ui.TabHash","1,50",3
"org.argouml.ui.TabHistory","2,60",13
"org.argouml.ui.TabResults","1,71",29
"org.argouml.ui.TabSpawnable","1,57",11
"org.argouml.ui.TabTable","1,00",2
"org.argouml.ui.TabText","1,73",19
"org.argouml.ui.TablePanel","1,82",31
"org.argouml.ui.ToDoItemAction","1,25",5
"org.argouml.ui.TreeModelComposite","1,83",44
"org.argouml.ui.TreeResourceBundle","1,00",1
"org.argouml.ui.TreeResourceBundle_de","1,00",1
"org.argouml.ui.TreeResourceBundle_fr","1,00",1
"org.argouml.ui.UpArrowIcon","1,00",3
"org.argouml.ui.UpdateTreeHack","1,00",2
"org.argouml.ui.UsageStatistic","1,00",1
"org.argouml.ui.WindowCloser","1,00",2
"org.argouml.uml.AttrKeyword","2,17",13
"org.argouml.uml.ColumnAbstract","2,33",7
"org.argouml.uml.ColumnAction","2,67",8
"org.argouml.uml.ColumnActionType","3,00",9
"org.argouml.uml.ColumnAttrKeyword","2,00",6
"org.argouml.uml.ColumnBaseForComponentInstance","6,33",19
"org.argouml.uml.ColumnBaseForNodeInstance","6,33",19
"org.argouml.uml.ColumnBaseForObject","6,33",19
"org.argouml.uml.ColumnClassKeyword","2,00",6
"org.argouml.uml.ColumnClassVisibility","2,00",6
"org.argouml.uml.ColumnClient","2,33",7
"org.argouml.uml.ColumnCommunication","1,67",5
"org.argouml.uml.ColumnCompNode","2,33",7
"org.argouml.uml.ColumnCompNodeInstance","1,67",5
"org.argouml.uml.ColumnComponentInstance","1,67",5
"org.argouml.uml.ColumnDescriptor","1,00",4
"org.argouml.uml.ColumnDstLinkType","2,00",6
"org.argouml.uml.ColumnDstMultiplicity","3,00",9
"org.argouml.uml.ColumnDstName","3,00",9
"org.argouml.uml.ColumnDstNavigability","3,00",9
"org.argouml.uml.ColumnDstType","2,00",6
"org.argouml.uml.ColumnEffect","2,33",7
"org.argouml.uml.ColumnEntry","2,33",7
"org.argouml.uml.ColumnExit","2,33",7
"org.argouml.uml.ColumnExtends","2,33",7
"org.argouml.uml.ColumnFeatureVis","2,33",7
"org.argouml.uml.ColumnGuard","2,33",7
"org.argouml.uml.ColumnImplLocation","4,00",12
"org.argouml.uml.ColumnLeaf","2,33",7
"org.argouml.uml.ColumnName","2,75",11
"org.argouml.uml.ColumnOperKeyword","2,00",6
"org.argouml.uml.ColumnParent","1,67",5
"org.argouml.uml.ColumnQuery","2,33",7
"org.argouml.uml.ColumnReturn","2,33",7
"org.argouml.uml.ColumnRoot","2,33",7
"org.argouml.uml.ColumnSource","1,67",5
"org.argouml.uml.ColumnSrcLinkType","2,00",6
"org.argouml.uml.ColumnSrcMultiplicity","3,00",9
"org.argouml.uml.ColumnSrcName","3,00",9
"org.argouml.uml.ColumnSrcNavigability","3,00",9
"org.argouml.uml.ColumnSrcType","2,00",6
"org.argouml.uml.ColumnStereotype","2,33",7
"org.argouml.uml.ColumnSupplier","2,33",7
"org.argouml.uml.ColumnTarget","1,67",5
"org.argouml.uml.ColumnTrigger","2,33",7
"org.argouml.uml.ColumnType","2,33",7
"org.argouml.uml.ColumnVisibility","2,33",7
"org.argouml.uml.DocumentationManager","5,80",29
"org.argouml.uml.GenAncestorClasses","3,50",7
"org.argouml.uml.GenCompositeClasses","7,00",7
"org.argouml.uml.GenDescendantClasses","3,50",7
"org.argouml.uml.MMUtil","2,66",77
"org.argouml.uml.OperKeyword","2,00",12
"org.argouml.uml.PredicateFind","1,25",5
"org.argouml.uml.Profile",n/a,0
"org.argouml.uml.ProfileJava","3,17",38
"org.argouml.uml.ProjectMemberModel","1,11",10
"org.argouml.uml.SuperclassGen","3,00",3
"org.argouml.uml.TMResults","3,89",35
"org.argouml.uml.TableModelAttr","1,25",5
"org.argouml.uml.TableModelComposite","1,61",29
"org.argouml.uml.TableModelOper","1,25",5
"org.argouml.uml.UMLChangeRegistry","1,00",7
"org.argouml.uml.UUIDManager","3,33",10
"org.argouml.uml.cognitive.ChildGenFind","7,00",7
"org.argouml.uml.cognitive.ChildGenRelated","14,00",14
"org.argouml.uml.cognitive.EOElement","2,00",2
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle","1,00",1
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle_de","1,00",1
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle_en_GB","1,00",1
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle_es","1,00",1
"org.argouml.uml.cognitive.UMLCognitiveResourceBundle_fr","1,00",1
"org.argouml.uml.cognitive.checklist.ChActor","1,00",1
"org.argouml.uml.cognitive.checklist.ChAssociation","1,00",1
"org.argouml.uml.cognitive.checklist.ChAttribute","1,00",1
"org.argouml.uml.cognitive.checklist.ChClass","1,00",1
"org.argouml.uml.cognitive.checklist.ChInstance","1,00",1
"org.argouml.uml.cognitive.checklist.ChInterface","1,00",1
"org.argouml.uml.cognitive.checklist.ChLink","1,00",1
"org.argouml.uml.cognitive.checklist.ChOperation","1,00",1
"org.argouml.uml.cognitive.checklist.ChState","1,00",1
"org.argouml.uml.cognitive.checklist.ChTransition","1,00",1
"org.argouml.uml.cognitive.checklist.ChUseCase","1,00",1
"org.argouml.uml.cognitive.checklist.Init","1,00",2
"org.argouml.uml.cognitive.checklist.UMLCheckItem","1,33",4
"org.argouml.uml.cognitive.checklist.UMLChecklist","1,50",6
"org.argouml.uml.cognitive.critics.ChildGenDerivedClasses","4,00",4
"org.argouml.uml.cognitive.critics.ChildGenUML","18,00",18
"org.argouml.uml.cognitive.critics.ClAttributeCompartment","2,33",14
"org.argouml.uml.cognitive.critics.ClClassName","2,67",16
"org.argouml.uml.cognitive.critics.ClOperationCompartment","2,33",14
"org.argouml.uml.cognitive.critics.CrAlreadyRealizes","3,20",16
"org.argouml.uml.cognitive.critics.CrAssocNameConflict","3,00",6
"org.argouml.uml.cognitive.critics.CrAttrNameConflict","3,33",10
"org.argouml.uml.cognitive.critics.CrCallWithoutReturn","3,80",19
"org.argouml.uml.cognitive.critics.CrCircularAssocClass","1,00",2
"org.argouml.uml.cognitive.critics.CrCircularComposition","2,00",12
"org.argouml.uml.cognitive.critics.CrCircularInheritance","2,20",11
"org.argouml.uml.cognitive.critics.CrClassMustBeAbstract","2,50",5
"org.argouml.uml.cognitive.critics.CrClassWithoutComponent","2,40",12
"org.argouml.uml.cognitive.critics.CrCompInstanceWithoutNode","3,20",16
"org.argouml.uml.cognitive.critics.CrComponentInstanceWithoutClassifier","3,60",18
"org.argouml.uml.cognitive.critics.CrComponentWithoutNode","3,20",16
"org.argouml.uml.cognitive.critics.CrConflictingComposites","4,00",12
"org.argouml.uml.cognitive.critics.CrConstructorNeeded","6,33",19
"org.argouml.uml.cognitive.critics.CrCrossNamespaceAssoc","1,00",2
"org.argouml.uml.cognitive.critics.CrDisambigClassName","3,20",16
"org.argouml.uml.cognitive.critics.CrDisambigStateName","5,00",15
"org.argouml.uml.cognitive.critics.CrDupParamName","3,50",7
"org.argouml.uml.cognitive.critics.CrDupRoleNames","4,00",8
"org.argouml.uml.cognitive.critics.CrEmptyPackage","2,00",4
"org.argouml.uml.cognitive.critics.CrFinalSubclassed","2,50",5
"org.argouml.uml.cognitive.critics.CrIllegalGeneralization","2,50",5
"org.argouml.uml.cognitive.critics.CrIllegalName","2,33",7
"org.argouml.uml.cognitive.critics.CrInstanceWithoutClassifier","2,80",14
"org.argouml.uml.cognitive.critics.CrInterfaceAllPublic","3,50",7
"org.argouml.uml.cognitive.critics.CrInterfaceOperOnly","3,00",6
"org.argouml.uml.cognitive.critics.CrInterfaceWithoutComponent","2,40",12
"org.argouml.uml.cognitive.critics.CrInvalidBranch","4,00",8
"org.argouml.uml.cognitive.critics.CrInvalidFork","4,00",8
"org.argouml.uml.cognitive.critics.CrInvalidInitial","3,00",6
"org.argouml.uml.cognitive.critics.CrInvalidJoin","4,00",8
"org.argouml.uml.cognitive.critics.CrLinkWithoutStimulus","2,80",14
"org.argouml.uml.cognitive.critics.CrMergeClasses","2,50",5
"org.argouml.uml.cognitive.critics.CrMissingAttrName","2,50",10
"org.argouml.uml.cognitive.critics.CrMissingClassName","1,80",9
"org.argouml.uml.cognitive.critics.CrMissingOperName","2,50",10
"org.argouml.uml.cognitive.critics.CrMissingStateName","2,00",10
"org.argouml.uml.cognitive.critics.CrMultiComposite","2,00",6
"org.argouml.uml.cognitive.critics.CrMultipleAgg","2,67",8
"org.argouml.uml.cognitive.critics.CrMultipleInitialStates","3,00",15
"org.argouml.uml.cognitive.critics.CrNWayAgg","4,00",8
"org.argouml.uml.cognitive.critics.CrNameConflict","3,25",13
"org.argouml.uml.cognitive.critics.CrNameConflictAC","1,00",2
"org.argouml.uml.cognitive.critics.CrNameConfusion","2,64",29
"org.argouml.uml.cognitive.critics.CrNavFromInterface","5,00",10
"org.argouml.uml.cognitive.critics.CrNoAssociations","2,33",7
"org.argouml.uml.cognitive.critics.CrNoGuard","3,00",6
"org.argouml.uml.cognitive.critics.CrNoIncomingTransitions","4,00",8
"org.argouml.uml.cognitive.critics.CrNoInitialState","3,50",7
"org.argouml.uml.cognitive.critics.CrNoInstanceVariables","2,75",11
"org.argouml.uml.cognitive.critics.CrNoOperations","3,00",12
"org.argouml.uml.cognitive.critics.CrNoOutgoingTransitions","3,50",7
"org.argouml.uml.cognitive.critics.CrNoTransitions","4,50",9
"org.argouml.uml.cognitive.critics.CrNoTriggerOrGuard","3,50",7
"org.argouml.uml.cognitive.critics.CrNodeInsideElement","2,40",12
"org.argouml.uml.cognitive.critics.CrNodeInstanceInsideElement","2,40",12
"org.argouml.uml.cognitive.critics.CrNodeInstanceWithoutClassifier","2,80",14
"org.argouml.uml.cognitive.critics.CrNonAggDataType","1,00",2
"org.argouml.uml.cognitive.critics.CrObjectWithoutClassifier","2,80",14
"org.argouml.uml.cognitive.critics.CrObjectWithoutComponent","2,40",12
"org.argouml.uml.cognitive.critics.CrOperNameConflict","4,50",18
"org.argouml.uml.cognitive.critics.CrOppEndConflict","6,50",13
"org.argouml.uml.cognitive.critics.CrOppEndVsAttr","7,50",15
"org.argouml.uml.cognitive.critics.CrParamTypeNotImported","1,50",3
"org.argouml.uml.cognitive.critics.CrReservedName","2,40",12
"org.argouml.uml.cognitive.critics.CrReturnWithoutCall","3,80",19
"org.argouml.uml.cognitive.critics.CrSeqInstanceWithoutClassifier","2,80",14
"org.argouml.uml.cognitive.critics.CrSignatureConflict","4,50",9
"org.argouml.uml.cognitive.critics.CrStimulusWithWrongPosition","5,20",26
"org.argouml.uml.cognitive.critics.CrSubclassReference","3,40",17
"org.argouml.uml.cognitive.critics.CrTooManyAssoc","2,00",4
"org.argouml.uml.cognitive.critics.CrTooManyAttr","3,50",7
"org.argouml.uml.cognitive.critics.CrTooManyClasses","2,00",4
"org.argouml.uml.cognitive.critics.CrTooManyOper","3,50",7
"org.argouml.uml.cognitive.critics.CrTooManyStates","2,00",4
"org.argouml.uml.cognitive.critics.CrTooManyTransitions","3,00",6
"org.argouml.uml.cognitive.critics.CrUML","1,67",15
"org.argouml.uml.cognitive.critics.CrUnconventionalAttrName","2,57",18
"org.argouml.uml.cognitive.critics.CrUnconventionalClassName","2,00",10
"org.argouml.uml.cognitive.critics.CrUnconventionalOperName","2,14",15
"org.argouml.uml.cognitive.critics.CrUnconventionalPackName","3,00",15
"org.argouml.uml.cognitive.critics.CrUnnavigableAssoc","2,33",7
"org.argouml.uml.cognitive.critics.CrUselessAbstract","3,00",6
"org.argouml.uml.cognitive.critics.CrUselessInterface","2,67",8
"org.argouml.uml.cognitive.critics.CrUtilityViolated","3,33",10
"org.argouml.uml.cognitive.critics.CrWrongDepEnds","4,60",23
"org.argouml.uml.cognitive.critics.CrWrongLinkEnds","3,40",17
"org.argouml.uml.cognitive.critics.Init","1,00",1
"org.argouml.uml.cognitive.critics.WizAssocComposite","2,75",22
"org.argouml.uml.cognitive.critics.WizBreakCircularComp","4,00",32
"org.argouml.uml.cognitive.critics.WizCueCards","1,43",10
"org.argouml.uml.cognitive.critics.WizMEName","2,10",21
"org.argouml.uml.cognitive.critics.WizManyNames","2,00",12
"org.argouml.uml.cognitive.critics.WizNavigable","2,50",20
"org.argouml.uml.diagram.ProjectMemberDiagram","1,11",10
"org.argouml.uml.diagram.activity.ui.FigActionState","1,06",17
"org.argouml.uml.diagram.activity.ui.SelectionActionState","3,14",44
"org.argouml.uml.diagram.activity.ui.UMLActivityDiagram","1,78",16
"org.argouml.uml.diagram.collaboration.CollabDiagramGraphModel","2,19",59
"org.argouml.uml.diagram.collaboration.ui.CollabDiagramRenderer","3,00",6
"org.argouml.uml.diagram.collaboration.ui.FigAssociationRole","4,00",20
"org.argouml.uml.diagram.collaboration.ui.FigClassifierRole","1,47",28
"org.argouml.uml.diagram.collaboration.ui.GoAssocRoleMessages","1,31",17
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationDiagram","1,62",21
"org.argouml.uml.diagram.collaboration.ui.GoCollaborationInteraction","1,31",17
"org.argouml.uml.diagram.collaboration.ui.GoProjectCollaboration","1,54",20
"org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram","2,00",12
"org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel","4,30",116
"org.argouml.uml.diagram.deployment.TableModelAssoc_in_DeplByProps","1,75",7
"org.argouml.uml.diagram.deployment.TableModelClass_in_DeplByProps","2,50",10
"org.argouml.uml.diagram.deployment.TableModelCompInstanceByProps","2,50",10
"org.argouml.uml.diagram.deployment.TableModelComponentByProps","2,50",10
"org.argouml.uml.diagram.deployment.TableModelDependency_in_DeplByProps","1,75",7
"org.argouml.uml.diagram.deployment.TableModelInterface_in_DeplByProps","2,50",10
"org.argouml.uml.diagram.deployment.TableModelLinkByProps","1,75",7
"org.argouml.uml.diagram.deployment.TableModelNodeByProps","1,75",7
"org.argouml.uml.diagram.deployment.TableModelNodeInstanceByProps","1,75",7
"org.argouml.uml.diagram.deployment.TableModelObjectByProps","3,25",13
"org.argouml.uml.diagram.deployment.ui.DeploymentDiagramRenderer","7,00",14
"org.argouml.uml.diagram.deployment.ui.FigComponent","1,95",37
"org.argouml.uml.diagram.deployment.ui.FigComponentInstance","2,41",41
"org.argouml.uml.diagram.deployment.ui.FigMNode","1,42",17
"org.argouml.uml.diagram.deployment.ui.FigMNodeInstance","1,86",26
"org.argouml.uml.diagram.deployment.ui.FigObject","1,79",34
"org.argouml.uml.diagram.deployment.ui.GoDiagramToNode","1,45",16
"org.argouml.uml.diagram.deployment.ui.SelectionComponent","3,78",34
"org.argouml.uml.diagram.deployment.ui.SelectionComponentInstance","3,78",34
"org.argouml.uml.diagram.deployment.ui.SelectionNode","3,78",34
"org.argouml.uml.diagram.deployment.ui.SelectionNodeInstance","3,78",34
"org.argouml.uml.diagram.deployment.ui.SelectionObject","3,78",34
"org.argouml.uml.diagram.deployment.ui.TablePanelUMLDeploymentDiagram","5,80",29
"org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram","1,00",4
"org.argouml.uml.diagram.sequence.SequenceDiagramGraphModel","1,96",53
"org.argouml.uml.diagram.sequence.TableModelSeqActionByProps","1,75",7
"org.argouml.uml.diagram.sequence.TableModelSeqLinkByProps","1,75",7
"org.argouml.uml.diagram.sequence.TableModelSeqObjectByProps","1,75",7
"org.argouml.uml.diagram.sequence.TableModelSeqStimulusByProps","2,25",9
"org.argouml.uml.diagram.sequence.ui.ActionAddLink","1,00",1
"org.argouml.uml.diagram.sequence.ui.FigSeqLink","7,42",141
"org.argouml.uml.diagram.sequence.ui.FigSeqObject","3,94",122
"org.argouml.uml.diagram.sequence.ui.FigSeqStimulus","2,12",36
"org.argouml.uml.diagram.sequence.ui.GoLinkStimuli","1,31",17
"org.argouml.uml.diagram.sequence.ui.GoStimulusAction","1,31",17
"org.argouml.uml.diagram.sequence.ui.SelectionSeqObject","3,62",29
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramLayout","5,00",40
"org.argouml.uml.diagram.sequence.ui.SequenceDiagramRenderer","3,00",6
"org.argouml.uml.diagram.sequence.ui.TablePanelUMLSequenceDiagram","2,20",11
"org.argouml.uml.diagram.sequence.ui.UMLSequenceDiagram","2,50",15
"org.argouml.uml.diagram.state.PredIsFinalState","1,00",2
"org.argouml.uml.diagram.state.PredIsStartState","1,00",2
"org.argouml.uml.diagram.state.StateDiagramGraphModel","2,38",69
"org.argouml.uml.diagram.state.TableModelStateByProps","1,75",7
"org.argouml.uml.diagram.state.TableModelTransByProps","1,75",7
"org.argouml.uml.diagram.state.ui.ActionCreatePseudostate","1,00",2
"org.argouml.uml.diagram.state.ui.FigBranchState","1,06",17
"org.argouml.uml.diagram.state.ui.FigCompositeState","1,21",23
"org.argouml.uml.diagram.state.ui.FigDeepHistoryState","1,06",18
"org.argouml.uml.diagram.state.ui.FigFinalState","1,19",19
"org.argouml.uml.diagram.state.ui.FigForkState","1,13",17
"org.argouml.uml.diagram.state.ui.FigHistoryState","1,06",18
"org.argouml.uml.diagram.state.ui.FigInitialState","1,25",20
"org.argouml.uml.diagram.state.ui.FigJoinState","1,13",17
"org.argouml.uml.diagram.state.ui.FigShallowHistoryState","1,06",18
"org.argouml.uml.diagram.state.ui.FigState","1,22",22
"org.argouml.uml.diagram.state.ui.FigStateVertex","2,33",7
"org.argouml.uml.diagram.state.ui.FigTransition","1,50",6
"org.argouml.uml.diagram.state.ui.GoMachineDiagram","1,69",22
"org.argouml.uml.diagram.state.ui.GoMachineToStartState","2,17",26
"org.argouml.uml.diagram.state.ui.GoMachineToState","2,17",26
"org.argouml.uml.diagram.state.ui.GoMachineToTrans","1,75",21
"org.argouml.uml.diagram.state.ui.GoProjectMachine","1,64",23
"org.argouml.uml.diagram.state.ui.GoStateToDownstream","1,67",20
"org.argouml.uml.diagram.state.ui.GoStateToIncomingTrans","1,42",17
"org.argouml.uml.diagram.state.ui.GoStateToInternalTrans","1,62",21
"org.argouml.uml.diagram.state.ui.GoStateToOutgoingTrans","1,50",18
"org.argouml.uml.diagram.state.ui.GoStateToSubstate","1,62",21
"org.argouml.uml.diagram.state.ui.GoStateToUpstream","1,67",20
"org.argouml.uml.diagram.state.ui.GoTransToSourceState","1,33",16
"org.argouml.uml.diagram.state.ui.GoTransToTargetState","1,33",16
"org.argouml.uml.diagram.state.ui.PropPanelUMLStateDiagram","1,00",1
"org.argouml.uml.diagram.state.ui.SelectionState","3,00",30
"org.argouml.uml.diagram.state.ui.StateDiagramRenderer","7,50",15
"org.argouml.uml.diagram.state.ui.TablePanelUMLStateDiagram","1,00",2
"org.argouml.uml.diagram.state.ui.UMLStateDiagram","1,75",14
"org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel","3,56",96
"org.argouml.uml.diagram.static_structure.MMClassKeyword","1,50",9
"org.argouml.uml.diagram.static_structure.MMClassVisibility","1,50",9
"org.argouml.uml.diagram.static_structure.TableModelAssocByProps","1,75",7
"org.argouml.uml.diagram.static_structure.TableModelClassByProps","1,75",7
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter","4,75",76
"org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode","1,20",24
"org.argouml.uml.diagram.static_structure.ui.ClassDiagramRenderer","7,00",14
"org.argouml.uml.diagram.static_structure.ui.FigClass","3,77",98
"org.argouml.uml.diagram.static_structure.ui.FigClass.MyFigText","1,00",6
"org.argouml.uml.diagram.static_structure.ui.FigEdgeNote","1,00",4
"org.argouml.uml.diagram.static_structure.ui.FigInstance","1,14",8
"org.argouml.uml.diagram.static_structure.ui.FigInterface","3,00",57
"org.argouml.uml.diagram.static_structure.ui.FigInterface.MyFigText","1,00",6
"org.argouml.uml.diagram.static_structure.ui.FigLink","1,00",3
"org.argouml.uml.diagram.static_structure.ui.FigNote","1,65",61
"org.argouml.uml.diagram.static_structure.ui.FigPackage","1,41",24
"org.argouml.uml.diagram.static_structure.ui.GoAssocToSource","1,50",18
"org.argouml.uml.diagram.static_structure.ui.GoAssocToTarget","1,50",18
"org.argouml.uml.diagram.static_structure.ui.GoClassToAggrClass","1,77",23
"org.argouml.uml.diagram.static_structure.ui.GoClassToAssocdClass","1,69",22
"org.argouml.uml.diagram.static_structure.ui.GoClassToCompositeClass","2,00",26
"org.argouml.uml.diagram.static_structure.ui.GoClassToNavigableClass","1,85",24
"org.argouml.uml.diagram.static_structure.ui.GoModelToAssociation","1,54",20
"org.argouml.uml.diagram.static_structure.ui.GoModelToClass","1,54",20
"org.argouml.uml.diagram.static_structure.ui.SelectionClass","3,70",37
"org.argouml.uml.diagram.static_structure.ui.SelectionInterface","3,17",19
"org.argouml.uml.diagram.static_structure.ui.StylePanelFigClass","1,40",7
"org.argouml.uml.diagram.static_structure.ui.TablePanelUMLClassDiagram","2,80",14
"org.argouml.uml.diagram.static_structure.ui.UMLClassDiagram","1,00",4
"org.argouml.uml.diagram.ui.ActionAddExistingNode","1,43",10
"org.argouml.uml.diagram.ui.DiagramInfo","3,50",7
"org.argouml.uml.diagram.ui.FigAssociation","4,14",29
"org.argouml.uml.diagram.ui.FigDependency","1,00",5
"org.argouml.uml.diagram.ui.FigEdgeModelElement","1,86",78
"org.argouml.uml.diagram.ui.FigGeneralization","1,00",4
"org.argouml.uml.diagram.ui.FigMessage","1,75",35
"org.argouml.uml.diagram.ui.FigNodeModelElement","2,25",90
"org.argouml.uml.diagram.ui.FigNote","1,20",6
"org.argouml.uml.diagram.ui.FigRealization","1,00",5
"org.argouml.uml.diagram.ui.FigTrace","1,00",2
"org.argouml.uml.diagram.ui.GoClassifierToBeh","1,42",17
"org.argouml.uml.diagram.ui.GoClassifierToStr","1,42",17
"org.argouml.uml.diagram.ui.GoDiagramToEdge","1,45",16
"org.argouml.uml.diagram.ui.GoElement2DependentElement","1,50",18
"org.argouml.uml.diagram.ui.GoElementToMachine","1,50",18
"org.argouml.uml.diagram.ui.GoElementToReqElement","1,50",18
"org.argouml.uml.diagram.ui.GoFilteredChildren","1,67",20
"org.argouml.uml.diagram.ui.GoGenElementToDerived","1,36",15
"org.argouml.uml.diagram.ui.GoInteractionMessages","1,31",17
"org.argouml.uml.diagram.ui.GoModelToBaseElements","2,08",25
"org.argouml.uml.diagram.ui.GoModelToDiagram","2,00",22
"org.argouml.uml.diagram.ui.GoModelToElements","1,42",17
"org.argouml.uml.diagram.ui.GoProjectDiagram","1,36",15
"org.argouml.uml.diagram.ui.GoProjectModel","1,33",16
"org.argouml.uml.diagram.ui.ModeCreateEdgeAndNode","3,42",41
"org.argouml.uml.diagram.ui.PropPanelDiagram","1,33",4
"org.argouml.uml.diagram.ui.PropPanelString","1,22",11
"org.argouml.uml.diagram.ui.SPFigEdgeModelElement","1,89",17
"org.argouml.uml.diagram.ui.SelectionEdgeClarifiers","1,00",2
"org.argouml.uml.diagram.ui.SelectionMoveClarifiers","1,00",2
"org.argouml.uml.diagram.ui.SelectionNodeClarifiers","1,00",2
"org.argouml.uml.diagram.ui.SelectionWButtons","1,45",29
"org.argouml.uml.diagram.ui.StylePanelFigMessage","1,33",8
"org.argouml.uml.diagram.ui.TabDiagram","1,33",16
"org.argouml.uml.diagram.ui.UMLDiagram","1,22",11
"org.argouml.uml.diagram.use_case.TableModelActorByProps","1,75",7
"org.argouml.uml.diagram.use_case.TableModelUseCaseByProps","1,75",7
"org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel","2,81",76
"org.argouml.uml.diagram.use_case.ui.FigActor","1,00",17
"org.argouml.uml.diagram.use_case.ui.FigUseCase","1,00",16
"org.argouml.uml.diagram.use_case.ui.GoModelToActor","2,08",25
"org.argouml.uml.diagram.use_case.ui.GoModelToUseCase","2,08",25
"org.argouml.uml.diagram.use_case.ui.SelectionActor","3,43",24
"org.argouml.uml.diagram.use_case.ui.SelectionUseCase","4,00",36
"org.argouml.uml.diagram.use_case.ui.TablePanelUMLUseCaseDiagram","1,00",2
"org.argouml.uml.diagram.use_case.ui.UMLUseCaseDiagram","1,00",4
"org.argouml.uml.diagram.use_case.ui.UseCaseDiagramRenderer","4,00",8
"org.argouml.uml.generator.GenerationPreferences","1,20",6
"org.argouml.uml.generator.Generator","2,87",43
"org.argouml.uml.generator.GeneratorDisplay","3,14",110
"org.argouml.uml.generator.Parser","1,00",3
"org.argouml.uml.generator.ParserDisplay","3,91",125
"org.argouml.uml.generator.ui.ClassGenerationDialog","4,00",20
"org.argouml.uml.generator.ui.TableModelClassChecks","2,40",24
"org.argouml.uml.reveng.DiagramInterface","1,62",21
"org.argouml.uml.reveng.Import","2,60",13
"org.argouml.uml.reveng.java.ArgoToken","1,00",2
"org.argouml.uml.reveng.java.ClassifierContext","2,33",7
"org.argouml.uml.reveng.java.ClassifierNotFoundException","1,00",1
"org.argouml.uml.reveng.java.Context","2,00",4
"org.argouml.uml.reveng.java.JavaImport","2,00",4
"org.argouml.uml.reveng.java.JavaLexer","4,57",311
"org.argouml.uml.reveng.java.JavaRecognizer","5,38",473
"org.argouml.uml.reveng.java.Modeller","3,38",108
"org.argouml.uml.reveng.java.OuterClassifierContext","3,67",11
"org.argouml.uml.reveng.java.PackageContext","5,00",15
"org.argouml.uml.reveng.java.ParseState","1,56",25
"org.argouml.uml.ui.ActionActivityDiagram","1,67",5
"org.argouml.uml.ui.ActionAddAttribute","1,33",4
"org.argouml.uml.ui.ActionAddInternalTrans","1,33",4
"org.argouml.uml.ui.ActionAddMessage","2,00",6
"org.argouml.uml.ui.ActionAddNote","3,33",10
"org.argouml.uml.ui.ActionAddOperation","1,33",4
"org.argouml.uml.ui.ActionAddTopLevelPackage","1,00",2
"org.argouml.uml.ui.ActionAggregation","1,67",5
"org.argouml.uml.ui.ActionClassDiagram","1,50",3
"org.argouml.uml.ui.ActionCollaborationDiagram","1,00",2
"org.argouml.uml.ui.ActionCompartmentDisplay","3,00",9
"org.argouml.uml.ui.ActionCopy","1,00",3
"org.argouml.uml.ui.ActionCut","1,00",2
"org.argouml.uml.ui.ActionDeleteFromDiagram","1,00",3
"org.argouml.uml.ui.ActionDeploymentDiagram","1,50",3
"org.argouml.uml.ui.ActionEmptyTrash","1,00",3
"org.argouml.uml.ui.ActionExit","4,00",8
"org.argouml.uml.ui.ActionGenerateAll","2,33",7
"org.argouml.uml.ui.ActionGenerateOne","3,67",11
"org.argouml.uml.ui.ActionImportFromSources","3,50",7
"org.argouml.uml.ui.ActionLayout","1,33",4
"org.argouml.uml.ui.ActionLoadModelFromDB","1,67",5
"org.argouml.uml.ui.ActionMultiplicity","1,67",5
"org.argouml.uml.ui.ActionNew","4,00",8
"org.argouml.uml.ui.ActionOpenProject","6,00",12
"org.argouml.uml.ui.ActionPaste","1,33",4
"org.argouml.uml.ui.ActionProperties","1,33",4
"org.argouml.uml.ui.ActionRemoveFromModel","4,50",18
"org.argouml.uml.ui.ActionSaveGIF","4,00",12
"org.argouml.uml.ui.ActionSaveGraphics","5,33",16
"org.argouml.uml.ui.ActionSaveProject","1,80",9
"org.argouml.uml.ui.ActionSaveProjectAs","2,75",11
"org.argouml.uml.ui.ActionSequenceDiagram","1,50",3
"org.argouml.uml.ui.ActionStateDiagram","1,67",5
"org.argouml.uml.ui.ActionStoreModelToDB","1,67",5
"org.argouml.uml.ui.ActionUseCaseDiagram","1,50",3
"org.argouml.uml.ui.ActionZoom","1,33",4
"org.argouml.uml.ui.CmdUMLProperties","1,33",4
"org.argouml.uml.ui.EnumerationAdapter","1,00",3
"org.argouml.uml.ui.InitPanelsLater","2,00",4
"org.argouml.uml.ui.ModelElementRenderer","2,00",2
"org.argouml.uml.ui.PropPanel","1,77",78
"org.argouml.uml.ui.PropPanelButton","1,40",14
"org.argouml.uml.ui.TabConstraints","1,20",6
"org.argouml.uml.ui.TabConstraints.ConstraintModel","2,33",28
"org.argouml.uml.ui.TabConstraints.ConstraintModel.CR","3,00",21
"org.argouml.uml.ui.TabDocumentation","1,00",3
"org.argouml.uml.ui.TabProps","1,92",46
"org.argouml.uml.ui.TabSrc","1,85",24
"org.argouml.uml.ui.TabStyle","1,77",23
"org.argouml.uml.ui.TabTaggedValues","1,17",7
"org.argouml.uml.ui.TabUMLDisplay","1,50",6
"org.argouml.uml.ui.TableModelTaggedValues","2,06",35
"org.argouml.uml.ui.UMLAction","1,45",16
"org.argouml.uml.ui.UMLAssociationEndListModel","2,22",20
"org.argouml.uml.ui.UMLAssociationsListModel","1,00",3
"org.argouml.uml.ui.UMLAttributesListModel","1,89",17
"org.argouml.uml.ui.UMLBooleanProperty","1,33",4
"org.argouml.uml.ui.UMLChangeAction","1,00",3
"org.argouml.uml.ui.UMLChangeDispatch","2,18",24
"org.argouml.uml.ui.UMLCheckBox","1,27",14
"org.argouml.uml.ui.UMLClassifierComboBoxModel","4,75",19
"org.argouml.uml.ui.UMLClassifierListModel","1,78",16
"org.argouml.uml.ui.UMLClassifierNameComparator","1,00",1
"org.argouml.uml.ui.UMLClassifiersListModel","1,27",14
"org.argouml.uml.ui.UMLClientDependencyListModel","2,00",20
"org.argouml.uml.ui.UMLComboBox","1,30",13
"org.argouml.uml.ui.UMLComboBoxEntry","2,67",32
"org.argouml.uml.ui.UMLComboBoxModel","2,60",65
"org.argouml.uml.ui.UMLComboBoxNavigator","2,50",5
"org.argouml.uml.ui.UMLConnectionListModel","2,20",22
"org.argouml.uml.ui.UMLEnumerationBooleanProperty","2,67",8
"org.argouml.uml.ui.UMLExpressionBodyField","1,23",16
"org.argouml.uml.ui.UMLExpressionLanguageField","1,31",17
"org.argouml.uml.ui.UMLExpressionModel","3,00",27
"org.argouml.uml.ui.UMLExtendListModel","2,00",14
"org.argouml.uml.ui.UMLExtensionPointListModel","1,86",13
"org.argouml.uml.ui.UMLGeneralizationListModel","2,10",21
"org.argouml.uml.ui.UMLGeneralizationsListModel","1,00",3
"org.argouml.uml.ui.UMLIncludeListModel","2,00",14
"org.argouml.uml.ui.UMLInitialValueComboBox","2,25",27
"org.argouml.uml.ui.UMLList","1,60",24
"org.argouml.uml.ui.UMLListCellRenderer","5,00",5
"org.argouml.uml.ui.UMLListMenuItem","1,00",2
"org.argouml.uml.ui.UMLMetaclassComboBox","1,45",16
"org.argouml.uml.ui.UMLMetaclassInstanceTreeNode","2,09",23
"org.argouml.uml.ui.UMLModelElementCachedListModel","2,43",34
"org.argouml.uml.ui.UMLModelElementListModel","2,35",61
"org.argouml.uml.ui.UMLModelElementNameComparator","2,25",9
"org.argouml.uml.ui.UMLModelElementTreeNode","1,00",10
"org.argouml.uml.ui.UMLMultiplicityComboBox","1,82",20
"org.argouml.uml.ui.UMLNameEventListener","2,57",18
"org.argouml.uml.ui.UMLNamespaceListModel","1,50",6
"org.argouml.uml.ui.UMLNamespaceProperty","1,25",5
"org.argouml.uml.ui.UMLOperationsListModel","1,78",16
"org.argouml.uml.ui.UMLOwnedElementListModel","2,00",20
"org.argouml.uml.ui.UMLOwnedElementRootNode","2,25",36
"org.argouml.uml.ui.UMLPackagesListModel","1,00",3
"org.argouml.uml.ui.UMLRadioButton","1,09",12
"org.argouml.uml.ui.UMLReflectionBooleanProperty","2,67",8
"org.argouml.uml.ui.UMLReflectionListModel","4,00",32
"org.argouml.uml.ui.UMLResourceBundle","1,00",1
"org.argouml.uml.ui.UMLResourceBundle_de","1,00",1
"org.argouml.uml.ui.UMLResourceBundle_en_GB","1,00",1
"org.argouml.uml.ui.UMLResourceBundle_fr","1,00",1
"org.argouml.uml.ui.UMLSpecializationListModel","2,00",12
"org.argouml.uml.ui.UMLStereotypeComboBox","1,00",1
"org.argouml.uml.ui.UMLStereotypesListModel","1,00",3
"org.argouml.uml.ui.UMLStimulusActionTextField","1,31",17
"org.argouml.uml.ui.UMLStimulusActionTextProperty","2,20",11
"org.argouml.uml.ui.UMLStimulusListModel","2,00",10
"org.argouml.uml.ui.UMLSupplierDependencyListModel","1,25",5
"org.argouml.uml.ui.UMLTaggedBooleanProperty","5,00",15
"org.argouml.uml.ui.UMLTaggedTextProperty","1,60",8
"org.argouml.uml.ui.UMLTextArea","1,31",17
"org.argouml.uml.ui.UMLTextField","1,62",21
"org.argouml.uml.ui.UMLTextProperty","2,33",14
"org.argouml.uml.ui.UMLTree","2,12",36
"org.argouml.uml.ui.UMLTreeCellRenderer","18,00",18
"org.argouml.uml.ui.UMLTreeMenuItem","1,33",4
"org.argouml.uml.ui.UMLTreeModel","1,00",14
"org.argouml.uml.ui.UMLTreeRootNode","1,00",9
"org.argouml.uml.ui.UMLVisibilityPanel","2,00",2
"org.argouml.uml.ui.behavior.activity_graphs.PropPanelActionState","1,00",2
"org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationRole","2,00",14
"org.argouml.uml.ui.behavior.collaborations.PropPanelClassifierRole","1,60",8
"org.argouml.uml.ui.behavior.collaborations.PropPanelMessage","1,78",16
"org.argouml.uml.ui.behavior.common_behavior.PropPanelCallAction","1,00",2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelComponentInstance","1,00",2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelInstance","2,20",11
"org.argouml.uml.ui.behavior.common_behavior.PropPanelLink","1,75",7
"org.argouml.uml.ui.behavior.common_behavior.PropPanelNodeInstance","1,00",2
"org.argouml.uml.ui.behavior.common_behavior.PropPanelObject","2,29",16
"org.argouml.uml.ui.behavior.common_behavior.PropPanelSignal","1,67",5
"org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus","1,93",27
"org.argouml.uml.ui.behavior.state_machines.PropPanelCallEvent","1,50",6
"org.argouml.uml.ui.behavior.state_machines.PropPanelCompositeState","1,33",4
"org.argouml.uml.ui.behavior.state_machines.PropPanelEvent","1,57",11
"org.argouml.uml.ui.behavior.state_machines.PropPanelFinalState","1,00",2
"org.argouml.uml.ui.behavior.state_machines.PropPanelGuard","1,33",4
"org.argouml.uml.ui.behavior.state_machines.PropPanelPseudostate","1,00",2
"org.argouml.uml.ui.behavior.state_machines.PropPanelSimpleState","1,00",2
"org.argouml.uml.ui.behavior.state_machines.PropPanelState","1,79",25
"org.argouml.uml.ui.behavior.state_machines.PropPanelStateVertex","2,00",14
"org.argouml.uml.ui.behavior.state_machines.PropPanelTransition","2,00",30
"org.argouml.uml.ui.behavior.use_cases.PropPanelActor","2,00",6
"org.argouml.uml.ui.behavior.use_cases.PropPanelUseCase","1,67",5
"org.argouml.uml.ui.foundation.core.PropPanelAbstraction","1,67",10
"org.argouml.uml.ui.foundation.core.PropPanelAssociation","2,20",11
"org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd","2,82",31
"org.argouml.uml.ui.foundation.core.PropPanelAttribute","2,00",18
"org.argouml.uml.ui.foundation.core.PropPanelClass","1,75",7
"org.argouml.uml.ui.foundation.core.PropPanelClassifier","2,25",18
"org.argouml.uml.ui.foundation.core.PropPanelComponent","1,00",2
"org.argouml.uml.ui.foundation.core.PropPanelDataType","3,25",13
"org.argouml.uml.ui.foundation.core.PropPanelDependency","1,67",10
"org.argouml.uml.ui.foundation.core.PropPanelGeneralization","2,87",43
"org.argouml.uml.ui.foundation.core.PropPanelInterface","1,33",4
"org.argouml.uml.ui.foundation.core.PropPanelModelElement","1,54",20
"org.argouml.uml.ui.foundation.core.PropPanelModelElementImpl","1,00",2
"org.argouml.uml.ui.foundation.core.PropPanelNamespace","1,50",9
"org.argouml.uml.ui.foundation.core.PropPanelNode","1,50",6
"org.argouml.uml.ui.foundation.core.PropPanelOperation","2,75",44
"org.argouml.uml.ui.foundation.core.PropPanelParameter","1,67",15
"org.argouml.uml.ui.foundation.extension_mechanisms.PropPanelStereotype","1,80",9
"org.argouml.uml.ui.model_management.PropPanelModel","1,00",8
"org.argouml.uml.ui.model_management.PropPanelPackage","1,21",34
"org.argouml.util.ChangeRegistry","1,00",8
"org.argouml.util.CheckResourceBundle","4,67",14
"org.argouml.util.ConfigLoader","5,67",17
"org.argouml.util.FileFilters",n/a,0
"org.argouml.util.SubInputStream","1,00",3
"org.argouml.util.SuffixFilter","2,00",10
"org.argouml.util.Tools","4,33",13
"org.argouml.util.Trash","2,00",14
"org.argouml.util.TrashItem","1,67",5
"org.argouml.util.logging.ThrowableRenderer","1,50",6
"org.argouml.xml.DTDEntityResolver","3,00",6
"org.argouml.xml.NodeRealizerAdapter","1,40",7
"org.argouml.xml.SAXParserBase","1,85",24
"org.argouml.xml.XMLElement","1,00",12
"org.argouml.xml.XMLRealizer","2,29",16
"org.argouml.xml.XMLTokenTableBase","2,20",11
"org.argouml.xml.argo.ArgoParser","2,12",34
"org.argouml.xml.argo.ArgoTokenTable","1,00",2
"org.argouml.xml.pgml.PGMLParser","1,67",5
"org.argouml.xml.xmi.XMIParser","1,80",9

Package,v(G)avg,v(G)tot
"argouml.application","4,86",34
"argouml.application.api","1,26",123
"argouml.application.configuration","1,76",86
"argouml.application.events","2,08",54
"argouml.application.helpers","1,00",33
"argouml.application.modules","4,14",120
"argouml.application.notation","1,47",50
"argouml.application.security","2,07",31
"argouml.cognitive","1,45",322
"argouml.cognitive.checklist","1,23",48
"argouml.cognitive.checklist.ui","1,76",44
"argouml.cognitive.critics","1,58",208
"argouml.cognitive.critics.ui","2,54",61
"argouml.cognitive.ui","2,37",477
"argouml.kernel","1,91",252
"argouml.language","1,00",6
"argouml.language.helpers","3,55",39
"argouml.language.java","1,06",18
"argouml.language.java.cognitive.critics","1,80",9
"argouml.language.java.generator","7,01",1.836
"argouml.language.java.ui","2,17",89
"argouml.language.ui","1,38",36
"argouml.ocl","5,09",112
"argouml.pattern.cognitive.critics","3,67",22
"argouml.persistence","3,77",196
"argouml.ui","1,85",989
"argouml.uml","2,84",745
"argouml.uml.cognitive","3,50",28
"argouml.uml.cognitive.checklist","1,20",24
"argouml.uml.cognitive.critics","3,29",1.246
"argouml.uml.diagram","1,22",11
"argouml.uml.diagram.activity.ui","2,33",91
"argouml.uml.diagram.collaboration","2,41",65
"argouml.uml.diagram.collaboration.ui","1,87",157
"argouml.uml.diagram.deployment","3,45",231
"argouml.uml.diagram.deployment.ui","2,90",429
"argouml.uml.diagram.sequence","2,14",92
"argouml.uml.diagram.sequence.ui","4,15",510
"argouml.uml.diagram.state","2,17",89
"argouml.uml.diagram.state.ui","1,57",564
"argouml.uml.diagram.static_structure","3,06",144
"argouml.uml.diagram.static_structure.layout","2,89",104
"argouml.uml.diagram.static_structure.ui","2,27",588
"argouml.uml.diagram.ui","1,89",738
"argouml.uml.diagram.use_case","2,89",101
"argouml.uml.diagram.use_case.ui","2,05",166
"argouml.uml.generator","3,48",313
"argouml.uml.generator.ui","3,53",53
"argouml.uml.reveng","2,11",38
"argouml.uml.reveng.java","5,84",1.285
"argouml.uml.ui","2,26",1.834
"argouml.uml.ui.behavior.activity_graphs","1,00",2
"argouml.uml.ui.behavior.collaborations","1,81",38
"argouml.uml.ui.behavior.common_behavior","2,05",80
"argouml.uml.ui.behavior.state_machines","1,69",100
"argouml.uml.ui.behavior.use_cases","2,33",14
"argouml.uml.ui.foundation.core","2,28",280
"argouml.uml.ui.foundation.extension_mechanisms","1,80",9
"argouml.uml.ui.model_management","1,28",46
"argouml.util","2,80",98
"argouml.util.logging","1,50",6
"argouml.xml","1,95",86
"argouml.xml.argo","2,33",42
"argouml.xml.pgml","1,67",5
"argouml.xml.xmi","2,40",12

Module,v(G)avg,v(G)tot
"argouml","2,60",15.759

Project,v(G)avg,v(G)tot
"project","2,60",15.759

