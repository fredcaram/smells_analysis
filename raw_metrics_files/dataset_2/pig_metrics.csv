SmellMetrics,Seg, 4 jun 2018 17:17:10 BRT
Method,CALL,CALLED,IMP,LOC,NBD,NP,STAT,v(G)
"null.accept(Path)",3,0,n/a,4,0,1,2,2
"null.allocate(Ruby,RubyClass)",1,0,n/a,3,0,2,1,1
"null.compare(Node,Node)",0,0,n/a,5,0,2,2,3
"null.initialValue()",1,0,n/a,4,0,0,1,1
"null.put(String,Operator)",1,0,n/a,5,0,2,2,1
"null.run()",1,0,n/a,4,0,0,1,1
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantBooleanObjectInspector.JavaConstantBooleanObjectInspector(Boolean)",1,1,n/a,4,0,1,2,1
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantBooleanObjectInspector.getWritableConstantValue()",1,0,n/a,7,1,0,3,2
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantDoubleObjectInspector.JavaConstantDoubleObjectInspector(Double)",1,1,n/a,4,0,1,2,1
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantDoubleObjectInspector.getWritableConstantValue()",1,0,n/a,7,1,0,3,2
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantFloatObjectInspector.JavaConstantFloatObjectInspector(Float)",1,1,n/a,4,0,1,2,1
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantFloatObjectInspector.getWritableConstantValue()",1,0,n/a,7,1,0,3,2
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantIntObjectInspector.JavaConstantIntObjectInspector(Integer)",1,1,n/a,4,0,1,2,1
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantIntObjectInspector.getWritableConstantValue()",1,0,n/a,7,1,0,3,2
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantLongObjectInspector.JavaConstantLongObjectInspector(Long)",1,1,n/a,4,0,1,2,1
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantLongObjectInspector.getWritableConstantValue()",1,0,n/a,7,1,0,3,2
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantStringObjectInspector.JavaConstantStringObjectInspector(String)",1,1,n/a,4,0,1,2,1
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantStringObjectInspector.getWritableConstantValue()",1,0,n/a,7,1,0,3,2
"org.apache.pig.Accumulator.accumulate(Tuple)",n/a,1,25,n/a,n/a,1,n/a,n/a
"org.apache.pig.Accumulator.cleanup()",n/a,2,25,n/a,n/a,0,n/a,n/a
"org.apache.pig.Accumulator.getValue()",n/a,1,25,n/a,n/a,0,n/a,n/a
"org.apache.pig.AccumulatorEvalFunc.accumulate(Tuple)",n/a,2,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.AccumulatorEvalFunc.cleanup()",n/a,3,5,n/a,n/a,0,n/a,n/a
"org.apache.pig.AccumulatorEvalFunc.exec(Tuple)",3,7,n/a,7,0,1,4,1
"org.apache.pig.AccumulatorEvalFunc.getValue()",n/a,2,5,n/a,n/a,0,n/a,n/a
"org.apache.pig.Algebraic.getFinal()",n/a,3,42,n/a,n/a,0,n/a,n/a
"org.apache.pig.Algebraic.getInitial()",n/a,3,23,n/a,n/a,0,n/a,n/a
"org.apache.pig.Algebraic.getIntermed()",n/a,3,22,n/a,n/a,0,n/a,n/a
"org.apache.pig.AlgebraicEvalFunc.AlgebraicEvalFunc(String...)",0,4,n/a,5,0,1,1,1
"org.apache.pig.AlgebraicEvalFunc.accumulate(Tuple)",33,2,n/a,50,2,1,33,6
"org.apache.pig.AlgebraicEvalFunc.cleanup()",0,3,n/a,15,0,0,9,1
"org.apache.pig.AlgebraicEvalFunc.getFinal()",n/a,4,22,n/a,n/a,0,n/a,n/a
"org.apache.pig.AlgebraicEvalFunc.getInitial()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.AlgebraicEvalFunc.getIntermed()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.AlgebraicEvalFunc.getValue()",3,2,n/a,12,1,0,3,2
"org.apache.pig.AlgebraicEvalFunc.makeEvalFunc(String)",10,3,n/a,15,1,1,10,3
"org.apache.pig.CollectableLoadFunc.ensureAllKeyInstancesInSameSplit()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.ComparisonFunc.ComparisonFunc()",1,0,n/a,3,0,0,1,1
"org.apache.pig.ComparisonFunc.compare(Tuple,Tuple)",n/a,2,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.ComparisonFunc.compare(WritableComparable,WritableComparable)",3,0,n/a,13,0,2,1,1
"org.apache.pig.ComparisonFunc.setReporter(PigProgressable)",0,2,n/a,9,0,1,1,1
"org.apache.pig.EvalFunc.EvalFunc()",31,108,n/a,44,3,0,30,13
"org.apache.pig.EvalFunc.allowCompileTimeCalculation()",0,1,n/a,10,0,0,1,1
"org.apache.pig.EvalFunc.exec(Tuple)",n/a,7,212,n/a,n/a,1,n/a,n/a
"org.apache.pig.EvalFunc.finish()",0,1,n/a,5,0,0,0,1
"org.apache.pig.EvalFunc.getArgToFuncMapping()",0,2,n/a,21,0,0,1,1
"org.apache.pig.EvalFunc.getCacheFiles()",0,1,n/a,9,0,0,1,1
"org.apache.pig.EvalFunc.getInputSchema()",0,16,n/a,7,0,0,1,1
"org.apache.pig.EvalFunc.getLogger()",0,3,n/a,3,0,0,1,1
"org.apache.pig.EvalFunc.getPigLogger()",0,0,n/a,3,0,0,1,1
"org.apache.pig.EvalFunc.getReporter()",0,0,n/a,3,0,0,1,1
"org.apache.pig.EvalFunc.getReturnType()",0,6,n/a,7,0,0,1,1
"org.apache.pig.EvalFunc.getReturnTypeFromSpec(FuncSpec)",3,3,n/a,7,1,1,3,2
"org.apache.pig.EvalFunc.getSchemaName(String,Schema)",5,41,n/a,8,1,2,5,3
"org.apache.pig.EvalFunc.getSchemaType()",0,2,n/a,10,0,0,1,1
"org.apache.pig.EvalFunc.getShipFiles()",0,1,n/a,10,0,0,1,1
"org.apache.pig.EvalFunc.isAsynchronous()",0,1,n/a,10,0,0,1,1
"org.apache.pig.EvalFunc.needEndOfAllInputProcessing()",0,1,n/a,3,0,0,1,1
"org.apache.pig.EvalFunc.outputSchema(Schema)",5,2,n/a,19,1,1,4,3
"org.apache.pig.EvalFunc.progress()",2,5,n/a,9,0,0,3,2
"org.apache.pig.EvalFunc.setEndOfAllInput(boolean)",0,1,n/a,2,0,1,0,1
"org.apache.pig.EvalFunc.setInputSchema(Schema)",0,4,n/a,7,0,1,1,1
"org.apache.pig.EvalFunc.setPigLogger(PigLogger)",0,2,n/a,8,0,1,1,1
"org.apache.pig.EvalFunc.setReporter(PigProgressable)",0,2,n/a,8,0,1,1,1
"org.apache.pig.EvalFunc.setUDFContextSignature(String)",0,2,n/a,10,0,1,0,1
"org.apache.pig.EvalFunc.warn(String,Enum)",4,30,n/a,10,0,2,3,2
"org.apache.pig.ExceptionalFunction.apply(S)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.ExecType.accepts(Properties)",n/a,1,4,n/a,n/a,1,n/a,n/a
"org.apache.pig.ExecType.getExecutionEngine(PigContext)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.ExecType.getExecutionEngineClass()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.ExecType.isLocal()",n/a,12,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.ExecType.name()",n/a,1,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.ExecTypeProvider.fromString(String)",3,1,n/a,5,0,1,3,1
"org.apache.pig.ExecTypeProvider.getSingleton(ExecType)",0,1,n/a,21,1,1,5,3
"org.apache.pig.ExecTypeProvider.selectExecType(Properties)",8,2,n/a,16,2,1,8,3
"org.apache.pig.Expression.BetweenExpression.BetweenExpression(Object,Object)",0,0,n/a,5,0,2,3,1
"org.apache.pig.Expression.BetweenExpression.getLower()",0,1,n/a,3,0,0,1,1
"org.apache.pig.Expression.BetweenExpression.getUpper()",0,1,n/a,3,0,0,1,1
"org.apache.pig.Expression.BetweenExpression.toString()",0,0,n/a,4,0,0,1,1
"org.apache.pig.Expression.BinaryExpression.BinaryExpression(Expression,Expression,OpType)",0,1,n/a,9,0,3,3,1
"org.apache.pig.Expression.BinaryExpression.getLhs()",0,3,n/a,6,0,0,1,1
"org.apache.pig.Expression.BinaryExpression.getRhs()",0,3,n/a,6,0,0,1,1
"org.apache.pig.Expression.BinaryExpression.toString()",3,0,n/a,5,0,0,1,1
"org.apache.pig.Expression.Column.Column(String)",0,1,n/a,7,0,1,2,1
"org.apache.pig.Expression.Column.getName()",0,4,n/a,6,0,0,1,1
"org.apache.pig.Expression.Column.setName(String)",0,2,n/a,6,0,1,1,1
"org.apache.pig.Expression.Column.toString()",0,0,n/a,4,0,0,1,1
"org.apache.pig.Expression.Const.Const(Object)",0,1,n/a,7,0,1,2,1
"org.apache.pig.Expression.Const.getValue()",0,1,n/a,6,0,0,1,1
"org.apache.pig.Expression.Const.toString()",1,0,n/a,5,0,0,1,2
"org.apache.pig.Expression.InExpression.InExpression(List<Object>)",0,0,n/a,4,0,1,2,1
"org.apache.pig.Expression.InExpression.getValues()",0,1,n/a,3,0,0,1,1
"org.apache.pig.Expression.InExpression.toString()",11,0,n/a,15,2,0,9,3
"org.apache.pig.Expression.OpType.OpType()",0,0,n/a,2,0,0,0,1
"org.apache.pig.Expression.OpType.OpType(String)",0,20,n/a,3,0,1,1,1
"org.apache.pig.Expression.OpType.toString()",0,2,n/a,4,0,0,1,1
"org.apache.pig.Expression.UnaryExpression.UnaryExpression(Expression,OpType)",0,1,n/a,4,0,2,2,1
"org.apache.pig.Expression.UnaryExpression.getExpression()",0,1,n/a,3,0,0,1,1
"org.apache.pig.Expression.UnaryExpression.toString()",2,0,n/a,6,0,0,1,1
"org.apache.pig.Expression.getOpType()",0,10,n/a,6,0,0,1,1
"org.apache.pig.FileInputLoadFunc.getSplitComparable(InputSplit)",5,1,n/a,14,1,1,5,2
"org.apache.pig.FileSplitComparable.FileSplitComparable()",0,0,n/a,3,0,0,0,1
"org.apache.pig.FileSplitComparable.FileSplitComparable(String,long)",0,1,n/a,4,0,2,2,1
"org.apache.pig.FileSplitComparable.compareTo(FileSplitComparable)",2,0,n/a,7,0,1,4,2
"org.apache.pig.FileSplitComparable.equals(Object)",4,0,n/a,24,1,1,18,10
"org.apache.pig.FileSplitComparable.hashCode()",2,0,n/a,12,0,0,5,3
"org.apache.pig.FileSplitComparable.readFields(DataInput)",2,0,n/a,5,0,1,2,1
"org.apache.pig.FileSplitComparable.toString()",0,0,n/a,4,0,0,1,1
"org.apache.pig.FileSplitComparable.write(DataOutput)",2,0,n/a,5,0,1,2,1
"org.apache.pig.FilterFunc.finish()",0,1,n/a,5,0,0,0,1
"org.apache.pig.FuncSpec.FuncSpec(String)",8,48,n/a,15,2,1,8,3
"org.apache.pig.FuncSpec.FuncSpec(String,Schema)",1,1,n/a,10,0,2,2,1
"org.apache.pig.FuncSpec.FuncSpec(String,String)",0,3,n/a,10,0,2,3,1
"org.apache.pig.FuncSpec.FuncSpec(String,String[])",0,6,n/a,9,0,2,2,1
"org.apache.pig.FuncSpec.FuncSpec(String,String[],Schema)",1,1,n/a,10,0,3,2,1
"org.apache.pig.FuncSpec.clone()",2,4,n/a,14,2,0,11,4
"org.apache.pig.FuncSpec.equals(Object)",3,5,n/a,20,3,1,16,13
"org.apache.pig.FuncSpec.getArgStringFromSpec(String)",2,1,n/a,11,0,1,4,2
"org.apache.pig.FuncSpec.getClassName()",0,16,n/a,6,0,0,1,1
"org.apache.pig.FuncSpec.getClassNameFromSpec(String)",2,2,n/a,11,0,1,4,2
"org.apache.pig.FuncSpec.getCtorArgs()",0,5,n/a,6,0,0,1,1
"org.apache.pig.FuncSpec.getInputArgsSchema()",0,9,n/a,6,0,0,1,1
"org.apache.pig.FuncSpec.hashCode()",4,0,n/a,5,0,0,1,2
"org.apache.pig.FuncSpec.parseArguments(String)",10,1,n/a,25,2,1,14,8
"org.apache.pig.FuncSpec.setClassName(String)",0,0,n/a,6,0,1,1,1
"org.apache.pig.FuncSpec.setCtorArgs(String[])",0,4,n/a,6,0,1,1,1
"org.apache.pig.FuncSpec.setInputArgsSchema(Schema)",0,1,n/a,6,0,1,1,1
"org.apache.pig.FuncSpec.toString()",9,33,n/a,21,3,0,14,4
"org.apache.pig.Function.apply(S)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.IndexableLoadFunc.close()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.IndexableLoadFunc.initialize(Configuration)",n/a,3,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.IndexableLoadFunc.seekNear(Tuple)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.IteratingAccumulatorEvalFunc.DelayedQueueIterator.hasNext()",3,0,n/a,18,2,0,12,6
"org.apache.pig.IteratingAccumulatorEvalFunc.DelayedQueueIterator.next()",1,0,n/a,8,0,0,5,2
"org.apache.pig.IteratingAccumulatorEvalFunc.DelayedQueueIterator.remove()",0,0,n/a,2,0,0,0,1
"org.apache.pig.IteratingAccumulatorEvalFunc.accumulate(Tuple)",4,2,n/a,17,2,1,11,9
"org.apache.pig.IteratingAccumulatorEvalFunc.cleanup()",0,3,n/a,10,0,0,7,1
"org.apache.pig.IteratingAccumulatorEvalFunc.exec(Iterator<Tuple>)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.IteratingAccumulatorEvalFunc.getValue()",3,2,n/a,13,2,0,7,4
"org.apache.pig.IteratingAccumulatorEvalFunc.initialize()",6,1,n/a,10,3,0,10,2
"org.apache.pig.IteratingAccumulatorEvalFunc.isFinished()",0,1,n/a,4,0,0,1,1
"org.apache.pig.JVMReuseImpl.cleanupStaticData()",13,2,n/a,23,3,0,14,5
"org.apache.pig.JVMReuseImpl.getMethodNames()",16,1,n/a,15,2,0,9,5
"org.apache.pig.JVMReuseManager.JVMReuseManager()",0,1,n/a,2,0,0,0,1
"org.apache.pig.JVMReuseManager.getInstance()",0,10,n/a,3,0,0,1,1
"org.apache.pig.JVMReuseManager.getStaticDataCleanupMethods()",0,2,n/a,3,0,0,1,1
"org.apache.pig.JVMReuseManager.registerForStaticDataCleanup(Class<?>)",13,8,n/a,16,3,1,6,5
"org.apache.pig.LoadCaster.bytesToBag(byte[],ResourceFieldSchema)",n/a,3,5,n/a,n/a,2,n/a,n/a
"org.apache.pig.LoadCaster.bytesToBigDecimal(byte[])",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadCaster.bytesToBigInteger(byte[])",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadCaster.bytesToBoolean(byte[])",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadCaster.bytesToCharArray(byte[])",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadCaster.bytesToDateTime(byte[])",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadCaster.bytesToDouble(byte[])",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadCaster.bytesToFloat(byte[])",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadCaster.bytesToInteger(byte[])",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadCaster.bytesToLong(byte[])",n/a,4,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadCaster.bytesToMap(byte[],ResourceFieldSchema)",n/a,3,5,n/a,n/a,2,n/a,n/a
"org.apache.pig.LoadCaster.bytesToTuple(byte[],ResourceFieldSchema)",n/a,3,5,n/a,n/a,2,n/a,n/a
"org.apache.pig.LoadFunc.getAbsolutePath(String,Path)",28,10,n/a,60,3,2,29,12
"org.apache.pig.LoadFunc.getCacheFiles()",0,3,n/a,9,0,0,1,1
"org.apache.pig.LoadFunc.getInputFormat()",n/a,8,18,n/a,n/a,0,n/a,n/a
"org.apache.pig.LoadFunc.getLoadCaster()",1,7,n/a,11,0,0,1,1
"org.apache.pig.LoadFunc.getNext()",n/a,22,18,n/a,n/a,0,n/a,n/a
"org.apache.pig.LoadFunc.getPathStrings(String)",8,7,n/a,47,4,1,27,9
"org.apache.pig.LoadFunc.getShipFiles()",0,3,n/a,9,0,0,1,1
"org.apache.pig.LoadFunc.join(AbstractCollection<String>,String)",9,19,n/a,17,1,2,8,3
"org.apache.pig.LoadFunc.prepareToRead(RecordReader,PigSplit)",n/a,6,19,n/a,n/a,2,n/a,n/a
"org.apache.pig.LoadFunc.relativeToAbsolutePath(String,Path)",1,11,n/a,19,0,2,1,1
"org.apache.pig.LoadFunc.setLocation(String,Job)",n/a,16,18,n/a,n/a,2,n/a,n/a
"org.apache.pig.LoadFunc.setUDFContextSignature(String)",0,15,n/a,14,0,1,0,1
"org.apache.pig.LoadFunc.warn(String,Enum)",2,13,n/a,9,0,2,1,1
"org.apache.pig.LoadFuncMetadataWrapper.LoadFuncMetadataWrapper()",1,1,n/a,3,0,0,1,1
"org.apache.pig.LoadFuncMetadataWrapper.getPartitionKeys(String,Job)",2,4,n/a,4,0,2,1,1
"org.apache.pig.LoadFuncMetadataWrapper.getSchema(String,Job)",2,3,n/a,4,0,2,1,1
"org.apache.pig.LoadFuncMetadataWrapper.getStatistics(String,Job)",2,4,n/a,4,0,2,1,1
"org.apache.pig.LoadFuncMetadataWrapper.loadMetadata()",2,4,n/a,8,1,0,3,2
"org.apache.pig.LoadFuncMetadataWrapper.setLoadFunc(LoadMetadata)",1,1,n/a,10,0,1,2,1
"org.apache.pig.LoadFuncMetadataWrapper.setPartitionFilter(Expression)",2,3,n/a,4,0,1,1,1
"org.apache.pig.LoadFuncWrapper.LoadFuncWrapper()",0,1,n/a,1,0,0,0,1
"org.apache.pig.LoadFuncWrapper.getInputFormat()",2,8,n/a,4,0,0,1,1
"org.apache.pig.LoadFuncWrapper.getLoadCaster()",2,7,n/a,4,0,0,1,1
"org.apache.pig.LoadFuncWrapper.getMethodName(int)",4,2,n/a,16,1,1,6,2
"org.apache.pig.LoadFuncWrapper.getNext()",2,22,n/a,4,0,0,1,1
"org.apache.pig.LoadFuncWrapper.loadFunc()",2,9,n/a,9,1,0,3,2
"org.apache.pig.LoadFuncWrapper.prepareToRead(RecordReader,PigSplit)",2,6,n/a,4,0,2,1,1
"org.apache.pig.LoadFuncWrapper.relativeToAbsolutePath(String,Path)",2,11,n/a,4,0,2,1,1
"org.apache.pig.LoadFuncWrapper.setLoadFunc(LoadFunc)",0,1,n/a,9,0,1,1,1
"org.apache.pig.LoadFuncWrapper.setLocation(String,Job)",2,17,n/a,4,0,2,1,1
"org.apache.pig.LoadFuncWrapper.setUDFContextSignature(String)",2,15,n/a,4,0,1,1,1
"org.apache.pig.LoadMetadata.getPartitionKeys(String,Job)",n/a,4,12,n/a,n/a,2,n/a,n/a
"org.apache.pig.LoadMetadata.getSchema(String,Job)",n/a,3,12,n/a,n/a,2,n/a,n/a
"org.apache.pig.LoadMetadata.getStatistics(String,Job)",n/a,4,12,n/a,n/a,2,n/a,n/a
"org.apache.pig.LoadMetadata.setPartitionFilter(Expression)",n/a,3,12,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadPredicatePushdown.getPredicateFields(String,Job)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.LoadPredicatePushdown.getSupportedExpressionTypes()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.LoadPredicatePushdown.setPushdownPredicate(Expression)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.LoadPushDown.RequiredField.RequiredField()",0,2,n/a,3,0,0,0,1
"org.apache.pig.LoadPushDown.RequiredField.RequiredField(String,int,List<RequiredField>,byte)",0,1,n/a,13,0,4,4,1
"org.apache.pig.LoadPushDown.RequiredField.getAlias()",0,1,n/a,6,0,0,1,1
"org.apache.pig.LoadPushDown.RequiredField.getIndex()",0,9,n/a,6,0,0,1,1
"org.apache.pig.LoadPushDown.RequiredField.getSubFields()",0,3,n/a,7,0,0,1,1
"org.apache.pig.LoadPushDown.RequiredField.getType()",0,1,n/a,6,0,0,1,1
"org.apache.pig.LoadPushDown.RequiredField.setAlias(String)",0,2,n/a,4,0,1,1,1
"org.apache.pig.LoadPushDown.RequiredField.setIndex(int)",0,2,n/a,3,0,1,1,1
"org.apache.pig.LoadPushDown.RequiredField.setSubFields(List<RequiredField>)",0,1,n/a,4,0,1,1,1
"org.apache.pig.LoadPushDown.RequiredField.setType(byte)",0,2,n/a,3,0,1,1,1
"org.apache.pig.LoadPushDown.RequiredField.toString()",0,0,n/a,8,0,0,5,3
"org.apache.pig.LoadPushDown.RequiredFieldList.RequiredFieldList()",0,1,n/a,2,0,0,0,1
"org.apache.pig.LoadPushDown.RequiredFieldList.RequiredFieldList(List<RequiredField>)",0,0,n/a,7,0,1,1,1
"org.apache.pig.LoadPushDown.RequiredFieldList.add(RequiredField)",1,2,n/a,8,0,1,1,1
"org.apache.pig.LoadPushDown.RequiredFieldList.getFields()",0,13,n/a,8,0,0,1,1
"org.apache.pig.LoadPushDown.RequiredFieldList.toString()",10,0,n/a,16,2,0,12,4
"org.apache.pig.LoadPushDown.RequiredFieldResponse.RequiredFieldResponse(boolean)",0,6,n/a,3,0,1,1,1
"org.apache.pig.LoadPushDown.RequiredFieldResponse.getRequiredFieldResponse()",0,1,n/a,8,0,0,1,1
"org.apache.pig.LoadPushDown.RequiredFieldResponse.setRequiredFieldResponse(boolean)",0,0,n/a,8,0,1,1,1
"org.apache.pig.LoadPushDown.getFeatures()",n/a,1,5,n/a,n/a,0,n/a,n/a
"org.apache.pig.LoadPushDown.pushProjection(RequiredFieldList)",n/a,3,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.Main.configureLog4J(Properties,PigContext)",34,1,n/a,43,2,2,31,7
"org.apache.pig.Main.determineScriptType(String)",1,2,n/a,4,0,1,1,1
"org.apache.pig.Main.dryrun(String,PigContext)",10,2,n/a,15,1,2,9,2
"org.apache.pig.Main.fetchRemoteParamFiles(List<String>,Properties)",4,1,n/a,9,1,2,5,2
"org.apache.pig.Main.getBuildTime()",0,0,n/a,6,0,0,1,1
"org.apache.pig.Main.getFileFromCanonicalPath(String)",2,1,n/a,3,0,1,1,1
"org.apache.pig.Main.getMajorVersion()",0,0,n/a,6,0,0,1,1
"org.apache.pig.Main.getMinorVersion()",0,0,n/a,6,0,0,1,1
"org.apache.pig.Main.getPatchVersion()",0,0,n/a,6,0,0,1,1
"org.apache.pig.Main.getReturnCodeForStats(int[])",0,3,n/a,5,0,1,1,3
"org.apache.pig.Main.getSvnRevision()",0,0,n/a,6,0,0,1,1
"org.apache.pig.Main.getVersionString()",0,3,n/a,10,0,0,1,1
"org.apache.pig.Main.log4jConfAsProperties(String)",17,1,n/a,29,4,1,18,5
"org.apache.pig.Main.main(String[])",2,0,n/a,13,0,1,1,1
"org.apache.pig.Main.makeListener(Properties)",3,1,n/a,11,1,1,3,2
"org.apache.pig.Main.printProperties()",38,1,n/a,40,0,0,38,1
"org.apache.pig.Main.printScriptRunTime(DateTime)",9,1,n/a,8,0,1,4,1
"org.apache.pig.Main.run(String[],PigProgressNotificationListener)",248,2,n/a,430,7,2,316,81
"org.apache.pig.Main.runEmbeddedScript(PigContext,String,String)",8,4,n/a,21,3,3,14,9
"org.apache.pig.Main.runParamPreprocessor(PigContext,BufferedReader,String,boolean)",4,2,n/a,11,1,4,4,2
"org.apache.pig.Main.usage()",44,3,n/a,49,0,0,43,1
"org.apache.pig.Main.validateLogFile(String,String)",33,5,n/a,83,6,2,49,17
"org.apache.pig.OrderedLoadFunc.getSplitComparable(InputSplit)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.OverwritableStoreFunc.cleanupOutput(POStore,Job)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.OverwritableStoreFunc.shouldOverwrite()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.PigConfiguration.PigConfiguration()",0,0,n/a,1,0,0,0,1
"org.apache.pig.PigConstants.PigConstants()",1,0,n/a,3,0,0,1,1
"org.apache.pig.PigException.PigException()",1,2,n/a,6,0,0,1,1
"org.apache.pig.PigException.PigException(String)",1,5,n/a,8,0,1,1,1
"org.apache.pig.PigException.PigException(String,SourceLocation)",1,1,n/a,10,0,2,2,1
"org.apache.pig.PigException.PigException(String,Throwable)",1,4,n/a,9,0,2,1,1
"org.apache.pig.PigException.PigException(String,int)",1,4,n/a,10,0,2,2,1
"org.apache.pig.PigException.PigException(String,int,SourceLocation)",1,2,n/a,11,0,3,2,1
"org.apache.pig.PigException.PigException(String,int,Throwable)",1,2,n/a,11,0,3,2,1
"org.apache.pig.PigException.PigException(String,int,Throwable,SourceLocation)",1,0,n/a,13,0,4,3,1
"org.apache.pig.PigException.PigException(String,int,boolean)",1,2,n/a,11,0,3,2,1
"org.apache.pig.PigException.PigException(String,int,byte)",1,3,n/a,11,0,3,2,1
"org.apache.pig.PigException.PigException(String,int,byte,SourceLocation)",1,0,n/a,12,0,4,2,1
"org.apache.pig.PigException.PigException(String,int,byte,Throwable)",1,2,n/a,11,0,4,1,1
"org.apache.pig.PigException.PigException(String,int,byte,Throwable,SourceLocation)",1,1,n/a,12,0,5,1,1
"org.apache.pig.PigException.PigException(String,int,byte,boolean)",1,4,n/a,12,0,4,2,1
"org.apache.pig.PigException.PigException(String,int,byte,boolean,String)",1,2,n/a,13,0,5,2,1
"org.apache.pig.PigException.PigException(String,int,byte,boolean,String,SourceLocation)",1,0,n/a,14,0,6,3,1
"org.apache.pig.PigException.PigException(String,int,byte,boolean,String,Throwable)",1,3,n/a,17,0,6,5,1
"org.apache.pig.PigException.PigException(String,int,byte,boolean,String,Throwable,SourceLocation)",1,2,n/a,19,0,7,6,1
"org.apache.pig.PigException.PigException(Throwable)",1,5,n/a,8,0,1,1,1
"org.apache.pig.PigException.determineErrorSource(int)",0,1,n/a,18,1,1,9,9
"org.apache.pig.PigException.getDetailedMessage()",0,3,n/a,7,0,0,1,1
"org.apache.pig.PigException.getErrorCode()",0,17,n/a,7,0,0,1,1
"org.apache.pig.PigException.getErrorSource()",0,6,n/a,7,0,0,1,1
"org.apache.pig.PigException.getMarkedAsShowToUser()",0,2,n/a,11,0,0,1,1
"org.apache.pig.PigException.getSourceLocation()",0,1,n/a,6,0,0,1,1
"org.apache.pig.PigException.isBug(byte)",0,0,n/a,10,0,1,1,2
"org.apache.pig.PigException.isInput(byte)",0,0,n/a,10,0,1,1,2
"org.apache.pig.PigException.isRemoteEnvironment(byte)",0,0,n/a,10,0,1,1,2
"org.apache.pig.PigException.isUserEnvironment(byte)",0,0,n/a,10,0,1,1,2
"org.apache.pig.PigException.retriable()",0,1,n/a,7,0,0,1,1
"org.apache.pig.PigException.setDetailedMessage(String)",0,0,n/a,7,0,1,1,1
"org.apache.pig.PigException.setErrorCode(int)",0,2,n/a,7,0,1,1,1
"org.apache.pig.PigException.setErrorSource(byte)",0,2,n/a,7,0,1,1,1
"org.apache.pig.PigException.setMarkedAsShowToUser(boolean)",0,2,n/a,7,0,1,1,1
"org.apache.pig.PigException.setRetriable(boolean)",0,0,n/a,7,0,1,1,1
"org.apache.pig.PigException.setSourceLocation(SourceLocation)",0,0,n/a,3,0,1,1,1
"org.apache.pig.PigException.toString()",4,6,n/a,23,0,0,3,2
"org.apache.pig.PigRunner.run(String[],PigProgressNotificationListener)",2,0,n/a,3,0,2,1,1
"org.apache.pig.PigServer.Graph.Graph(boolean)",1,3,n/a,4,0,1,2,1
"org.apache.pig.PigServer.Graph.buildPlan(String)",27,7,n/a,6,5,1,38,15
"org.apache.pig.PigServer.Graph.buildQuery()",3,2,n/a,7,1,0,4,2
"org.apache.pig.PigServer.Graph.checkDuplicateStoreLoc(Set<LOStore>)",7,1,n/a,15,2,1,5,4
"org.apache.pig.PigServer.Graph.compile()",2,5,n/a,4,0,0,2,1
"org.apache.pig.PigServer.Graph.countExecutedStores()",2,1,n/a,7,0,0,2,1
"org.apache.pig.PigServer.Graph.duplicate()",9,1,n/a,39,2,0,13,3
"org.apache.pig.PigServer.Graph.getAliasOp()",0,2,n/a,3,0,0,1,1
"org.apache.pig.PigServer.Graph.getAliases()",0,2,n/a,3,0,0,1,1
"org.apache.pig.PigServer.Graph.getLastRel()",0,1,n/a,3,0,0,1,1
"org.apache.pig.PigServer.Graph.getLogicalPlan()",0,0,n/a,3,0,0,1,1
"org.apache.pig.PigServer.Graph.getOperator(String)",1,4,n/a,7,0,1,1,1
"org.apache.pig.PigServer.Graph.getPlan(String)",3,1,n/a,13,2,1,9,3
"org.apache.pig.PigServer.Graph.getScriptCache()",0,1,n/a,3,0,0,1,1
"org.apache.pig.PigServer.Graph.isBatchEmpty()",1,1,n/a,7,1,0,4,3
"org.apache.pig.PigServer.Graph.isBatchOn()",0,2,n/a,3,0,0,1,1
"org.apache.pig.PigServer.Graph.markAsExecuted()",0,1,n/a,2,0,0,0,1
"org.apache.pig.PigServer.Graph.parseQuery()",21,6,n/a,30,2,0,19,5
"org.apache.pig.PigServer.Graph.postProcess()",20,2,n/a,45,4,0,20,10
"org.apache.pig.PigServer.Graph.registerQuery(String,int,boolean,boolean)",17,2,n/a,51,4,4,29,11
"org.apache.pig.PigServer.Graph.removeToLoad(Operator)",7,2,n/a,14,3,1,9,5
"org.apache.pig.PigServer.Graph.skipStores()",8,3,n/a,26,2,0,14,5
"org.apache.pig.PigServer.Graph.validateQuery()",6,1,n/a,11,1,0,7,2
"org.apache.pig.PigServer.PigServer(ExecType)",2,0,n/a,9,0,1,1,1
"org.apache.pig.PigServer.PigServer(ExecType,Configuration)",2,2,n/a,3,0,2,1,1
"org.apache.pig.PigServer.PigServer(ExecType,Properties)",2,2,n/a,3,0,2,1,1
"org.apache.pig.PigServer.PigServer(PigContext)",1,5,n/a,3,0,1,1,1
"org.apache.pig.PigServer.PigServer(PigContext,boolean)",14,11,n/a,19,1,2,11,3
"org.apache.pig.PigServer.PigServer(Properties)",2,3,n/a,3,0,1,1,1
"org.apache.pig.PigServer.PigServer(String)",3,2,n/a,12,0,1,1,1
"org.apache.pig.PigServer.PigServer(String,Properties)",2,0,n/a,3,0,2,1,1
"org.apache.pig.PigServer.addExecTypeProperty(Properties,String)",1,2,n/a,4,0,2,2,1
"org.apache.pig.PigServer.addJarsFromProperties()",11,1,n/a,35,3,0,16,9
"org.apache.pig.PigServer.addPathToSkip(String)",1,1,n/a,9,0,1,1,1
"org.apache.pig.PigServer.buildLp()",2,0,n/a,10,0,0,3,1
"org.apache.pig.PigServer.buildStorePlan(String)",6,2,n/a,11,1,1,5,3
"org.apache.pig.PigServer.capacity()",12,0,n/a,26,2,0,11,4
"org.apache.pig.PigServer.constructScope()",1,1,n/a,11,0,0,1,1
"org.apache.pig.PigServer.debugOff()",7,1,n/a,7,0,0,2,1
"org.apache.pig.PigServer.debugOn()",5,1,n/a,7,0,0,2,1
"org.apache.pig.PigServer.deleteFile(String)",5,0,n/a,14,0,1,5,1
"org.apache.pig.PigServer.discardBatch()",3,1,n/a,13,1,0,5,3
"org.apache.pig.PigServer.dumpSchema(String)",13,2,n/a,32,2,1,17,5
"org.apache.pig.PigServer.dumpSchemaNested(String,String)",9,1,n/a,37,3,2,17,4
"org.apache.pig.PigServer.execute()",12,3,n/a,20,1,0,10,3
"org.apache.pig.PigServer.executeBatch()",1,4,n/a,9,0,0,1,1
"org.apache.pig.PigServer.executeBatch(boolean)",3,2,n/a,16,1,1,4,2
"org.apache.pig.PigServer.executeCompiledLogicalPlan()",4,2,n/a,7,0,0,3,1
"org.apache.pig.PigServer.existsFile(String)",3,0,n/a,10,0,1,2,1
"org.apache.pig.PigServer.explain(String,PrintStream)",1,1,n/a,12,0,2,1,1
"org.apache.pig.PigServer.explain(String,String,boolean,boolean,PrintStream,PrintStream,File,String)",12,4,n/a,54,3,8,20,10
"org.apache.pig.PigServer.fileSize(String)",5,0,n/a,15,0,1,6,1
"org.apache.pig.PigServer.getAliasKeySet()",2,2,n/a,7,0,0,1,1
"org.apache.pig.PigServer.getAliases()",7,0,n/a,15,2,0,6,3
"org.apache.pig.PigServer.getClonedGraph()",2,1,n/a,14,1,0,6,2
"org.apache.pig.PigServer.getCurrentDAG()",0,0,n/a,8,0,0,1,1
"org.apache.pig.PigServer.getExamples(String)",15,2,n/a,28,2,1,17,6
"org.apache.pig.PigServer.getJobs(PigStats)",21,2,n/a,31,3,1,16,5
"org.apache.pig.PigServer.getLastRel()",1,7,n/a,3,0,0,1,1
"org.apache.pig.PigServer.getLogicalPlanData()",1,0,n/a,11,0,0,1,1
"org.apache.pig.PigServer.getOperatorForAlias(String)",3,2,n/a,10,1,1,7,2
"org.apache.pig.PigServer.getPigContext()",0,29,n/a,3,0,0,1,1
"org.apache.pig.PigServer.isBatchEmpty()",2,1,n/a,14,1,0,5,2
"org.apache.pig.PigServer.isBatchOn()",1,10,n/a,11,0,0,1,1
"org.apache.pig.PigServer.launchPlan(LogicalPlan,String)",3,2,n/a,25,1,2,9,4
"org.apache.pig.PigServer.listPaths(String)",10,0,n/a,19,1,1,9,2
"org.apache.pig.PigServer.locateJarFromResources(String)",14,1,n/a,19,2,1,14,4
"org.apache.pig.PigServer.markPredeployedJarsFromProperties()",5,1,n/a,14,3,0,5,4
"org.apache.pig.PigServer.mkdirs(String)",4,0,n/a,13,0,1,4,1
"org.apache.pig.PigServer.openIterator(String)",19,2,n/a,53,2,1,17,7
"org.apache.pig.PigServer.paramMapToList(Map<String, String>)",5,2,n/a,9,2,1,5,3
"org.apache.pig.PigServer.parseAndBuild()",4,7,n/a,17,1,0,6,3
"org.apache.pig.PigServer.printAliases()",3,1,n/a,9,0,0,1,1
"org.apache.pig.PigServer.printHistory(boolean)",6,1,n/a,9,2,1,8,4
"org.apache.pig.PigServer.registerCode(String,String,String)",18,2,n/a,35,1,3,16,6
"org.apache.pig.PigServer.registerFunction(String,FuncSpec)",1,0,n/a,12,0,2,1,1
"org.apache.pig.PigServer.registerJar(String)",14,7,n/a,44,4,1,19,7
"org.apache.pig.PigServer.registerQuery(String)",1,2,n/a,12,0,1,1,1
"org.apache.pig.PigServer.registerQuery(String,int)",1,4,n/a,13,0,2,1,1
"org.apache.pig.PigServer.registerScript(InputStream)",1,2,n/a,11,0,1,1,1
"org.apache.pig.PigServer.registerScript(InputStream,List<String>)",1,0,n/a,13,0,2,1,1
"org.apache.pig.PigServer.registerScript(InputStream,Map<String, String>)",1,0,n/a,13,0,2,1,1
"org.apache.pig.PigServer.registerScript(InputStream,Map<String, String>,List<String>)",9,6,n/a,23,1,3,7,2
"org.apache.pig.PigServer.registerScript(String)",1,2,n/a,8,0,1,1,1
"org.apache.pig.PigServer.registerScript(String,List<String>)",1,0,n/a,9,0,2,1,1
"org.apache.pig.PigServer.registerScript(String,Map<String, String>)",1,0,n/a,9,0,2,1,1
"org.apache.pig.PigServer.registerScript(String,Map<String, String>,List<String>)",6,6,n/a,22,2,3,8,3
"org.apache.pig.PigServer.registerStreamingCommand(String,StreamingCommand)",1,0,n/a,9,0,2,1,1
"org.apache.pig.PigServer.renameFile(String,String)",2,0,n/a,13,0,2,3,1
"org.apache.pig.PigServer.resetScope()",1,0,n/a,4,0,0,1,1
"org.apache.pig.PigServer.setBatchOn()",3,5,n/a,10,1,0,4,2
"org.apache.pig.PigServer.setDefaultParallel(int)",0,1,n/a,7,0,1,1,1
"org.apache.pig.PigServer.setJobName(String)",0,2,n/a,7,0,1,1,1
"org.apache.pig.PigServer.setJobPriority(String)",0,1,n/a,7,0,1,1,1
"org.apache.pig.PigServer.setSkipParseInRegisterForBatch(boolean)",0,1,n/a,7,0,1,1,1
"org.apache.pig.PigServer.setValidateEachStatement(boolean)",0,1,n/a,9,0,1,1,1
"org.apache.pig.PigServer.shutdown()",1,0,n/a,14,0,0,1,1
"org.apache.pig.PigServer.store(String,String)",2,1,n/a,28,0,2,1,1
"org.apache.pig.PigServer.store(String,String,String)",17,3,n/a,51,3,3,13,5
"org.apache.pig.PigServer.storeEx(String,String,String)",10,1,n/a,18,1,3,12,3
"org.apache.pig.PigStreamingBase.deserialize(byte[])",1,1,n/a,5,0,1,1,1
"org.apache.pig.PigStreamingBase.deserialize(byte[],int,int)",n/a,2,2,n/a,n/a,3,n/a,n/a
"org.apache.pig.PigStreamingBase.getLoadCaster()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.PigStreamingBase.serialize(Tuple)",8,1,n/a,12,1,1,6,2
"org.apache.pig.PigStreamingBase.serializeToBytes(Tuple)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.PigToStream.serialize(Tuple)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.PrimitiveEvalFunc.PrimitiveEvalFunc()",4,0,n/a,6,0,0,3,1
"org.apache.pig.PrimitiveEvalFunc.PrimitiveEvalFunc(Class,Class)",0,1,n/a,5,0,2,2,1
"org.apache.pig.PrimitiveEvalFunc.exec(IN)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.PrimitiveEvalFunc.exec(Tuple)",4,7,n/a,11,1,1,5,2
"org.apache.pig.PrimitiveEvalFunc.getInputTypeClass()",0,0,n/a,1,0,0,1,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.ResourceFieldSchema()",0,11,n/a,5,0,0,0,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.ResourceFieldSchema(FieldSchema)",1,2,n/a,17,1,1,7,5
"org.apache.pig.ResourceSchema.ResourceFieldSchema.ResourceFieldSchema(LogicalFieldSchema)",2,1,n/a,16,1,1,7,3
"org.apache.pig.ResourceSchema.ResourceFieldSchema.calcCastString()",1,1,n/a,3,0,0,1,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.getDescription()",0,5,n/a,7,0,0,1,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.getDescription(boolean)",8,3,n/a,12,1,1,7,4
"org.apache.pig.ResourceSchema.ResourceFieldSchema.getName()",0,31,n/a,7,0,0,1,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.getSchema()",0,37,n/a,7,0,0,1,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.getType()",0,30,n/a,7,0,0,1,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.setDescription(String)",0,4,n/a,9,0,1,2,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.setName(String)",0,4,n/a,9,0,1,2,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.setSchema(ResourceSchema)",1,15,n/a,11,0,1,3,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.setType(byte)",0,28,n/a,9,0,1,2,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.throwInvalidSchemaException()",1,4,n/a,5,0,0,2,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.toString()",1,0,n/a,4,0,0,1,1
"org.apache.pig.ResourceSchema.ResourceFieldSchema.validateSchema(ResourceSchema)",3,1,n/a,12,3,1,6,5
"org.apache.pig.ResourceSchema.ResourceSchema()",0,12,n/a,5,0,0,0,1
"org.apache.pig.ResourceSchema.ResourceSchema(LogicalSchema)",4,8,n/a,11,1,1,6,2
"org.apache.pig.ResourceSchema.ResourceSchema(LogicalSchema,SortInfo)",13,1,n/a,27,3,2,16,5
"org.apache.pig.ResourceSchema.ResourceSchema(Schema)",4,9,n/a,11,1,1,6,2
"org.apache.pig.ResourceSchema.ResourceSchema(Schema,SortInfo)",13,1,n/a,27,3,2,16,5
"org.apache.pig.ResourceSchema.equals(ResourceSchema,ResourceSchema)",26,1,n/a,43,2,2,24,19
"org.apache.pig.ResourceSchema.fieldNames()",1,1,n/a,11,1,0,6,2
"org.apache.pig.ResourceSchema.getFields()",0,48,n/a,7,0,0,1,1
"org.apache.pig.ResourceSchema.getSortKeyOrders()",0,2,n/a,8,0,0,1,1
"org.apache.pig.ResourceSchema.getSortKeys()",0,3,n/a,10,0,0,1,1
"org.apache.pig.ResourceSchema.getVersion()",0,2,n/a,7,0,0,1,1
"org.apache.pig.ResourceSchema.setFields(ResourceFieldSchema[])",1,14,n/a,11,0,1,3,2
"org.apache.pig.ResourceSchema.setSortKeyOrders(Order[])",1,0,n/a,12,0,1,3,2
"org.apache.pig.ResourceSchema.setSortKeys(int[])",1,1,n/a,13,0,1,3,2
"org.apache.pig.ResourceSchema.setVersion(int)",0,0,n/a,4,0,1,2,1
"org.apache.pig.ResourceSchema.stringifyResourceSchema(StringBuilder,ResourceSchema,byte,boolean)",12,2,n/a,25,3,4,19,10
"org.apache.pig.ResourceSchema.toString()",3,4,n/a,6,0,0,3,1
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.equals(Object)",7,0,n/a,18,0,1,4,7
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.getMostCommonValues()",0,0,n/a,3,0,0,1,1
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.getMostCommonValuesFreq()",0,0,n/a,3,0,0,1,1
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.getNumDistinctValues()",0,0,n/a,3,0,0,1,1
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.getValueHistogram()",0,0,n/a,3,0,0,1,1
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.getVersion()",0,0,n/a,3,0,0,1,1
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.hashCode()",4,0,n/a,14,0,0,7,1
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.setMostCommonValues(Object[])",1,0,n/a,6,0,1,3,2
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.setMostCommonValuesFreq(float[])",1,0,n/a,6,0,1,3,2
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.setNumDistinctValues(Long)",0,0,n/a,4,0,1,2,1
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.setValueHistogram(Object[])",1,0,n/a,5,0,1,3,2
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.setVersion(int)",0,0,n/a,4,0,1,2,1
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics.toString()",14,1,n/a,14,0,0,14,4
"org.apache.pig.ResourceStatistics.clone()",1,0,n/a,3,0,0,1,1
"org.apache.pig.ResourceStatistics.equals(Object)",6,0,n/a,17,0,1,4,7
"org.apache.pig.ResourceStatistics.getAvgRecordSize()",0,0,n/a,11,0,0,3,4
"org.apache.pig.ResourceStatistics.getFields()",0,0,n/a,3,0,0,1,1
"org.apache.pig.ResourceStatistics.getNumRecords()",0,0,n/a,3,0,0,1,1
"org.apache.pig.ResourceStatistics.getSizeInBytes()",0,2,n/a,6,0,0,1,1
"org.apache.pig.ResourceStatistics.getmBytes()",0,0,n/a,3,0,0,1,1
"org.apache.pig.ResourceStatistics.hashCode()",3,0,n/a,8,0,0,5,3
"org.apache.pig.ResourceStatistics.setAvgRecordSize(Long)",0,0,n/a,8,0,1,1,1
"org.apache.pig.ResourceStatistics.setFields(ResourceFieldStatistics[])",1,0,n/a,5,0,1,3,2
"org.apache.pig.ResourceStatistics.setNumRecords(Long)",0,0,n/a,4,0,1,2,1
"org.apache.pig.ResourceStatistics.setSizeInBytes(Long)",0,1,n/a,8,0,1,1,1
"org.apache.pig.ResourceStatistics.setmBytes(Long)",0,0,n/a,10,0,1,2,1
"org.apache.pig.ResourceStatistics.toString()",6,0,n/a,8,0,0,6,2
"org.apache.pig.SortColInfo.SortColInfo(String,int,Order)",0,2,n/a,10,0,3,3,1
"org.apache.pig.SortColInfo.equals(Object)",2,0,n/a,13,1,1,4,4
"org.apache.pig.SortColInfo.getColIndex()",0,2,n/a,6,0,0,1,1
"org.apache.pig.SortColInfo.getColName()",0,0,n/a,9,0,0,1,1
"org.apache.pig.SortColInfo.getSortOrder()",0,3,n/a,6,0,0,1,1
"org.apache.pig.SortColInfo.hashCode()",1,0,n/a,12,0,0,6,3
"org.apache.pig.SortColInfo.toString()",0,0,n/a,8,0,0,1,2
"org.apache.pig.SortInfo.SortInfo(List<SortColInfo>)",0,3,n/a,6,0,1,1,1
"org.apache.pig.SortInfo.equals(Object)",2,0,n/a,13,1,1,4,3
"org.apache.pig.SortInfo.getSortColInfoList()",1,11,n/a,6,0,0,1,1
"org.apache.pig.SortInfo.hashCode()",1,0,n/a,12,0,0,5,3
"org.apache.pig.SortInfo.isGloballySorted()",0,0,n/a,7,0,0,1,1
"org.apache.pig.SortInfo.toString()",0,0,n/a,7,0,0,1,1
"org.apache.pig.StoreCaster.toBytes(BigDecimal)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(BigInteger)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(Boolean)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(DataBag)",n/a,2,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(DataByteArray)",n/a,0,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(DateTime)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(Double)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(Float)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(Integer)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(Long)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(Map<String, Object>)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(String)",n/a,20,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreCaster.toBytes(Tuple)",n/a,2,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreFunc.checkSchema(ResourceSchema)",0,4,n/a,17,0,1,0,1
"org.apache.pig.StoreFunc.cleanupOnFailure(String,Job)",1,4,n/a,17,0,2,1,1
"org.apache.pig.StoreFunc.cleanupOnFailureImpl(String,Job)",5,8,n/a,16,1,2,4,2
"org.apache.pig.StoreFunc.cleanupOnSuccess(String,Job)",0,4,n/a,17,0,2,0,1
"org.apache.pig.StoreFunc.getOutputFormat()",n/a,8,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.StoreFunc.prepareToWrite(RecordWriter)",n/a,5,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreFunc.putNext(Tuple)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreFunc.relToAbsPathForStoreLocation(String,Path)",1,11,n/a,21,0,2,1,1
"org.apache.pig.StoreFunc.setStoreFuncUDFContextSignature(String)",0,5,n/a,15,0,1,0,1
"org.apache.pig.StoreFunc.setStoreLocation(String,Job)",n/a,8,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.StoreFunc.warn(String,Enum)",2,0,n/a,9,0,2,1,1
"org.apache.pig.StoreFuncInterface.checkSchema(ResourceSchema)",n/a,3,13,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreFuncInterface.cleanupOnFailure(String,Job)",n/a,3,12,n/a,n/a,2,n/a,n/a
"org.apache.pig.StoreFuncInterface.cleanupOnSuccess(String,Job)",n/a,3,12,n/a,n/a,2,n/a,n/a
"org.apache.pig.StoreFuncInterface.getOutputFormat()",n/a,8,13,n/a,n/a,0,n/a,n/a
"org.apache.pig.StoreFuncInterface.prepareToWrite(RecordWriter)",n/a,5,12,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreFuncInterface.putNext(Tuple)",n/a,4,12,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreFuncInterface.relToAbsPathForStoreLocation(String,Path)",n/a,7,12,n/a,n/a,2,n/a,n/a
"org.apache.pig.StoreFuncInterface.setStoreFuncUDFContextSignature(String)",n/a,5,13,n/a,n/a,1,n/a,n/a
"org.apache.pig.StoreFuncInterface.setStoreLocation(String,Job)",n/a,7,13,n/a,n/a,2,n/a,n/a
"org.apache.pig.StoreFuncMetadataWrapper.StoreFuncMetadataWrapper()",1,1,n/a,3,0,0,1,1
"org.apache.pig.StoreFuncMetadataWrapper.setStoreFunc(StoreMetadata)",1,1,n/a,10,0,1,2,1
"org.apache.pig.StoreFuncMetadataWrapper.storeMetadata()",2,2,n/a,8,1,0,3,2
"org.apache.pig.StoreFuncMetadataWrapper.storeSchema(ResourceSchema,String,Job)",2,2,n/a,5,0,3,1,1
"org.apache.pig.StoreFuncMetadataWrapper.storeStatistics(ResourceStatistics,String,Job)",2,1,n/a,5,0,3,1,1
"org.apache.pig.StoreFuncWrapper.StoreFuncWrapper()",0,1,n/a,1,0,0,0,1
"org.apache.pig.StoreFuncWrapper.checkSchema(ResourceSchema)",2,3,n/a,4,0,1,1,1
"org.apache.pig.StoreFuncWrapper.cleanupOnFailure(String,Job)",2,3,n/a,4,0,2,1,1
"org.apache.pig.StoreFuncWrapper.cleanupOnSuccess(String,Job)",2,3,n/a,4,0,2,1,1
"org.apache.pig.StoreFuncWrapper.getMethodName(int)",4,2,n/a,16,1,1,6,2
"org.apache.pig.StoreFuncWrapper.getOutputFormat()",2,8,n/a,4,0,0,1,1
"org.apache.pig.StoreFuncWrapper.prepareToWrite(RecordWriter)",2,5,n/a,4,0,1,1,1
"org.apache.pig.StoreFuncWrapper.putNext(Tuple)",2,4,n/a,4,0,1,1,1
"org.apache.pig.StoreFuncWrapper.relToAbsPathForStoreLocation(String,Path)",2,7,n/a,4,0,2,1,1
"org.apache.pig.StoreFuncWrapper.setStoreFunc(StoreFuncInterface)",0,1,n/a,9,0,1,1,1
"org.apache.pig.StoreFuncWrapper.setStoreFuncUDFContextSignature(String)",2,5,n/a,4,0,1,1,1
"org.apache.pig.StoreFuncWrapper.setStoreLocation(String,Job)",2,8,n/a,4,0,2,1,1
"org.apache.pig.StoreFuncWrapper.storeFunc()",2,9,n/a,9,1,0,3,2
"org.apache.pig.StoreMetadata.storeSchema(ResourceSchema,String,Job)",n/a,2,5,n/a,n/a,3,n/a,n/a
"org.apache.pig.StoreMetadata.storeStatistics(ResourceStatistics,String,Job)",n/a,1,5,n/a,n/a,3,n/a,n/a
"org.apache.pig.StoreResources.getCacheFiles()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.StoreResources.getShipFiles()",n/a,1,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.StreamToPig.deserialize(byte[])",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.StreamToPig.getLoadCaster()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.TerminatingAccumulator.isFinished()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.TypedOutputEvalFunc.TypedOutputEvalFunc()",3,2,n/a,4,0,0,1,1
"org.apache.pig.TypedOutputEvalFunc.getClass(Type)",6,6,n/a,24,2,1,11,5
"org.apache.pig.TypedOutputEvalFunc.getCounterGroup()",2,2,n/a,9,0,0,1,1
"org.apache.pig.TypedOutputEvalFunc.getOutputTypeClass()",0,0,n/a,1,0,0,1,1
"org.apache.pig.TypedOutputEvalFunc.getTypeArguments(Class<T>,Class<? extends T>)",17,2,n/a,48,3,2,25,8
"org.apache.pig.TypedOutputEvalFunc.safeIncrCounter(String,String,Long)",2,4,n/a,3,0,3,1,1
"org.apache.pig.TypedOutputEvalFunc.verifyInput(Tuple,int)",2,0,n/a,4,0,2,1,1
"org.apache.pig.TypedOutputEvalFunc.verifyUdfInput(String,Tuple,int)",8,2,n/a,19,1,3,8,3
"org.apache.pig.backend.BackendException.BackendException()",1,2,n/a,6,0,0,1,1
"org.apache.pig.backend.BackendException.BackendException(String)",1,4,n/a,8,0,1,1,1
"org.apache.pig.backend.BackendException.BackendException(String,Throwable)",1,2,n/a,9,0,2,1,1
"org.apache.pig.backend.BackendException.BackendException(String,int)",1,2,n/a,9,0,2,1,1
"org.apache.pig.backend.BackendException.BackendException(String,int,Throwable)",1,2,n/a,10,0,3,1,1
"org.apache.pig.backend.BackendException.BackendException(String,int,boolean)",1,2,n/a,10,0,3,1,1
"org.apache.pig.backend.BackendException.BackendException(String,int,byte)",1,2,n/a,10,0,3,1,1
"org.apache.pig.backend.BackendException.BackendException(String,int,byte,Throwable)",1,2,n/a,12,0,4,1,1
"org.apache.pig.backend.BackendException.BackendException(String,int,byte,boolean)",1,2,n/a,12,0,4,1,1
"org.apache.pig.backend.BackendException.BackendException(String,int,byte,boolean,String)",1,2,n/a,13,0,5,1,1
"org.apache.pig.backend.BackendException.BackendException(String,int,byte,boolean,String,Throwable)",1,2,n/a,14,0,6,1,1
"org.apache.pig.backend.BackendException.BackendException(Throwable)",1,4,n/a,8,0,1,1,1
"org.apache.pig.backend.datastorage.DataStorage.asCollection(String)",n/a,3,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asContainer(ContainerDescriptor)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asContainer(ContainerDescriptor,ContainerDescriptor)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asContainer(ContainerDescriptor,String)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asContainer(String)",n/a,7,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asContainer(String,String)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asElement(ContainerDescriptor,ElementDescriptor)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asElement(ContainerDescriptor,String)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asElement(ElementDescriptor)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asElement(String)",n/a,31,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.asElement(String,String)",n/a,4,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.close()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.getActiveContainer()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.getConfiguration()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.getStatistics()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.init()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.isContainer(String)",n/a,8,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.setActiveContainer(ContainerDescriptor)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorage.updateConfiguration(Properties)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String,int)",1,0,n/a,9,0,2,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String,int,byte)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String,int,byte,Throwable)",1,0,n/a,12,0,4,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.backend.datastorage.DataStorageException.DataStorageException(Throwable)",1,0,n/a,8,0,1,1,1
"org.apache.pig.backend.datastorage.ElementDescriptor.copy(ElementDescriptor,Properties,boolean)",n/a,5,1,n/a,n/a,3,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.copy(ElementDescriptor,boolean)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.create()",n/a,8,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.create(Properties)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.delete()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.exists()",n/a,17,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.getConfiguration()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.getDataStorage()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.getStatistics()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.open()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.open(Properties)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.rename(ElementDescriptor)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.sopen()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.sopen(Properties)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.systemElement()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.datastorage.ElementDescriptor.updateConfiguration(Properties)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.datastorage.ImmutableOutputStream.ImmutableOutputStream(String)",1,1,n/a,4,0,1,2,1
"org.apache.pig.backend.datastorage.ImmutableOutputStream.write(int)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.datastorage.SeekableInputStream.seek(long,FLAGS)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.datastorage.SeekableInputStream.tell()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecException.ExecException()",1,5,n/a,6,0,0,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String)",1,76,n/a,8,0,1,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String,int)",1,23,n/a,9,0,2,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String,int,byte)",1,148,n/a,10,0,3,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String,int,byte,Throwable)",1,2,n/a,12,0,4,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.backend.executionengine.ExecException.ExecException(Throwable)",1,76,n/a,8,0,1,1,1
"org.apache.pig.backend.executionengine.ExecJob.completionNotification(Object)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getAlias()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getConfiguration()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getException()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getLogs(OutputStream)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getPOStore()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getResults()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getSTDError(OutputStream)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getSTDOut(OutputStream)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getStatistics()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.getStatus()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.hasCompleted()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecJob.kill()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.destroy()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.explain(LogicalPlan,PigContext,PrintStream,String,boolean,File,String)",n/a,1,1,n/a,n/a,7,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.getConfiguration()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.getDataStorage()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.getExecutableManager()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.init()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.instantiatePigStats()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.instantiateScriptState()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.killJob(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.launchPig(LogicalPlan,String,PigContext)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.setConfiguration(Properties)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.executionengine.ExecutionEngine.setProperty(String,String)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.BigDecimalWritable.BigDecimalWritable()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.BigDecimalWritable.BigDecimalWritable(BigDecimal)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.BigDecimalWritable.Comparator.Comparator()",1,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.BigDecimalWritable.Comparator.compare(byte[],int,int,byte[],int,int)",8,1,n/a,11,1,6,5,2
"org.apache.pig.backend.hadoop.BigDecimalWritable.compareTo(BigDecimalWritable)",2,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.BigDecimalWritable.equals(Object)",1,0,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.BigDecimalWritable.get()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.BigDecimalWritable.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.BigDecimalWritable.readFields(DataInput)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.BigDecimalWritable.set(BigDecimal)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.BigDecimalWritable.toString()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.BigDecimalWritable.write(DataOutput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.BigIntegerWritable()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.BigIntegerWritable(BigInteger)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.Comparator.Comparator()",1,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.Comparator.compare(byte[],int,int,byte[],int,int)",8,1,n/a,11,1,6,5,2
"org.apache.pig.backend.hadoop.BigIntegerWritable.compareTo(BigIntegerWritable)",2,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.equals(Object)",1,0,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.BigIntegerWritable.get()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.readFields(DataInput)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.set(BigInteger)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.toString()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.BigIntegerWritable.write(DataOutput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.DateTimeWritable.Comparator.Comparator()",1,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.DateTimeWritable.Comparator.compare(byte[],int,int,byte[],int,int)",5,1,n/a,6,0,6,3,1
"org.apache.pig.backend.hadoop.DateTimeWritable.DateTimeWritable()",0,1,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.DateTimeWritable.DateTimeWritable(DateTime)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.DateTimeWritable.compareTo(Object)",1,0,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.DateTimeWritable.equals(Object)",1,0,n/a,12,1,1,4,2
"org.apache.pig.backend.hadoop.DateTimeWritable.get()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.DateTimeWritable.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.DateTimeWritable.readFields(DataInput)",4,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.DateTimeWritable.set(DateTime)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.DateTimeWritable.toString()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.DateTimeWritable.write(DataOutput)",5,0,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.DoubleWritable.Comparator.Comparator()",1,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.DoubleWritable.Comparator.compare(byte[],int,int,byte[],int,int)",2,1,n/a,6,0,6,3,3
"org.apache.pig.backend.hadoop.DoubleWritable.DoubleWritable()",0,1,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.DoubleWritable.DoubleWritable(double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.DoubleWritable.compareTo(Object)",0,0,n/a,4,0,1,2,3
"org.apache.pig.backend.hadoop.DoubleWritable.equals(Object)",0,0,n/a,10,1,1,4,2
"org.apache.pig.backend.hadoop.DoubleWritable.get()",0,1,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.DoubleWritable.hashCode()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.DoubleWritable.readFields(DataInput)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.DoubleWritable.set(double)",0,1,n/a,1,0,1,1,1
"org.apache.pig.backend.hadoop.DoubleWritable.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.DoubleWritable.write(DataOutput)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.HDataType.findTypeFromClassName(String)",6,1,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.HDataType.findTypeFromNullableWritable(PigNullableWritable)",3,1,n/a,31,1,1,27,13
"org.apache.pig.backend.hadoop.HDataType.getNewWritableComparable(byte)",17,1,n/a,41,2,1,35,17
"org.apache.pig.backend.hadoop.HDataType.getWritableComparable(String)",7,0,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.HDataType.getWritableComparableTypes(Object,byte)",41,13,n/a,102,3,2,94,31
"org.apache.pig.backend.hadoop.HDataType.getWritableComparableTypes(byte)",4,2,n/a,54,2,1,49,16
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.AbstractAccumuloStorage(String,String)",4,1,n/a,9,0,2,4,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.checkSchema(ResourceSchema)",6,3,n/a,10,1,1,5,2
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.cleanupOnFailure(String,Job)",0,3,n/a,2,0,2,0,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.cleanupOnSuccess(String,Job)",0,3,n/a,2,0,2,0,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.clearUnset(Configuration,Map<String, String>)",9,1,n/a,22,2,2,6,3
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.configureInputFormat(Job)",0,1,n/a,8,0,1,0,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.configureOutputFormat(Job)",0,1,n/a,8,0,1,0,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.extractArgs(CommandLine,AccumuloStorageOptions)",42,1,n/a,75,2,2,35,14
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getCommandLine()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getEntries(Configuration,String)",5,2,n/a,17,2,2,6,3
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getInputFormat()",1,8,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getInputFormatEntries(Configuration)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getLoadCaster()",0,7,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getMutations(Tuple)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getNext()",6,22,n/a,14,1,0,8,4
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getOutputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getOutputFormatEntries(Configuration)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getTuple(Key,Value)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getUDFProperties()",3,1,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.getWriter()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.loadDependentJars(Configuration)",1,2,n/a,17,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.makePair(String,String)",3,2,n/a,4,0,2,1,3
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.objToBytes(Object,byte)",16,4,n/a,42,1,2,35,18
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.objToText(Object,byte)",4,2,n/a,8,1,2,5,2
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.objectToText(Object,ResourceFieldSchema)",2,1,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.parseColumns(String)",9,2,n/a,22,2,1,7,5
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.prepareToRead(RecordReader,PigSplit)",0,6,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.prepareToWrite(RecordWriter)",0,5,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.putNext(Tuple)",4,4,n/a,10,2,1,5,3
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.relToAbsPathForStoreLocation(String,Path)",1,7,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.relativeToAbsolutePath(String,Path)",0,12,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.schemaToType(Object,ResourceFieldSchema)",2,2,n/a,4,0,2,1,2
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.schemaToType(Object,int,ResourceFieldSchema[])",2,2,n/a,5,0,3,1,2
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.setLocation(String,Job)",30,16,n/a,50,2,2,32,9
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.setLocationFromUri(String)",28,2,n/a,54,3,1,39,19
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.setStoreFuncUDFContextSignature(String)",0,5,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.setStoreLocation(String,Job)",19,7,n/a,22,1,2,16,2
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.setUDFContextSignature(String)",0,15,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.simpleUnset(Configuration,Map<String, String>)",12,1,n/a,27,2,2,12,6
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.tupleToBytes(Tuple,int,ResourceFieldSchema[])",3,0,n/a,6,0,3,3,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.tupleToText(Tuple,int,ResourceFieldSchema[])",3,0,n/a,6,0,3,3,1
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage.unsetEntriesFromConfiguration(Configuration,Map<String, String>)",4,2,n/a,27,1,2,8,4
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToBag(byte[],ResourceFieldSchema)",1,3,n/a,8,0,2,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToBigDecimal(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToBigInteger(byte[])",6,3,n/a,12,0,1,8,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToBoolean(byte[])",1,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToCharArray(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToDateTime(byte[])",2,3,n/a,8,0,1,2,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToDouble(byte[])",2,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToFloat(byte[])",2,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToInteger(byte[])",1,4,n/a,10,1,1,8,2
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToLong(byte[])",1,5,n/a,10,1,1,8,2
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToMap(byte[],ResourceFieldSchema)",1,3,n/a,8,0,2,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.bytesToTuple(byte[],ResourceFieldSchema)",1,3,n/a,8,0,2,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(BigDecimal)",1,20,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(BigInteger)",7,20,n/a,21,1,1,13,2
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(Boolean)",0,20,n/a,4,0,1,1,2
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(DataBag)",1,2,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(DataByteArray)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(DateTime)",2,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(Double)",2,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(Float)",2,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(Integer)",1,20,n/a,11,1,1,9,2
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(Long)",1,20,n/a,11,1,1,9,2
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(Map<String, Object>)",1,20,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(String)",1,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter.toBytes(Tuple)",1,2,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorage.AccumuloStorage()",1,0,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorage.AccumuloStorage(String)",1,0,n/a,14,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorage.AccumuloStorage(String,String)",1,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorage.addColumn(Mutation,String,String,Value)",5,3,n/a,23,1,4,7,3
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorage.configureInputFormat(Job)",2,1,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorage.getMutations(Tuple)",43,1,n/a,68,4,1,44,16
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorage.getTuple(Key,Value)",84,1,n/a,121,6,2,68,19
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorageOptions.AccumuloStorageOptions()",11,1,n/a,13,0,0,11,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorageOptions.getAuthorizations(CommandLine)",3,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorageOptions.getCommandLine(String)",5,1,n/a,10,1,1,6,2
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorageOptions.getHelpMessage()",0,1,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorageOptions.getInt(CommandLine,Option)",3,2,n/a,4,0,2,2,2
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorageOptions.getLong(CommandLine,Option)",3,1,n/a,4,0,2,2,2
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorageOptions.hasAuthorizations(CommandLine)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.Column.Column(String)",16,2,n/a,36,2,1,22,7
"org.apache.pig.backend.hadoop.accumulo.Column.equals(Object)",2,0,n/a,22,3,1,14,8
"org.apache.pig.backend.hadoop.accumulo.Column.getColumnFamily()",0,8,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.Column.getColumnQualifier()",0,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.Column.getType()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.Column.matchAll()",2,0,n/a,3,0,0,1,2
"org.apache.pig.backend.hadoop.accumulo.Column.toString()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.accumulo.FixedByteArrayOutputStream.FixedByteArrayOutputStream(byte[])",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.FixedByteArrayOutputStream.write(byte[],int,int)",1,0,n/a,5,0,3,2,1
"org.apache.pig.backend.hadoop.accumulo.FixedByteArrayOutputStream.write(int)",0,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.accumulo.Utils.addDependencyJars(Configuration,Class<?>...)",16,1,n/a,33,2,2,18,6
"org.apache.pig.backend.hadoop.accumulo.Utils.copyToZipStream(InputStream,ZipEntry,ZipOutputStream)",4,2,n/a,10,1,3,6,2
"org.apache.pig.backend.hadoop.accumulo.Utils.createJar(File,File)",10,1,n/a,13,2,2,8,3
"org.apache.pig.backend.hadoop.accumulo.Utils.findContainingJar(Class<?>,Map<String, String>)",16,1,n/a,41,3,2,13,4
"org.apache.pig.backend.hadoop.accumulo.Utils.findOrCreateJar(Class<?>,FileSystem,Map<String, String>)",10,1,n/a,33,1,3,8,5
"org.apache.pig.backend.hadoop.accumulo.Utils.getJar(Class<?>)",10,1,n/a,33,1,1,14,4
"org.apache.pig.backend.hadoop.accumulo.Utils.jarDir(File,String,ZipOutputStream)",17,1,n/a,30,3,3,18,4
"org.apache.pig.backend.hadoop.accumulo.Utils.jarFinderGetJar(Class)",35,1,n/a,53,5,1,30,8
"org.apache.pig.backend.hadoop.accumulo.Utils.updateMap(String,Map<String, String>)",10,1,n/a,29,3,2,12,6
"org.apache.pig.backend.hadoop.accumulo.Utils.zipDir(File,String,ZipOutputStream,boolean)",19,2,n/a,36,6,4,22,8
"org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil.getLocalFSProperties()",12,3,n/a,22,2,0,11,4
"org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil.mergeConf(Configuration,Configuration)",3,6,n/a,10,1,2,2,2
"org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil.replaceConfigForLocalMode(Configuration)",6,1,n/a,10,2,1,6,3
"org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil.toConfiguration(Properties)",1,28,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil.toConfiguration(Properties,boolean)",6,10,n/a,11,1,2,8,2
"org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil.toProperties(Configuration)",7,13,n/a,10,1,1,7,2
"org.apache.pig.backend.hadoop.datastorage.HConfiguration.HConfiguration()",0,1,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.datastorage.HConfiguration.HConfiguration(Configuration)",6,0,n/a,13,2,1,5,3
"org.apache.pig.backend.hadoop.datastorage.HConfiguration.getConfiguration()",6,0,n/a,10,1,0,7,2
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.HDataStorage(Properties)",1,3,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.HDataStorage(URI,Properties)",1,5,n/a,5,0,2,3,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asCollection(String)",11,3,n/a,19,3,1,15,5
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asContainer(ContainerDescriptor)",2,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asContainer(ContainerDescriptor,ContainerDescriptor)",3,0,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asContainer(ContainerDescriptor,String)",2,0,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asContainer(String)",1,7,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asContainer(String,String)",1,0,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asElement(ContainerDescriptor,ElementDescriptor)",3,0,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asElement(ContainerDescriptor,String)",2,1,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asElement(ElementDescriptor)",2,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asElement(String)",3,31,n/a,8,1,1,3,2
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.asElement(String,String)",3,4,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.close()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.getActiveContainer()",2,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.getConfiguration()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.getHFS()",0,18,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.getStatistics()",13,1,n/a,13,1,0,10,2
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.init()",6,2,n/a,17,2,0,9,5
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.isContainer(String)",4,9,n/a,15,2,1,9,4
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.setActiveContainer(ContainerDescriptor)",3,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HDataStorage.updateConfiguration(Properties)",6,0,n/a,15,1,1,8,3
"org.apache.pig.backend.hadoop.datastorage.HDirectory.HDirectory(HDataStorage,Path)",1,3,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.HDirectory(HDataStorage,Path,Path)",1,1,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.HDirectory(HDataStorage,Path,String)",1,1,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.HDirectory(HDataStorage,String)",1,3,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.HDirectory(HDataStorage,String,Path)",1,1,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.HDirectory(HDataStorage,String,String)",1,1,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.copy(ContainerDescriptor,Properties,boolean)",21,0,n/a,44,4,3,21,9
"org.apache.pig.backend.hadoop.datastorage.HDirectory.create(Properties)",4,1,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.iterator()",15,1,n/a,36,3,0,11,4
"org.apache.pig.backend.hadoop.datastorage.HDirectory.open()",1,7,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.open(Properties)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.sopen()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HDirectory.sopen(Properties)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.HFile(HDataStorage,Path)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.HFile(HDataStorage,Path,Path)",1,0,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.HFile(HDataStorage,Path,String)",1,0,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.HFile(HDataStorage,String)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.HFile(HDataStorage,String,Path)",1,0,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.HFile(HDataStorage,String,String)",1,0,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.create(Properties)",2,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.open()",2,7,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.open(Properties)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.sopen()",6,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HFile.sopen(Properties)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.HPath(HDataStorage,Path)",0,5,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.datastorage.HPath.HPath(HDataStorage,Path,Path)",1,11,n/a,4,0,3,2,1
"org.apache.pig.backend.hadoop.datastorage.HPath.HPath(HDataStorage,Path,String)",2,10,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.HPath(HDataStorage,String)",2,4,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.HPath(HDataStorage,String,Path)",2,10,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.HPath(HDataStorage,String,String)",3,10,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.compareTo(ElementDescriptor)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.copy(ElementDescriptor,Properties,boolean)",7,6,n/a,21,1,3,9,2
"org.apache.pig.backend.hadoop.datastorage.HPath.copy(ElementDescriptor,boolean)",1,2,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.create()",1,8,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.create(Properties)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.datastorage.HPath.delete()",2,7,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.equals(Object)",1,0,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.datastorage.HPath.exists()",2,18,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.getConfiguration()",11,0,n/a,9,0,0,7,1
"org.apache.pig.backend.hadoop.datastorage.HPath.getDataStorage()",0,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.getHFS()",1,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.getPath()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.getStatistics()",11,3,n/a,9,0,0,7,1
"org.apache.pig.backend.hadoop.datastorage.HPath.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.open()",n/a,6,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.datastorage.HPath.rename(ElementDescriptor)",2,2,n/a,6,1,1,2,2
"org.apache.pig.backend.hadoop.datastorage.HPath.setPermission(FsPermission)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.sopen()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.datastorage.HPath.systemElement()",4,4,n/a,5,0,0,1,3
"org.apache.pig.backend.hadoop.datastorage.HPath.toString()",3,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HPath.updateConfiguration(Properties)",5,0,n/a,8,1,1,4,2
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.HSeekableInputStream(FSDataInputStream,long)",0,1,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.available()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.close()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.mark(int)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.markSupported()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.read()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.read(byte[])",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.read(byte[],int,int)",1,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.reset()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.seek(long,FLAGS)",3,1,n/a,24,2,2,16,5
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.skip(long)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream.tell()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.HExecutionEngine(PigContext)",1,2,n/a,5,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.compile(LogicalPlan,Properties)",6,4,n/a,13,1,2,9,2
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.destroy()",1,1,n/a,6,1,0,2,2
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.explain(LogicalPlan,PigContext,PrintStream,String,boolean,File,String)",17,1,n/a,33,2,7,21,5
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.getConfiguration()",3,0,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.getDataStorage()",0,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.getExecConf(Properties)",12,2,n/a,26,2,1,14,5
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.getExecutableManager()",1,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.getForEachInnerLogToPhyMap(LogicalPlan)",12,1,n/a,20,3,1,13,4
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.getJobConf()",3,2,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.getLocalConf()",4,2,n/a,7,0,0,5,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.getLogToPhyMap()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.getS3Conf()",11,1,n/a,17,2,0,11,4
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.init()",2,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.init(Properties)",30,2,n/a,67,2,1,31,15
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.killJob(String)",2,1,n/a,6,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.launchPig(LogicalPlan,String,PigContext)",10,1,n/a,24,2,3,10,5
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.setConfiguration(Properties)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.setProperty(String,String)",2,2,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.HJob.HJob(JOB_STATUS,PigContext,POStore,String)",1,1,n/a,10,0,4,5,1
"org.apache.pig.backend.hadoop.executionengine.HJob.HJob(JOB_STATUS,PigContext,POStore,String,PigStats)",1,4,n/a,12,0,5,6,1
"org.apache.pig.backend.hadoop.executionengine.HJob.completionNotification(Object)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.getAlias()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.getConfiguration()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.getException()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.getLogs(OutputStream)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.getPOStore()",0,0,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.getResults()",14,1,n/a,3,3,0,31,9
"org.apache.pig.backend.hadoop.executionengine.HJob.getSTDError(OutputStream)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.getSTDOut(OutputStream)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.getStatistics()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.getStatus()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.hasCompleted()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.kill()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.HJob.setException(Exception)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String)",1,2,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String,int)",1,0,n/a,9,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String,int,byte)",1,17,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String,int,byte,Throwable)",1,0,n/a,12,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.JobCreationException.JobCreationException(Throwable)",1,2,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.Launcher.HangingJobKiller.HangingJobKiller()",0,1,n/a,1,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.Launcher.HangingJobKiller.run()",2,0,n/a,8,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.Launcher.JobControlThreadExceptionHandler.uncaughtException(Thread,Throwable)",1,0,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.Launcher.Launcher()",7,1,n/a,8,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.Launcher.calculateProgress(JobControl)",4,1,n/a,21,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.Launcher.computeTimeSpent(Iterator<TaskReport>)",4,2,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.Launcher.destroy()",0,1,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.Launcher.explain(PhysicalPlan,PigContext,PrintStream,String,boolean)",n/a,1,2,n/a,n/a,5,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.Launcher.getErrorMessages(Iterator<TaskReport>,String,boolean,PigContext)",28,2,n/a,70,6,4,39,15
"org.apache.pig.backend.hadoop.executionengine.Launcher.getExceptionFromString(String)",8,3,n/a,35,2,1,17,3
"org.apache.pig.backend.hadoop.executionengine.Launcher.getExceptionFromStrings(String[],int)",53,2,n/a,195,5,2,76,16
"org.apache.pig.backend.hadoop.executionengine.Launcher.getStackTraceElement(String)",22,1,n/a,83,2,1,38,6
"org.apache.pig.backend.hadoop.executionengine.Launcher.getTotalHadoopTimeSpent()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.Launcher.isComplete(double)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.Launcher.kill()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.Launcher.killJob(String,Configuration)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.Launcher.launchPig(PhysicalPlan,String,PigContext)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.Launcher.reset()",1,3,n/a,8,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.Launcher.setJobException(Throwable)",3,2,n/a,10,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.MapRedResult.MapRedResult(FileSpec,int)",0,0,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.TaskContext.get()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.TaskContext.getCounter(Enum<?>)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.TaskContext.getCounter(String,String)",n/a,1,3,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.TaskContext.getProgress()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.TaskContext.incrCounter(Enum<?>,long)",n/a,1,3,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.TaskContext.incrCounter(String,String,long)",n/a,1,3,n/a,n/a,3,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.TaskContext.progress()",0,1,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.TaskContext.setStatus(String)",0,1,n/a,2,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchContext.getCounter(Enum<?>)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchContext.getCounter(String,String)",1,2,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchLauncher.FetchLauncher(PigContext)",2,2,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchLauncher.explain(PhysicalPlan,PigContext,PrintStream,String)",6,1,n/a,24,1,4,7,2
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchLauncher.init(PhysicalPlan,POStore)",32,1,n/a,27,1,2,24,2
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchLauncher.launchPig(PhysicalPlan)",13,1,n/a,24,1,1,9,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchLauncher.runPipeline(POStore)",3,1,n/a,24,3,1,17,7
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.FetchablePlanVisitor(PigContext,PhysicalPlan)",2,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.isPlanFetchable()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.isTempPath(String)",8,1,n/a,6,0,1,4,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visit()",1,115,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitCollectedGroup(POCollectedGroup)",0,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitCounter(POCounter)",0,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitCross(POCross)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitDemux(PODemux)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitDistinct(PODistinct)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitFRJoin(POFRJoin)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitGlobalRearrange(POGlobalRearrange)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitLoad(POLoad)",1,3,n/a,6,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitLocalRearrange(POLocalRearrange)",0,5,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitMergeCoGroup(POMergeCogroup)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitMergeJoin(POMergeJoin)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitNative(PONative)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitPOOptimizedForEach(POOptimizedForEach)",0,2,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitPackage(POPackage)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitPartialAgg(POPartialAgg)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitPartitionRearrange(POPartitionRearrange)",0,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitPreCombinerLocalRearrange(POPreCombinerLocalRearrange)",0,3,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitRank(PORank)",0,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitSkewedJoin(POSkewedJoin)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitSort(POSort)",0,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitSplit(POSplit)",0,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor.visitStore(POStore)",10,2,n/a,22,2,1,10,5
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.init(PhysicalPlan)",2,1,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.isEligible(PigContext,PhysicalPlan)",10,1,n/a,28,2,2,13,5
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.isFetchEnabled(PigContext)",3,1,n/a,10,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.isPlanFetchable(PigContext,PhysicalPlan)",9,2,n/a,31,3,2,12,5
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchPOStoreImpl.FetchPOStoreImpl(PigContext)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchPOStoreImpl.cleanUp()",3,1,n/a,13,2,0,6,3
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchPOStoreImpl.createStoreFunc(POStore)",18,1,n/a,27,1,1,18,3
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchPOStoreImpl.tearDown()",5,1,n/a,15,2,0,8,4
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchProgressableReporter.progress()",0,14,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchProgressableReporter.progress(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchTaskContext.FetchTaskContext(FetchContext)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchTaskContext.get()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchTaskContext.getCounter(Enum<?>)",1,1,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchTaskContext.getCounter(String,String)",1,1,n/a,7,1,2,3,2
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchTaskContext.incrCounter(Enum<?>,long)",2,1,n/a,9,1,2,5,2
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchTaskContext.incrCounter(String,String,long)",2,1,n/a,9,1,3,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.AccumulatorOptimizer.AccumulatorOptimizer(MROperPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.AccumulatorOptimizer.visitMROp(MapReduceOper)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.clone()",4,4,n/a,11,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.equals(Object)",6,0,n/a,14,1,1,11,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.getColumnInfo(int)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.getColumnInfos()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.hashCode()",1,0,n/a,7,0,0,4,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.insert(List<Integer>,byte)",2,2,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.insert(int,byte)",2,3,n/a,10,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.insertColumnChainInfo(ColumnChainInfo)",1,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.insertInReduce(POProject)",18,4,n/a,29,2,1,13,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.size()",1,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.ColumnInfo(List<Integer>,byte)",0,2,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.ColumnInfo(int,byte)",0,1,n/a,10,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.clone()",3,1,n/a,9,0,0,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.equals(Object)",1,0,n/a,15,0,1,6,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.getColumns()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.getResultType()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.getStartCol()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.hashCode()",2,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.isRangeProject()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.isStar()",0,1,n/a,3,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo.toString()",3,1,n/a,9,0,0,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.CombinerOptimizer(MROperPlan,boolean)",2,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.CombinerOptimizer(MROperPlan,boolean,CompilationMessageCollector)",2,1,n/a,6,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.getMessageCollector()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.visitMROp(MapReduceOper)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.DistinctCombiner.Combine.reduce(PigNullableWritable,Iterable<NullableTuple>,Context)",4,0,n/a,13,0,3,4,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.DistinctCombiner.Combine.setup(Context)",2,0,n/a,8,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.FileBasedOutputSizeReader.getLocationUri(POStore)",2,2,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.FileBasedOutputSizeReader.getOutputSize(POStore,Configuration)",12,1,n/a,23,2,2,11,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.FileBasedOutputSizeReader.supports(POStore,Configuration)",8,2,n/a,26,4,2,9,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.IllustrateDummyReporter.getCounter(Enum<?>)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.IllustrateDummyReporter.getCounter(String,String)",1,0,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.IllustrateDummyReporter.getProgress()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.IllustrateDummyReporter.progress()",0,0,n/a,4,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.IllustrateDummyReporter.setStatus(String)",0,0,n/a,4,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.InputSizeReducerEstimator.estimateNumberOfReducers(Job,MapReduceOper)",9,1,n/a,23,1,2,12,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.InputSizeReducerEstimator.getInputSizeFromLoader(POLoad,Job)",13,1,n/a,28,1,2,10,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.InputSizeReducerEstimator.getTotalInputFileSize(Configuration,List<POLoad>,Job)",1,1,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.InputSizeReducerEstimator.getTotalInputFileSize(Configuration,List<POLoad>,Job,long)",9,2,n/a,50,7,4,19,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.JobControlCompiler(PigContext,Configuration)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.JobControlCompiler(PigContext,Configuration,Configuration)",2,2,n/a,7,0,3,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.JoinDistributedCacheVisitor.JoinDistributedCacheVisitor(PhysicalPlan,PigContext,Configuration)",2,2,n/a,7,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.JoinDistributedCacheVisitor.visitFRJoin(POFRJoin)",28,3,n/a,47,3,1,25,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.JoinDistributedCacheVisitor.visitMergeCoGroup(POMergeCogroup)",6,3,n/a,18,1,1,10,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.JoinDistributedCacheVisitor.visitMergeJoin(POMergeJoin)",5,3,n/a,18,1,1,10,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.ParallelConstantVisitor.ParallelConstantVisitor(PhysicalPlan,int)",2,1,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.ParallelConstantVisitor.visitConstant(ConstantExpression)",5,2,n/a,16,3,1,8,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigBagWritableComparator.PigBagWritableComparator()",4,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigBigDecimalWritableComparator.PigBigDecimalWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigBigIntegerWritableComparator.PigBigIntegerWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigBooleanWritableComparator.PigBooleanWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigCharArrayWritableComparator.PigCharArrayWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigDBAWritableComparator.PigDBAWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigDateTimeWritableComparator.PigDateTimeWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigDoubleWritableComparator.PigDoubleWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigFloatWritableComparator.PigFloatWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingBagWritableComparator.PigGroupingBagWritableComparator()",4,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingBigDecimalWritableComparator.PigGroupingBigDecimalWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingBigIntegerWritableComparator.PigGroupingBigIntegerWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingBooleanWritableComparator.PigGroupingBooleanWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingCharArrayWritableComparator.PigGroupingCharArrayWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingDBAWritableComparator.PigGroupingDBAWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingDateTimeWritableComparator.PigGroupingDateTimeWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingDoubleWritableComparator.PigGroupingDoubleWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingFloatWritableComparator.PigGroupingFloatWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingIntWritableComparator.PigGroupingIntWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingLongWritableComparator.PigGroupingLongWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingPartitionWritableComparator.PigGroupingPartitionWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingTupleWritableComparator.PigGroupingTupleWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigIntWritableComparator.PigIntWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigLongWritableComparator.PigLongWritableComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigSecondaryKeyGroupComparator.PigSecondaryKeyGroupComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigSecondaryKeyGroupComparator.compare(WritableComparable,WritableComparable)",22,0,n/a,46,3,2,33,18
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigTupleWritableComparator.PigTupleWritableComparator()",3,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigWritableComparator.PigWritableComparator(Class)",1,12,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigWritableComparator.compare(byte[],int,int,byte[],int,int)",1,0,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.addSingleFileToDistributedCache(PigContext,Configuration,String,String)",8,4,n/a,21,1,4,8,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.addToDistributedCache(URI,Configuration)",5,2,n/a,7,1,2,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.adjustNumReducers(MROperPlan,MapReduceOper,Job)",14,1,n/a,35,1,3,13,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.calculateRuntimeReducers(MapReduceOper,Job)",2,2,n/a,32,2,2,14,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.compile(MROperPlan,String)",15,2,n/a,46,3,2,24,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.configureCompression(Configuration)",6,2,n/a,14,2,1,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.estimateNumberOfReducers(Job,MapReduceOper)",8,1,n/a,18,0,2,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getCacheStagingDir(Configuration)",7,1,n/a,10,0,1,7,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getExistingDistCacheFilePath(Configuration,URL)",10,1,n/a,23,3,2,9,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getFromCache(PigContext,Configuration,URL)",24,2,n/a,42,2,3,30,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getGroupName(Collection<String>)",1,1,n/a,7,1,1,4,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getJob(MROperPlan,MapReduceOper,Configuration,PigContext)",341,1,n/a,486,7,4,309,105
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getJobMroMap()",1,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getStores(Job)",2,2,n/a,11,1,1,4,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.moveResults(List<Job>)",12,1,n/a,26,3,1,11,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.moveResults(Path,String,FileSystem)",11,3,n/a,18,2,3,9,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.okToRunLocal(Job,MapReduceOper,List<POLoad>)",7,1,n/a,18,1,3,13,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.putJarOnClassPathThroughDistributedCache(PigContext,Configuration,URL)",10,2,n/a,35,2,3,9,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.removePart(Path,String)",4,2,n/a,5,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.reset()",4,2,n/a,8,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.saveCounters(Job,String,boolean)",28,1,n/a,60,3,3,32,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.selectComparator(MapReduceOper,byte,Job)",45,1,n/a,129,2,3,111,35
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.setOutputFormat(Job)",9,1,n/a,20,2,1,8,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.setupDistributedCache(PigContext,Configuration,Properties,String,boolean)",3,2,n/a,12,1,5,4,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.setupDistributedCache(PigContext,Configuration,String[],boolean)",19,5,n/a,47,5,4,30,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.setupDistributedCacheForJoin(MapReduceOper,PigContext,Configuration)",4,1,n/a,7,0,3,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.shipToHDFS(PigContext,Configuration,URL)",14,1,n/a,38,2,3,18,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.toURI(Path)",11,1,n/a,28,1,1,14,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.updateMROpPlan(List<Job>)",14,2,n/a,28,2,1,14,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.KeyTypeDiscoveryVisitor.KeyTypeDiscoveryVisitor(MROperPlan)",2,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.KeyTypeDiscoveryVisitor.PhyPlanKeyTypeVisitor.PhyPlanKeyTypeVisitor(PhysicalPlan,MapReduceOper)",2,2,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.KeyTypeDiscoveryVisitor.PhyPlanKeyTypeVisitor.visitLocalRearrange(POLocalRearrange)",1,5,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.KeyTypeDiscoveryVisitor.visitMROp(MapReduceOper)",11,2,n/a,53,3,1,26,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LimitAdjuster.LimitAdjuster(MROperPlan,PigContext)",7,1,n/a,7,0,2,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LimitAdjuster.adjust()",58,1,n/a,98,3,0,64,17
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LimitAdjuster.connectMapToReduceLimitedSort(MapReduceOper,MapReduceOper)",12,1,n/a,24,1,2,17,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LimitAdjuster.splitReducerForLimit(MapReduceOper,MapReduceOper)",16,1,n/a,31,2,2,22,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LimitAdjuster.visitMROp(MapReduceOper)",1,2,n/a,13,1,1,2,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LocalExecType.accepts(Properties)",3,1,n/a,11,2,1,5,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LocalExecType.getExecutionEngine(PigContext)",1,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LocalExecType.getExecutionEngineClass()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LocalExecType.isLocal()",0,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LocalExecType.name()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LocalExecType.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.FindKeyTypeVisitor.FindKeyTypeVisitor(PhysicalPlan)",2,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.FindKeyTypeVisitor.visitProject(POProject)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.FindStoreNameVisitor.FindStoreNameVisitor(PhysicalPlan,FileSpec,FileSpec)",2,1,n/a,6,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.FindStoreNameVisitor.visitStore(POStore)",3,2,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.LastInputStreamingOptimizer.LastInputStreamingOptimizer(MROperPlan,String)",2,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.LastInputStreamingOptimizer.replaceWithPOJoinPackage(PhysicalPlan,MapReduceOper,POPackage,POForEach,String)",15,1,n/a,27,2,5,17,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.LastInputStreamingOptimizer.visitMROp(MapReduceOper)",32,2,n/a,130,5,1,66,30
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.MRCompiler(PhysicalPlan)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.MRCompiler(PhysicalPlan,PigContext)",21,2,n/a,25,1,2,18,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.addToMap(PhysicalOperator)",17,2,n/a,34,2,1,23,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.aggregateScalarsFiles()",27,1,n/a,46,5,0,28,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.blocking(PhysicalOperator)",18,2,n/a,58,2,1,21,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.compile()",17,1,n/a,39,2,0,20,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.compile(PhysicalOperator)",39,2,n/a,92,3,1,45,17
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.connRedOper(List<MapReduceOper>,MapReduceOper)",13,3,n/a,27,1,2,16,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.connectSoftLink()",8,1,n/a,15,4,0,9,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.endSingleInputPlanWithStr(FileSpec)",11,5,n/a,29,1,1,17,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getConcatenateJob(FileSpec,MapReduceOper,POStore)",4,3,n/a,11,0,3,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getIndexingJob(MapReduceOper,MapReduceOper,List<PhysicalPlan>)",42,1,n/a,58,1,3,36,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getLoad()",5,3,n/a,6,0,0,4,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getMROp()",3,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getMRPlan()",0,1,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getMessageCollector()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getNativeMROp(String,String[])",3,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getPlan()",0,40,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getQuantileJob(POSort,MapReduceOper,FileSpec,FileSpec,int)",20,1,n/a,29,2,5,18,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getSamplingJob(POSort,MapReduceOper,List<PhysicalPlan>,FileSpec,FileSpec,int,List<PhysicalPlan>,String,String[],String)",165,2,n/a,245,5,10,155,18
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getSkewedJoinSampleJob(POSkewedJoin,MapReduceOper,FileSpec,FileSpec,int)",40,1,n/a,43,1,5,29,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getSortCols(List<PhysicalPlan>)",7,3,n/a,23,3,1,17,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getSortJob(POSort,MapReduceOper,FileSpec,FileSpec,int,Pair<POProject, Byte>[])",114,1,n/a,148,2,6,106,15
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getStore()",4,15,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.getTempFileSpec()",5,19,n/a,9,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.hasTooManyInputFiles(MapReduceOper,Configuration)",32,3,n/a,69,7,2,44,19
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.merge(E,List<E>)",1,1,n/a,14,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.merge(MapReduceOper[])",33,3,n/a,73,3,1,41,17
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.nonBlocking(PhysicalOperator)",11,9,n/a,47,2,1,16,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.processUDFs(PhysicalPlan)",8,6,n/a,12,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.startNew(FileSpec,MapReduceOper)",6,14,n/a,19,0,2,7,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitCollectedGroup(POCollectedGroup)",24,4,n/a,53,3,1,38,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitCounter(POCounter)",15,1,n/a,33,3,1,16,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitCross(POCross)",5,2,n/a,11,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitDistinct(PODistinct)",54,3,n/a,52,1,1,45,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitFRJoin(POFRJoin)",52,3,n/a,84,4,1,64,20
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitFilter(POFilter)",7,4,n/a,12,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitGlobalRearrange(POGlobalRearrange)",6,2,n/a,12,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitLimit(POLimit)",28,3,n/a,49,4,1,27,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitLoad(POLoad)",5,3,n/a,11,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitLocalRearrange(POLocalRearrange)",7,5,n/a,15,1,1,10,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitMergeCoGroup(POMergeCogroup)",58,3,n/a,98,4,1,66,16
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitMergeJoin(POMergeJoin)",123,3,n/a,203,6,1,131,25
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitNative(PONative)",9,2,n/a,16,1,1,9,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitPOForEach(POForEach)",13,4,n/a,23,2,1,15,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitPackage(POPackage)",14,2,n/a,20,3,1,13,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitRank(PORank)",8,1,n/a,18,1,1,9,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitSkewedJoin(POSkewedJoin)",105,3,n/a,143,3,1,111,17
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitSort(POSort)",16,4,n/a,23,2,1,15,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitSplit(POSplit)",10,4,n/a,26,1,1,10,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitStore(POStore)",12,2,n/a,13,1,1,8,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitStream(POStream)",5,3,n/a,11,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitUnion(POUnion)",5,3,n/a,11,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String,int)",1,11,n/a,9,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String,int,byte)",1,13,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String,int,byte,Throwable)",1,0,n/a,12,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException.MRCompilerException(Throwable)",1,0,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecType.accepts(Properties)",3,1,n/a,11,2,1,5,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecType.getExecutionEngine(PigContext)",1,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecType.getExecutionEngineClass()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecType.isLocal()",0,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecType.name()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecType.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecutionEngine.MRExecutionEngine(PigContext)",2,3,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecutionEngine.instantiatePigStats()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecutionEngine.instantiateScriptState()",4,4,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRTaskContext.MRTaskContext(TaskInputOutputContext<?, ?, ?, ?>)",0,6,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRTaskContext.get()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRTaskContext.getCounter(Enum<?>)",1,1,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRTaskContext.getCounter(String,String)",1,1,n/a,7,1,2,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRTaskContext.incrCounter(Enum<?>,long)",2,1,n/a,9,1,2,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRTaskContext.incrCounter(String,String,long)",2,1,n/a,9,1,3,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRTaskContext.progress()",1,1,n/a,6,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRTaskContext.setStatus(String)",1,1,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRUtil.getPlainForEachOP(String,NodeIdGenerator)",17,2,n/a,19,0,2,14,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRUtil.simpleConnectMapToReduce(MapReduceOper,String,NodeIdGenerator)",29,4,n/a,35,1,3,24,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.checkStopOnFailure(boolean)",15,2,n/a,22,3,1,13,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.compile(PhysicalPlan,PigContext)",51,3,n/a,80,1,2,44,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.computeWarningAggregate(Job,Map<Enum, Long>)",9,1,n/a,34,3,2,15,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.createSuccessFile(Job,POStore)",16,1,n/a,18,4,2,10,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.explain(PhysicalPlan,PigContext,PrintStream,String,boolean)",19,1,n/a,34,2,5,20,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.getError(FileSpec)",1,0,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.getStats(Job,boolean,PigContext)",18,2,n/a,46,2,3,26,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.kill()",6,1,n/a,14,3,0,7,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.killJob(String,Configuration)",8,1,n/a,20,3,2,11,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.launchPig(PhysicalPlan,String,PigContext)",204,1,n/a,5,7,3,191,56
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.notifyProgress(double,double)",3,2,n/a,16,2,2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.shouldMarkOutputDir(Job)",2,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.MapReduceOper(OperatorKey)",9,4,n/a,11,0,1,9,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.combineSmallSplits()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getCounterOperation()",2,3,n/a,7,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getCounterOperation(PhysicalPlan)",5,2,n/a,20,5,1,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getCustomPartitioner()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getOperationID()",2,1,n/a,4,0,0,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getQuantFile()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getRankOperationId()",7,2,n/a,10,1,0,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getRequestedParallelism()",0,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getSecondarySortOrder()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getSkewedJoin()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getSkewedJoinPartitionFile()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getSortOrder()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getUDFsAsStr()",9,1,n/a,11,2,0,7,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getUnion()",3,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.getUseSecondaryKey()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isCogroup()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isCounterOperation()",1,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isEndOfAllInputSetInMap()",0,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isEndOfAllInputSetInReduce()",0,2,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isGlobalSort()",0,12,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isGroupBy()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isIndexer()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isLimitAfterSort()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isLimitOnly()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isMapDone()",0,21,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isRankOperation()",2,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isReduceDone()",0,10,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isRegularJoin()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isRowNumber()",2,3,n/a,4,0,0,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isSampler()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isSkewedJoin()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.isSplitter()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.markCogroup()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.markGroupBy()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.markIndexer()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.markRegularJoin()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.markSampler()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.name()",22,17,n/a,29,1,0,16,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.needsDistinctCombiner()",0,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.noCombineSmallSplits()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setEndOfAllInputInMap(boolean)",0,2,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setEndOfAllInputInReduce(boolean)",0,2,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setGlobalSort(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setLimitAfterSort(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setLimitOnly(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setMapDone(boolean)",0,8,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setMapDoneMultiple(boolean)",4,1,n/a,6,1,1,3,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setMapDoneSingle(boolean)",4,6,n/a,6,1,1,3,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setNeedsDistinctCombiner(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setQuantFile(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setReduceDone(boolean)",0,17,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setSecondarySortOrder(boolean[])",0,2,n/a,7,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setSkewedJoin(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setSkewedJoinPartitionFile(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setSortOrder(boolean[])",0,2,n/a,7,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setSplitter(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.setUseSecondaryKey(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.shiftStringByTabs(String,String)",10,2,n/a,11,1,2,10,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.useTypedComparator(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.usingTypedComparator()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.visit(MROpPlanVisitor)",1,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReducePOStoreImpl.MapReducePOStoreImpl(TaskInputOutputContext<?, ?, ?, ?>)",7,5,n/a,14,0,1,4,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReducePOStoreImpl.cleanUp()",2,1,n/a,11,2,0,5,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReducePOStoreImpl.createStoreFunc(POStore)",6,1,n/a,21,1,1,8,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReducePOStoreImpl.incrRecordCounter(String,long)",1,2,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReducePOStoreImpl.tearDown()",2,1,n/a,11,2,0,5,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MergeJoinIndexer.MergeJoinIndexer(String,String,String,String,String,String)",23,0,n/a,37,3,6,21,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MergeJoinIndexer.getInputFormat()",1,8,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MergeJoinIndexer.getLoadCaster()",1,7,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MergeJoinIndexer.getNext()",24,22,n/a,63,3,0,56,17
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MergeJoinIndexer.prepareToRead(RecordReader,PigSplit)",1,6,n/a,8,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MergeJoinIndexer.setLocation(String,Job)",1,16,n/a,7,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.MultiQueryOptimizer(MROperPlan,boolean)",9,1,n/a,8,0,2,6,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.addShiftedKeyInfoIndex(int,Packager)",10,2,n/a,37,1,2,11,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.addShiftedKeyInfoIndex(int,int,MultiQueryPackager)",7,1,n/a,31,1,3,17,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.createDemuxPlan(boolean,boolean)",6,2,n/a,15,1,2,10,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.getDemux(boolean)",4,1,n/a,5,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.getMROper()",3,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.getMergeList(MapReduceOper,List<MapReduceOper>)",18,2,n/a,25,3,2,18,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.getMultiQueryPackage(boolean,boolean)",7,1,n/a,10,0,2,6,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.getSplit()",3,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.getStore()",3,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.hasSameMapKeyType(List<MapReduceOper>)",0,1,n/a,13,3,1,9,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.isDiamondMROper(MapReduceOper)",10,1,n/a,31,5,1,13,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.isMapOnly(MapReduceOper)",1,7,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.isSingleLoadMapperPlan(PhysicalPlan)",2,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.isSinglePredecessor(MapReduceOper)",3,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.isSplitteeMergeable(MapReduceOper)",10,1,n/a,25,1,1,11,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeAllMapOnlySplittees(List<MapReduceOper>,MapReduceOper,POSplit)",13,1,n/a,29,1,3,17,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeAllMapReduceSplittees(List<MapReduceOper>,MapReduceOper,POSplit)",30,2,n/a,68,3,3,37,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeDiamondMROper(MapReduceOper,List<MapReduceOper>)",40,1,n/a,88,4,2,58,19
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeMROperProperties(MapReduceOper,MapReduceOper)",10,1,n/a,20,1,2,12,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeMapReduceSplittees(List<MapReduceOper>,MapReduceOper)",18,1,n/a,36,1,2,21,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeMapReduceSplittees(List<MapReduceOper>,MapReduceOper,POSplit)",11,1,n/a,22,3,3,13,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeOneCombinePlanWithIndex(PhysicalPlan,PhysicalPlan,int,int,byte)",37,1,n/a,92,3,5,52,13
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeOneMapPart(MapReduceOper,MapReduceOper)",14,2,n/a,33,3,2,21,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeOneMapPlanWithIndex(PhysicalPlan,POSplit,int,boolean)",10,1,n/a,43,2,4,18,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeOneReducePlanWithIndex(PhysicalPlan,PhysicalPlan,int,int,byte)",27,1,n/a,62,2,5,38,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeOnlyMapReduceSplittee(MapReduceOper,MapReduceOper)",4,1,n/a,8,0,2,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeOnlyMapperSplittee(MapReduceOper,MapReduceOper)",2,1,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.mergeSingleMapReduceSplittee(MapReduceOper,MapReduceOper,POSplit)",15,1,n/a,28,2,3,21,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.needCombiner(List<MapReduceOper>)",1,1,n/a,10,2,1,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.removeAndReconnect(MapReduceOper,MapReduceOper)",18,5,n/a,51,3,2,26,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.setIndexOnLRInSplit(int,POSplit,boolean)",7,2,n/a,27,3,3,17,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.visit()",3,115,n/a,5,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.visitMROp(MapReduceOper)",62,2,n/a,107,3,1,64,26
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NativeMapReduceOper.NativeMapReduceOper(OperatorKey,String,String[])",1,1,n/a,5,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NativeMapReduceOper.getCommandString()",5,2,n/a,9,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NativeMapReduceOper.getJobId()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NativeMapReduceOper.getJobNumber()",0,1,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NativeMapReduceOper.getNativeMRParams()",0,1,n/a,9,1,0,7,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NativeMapReduceOper.name()",2,17,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NativeMapReduceOper.runJob()",15,1,n/a,23,3,0,12,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NativeMapReduceOper.visit(MROpPlanVisitor)",1,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopFilterRemover.NoopFilterRemover(MROperPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopFilterRemover.PhysicalRemover.PhysicalRemover(PhysicalPlan)",3,3,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopFilterRemover.PhysicalRemover.removeFilter(POFilter,PhysicalPlan)",8,1,n/a,16,4,2,9,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopFilterRemover.PhysicalRemover.visit()",3,117,n/a,8,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopFilterRemover.PhysicalRemover.visitFilter(POFilter)",8,4,n/a,17,4,1,10,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopFilterRemover.visitMROp(MapReduceOper)",6,2,n/a,6,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.NoopStoreRemover(MROperPlan)",3,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.PhysicalRemover.PhysicalRemover(PhysicalPlan)",2,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.PhysicalRemover.visit()",1,116,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.PhysicalRemover.visitLoad(POLoad)",4,3,n/a,9,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.PhysicalRemover.visitSplit(POSplit)",14,4,n/a,43,4,1,21,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.PhysicalRemover.visitStore(POStore)",1,2,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.removeStore(RemovableStore)",13,1,n/a,16,2,1,9,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.visitMROp(MapReduceOper)",8,2,n/a,16,1,1,8,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.POToChange.POToChange(PhysicalOperator,PhysicalPlan,POForEach)",0,2,n/a,5,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.PhyPlanSetter(PhysicalPlan)",2,6,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visit(PhysicalOperator)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitAdd(Add)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitAnd(POAnd)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitBinCond(POBinCond)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitCast(POCast)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitCollectedGroup(POCollectedGroup)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitComparisonFunc(POUserComparisonFunc)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitConstant(ConstantExpression)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitDemux(PODemux)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitDistinct(PODistinct)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitDivide(Divide)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitEqualTo(EqualToExpr)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitFRJoin(POFRJoin)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitFilter(POFilter)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitGTOrEqual(GTOrEqualToExpr)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitGlobalRearrange(POGlobalRearrange)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitGreaterThan(GreaterThanExpr)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitIsNull(POIsNull)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitLTOrEqual(LTOrEqualToExpr)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitLessThan(LessThanExpr)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitLimit(POLimit)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitLoad(POLoad)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitLocalRearrange(POLocalRearrange)",2,5,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitMapLookUp(POMapLookUp)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitMergeCoGroup(POMergeCogroup)",1,3,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitMergeJoin(POMergeJoin)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitMod(Mod)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitMultiply(Multiply)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitNative(PONative)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitNegative(PONegative)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitNot(PONot)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitNotEqualTo(NotEqualToExpr)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitOr(POOr)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitPOForEach(POForEach)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitPOOptimizedForEach(POOptimizedForEach)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitPackage(POPackage)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitPartialAgg(POPartialAgg)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitPoissonSample(POPoissonSample)",1,2,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitPreCombinerLocalRearrange(POPreCombinerLocalRearrange)",2,3,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitProject(POProject)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitRank(PORank)",1,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitRegexp(PORegexp)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitReservoirSample(POReservoirSample)",1,2,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitSkewedJoin(POSkewedJoin)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitSort(POSort)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitSplit(POSplit)",6,4,n/a,13,1,1,9,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitStore(POStore)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitStream(POStream)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitSubtract(Subtract)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitUnion(POUnion)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter.visitUserFunc(POUserFunc)",1,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigDecimalRawComparator.PigBigDecimalRawComparator()",2,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigDecimalRawComparator.compare(Object,Object)",10,2,n/a,19,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigDecimalRawComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,22,2,6,11,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigDecimalRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigDecimalRawComparator.setConf(Configuration)",5,0,n/a,15,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigIntegerRawComparator.PigBigIntegerRawComparator()",2,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigIntegerRawComparator.compare(Object,Object)",10,2,n/a,19,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigIntegerRawComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,22,2,6,11,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigIntegerRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigIntegerRawComparator.setConf(Configuration)",5,0,n/a,15,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBooleanRawComparator.PigBooleanRawComparator()",2,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBooleanRawComparator.compare(Object,Object)",10,2,n/a,19,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBooleanRawComparator.compare(byte[],int,int,byte[],int,int)",0,1,n/a,24,2,6,13,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBooleanRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBooleanRawComparator.setConf(Configuration)",5,0,n/a,15,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBytesRawComparator.PigBytesRawComparator()",2,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBytesRawComparator.compare(Object,Object)",10,2,n/a,19,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBytesRawComparator.compare(byte[],int,int,byte[],int,int)",3,1,n/a,87,3,6,52,19
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBytesRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBytesRawComparator.setConf(Configuration)",6,0,n/a,16,1,1,8,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner.Combine.cleanup(Context)",2,0,n/a,17,0,1,8,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner.Combine.getKeyType()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner.Combine.processOnePackageOutput(Context)",15,2,n/a,65,5,1,42,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner.Combine.reduce(PigNullableWritable,Iterable<NullableTuple>,Context)",19,0,n/a,42,2,3,18,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner.Combine.setKeyType(byte)",0,0,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner.Combine.setup(Context)",33,0,n/a,43,2,1,25,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner.Combine.staticDataCleanup()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDateTimeRawComparator.PigDateTimeRawComparator()",2,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDateTimeRawComparator.compare(Object,Object)",10,2,n/a,23,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDateTimeRawComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,25,2,6,11,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDateTimeRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDateTimeRawComparator.setConf(Configuration)",5,0,n/a,15,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDoubleRawComparator.PigDoubleRawComparator()",2,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDoubleRawComparator.compare(Object,Object)",10,2,n/a,19,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDoubleRawComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,22,2,6,11,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDoubleRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDoubleRawComparator.setConf(Configuration)",5,0,n/a,15,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigFileInputFormat.listStatus(JobContext)",3,1,n/a,9,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigFloatRawComparator.PigFloatRawComparator()",2,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigFloatRawComparator.compare(Object,Object)",10,2,n/a,19,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigFloatRawComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,22,2,6,11,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigFloatRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigFloatRawComparator.setConf(Configuration)",5,0,n/a,15,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.cleanup(Context)",15,0,n/a,45,3,1,22,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.collect(Context,Tuple)",n/a,2,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.getIllustratorContext(Configuration,DataBag,List<Pair<PigNullableWritable, Writable>>,InputSplit)",n/a,0,0,n/a,n/a,4,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.getKeyType()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.inIllustrator(Context)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.map(Text,Tuple,Context)",22,0,n/a,50,3,3,27,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.runPipeline(PhysicalOperator)",3,2,n/a,31,3,1,18,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.setKeyType(byte)",0,0,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.setMapPlan(PhysicalPlan)",0,0,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.setup(Context)",52,0,n/a,53,2,1,36,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Map.collect(Context,Tuple)",8,0,n/a,15,0,2,6,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.MapWithComparator.collect(Context,Tuple)",10,0,n/a,22,1,2,11,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.MapWithPartitionIndex.collect(Context,Tuple)",12,2,n/a,30,1,2,15,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.MapWithPartitionIndex.runPipeline(PhysicalOperator)",7,0,n/a,42,4,1,21,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce.cleanup(Context)",15,0,n/a,42,3,1,19,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce.getIllustratorContext(Job,List<Pair<PigNullableWritable, Writable>>,POPackage)",n/a,0,0,n/a,n/a,3,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce.getPack(Context)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce.inIllustrator(Context)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce.processOnePackageOutput(Context)",6,2,n/a,29,2,1,20,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce.reduce(PigNullableWritable,Iterable<NullableTuple>,Context)",22,0,n/a,52,2,3,24,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce.runPipeline(PhysicalOperator)",4,2,n/a,42,3,1,19,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce.setReducePlan(PhysicalPlan)",0,0,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce.setup(Context)",44,0,n/a,50,2,1,33,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.ReduceWithComparator.reduce(PigNullableWritable,Iterable<NullableTuple>,Context)",28,0,n/a,65,2,3,38,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.ReduceWithComparator.setup(Context)",3,0,n/a,9,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.staticDataCleanup()",1,0,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigHadoopLogger.PigHadoopLogger()",0,1,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigHadoopLogger.getAggregate()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigHadoopLogger.getInstance()",1,10,n/a,9,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigHadoopLogger.setAggregate(boolean)",0,6,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigHadoopLogger.setReporter(PigStatusReporter)",0,6,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigHadoopLogger.warn(Object,String,Enum)",13,14,n/a,32,3,3,12,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat.createPigSplit(List<InputSplit>,int,ArrayList<OperatorKey>,int,Configuration)",3,1,n/a,7,0,5,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat.createRecordReader(InputSplit,TaskAttemptContext)",19,0,n/a,41,0,2,14,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat.getActiveSplit()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat.getLoadFunc(int,Configuration)",5,1,n/a,14,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat.getLoadLocation(int,Configuration)",4,1,n/a,7,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat.getPigSplits(List<InputSplit>,int,ArrayList<OperatorKey>,long,boolean,Configuration)",10,1,n/a,25,2,6,17,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat.getSplits(JobContext)",59,1,n/a,111,3,1,57,18
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat.mergeSplitSpecificConf(LoadFunc,PigSplit,Configuration)",6,1,n/a,17,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat.passLoadSignature(LoadFunc,int,Configuration)",8,3,n/a,23,1,3,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigIntRawComparator.PigIntRawComparator()",1,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigIntRawComparator.compare(Object,Object)",10,2,n/a,19,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigIntRawComparator.compare(byte[],int,int,byte[],int,int)",2,1,n/a,24,2,6,13,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigIntRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigIntRawComparator.setConf(Configuration)",5,0,n/a,15,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigLongRawComparator.PigLongRawComparator()",2,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigLongRawComparator.compare(Object,Object)",10,2,n/a,19,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigLongRawComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,22,2,6,11,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigLongRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigLongRawComparator.setConf(Configuration)",5,0,n/a,15,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapOnly.Map.collect(Context,Tuple)",1,0,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapReduceCounter.PigMapCounter.collect(Context,Tuple)",5,0,n/a,14,1,2,4,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapReduceCounter.PigMapCounter.setup(Context)",15,0,n/a,25,2,1,13,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapReduceCounter.PigReduceCounter.incrementCounter(Long)",4,2,n/a,18,2,1,4,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapReduceCounter.PigReduceCounter.setup(Context)",12,0,n/a,21,2,1,12,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.PigOutputCommitter(TaskAttemptContext,List<POStore>,List<POStore>)",4,2,n/a,14,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.abortJob(JobContext,State)",16,1,n/a,35,3,2,18,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.abortTask(TaskAttemptContext)",6,0,n/a,22,3,1,9,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.cleanupJob(JobContext)",8,0,n/a,21,2,1,10,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.commitJob(JobContext)",16,1,n/a,37,3,1,18,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.commitTask(TaskAttemptContext)",6,0,n/a,22,3,1,9,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.getCommitters(TaskAttemptContext,List<POStore>)",8,2,n/a,25,2,2,8,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.isRecoverySupported()",8,0,n/a,40,3,0,22,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.needsTaskCommit(TaskAttemptContext)",6,0,n/a,28,3,1,12,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.recoverTask(TaskAttemptContext)",10,0,n/a,34,3,1,14,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.setUpContext(JobContext,POStore)",6,19,n/a,16,0,2,4,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.setUpContext(TaskAttemptContext,POStore)",6,19,n/a,15,0,2,4,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.setupJob(JobContext)",4,1,n/a,19,2,1,8,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.setupTask(TaskAttemptContext)",6,0,n/a,22,3,1,9,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.storeCleanup(POStore,Configuration)",8,6,n/a,12,2,2,5,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.PigRecordWriter.PigRecordWriter(RecordWriter,StoreFuncInterface,Mode)",1,2,n/a,10,1,3,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.PigRecordWriter.close(TaskAttemptContext)",1,0,n/a,7,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.PigRecordWriter.write(WritableComparable,Tuple)",2,0,n/a,15,1,2,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.checkOutputSpecs(JobContext)",3,2,n/a,6,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.checkOutputSpecsHelper(List<POStore>,JobContext)",8,2,n/a,30,5,2,14,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.getOutputCommitter(TaskAttemptContext)",2,0,n/a,10,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.getRecordWriter(TaskAttemptContext)",12,0,n/a,26,2,1,11,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.getStores(Configuration,String)",2,2,n/a,11,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.isConfPropEqual(String,Configuration,Configuration)",3,3,n/a,19,1,3,7,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.setLocation(JobContext,POStore)",9,9,n/a,27,0,2,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.setupUdfEnvAndStores(JobContext)",11,4,n/a,26,1,1,9,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.PigRecordReader(InputFormat<?, ?>,PigSplit,LoadFunc,TaskAttemptContext,long)",6,1,n/a,23,1,5,15,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.close()",1,0,n/a,7,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.getCurrentKey()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.getCurrentValue()",1,0,n/a,8,1,0,3,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.getMultiInputsCounerName(PigSplit,Configuration)",7,1,n/a,9,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.getProgress()",4,0,n/a,9,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.initNextRecordReader()",13,2,n/a,33,2,0,18,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.initialize(InputSplit,TaskAttemptContext)",12,0,n/a,30,2,2,11,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.nextKeyValue()",6,0,n/a,21,2,0,13,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigReducerEstimator.estimateNumberOfReducers(Job,MapReduceOper)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator.PigSecondaryKeyComparator()",3,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator.compare(byte[],int,int,byte[],int,int)",2,0,n/a,31,1,6,18,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator.setConf(Configuration)",6,0,n/a,12,1,1,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSequenceFileInputFormat.listStatus(JobContext)",11,0,n/a,27,3,1,17,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.PigSplit()",0,0,n/a,3,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.PigSplit(InputSplit[],int,List<OperatorKey>,int)",1,4,n/a,8,0,4,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.disableCounter()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getConf()",0,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getInputIndex()",0,7,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getLength()",1,2,n/a,9,1,0,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getLength(int)",1,2,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getLocations()",16,0,n/a,7,3,0,25,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getNumPaths()",0,2,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getSplitIndex()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getTargetOps()",1,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getTotalSplits()",0,1,n/a,9,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getWrappedSplit()",0,6,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.getWrappedSplit(int)",0,1,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.isMultiInputs()",0,1,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.readFields(DataInput)",25,0,n/a,59,2,1,42,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.readObject(DataInput)",8,1,n/a,13,1,1,8,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.setConf(Configuration)",0,3,n/a,17,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.setCurrentIdx(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.setDisableCounter(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.setMultiInputs(boolean)",0,1,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.setTotalSplits(int)",0,1,n/a,9,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.toString()",12,0,n/a,20,2,0,14,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.write(DataOutput)",43,1,n/a,62,2,1,47,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.writeObject(Serializable,DataOutput)",6,1,n/a,9,0,2,6,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigStatsOutputSizeReader.getOutputSize(POStore,Configuration)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigStatsOutputSizeReader.supports(POStore,Configuration)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextInputFormat.listStatus(JobContext)",3,0,n/a,9,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextOutputFormat.PigLineRecordWriter.PigLineRecordWriter(DataOutputStream,byte)",1,2,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextOutputFormat.PigLineRecordWriter.write(WritableComparable,Tuple)",5,0,n/a,11,2,2,8,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextOutputFormat.PigTextOutputFormat(byte)",1,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextOutputFormat.getRecordWriter(TaskAttemptContext)",13,0,n/a,24,1,1,15,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextRawComparator.PigTextRawComparator()",2,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextRawComparator.compare(Object,Object)",10,2,n/a,19,2,2,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextRawComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,22,2,6,11,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextRawComparator.setConf(Configuration)",3,0,n/a,14,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleDefaultRawComparator.PigTupleDefaultRawComparator()",3,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleDefaultRawComparator.compare(Object,Object)",12,0,n/a,27,2,2,15,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleDefaultRawComparator.compare(byte[],int,int,byte[],int,int)",13,0,n/a,29,1,6,12,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleDefaultRawComparator.compareTuple(Tuple,Tuple)",6,2,n/a,30,4,2,24,12
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleDefaultRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleDefaultRawComparator.hasComparedTupleNull()",0,3,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleDefaultRawComparator.setConf(Configuration)",5,0,n/a,16,1,1,8,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleSortComparator.PigTupleSortComparator()",3,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleSortComparator.compare(Object,Object)",13,2,n/a,28,2,2,15,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleSortComparator.compare(byte[],int,int,byte[],int,int)",2,1,n/a,30,2,6,13,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleSortComparator.compareTuple(Tuple,Tuple)",6,0,n/a,25,4,2,19,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleSortComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleSortComparator.setConf(Configuration)",14,0,n/a,38,2,1,20,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawBytesComparator.PigBigDecimalRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawBytesPartitionComparator.PigBigDecimalRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawPartitionComparator.PigBigDecimalRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawBytesComparator.PigBigIntegerRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawBytesPartitionComparator.PigBigIntegerRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawPartitionComparator.PigBigIntegerRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawBytesComparator.PigBooleanRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawBytesPartitionComparator.PigBooleanRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawPartitionComparator.PigBooleanRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,5,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawBytesComparator.PigBytesRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawBytesPartitionComparator.PigBytesRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawPartitionComparator.PigBytesRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawBytesComparator.PigDateTimeRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawBytesPartitionComparator.PigDateTimeRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawPartitionComparator.PigDateTimeRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawBytesComparator.PigDoubleRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawBytesPartitionComparator.PigDoubleRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawPartitionComparator.PigDoubleRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawBytesComparator.PigFloatRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawBytesPartitionComparator.PigFloatRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawPartitionComparator.PigFloatRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawBytesComparator.PigIntRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawBytesPartitionComparator.PigIntRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawPartitionComparator.PigIntRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawBytesComparator.PigLongRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawBytesPartitionComparator.PigLongRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawPartitionComparator.PigLongRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawBytesComparator.PigTextRawBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawBytesPartitionComparator.PigTextRawBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawPartitionComparator.PigTextRawPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortBytesComparator.PigTupleSortBytesComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortBytesComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortBytesPartitionComparator.PigTupleSortBytesPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortBytesPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortBytesPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortPartitionComparator.PigTupleSortPartitionComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortPartitionComparator.compare(Object,Object)",3,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortPartitionComparator.compare(byte[],int,int,byte[],int,int)",1,1,n/a,4,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ProgressableReporter.ProgressableReporter()",0,4,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ProgressableReporter.ProgressableReporter(TaskAttemptContext)",1,0,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ProgressableReporter.progress()",1,14,n/a,4,0,0,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ProgressableReporter.progress(String)",2,0,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ProgressableReporter.setRep(TaskAttemptContext)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.RunJarSecurityManager.RunJarSecurityManager()",2,2,n/a,7,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.RunJarSecurityManager.checkExit(int)",1,0,n/a,11,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.RunJarSecurityManager.checkPermission(Permission)",1,0,n/a,7,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.RunJarSecurityManager.getExitCode()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.RunJarSecurityManager.getExitInvoked()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.RunJarSecurityManager.retire()",1,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SampleOptimizer.SampleOptimizer(MROperPlan,PigContext)",2,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SampleOptimizer.scan(MapReduceOper,PhysicalOperator,String)",10,3,n/a,28,3,3,16,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SampleOptimizer.visit()",2,115,n/a,7,0,0,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SampleOptimizer.visitMROp(MapReduceOper)",82,2,n/a,130,2,1,85,26
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover.SecondaryKeyDiscover(PhysicalPlan,List<SortKeyInfo>,SortKeyInfo)",0,1,n/a,7,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover.getDistinctsToChange()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover.getSecondarySortKeyInfo()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover.getSortsToRemove()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover.process()",3,1,n/a,8,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover.processDistinct(PODistinct)",8,1,n/a,29,2,1,14,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover.processProject(POProject)",1,1,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover.processRoot(PhysicalOperator)",7,1,n/a,30,3,1,20,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover.processSort(POSort)",16,1,n/a,47,2,1,27,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyOptimizer(MROperPlan)",2,0,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.collectColumnChain(PhysicalPlan,ColumnChainInfo)",9,1,n/a,26,2,2,16,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.getDistinctChanged()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.getNumMRUseSecondaryKey()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.getNumSortRemoved()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.getSortKeyInfo(POLocalRearrange)",29,2,n/a,56,5,1,32,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.setSecondaryPlan(PhysicalPlan,POLocalRearrange,SortKeyInfo)",26,2,n/a,44,3,3,23,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.visitMROp(MapReduceOper)",94,2,n/a,224,5,1,135,48
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizerMR.SecondaryKeyOptimizerMR(MROperPlan)",2,1,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizerMR.getNumDistinctChanged()",1,0,n/a,4,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizerMR.getNumSortRemoved()",1,0,n/a,4,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizerMR.getNumUseSecondaryKey()",1,0,n/a,4,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizerMR.visitMROp(MapReduceOper)",9,2,n/a,15,1,1,9,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SortKeyInfo.getAscs()",3,2,n/a,6,0,0,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SortKeyInfo.getColumnChains()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SortKeyInfo.insertColumnChainInfo(int,ColumnChainInfo,boolean)",6,6,n/a,12,1,3,7,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SortKeyInfo.moreSpecificThan(Object)",10,8,n/a,15,1,1,11,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SortKeyInfo.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.UDFEndOfAllInputNeededVisitor.UDFEndOfAllInputNeededVisitor(PhysicalPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.UDFEndOfAllInputNeededVisitor.needEndOfAllInputProcessing()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.UDFEndOfAllInputNeededVisitor.visitUserFunc(POUserFunc)",2,4,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.UDFFinishVisitor.UDFFinishVisitor(PhysicalPlan,PlanWalker<PhysicalOperator, PhysicalPlan>)",1,4,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.UDFFinishVisitor.visitUserFunc(POUserFunc)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.CountingMap.display()",7,1,n/a,8,1,0,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.CountingMap.getTotalCount()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.CountingMap.put(K,Integer)",4,2,n/a,11,1,2,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.DiscreteProbabilitySampleGenerator.DiscreteProbabilitySampleGenerator(float[])",2,3,n/a,11,1,1,7,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.DiscreteProbabilitySampleGenerator.getNext()",1,2,n/a,19,1,0,11,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.DiscreteProbabilitySampleGenerator.main(String[])",5,0,n/a,9,1,1,8,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.DiscreteProbabilitySampleGenerator.toString()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.SecondaryKeyPartitioner.getConf()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.SecondaryKeyPartitioner.getPartition(PigNullableWritable,Writable,int)",5,0,n/a,11,1,3,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.SecondaryKeyPartitioner.setConf(Configuration)",2,0,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.SkewedPartitioner.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.SkewedPartitioner.getPartition(PigNullableWritable,Writable,int)",15,0,n/a,44,1,3,24,12
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.SkewedPartitioner.init()",7,1,n/a,17,1,0,9,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.SkewedPartitioner.setConf(Configuration)",1,0,n/a,6,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.WeightedRangePartitioner.convertToArray(DataBag)",50,2,n/a,29,1,1,24,13
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.WeightedRangePartitioner.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.WeightedRangePartitioner.getList(DataBag)",3,1,n/a,11,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.WeightedRangePartitioner.getPartition(PigNullableWritable,Writable,int)",7,1,n/a,21,1,3,12,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.WeightedRangePartitioner.getPigNullableWritable(Tuple)",10,3,n/a,21,3,1,9,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.WeightedRangePartitioner.getProbVec(Tuple)",3,2,n/a,12,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.WeightedRangePartitioner.init()",37,1,n/a,61,3,0,33,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.WeightedRangePartitioner.setConf(Configuration)",0,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.DotMRPrinter(MROperPlan,PrintStream)",4,1,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.DotMRPrinter(MROperPlan,PrintStream,boolean,Set<Operator>,Set<Operator>,Set<Operator>)",1,1,n/a,7,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerOperator.InnerOperator(PhysicalPlan,String)",2,4,n/a,6,0,2,4,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerOperator.getPlan()",0,1,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerOperator.hashCode()",0,1,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerOperator.name()",0,17,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerOperator.supportsMultipleInputs()",0,2,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerOperator.supportsMultipleOutputs()",0,2,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerOperator.visit(PlanVisitor)",0,4,n/a,1,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerPlan.InnerPlan(PhysicalPlan,PhysicalPlan,PhysicalPlan)",13,1,n/a,23,2,3,14,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerPrinter.InnerPrinter(InnerPlan,PrintStream,Set<Operator>,Set<Operator>,Set<Operator>)",1,1,n/a,7,0,5,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerPrinter.getAttributes(InnerOperator)",1,4,n/a,8,0,1,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerPrinter.getNestedPlans(InnerOperator)",3,1,n/a,6,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerPrinter.makeDumper(PhysicalPlan,PrintStream)",2,5,n/a,9,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.getAttributes(MapReduceOper)",1,4,n/a,8,0,1,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.getName(MapReduceOper)",5,3,n/a,15,1,1,9,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.getNestedPlans(MapReduceOper)",3,1,n/a,6,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.makeDumper(InnerPlan,PrintStream)",1,5,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.setVerbose(boolean)",0,4,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.EndOfAllInputChecker(PhysicalPlan)",2,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.isEndOfAllInputPresent()",0,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.visitCollectedGroup(POCollectedGroup)",0,4,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.visitMergeCoGroup(POMergeCogroup)",0,3,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.visitMergeJoin(POMergeJoin)",0,3,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.visitPOForEach(POForEach)",2,4,n/a,10,2,1,4,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.visitPartialAgg(POPartialAgg)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.visitPoissonSample(POPoissonSample)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.visitReservoirSample(POReservoirSample)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker.visitStream(POStream)",0,3,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputSetter(MROperPlan)",2,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.visitMROp(MapReduceOper)",8,2,n/a,13,1,1,8,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRIntermediateDataVisitor.MRIntermediateDataVisitor(MROperPlan)",3,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRIntermediateDataVisitor.StoreFinder.StoreFinder(PhysicalPlan)",2,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRIntermediateDataVisitor.StoreFinder.visitStore(POStore)",4,2,n/a,6,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRIntermediateDataVisitor.getIntermediate()",0,1,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRIntermediateDataVisitor.visitMROp(MapReduceOper)",9,2,n/a,15,1,1,9,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MROpPlanVisitor.MROpPlanVisitor(MROperPlan,PlanWalker<MapReduceOper, MROperPlan>)",1,17,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MROpPlanVisitor.visitMROp(MapReduceOper)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MROperPlan.MROperPlan()",0,1,n/a,3,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MROperPlan.toString()",7,0,n/a,17,1,0,8,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRPrinter.MRPrinter(PrintStream,MROperPlan)",5,2,n/a,11,0,2,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRPrinter.setVerbose(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRPrinter.visitMROp(MapReduceOper)",35,2,n/a,39,1,1,31,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.LoRearrangeDiscoverer.LoRearrangeDiscoverer(PhysicalPlan,POPackage)",2,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.LoRearrangeDiscoverer.getLoRearrangeFound()",0,1,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.LoRearrangeDiscoverer.visitLocalRearrange(POLocalRearrange)",26,5,n/a,31,2,1,16,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.POPackageAnnotator(MROperPlan)",2,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.PackageDiscoverer.PackageDiscoverer(PhysicalPlan)",2,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.PackageDiscoverer.getPkg()",0,2,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.PackageDiscoverer.visitPackage(POPackage)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.handlePackage(MapReduceOper,POPackage)",16,2,n/a,25,3,2,16,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.patchPackage(PhysicalPlan,POPackage)",3,3,n/a,7,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.visitMROp(MapReduceOper)",14,2,n/a,34,4,1,17,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.ScalarPhyFinder.ScalarPhyFinder(PhysicalPlan)",2,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.ScalarPhyFinder.getScalars()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.ScalarPhyFinder.visitUserFunc(POUserFunc)",3,4,n/a,6,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.UDFFinder.UDFFinder()",1,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.UDFFinder.UDFFinder(PhysicalPlan,PlanWalker<PhysicalOperator, PhysicalPlan>)",3,1,n/a,5,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.UDFFinder.getUDFs()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.UDFFinder.setPlan(PhysicalPlan)",2,2,n/a,6,0,1,4,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.UDFFinder.visitCast(POCast)",4,2,n/a,5,0,1,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.UDFFinder.visitComparisonFunc(POUserComparisonFunc)",3,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.UDFFinder.visitSort(POSort)",5,4,n/a,5,0,1,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.UDFFinder.visitUserFunc(POUserFunc)",3,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.XMLMRPrinter.XMLMRPrinter(PrintStream,MROperPlan)",7,1,n/a,14,0,2,7,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.XMLMRPrinter.closePlan()",11,1,n/a,12,0,0,10,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.XMLMRPrinter.visitMROp(MapReduceOper)",24,2,n/a,31,1,1,24,8
"org.apache.pig.backend.hadoop.executionengine.optimizer.SecondaryKeyOptimizer.getNumDistinctChanged()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.optimizer.SecondaryKeyOptimizer.getNumSortRemoved()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.optimizer.SecondaryKeyOptimizer.getNumUseSecondaryKey()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String)",1,1,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String,int)",1,2,n/a,9,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String,int,byte)",1,9,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String,int,byte,Throwable)",1,0,n/a,12,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException.LogicalToPhysicalTranslatorException(Throwable)",1,1,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.POPrinter.POPrinter(PrintStream,PhysicalPlan)",2,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.OriginalLocation.OriginalLocation(String,int,int)",1,1,n/a,6,0,3,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.OriginalLocation.getAlias()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.OriginalLocation.getLine()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.OriginalLocation.getOffset()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.OriginalLocation.toString()",0,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.PhysicalOperator(OperatorKey)",1,10,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.PhysicalOperator(OperatorKey,List<PhysicalOperator>)",1,2,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.PhysicalOperator(OperatorKey,int)",1,6,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.PhysicalOperator(OperatorKey,int,List<PhysicalOperator>)",2,29,n/a,6,0,3,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.PhysicalOperator(PhysicalOperator)",3,6,n/a,14,0,1,12,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.addOriginalLocation(String,List<OriginalLocation>)",1,11,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.addOriginalLocation(String,SourceLocation)",4,43,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.attachInput(Tuple)",0,17,n/a,11,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.clone()",1,7,n/a,9,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.cloneHelper(PhysicalOperator)",1,8,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.copyAliasFrom(PhysicalOperator)",0,11,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.detachInput()",0,13,n/a,8,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getAlias()",0,11,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getAliasString()",0,32,n/a,3,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getIllustrator()",0,19,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getInputs()",0,31,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getLogger()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNext(byte)",18,37,n/a,45,2,1,31,16
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextBigDecimal()",0,11,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextBigInteger()",0,11,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextBoolean()",0,19,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextDataBag()",7,2,n/a,16,2,0,13,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextDataByteArray()",0,14,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextDateTime()",0,7,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextDouble()",0,11,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextFloat()",0,11,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextInteger()",0,12,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextLong()",0,12,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextMap()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextString()",0,12,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNextTuple()",0,17,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getOriginalLocations()",1,15,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getPigLogger()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getReporter()",1,25,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getRequestedParallelism()",0,33,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getResultType()",0,62,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.isAccumStarted()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.isAccumulative()",0,9,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.isBlocking()",0,0,n/a,11,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.isInputAttached()",0,7,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.processInput()",13,40,n/a,32,2,0,13,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.reset()",0,1,n/a,10,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setAccumEnd()",1,2,n/a,6,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setAccumStart()",1,3,n/a,6,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setAccumulative()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setIllustrator(Illustrator)",0,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setInputs(List<PhysicalOperator>)",0,25,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setParentPlan(PhysicalPlan)",0,57,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setPigLogger(PigLogger)",0,7,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setReporter(PigProgressable)",1,8,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setRequestedParallelism(int)",0,5,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.setResultType(byte)",0,130,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.staticDataCleanup()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.visit(PhyPlanVisitor)",n/a,6,59,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger.warn(Object,String,Enum<?>)",n/a,11,1,n/a,n/a,3,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable.progress()",n/a,14,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable.progress(String)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.Result.Result()",0,36,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.Result.Result(byte,Object)",0,49,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.Result.toString()",1,0,n/a,4,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.Add(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.Add(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.add(Number,Number,byte)",8,1,n/a,22,1,3,15,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.genericGetNext(byte)",4,6,n/a,22,1,1,17,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.getNextBigDecimal()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryComparisonOperator.BinaryComparisonOperator(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryComparisonOperator.BinaryComparisonOperator(OperatorKey,int)",1,10,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryComparisonOperator.cloneHelper(BinaryComparisonOperator)",1,9,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryComparisonOperator.getOperandType()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryComparisonOperator.illustratorMarkup(Object,Object,int)",1,11,n/a,6,1,3,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryComparisonOperator.setOperandType(byte)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.BinaryExpressionOperator(OperatorKey)",1,5,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.BinaryExpressionOperator(OperatorKey,int)",1,7,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.cloneHelper(BinaryExpressionOperator)",1,6,n/a,7,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.getChildExpressions()",3,3,n/a,11,1,0,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.getLhs()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.getRhs()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.setLhs(ExpressionOperator)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.setRhs(ExpressionOperator)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextBoolean()",n/a,0,12,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextDataBag()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextDataByteArray()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextDateTime()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextDouble()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextFloat()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextInteger()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextLong()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextMap()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextString()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getNextTuple()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.getOperandType()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator.setOperandType(byte)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.ConstantExpression(OperatorKey)",1,8,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.ConstantExpression(OperatorKey,int)",1,3,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.clone()",5,10,n/a,9,0,0,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.genericGetNext(byte)",1,13,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getChildExpressions()",0,3,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextBigDecimal()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextBoolean()",1,19,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextDataBag()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextDataByteArray()",1,14,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextDateTime()",1,7,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextMap()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextString()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getNextTuple()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.getValue()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.name()",3,17,n/a,8,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.setValue(Object)",3,13,n/a,5,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.Divide(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.Divide(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.divide(Number,Number,byte)",8,1,n/a,22,1,3,15,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.equalsZero(Number,byte)",8,1,n/a,22,1,2,15,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.genericGetNext(byte)",6,6,n/a,29,2,1,21,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.getNextBigDecimal()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.EqualToExpr.EqualToExpr(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.EqualToExpr.EqualToExpr(OperatorKey,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.EqualToExpr.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.EqualToExpr.doComparison(Result,Result)",4,1,n/a,35,2,2,21,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.EqualToExpr.getNextBoolean()",11,19,n/a,36,4,0,26,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.EqualToExpr.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.EqualToExpr.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.ExpressionOperator(OperatorKey)",1,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.ExpressionOperator(OperatorKey,int)",1,13,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.accumChild(List<ExpressionOperator>,byte)",8,17,n/a,29,6,2,16,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.clone()",2,10,n/a,11,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.containUDF()",2,3,n/a,18,3,0,8,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.getChildExpressions()",n/a,3,9,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.getNextDataBag()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.setIllustrator(Illustrator)",0,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.toString()",5,5,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator.visit(PhyPlanVisitor)",n/a,6,25,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GTOrEqualToExpr.GTOrEqualToExpr(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GTOrEqualToExpr.GTOrEqualToExpr(OperatorKey,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GTOrEqualToExpr.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GTOrEqualToExpr.doComparison(Result,Result)",2,1,n/a,25,1,2,15,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GTOrEqualToExpr.getNextBoolean()",8,19,n/a,29,3,0,21,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GTOrEqualToExpr.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GTOrEqualToExpr.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GreaterThanExpr.GreaterThanExpr(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GreaterThanExpr.GreaterThanExpr(OperatorKey,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GreaterThanExpr.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GreaterThanExpr.doComparison(Result,Result)",2,1,n/a,25,1,2,15,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GreaterThanExpr.getNextBoolean()",8,19,n/a,29,3,0,21,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GreaterThanExpr.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GreaterThanExpr.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LTOrEqualToExpr.LTOrEqualToExpr(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LTOrEqualToExpr.LTOrEqualToExpr(OperatorKey,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LTOrEqualToExpr.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LTOrEqualToExpr.doComparison(Result,Result)",2,1,n/a,25,1,2,15,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LTOrEqualToExpr.getNextBoolean()",8,19,n/a,29,3,0,21,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LTOrEqualToExpr.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LTOrEqualToExpr.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LessThanExpr.LessThanExpr(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LessThanExpr.LessThanExpr(OperatorKey,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LessThanExpr.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LessThanExpr.doComparison(Result,Result)",2,1,n/a,25,1,2,15,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LessThanExpr.getNextBoolean()",8,19,n/a,29,3,0,21,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LessThanExpr.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LessThanExpr.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.Mod(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.Mod(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.genericGetNext(byte)",4,3,n/a,22,1,1,17,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.mod(Number,Number,byte)",5,1,n/a,12,1,3,9,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.Multiply(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.Multiply(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.genericGetNext(byte)",4,6,n/a,22,1,1,17,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.getNextBigDecimal()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.multiply(Number,Number,byte)",8,1,n/a,18,1,3,15,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.NotEqualToExpr.NotEqualToExpr(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.NotEqualToExpr.NotEqualToExpr(OperatorKey,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.NotEqualToExpr.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.NotEqualToExpr.doComparison(Result,Result)",4,1,n/a,35,2,2,21,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.NotEqualToExpr.getNextBoolean()",8,19,n/a,32,3,0,24,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.NotEqualToExpr.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.NotEqualToExpr.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POAnd.POAnd(OperatorKey)",1,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POAnd.POAnd(OperatorKey,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POAnd.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POAnd.getNextBoolean()",7,19,n/a,46,2,0,23,13
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POAnd.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POAnd.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.POBinCond(OperatorKey)",1,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.POBinCond(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.POBinCond(OperatorKey,int,ExpressionOperator,ExpressionOperator,ExpressionOperator)",1,0,n/a,6,0,5,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.attachInput(Tuple)",3,17,n/a,6,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.clone()",8,10,n/a,10,0,0,6,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.genericGetNext(byte)",11,12,n/a,22,2,1,17,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getChildExpressions()",4,3,n/a,13,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getCond()",0,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getLhs()",0,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextBigDecimal()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextBoolean()",4,19,n/a,12,1,0,7,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextDataBag()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextDataByteArray()",1,14,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextDateTime()",1,7,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextMap()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextString()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getNextTuple()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.getRhs()",0,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.illustratorMarkup(Object,Object,int)",0,1,n/a,6,1,3,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.setCond(ExpressionOperator)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.setLhs(ExpressionOperator)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.setRhs(ExpressionOperator)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.POCast(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.POCast(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.clone()",8,10,n/a,16,1,0,10,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.convertWithSchema(Object,ResourceFieldSchema)",207,6,n/a,497,4,2,426,147
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.error()",1,26,n/a,5,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getChildExpressions()",4,3,n/a,13,2,0,5,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getFuncSpec()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextBigDecimal()",31,11,n/a,104,5,0,70,34
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextBigInteger()",31,11,n/a,106,5,0,70,34
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextBoolean()",34,19,n/a,103,5,0,71,33
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextDataBag()",16,2,n/a,83,5,0,48,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextDataByteArray()",5,14,n/a,18,2,0,13,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextDateTime()",34,7,n/a,100,5,0,67,33
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextDouble()",39,11,n/a,110,5,0,74,37
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextFloat()",39,11,n/a,113,5,0,75,37
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextInteger()",39,12,n/a,114,5,0,76,37
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextLong()",37,12,n/a,111,5,0,74,37
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextMap()",16,2,n/a,84,5,0,48,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextString()",31,12,n/a,115,5,0,75,37
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNextTuple()",16,17,n/a,83,5,0,48,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.instantiateFunc()",5,3,n/a,15,2,0,9,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.name()",6,17,n/a,10,0,0,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.readObject(ObjectInputStream)",2,0,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.setFieldSchema(ResourceFieldSchema)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.setFuncSpec(FuncSpec)",1,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POIsNull.POIsNull(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POIsNull.POIsNull(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POIsNull.POIsNull(OperatorKey,int,ExpressionOperator)",1,0,n/a,4,0,3,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POIsNull.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POIsNull.getNextBoolean()",6,19,n/a,35,3,0,26,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POIsNull.name()",2,17,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POIsNull.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.POMapLookUp(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.POMapLookUp(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.POMapLookUp(OperatorKey,int,String)",1,1,n/a,4,0,3,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getChildExpressions()",0,3,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getLookUpKey()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNext()",2,11,n/a,8,1,0,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextBoolean()",1,19,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextDataBag()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextDataByteArray()",1,14,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextDateTime()",1,7,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextMap()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextString()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.getNextTuple()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.processInput()",6,41,n/a,18,1,0,11,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.setLookUpKey(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.PONegative(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.PONegative(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.PONegative(OperatorKey,int,ExpressionOperator)",1,0,n/a,4,0,3,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.getNextBigDecimal()",2,11,n/a,8,1,0,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.getNextBigInteger()",2,11,n/a,8,1,0,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.getNextDouble()",1,11,n/a,8,1,0,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.getNextFloat()",1,11,n/a,8,1,0,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.getNextInteger()",1,12,n/a,8,1,0,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.getNextLong()",1,12,n/a,8,1,0,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.name()",2,17,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONot.PONot(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONot.PONot(OperatorKey,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONot.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONot.getNextBoolean()",7,19,n/a,23,1,0,15,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONot.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONot.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POOr.POOr(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POOr.POOr(OperatorKey,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POOr.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POOr.getNextBoolean()",7,19,n/a,44,1,0,23,13
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POOr.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POOr.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.POProject(OperatorKey)",1,33,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.POProject(OperatorKey,int)",1,10,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.POProject(OperatorKey,int,ArrayList<Integer>)",1,2,n/a,4,0,3,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.POProject(OperatorKey,int,int)",3,10,n/a,5,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.addColumn(ArrayList<Object>,Tuple,int)",5,4,n/a,27,2,3,6,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.attachInput(Tuple)",1,17,n/a,9,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.clone()",8,13,n/a,17,1,0,10,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.consumeInputBag(Result)",29,2,n/a,64,5,1,42,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getChildExpressions()",0,3,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getColumn()",4,5,n/a,9,1,0,5,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getColumns()",2,7,n/a,7,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNext()",13,11,n/a,49,3,0,26,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextBigDecimal()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextBoolean()",1,19,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextDataBag()",2,2,n/a,7,0,0,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextDataByteArray()",1,14,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextDateTime()",1,7,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextMap()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextString()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNextTuple()",22,18,n/a,92,5,0,49,18
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getRangeTuple(Tuple)",6,4,n/a,16,2,1,11,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getStartCol()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.illustratorMarkup(Object,Object,int)",0,2,n/a,6,1,3,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.isOverloaded()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.isProjectToEnd()",0,14,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.isRangeInvalid(int)",1,1,n/a,13,2,1,5,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.isStar()",0,10,n/a,3,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.name()",3,17,n/a,13,1,0,8,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.processInputBag()",14,2,n/a,23,1,0,13,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.setColumn(int)",3,23,n/a,9,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.setColumns(ArrayList<Integer>)",1,3,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.setOverloaded(boolean)",0,31,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.setProjectToEnd(int)",1,7,n/a,5,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.setResultSingleTupleBag(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.setStar(boolean)",0,33,n/a,8,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORegexp.PORegexp(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORegexp.PORegexp(OperatorKey,int)",2,1,n/a,8,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORegexp.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORegexp.getNextBoolean()",5,19,n/a,19,1,0,15,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORegexp.name()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORegexp.setConstExpr(boolean)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORegexp.setImplementation(RegexImpl)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORegexp.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject.PORelationToExprProject(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject.PORelationToExprProject(OperatorKey,int)",1,2,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject.PORelationToExprProject(OperatorKey,int,ArrayList<Integer>)",1,1,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject.PORelationToExprProject(OperatorKey,int,int)",1,2,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject.clone()",8,13,n/a,19,1,0,11,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject.getNextDataBag()",5,2,n/a,36,2,0,14,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject.name()",3,17,n/a,4,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject.reset()",0,2,n/a,15,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject.visit(PhyPlanVisitor)",1,6,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.POUserComparisonFunc(OperatorKey,int,List,FuncSpec)",1,2,n/a,3,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.POUserComparisonFunc(OperatorKey,int,List,FuncSpec,ComparisonFunc)",3,2,n/a,8,0,5,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.attachInput(Tuple,Tuple)",0,1,n/a,5,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.clone()",6,11,n/a,13,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getChildExpressions()",0,3,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getComparator()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getFuncSpec()",0,7,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNext()",1,12,n/a,5,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextBigDecimal()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextBoolean()",1,19,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextDataBag()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextDataByteArray()",1,14,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextDateTime()",1,7,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextInteger()",3,13,n/a,14,0,0,7,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextMap()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextString()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.getNextTuple()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.illustratorMarkup(Object,Object,int)",10,1,n/a,10,1,3,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.instantiateFunc()",3,2,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.name()",4,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.readObject(ObjectInputStream)",2,0,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.POUserFunc(OperatorKey,int,List<PhysicalOperator>)",1,0,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.POUserFunc(OperatorKey,int,List<PhysicalOperator>,FuncSpec)",1,9,n/a,7,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.POUserFunc(OperatorKey,int,List<PhysicalOperator>,FuncSpec,EvalFunc)",3,4,n/a,13,0,5,6,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.clone()",6,10,n/a,10,0,0,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.combinable()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.earlyTerminate()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.finish()",2,1,n/a,6,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getCacheFiles()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getChildExpressions()",0,3,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getFinal()",3,1,n/a,11,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getFunc()",0,14,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getFuncSpec()",0,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getInitial()",3,1,n/a,11,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getIntermed()",3,1,n/a,11,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNext()",32,13,n/a,89,5,0,54,23
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextBigDecimal()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextBoolean()",1,19,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextDataBag()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextDataByteArray()",1,14,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextDateTime()",1,7,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextMap()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextString()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextTuple()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getReferencedOperator()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getReturnType()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getShipFiles()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.hasBeenTerminated()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.instantiateFunc(FuncSpec)",9,7,n/a,17,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.isAsynchronous()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.isEarlyTerminating()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.name()",4,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.needEndOfAllInputProcessing()",2,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.outputSchema(Schema)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.processInput()",32,41,n/a,92,6,0,56,20
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.readObject(ObjectInputStream)",2,0,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setAccumStart()",4,3,n/a,8,1,0,3,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setAlgebraicFunction(byte)",12,2,n/a,24,1,1,13,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setCacheFiles(List<String>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setFuncInputSchema(String)",5,2,n/a,11,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setFuncSpec(FuncSpec)",1,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setIsEarlyTerminating()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setReferencedOperator(PhysicalOperator)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setResultType(byte)",0,138,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setShipFiles(List<String>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.setSignature(String)",1,2,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.Subtract(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.Subtract(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.clone()",5,10,n/a,7,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.genericGetNext(byte)",4,6,n/a,22,1,1,17,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.getNextBigDecimal()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.getNextBigInteger()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.getNextDouble()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.getNextFloat()",1,11,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.getNextInteger()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.getNextLong()",1,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.subtract(Number,Number,byte)",8,1,n/a,22,1,3,15,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryComparisonOperator.UnaryComparisonOperator(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryComparisonOperator.UnaryComparisonOperator(OperatorKey,int)",1,4,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryComparisonOperator.getOperandType()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryComparisonOperator.illustratorMarkup(Object,Object,int)",1,3,n/a,7,1,3,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryComparisonOperator.setOperandType(byte)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryExpressionOperator.UnaryExpressionOperator(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryExpressionOperator.UnaryExpressionOperator(OperatorKey,int)",1,3,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryExpressionOperator.cloneHelper(UnaryExpressionOperator)",1,3,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryExpressionOperator.getChildExpressions()",2,3,n/a,11,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryExpressionOperator.getExpr()",0,3,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryExpressionOperator.setExpr(ExpressionOperator)",0,4,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryExpressionOperator.setInputAsExpr(PhysicalPlan)",2,0,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryExpressionOperator.supportsMultipleInputs()",0,2,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.CompiledAutomaton.CompiledAutomaton(String)",3,1,n/a,5,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.CompiledAutomaton.match(String,String)",1,2,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.CompiledRegex.CompiledRegex(Pattern)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.CompiledRegex.match(String,String)",2,2,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.NonConstantRegex.match(String,String)",7,2,n/a,17,1,2,6,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.RegexImpl.match(String,String)",n/a,2,4,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.RegexInit.RegexInit(PORegexp)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.RegexInit.compile(String)",12,1,n/a,23,2,1,18,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.RegexInit.determineBestRegexMethod(String)",22,1,n/a,108,4,1,58,53
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.RegexInit.match(String,String)",4,2,n/a,11,1,2,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.RegexInit.precedingEscapes(String,int)",1,9,n/a,17,3,2,12,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.RegexInit.setConstExpr(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.DotPOPrinter.DotPOPrinter(PhysicalPlan,PrintStream)",4,1,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.DotPOPrinter.DotPOPrinter(PhysicalPlan,PrintStream,boolean,Set<Operator>,Set<Operator>,Set<Operator>)",1,3,n/a,7,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.DotPOPrinter.getAttributes(PhysicalOperator)",6,4,n/a,20,2,1,13,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.DotPOPrinter.getMultiOutputNestedPlans(PhysicalOperator)",7,1,n/a,13,1,1,8,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.DotPOPrinter.getName(PhysicalOperator)",2,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.DotPOPrinter.getNestedPlans(PhysicalOperator)",18,1,n/a,39,3,1,25,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.DotPOPrinter.makeDumper(PhysicalPlan,PrintStream)",3,5,n/a,8,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.PatternNode(OperatorPlan)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.accept(PlanVisitor)",1,7,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.getClassName()",0,1,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.getMatch()",0,4,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.isEqual(Operator)",0,39,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.isLeafNode()",0,1,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.isSourceNode()",0,1,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.setClassName(Class<?>)",0,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.setLeafNode(boolean)",0,0,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.setMatch(Object)",0,2,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.setSourceNode(boolean)",0,0,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode.toString()",1,0,n/a,8,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternPlan.create(Class<?>[])",5,0,n/a,22,2,1,10,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternPlan.match(List<Operator>,List<Operator<?>>)",13,2,n/a,64,5,2,30,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternPlan.match(OperatorPlan<? extends Operator<?>>)",11,0,n/a,30,3,1,14,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternPlan.match(PatternNode,Operator)",23,2,n/a,56,2,2,26,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternPlan.reset()",5,1,n/a,12,1,0,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternPlan.resetNewlyMatchedPtNodes(int)",4,2,n/a,6,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.PhyPlanVisitor(PhysicalPlan,PlanWalker<PhysicalOperator, PhysicalPlan>)",1,38,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visit(PhysicalOperator)",0,6,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitAdd(Add)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitAnd(POAnd)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitBinCond(POBinCond)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitCast(POCast)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitCollectedGroup(POCollectedGroup)",5,4,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitComparisonFunc(POUserComparisonFunc)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitConstant(ConstantExpression)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitCounter(POCounter)",0,1,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitCross(POCross)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitDemux(PODemux)",5,3,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitDistinct(PODistinct)",0,3,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitDivide(Divide)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitEqualTo(EqualToExpr)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitFRJoin(POFRJoin)",0,3,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitFilter(POFilter)",5,4,n/a,5,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitGTOrEqual(GTOrEqualToExpr)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitGlobalRearrange(POGlobalRearrange)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitGreaterThan(GreaterThanExpr)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitIsNull(POIsNull)",0,2,n/a,2,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitLTOrEqual(LTOrEqualToExpr)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitLessThan(LessThanExpr)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitLimit(POLimit)",5,3,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitLoad(POLoad)",0,3,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitLocalRearrange(POLocalRearrange)",5,5,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitMapLookUp(POMapLookUp)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitMergeCoGroup(POMergeCogroup)",0,3,n/a,2,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitMergeJoin(POMergeJoin)",0,3,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitMod(Mod)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitMultiply(Multiply)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitNative(PONative)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitNegative(PONegative)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitNot(PONot)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitNotEqualTo(NotEqualToExpr)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitOr(POOr)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitPOForEach(POForEach)",5,4,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitPOOptimizedForEach(POOptimizedForEach)",0,2,n/a,6,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitPackage(POPackage)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitPartialAgg(POPartialAgg)",0,2,n/a,2,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitPartitionRearrange(POPartitionRearrange)",5,1,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitPoissonSample(POPoissonSample)",0,2,n/a,2,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitPreCombinerLocalRearrange(POPreCombinerLocalRearrange)",5,3,n/a,12,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitProject(POProject)",0,3,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitRank(PORank)",0,1,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitRegexp(PORegexp)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitReservoirSample(POReservoirSample)",0,2,n/a,2,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitSkewedJoin(POSkewedJoin)",0,3,n/a,2,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitSort(POSort)",5,4,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitSplit(POSplit)",5,4,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitStore(POStore)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitStream(POStream)",0,3,n/a,7,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitSubtract(Subtract)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitUnion(POUnion)",0,3,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitUserFunc(POUserFunc)",0,4,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.PhysicalPlan()",1,70,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.attachInput(Tuple)",2,14,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.clone()",59,15,n/a,88,3,0,63,19
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.connect(PhysicalOperator,PhysicalOperator)",3,128,n/a,6,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.detachInput()",2,7,n/a,4,0,0,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.explain(OutputStream)",1,6,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.explain(OutputStream,boolean)",5,4,n/a,20,1,2,6,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.explain(PrintStream,String,boolean)",13,1,n/a,25,1,3,14,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.isEmpty()",1,66,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.remove(PhysicalOperator)",9,57,n/a,21,2,1,10,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.replace(PhysicalOperator,PhysicalOperator)",6,14,n/a,21,4,2,10,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.resetOpMap()",0,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.setOpMap(MultiMap<PhysicalOperator, PhysicalOperator>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan.toString()",4,2,n/a,10,1,0,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.PlanPrinter(P)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.PlanPrinter(P,PrintStream)",2,5,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.breadthFirst()",3,0,n/a,5,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.breadthFirst(Collection<O>,Set<O>)",9,2,n/a,19,2,2,12,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.depthFirst(O)",67,2,n/a,91,4,1,65,26
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.depthFirstPP()",15,2,n/a,13,1,0,9,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.dispTabs()",1,1,n/a,4,0,0,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.planString(List<PhysicalPlan>)",4,11,n/a,8,1,1,5,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.planString(PhysicalPlan)",8,4,n/a,11,0,1,8,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.print(OutputStream)",3,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.setVerbose(boolean)",0,6,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.shiftStringByTabs(String,int)",7,3,n/a,12,1,2,11,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.visit()",4,119,n/a,10,1,0,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.visitFilter(POFilter)",2,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.visitGlobalRearrange(POGlobalRearrange)",2,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.visitLoad(POLoad)",2,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.visitLocalRearrange(POLocalRearrange)",2,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.visitPackage(POPackage)",2,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.visitStartMap(POUnion)",2,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter.visitStore(POStore)",2,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.UdfCacheShipFilesVisitor.UdfCacheShipFilesVisitor(PhysicalPlan)",2,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.UdfCacheShipFilesVisitor.getCacheFiles()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.UdfCacheShipFilesVisitor.getShipFiles()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.UdfCacheShipFilesVisitor.visitCast(POCast)",9,2,n/a,15,3,1,8,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.UdfCacheShipFilesVisitor.visitLoad(POLoad)",6,3,n/a,9,1,1,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.UdfCacheShipFilesVisitor.visitStore(POStore)",6,2,n/a,9,1,1,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.UdfCacheShipFilesVisitor.visitUserFunc(POUserFunc)",6,4,n/a,8,1,1,4,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.XMLPhysicalPlanPrinter(PhysicalPlan,Document,Element)",2,4,n/a,5,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.createAlias(PhysicalOperator)",3,1,n/a,9,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.createPONode(PhysicalOperator)",29,4,n/a,25,1,1,20,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.createPackagerNode(Packager)",6,2,n/a,11,2,1,6,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.depthFirst(PhysicalOperator,Element)",30,2,n/a,58,3,2,48,18
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.depthFirstPP(Element)",3,1,n/a,7,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.print(OutputStream)",13,0,n/a,16,1,1,12,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.visit()",2,118,n/a,10,1,0,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.visitPlan(List<PhysicalPlan>,Element)",1,3,n/a,6,1,2,3,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter.visitPlan(PhysicalPlan,Element)",2,1,n/a,7,1,2,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.AccumulativeTupleBuffer.clear()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.AccumulativeTupleBuffer.getTuples(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.AccumulativeTupleBuffer.hasNextBatch()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.AccumulativeTupleBuffer.nextBatch()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.CombinerPackager.CombinerPackager(Packager,boolean[])",2,1,n/a,23,1,2,16,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.CombinerPackager.createDataBag(int)",6,1,n/a,12,3,1,7,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.CombinerPackager.getNext()",9,4,n/a,47,3,0,29,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.CombinerPackager.getValueTuple(PigNullableWritable,NullableTuple,int)",1,9,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.CombinerPackager.setKeyInfo(Map<Integer, Pair<Boolean, Map<Integer, Integer>>>)",1,5,n/a,16,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.JoinPackager(Packager,POForEach)",19,1,n/a,21,1,2,15,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.attachInput(Object,DataBag[],boolean[])",4,3,n/a,21,2,3,14,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.getForEach()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.getInputPlans()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.getNext()",19,4,n/a,104,3,0,57,20
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.name()",3,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.setChunkSize(long)",0,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.setIllustrator(Illustrator)",1,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.setInputPlans(List<PhysicalPlan>)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager.setToBeFlattened(List<Boolean>)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.LitePackager.clone()",2,3,n/a,13,1,0,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.LitePackager.getInner()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.LitePackager.getNext()",7,4,n/a,24,1,0,11,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.LitePackager.getValueTuple(PigNullableWritable,NullableTuple,int)",1,9,n/a,17,0,3,5,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.LitePackager.illustratorMarkup(Object,Object,int)",12,3,n/a,21,3,3,17,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.LitePackager.isDistinct()",0,5,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.LitePackager.setDistinct(boolean)",0,3,n/a,6,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.LitePackager.setInner(boolean[])",0,10,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.addIsKeyWrappedList(List<Boolean>)",1,1,n/a,10,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.addPackager(Packager)",1,3,n/a,9,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.addPackager(Packager,byte)",2,1,n/a,14,0,2,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.getIsKeyWrappedList()",1,1,n/a,9,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.getNext()",24,4,n/a,66,2,0,31,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.getNumInputs(byte)",2,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.getPackagers()",0,5,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.getValueTuple(PigNullableWritable,NullableTuple,int)",9,9,n/a,13,1,3,8,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.isInCombiner()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.isSameMapKeyType()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.setInCombiner(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager.setSameMapKeyType(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.POCollectedGroup(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.POCollectedGroup(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.POCollectedGroup(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.POCollectedGroup(OperatorKey,int,List<PhysicalOperator>)",3,3,n/a,5,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.attachInput(Tuple)",1,17,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.constructOutput(List<Result>,Tuple)",7,1,n/a,19,2,2,11,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.getKeyType()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.getNextTuple()",32,17,n/a,78,4,0,46,21
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.getPlans()",0,4,n/a,3,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.getStreamCloseResult()",5,1,n/a,10,1,0,7,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.name()",4,17,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.setIllustratorEquivalenceClasses(Tuple)",3,0,n/a,5,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.setKeyType(byte)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.setPlans(List<PhysicalPlan>)",4,1,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.POCounter(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.POCounter(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.POCounter(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.POCounter(OperatorKey,int,List,List<PhysicalPlan>,List<Boolean>)",3,2,n/a,8,0,5,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.POCounter(OperatorKey,int,List<PhysicalOperator>)",1,3,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.POCounter(POCounter)",1,1,n/a,8,0,1,6,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.addCounterValue(Result)",24,2,n/a,47,2,1,21,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.addToLocalCounter(Long)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.getAscendingColumns()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.getCounterPlans()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.getLocalCounter()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.getNextTuple()",2,17,n/a,15,2,0,9,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.getOperationID()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.getTaskId()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.illustratorMarkup(Object,Object,int)",1,1,n/a,7,1,3,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.incrementLocalCounter()",0,1,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.incrementReduceCounter(Long)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.isDenseRank()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.isRowNumber()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.name()",3,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.resetLocalCounter()",0,2,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.setAscendingColumns(List<Boolean>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.setCounterPlans(List<PhysicalPlan>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.setIsDenseRank(boolean)",0,2,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.setIsRowNumber(boolean)",0,2,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.setLocalCounter(Long)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.setOperationID(String)",0,2,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.setTaskId(int)",0,3,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter.visit(PhyPlanVisitor)",1,7,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.POCross(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.POCross(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.POCross(OperatorKey,int)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.POCross(OperatorKey,int,List<PhysicalOperator>)",1,0,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.accumulateData()",9,1,n/a,23,2,0,20,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.clearMemory()",0,3,n/a,8,0,0,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.createTuple(Tuple[])",6,3,n/a,11,2,1,11,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.getNextTuple()",23,17,n/a,76,3,0,55,14
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.illustratorMarkup(Object,Object,int)",8,1,n/a,17,2,3,12,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.loadLastBag()",6,2,n/a,20,1,0,14,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.name()",3,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.PODemux(OperatorKey)",1,1,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.PODemux(OperatorKey,List<PhysicalOperator>)",1,0,n/a,9,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.PODemux(OperatorKey,int)",1,0,n/a,10,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.PODemux(OperatorKey,int,List<PhysicalOperator>)",1,3,n/a,11,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.addPlan(PhysicalPlan)",3,4,n/a,9,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.attachInputWithIndex(Tuple)",10,2,n/a,17,1,1,8,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.getNextTuple()",5,17,n/a,23,3,0,11,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.getPlans()",0,7,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.getStreamCloseResult()",18,1,n/a,52,4,0,35,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.illustratorMarkup(Object,Object,int)",0,0,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.isInCombiner()",0,0,n/a,10,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.name()",3,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.runPipeline(PhysicalOperator)",1,1,n/a,17,2,1,10,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.setInCombiner(boolean)",0,1,n/a,10,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.PODistinct(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.PODistinct(OperatorKey,List<PhysicalOperator>)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.PODistinct(OperatorKey,int)",1,2,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.PODistinct(OperatorKey,int,List<PhysicalOperator>)",1,2,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.clone()",4,7,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.getCustomPartitioner()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.getNextTuple()",16,17,n/a,45,4,0,28,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.illustratorMarkup(Object,Object,int)",4,1,n/a,8,1,3,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.isBlocking()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.name()",3,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.reset()",0,2,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.setCustomPartitioner(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.POFRJoin(OperatorKey,int,List<PhysicalOperator>,List<List<PhysicalPlan>>,List<List<Byte>>,FileSpec[],int,boolean,Tuple)",1,0,n/a,6,0,9,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.POFRJoin(OperatorKey,int,List<PhysicalOperator>,List<List<PhysicalPlan>>,List<List<Byte>>,FileSpec[],int,boolean,Tuple,Schema[],Schema[])",9,2,n/a,33,1,11,21,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.POFRJoin(POFRJoin)",1,1,n/a,17,0,1,15,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.TupleToMapKey.TupleToMapKey(int,SchemaTupleFactory)",1,2,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.TupleToMapKey.get(Tuple)",2,6,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.TupleToMapKey.put(Tuple,TuplesToSchemaTupleList)",2,2,n/a,6,1,2,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.createJoinPlans(OperatorKey)",22,1,n/a,39,2,1,23,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.genKey(OperatorKey)",3,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.getFragment()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.getJoinPlans()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.getLRs()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.getNextTuple()",22,18,n/a,90,4,0,54,19
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.getReplFiles()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.getValueTuple(POLocalRearrange,Tuple)",19,3,n/a,50,4,2,26,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.illustratorMarkup(Object,Object,int)",0,0,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.isKeyNull(Object)",2,2,n/a,10,2,1,10,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.name()",3,18,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.readObject(ObjectInputStream)",2,0,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.setFragment(int)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.setReplFiles(FileSpec[])",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.setUpHashMap()",32,1,n/a,64,3,0,47,10
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.POFilter(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.POFilter(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.POFilter(OperatorKey,int)",1,2,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.POFilter(OperatorKey,int,List<PhysicalOperator>)",1,3,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.clone()",3,7,n/a,7,0,0,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.getNextTuple()",5,17,n/a,73,2,0,18,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.getPlan()",0,12,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.illustratorMarkup(Object,Object,int)",10,1,n/a,15,2,3,12,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.name()",3,18,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.setPlan(PhysicalPlan)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.POForEach(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.POForEach(OperatorKey,List)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.POForEach(OperatorKey,int)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.POForEach(OperatorKey,int,List<PhysicalPlan>,List<Boolean>)",4,27,n/a,7,0,4,5,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.POForEach(OperatorKey,int,List<PhysicalPlan>,List<Boolean>,Schema)",1,1,n/a,5,0,5,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.ResetFinder.ResetFinder(PhysicalPlan,List<PhysicalOperator>)",2,1,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.ResetFinder.visitDistinct(PODistinct)",1,3,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.ResetFinder.visitLimit(POLimit)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.ResetFinder.visitProject(POProject)",1,3,n/a,9,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.ResetFinder.visitSort(POSort)",1,4,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.addInputPlan(PhysicalPlan,boolean)",4,3,n/a,23,1,2,16,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.attachInputToPlans(Tuple)",1,4,n/a,6,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.clone()",18,7,n/a,31,2,0,16,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.createTuple(Object[])",10,2,n/a,34,4,1,21,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.earlyTerminate()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getFlatStr()",7,3,n/a,14,1,0,9,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getInputPlans()",0,24,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getLeaves()",7,7,n/a,22,3,0,12,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getNextTuple()",27,18,n/a,106,6,0,59,28
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getOpsToBeReset()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getToBeFlattened()",2,3,n/a,10,2,0,8,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.illustratorMarkup(Object,Object,int)",9,1,n/a,17,2,3,11,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.illustratorMarkup2(Object[],Object)",11,1,n/a,26,3,2,19,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.inProcessing()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.isEarlyTerminated()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.isMapSideOnly()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.name()",4,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.needEndOfAllInputProcessing()",4,1,n/a,16,3,0,9,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.processPlan()",26,5,n/a,158,5,0,100,39
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.reInitialize()",4,2,n/a,23,3,0,16,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.setAccumEnd()",5,3,n/a,13,3,0,7,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.setAccumStart()",5,4,n/a,13,3,0,7,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.setAccumulative()",5,4,n/a,13,3,0,7,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.setInputPlans(List<PhysicalPlan>)",1,4,n/a,5,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.setMapSideOnly(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.setOpsToBeReset(List<PhysicalOperator>)",0,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.setToBeFlattened(List<Boolean>)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.setUpFlattens(List<Boolean>)",4,3,n/a,11,2,1,7,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.visit(PhyPlanVisitor)",1,8,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.POGlobalRearrange(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.POGlobalRearrange(OperatorKey,List)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.POGlobalRearrange(OperatorKey,int)",1,4,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.POGlobalRearrange(OperatorKey,int,List)",1,3,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.getCustomPartitioner()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.isBlocking()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.isCross()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.name()",3,18,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.setCross(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.setCustomPartitioner(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.visit(PhyPlanVisitor)",1,8,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.POLimit(OperatorKey)",1,8,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.POLimit(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.POLimit(OperatorKey,int)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.POLimit(OperatorKey,int,List<PhysicalOperator>)",1,4,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.clone()",7,7,n/a,12,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.getLimit()",0,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.getLimitPlan()",0,9,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.getNextTuple()",14,17,n/a,49,2,0,34,17
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.illustratorMarkup(Object,Object,int)",4,1,n/a,9,1,3,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.reset()",0,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.setLimit(long)",0,11,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.setLimitPlan(PhysicalPlan)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.POLoad(OperatorKey)",1,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.POLoad(OperatorKey,FileSpec)",1,4,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.POLoad(OperatorKey,LoadFunc)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.POLoad(OperatorKey,int,FileSpec)",1,4,n/a,4,0,3,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.getCacheFiles()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.getLFile()",0,51,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.getLimit()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.getLoadFunc()",3,17,n/a,7,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.getNextTuple()",7,21,n/a,38,2,0,19,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.getPc()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.getShipFiles()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.getSignature()",0,13,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.illustratorMarkup(Object,Object,int)",14,1,n/a,32,4,3,24,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.isTmpLoad()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.name()",5,18,n/a,6,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.setCacheFiles(List<String>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.setIsTmpLoad(boolean)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.setLFile(FileSpec)",0,9,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.setLimit(long)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.setPc(PigContext)",0,7,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.setShipFiles(List<String>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.setSignature(String)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.setUp()",6,1,n/a,13,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.tearDown()",0,1,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.POLocalRearrange(OperatorKey)",1,10,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.POLocalRearrange(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.POLocalRearrange(OperatorKey,int)",1,5,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.POLocalRearrange(OperatorKey,int,List<PhysicalOperator>)",5,4,n/a,8,0,3,6,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.POLocalRearrange(POLocalRearrange)",1,1,n/a,25,0,1,23,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.attachInput(Tuple)",1,22,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.clone()",5,10,n/a,13,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.clonePlans(List<PhysicalPlan>)",4,2,n/a,7,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.constructLROutput(List<Result>,List<Result>,Tuple)",31,3,n/a,81,5,3,46,14
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.deepCopyTo(POLocalRearrange)",15,3,n/a,27,2,1,17,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.detachPlans(List<PhysicalPlan>)",1,2,n/a,5,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.getIndex()",0,14,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.getKeyFromResult(List<Result>,byte)",10,3,n/a,27,2,2,16,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.getKeyType()",0,7,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.getMainKeyType()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.getNextTuple()",24,25,n/a,99,4,0,72,20
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.getPlans()",0,11,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.getProjectedColsMap()",0,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.getSecondaryProjectedColsMap()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.illustratorMarkup(Object,Object,int)",6,3,n/a,15,2,3,9,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.isCross()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.isDistinct()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.isKeyCompound()",0,2,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.isKeyTuple()",0,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.isProjectStar()",0,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.isSecondaryKeyTuple()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.isSecondaryProjectStar()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.name()",4,19,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setCross(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setDistinct(boolean)",1,4,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setIndex(int)",1,18,n/a,10,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setIndex(int,boolean)",1,2,n/a,27,1,2,5,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setKeyType(byte)",0,25,n/a,8,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setMultiQueryIndex(int)",1,4,n/a,10,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setPlans(List<PhysicalPlan>)",16,20,n/a,69,6,1,32,13
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setPlansFromCombiner(List<PhysicalPlan>)",12,1,n/a,54,5,1,25,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setSecondaryPlans(List<PhysicalPlan>)",21,3,n/a,76,6,1,36,14
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setStripKeyFromValue(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setUseSecondaryKey(boolean)",0,5,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.visit(PhyPlanVisitor)",1,8,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.POMergeCogroup(OperatorKey,List<PhysicalOperator>,POLocalRearrange[],int)",2,1,n/a,7,0,4,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.applyLRon(Tuple,int)",6,5,n/a,13,1,2,9,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.getFirstKeyOfNextSplit(int,List<Pair<Integer, Tuple>>)",7,1,n/a,16,1,2,10,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.getIdxFuncSpec()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.getIndexFileName()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.getLRInnerPlansOf(int)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.getNextTuple()",50,17,n/a,126,5,0,71,34
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.getOutputTuple()",5,3,n/a,9,0,0,9,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.name()",3,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.needToBreak(Tuple,Tuple)",6,2,n/a,17,0,2,9,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.printHeap()",7,0,n/a,9,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.readIndex()",18,1,n/a,29,1,0,16,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.readObject(ObjectInputStream)",15,0,n/a,34,4,1,23,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.setEndOfRecordMark(byte)",0,1,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.setIdxFuncSpec(FuncSpec)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.setIndexFileName(String)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.setLoaderSignatures(List<String>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.setSideFileSpecs(List<String>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.setSideLoadFuncs(List<FuncSpec>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.setup(Tuple)",37,1,n/a,73,5,1,37,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.POMergeJoin(OperatorKey,int,List<PhysicalOperator>,MultiMap<PhysicalOperator, PhysicalPlan>,List<List<Byte>>,JOINTYPE,Schema,Schema,Schema)",2,1,n/a,20,0,9,10,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.TuplesToSchemaTupleList.TuplesToSchemaTupleList(int,TupleMaker<?>)",1,3,n/a,6,1,2,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.TuplesToSchemaTupleList.add(Tuple)",2,7,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.TuplesToSchemaTupleList.convert(Tuple,SchemaTupleFactory)",4,3,n/a,12,1,2,6,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.TuplesToSchemaTupleList.get(int)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.TuplesToSchemaTupleList.getList()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.TuplesToSchemaTupleList.size()",1,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.createJoinPlans(MultiMap<PhysicalOperator, PhysicalPlan>,List<List<Byte>>)",16,1,n/a,20,2,2,11,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.extractKeysFromTuple(Result,int)",5,4,n/a,13,1,2,9,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.genKey()",3,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.getIndexFile()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.getInnerPlansOf(int)",2,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.getJoinType()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.getNextRightInp()",12,4,n/a,34,4,0,21,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.getNextRightInp(Object)",4,1,n/a,15,2,1,6,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.getNextTuple()",62,20,n/a,212,6,0,141,39
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.getSignature()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.name()",3,17,n/a,8,0,0,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.newLeftTupleArray()",1,4,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.prepareTupleFactories()",7,1,n/a,24,1,0,13,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.readObject(ObjectInputStream)",2,0,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.seekInRightStream(Object)",11,1,n/a,16,1,1,9,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.setIndexFile(String)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.setRightInputFileName(String)",0,4,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.setRightLoaderFuncSpec(FuncSpec)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.setSignature(String)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.setupRightPipeline(PhysicalPlan)",10,2,n/a,15,2,1,10,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.supportsMultipleOutputs()",0,2,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.throwProcessingException(boolean,Exception)",2,5,n/a,9,1,2,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.PONative(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.checkQuote(int,String,char)",3,2,n/a,3,0,3,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.getNativeMRjar()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.getParams()",1,3,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.name()",4,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.setNativeMRjar(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.setParams(String[])",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.unquotePropertyParams()",8,1,n/a,22,3,0,10,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach.POOptimizedForEach(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach.POOptimizedForEach(OperatorKey,List)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach.POOptimizedForEach(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach.POOptimizedForEach(OperatorKey,int,List)",1,0,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach.POOptimizedForEach(OperatorKey,int,List<PhysicalPlan>,List<Boolean>)",3,5,n/a,6,0,4,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach.clone()",10,7,n/a,23,2,0,9,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach.getNextTuple()",5,20,n/a,45,3,0,22,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach.name()",3,17,n/a,5,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach.visit(PhyPlanVisitor)",1,8,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackage(OperatorKey)",1,10,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackage(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackage(OperatorKey,int)",1,3,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackage(OperatorKey,int,List<PhysicalOperator>)",2,3,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackage(OperatorKey,int,List<PhysicalOperator>,Packager)",1,1,n/a,6,0,4,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackage(POPackage)",1,1,n/a,6,0,1,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackageTupleBuffer.POPackageTupleBuffer(int,Object,Iterator<NullableTuple>)",1,1,n/a,10,1,3,8,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackageTupleBuffer.clear()",1,1,n/a,7,1,0,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackageTupleBuffer.getTuples(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackageTupleBuffer.hasNextBatch()",1,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackageTupleBuffer.illustratorMarkup(Object,Object,int)",1,1,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackageTupleBuffer.nextBatch()",7,1,n/a,25,3,0,16,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.PeekedBag.PeekedBag(Packager,NullableTuple,Iterator<NullableTuple>,PigNullableWritable)",2,1,n/a,7,0,4,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.PeekedBag.iterator()",14,149,n/a,5,4,0,18,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.attachInput(PigNullableWritable,Iterator<NullableTuple>)",4,4,n/a,18,1,2,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.clone()",5,9,n/a,14,0,0,7,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.detachInput()",0,14,n/a,9,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.getNextTuple()",27,19,n/a,93,4,0,46,17
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.getNumInps()",0,13,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.getPkgr()",0,59,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.illustratorMarkup(Object,Object,int)",1,1,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.name()",6,19,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.numberOfEquivalenceClasses()",1,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.setIllustrator(Illustrator)",2,6,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.setNumInps(int)",1,12,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.setPkgr(Packager)",2,9,n/a,5,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.visit(PhyPlanVisitor)",1,8,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.POPartialAgg(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.addKeyValToMap(Map<Object, List<Tuple>>,Object,Tuple)",9,3,n/a,20,2,3,12,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.aggregate(Map<Object, List<Tuple>>,Map<Object, List<Tuple>>,int)",13,2,n/a,17,1,3,9,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.aggregateBothLevels(boolean,boolean)",5,4,n/a,12,1,2,5,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.aggregateFirstLevel()",3,1,n/a,12,1,0,7,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.aggregateRawRow(Object)",6,1,n/a,8,0,1,6,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.aggregateSecondLevel()",5,2,n/a,10,1,0,7,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.checkSizeReduction()",6,1,n/a,17,2,0,11,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.createValueTuple(Object,List<Tuple>)",11,3,n/a,22,2,2,17,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.disableMapAgg()",1,2,n/a,6,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.estimateMemThresholds()",12,1,n/a,32,3,0,21,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.getAggResultTuple(Object)",1,2,n/a,8,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.getKeyPlan()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.getMemorySize()",0,6,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.getNextTuple()",23,17,n/a,93,4,0,51,24
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.getOutput(Object,Tuple)",10,3,n/a,20,2,2,11,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.getResult(ExpressionOperator)",6,2,n/a,25,1,1,21,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.getValuePlans()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.illustratorMarkup(Object,Object,int)",1,0,n/a,6,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.init()",15,1,n/a,38,2,0,28,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.mapAggDisabled()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.name()",3,17,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.setKeyPlan(PhysicalPlan)",2,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.setValuePlans(List<PhysicalPlan>)",4,1,n/a,7,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.shouldAggregateFirstLevel()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.shouldAggregateSecondLevel()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.shouldSpill()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.spill()",5,1,n/a,23,4,0,13,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.spillResult()",11,1,n/a,15,1,0,10,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.startSpill(boolean)",4,5,n/a,10,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.POPartitionRearrange(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.POPartitionRearrange(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.POPartitionRearrange(OperatorKey,int)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.POPartitionRearrange(OperatorKey,int,List<PhysicalOperator>)",2,3,n/a,5,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.clone()",1,10,n/a,9,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.constructPROutput(List<Result>,Tuple)",14,1,n/a,28,2,2,18,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.getNextTuple()",10,25,n/a,41,3,0,23,10
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.getPigContext()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.init()",10,1,n/a,23,1,0,12,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.name()",4,19,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange.setPigContext(PigContext)",0,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample.POPoissonSample(OperatorKey,int,int,float,long)",1,1,n/a,15,1,5,12,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample.createNumRowTuple(Tuple)",8,2,n/a,18,2,1,11,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample.getNextTuple()",7,17,n/a,71,3,0,50,19
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample.illustratorMarkup(Object,Object,int)",0,0,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample.updateSkipInterval(Tuple)",1,2,n/a,18,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.POPreCombinerLocalRearrange(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.POPreCombinerLocalRearrange(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.POPreCombinerLocalRearrange(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.POPreCombinerLocalRearrange(OperatorKey,int,List<PhysicalOperator>)",2,4,n/a,4,0,3,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.attachInput(Tuple)",1,17,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.constructLROutput(List<Result>,Tuple)",9,1,n/a,23,2,2,13,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.getKeyType()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.getNextTuple()",11,17,n/a,54,3,0,38,10
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.getPlans()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.name()",4,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.setKeyType(byte)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.setPlans(List<PhysicalPlan>)",4,1,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.PORank(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.PORank(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.PORank(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.PORank(OperatorKey,int,List,List<PhysicalPlan>,List<Boolean>)",9,2,n/a,11,1,5,6,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.PORank(OperatorKey,int,List<PhysicalOperator>)",1,3,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.PORank(PORank)",1,1,n/a,6,0,1,4,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.addRank(Result)",8,2,n/a,19,0,1,10,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.getAscendingCols()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.getNextTuple()",2,17,n/a,15,2,0,9,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.getOperationID()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.getRankCounterOffset(Integer)",6,1,n/a,12,1,1,8,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.getRankPlans()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.illustratorMarkup(Object,Object,int)",7,1,n/a,12,1,3,8,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.name()",3,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.setAscendingCols(List<Boolean>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.setOperationID(String)",0,2,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.setRankPlans(List<PhysicalPlan>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank.visit(PhyPlanVisitor)",1,7,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.POReservoirSample(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.POReservoirSample(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.POReservoirSample(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.POReservoirSample(OperatorKey,int,List<PhysicalOperator>)",1,3,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.POReservoirSample(OperatorKey,int,List<PhysicalOperator>,int)",1,1,n/a,4,0,4,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.createNumRowTuple(Tuple)",8,1,n/a,17,2,1,10,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.getNextTuple()",6,17,n/a,53,3,0,32,16
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.getSample()",3,2,n/a,18,1,0,12,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.illustratorMarkup(Object,Object,int)",0,1,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.retrieveSample()",4,2,n/a,17,2,0,10,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.POSkewedJoin(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.POSkewedJoin(OperatorKey,List<PhysicalOperator>,boolean[])",1,0,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.POSkewedJoin(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.POSkewedJoin(OperatorKey,int,List<PhysicalOperator>,boolean[])",1,4,n/a,10,2,4,7,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.addSchema(Schema)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.getInnerFlags()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.getJoinPlans()",0,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.getSchema(int)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.illustratorMarkup(Object,Object,int)",0,0,n/a,4,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.name()",3,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.setJoinPlans(MultiMap<PhysicalOperator, PhysicalPlan>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.POSort(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.POSort(OperatorKey,List)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.POSort(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.POSort(OperatorKey,int,List)",1,0,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.POSort(OperatorKey,int,List,List<PhysicalPlan>,List<Boolean>,POUserComparisonFunc)",9,8,n/a,28,2,6,12,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.SortComparator.compare(Tuple,Tuple)",15,0,n/a,37,5,2,21,10
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.SortComparator.getResult(PhysicalPlan,byte)",5,2,n/a,26,2,2,21,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.UDFSortComparator.compare(Tuple,Tuple)",4,0,n/a,17,1,2,9,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.clone()",12,7,n/a,20,1,0,10,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.getLimit()",0,3,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.getMAscCols()",0,8,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.getMSortFunc()",0,8,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.getNextTuple()",18,17,n/a,45,4,0,29,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.getSortPlans()",0,23,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.illustratorMarkup(Object,Object,int)",4,1,n/a,8,1,3,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.isBlocking()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.isLimited()",0,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.name()",4,17,n/a,7,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.reset()",0,2,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.setLimit(long)",0,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.setMSortFunc(POUserComparisonFunc)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.setSortPlans(List<PhysicalPlan>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSortedDistinct.POSortedDistinct(OperatorKey)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSortedDistinct.POSortedDistinct(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSortedDistinct.POSortedDistinct(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSortedDistinct.POSortedDistinct(OperatorKey,int,List<PhysicalOperator>)",1,2,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSortedDistinct.getNextTuple()",4,17,n/a,24,3,0,14,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSortedDistinct.name()",3,17,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.POSplit(OperatorKey)",1,2,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.POSplit(OperatorKey,List<PhysicalOperator>)",1,0,n/a,8,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.POSplit(OperatorKey,int)",1,1,n/a,9,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.POSplit(OperatorKey,int,List<PhysicalOperator>)",1,3,n/a,10,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.addPlan(PhysicalPlan)",3,6,n/a,9,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.clone()",6,7,n/a,11,1,0,7,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.getNextTuple()",8,17,n/a,22,2,0,13,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.getPlans()",0,14,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.getSplitStore()",0,2,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.getStreamCloseResult()",13,2,n/a,42,4,0,30,13
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.illustratorMarkup(Object,Object,int)",0,0,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.name()",2,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.processPlan()",8,2,n/a,12,2,0,8,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.removePlan(PhysicalPlan)",3,1,n/a,9,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.runPipeline(PhysicalOperator)",1,1,n/a,16,2,1,12,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.setSplitStore(FileSpec)",0,1,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.POStore(OperatorKey)",1,7,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.POStore(OperatorKey,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.POStore(OperatorKey,int,List<PhysicalOperator>)",1,2,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.POStore(POStore)",1,1,n/a,12,0,1,10,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.cleanUp()",1,0,n/a,9,1,0,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.disableCounter()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getCacheFiles()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getIndex()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getInputSpec()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getNextTuple()",6,18,n/a,29,3,0,21,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getSFile()",0,45,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getSchema()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getShipFiles()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getSignature()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getSortInfo()",0,1,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.getStoreFunc()",3,18,n/a,7,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.illustratorMarkup(Object,Object,int)",6,2,n/a,12,1,3,8,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.isMultiStore()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.isTmpStore()",0,9,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.name()",5,19,n/a,7,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setCacheFiles(List<String>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setDisableCounter(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setIndex(int)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setInputSpec(FileSpec)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setIsTmpStore(boolean)",0,5,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setMultiStore(boolean)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setSFile(FileSpec)",0,23,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setSchema(Schema)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setShipFiles(List<String>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setSignature(String)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setSortInfo(SortInfo)",0,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setStoreFunc(StoreFuncInterface)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setStoreImpl(POStoreImpl)",0,6,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.setUp()",4,6,n/a,24,4,0,10,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.tearDown()",1,3,n/a,9,1,0,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStoreImpl.cleanUp()",0,1,n/a,9,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStoreImpl.createStoreFunc(POStore)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStoreImpl.tearDown()",0,1,n/a,7,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.POStream(OperatorKey,ExecutableManager,StreamingCommand,Properties)",8,1,n/a,14,1,4,7,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.finish()",1,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.getBinaryInputQueue()",0,1,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.getBinaryOutputQueue()",0,2,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.getCommand()",0,2,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.getInitialized()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.getNextHelper(Tuple)",13,1,n/a,59,7,1,25,11
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.getNextTuple()",10,18,n/a,116,5,0,33,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.getShipCacheProperties()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.illustratorMarkup(Object,Object,int)",4,3,n/a,9,1,3,5,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.isFetchable()",0,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.name()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.parseShipCacheSpecs(List<String>,Properties,String)",15,2,n/a,24,2,3,14,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.setFetchable(boolean)",0,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.setInitialized(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.toString()",3,4,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.POUnion(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.POUnion(OperatorKey,List<PhysicalOperator>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.POUnion(OperatorKey,int)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.POUnion(OperatorKey,int,List<PhysicalOperator>)",1,3,n/a,3,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.clearDone()",1,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.getNextTuple()",18,17,n/a,70,4,0,31,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.illustratorMarkup(Object,Object,int)",10,2,n/a,18,3,3,14,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.name()",3,18,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.setInputs(List<PhysicalOperator>)",4,25,n/a,10,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.attachInput(Object,DataBag[],boolean[])",3,3,n/a,16,2,3,11,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.checkBagType()",4,2,n/a,11,3,0,6,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.clone()",10,3,n/a,22,2,0,18,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.detachInput()",0,9,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getBag()",2,2,n/a,8,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getIllustrator()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getInner()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getKey()",0,3,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getKey(PigNullableWritable)",2,3,n/a,8,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getKeyAsTuple()",0,3,n/a,6,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getKeyInfo()",0,5,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getKeyTuple()",0,4,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getKeyType()",0,10,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getNext()",13,4,n/a,36,4,0,23,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getNumInputs()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getNumInputs(byte)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getPackageType()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.getValueTuple(PigNullableWritable,NullableTuple,int)",19,9,n/a,56,4,3,28,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.illustratorMarkup(Object,Object,int)",27,2,n/a,62,4,3,44,16
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.illustratorMarkup2(Object,Object)",5,4,n/a,15,2,2,10,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.isDistinct()",0,5,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.name()",2,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.numberOfEquivalenceClasses()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setDistinct(boolean)",0,3,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setIllustrator(Illustrator)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setInner(boolean[])",0,10,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setKeyCompound(boolean)",0,3,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setKeyInfo(Map<Integer, Pair<Boolean, Map<Integer, Integer>>>)",0,5,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setKeyTuple(boolean)",0,3,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setKeyType(byte)",0,19,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setNumInputs(int)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setPackageType(PackageType)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setParent(POPackage)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.setUseSecondaryKey(boolean)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.starMarkup(Tuple,Tuple,Tuple)",3,1,n/a,10,1,3,6,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.MonitoredUDFExecutor.ErrorCallback.handleError(EvalFunc,Exception)",7,0,n/a,8,1,2,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.MonitoredUDFExecutor.ErrorCallback.handleTimeout(EvalFunc,Exception)",6,0,n/a,8,1,2,4,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.MonitoredUDFExecutor.MonitoredUDFExecutor(EvalFunc)",21,1,n/a,9,3,1,17,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.MonitoredUDFExecutor.getDefaultValue(MonitoredUDF,Type)",19,1,n/a,16,1,2,11,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.MonitoredUDFExecutor.monitorExec(Tuple)",12,1,n/a,4,2,1,14,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.MonitoredUDFExecutor.terminate()",1,1,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.OpFinder(PhysicalPlan,Class<C>)",2,2,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.getFoundOps()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.planContainsOp()",1,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visit(PhysicalOperator)",3,57,n/a,7,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitAdd(Add)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitAnd(POAnd)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitBinCond(POBinCond)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitCast(POCast)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitCollectedGroup(POCollectedGroup)",2,4,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitComparisonFunc(POUserComparisonFunc)",2,2,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitConstant(ConstantExpression)",2,2,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitCross(POCross)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitDemux(PODemux)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitDistinct(PODistinct)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitDivide(Divide)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitEqualTo(EqualToExpr)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitFRJoin(POFRJoin)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitFilter(POFilter)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitGTOrEqual(GTOrEqualToExpr)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitGlobalRearrange(POGlobalRearrange)",2,2,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitGreaterThan(GreaterThanExpr)",2,2,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitIsNull(POIsNull)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitLTOrEqual(LTOrEqualToExpr)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitLessThan(LessThanExpr)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitLimit(POLimit)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitLoad(POLoad)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitLocalRearrange(POLocalRearrange)",2,5,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitMapLookUp(POMapLookUp)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitMergeCoGroup(POMergeCogroup)",2,3,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitMergeJoin(POMergeJoin)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitMod(Mod)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitMultiply(Multiply)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitNative(PONative)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitNegative(PONegative)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitNot(PONot)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitNotEqualTo(NotEqualToExpr)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitOr(POOr)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitPOForEach(POForEach)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitPOOptimizedForEach(POOptimizedForEach)",2,2,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitPackage(POPackage)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitPartialAgg(POPartialAgg)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitPartitionRearrange(POPartitionRearrange)",2,1,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitPoissonSample(POPoissonSample)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitPreCombinerLocalRearrange(POPreCombinerLocalRearrange)",2,3,n/a,6,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitProject(POProject)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitRegexp(PORegexp)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitReservoirSample(POReservoirSample)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitSkewedJoin(POSkewedJoin)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitSort(POSort)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitSplit(POSplit)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitStore(POStore)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitStream(POStream)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitSubtract(Subtract)",2,2,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitUnion(POUnion)",2,3,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder.visitUserFunc(POUserFunc)",2,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.PlanHelper()",0,1,n/a,1,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.containsPhysicalOperator(PhysicalPlan,Class<C>)",3,0,n/a,6,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.getLocalRearrangePlanFromSplit(PhysicalPlan,OperatorKey)",3,2,n/a,18,3,2,6,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.getPhysicalOperators(PhysicalPlan,Class<C>)",3,51,n/a,14,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.makeStoreTmpPath(String)",9,0,n/a,15,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.TezDagBuilder(PigContext,TezOperPlan,DAG,Map<String, LocalResource>)",15,1,n/a,29,1,4,16,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.addCombiner(PhysicalPlan,TezOperator,Configuration,boolean)",27,1,n/a,24,0,4,15,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.avoidContainerReuseIfInputSplitInDisk()",19,1,n/a,33,4,0,12,5
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.getRawBytesComparator(byte)",4,1,n/a,47,1,1,35,15
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.getRawBytesComparatorForSkewedJoin(byte)",4,0,n/a,40,1,1,35,15
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.getRawComparator(byte)",4,1,n/a,48,1,1,35,15
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.getRawComparatorForSkewedJoin(byte)",4,1,n/a,40,1,1,35,15
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.hasOrderby(TezOperator)",7,0,n/a,13,3,1,7,6
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.newEdge(TezOperator,TezOperator,boolean)",74,2,n/a,90,2,3,45,17
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.newGroupInputEdge(TezOperator,TezOperator,VertexGroup,Vertex)",14,1,n/a,13,1,4,5,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.newVertex(TezOperator)",322,1,n/a,388,6,1,204,74
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.processStores(TezOperator,Configuration,Job)",41,1,n/a,58,3,3,33,9
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.selectKeyComparator(byte,Configuration,TezOperator,boolean)",14,2,n/a,59,2,4,10,7
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.setGroupingComparator(Configuration,String)",2,2,n/a,9,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.setIntermediateOutputKeyValue(byte,Configuration,TezOperator,boolean,boolean)",15,2,n/a,21,1,5,9,7
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.setOutputFormat(Job)",9,1,n/a,20,2,1,8,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.visitTezOp(TezOperator)",46,2,n/a,63,5,1,33,10
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecType.accepts(Properties)",3,1,n/a,11,2,1,5,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecType.getExecutionEngine(PigContext)",1,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecType.getExecutionEngineClass()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecType.getTezVersion()",5,1,n/a,12,2,0,7,4
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecType.isLocal()",0,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecType.name()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecType.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecutionEngine.TezExecutionEngine(PigContext)",2,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecutionEngine.getExecConf(Properties)",2,2,n/a,6,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecutionEngine.instantiatePigStats()",1,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecutionEngine.instantiateScriptState()",4,4,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.DAGStatusReporter.run()",2,0,n/a,5,0,0,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.TezJob(TezConfiguration,DAG,Map<String, LocalResource>,int)",3,1,n/a,10,0,4,6,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.TezJobConfig.TezJobConfig(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.TezJobConfig.getEstimatedTotalParallelism()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.TezJobConfig.setEstimatedTotalParallelism(int)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getApplicationId()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getConfiguration()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getDAG()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getDAGCounters()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getDAGProgress()",3,1,n/a,4,0,0,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getDAGStatus()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getDiagnostics()",3,1,n/a,13,2,0,6,5
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getName()",1,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getVertexProgress()",8,0,n/a,9,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.getVertexStatus(String)",2,1,n/a,11,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.killJob()",3,2,n/a,12,2,0,6,4
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.run()",31,1,n/a,63,4,0,39,11
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.setPigStats(TezPigScriptStats)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJobCompiler.TezJobCompiler(PigContext,Configuration)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJobCompiler.buildDAG(TezPlanContainerNode,Map<String, LocalResource>)",10,1,n/a,9,0,2,6,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezJobCompiler.compile(TezPlanContainerNode,TezPlanContainer)",2,1,n/a,16,1,2,8,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezJobCompiler.createDagInfo(String)",6,1,n/a,13,1,1,9,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezJobCompiler.getJob(TezPlanContainerNode,TezPlanContainer)",36,1,n/a,33,3,2,22,7
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.ProgressReporter.ProgressReporter(int,int)",0,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.ProgressReporter.notifyFinishedOrFailed()",13,1,n/a,27,3,0,18,7
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.ProgressReporter.notifyUpdate()",7,1,n/a,16,2,0,8,5
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.TezLauncher()",6,1,n/a,9,1,0,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.compile(PhysicalPlan,PigContext)",8,2,n/a,12,1,2,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.computeWarningAggregate(Map<String, Map<String, Long>>,Map<Enum, Long>)",14,1,n/a,18,5,2,10,7
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.destroy()",4,2,n/a,11,2,0,5,4
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.explain(PhysicalPlan,PigContext,PrintStream,String,boolean)",7,1,n/a,15,1,5,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.handleUnCaughtException(PigContext)",4,1,n/a,21,3,1,8,4
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.kill()",3,1,n/a,11,2,0,5,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.killJob(String,Configuration)",5,1,n/a,12,2,2,5,4
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.launchPig(PhysicalPlan,String,PigContext)",126,1,n/a,6,4,3,90,19
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.optimize(TezOperPlan,PigContext)",31,1,n/a,47,1,2,30,10
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.processLoadAndParallelism(TezOperPlan,PigContext)",6,1,n/a,9,1,2,6,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezLocalExecType.accepts(Properties)",3,1,n/a,11,2,1,5,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezLocalExecType.isLocal()",0,12,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezLocalExecType.name()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezResourceManager.addTezResource(String,Path)",2,1,n/a,9,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezResourceManager.addTezResource(URI)",20,4,n/a,30,4,1,19,6
"org.apache.pig.backend.hadoop.executionengine.tez.TezResourceManager.addTezResources(Set<URI>)",7,1,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezResourceManager.getInstance()",1,7,n/a,6,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezResourceManager.getStagingDir()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezResourceManager.getTezResources(Set<String>)",9,2,n/a,17,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezResourceManager.init(PigContext,Configuration)",2,1,n/a,9,1,2,6,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.SessionInfo.SessionInfo(TezClient,Map<String, LocalResource>)",0,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.SessionInfo.getResources()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.SessionInfo.getTezSession()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.SessionInfo.setInUse(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.TezSessionManager()",0,0,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.adjustAMConfig(TezConfiguration,TezJobConfig)",13,1,n/a,54,3,2,24,8
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.createSession(Configuration,Map<String, LocalResource>,Credentials,TezJobConfig)",15,1,n/a,24,2,4,16,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.freeSession(TezClient)",4,1,n/a,15,4,1,8,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.getClient(Configuration,Map<String, LocalResource>,Credentials,TezJobConfig)",21,1,n/a,47,4,4,28,9
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.shutdown()",11,1,n/a,28,5,0,14,4
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.stopSession(TezClient)",14,1,n/a,28,4,1,18,4
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.validateSessionResources(SessionInfo,Map<String, LocalResource>)",3,1,n/a,10,2,2,4,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.FindKeyTypeVisitor.FindKeyTypeVisitor(PhysicalPlan)",2,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.FindKeyTypeVisitor.visitProject(POProject)",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.TezCompiler(PhysicalPlan,PigContext)",20,1,n/a,26,1,2,19,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.addDistinctPlan(PhysicalPlan,int)",12,2,n/a,14,0,2,10,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.addSamplingToSortInput(POSort,TezOperator,byte,Pair<POProject, Byte>[])",70,1,n/a,98,4,4,66,9
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.blocking()",4,3,n/a,9,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.compile()",22,1,n/a,49,3,0,27,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.compile(PhysicalOperator)",71,2,n/a,114,3,1,70,17
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.findPOSplit(TezOperator,OperatorKey)",14,0,n/a,31,5,2,16,6
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.fixScalar()",34,1,n/a,33,4,0,21,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getIndexingJob(TezOperator,TezOperator,List<PhysicalPlan>)",51,1,n/a,62,1,3,43,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getLocalRearrangeForSortInput(POSort,byte,Pair<POProject, Byte>[])",22,1,n/a,35,1,3,21,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getOrderbySamplingAggregationJob(POSort,int)",19,1,n/a,26,2,2,18,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getPackage(int,byte)",7,3,n/a,13,0,2,6,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getPlanContainer()",2,1,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getSamplingAggregationJob(POSort,int,List<PhysicalPlan>,String,String[])",96,2,n/a,142,5,5,87,9
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getSortCols(List<PhysicalPlan>)",7,4,n/a,23,3,1,17,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getSortJobs(TezOperator,PhysicalPlan,POLocalRearrangeTez,POSort,byte,Pair<POProject, Byte>[])",101,1,n/a,108,2,6,87,12
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getTempFileSpec()",5,2,n/a,9,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getTezOp()",2,18,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.getTezPlan()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.merge(E,List<E>)",1,1,n/a,14,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.merge(TezOperator[])",31,1,n/a,70,4,1,37,15
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.nonBlocking(PhysicalOperator)",4,11,n/a,15,2,1,10,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.processUDFs(PhysicalPlan)",8,5,n/a,12,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.shouldWriteDataForPartitioner(TezOperator)",2,2,n/a,19,3,1,9,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitCollectedGroup(POCollectedGroup)",20,4,n/a,37,2,1,26,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitCounter(POCounter)",6,1,n/a,13,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitCross(POCross)",5,2,n/a,11,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitDistinct(PODistinct)",25,3,n/a,29,1,1,21,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitFRJoin(POFRJoin)",31,3,n/a,51,5,1,37,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitFilter(POFilter)",7,4,n/a,12,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitGlobalRearrange(POGlobalRearrange)",13,2,n/a,16,2,1,10,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitLimit(POLimit)",54,3,n/a,88,4,1,53,13
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitLoad(POLoad)",6,3,n/a,12,1,1,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitLocalRearrange(POLocalRearrange)",8,5,n/a,18,3,1,11,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitMergeCoGroup(POMergeCogroup)",57,3,n/a,92,4,1,65,15
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitMergeJoin(POMergeJoin)",114,3,n/a,192,6,1,119,23
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitNative(PONative)",14,2,n/a,19,1,1,14,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitPOForEach(POForEach)",7,4,n/a,17,3,1,10,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitPackage(POPackage)",14,2,n/a,20,3,1,13,6
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitRank(PORank)",47,1,n/a,55,1,1,34,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitSkewedJoin(POSkewedJoin)",166,3,n/a,232,3,1,171,20
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitSort(POSort)",81,4,n/a,119,2,1,80,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitSplit(POSplit)",34,4,n/a,35,2,1,26,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitStore(POStore)",13,2,n/a,14,1,1,9,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitStream(POStream)",5,3,n/a,11,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.visitUnion(POUnion)",28,3,n/a,36,3,1,27,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String)",1,0,n/a,9,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String,Throwable)",1,0,n/a,13,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String,int)",1,11,n/a,10,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String,int,Throwable)",1,0,n/a,14,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String,int,boolean)",1,0,n/a,11,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String,int,byte)",1,10,n/a,11,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String,int,byte,Throwable)",1,0,n/a,16,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String,int,byte,boolean)",1,0,n/a,13,0,4,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String,int,byte,boolean,String)",1,0,n/a,16,0,5,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(String,int,byte,boolean,String,Throwable)",1,0,n/a,20,0,6,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException.TezCompilerException(Throwable)",1,0,n/a,11,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.TezEdgeDescriptor()",3,2,n/a,10,0,0,7,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.getIntermediateOutputKeyClass()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.getIntermediateOutputKeyComparatorClass()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.getIntermediateOutputValueClass()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.getSecondarySortOrder()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.isUseSecondaryKey()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.setIntermediateOutputKeyClass(String)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.setIntermediateOutputKeyComparatorClass(String)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.setIntermediateOutputValueClass(String)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.setSecondarySortOrder(boolean[])",0,1,n/a,7,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor.setUseSecondaryKey(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOpPlanVisitor.TezOpPlanVisitor(TezOperPlan,PlanWalker<TezOperator, TezOperPlan>)",1,17,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOpPlanVisitor.visitTezOp(TezOperator)",0,2,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.TezOperPlan()",1,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.addCacheResources(Set<String>)",9,2,n/a,15,2,1,8,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.addExtraResource(String,Path)",4,1,n/a,7,1,2,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.addExtraResource(URL)",9,1,n/a,14,2,1,8,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.addShipResources(Set<String>)",6,2,n/a,11,2,1,5,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.disconnect(TezOperator,TezOperator)",5,26,n/a,6,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.getCredentials()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.getEstimatedTotalParallelism()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.getExtraResources()",15,1,n/a,16,0,0,9,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.getGrandParentsForGraceParallelism(TezOperPlan,TezOperator)",13,2,n/a,40,5,2,22,11
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.moveTree(TezOperator,TezOperPlan)",26,1,n/a,53,4,2,28,17
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.remove(TezOperator)",9,28,n/a,12,1,1,5,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.setEstimatedParallelism(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan.toString()",7,1,n/a,13,1,0,8,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.getInp()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.getInpLimits()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.getInpSignatureLists()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.getInputSplitInfo()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.getLoads()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.setInp(ArrayList<FileSpec>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.setInpLimits(ArrayList<Long>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.setInpSignatureLists(ArrayList<String>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.setInputSplitInfo(InputSplitInfo)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo.setLoads(List<POLoad>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.TezOperator(OperatorKey)",6,4,n/a,8,0,1,6,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.VertexGroupInfo()",0,1,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.VertexGroupInfo(POStore)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.addInput(OperatorKey)",2,3,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.getInputs()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.getOutput()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.getSFile()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.getStore()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.getStoreOutputDescriptor()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.getVertexGroup()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.removeInput(OperatorKey)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.setOutput(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.setSFile(FileSpec)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.setStoreOutputDescriptor(OutputDescriptor)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo.setVertexGroup(VertexGroup)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.addCrossKey(String)",2,3,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.addUnionPredecessor(OperatorKey)",2,1,n/a,6,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.addVertexGroupStore(OperatorKey,OperatorKey)",2,1,n/a,6,1,2,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.combineSmallSplits()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.copyFeatures(TezOperator,List<OPER_FEATURE>)",6,2,n/a,10,2,2,5,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getCrossKeys()",0,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getEffectiveParallelism(int)",4,2,n/a,6,0,1,1,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getEstimatedParallelism()",0,13,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getLoaderInfo()",0,16,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getParallelismFactor()",5,1,n/a,8,1,0,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getProcessorName()",1,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getRequestedParallelism()",1,21,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getSampleOperator()",0,17,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getSortOperator()",0,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getSortOrder()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getSplitParent()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getStores()",1,2,n/a,6,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getUDFsAsStr()",9,1,n/a,11,2,0,7,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getUnionMembers()",0,10,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getVertexGroupInfo()",0,15,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getVertexGroupMembers()",0,14,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getVertexGroupStores()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.getVertexParallelism()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isClosed()",0,7,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isCogroup()",2,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isDistinct()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isDontEstimateParallelism()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isGlobalSort()",2,10,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isGroupBy()",2,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isIndexer()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isLimit()",2,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isLimitAfterSort()",2,4,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isNative()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isNeedEstimateParallelism()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isOverrideIntermediateParallelism()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isRegularJoin()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isSampleAggregation()",2,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isSampleBasedPartitioner()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isSampler()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isSkewedJoin()",2,9,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isSplitter()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isUnion()",2,7,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isUseGraceParallelism()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isUseMRMapSettings()",0,8,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isUseSecondaryKey()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.isVertexGroup()",0,23,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markCogroup()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markDistinct()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markGlobalSort()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markGroupBy()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markIndexer()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markLimit()",2,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markLimitAfterSort()",2,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markNative()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markRegularJoin()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markSampleAggregation()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markSampleBasedPartitioner()",2,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markSampler()",2,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markSkewedJoin()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.markUnion()",2,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.name()",5,21,n/a,7,0,0,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.needSegmentBelow()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.noCombineSmallSplits()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setClosed(boolean)",0,12,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setDontEstimateParallelism(boolean)",0,7,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setEstimatedParallelism(int)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setNeedEstimatedQuantile(boolean)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setOverrideIntermediateParallelism(boolean)",0,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setRequestedParallelism(int)",1,17,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setRequestedParallelismByReference(TezOperator)",0,7,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setSampleOperator(TezOperator)",0,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setSortOperator(TezOperator)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setSortOrder(boolean[])",0,1,n/a,7,1,1,7,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setSplitParent(OperatorKey)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setSplitter(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setUseGraceParallelism(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setUseMRMapSettings(boolean)",0,6,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setUseSecondaryKey(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setVertexGroupInfo(VertexGroupInfo)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setVertexGroupMembers(List<OperatorKey>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.setVertexParallelism(int)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.shiftStringByTabs(String,String)",10,1,n/a,11,1,2,10,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.toString()",11,5,n/a,13,1,0,8,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.visit(TezOpPlanVisitor)",1,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.LoRearrangeDiscoverer.LoRearrangeDiscoverer(PhysicalPlan,TezOperator,TezOperator,POPackage)",2,2,n/a,6,0,4,4,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.LoRearrangeDiscoverer.getLoRearrangeFound()",0,1,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.LoRearrangeDiscoverer.visitLocalRearrange(POLocalRearrange)",29,5,n/a,41,2,1,22,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.LoRearrangeDiscoverer.visitSplit(POSplit)",1,4,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.PackageDiscoverer.PackageDiscoverer(PhysicalPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.PackageDiscoverer.getPkg()",0,1,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.PackageDiscoverer.visitPackage(POPackage)",0,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.TezPOPackageAnnotator(TezOperPlan)",2,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.handlePackage(TezOperator,POPackage)",14,1,n/a,25,2,2,16,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.patchPackage(TezOperator,TezOperator,TezOperator,POPackage)",3,1,n/a,11,0,4,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.visitTezOp(TezOperator)",5,2,n/a,11,2,1,6,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOStreamVisitor.StreamFileVisitor.StreamFileVisitor(PhysicalPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOStreamVisitor.StreamFileVisitor.visitStream(POStream)",5,3,n/a,6,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOStreamVisitor.TezPOStreamVisitor(TezOperPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOStreamVisitor.getCacheFiles()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOStreamVisitor.getShipFiles()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOStreamVisitor.visitTezOp(TezOperator)",3,2,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOUserFuncVisitor.TezPOUserFuncVisitor(TezOperPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOUserFuncVisitor.getCacheFiles()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOUserFuncVisitor.getShipFiles()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOUserFuncVisitor.visitTezOp(TezOperator)",7,2,n/a,9,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer.TezPlanContainer(PigContext)",2,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer.addPlan(TezOperPlan)",4,1,n/a,5,0,1,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer.generateNodeOperatorKey()",1,3,n/a,6,0,0,4,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer.getLocalResources()",30,1,n/a,48,3,0,25,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer.getNextPlan(List<TezOperPlan>)",7,1,n/a,22,4,1,12,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer.resetScope()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer.split(TezPlanContainerNode)",21,3,n/a,32,3,1,24,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer.toString()",7,0,n/a,13,1,0,8,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer.updatePlan(TezOperPlan,boolean)",6,1,n/a,14,2,2,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode.TezPlanContainerNode(OperatorKey,TezOperPlan)",1,3,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode.equals(Object)",3,10,n/a,7,1,1,3,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode.getTezOperPlan()",0,15,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode.hashCode()",2,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode.name()",0,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode.toString()",2,3,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode.visit(TezPlanContainerVisitor)",1,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerPrinter.TezPlanContainerPrinter(PrintStream,TezPlanContainer)",6,2,n/a,11,0,2,5,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerPrinter.setVerbose(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerPrinter.visitTezPlanContainerNode(TezPlanContainerNode)",13,1,n/a,12,0,1,9,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerUDFCollector.TezPlanContainerUDFCollector(TezPlanContainer)",2,1,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerUDFCollector.getUdfs()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerUDFCollector.visitTezPlanContainerNode(TezPlanContainerNode)",5,1,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerVisitor.TezPlanContainerVisitor(TezPlanContainer,PlanWalker<TezPlanContainerNode, TezPlanContainer>)",1,3,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerVisitor.visitTezPlanContainerNode(TezPlanContainerNode)",0,1,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPrinter.TezGraphPrinter.TezGraphPrinter(TezOperPlan)",3,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPrinter.TezGraphPrinter.toString()",2,1,n/a,5,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPrinter.TezGraphPrinter.visitTezOp(TezOperator)",20,2,n/a,21,3,1,12,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPrinter.TezPrinter(PrintStream,TezOperPlan)",2,2,n/a,8,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPrinter.setVerbose(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPrinter.visitTezOp(TezOperator)",28,2,n/a,37,3,1,22,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.NativeTezOper.NativeTezOper(OperatorKey,String,String[])",2,1,n/a,6,0,3,4,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.NativeTezOper.getCommandString()",5,0,n/a,9,1,0,6,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.NativeTezOper.getJobId()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.NativeTezOper.getJobNumber()",0,1,n/a,4,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.NativeTezOper.getNativeTezParams()",0,1,n/a,9,1,0,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.NativeTezOper.name()",2,21,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.NativeTezOper.runJob(String)",15,1,n/a,23,3,1,12,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.NativeTezOper.visit(TezOpPlanVisitor)",1,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.POCounterStatsTez(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.addInputsToSkip(Set<String>)",0,1,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.attachInputs(Map<String, LogicalInput>,Configuration)",5,1,n/a,15,1,2,7,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.attachOutputs(Map<String, LogicalOutput>,Configuration)",5,1,n/a,14,1,2,7,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.getNextTuple()",18,17,n/a,38,3,0,25,6
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.getTezInputs()",0,4,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.getTezOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.illustratorMarkup(Object,Object,int)",0,0,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.name()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.replaceInput(String,String)",1,4,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.replaceOutput(String,String)",1,1,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.setInputKey(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.setOutputKey(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.POCounterTez(POCounter)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.attachOutputs(Map<String, LogicalOutput>,Configuration)",10,1,n/a,24,1,2,14,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.getNextTuple()",10,17,n/a,24,3,0,14,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.getTezOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.incrementReduceCounter(Long)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.initialize(ProcessorContext)",2,1,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.name()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.replaceOutput(String,String)",2,1,n/a,8,1,2,4,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.setStatsOutputKey(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.setTuplesOutputKey(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez.visit(PhyPlanVisitor)",2,7,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POFRJoinTez.POFRJoinTez(POFRJoin,List<String>)",1,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POFRJoinTez.addInputsToSkip(Set<String>)",4,1,n/a,9,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POFRJoinTez.attachInputs(Map<String, LogicalInput>,Configuration)",8,1,n/a,20,3,2,11,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POFRJoinTez.getInputKeys()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POFRJoinTez.getTezInputs()",2,4,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POFRJoinTez.name()",7,18,n/a,9,1,0,8,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POFRJoinTez.replaceInput(String,String)",2,4,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POFRJoinTez.setUpHashMap()",44,1,n/a,79,4,0,54,11
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez.POIdentityInOutTez(OperatorKey,POLocalRearrange,String)",1,2,n/a,5,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez.addInputsToSkip(Set<String>)",0,1,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez.attachInputs(Map<String, LogicalInput>,Configuration)",5,1,n/a,20,2,2,11,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez.attachOutputs(Map<String, LogicalOutput>,Configuration)",5,1,n/a,14,1,2,7,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez.getNextTuple()",16,25,n/a,43,4,0,22,9
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez.getTezInputs()",0,4,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez.name()",1,19,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez.replaceInput(String,String)",1,4,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez.setInputKey(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.POLocalRearrangeTez(OperatorKey)",1,5,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.POLocalRearrangeTez(OperatorKey,int)",1,2,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.POLocalRearrangeTez(POLocalRearrange)",1,3,n/a,9,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.attachOutputs(Map<String, LogicalOutput>,Configuration)",5,1,n/a,14,1,2,7,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.clone()",6,10,n/a,15,0,0,6,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.getNextTuple()",14,25,n/a,46,4,0,30,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.getOutputKey()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.getTezOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.isConnectedToPackage()",0,3,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.isSkewedJoin()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.name()",1,19,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.replaceOutput(String,String)",1,1,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.setConnectedToPackage(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.setOutputKey(String)",0,15,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez.setSkewedJoin(boolean)",0,3,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTezFactory.POLocalRearrangeTezFactory(String,NodeIdGenerator)",0,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTezFactory.create()",1,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTezFactory.create(LocalRearrangeType)",1,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTezFactory.create(int,LocalRearrangeType)",1,0,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTezFactory.create(int,LocalRearrangeType,List<PhysicalPlan>,byte)",26,3,n/a,40,1,4,32,12
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POPartitionRearrangeTez.POPartitionRearrangeTez(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POPartitionRearrangeTez.POPartitionRearrangeTez(OperatorKey,int)",2,2,n/a,5,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POPartitionRearrangeTez.clone()",6,10,n/a,11,0,0,6,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POPartitionRearrangeTez.constructPROutput(List<Result>,Tuple)",14,1,n/a,28,2,2,18,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POPartitionRearrangeTez.getNextTuple()",24,25,n/a,56,3,0,36,12
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POPartitionRearrangeTez.init()",31,1,n/a,65,4,0,44,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POPartitionRearrangeTez.name()",4,19,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.PORankTez(PORank)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.addInputsToSkip(Set<String>)",5,1,n/a,9,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.attachInputs(Map<String, LogicalInput>,Configuration)",28,1,n/a,42,2,2,27,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.getNextTuple()",7,17,n/a,23,2,0,12,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.getRankCounterOffset(Integer)",1,1,n/a,7,1,1,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.getTezInputs()",0,4,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.name()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.replaceInput(String,String)",2,4,n/a,8,1,2,4,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.setStatsInputKey(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.setTuplesInputKey(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez.visit(PhyPlanVisitor)",2,7,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.POShuffleTezLoad(POPackage)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.TezAccumulativeTupleBuffer.TezAccumulativeTupleBuffer(int)",1,1,n/a,8,1,1,6,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.TezAccumulativeTupleBuffer.clear()",9,2,n/a,27,5,0,18,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.TezAccumulativeTupleBuffer.getTuples(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.TezAccumulativeTupleBuffer.hasNextBatch()",4,1,n/a,18,4,0,11,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.TezAccumulativeTupleBuffer.nextBatch()",20,1,n/a,39,6,0,28,11
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.TezAccumulativeTupleBuffer.setCurrentKey(PigNullableWritable)",1,1,n/a,8,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.addInputKey(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.addInputsToSkip(Set<String>)",0,1,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.attachInputs(Map<String, LogicalInput>,Configuration)",16,1,n/a,35,3,2,25,6
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.getNextTuple()",44,19,n/a,105,8,0,73,25
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.getTezInputs()",2,4,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.isSkewedJoin()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.replaceInput(String,String)",2,4,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.setInputKeys(List<String>)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.setSkewedJoins(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.POShuffledValueInputTez(OperatorKey)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.addInputKey(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.addInputsToSkip(Set<String>)",0,1,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.attachInputs(Map<String, LogicalInput>,Configuration)",9,1,n/a,23,3,2,13,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.getNextTuple()",10,17,n/a,26,3,0,14,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.getTezInputs()",2,4,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.illustratorMarkup(Object,Object,int)",0,0,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.name()",3,17,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.replaceInput(String,String)",2,4,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POSimpleTezLoad.POSimpleTezLoad(OperatorKey,FileSpec)",1,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POSimpleTezLoad.addInputsToSkip(Set<String>)",0,1,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POSimpleTezLoad.attachInputs(Map<String, LogicalInput>,Configuration)",8,1,n/a,22,2,2,11,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POSimpleTezLoad.getNextTuple()",6,21,n/a,32,3,0,15,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POSimpleTezLoad.getTezInputs()",0,4,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POSimpleTezLoad.replaceInput(String,String)",1,4,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POSimpleTezLoad.setInputKey(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.POStoreTez(OperatorKey)",2,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.POStoreTez(POStore)",7,1,n/a,6,0,1,4,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.attachOutputs(Map<String, LogicalOutput>,Configuration)",5,1,n/a,16,1,2,7,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.getNextTuple()",6,18,n/a,29,3,0,20,6
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.getOutputKey()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.getTezOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.initialize(ProcessorContext)",7,1,n/a,17,2,1,7,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.name()",4,19,n/a,4,0,0,1,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.replaceOutput(String,String)",0,1,n/a,3,0,2,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez.setOutputKey(String)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.POValueInputTez(OperatorKey)",1,5,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.addInputsToSkip(Set<String>)",0,1,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.attachInputs(Map<String, LogicalInput>,Configuration)",6,1,n/a,23,2,2,13,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.getNextTuple()",18,17,n/a,34,4,0,19,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.getTezInputs()",0,4,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.illustratorMarkup(Object,Object,int)",0,0,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.name()",1,17,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.replaceInput(String,String)",1,4,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.setInputKey(String)",0,6,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.EmptyWritable.readFields(DataInput)",0,0,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.EmptyWritable.write(DataOutput)",0,0,n/a,3,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.POValueOutputTez(OperatorKey)",1,7,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.addOutputKey(String)",1,7,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.attachOutputs(Map<String, LogicalOutput>,Configuration)",7,1,n/a,23,2,2,13,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.containsOutputKey(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.getNextTuple()",6,17,n/a,29,4,0,18,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.getTezOutputs()",2,3,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.illustratorMarkup(Object,Object,int)",0,0,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.initialize(ProcessorContext)",1,1,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.isTaskIndexWithRecordIndexAsKey()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.name()",3,17,n/a,6,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.removeOutputKey(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.replaceOutput(String,String)",2,1,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.setTaskIndexWithRecordIndexAsKey(boolean)",0,2,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.supportsMultipleInputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.supportsMultipleOutputs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.visit(PhyPlanVisitor)",1,6,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.AccumulatorOptimizer.AccumulatorOptimizer(TezOperPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.AccumulatorOptimizer.visitTezOp(TezOperator)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.CombinerOptimizer.CombinerOptimizer(TezOperPlan,boolean)",2,1,n/a,3,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.CombinerOptimizer.CombinerOptimizer(TezOperPlan,boolean,CompilationMessageCollector)",2,1,n/a,6,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.CombinerOptimizer.getMessageCollector()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.CombinerOptimizer.visitTezOp(TezOperator)",19,2,n/a,41,3,1,24,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.LoaderProcessor.LoaderProcessor(TezOperPlan,PigContext)",12,1,n/a,16,1,2,10,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.LoaderProcessor.processLoads(TezOperator)",77,1,n/a,99,4,1,56,16
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.LoaderProcessor.visitTezOp(TezOperator)",5,2,n/a,9,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.MultiQueryOptimizerTez.MultiQueryOptimizerTez(TezOperPlan,boolean,List<String>)",2,1,n/a,5,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.MultiQueryOptimizerTez.addAllPredecessors(TezOperator,List<TezOperator>)",6,3,n/a,8,2,2,4,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.MultiQueryOptimizerTez.addSubPlanPropertiesToParent(TezOperator,TezOperator)",18,2,n/a,25,2,2,14,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.MultiQueryOptimizerTez.removeSplittee(TezOperPlan,TezOperator,TezOperator)",38,2,n/a,39,4,3,27,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.MultiQueryOptimizerTez.visitTezOp(TezOperator)",92,2,n/a,125,6,1,74,28
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.NoopFilterRemover.NoopFilterRemover(TezOperPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.NoopFilterRemover.visitTezOp(TezOperator)",9,2,n/a,27,6,1,16,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.ParallelismSetter.ParallelismSetter(TezOperPlan,PigContext)",10,2,n/a,15,1,2,8,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.ParallelismSetter.getEstimatedTotalParallelism()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.ParallelismSetter.incrementTotalParallelism(TezOperator,int)",1,3,n/a,8,1,2,4,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.ParallelismSetter.visitTezOp(TezOperator)",64,2,n/a,127,10,1,68,39
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.SecondaryKeyOptimizerTez.SecondaryKeyOptimizerTez(TezOperPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.SecondaryKeyOptimizerTez.getNumDistinctChanged()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.SecondaryKeyOptimizerTez.getNumSortRemoved()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.SecondaryKeyOptimizerTez.getNumUseSecondaryKey()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.SecondaryKeyOptimizerTez.visitTezOp(TezOperator)",28,2,n/a,61,2,1,34,12
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezEstimatedParallelismClearer.TezEstimatedParallelismClearer(TezOperPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezEstimatedParallelismClearer.visitTezOp(TezOperator)",1,2,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.TezParallelismFactorVisitor(PhysicalPlan,String)",2,1,n/a,4,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.getFactor()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.getSplitBranch(POSplit,String)",5,1,n/a,14,2,2,9,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.visitFRJoin(POFRJoin)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.visitFilter(POFilter)",10,4,n/a,11,2,1,5,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.visitLimit(POLimit)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.visitMergeJoin(POMergeJoin)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.visitPOForEach(POForEach)",1,4,n/a,14,2,1,8,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.visitPackage(POPackage)",1,2,n/a,7,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor.visitSplit(POSplit)",5,4,n/a,9,0,1,4,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.estimateParallelism(TezOperPlan,TezOperator,Configuration)",31,1,n/a,65,3,3,34,18
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.getPredecessorWithKey(TezOperPlan,TezOperator,String)",9,1,n/a,16,4,3,9,6
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.setPigContext(PigContext)",0,1,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezParallelismEstimator.estimateParallelism(TezOperPlan,TezOperator,Configuration)",n/a,1,1,n/a,n/a,3,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezParallelismEstimator.setPigContext(PigContext)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.UnionOptimizer(TezOperPlan,List<String>)",2,1,n/a,5,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.cloneAndMergeUnionPlan(TezOperator,TezOperator)",17,2,n/a,32,2,2,16,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.connectPredecessorsToVertexGroups(TezOperator,TezOperator,PhysicalPlan,TezOperator[],TezOperator[])",15,1,n/a,31,1,5,11,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.connectSplitOpToUnionSuccessors(TezOperator,TezOperator,List<TezOperator>)",36,1,n/a,67,5,3,34,12
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.connectUnionNonMemberPredecessorsToSplit(TezOperator,TezOperator,List<TezOperator>)",23,1,n/a,53,4,3,23,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.connectVertexGroupsToSuccessors(TezOperator,List<TezOperator>,List<String>,TezOperator[])",34,1,n/a,67,3,4,28,9
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.copyOperatorProperties(TezOperator,TezOperator)",19,2,n/a,23,2,2,11,6
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.getUnionPredPlanFromSplit(PhysicalPlan,String)",8,1,n/a,14,4,2,8,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.isOptimizable(TezOperator,List<String>)",8,2,n/a,15,3,2,8,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.replaceSuccessorInputsAndDisconnect(TezOperator,List<TezOperator>,List<String>,String[])",22,1,n/a,35,6,4,17,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer.visitTezOp(TezOperator)",93,2,n/a,123,4,1,80,23
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.FindQuantilesTez.FindQuantilesTez()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.FindQuantilesTez.FindQuantilesTez(String[])",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.FindQuantilesTez.exec(Tuple)",31,8,n/a,50,3,1,36,9
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.FindQuantilesTez.getMemorySize(Tuple)",3,1,n/a,10,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.IsFirstReduceOfKeyTez.init()",1,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.PartitionSkewedKeysTez.PartitionSkewedKeysTez()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.PartitionSkewedKeysTez.PartitionSkewedKeysTez(String[])",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.PartitionSkewedKeysTez.exec(Tuple)",20,8,n/a,36,2,1,27,6
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez.ReadScalarsTez(String)",0,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez.addInputsToSkip(Set<String>)",3,2,n/a,8,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez.attachInputs(Map<String, LogicalInput>,Configuration)",17,2,n/a,35,3,2,21,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez.exec(Tuple)",2,7,n/a,9,1,1,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez.getTezInputs()",0,5,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez.replaceInput(String,String)",1,4,n/a,6,1,2,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.ObjectCache.ObjectCache()",0,1,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.ObjectCache.cache(String,Object)",2,7,n/a,7,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.ObjectCache.getInstance()",0,13,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.ObjectCache.getObjectRegistry()",0,0,n/a,8,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.ObjectCache.retrieve(String)",2,10,n/a,10,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.ObjectCache.setObjectRegistry(ObjectRegistry)",0,1,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PartitionerDefinedVertexManager.PartitionerDefinedVertexManager(VertexManagerPluginContext)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PartitionerDefinedVertexManager.initialize()",0,0,n/a,4,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PartitionerDefinedVertexManager.onRootVertexInitialized(String,InputDescriptor,List<Event>)",0,0,n/a,5,0,3,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PartitionerDefinedVertexManager.onSourceTaskCompleted(String,Integer)",0,0,n/a,4,0,2,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PartitionerDefinedVertexManager.onVertexManagerEventReceived(VertexManagerEvent)",23,0,n/a,30,3,1,16,6
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PartitionerDefinedVertexManager.onVertexStarted(Map<String, List<Integer>>)",6,0,n/a,10,2,1,7,3
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigGraceShuffleVertexManager.PigGraceShuffleVertexManager(VertexManagerPluginContext)",1,0,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigGraceShuffleVertexManager.initialize()",25,0,n/a,1,3,0,17,4
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigGraceShuffleVertexManager.onVertexStateUpdated(VertexStateUpdate)",58,0,n/a,71,6,1,46,16
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigOutputFormatTez.PigOutputCommitterTez.PigOutputCommitterTez(TaskAttemptContext,List<POStore>,List<POStore>)",1,1,n/a,5,0,3,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigOutputFormatTez.PigOutputCommitterTez.abortJob(JobContext,State)",3,1,n/a,10,1,2,4,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigOutputFormatTez.PigOutputCommitterTez.cleanupForContainerReuse()",2,6,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigOutputFormatTez.PigOutputCommitterTez.commitJob(JobContext)",3,1,n/a,9,1,1,4,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigOutputFormatTez.PigOutputCommitterTez.setupJob(JobContext)",3,1,n/a,9,1,1,4,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigOutputFormatTez.getOutputCommitter(TaskAttemptContext)",2,0,n/a,11,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.PigProcessor(ProcessorContext)",4,0,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.abortOutput()",2,1,n/a,9,2,0,4,3
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.close()",2,0,n/a,14,0,0,8,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.collectSample(String,LogicalInput)",11,1,n/a,21,1,2,14,3
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.handleEvents(List<Event>)",0,0,n/a,4,0,1,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.initialize()",42,0,n/a,38,1,0,27,2
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.initializeInputs(Map<String, LogicalInput>)",26,1,n/a,36,2,1,23,10
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.initializeOutputs(Map<String, LogicalOutput>)",8,1,n/a,15,2,1,10,4
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.run(Map<String, LogicalInput>,Map<String, LogicalOutput>)",33,0,n/a,57,4,2,35,11
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor.runPipeline(PhysicalOperator)",2,1,n/a,26,3,1,16,7
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.SkewedPartitionerTez.init()",1,1,n/a,5,0,0,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezInput.addInputsToSkip(Set<String>)",n/a,1,9,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezInput.attachInputs(Map<String, LogicalInput>,Configuration)",n/a,1,9,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezInput.getTezInputs()",n/a,4,9,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezInput.replaceInput(String,String)",n/a,4,9,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezOutput.attachOutputs(Map<String, LogicalOutput>,Configuration)",n/a,1,6,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezOutput.getTezOutputs()",n/a,2,5,n/a,n/a,0,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezOutput.replaceOutput(String,String)",n/a,1,5,n/a,n/a,2,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezTaskConfigurable.initialize(ProcessorContext)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezTaskContext.TezTaskContext(ProcessorContext)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezTaskContext.get()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezTaskContext.getCounter(Enum<?>)",3,1,n/a,8,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezTaskContext.getCounter(String,String)",4,1,n/a,8,1,2,4,2
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezTaskContext.incrCounter(Enum<?>,long)",3,1,n/a,9,1,2,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezTaskContext.incrCounter(String,String,long)",4,1,n/a,9,1,3,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.WeightedRangePartitionerTez.getPartition(PigNullableWritable,Writable,int)",1,1,n/a,8,1,3,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.WeightedRangePartitionerTez.init()",17,1,n/a,30,2,0,20,4
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper.MRToTezHelper()",0,0,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper.convertMRToTezRuntimeConf(Configuration,Configuration)",15,1,n/a,17,2,2,5,3
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper.getDAGAMConfFromMRConf(Configuration)",44,1,n/a,59,3,1,30,9
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper.populateMRSettingsToRemove()",1,1,n/a,5,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper.populateMRSettingsToRetain()",12,1,n/a,16,0,0,12,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper.processMRSettings(Configuration,Configuration)",6,2,n/a,19,2,2,6,3
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper.removeUnwantedMRSettings(Configuration)",6,2,n/a,12,3,1,7,4
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper.updateLocalResourcesForInputSplits(FileSystem,InputSplitInfo,Map<String, LocalResource>)",20,1,n/a,42,1,3,8,3
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper.writeInputSplitInfoToDisk(InputSplitInfoMem,Path,JobConf,FileSystem)",7,1,n/a,14,0,4,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.SecurityHelper.SecurityHelper()",0,0,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.SecurityHelper.populateTokenCache(Configuration,Credentials)",6,1,n/a,16,2,2,10,3
"org.apache.pig.backend.hadoop.executionengine.tez.util.SecurityHelper.readTokensFromFiles(Configuration,Credentials)",19,1,n/a,35,3,2,18,7
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.TezCompilerUtil()",0,0,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.configureValueOnlyTupleOutput(TezEdgeDescriptor,DataMovementType)",7,11,n/a,14,1,2,10,4
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.connect(TezOperPlan,TezOperator,TezOperator)",12,22,n/a,16,2,3,10,3
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.connect(TezOperPlan,TezOperator,TezOperator,TezEdgeDescriptor)",5,1,n/a,6,0,4,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.connectTezOpToNewPredecessor(TezOperPlan,TezOperator,TezOperator,TezEdgeDescriptor,String)",8,1,n/a,11,1,5,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.connectTezOpToNewSuccesor(TezOperPlan,TezOperator,TezOperator,TezEdgeDescriptor,String)",8,1,n/a,11,1,5,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.getForEach(POProject,int,String,NodeIdGenerator)",10,2,n/a,11,0,4,9,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.getForEachPlain(String,NodeIdGenerator)",8,1,n/a,9,0,2,6,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.getStore(String,NodeIdGenerator)",4,2,n/a,7,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.isIntermediateReducer(TezOperator)",7,3,n/a,14,1,1,5,4
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.replaceInput(TezOperator,String,String)",10,3,n/a,19,3,3,11,5
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.replaceOutput(TezOperator,String,String)",5,2,n/a,14,3,3,6,4
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.setCustomPartitioner(String,TezOperator)",2,2,n/a,7,2,2,3,3
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil.simpleConnectTwoVertex(TezOperPlan,TezOperator,TezOperator,String,NodeIdGenerator)",33,2,n/a,38,1,5,26,2
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezRuntimeUtil.readReduceMapFromSample(TupleFactory)",27,2,n/a,51,4,1,33,7
"org.apache.pig.backend.hadoop.executionengine.util.AccumulatorOptimizerUtil.addAccumulator(PhysicalPlan)",22,2,n/a,58,2,1,35,17
"org.apache.pig.backend.hadoop.executionengine.util.AccumulatorOptimizerUtil.check(PhysicalOperator)",27,9,n/a,76,3,1,32,19
"org.apache.pig.backend.hadoop.executionengine.util.AccumulatorOptimizerUtil.checkUDFInput(PhysicalOperator)",31,12,n/a,60,2,1,26,16
"org.apache.pig.backend.hadoop.executionengine.util.AccumulatorOptimizerUtil.getAccumulativeBatchSize()",4,2,n/a,10,2,0,6,3
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker.AlgebraicPlanChecker(PhysicalPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker.checkSuccessorIsLeaf(PhysicalOperator,PhysicalOperator)",3,2,n/a,10,2,2,6,3
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker.getDistinct()",0,1,n/a,9,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker.visit()",1,115,n/a,9,1,0,3,3
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker.visitDistinct(PODistinct)",14,3,n/a,76,6,1,23,10
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker.visitFilter(POFilter)",0,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker.visitLimit(POLimit)",0,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker.visitPOForEach(POForEach)",0,4,n/a,8,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker.visitSort(POSort)",0,4,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.CombinerOptimizerUtil()",0,0,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.DistinctPatcher.DistinctPatcher(PhysicalPlan)",2,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.DistinctPatcher.DistinctPatcher(PhysicalPlan,PlanWalker<PhysicalOperator, PhysicalPlan>)",1,1,n/a,8,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.DistinctPatcher.getDistinct()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.DistinctPatcher.visitProject(POProject)",20,3,n/a,45,2,1,26,6
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.addAlgebraicFuncToCombineFE(POForEach,Map<PhysicalOperator, Integer>)",15,1,n/a,39,1,2,14,3
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.addCombiner(PhysicalPlan,PhysicalPlan,PhysicalPlan,CompilationMessageCollector,boolean)",74,2,n/a,199,4,5,98,27
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.addPredecessorsToPlan(PhysicalOperator,PhysicalPlan,PhysicalPlan)",8,2,n/a,22,1,3,8,4
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.changeFunc(POForEach,byte)",11,2,n/a,34,2,2,19,7
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.createForEachWithGrpProj(POForEach,byte)",15,2,n/a,22,0,2,10,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.createOperatorKey(String)",3,4,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.createPartialAgg(POForEach)",22,1,n/a,21,1,1,12,2
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.createPlanWithPredecessors(PhysicalOperator,PhysicalPlan)",2,1,n/a,15,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.findAlgebraicOps(List<PhysicalPlan>)",15,1,n/a,74,4,1,32,15
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.fixMapProjects.fixMapProjects(PhysicalPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.fixMapProjects.fixMapProjects(PhysicalPlan,PlanWalker<PhysicalOperator, PhysicalPlan>)",1,1,n/a,8,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.fixMapProjects.visitProject(POProject)",2,3,n/a,15,1,1,2,2
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.getAlgebraicSuccessor(POProject,PhysicalPlan)",6,2,n/a,29,1,2,11,7
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.getNewRearrange(POLocalRearrange)",13,2,n/a,23,0,1,10,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.getPreCombinerLR(POLocalRearrange)",7,1,n/a,12,0,1,4,1
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.patchUpMap(PhysicalPlan,POPreCombinerLocalRearrange,POForEach,POPartialAgg,POLocalRearrange)",9,1,n/a,27,1,5,11,2
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.setProjectInput(PhysicalOperator,PhysicalPlan,int)",13,1,n/a,20,0,3,9,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.ComparableSplit.ComparableSplit(InputSplit,long)",1,2,n/a,5,0,2,3,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.ComparableSplit.add(Node)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.ComparableSplit.compareTo(ComparableSplit)",4,1,n/a,12,1,1,5,7
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.ComparableSplit.equals(Object)",1,0,n/a,6,0,1,3,3
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.ComparableSplit.getSplit()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.ComparableSplit.hashCode()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.ComparableSplit.removeFromNodes()",1,1,n/a,4,0,0,2,2
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.DummySplit.getLength()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.DummySplit.getLocations()",0,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.DummySplit.setLength(long)",0,2,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.Node.Node()",1,1,n/a,5,0,0,3,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.Node.add(ComparableSplit)",1,1,n/a,4,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.Node.getLength()",0,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.Node.getSplits()",0,5,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.Node.remove(ComparableSplit)",3,1,n/a,9,1,1,6,3
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.Node.sort()",1,2,n/a,6,1,0,3,2
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.addInputPathRecursively(List<FileStatus>,FileSystem,Path,PathFilter)",5,2,n/a,11,2,4,4,3
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.checkLeafIsStore(PhysicalPlan,PigContext)",17,1,n/a,25,2,2,14,3
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.copyTmpFileConfigurationValues(Configuration,Configuration)",8,2,n/a,15,2,2,6,4
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.getAllFileRecursively(List<FileStatus>,Configuration)",10,3,n/a,27,2,2,13,3
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.getCombinePigSplits(List<InputSplit>,long,Configuration)",113,2,n/a,237,7,3,138,30
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.getPathLength(FileSystem,FileStatus)",1,0,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.getPathLength(FileSystem,FileStatus,long)",5,4,n/a,28,2,3,9,4
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.inputSplitToString(InputSplit[])",10,0,n/a,16,1,1,14,4
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.loadPartitionFileFromLocalCache(String,Integer[],byte,Configuration)",45,3,n/a,70,3,4,41,10
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.removeSplits(List<ComparableSplit>)",1,4,n/a,4,0,1,2,2
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.setupStreamingDirsConfMulti(PigContext,Configuration)",8,1,n/a,15,0,2,4,1
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.setupStreamingDirsConfSingle(POStore,PigContext,Configuration)",14,2,n/a,24,1,3,7,2
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.setupUDFContext(Configuration)",4,9,n/a,8,1,1,4,2
"org.apache.pig.backend.hadoop.executionengine.util.ParallelConstantVisitor.ParallelConstantVisitor(PhysicalPlan,int)",2,1,n/a,5,0,2,2,1
"org.apache.pig.backend.hadoop.executionengine.util.ParallelConstantVisitor.visitConstant(ConstantExpression)",4,2,n/a,14,2,1,7,3
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.POToChange.POToChange(PhysicalOperator,PhysicalPlan,POForEach)",0,2,n/a,5,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover.SecondaryKeyDiscover(PhysicalPlan,List<SortKeyInfo>,SortKeyInfo)",0,1,n/a,7,0,3,3,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover.getDistinctsToChange()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover.getSecondarySortKeyInfo()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover.getSortsToRemove()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover.process()",3,1,n/a,8,1,0,4,2
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover.processDistinct(PODistinct)",8,1,n/a,29,2,1,14,7
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover.processProject(POProject)",1,1,n/a,5,0,1,2,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover.processRoot(PhysicalOperator)",7,1,n/a,30,3,1,20,11
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover.processSort(POSort)",16,1,n/a,47,2,1,27,10
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.getNumDistinctChanged()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.getNumSortRemoved()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.getNumUseSecondaryKey()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.getSecondarySortOrder()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.incrementNumDistinctChanged()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.incrementNumSortRemoved()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.incrementNumUseSecondaryKey()",0,1,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.isUseSecondaryKey()",0,2,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.setSecondarySortOrder(boolean[])",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo.setUseSecondaryKey(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerUtil()",0,0,n/a,2,0,0,0,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.applySecondaryKeySort(PhysicalPlan,PhysicalPlan)",97,2,n/a,214,5,2,133,46
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.collectColumnChain(PhysicalPlan,ColumnChainInfo)",9,1,n/a,26,2,2,16,6
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.getSortKeyInfo(POLocalRearrange)",29,2,n/a,56,5,1,32,9
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.setSecondaryPlan(PhysicalPlan,POLocalRearrange,SortKeyInfo)",30,2,n/a,44,3,3,23,6
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToBag(byte[],ResourceFieldSchema)",1,3,n/a,7,0,2,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToBigDecimal(byte[])",1,3,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToBigInteger(byte[])",1,3,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToBoolean(byte[])",4,3,n/a,8,1,1,3,2
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToCharArray(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToDateTime(byte[])",1,3,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToDouble(byte[])",4,3,n/a,8,1,1,3,2
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToFloat(byte[])",4,3,n/a,8,1,1,3,2
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToInteger(byte[])",4,3,n/a,8,1,1,3,2
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToLong(byte[])",4,4,n/a,8,1,1,3,2
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToMap(byte[],ResourceFieldSchema)",1,3,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.bytesToTuple(byte[],ResourceFieldSchema)",1,3,n/a,7,0,2,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(BigDecimal)",1,20,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(BigInteger)",1,20,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(Boolean)",1,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(DataBag)",1,2,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(DataByteArray)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(DateTime)",1,20,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(Double)",1,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(Float)",1,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(Integer)",1,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(Long)",1,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(Map<String, Object>)",1,20,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(String)",1,20,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter.toBytes(Tuple)",1,2,n/a,7,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.ColumnInfo.ColumnInfo(String)",9,1,n/a,21,2,1,11,5
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.ColumnInfo.getColumnFamily()",0,9,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.ColumnInfo.getColumnName()",0,6,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.ColumnInfo.getColumnPrefix()",0,5,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.ColumnInfo.hasPrefixMatch(byte[])",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.ColumnInfo.isColumnMap()",0,4,n/a,1,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.ColumnInfo.toString()",0,0,n/a,2,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.HBaseStorage(String)",1,0,n/a,21,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.HBaseStorage(String,String)",58,1,n/a,116,2,2,62,28
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.addClassToList(String,List<Class>)",3,5,n/a,8,1,2,4,2
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.addFilter(Filter)",4,4,n/a,8,1,1,5,2
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.addFiltersWithColumnPrefix(List<ColumnInfo>)",34,1,n/a,62,4,1,23,9
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.addFiltersWithoutColumnPrefix(List<ColumnInfo>)",19,2,n/a,35,4,1,16,8
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.addHBaseDelegationToken(Configuration,Job)",14,2,n/a,39,3,2,16,7
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.addRowFilter(CompareOp,byte[])",7,2,n/a,7,1,2,3,2
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.checkSchema(ResourceSchema)",6,3,n/a,10,1,1,5,2
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.cleanupOnFailure(String,Job)",0,3,n/a,3,0,2,0,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.cleanupOnSuccess(String,Job)",0,3,n/a,3,0,2,0,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.createDelete(Object,byte,long)",4,1,n/a,17,1,3,5,2
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.createPut(Object,byte)",3,1,n/a,16,1,2,4,2
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.ensureAllKeyInstancesInSameSplit()",1,4,n/a,9,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.getColumnInfoList()",0,0,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.getFeatures()",1,1,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.getInputFormat()",9,8,n/a,13,0,0,3,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.getLoadCaster()",0,7,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.getNext()",34,22,n/a,70,7,0,39,15
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.getOutputFormat()",3,8,n/a,12,2,0,6,3
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.getShipFiles()",25,4,n/a,46,4,0,27,9
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.getSplitComparable(InputSplit)",4,1,n/a,8,1,1,3,2
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.getUDFProperties()",3,5,n/a,7,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.groupByFamily(List<ColumnInfo>)",7,2,n/a,19,2,1,9,3
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.increment(byte[])",2,2,n/a,37,2,1,25,8
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.initScan()",51,1,n/a,59,2,0,37,14
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.initializeLocalJobConfig(Job)",18,2,n/a,24,3,1,13,5
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.objToBytes(Object,byte)",16,4,n/a,25,1,2,36,18
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.parseColumnList(String,String,boolean)",11,1,n/a,31,3,3,14,6
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.populateValidOptions()",28,1,n/a,24,0,0,20,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.prepareToRead(RecordReader,PigSplit)",0,6,n/a,4,0,2,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.prepareToWrite(RecordWriter)",0,5,n/a,5,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.projectedFieldsName()",0,2,n/a,6,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.pushProjection(RequiredFieldList)",22,4,n/a,48,2,1,25,11
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.putNext(Tuple)",58,4,n/a,77,5,1,52,23
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.relToAbsPathForStoreLocation(String,Path)",0,7,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.relativeToAbsolutePath(String,Path)",0,11,n/a,5,0,2,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.setColumnInfoList(List<ColumnInfo>)",0,1,n/a,6,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.setLocation(String,Job)",20,16,n/a,27,1,2,18,5
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.setStoreFuncUDFContextSignature(String)",0,5,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.setStoreLocation(String,Job)",11,7,n/a,18,1,2,8,3
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.setUDFContextSignature(String)",0,15,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.storeProjectedFieldNames(RequiredFieldList)",5,1,n/a,13,1,1,3,2
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.toString(byte[])",4,2,n/a,9,2,1,10,4
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableIFBuilder.build()",2,1,n/a,5,0,0,4,2
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableIFBuilder.withConf(Configuration)",0,1,n/a,1,0,1,2,1
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableIFBuilder.withGt(byte[])",0,1,n/a,1,0,1,2,1
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableIFBuilder.withGte(byte[])",0,1,n/a,1,0,1,2,1
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableIFBuilder.withLimit(long)",0,1,n/a,1,0,1,2,1
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableIFBuilder.withLt(byte[])",0,1,n/a,1,0,1,2,1
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableIFBuilder.withLte(byte[])",0,1,n/a,1,0,1,2,1
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableInputFormat()",1,0,n/a,3,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableInputFormat(long,byte[],byte[],byte[],byte[])",3,2,n/a,8,0,5,6,1
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableRecordReader.HBaseTableRecordReader(long)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableRecordReader.getProgress()",10,0,n/a,26,1,0,17,9
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableRecordReader.nextKeyValue()",3,0,n/a,11,1,0,6,4
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableRecordReader.setScan(Scan)",12,0,n/a,24,1,1,19,3
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.getSplits(JobContext)",11,0,n/a,19,2,1,9,6
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.skipRegion(CompareOp,byte[],byte[])",3,4,n/a,7,0,3,5,3
"org.apache.pig.backend.hadoop.hbase.TableSplitComparable.TableSplitComparable()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.TableSplitComparable.TableSplitComparable(TableSplit)",0,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.TableSplitComparable.compareTo(TableSplit)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.TableSplitComparable.equals(Object)",3,0,n/a,20,1,1,13,7
"org.apache.pig.backend.hadoop.hbase.TableSplitComparable.hashCode()",1,0,n/a,7,0,0,1,2
"org.apache.pig.backend.hadoop.hbase.TableSplitComparable.readFields(DataInput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.hbase.TableSplitComparable.toString()",1,0,n/a,4,0,0,1,1
"org.apache.pig.backend.hadoop.hbase.TableSplitComparable.write(DataOutput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager.HadoopExecutableManager()",0,1,n/a,1,0,0,0,1
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager.close()",18,4,n/a,35,4,0,23,6
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager.configure(POStream)",11,2,n/a,25,2,1,12,3
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager.exec()",10,3,n/a,21,2,0,8,3
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager.getOutputName(int)",1,1,n/a,3,0,1,1,1
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager.processError(String)",3,18,n/a,11,2,1,5,3
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager.writeDebugFooter()",29,1,n/a,37,2,0,20,11
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager.writeDebugHeader()",26,1,n/a,27,3,0,24,4
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager.writeErrorToHDFS(int,String)",5,1,n/a,15,1,2,4,3
"org.apache.pig.builtin.ABS.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ABS.exec(Tuple)",8,7,n/a,19,1,1,9,6
"org.apache.pig.builtin.ABS.getArgToFuncMapping()",37,2,n/a,15,0,0,9,1
"org.apache.pig.builtin.ABS.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.ACOS.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.ARITY.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ARITY.exec(Tuple)",5,7,n/a,11,1,1,7,3
"org.apache.pig.builtin.ARITY.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.ASIN.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.ATAN.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.AVG.Final.exec(Tuple)",8,7,n/a,23,2,1,15,5
"org.apache.pig.builtin.AVG.Initial.exec(Tuple)",17,7,n/a,36,2,1,21,8
"org.apache.pig.builtin.AVG.Intermediate.exec(Tuple)",5,7,n/a,13,1,1,7,3
"org.apache.pig.builtin.AVG.accumulate(Tuple)",5,1,n/a,25,2,1,15,7
"org.apache.pig.builtin.AVG.cleanup()",0,2,n/a,5,0,0,2,1
"org.apache.pig.builtin.AVG.combine(DataBag)",11,2,n/a,33,2,1,18,4
"org.apache.pig.builtin.AVG.count(Tuple)",6,2,n/a,11,1,1,8,5
"org.apache.pig.builtin.AVG.exec(Tuple)",3,7,n/a,18,2,1,10,4
"org.apache.pig.builtin.AVG.getArgToFuncMapping()",30,2,n/a,15,0,0,9,1
"org.apache.pig.builtin.AVG.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.AVG.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.AVG.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.AVG.getValue()",1,1,n/a,8,1,0,4,3
"org.apache.pig.builtin.AVG.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.AVG.sum(Tuple)",10,2,n/a,28,2,1,21,7
"org.apache.pig.builtin.AddDuration.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.AddDuration.exec(Tuple)",7,7,n/a,7,1,1,3,5
"org.apache.pig.builtin.AddDuration.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.AddDuration.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.Final.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.Intermediate.exec(Tuple)",3,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.accumulate(Tuple)",6,1,n/a,18,2,1,10,5
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.doTupleWork(Tuple,KnownOpProvider)",11,4,n/a,24,2,2,18,6
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.doWork(BigDecimal,BigDecimal,KNOWN_OP)",11,2,n/a,36,3,3,27,15
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.getSeed(KNOWN_OP)",2,2,n/a,8,1,1,9,5
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.Final.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.Intermediate.exec(Tuple)",3,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.accumulate(Tuple)",6,1,n/a,18,2,1,10,5
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.doTupleWork(Tuple,KnownOpProvider)",11,4,n/a,24,2,2,18,6
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.doWork(BigInteger,BigInteger,KNOWN_OP)",11,2,n/a,36,3,3,27,15
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.getSeed(KNOWN_OP)",2,2,n/a,8,1,1,9,5
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.Final.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.Initial.exec(Tuple)",11,7,n/a,23,2,1,10,5
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.Intermediate.exec(Tuple)",3,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.accumulate(Tuple)",6,1,n/a,18,2,1,10,5
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.doTupleWork(Tuple,KnownOpProvider,byte)",16,4,n/a,36,3,3,27,10
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.doWork(Double,Double,KNOWN_OP)",2,2,n/a,14,2,3,13,7
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.getInitial()",1,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.getSeed(KNOWN_OP)",0,2,n/a,8,1,1,9,5
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.AlgebraicDoubleMathBase.Final.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicDoubleMathBase.Intermediate.exec(Tuple)",3,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicDoubleMathBase.accumulate(Tuple)",6,1,n/a,18,2,1,10,5
"org.apache.pig.builtin.AlgebraicDoubleMathBase.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicDoubleMathBase.doTupleWork(Tuple,KnownOpProvider)",12,4,n/a,24,2,2,18,6
"org.apache.pig.builtin.AlgebraicDoubleMathBase.doWork(Double,Double,KNOWN_OP)",2,2,n/a,14,2,3,13,7
"org.apache.pig.builtin.AlgebraicDoubleMathBase.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicDoubleMathBase.getSeed(KNOWN_OP)",0,2,n/a,8,1,1,9,5
"org.apache.pig.builtin.AlgebraicDoubleMathBase.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicDoubleMathBase.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.AlgebraicFloatMathBase.Final.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicFloatMathBase.Intermediate.exec(Tuple)",3,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicFloatMathBase.accumulate(Tuple)",6,1,n/a,18,2,1,10,5
"org.apache.pig.builtin.AlgebraicFloatMathBase.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicFloatMathBase.doTupleWork(Tuple,KnownOpProvider)",11,4,n/a,23,2,2,17,6
"org.apache.pig.builtin.AlgebraicFloatMathBase.doWork(Float,Float,KNOWN_OP)",2,2,n/a,14,2,3,13,7
"org.apache.pig.builtin.AlgebraicFloatMathBase.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicFloatMathBase.getSeed(KNOWN_OP)",0,2,n/a,8,1,1,9,5
"org.apache.pig.builtin.AlgebraicFloatMathBase.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicFloatMathBase.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.AlgebraicIntMathBase.Final.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicIntMathBase.Intermediate.exec(Tuple)",3,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicIntMathBase.accumulate(Tuple)",6,1,n/a,18,2,1,10,5
"org.apache.pig.builtin.AlgebraicIntMathBase.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicIntMathBase.doTupleWork(Tuple,KnownOpProvider)",11,4,n/a,23,2,2,17,6
"org.apache.pig.builtin.AlgebraicIntMathBase.doWork(Integer,Integer,KNOWN_OP)",2,2,n/a,14,2,3,13,7
"org.apache.pig.builtin.AlgebraicIntMathBase.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicIntMathBase.getSeed(KNOWN_OP)",0,2,n/a,8,1,1,9,5
"org.apache.pig.builtin.AlgebraicIntMathBase.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicIntMathBase.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.AlgebraicLongMathBase.Final.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicLongMathBase.Intermediate.exec(Tuple)",3,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicLongMathBase.accumulate(Tuple)",6,1,n/a,18,2,1,10,5
"org.apache.pig.builtin.AlgebraicLongMathBase.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicLongMathBase.doTupleWork(Tuple,KnownOpProvider)",12,4,n/a,26,2,2,18,6
"org.apache.pig.builtin.AlgebraicLongMathBase.doWork(Long,Long,KNOWN_OP)",2,2,n/a,14,2,3,13,7
"org.apache.pig.builtin.AlgebraicLongMathBase.exec(Tuple)",2,7,n/a,11,1,1,5,3
"org.apache.pig.builtin.AlgebraicLongMathBase.getSeed(KNOWN_OP)",0,2,n/a,8,1,1,9,5
"org.apache.pig.builtin.AlgebraicLongMathBase.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicLongMathBase.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.AlgebraicMathBase.Initial.exec(Tuple)",7,7,n/a,21,2,1,8,4
"org.apache.pig.builtin.AlgebraicMathBase.KnownOpProvider.getOp()",n/a,28,39,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.AlgebraicMathBase.getFinal()",8,3,n/a,16,2,0,7,5
"org.apache.pig.builtin.AlgebraicMathBase.getInitial()",1,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.AlgebraicMathBase.getIntermed()",8,3,n/a,17,2,0,7,5
"org.apache.pig.builtin.AlgebraicMathBase.setOp(KNOWN_OP)",1,19,n/a,4,2,1,2,1
"org.apache.pig.builtin.Assert.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.Assert.exec(Tuple)",6,7,n/a,16,2,1,5,3
"org.apache.pig.builtin.AvroStorage.AvroStorage()",1,1,n/a,7,0,0,1,1
"org.apache.pig.builtin.AvroStorage.AvroStorage(String)",1,0,n/a,7,0,1,1,1
"org.apache.pig.builtin.AvroStorage.AvroStorage(String,String)",64,3,n/a,110,4,2,57,14
"org.apache.pig.builtin.AvroStorage.checkSchema(ResourceSchema)",6,3,n/a,22,1,1,6,5
"org.apache.pig.builtin.AvroStorage.cleanupOnFailure(String,Job)",1,3,n/a,9,0,2,1,1
"org.apache.pig.builtin.AvroStorage.cleanupOnSuccess(String,Job)",0,3,n/a,4,0,2,0,1
"org.apache.pig.builtin.AvroStorage.getAvroSchema(Path[],Job)",20,1,n/a,36,2,2,19,6
"org.apache.pig.builtin.AvroStorage.getAvroSchema(String,Job)",3,2,n/a,17,1,2,7,2
"org.apache.pig.builtin.AvroStorage.getFeatures()",1,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.AvroStorage.getInputAvroSchema()",1,3,n/a,11,1,0,3,2
"org.apache.pig.builtin.AvroStorage.getInputFormat()",9,8,n/a,19,3,0,11,2
"org.apache.pig.builtin.AvroStorage.getNext()",4,22,n/a,13,2,0,5,3
"org.apache.pig.builtin.AvroStorage.getOutputAvroSchema()",4,1,n/a,16,2,0,5,3
"org.apache.pig.builtin.AvroStorage.getOutputFormat()",4,8,n/a,9,2,0,3,1
"org.apache.pig.builtin.AvroStorage.getPartitionKeys(String,Job)",0,4,n/a,9,0,2,1,1
"org.apache.pig.builtin.AvroStorage.getProperties()",2,4,n/a,12,1,0,3,2
"org.apache.pig.builtin.AvroStorage.getProperties(Class,String)",3,4,n/a,17,1,2,4,2
"org.apache.pig.builtin.AvroStorage.getSchema(String,Job)",3,3,n/a,15,1,2,5,2
"org.apache.pig.builtin.AvroStorage.getShipFiles()",1,4,n/a,5,0,0,2,1
"org.apache.pig.builtin.AvroStorage.getStatistics(String,Job)",0,4,n/a,9,0,2,1,1
"org.apache.pig.builtin.AvroStorage.prepareToRead(RecordReader,PigSplit)",0,6,n/a,12,0,2,2,1
"org.apache.pig.builtin.AvroStorage.prepareToWrite(RecordWriter)",5,5,n/a,13,0,1,4,2
"org.apache.pig.builtin.AvroStorage.pushProjection(RequiredFieldList)",6,3,n/a,21,1,1,9,2
"org.apache.pig.builtin.AvroStorage.putNext(Tuple)",3,4,n/a,12,1,1,4,2
"org.apache.pig.builtin.AvroStorage.relToAbsPathForStoreLocation(String,Path)",1,7,n/a,10,0,2,1,1
"org.apache.pig.builtin.AvroStorage.setInputAvroSchema(Schema)",3,6,n/a,8,0,1,2,1
"org.apache.pig.builtin.AvroStorage.setLocation(String,Job)",5,16,n/a,16,3,2,8,4
"org.apache.pig.builtin.AvroStorage.setOutputAvroSchema(Schema)",3,5,n/a,9,0,1,2,1
"org.apache.pig.builtin.AvroStorage.setPartitionFilter(Expression)",0,3,n/a,8,0,1,0,1
"org.apache.pig.builtin.AvroStorage.setStoreFuncUDFContextSignature(String)",1,5,n/a,10,0,1,2,1
"org.apache.pig.builtin.AvroStorage.setStoreLocation(String,Job)",2,7,n/a,9,0,2,1,1
"org.apache.pig.builtin.AvroStorage.setUDFContextSignature(String)",2,15,n/a,6,0,1,3,1
"org.apache.pig.builtin.AvroStorage.updateSchemaFromInputAvroSchema()",4,2,n/a,11,1,0,4,2
"org.apache.pig.builtin.BagSize.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.BagSize.exec(Tuple)",6,7,n/a,13,1,1,7,4
"org.apache.pig.builtin.BagSize.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.BagToString.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.BagToString.exec(Tuple)",23,7,n/a,39,5,1,26,13
"org.apache.pig.builtin.BagToString.outputSchema(Schema)",17,2,n/a,33,3,1,18,13
"org.apache.pig.builtin.BagToTuple.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.BagToTuple.exec(Tuple)",17,7,n/a,36,4,1,24,9
"org.apache.pig.builtin.BagToTuple.getOuputTupleSize(DataBag)",1,1,n/a,16,2,1,5,3
"org.apache.pig.builtin.BagToTuple.outputSchema(Schema)",20,2,n/a,33,2,1,19,11
"org.apache.pig.builtin.Base.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.Base.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.BigDecimalAbs.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigDecimalAbs.exec(Tuple)",4,7,n/a,6,0,1,3,4
"org.apache.pig.builtin.BigDecimalAvg.Final.exec(Tuple)",9,7,n/a,23,2,1,15,5
"org.apache.pig.builtin.BigDecimalAvg.Initial.exec(Tuple)",13,7,n/a,27,2,1,16,5
"org.apache.pig.builtin.BigDecimalAvg.Intermediate.exec(Tuple)",5,7,n/a,13,1,1,7,3
"org.apache.pig.builtin.BigDecimalAvg.accumulate(Tuple)",8,1,n/a,25,2,1,15,7
"org.apache.pig.builtin.BigDecimalAvg.cleanup()",0,2,n/a,5,0,0,2,1
"org.apache.pig.builtin.BigDecimalAvg.combine(DataBag)",11,2,n/a,33,2,1,18,4
"org.apache.pig.builtin.BigDecimalAvg.count(Tuple)",7,2,n/a,11,1,1,8,5
"org.apache.pig.builtin.BigDecimalAvg.div(BigDecimal,BigDecimal)",1,3,n/a,5,0,2,1,1
"org.apache.pig.builtin.BigDecimalAvg.exec(Tuple)",4,7,n/a,18,2,1,10,4
"org.apache.pig.builtin.BigDecimalAvg.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigDecimalAvg.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigDecimalAvg.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigDecimalAvg.getValue()",2,1,n/a,8,1,0,4,3
"org.apache.pig.builtin.BigDecimalAvg.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.BigDecimalAvg.sum(Tuple)",8,2,n/a,27,2,1,20,6
"org.apache.pig.builtin.BigDecimalMax.BigDecimalMax()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigDecimalMax.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigDecimalMax.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigDecimalMin.BigDecimalMin()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigDecimalMin.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigDecimalMin.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigDecimalSum.BigDecimalSum()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigDecimalSum.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigDecimalSum.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(BigDecimalInfinity)",1,2,n/a,4,0,1,2,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(BigInteger)",1,0,n/a,4,0,1,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(BigInteger,MathContext)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(BigInteger,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(BigInteger,int,MathContext)",1,0,n/a,3,0,3,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(String,MathContext)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(char[])",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(char[],MathContext)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(char[],int,int)",1,0,n/a,3,0,3,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(char[],int,int,MathContext)",1,0,n/a,3,0,4,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(double)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(double,MathContext)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(int)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(int,MathContext)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(long)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalWrapper(long,MathContext)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigDecimalWrapper.NEGATIVE_INFINITY()",1,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigDecimalWrapper.POSITIVE_INFINITY()",1,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigDecimalWrapper.isNegativeInfinity()",0,2,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigDecimalWrapper.isPositiveInfinity()",0,2,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerAbs.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigIntegerAbs.exec(Tuple)",4,7,n/a,6,0,1,3,4
"org.apache.pig.builtin.BigIntegerAvg.Final.exec(Tuple)",9,7,n/a,23,2,1,15,5
"org.apache.pig.builtin.BigIntegerAvg.Initial.exec(Tuple)",13,7,n/a,27,2,1,16,5
"org.apache.pig.builtin.BigIntegerAvg.Intermediate.exec(Tuple)",5,7,n/a,13,1,1,7,3
"org.apache.pig.builtin.BigIntegerAvg.accumulate(Tuple)",8,1,n/a,25,2,1,15,7
"org.apache.pig.builtin.BigIntegerAvg.cleanup()",0,2,n/a,5,0,0,2,1
"org.apache.pig.builtin.BigIntegerAvg.combine(DataBag)",11,2,n/a,33,2,1,18,4
"org.apache.pig.builtin.BigIntegerAvg.count(Tuple)",7,2,n/a,11,1,1,8,5
"org.apache.pig.builtin.BigIntegerAvg.div(BigInteger,BigInteger)",3,3,n/a,5,0,2,1,1
"org.apache.pig.builtin.BigIntegerAvg.exec(Tuple)",4,7,n/a,18,2,1,10,4
"org.apache.pig.builtin.BigIntegerAvg.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerAvg.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerAvg.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerAvg.getValue()",2,1,n/a,8,1,0,4,3
"org.apache.pig.builtin.BigIntegerAvg.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.BigIntegerAvg.sum(Tuple)",8,2,n/a,27,2,1,20,6
"org.apache.pig.builtin.BigIntegerMax.BigIntegerMax()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerMax.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigIntegerMax.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigIntegerMin.BigIntegerMin()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerMin.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigIntegerMin.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigIntegerSum.BigIntegerSum()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerSum.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigIntegerSum.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.BigIntegerWrapper.BigIntegerWrapper(BigIntegerInfinity)",1,2,n/a,4,0,1,2,1
"org.apache.pig.builtin.BigIntegerWrapper.BigIntegerWrapper(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.BigIntegerWrapper.BigIntegerWrapper(String,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigIntegerWrapper.BigIntegerWrapper(byte[])",1,0,n/a,4,0,1,1,1
"org.apache.pig.builtin.BigIntegerWrapper.BigIntegerWrapper(int,Random)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigIntegerWrapper.BigIntegerWrapper(int,byte[])",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.BigIntegerWrapper.BigIntegerWrapper(int,int,Random)",1,0,n/a,3,0,3,1,1
"org.apache.pig.builtin.BigIntegerWrapper.NEGATIVE_INFINITY()",1,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerWrapper.POSITIVE_INFINITY()",1,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerWrapper.isNegativeInfinity()",0,2,n/a,3,0,0,1,1
"org.apache.pig.builtin.BigIntegerWrapper.isPositiveInfinity()",0,2,n/a,3,0,0,1,1
"org.apache.pig.builtin.BinStorage.BinStorage()",0,0,n/a,2,0,0,0,1
"org.apache.pig.builtin.BinStorage.BinStorage(String)",0,0,n/a,8,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToBag(byte[],ResourceFieldSchema)",1,3,n/a,5,0,2,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToBigDecimal(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToBigInteger(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToBoolean(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToCharArray(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToDateTime(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToDouble(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToFloat(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToInteger(byte[])",1,3,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToLong(byte[])",1,4,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToMap(byte[],ResourceFieldSchema)",1,3,n/a,4,0,2,1,1
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster.bytesToTuple(byte[],ResourceFieldSchema)",1,3,n/a,5,0,2,1,1
"org.apache.pig.builtin.BinStorage.checkSchema(ResourceSchema)",0,3,n/a,3,0,1,0,1
"org.apache.pig.builtin.BinStorage.cleanupOnFailure(String,Job)",1,3,n/a,4,0,2,1,1
"org.apache.pig.builtin.BinStorage.cleanupOnSuccess(String,Job)",0,3,n/a,4,0,2,0,1
"org.apache.pig.builtin.BinStorage.getInputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.builtin.BinStorage.getLoadCaster()",8,7,n/a,32,4,0,15,7
"org.apache.pig.builtin.BinStorage.getNext()",2,22,n/a,8,1,0,3,2
"org.apache.pig.builtin.BinStorage.getOutputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.builtin.BinStorage.getPartitionKeys(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.builtin.BinStorage.getSchema(String,Job)",9,3,n/a,26,2,2,11,4
"org.apache.pig.builtin.BinStorage.getStatistics(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.builtin.BinStorage.hashCode()",0,0,n/a,4,0,0,1,1
"org.apache.pig.builtin.BinStorage.prepareToRead(RecordReader,PigSplit)",0,6,n/a,4,0,2,1,1
"org.apache.pig.builtin.BinStorage.prepareToWrite(RecordWriter)",0,5,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.putNext(Tuple)",2,4,n/a,8,1,1,3,2
"org.apache.pig.builtin.BinStorage.relToAbsPathForStoreLocation(String,Path)",1,7,n/a,5,0,2,1,1
"org.apache.pig.builtin.BinStorage.setLocation(String,Job)",1,16,n/a,4,0,2,1,1
"org.apache.pig.builtin.BinStorage.setPartitionFilter(Expression)",1,3,n/a,4,0,1,1,1
"org.apache.pig.builtin.BinStorage.setStoreFuncUDFContextSignature(String)",0,5,n/a,3,0,1,0,1
"org.apache.pig.builtin.BinStorage.setStoreLocation(String,Job)",2,7,n/a,4,0,2,1,1
"org.apache.pig.builtin.BinStorage.toBytes(Boolean)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.BinStorage.toBytes(DataBag)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.BinStorage.toBytes(DateTime)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.BinStorage.toBytes(Double)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.BinStorage.toBytes(Float)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.BinStorage.toBytes(Integer)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.BinStorage.toBytes(Long)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.BinStorage.toBytes(Map<String, Object>)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.BinStorage.toBytes(String)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.BinStorage.toBytes(Tuple)",5,0,n/a,12,1,1,8,2
"org.apache.pig.builtin.Bloom.Bloom(String)",0,0,n/a,6,0,1,1,1
"org.apache.pig.builtin.Bloom.exec(Tuple)",7,7,n/a,11,1,1,8,3
"org.apache.pig.builtin.Bloom.getCacheFiles()",4,1,n/a,12,1,0,5,2
"org.apache.pig.builtin.Bloom.getFilenameFromPath(String)",4,2,n/a,4,0,1,2,1
"org.apache.pig.builtin.Bloom.init()",10,1,n/a,4,2,0,9,1
"org.apache.pig.builtin.Bloom.setFilter(DataByteArray)",5,0,n/a,9,0,1,3,1
"org.apache.pig.builtin.BuildBloom.BuildBloom(String,String,String)",1,0,n/a,16,0,3,1,1
"org.apache.pig.builtin.BuildBloom.BuildBloom(String,String,String,String)",1,0,n/a,15,0,4,1,1
"org.apache.pig.builtin.BuildBloom.Final.Final()",0,0,n/a,2,0,0,0,1
"org.apache.pig.builtin.BuildBloom.Final.Final(String,String,String)",1,0,n/a,5,0,3,1,1
"org.apache.pig.builtin.BuildBloom.Final.Final(String,String,String,String)",1,0,n/a,6,0,4,1,1
"org.apache.pig.builtin.BuildBloom.Final.exec(Tuple)",1,7,n/a,4,0,1,1,1
"org.apache.pig.builtin.BuildBloom.Initial.Initial()",0,0,n/a,2,0,0,0,1
"org.apache.pig.builtin.BuildBloom.Initial.Initial(String,String,String)",1,0,n/a,5,0,3,1,1
"org.apache.pig.builtin.BuildBloom.Initial.Initial(String,String,String,String)",1,0,n/a,6,0,4,1,1
"org.apache.pig.builtin.BuildBloom.Initial.exec(Tuple)",14,7,n/a,18,0,1,13,4
"org.apache.pig.builtin.BuildBloom.Intermediate.Intermediate()",0,0,n/a,2,0,0,0,1
"org.apache.pig.builtin.BuildBloom.Intermediate.Intermediate(String,String,String)",1,0,n/a,5,0,3,1,1
"org.apache.pig.builtin.BuildBloom.Intermediate.Intermediate(String,String,String,String)",1,0,n/a,6,0,4,1,1
"org.apache.pig.builtin.BuildBloom.Intermediate.exec(Tuple)",3,7,n/a,4,0,1,1,1
"org.apache.pig.builtin.BuildBloom.exec(Tuple)",1,7,n/a,4,0,1,1,1
"org.apache.pig.builtin.BuildBloom.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.BuildBloom.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.BuildBloom.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.BuildBloom.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.BuildBloomBase.BuildBloomBase()",0,3,n/a,2,0,0,0,1
"org.apache.pig.builtin.BuildBloomBase.BuildBloomBase(String,String,String)",2,4,n/a,15,0,3,2,1
"org.apache.pig.builtin.BuildBloomBase.BuildBloomBase(String,String,String,String)",3,4,n/a,16,0,4,3,1
"org.apache.pig.builtin.BuildBloomBase.bloomIn(DataByteArray)",5,1,n/a,7,0,1,4,1
"org.apache.pig.builtin.BuildBloomBase.bloomOr(Tuple)",10,2,n/a,13,2,1,9,3
"org.apache.pig.builtin.BuildBloomBase.bloomOut()",5,2,n/a,6,0,0,4,1
"org.apache.pig.builtin.BuildBloomBase.convertHashType(String)",5,2,n/a,10,1,1,5,3
"org.apache.pig.builtin.BuildBloomBase.setSize(String,String)",8,1,n/a,13,1,2,8,4
"org.apache.pig.builtin.CBRT.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.CEIL.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.CONCAT.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.CONCAT.exec(Tuple)",9,7,n/a,20,2,1,15,7
"org.apache.pig.builtin.CONCAT.getArgToFuncMapping()",18,2,n/a,13,0,0,10,1
"org.apache.pig.builtin.CONCAT.getSchemaType()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.CONCAT.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.COR.COR()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.COR.COR(String...)",1,0,n/a,6,1,1,5,2
"org.apache.pig.builtin.COR.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.COR.Final.Final(String...)",1,0,n/a,6,1,1,5,2
"org.apache.pig.builtin.COR.Final.exec(Tuple)",27,7,n/a,52,4,1,38,9
"org.apache.pig.builtin.COR.Initial.exec(Tuple)",15,7,n/a,21,3,1,18,6
"org.apache.pig.builtin.COR.Intermed.exec(Tuple)",4,7,n/a,10,1,1,5,4
"org.apache.pig.builtin.COR.combine(DataBag)",29,2,n/a,49,3,1,40,6
"org.apache.pig.builtin.COR.computeAll(DataBag,DataBag)",16,2,n/a,39,2,2,26,4
"org.apache.pig.builtin.COR.exec(Tuple)",28,7,n/a,40,4,1,29,7
"org.apache.pig.builtin.COR.getFinal()",2,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COR.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COR.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COR.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.COR.toString()",7,1,n/a,21,3,0,10,4
"org.apache.pig.builtin.COS.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.COSH.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.COUNT.Final.exec(Tuple)",4,7,n/a,10,1,1,5,2
"org.apache.pig.builtin.COUNT.Initial.exec(Tuple)",10,7,n/a,15,1,1,7,5
"org.apache.pig.builtin.COUNT.Intermediate.exec(Tuple)",5,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.COUNT.accumulate(Tuple)",9,1,n/a,19,3,1,11,7
"org.apache.pig.builtin.COUNT.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.COUNT.exec(Tuple)",9,7,n/a,22,2,1,15,8
"org.apache.pig.builtin.COUNT.getArgToFuncMapping()",8,2,n/a,11,0,0,5,1
"org.apache.pig.builtin.COUNT.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COUNT.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COUNT.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COUNT.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.COUNT.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.COUNT.sum(Tuple)",5,2,n/a,11,1,1,7,2
"org.apache.pig.builtin.COUNT_STAR.Final.exec(Tuple)",4,7,n/a,10,1,1,5,2
"org.apache.pig.builtin.COUNT_STAR.Initial.exec(Tuple)",6,7,n/a,10,0,1,2,2
"org.apache.pig.builtin.COUNT_STAR.Intermediate.exec(Tuple)",5,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.COUNT_STAR.accumulate(Tuple)",7,1,n/a,16,2,1,10,4
"org.apache.pig.builtin.COUNT_STAR.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.COUNT_STAR.exec(Tuple)",5,7,n/a,13,1,1,7,3
"org.apache.pig.builtin.COUNT_STAR.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COUNT_STAR.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COUNT_STAR.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COUNT_STAR.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.COUNT_STAR.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.COUNT_STAR.sum(Tuple)",5,2,n/a,11,1,1,7,2
"org.apache.pig.builtin.COV.COV()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.COV.COV(String...)",1,0,n/a,6,1,1,5,2
"org.apache.pig.builtin.COV.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.COV.Final.Final(String...)",1,0,n/a,6,1,1,5,2
"org.apache.pig.builtin.COV.Final.exec(Tuple)",22,7,n/a,43,4,1,32,8
"org.apache.pig.builtin.COV.Initial.exec(Tuple)",13,7,n/a,20,3,1,17,6
"org.apache.pig.builtin.COV.Intermed.exec(Tuple)",3,7,n/a,8,1,1,3,2
"org.apache.pig.builtin.COV.combine(DataBag)",28,2,n/a,42,3,1,36,6
"org.apache.pig.builtin.COV.computeAll(DataBag,DataBag)",14,2,n/a,33,2,2,20,4
"org.apache.pig.builtin.COV.exec(Tuple)",25,7,n/a,38,4,1,27,7
"org.apache.pig.builtin.COV.getFinal()",2,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.COV.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COV.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.COV.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.COV.toString()",7,1,n/a,21,3,0,10,4
"org.apache.pig.builtin.ConstantSize.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ConstantSize.exec(Tuple)",5,7,n/a,12,1,1,6,4
"org.apache.pig.builtin.ConstantSize.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.CubeDimensions.CubeDimensions()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.CubeDimensions.CubeDimensions(String)",1,1,n/a,4,0,1,2,1
"org.apache.pig.builtin.CubeDimensions.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.CubeDimensions.convertNullToUnknown(Tuple)",2,2,n/a,11,2,1,5,3
"org.apache.pig.builtin.CubeDimensions.exec(Tuple)",8,7,n/a,8,0,1,5,1
"org.apache.pig.builtin.CubeDimensions.outputSchema(Schema)",3,2,n/a,9,1,1,3,2
"org.apache.pig.builtin.CubeDimensions.recursivelyCube(List<Tuple>,Tuple,int,Tuple)",11,3,n/a,16,1,4,9,3
"org.apache.pig.builtin.CurrentTime.CurrentTime()",0,0,n/a,5,0,0,0,1
"org.apache.pig.builtin.CurrentTime.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.CurrentTime.exec(Tuple)",9,7,n/a,16,2,1,9,4
"org.apache.pig.builtin.DIFF.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.DIFF.computeDiff(DataBag,DataBag,DataBag)",14,1,n/a,16,0,3,14,7
"org.apache.pig.builtin.DIFF.exec(Tuple)",14,7,n/a,32,3,1,18,5
"org.apache.pig.builtin.DateTimeMax.Final.exec(Tuple)",4,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.DateTimeMax.Initial.exec(Tuple)",10,7,n/a,20,2,1,11,4
"org.apache.pig.builtin.DateTimeMax.Intermediate.exec(Tuple)",5,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.DateTimeMax.accumulate(Tuple)",5,1,n/a,19,2,1,10,6
"org.apache.pig.builtin.DateTimeMax.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.DateTimeMax.exec(Tuple)",1,7,n/a,8,1,1,3,2
"org.apache.pig.builtin.DateTimeMax.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.DateTimeMax.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.DateTimeMax.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.DateTimeMax.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.DateTimeMax.max(Tuple)",11,4,n/a,30,3,1,20,8
"org.apache.pig.builtin.DateTimeMax.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.DateTimeMin.Final.exec(Tuple)",4,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.DateTimeMin.Initial.exec(Tuple)",10,7,n/a,20,2,1,11,4
"org.apache.pig.builtin.DateTimeMin.Intermediate.exec(Tuple)",5,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.DateTimeMin.accumulate(Tuple)",5,1,n/a,19,2,1,10,6
"org.apache.pig.builtin.DateTimeMin.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.DateTimeMin.exec(Tuple)",1,7,n/a,8,1,1,3,2
"org.apache.pig.builtin.DateTimeMin.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.DateTimeMin.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.DateTimeMin.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.DateTimeMin.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.DateTimeMin.min(Tuple)",11,4,n/a,30,3,1,20,8
"org.apache.pig.builtin.DateTimeMin.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.DaysBetween.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.DaysBetween.exec(Tuple)",7,7,n/a,12,1,1,5,5
"org.apache.pig.builtin.DaysBetween.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.DaysBetween.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.Distinct.Final.exec(Tuple)",1,7,n/a,4,0,1,1,1
"org.apache.pig.builtin.Distinct.Initial.exec(Tuple)",4,7,n/a,13,1,1,5,3
"org.apache.pig.builtin.Distinct.Intermediate.exec(Tuple)",2,7,n/a,4,0,1,1,1
"org.apache.pig.builtin.Distinct.createDataBag()",7,3,n/a,14,3,0,7,6
"org.apache.pig.builtin.Distinct.exec(Tuple)",1,7,n/a,4,0,1,1,1
"org.apache.pig.builtin.Distinct.getDistinct(Tuple)",4,1,n/a,20,3,1,13,5
"org.apache.pig.builtin.Distinct.getDistinctFromNestedBags(Tuple,EvalFunc)",5,2,n/a,25,4,2,14,6
"org.apache.pig.builtin.Distinct.getFinal()",1,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.Distinct.getInitial()",1,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.Distinct.getIntermed()",1,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.Distinct.staticDataCleanup()",0,0,n/a,5,0,0,2,1
"org.apache.pig.builtin.DoubleAbs.compute(Double)",1,1,n/a,4,0,1,1,1
"org.apache.pig.builtin.DoubleAvg.Final.exec(Tuple)",8,7,n/a,23,2,1,15,5
"org.apache.pig.builtin.DoubleAvg.Initial.exec(Tuple)",13,7,n/a,27,2,1,16,5
"org.apache.pig.builtin.DoubleAvg.Intermediate.exec(Tuple)",5,7,n/a,13,1,1,7,3
"org.apache.pig.builtin.DoubleAvg.accumulate(Tuple)",5,1,n/a,25,2,1,15,7
"org.apache.pig.builtin.DoubleAvg.cleanup()",0,2,n/a,5,0,0,2,1
"org.apache.pig.builtin.DoubleAvg.combine(DataBag)",11,2,n/a,33,2,1,18,4
"org.apache.pig.builtin.DoubleAvg.count(Tuple)",6,2,n/a,11,1,1,8,5
"org.apache.pig.builtin.DoubleAvg.exec(Tuple)",3,7,n/a,18,2,1,10,4
"org.apache.pig.builtin.DoubleAvg.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.DoubleAvg.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.DoubleAvg.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.DoubleAvg.getValue()",1,1,n/a,8,1,0,4,3
"org.apache.pig.builtin.DoubleAvg.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.DoubleAvg.sum(Tuple)",8,2,n/a,27,2,1,20,6
"org.apache.pig.builtin.DoubleBase.compute(Double)",n/a,1,17,n/a,n/a,1,n/a,n/a
"org.apache.pig.builtin.DoubleBase.exec(Tuple)",6,7,n/a,15,1,1,6,5
"org.apache.pig.builtin.DoubleBase.getArgToFuncMapping()",7,2,n/a,9,0,0,3,1
"org.apache.pig.builtin.DoubleMax.DoubleMax()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.DoubleMax.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.DoubleMax.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.DoubleMin.DoubleMin()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.DoubleMin.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.DoubleMin.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.DoubleRound.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.DoubleRound.exec(Tuple)",5,7,n/a,17,1,1,6,5
"org.apache.pig.builtin.DoubleRound.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.DoubleRoundTo.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.DoubleRoundTo.exec(Tuple)",11,7,n/a,22,1,1,12,6
"org.apache.pig.builtin.DoubleRoundTo.getArgToFuncMapping()",21,2,n/a,17,0,0,11,1
"org.apache.pig.builtin.DoubleSum.DoubleSum()",1,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.DoubleSum.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.DoubleSum.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.ENDSWITH.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ENDSWITH.exec(Tuple)",11,7,n/a,23,1,1,15,6
"org.apache.pig.builtin.ENDSWITH.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.ENDSWITH.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.EXP.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.EqualsIgnoreCase.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.EqualsIgnoreCase.exec(Tuple)",11,7,n/a,19,2,1,11,6
"org.apache.pig.builtin.FLOOR.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.FloatAbs.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.FloatAbs.exec(Tuple)",4,7,n/a,16,1,1,7,4
"org.apache.pig.builtin.FloatAbs.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.FloatAvg.Final.exec(Tuple)",8,7,n/a,23,2,1,15,5
"org.apache.pig.builtin.FloatAvg.Initial.exec(Tuple)",14,7,n/a,26,2,1,16,6
"org.apache.pig.builtin.FloatAvg.Intermediate.exec(Tuple)",5,7,n/a,13,1,1,7,3
"org.apache.pig.builtin.FloatAvg.accumulate(Tuple)",5,1,n/a,25,2,1,15,7
"org.apache.pig.builtin.FloatAvg.cleanup()",0,2,n/a,5,0,0,2,1
"org.apache.pig.builtin.FloatAvg.combine(DataBag)",11,2,n/a,33,2,1,18,4
"org.apache.pig.builtin.FloatAvg.count(Tuple)",6,2,n/a,11,1,1,8,5
"org.apache.pig.builtin.FloatAvg.exec(Tuple)",3,7,n/a,18,2,1,10,4
"org.apache.pig.builtin.FloatAvg.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.FloatAvg.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.FloatAvg.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.FloatAvg.getValue()",1,1,n/a,8,1,0,4,3
"org.apache.pig.builtin.FloatAvg.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.FloatAvg.sum(Tuple)",8,2,n/a,27,2,1,20,6
"org.apache.pig.builtin.FloatMax.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.FloatMax.FloatMax()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.FloatMax.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.FloatMin.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.FloatMin.FloatMin()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.FloatMin.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.FloatRound.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.FloatRound.exec(Tuple)",5,7,n/a,17,1,1,6,5
"org.apache.pig.builtin.FloatRound.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.FloatRoundTo.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.FloatRoundTo.exec(Tuple)",11,7,n/a,22,1,1,12,6
"org.apache.pig.builtin.FloatRoundTo.getArgToFuncMapping()",21,2,n/a,17,0,0,11,1
"org.apache.pig.builtin.FloatSum.FloatSum()",0,0,n/a,2,0,0,0,1
"org.apache.pig.builtin.FuncUtils.getShipFiles(Class[])",2,5,n/a,8,0,1,1,1
"org.apache.pig.builtin.FuncUtils.getShipFiles(List<Class>)",3,1,n/a,8,1,1,5,2
"org.apache.pig.builtin.FunctionWrapperEvalFunc.FunctionWrapperEvalFunc(ExceptionalFunction)",10,2,n/a,14,0,1,4,2
"org.apache.pig.builtin.FunctionWrapperEvalFunc.FunctionWrapperEvalFunc(Function)",2,0,n/a,9,0,1,1,1
"org.apache.pig.builtin.FunctionWrapperEvalFunc.FunctionWrapperEvalFunc(String)",2,0,n/a,11,0,1,1,1
"org.apache.pig.builtin.FunctionWrapperEvalFunc.GoogleFunctionBridge.GoogleFunctionBridge(Function<S, T>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.builtin.FunctionWrapperEvalFunc.GoogleFunctionBridge.apply(Object)",1,1,n/a,5,0,1,1,1
"org.apache.pig.builtin.FunctionWrapperEvalFunc.GoogleFunctionBridge.getWrappedFunction()",0,2,n/a,1,0,0,1,1
"org.apache.pig.builtin.FunctionWrapperEvalFunc.exec(Object)",6,1,n/a,10,1,1,4,2
"org.apache.pig.builtin.FunctionWrapperEvalFunc.getCounterGroup()",0,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.FunctionWrapperEvalFunc.getFunctionInClass(ExceptionalFunction)",1,1,n/a,4,0,1,1,1
"org.apache.pig.builtin.FunctionWrapperEvalFunc.getFunctionOutClass(ExceptionalFunction)",1,1,n/a,4,0,1,1,1
"org.apache.pig.builtin.FunctionWrapperEvalFunc.getFunctionTypeClass(ExceptionalFunction,int)",14,2,n/a,35,2,2,17,5
"org.apache.pig.builtin.FunctionWrapperEvalFunc.initializeFunction(String)",7,1,n/a,15,1,1,6,3
"org.apache.pig.builtin.GenericInvoker.GenericInvoker()",0,5,n/a,1,0,0,0,1
"org.apache.pig.builtin.GenericInvoker.GenericInvoker(String)",1,5,n/a,4,0,1,1,1
"org.apache.pig.builtin.GenericInvoker.GenericInvoker(String,String)",1,5,n/a,4,0,2,1,1
"org.apache.pig.builtin.GenericInvoker.GenericInvoker(String,String,String)",1,5,n/a,4,0,3,1,1
"org.apache.pig.builtin.GenericInvoker.exec(Tuple)",2,7,n/a,8,1,1,3,2
"org.apache.pig.builtin.GenericInvoker.outputSchema(Schema)",4,2,n/a,6,0,1,4,2
"org.apache.pig.builtin.GetDay.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.GetDay.exec(Tuple)",4,7,n/a,7,1,1,3,4
"org.apache.pig.builtin.GetDay.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.GetDay.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.GetHour.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.GetHour.exec(Tuple)",4,7,n/a,7,1,1,3,4
"org.apache.pig.builtin.GetHour.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.GetHour.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.GetMilliSecond.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.GetMilliSecond.exec(Tuple)",4,7,n/a,7,1,1,3,4
"org.apache.pig.builtin.GetMilliSecond.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.GetMilliSecond.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.GetMinute.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.GetMinute.exec(Tuple)",4,7,n/a,7,1,1,3,4
"org.apache.pig.builtin.GetMinute.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.GetMinute.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.GetMonth.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.GetMonth.exec(Tuple)",4,7,n/a,7,1,1,3,4
"org.apache.pig.builtin.GetMonth.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.GetMonth.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.GetSecond.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.GetSecond.exec(Tuple)",4,7,n/a,7,1,1,3,4
"org.apache.pig.builtin.GetSecond.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.GetSecond.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.GetWeek.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.GetWeek.exec(Tuple)",4,7,n/a,7,1,1,3,4
"org.apache.pig.builtin.GetWeek.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.GetWeek.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.GetWeekYear.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.GetWeekYear.exec(Tuple)",4,7,n/a,7,1,1,3,4
"org.apache.pig.builtin.GetWeekYear.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.GetWeekYear.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.GetYear.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.GetYear.exec(Tuple)",4,7,n/a,7,1,1,3,4
"org.apache.pig.builtin.GetYear.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.GetYear.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.HiveUDAF.Final.Final(String)",0,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.HiveUDAF.Final.Final(String,String)",1,0,n/a,4,0,2,2,1
"org.apache.pig.builtin.HiveUDAF.Final.exec(Tuple)",15,7,n/a,21,2,1,15,4
"org.apache.pig.builtin.HiveUDAF.HiveUDAF(String)",1,1,n/a,4,0,1,2,1
"org.apache.pig.builtin.HiveUDAF.HiveUDAF(String,String)",2,0,n/a,5,0,2,3,1
"org.apache.pig.builtin.HiveUDAF.Initial.Initial(String)",0,0,n/a,2,0,1,0,1
"org.apache.pig.builtin.HiveUDAF.Initial.Initial(String,String)",0,0,n/a,2,0,2,0,1
"org.apache.pig.builtin.HiveUDAF.Initial.exec(Tuple)",5,7,n/a,9,1,1,5,2
"org.apache.pig.builtin.HiveUDAF.Intermediate.Intermediate(String)",0,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.HiveUDAF.Intermediate.Intermediate(String,String)",1,0,n/a,4,0,2,2,1
"org.apache.pig.builtin.HiveUDAF.Intermediate.exec(Tuple)",16,7,n/a,22,2,1,16,4
"org.apache.pig.builtin.HiveUDAF.SchemaAndEvaluatorInfo.getEvaluator(TypeInfo,GenericUDAFResolver,ConstantObjectInspectInfo)",7,1,n/a,20,2,3,10,3
"org.apache.pig.builtin.HiveUDAF.SchemaAndEvaluatorInfo.getInputObjectInspectorAsArray(TypeInfo,ConstantObjectInspectInfo)",10,2,n/a,13,2,2,9,4
"org.apache.pig.builtin.HiveUDAF.SchemaAndEvaluatorInfo.getInputTypeInfo(Schema)",4,1,n/a,6,0,1,4,1
"org.apache.pig.builtin.HiveUDAF.SchemaAndEvaluatorInfo.init(Schema,GenericUDAFResolver,Mode,ConstantObjectInspectInfo)",13,4,n/a,28,3,4,20,7
"org.apache.pig.builtin.HiveUDAF.exec(Tuple)",14,7,n/a,22,2,1,16,4
"org.apache.pig.builtin.HiveUDAF.getFinal()",2,3,n/a,8,1,0,3,2
"org.apache.pig.builtin.HiveUDAF.getInitial()",2,3,n/a,8,1,0,3,2
"org.apache.pig.builtin.HiveUDAF.getIntermed()",2,3,n/a,8,1,0,3,2
"org.apache.pig.builtin.HiveUDAF.instantiateUDAF(String)",8,5,n/a,12,1,1,8,3
"org.apache.pig.builtin.HiveUDAF.outputSchema(Schema)",8,2,n/a,15,2,1,9,3
"org.apache.pig.builtin.HiveUDF.HiveUDF(String)",8,1,n/a,10,1,1,6,3
"org.apache.pig.builtin.HiveUDF.HiveUDF(String,String)",2,0,n/a,4,0,2,2,1
"org.apache.pig.builtin.HiveUDF.SchemaInfo.init(Schema,GenericUDF,ConstantObjectInspectInfo)",16,3,n/a,21,3,3,16,6
"org.apache.pig.builtin.HiveUDF.exec(Tuple)",12,7,n/a,19,1,1,14,4
"org.apache.pig.builtin.HiveUDF.finish()",2,1,n/a,8,1,0,3,2
"org.apache.pig.builtin.HiveUDF.getShipFiles()",12,2,n/a,19,2,0,11,5
"org.apache.pig.builtin.HiveUDF.outputSchema(Schema)",8,2,n/a,16,2,1,9,3
"org.apache.pig.builtin.HiveUDFBase.ConstantObjectInspectInfo.get(int)",0,6,n/a,3,0,1,1,1
"org.apache.pig.builtin.HiveUDFBase.ConstantObjectInspectInfo.injectConstantObjectInspector(StructObjectInspector)",10,2,n/a,11,3,1,8,4
"org.apache.pig.builtin.HiveUDFBase.ConstantObjectInspectInfo.isEmpty()",0,2,n/a,3,0,0,1,1
"org.apache.pig.builtin.HiveUDFBase.ConstantObjectInspectInfo.parse(String)",10,5,n/a,18,3,1,14,4
"org.apache.pig.builtin.HiveUDFBase.ConstantObjectInspectInfo.size()",0,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.HiveUDFBase.HiveReporter.HiveReporter(PigStatusReporter)",0,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.HiveUDFBase.HiveReporter.getCounter(Enum<?>)",6,0,n/a,9,1,1,5,2
"org.apache.pig.builtin.HiveUDFBase.HiveReporter.getCounter(String,String)",6,0,n/a,9,1,2,5,2
"org.apache.pig.builtin.HiveUDFBase.HiveReporter.getInputSplit()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.HiveUDFBase.HiveReporter.getProgress()",0,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.HiveUDFBase.HiveReporter.incrCounter(Enum<?>,long)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.HiveUDFBase.HiveReporter.incrCounter(String,String,long)",1,0,n/a,3,0,3,1,1
"org.apache.pig.builtin.HiveUDFBase.HiveReporter.progress()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.HiveUDFBase.HiveReporter.setStatus(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.HiveUDFBase.getErrorMessage(Class)",16,3,n/a,13,1,1,9,6
"org.apache.pig.builtin.HiveUDFBase.getShipFiles()",5,2,n/a,18,1,0,9,4
"org.apache.pig.builtin.HiveUDFBase.instantiateMapredContext()",13,3,n/a,11,1,0,8,2
"org.apache.pig.builtin.HiveUDFBase.resolveFunc(String)",7,3,n/a,19,2,1,12,4
"org.apache.pig.builtin.HiveUDTF.HiveUDTF(String)",5,1,n/a,8,1,1,4,2
"org.apache.pig.builtin.HiveUDTF.HiveUDTF(String,String)",2,0,n/a,4,0,2,2,1
"org.apache.pig.builtin.HiveUDTF.HiveUDTFCollector.collect(Object)",7,0,n/a,13,2,1,6,4
"org.apache.pig.builtin.HiveUDTF.HiveUDTFCollector.getBag()",0,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.HiveUDTF.HiveUDTFCollector.init()",1,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.HiveUDTF.SchemaInfo.init(Schema,GenericUDTF,ConstantObjectInspectInfo)",9,2,n/a,16,1,3,11,3
"org.apache.pig.builtin.HiveUDTF.exec(Tuple)",13,7,n/a,24,2,1,14,5
"org.apache.pig.builtin.HiveUDTF.needEndOfAllInputProcessing()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.HiveUDTF.outputSchema(Schema)",13,2,n/a,21,2,1,14,3
"org.apache.pig.builtin.HiveUDTF.setEndOfAllInput(boolean)",0,1,n/a,4,0,1,1,1
"org.apache.pig.builtin.HoursBetween.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.HoursBetween.exec(Tuple)",7,7,n/a,11,1,1,5,5
"org.apache.pig.builtin.HoursBetween.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.HoursBetween.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.INDEXOF.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.INDEXOF.exec(Tuple)",9,7,n/a,26,1,1,12,5
"org.apache.pig.builtin.INDEXOF.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.INVERSEMAP.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.INVERSEMAP.doInverse(Map<String, Object>)",16,1,n/a,23,2,1,14,5
"org.apache.pig.builtin.INVERSEMAP.exec(Tuple)",3,7,n/a,10,1,1,6,4
"org.apache.pig.builtin.INVERSEMAP.outputSchema(Schema)",7,2,n/a,11,2,1,5,3
"org.apache.pig.builtin.IntAbs.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.IntAbs.exec(Tuple)",4,7,n/a,16,1,1,7,4
"org.apache.pig.builtin.IntAbs.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.IntAvg.Final.exec(Tuple)",8,7,n/a,23,2,1,15,5
"org.apache.pig.builtin.IntAvg.Initial.exec(Tuple)",14,7,n/a,26,2,1,16,6
"org.apache.pig.builtin.IntAvg.Intermediate.exec(Tuple)",5,7,n/a,13,1,1,7,3
"org.apache.pig.builtin.IntAvg.accumulate(Tuple)",5,1,n/a,25,2,1,15,7
"org.apache.pig.builtin.IntAvg.cleanup()",0,2,n/a,5,0,0,2,1
"org.apache.pig.builtin.IntAvg.combine(DataBag)",11,2,n/a,33,2,1,18,4
"org.apache.pig.builtin.IntAvg.count(Tuple)",6,2,n/a,11,1,1,8,5
"org.apache.pig.builtin.IntAvg.exec(Tuple)",3,7,n/a,18,2,1,10,4
"org.apache.pig.builtin.IntAvg.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.IntAvg.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.IntAvg.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.IntAvg.getValue()",1,1,n/a,8,1,0,4,3
"org.apache.pig.builtin.IntAvg.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.IntAvg.sum(Tuple)",8,2,n/a,31,2,1,20,6
"org.apache.pig.builtin.IntMax.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.IntMax.IntMax()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.IntMax.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.IntMin.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.IntMin.IntMin()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.IntMin.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.IntSum.IntSum()",0,0,n/a,2,0,0,0,1
"org.apache.pig.builtin.InvokeForDouble.InvokeForDouble()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.InvokeForDouble.InvokeForDouble(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.InvokeForDouble.InvokeForDouble(String,String)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.InvokeForDouble.InvokeForDouble(String,String,String)",1,0,n/a,4,0,3,1,1
"org.apache.pig.builtin.InvokeForFloat.InvokeForFloat()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.InvokeForFloat.InvokeForFloat(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.InvokeForFloat.InvokeForFloat(String,String)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.InvokeForFloat.InvokeForFloat(String,String,String)",1,0,n/a,4,0,3,1,1
"org.apache.pig.builtin.InvokeForInt.InvokeForInt()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.InvokeForInt.InvokeForInt(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.InvokeForInt.InvokeForInt(String,String)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.InvokeForInt.InvokeForInt(String,String,String)",1,0,n/a,4,0,3,1,1
"org.apache.pig.builtin.InvokeForLong.InvokeForLong()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.InvokeForLong.InvokeForLong(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.InvokeForLong.InvokeForLong(String,String)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.InvokeForLong.InvokeForLong(String,String,String)",1,0,n/a,4,0,3,1,1
"org.apache.pig.builtin.InvokeForString.InvokeForString()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.InvokeForString.InvokeForString(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.InvokeForString.InvokeForString(String,String)",1,0,n/a,3,0,2,1,1
"org.apache.pig.builtin.InvokeForString.InvokeForString(String,String,String)",1,0,n/a,4,0,3,1,1
"org.apache.pig.builtin.Invoker.Invoker(String,String)",1,2,n/a,4,0,2,1,1
"org.apache.pig.builtin.Invoker.Invoker(String,String,String)",14,2,n/a,24,1,3,17,7
"org.apache.pig.builtin.Invoker.bagToNumberList(DataBag)",3,1,n/a,7,1,1,4,2
"org.apache.pig.builtin.Invoker.convertToExpectedArg(Class<T>,Object)",33,1,n/a,50,4,2,45,14
"org.apache.pig.builtin.Invoker.dropFirstClass(Class<?>[])",1,1,n/a,7,1,1,3,2
"org.apache.pig.builtin.Invoker.dropFirstObject(Object[])",1,1,n/a,7,1,1,3,2
"org.apache.pig.builtin.Invoker.getReturnType()",1,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.Invoker.invoke(Tuple)",8,1,n/a,17,2,1,8,5
"org.apache.pig.builtin.Invoker.stringToClass(String)",11,1,n/a,25,1,1,21,11
"org.apache.pig.builtin.Invoker.tupleToArgs(Tuple)",5,1,n/a,14,1,1,10,8
"org.apache.pig.builtin.Invoker.unPrimitivize(Class<?>)",4,2,n/a,13,1,1,9,5
"org.apache.pig.builtin.InvokerFunction.eval(Tuple)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.builtin.InvokerGenerator.ByteClassLoader.ByteClassLoader(byte[])",0,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.InvokerGenerator.ByteClassLoader.findClass(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.InvokerGenerator.ByteClassLoader.getInvokerFunction(String,byte[])",5,1,n/a,9,1,2,4,3
"org.apache.pig.builtin.InvokerGenerator.InvokerGenerator(String,String,String)",2,0,n/a,8,1,3,5,2
"org.apache.pig.builtin.InvokerGenerator.addConst(MethodVisitor,int)",7,1,n/a,12,1,2,21,8
"org.apache.pig.builtin.InvokerGenerator.boxIfPrimitive(MethodVisitor,Class<?>)",5,1,n/a,7,1,2,4,2
"org.apache.pig.builtin.InvokerGenerator.buildSignatureString(Class<?>[],Class<?>)",6,1,n/a,16,1,2,10,4
"org.apache.pig.builtin.InvokerGenerator.exec(Tuple)",2,7,n/a,6,0,1,3,2
"org.apache.pig.builtin.InvokerGenerator.generateInvokerFunction(String,Method,boolean,Class<?>[])",2,1,n/a,4,0,4,2,1
"org.apache.pig.builtin.InvokerGenerator.generateInvokerFunctionBytecode(String,Method,boolean,Class<?>[])",29,1,n/a,32,1,4,28,8
"org.apache.pig.builtin.InvokerGenerator.getArgumentClassArray(String[])",3,1,n/a,14,3,1,10,4
"org.apache.pig.builtin.InvokerGenerator.getMethodStyleName(Class<?>)",4,11,n/a,6,1,1,3,2
"org.apache.pig.builtin.InvokerGenerator.getObjectVersion(Class<?>)",2,1,n/a,6,1,1,3,2
"org.apache.pig.builtin.InvokerGenerator.getUniqueId()",0,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.InvokerGenerator.initialize()",21,2,n/a,33,1,0,22,6
"org.apache.pig.builtin.InvokerGenerator.loadAndStoreArgument(MethodVisitor,int,int,String)",5,2,n/a,7,0,4,5,1
"org.apache.pig.builtin.InvokerGenerator.makeConstructor(ClassWriter)",7,1,n/a,9,0,1,7,1
"org.apache.pig.builtin.InvokerGenerator.outputSchema(Schema)",1,2,n/a,6,0,1,3,2
"org.apache.pig.builtin.InvokerGenerator.unboxIfPrimitive(MethodVisitor,Class<?>)",6,1,n/a,7,1,2,4,2
"org.apache.pig.builtin.IsEmpty.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.IsEmpty.exec(Tuple)",5,7,n/a,18,2,1,10,4
"org.apache.pig.builtin.JsonLoader.JsonLoader()",0,0,n/a,2,0,0,0,1
"org.apache.pig.builtin.JsonLoader.JsonLoader(String)",2,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.JsonLoader.getInputFormat()",1,8,n/a,7,0,0,1,1
"org.apache.pig.builtin.JsonLoader.getLoadCaster()",0,7,n/a,5,0,0,1,1
"org.apache.pig.builtin.JsonLoader.getNext()",21,22,n/a,47,2,0,26,7
"org.apache.pig.builtin.JsonLoader.getPartitionKeys(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.builtin.JsonLoader.getSchema(String,Job)",8,3,n/a,21,2,2,10,3
"org.apache.pig.builtin.JsonLoader.getShipFiles()",2,3,n/a,6,0,0,3,1
"org.apache.pig.builtin.JsonLoader.getStatistics(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.builtin.JsonLoader.prepareToRead(RecordReader,PigSplit)",8,6,n/a,16,1,2,8,2
"org.apache.pig.builtin.JsonLoader.readField(JsonParser,ResourceFieldSchema,int)",37,3,n/a,83,4,3,59,18
"org.apache.pig.builtin.JsonLoader.readPrimitive(JsonParser,JsonToken,ResourceFieldSchema)",19,2,n/a,33,1,3,27,13
"org.apache.pig.builtin.JsonLoader.setLocation(String,Job)",1,16,n/a,4,0,2,1,1
"org.apache.pig.builtin.JsonLoader.setPartitionFilter(Expression)",0,3,n/a,4,0,1,0,1
"org.apache.pig.builtin.JsonLoader.setUDFContextSignature(String)",0,15,n/a,3,0,1,1,1
"org.apache.pig.builtin.JsonMetadata.JsonMetadata()",1,4,n/a,3,0,0,1,1
"org.apache.pig.builtin.JsonMetadata.JsonMetadata(String,String,String)",0,1,n/a,5,0,3,3,1
"org.apache.pig.builtin.JsonMetadata.exists(ElementDescriptor)",4,2,n/a,9,1,1,5,2
"org.apache.pig.builtin.JsonMetadata.findMetaFile(String,String,Configuration)",18,2,n/a,52,4,3,22,7
"org.apache.pig.builtin.JsonMetadata.getPartitionKeys(String,Job)",0,4,n/a,4,0,2,1,1
"org.apache.pig.builtin.JsonMetadata.getSchema(String,Job)",1,3,n/a,9,0,2,1,1
"org.apache.pig.builtin.JsonMetadata.getSchema(String,Job,boolean)",15,3,n/a,42,1,3,22,6
"org.apache.pig.builtin.JsonMetadata.getStatistics(String,Job)",18,4,n/a,38,1,2,22,6
"org.apache.pig.builtin.JsonMetadata.nullOrException(boolean,String,IOException)",2,5,n/a,10,1,3,4,2
"org.apache.pig.builtin.JsonMetadata.setFieldDel(byte)",0,2,n/a,3,0,1,1,1
"org.apache.pig.builtin.JsonMetadata.setPartitionFilter(Expression)",0,3,n/a,4,0,1,0,1
"org.apache.pig.builtin.JsonMetadata.setRecordDel(byte)",0,2,n/a,3,0,1,1,1
"org.apache.pig.builtin.JsonMetadata.storeSchema(ResourceSchema,String,Job)",23,4,n/a,39,5,3,26,10
"org.apache.pig.builtin.JsonMetadata.storeStatistics(ResourceStatistics,String,Job)",14,1,n/a,18,2,3,10,5
"org.apache.pig.builtin.JsonStorage.checkSchema(ResourceSchema)",6,4,n/a,10,0,1,3,1
"org.apache.pig.builtin.JsonStorage.fixSchema(ResourceSchema)",3,1,n/a,7,1,1,4,3
"org.apache.pig.builtin.JsonStorage.getCacheFiles()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.JsonStorage.getOutputFormat()",1,8,n/a,7,0,0,1,1
"org.apache.pig.builtin.JsonStorage.getShipFiles()",1,1,n/a,5,0,0,2,1
"org.apache.pig.builtin.JsonStorage.prepareToWrite(RecordWriter)",8,5,n/a,18,1,1,8,2
"org.apache.pig.builtin.JsonStorage.putNext(Tuple)",14,4,n/a,28,2,1,16,4
"org.apache.pig.builtin.JsonStorage.setStoreFuncUDFContextSignature(String)",0,5,n/a,5,0,1,1,1
"org.apache.pig.builtin.JsonStorage.setStoreLocation(String,Job)",2,8,n/a,6,0,2,1,1
"org.apache.pig.builtin.JsonStorage.storeSchema(ResourceSchema,String,Job)",4,2,n/a,11,0,3,6,1
"org.apache.pig.builtin.JsonStorage.storeStatistics(ResourceStatistics,String,Job)",0,1,n/a,5,0,3,0,1
"org.apache.pig.builtin.JsonStorage.writeField(JsonGenerator,ResourceFieldSchema,Object)",64,4,n/a,100,3,3,77,25
"org.apache.pig.builtin.KEYSET.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.KEYSET.exec(Tuple)",7,7,n/a,19,1,1,11,5
"org.apache.pig.builtin.KEYSET.outputSchema(Schema)",10,2,n/a,19,2,1,11,4
"org.apache.pig.builtin.LAST_INDEX_OF.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.LAST_INDEX_OF.exec(Tuple)",6,7,n/a,22,1,1,8,4
"org.apache.pig.builtin.LAST_INDEX_OF.getArgToFuncMapping()",10,2,n/a,12,0,0,6,1
"org.apache.pig.builtin.LAST_INDEX_OF.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.LCFIRST.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.LCFIRST.exec(Tuple)",8,7,n/a,15,1,1,11,6
"org.apache.pig.builtin.LCFIRST.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.LOG.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.LOG10.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.LOWER.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.LOWER.exec(Tuple)",5,7,n/a,17,1,1,7,4
"org.apache.pig.builtin.LOWER.getArgToFuncMapping()",7,2,n/a,9,0,0,3,1
"org.apache.pig.builtin.LOWER.outputSchema(Schema)",6,2,n/a,9,0,1,1,1
"org.apache.pig.builtin.LTRIM.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.LTRIM.exec(Tuple)",6,7,n/a,15,1,1,11,6
"org.apache.pig.builtin.LTRIM.getArgToFuncMapping()",7,2,n/a,9,0,0,3,1
"org.apache.pig.builtin.LTRIM.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.LongAbs.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.LongAbs.exec(Tuple)",4,7,n/a,16,1,1,7,4
"org.apache.pig.builtin.LongAbs.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.LongAvg.Final.exec(Tuple)",8,7,n/a,23,2,1,15,5
"org.apache.pig.builtin.LongAvg.Initial.exec(Tuple)",13,7,n/a,26,2,1,16,5
"org.apache.pig.builtin.LongAvg.Intermediate.exec(Tuple)",5,7,n/a,13,1,1,7,3
"org.apache.pig.builtin.LongAvg.accumulate(Tuple)",5,1,n/a,25,2,1,15,7
"org.apache.pig.builtin.LongAvg.cleanup()",0,2,n/a,5,0,0,2,1
"org.apache.pig.builtin.LongAvg.combine(DataBag)",11,2,n/a,33,2,1,18,4
"org.apache.pig.builtin.LongAvg.count(Tuple)",6,2,n/a,11,1,1,8,5
"org.apache.pig.builtin.LongAvg.exec(Tuple)",3,7,n/a,18,2,1,10,4
"org.apache.pig.builtin.LongAvg.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.LongAvg.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.LongAvg.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.LongAvg.getValue()",1,1,n/a,8,1,0,4,3
"org.apache.pig.builtin.LongAvg.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.LongAvg.sum(Tuple)",8,2,n/a,27,2,1,20,6
"org.apache.pig.builtin.LongMax.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.LongMax.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.LongMax.LongMax()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.LongMin.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.LongMin.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.LongMin.LongMin()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.LongSum.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.LongSum.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.LongSum.LongSum()",1,1,n/a,3,0,0,1,1
"org.apache.pig.builtin.MAX.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.MAX.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.MAX.MAX()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.MAX.getArgToFuncMapping()",38,2,n/a,17,0,0,11,1
"org.apache.pig.builtin.MIN.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.MIN.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.MIN.MIN()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.MIN.getArgToFuncMapping()",38,2,n/a,17,0,0,11,1
"org.apache.pig.builtin.MapSize.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.MapSize.exec(Tuple)",7,7,n/a,14,1,1,7,4
"org.apache.pig.builtin.MapSize.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.MilliSecondsBetween.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.MilliSecondsBetween.exec(Tuple)",7,7,n/a,12,1,1,5,5
"org.apache.pig.builtin.MilliSecondsBetween.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.MilliSecondsBetween.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.MinutesBetween.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.MinutesBetween.exec(Tuple)",7,7,n/a,12,1,1,5,5
"org.apache.pig.builtin.MinutesBetween.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.MinutesBetween.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.MonitoredUDF.doubleDefault()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.MonitoredUDF.duration()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.MonitoredUDF.errorCallback()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.MonitoredUDF.floatDefault()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.MonitoredUDF.intDefault()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.MonitoredUDF.longDefault()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.MonitoredUDF.stringDefault()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.MonitoredUDF.timeUnit()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.MonthsBetween.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.MonthsBetween.exec(Tuple)",7,7,n/a,13,1,1,6,5
"org.apache.pig.builtin.MonthsBetween.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.MonthsBetween.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.OrcStorage.NonEmptyOrcFileFilter.NonEmptyOrcFileFilter(FileSystem)",0,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.OrcStorage.NonEmptyOrcFileFilter.accept(Path)",7,0,n/a,15,2,1,9,3
"org.apache.pig.builtin.OrcStorage.OrcStorage()",0,0,n/a,2,0,0,0,1
"org.apache.pig.builtin.OrcStorage.OrcStorage(String)",24,0,n/a,29,2,1,20,7
"org.apache.pig.builtin.OrcStorage.buildSearchArgument(Expression,Builder)",59,6,n/a,69,2,2,62,17
"org.apache.pig.builtin.OrcStorage.checkSchema(ResourceSchema)",9,3,n/a,9,0,1,6,1
"org.apache.pig.builtin.OrcStorage.cleanupOnFailure(String,Job)",1,3,n/a,4,0,2,1,1
"org.apache.pig.builtin.OrcStorage.cleanupOnSuccess(String,Job)",0,3,n/a,3,0,2,0,1
"org.apache.pig.builtin.OrcStorage.getColumnName(Expression)",4,9,n/a,8,1,1,3,2
"org.apache.pig.builtin.OrcStorage.getExpressionValue(Expression)",6,6,n/a,10,1,1,7,4
"org.apache.pig.builtin.OrcStorage.getFeatures()",1,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.OrcStorage.getFirstFile(String,FileSystem,PathFilter)",8,1,n/a,20,3,3,17,5
"org.apache.pig.builtin.OrcStorage.getInputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.builtin.OrcStorage.getNext()",4,22,n/a,17,2,0,10,3
"org.apache.pig.builtin.OrcStorage.getOutputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.builtin.OrcStorage.getPartitionKeys(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.builtin.OrcStorage.getPredicateFields(String,Job)",6,1,n/a,24,2,2,18,4
"org.apache.pig.builtin.OrcStorage.getReqiredColumnIdString(boolean[])",8,1,n/a,12,2,1,9,4
"org.apache.pig.builtin.OrcStorage.getReqiredColumnNamesString(ResourceSchema)",10,1,n/a,10,1,1,6,3
"org.apache.pig.builtin.OrcStorage.getReqiredColumnNamesString(ResourceSchema,boolean[])",9,1,n/a,13,2,2,10,4
"org.apache.pig.builtin.OrcStorage.getSchema(String,Job)",3,6,n/a,13,2,2,6,3
"org.apache.pig.builtin.OrcStorage.getSearchArgObjValue(Object)",3,4,n/a,11,1,1,7,4
"org.apache.pig.builtin.OrcStorage.getSearchArgObjValues(List<Object>)",7,1,n/a,10,1,1,6,5
"org.apache.pig.builtin.OrcStorage.getSearchArgument(Expression)",11,1,n/a,17,1,1,11,6
"org.apache.pig.builtin.OrcStorage.getShipFiles()",6,4,n/a,19,1,0,10,4
"org.apache.pig.builtin.OrcStorage.getStatistics(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.builtin.OrcStorage.getSupportedExpressionTypes()",13,1,n/a,17,0,0,14,1
"org.apache.pig.builtin.OrcStorage.getTypeInfo(String,Job)",8,2,n/a,11,1,2,7,3
"org.apache.pig.builtin.OrcStorage.getTypeInfoFromLocation(String,Job)",8,1,n/a,12,1,2,8,2
"org.apache.pig.builtin.OrcStorage.prepareToRead(RecordReader,PigSplit)",0,6,n/a,5,0,2,1,1
"org.apache.pig.builtin.OrcStorage.prepareToWrite(RecordWriter)",0,5,n/a,4,0,1,1,1
"org.apache.pig.builtin.OrcStorage.pushProjection(RequiredFieldList)",13,3,n/a,23,2,1,13,6
"org.apache.pig.builtin.OrcStorage.putNext(Tuple)",3,4,n/a,8,1,1,3,2
"org.apache.pig.builtin.OrcStorage.relToAbsPathForStoreLocation(String,Path)",1,7,n/a,5,0,2,1,1
"org.apache.pig.builtin.OrcStorage.setLocation(String,Job)",34,16,n/a,34,3,2,19,10
"org.apache.pig.builtin.OrcStorage.setPartitionFilter(Expression)",0,3,n/a,4,0,1,0,1
"org.apache.pig.builtin.OrcStorage.setPushdownPredicate(Expression)",9,1,n/a,14,2,1,8,3
"org.apache.pig.builtin.OrcStorage.setStoreFuncUDFContextSignature(String)",0,5,n/a,4,0,1,1,1
"org.apache.pig.builtin.OrcStorage.setStoreLocation(String,Job)",24,7,n/a,37,2,2,19,10
"org.apache.pig.builtin.OrcStorage.setUDFContextSignature(String)",0,15,n/a,4,0,1,1,1
"org.apache.pig.builtin.OutputSchema.value()",n/a,5,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.builtin.ParquetLoader.ParquetLoader()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.ParquetLoader.ParquetLoader(String)",6,1,n/a,10,1,1,3,2
"org.apache.pig.builtin.ParquetLoader.getFeatures()",2,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ParquetLoader.init(LoadMetadata)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.ParquetLoader.pushProjection(RequiredFieldList)",2,3,n/a,5,0,1,1,1
"org.apache.pig.builtin.ParquetLoader.setLocation(String,Job)",2,17,n/a,5,0,2,2,1
"org.apache.pig.builtin.ParquetStorer.ParquetStorer()",6,0,n/a,10,1,0,3,2
"org.apache.pig.builtin.ParquetStorer.init(StoreMetadata)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.ParquetStorer.setStoreLocation(String,Job)",2,8,n/a,8,0,2,2,1
"org.apache.pig.builtin.PigStorage.PigStorage()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.PigStorage.PigStorage(String)",1,0,n/a,11,0,1,1,1
"org.apache.pig.builtin.PigStorage.PigStorage(String,String)",17,2,n/a,45,3,2,20,5
"org.apache.pig.builtin.PigStorage.addTupleValue(ArrayList<Object>,byte[],int,int)",2,2,n/a,3,0,4,1,1
"org.apache.pig.builtin.PigStorage.applySchema(Tuple)",19,1,n/a,56,4,1,35,17
"org.apache.pig.builtin.PigStorage.checkSchema(ResourceSchema)",0,3,n/a,3,0,1,0,1
"org.apache.pig.builtin.PigStorage.cleanupOnFailure(String,Job)",1,3,n/a,5,0,2,1,1
"org.apache.pig.builtin.PigStorage.cleanupOnSuccess(String,Job)",0,3,n/a,5,0,2,0,1
"org.apache.pig.builtin.PigStorage.cleanupOutput(POStore,Job)",6,2,n/a,14,1,2,9,3
"org.apache.pig.builtin.PigStorage.equals(Object)",1,0,n/a,7,0,1,3,2
"org.apache.pig.builtin.PigStorage.equals(PigStorage)",0,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.PigStorage.getFeatures()",1,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.PigStorage.getInputFormat()",4,8,n/a,8,1,0,3,3
"org.apache.pig.builtin.PigStorage.getNext()",21,22,n/a,47,3,0,34,17
"org.apache.pig.builtin.PigStorage.getOutputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.builtin.PigStorage.getPartitionKeys(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.builtin.PigStorage.getSchema(String,Job)",9,3,n/a,18,3,2,10,6
"org.apache.pig.builtin.PigStorage.getStatistics(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.builtin.PigStorage.hashCode()",0,0,n/a,4,0,0,1,1
"org.apache.pig.builtin.PigStorage.populateValidOptions()",12,1,n/a,15,0,0,13,1
"org.apache.pig.builtin.PigStorage.prepareToRead(RecordReader,PigSplit)",2,6,n/a,7,1,2,3,3
"org.apache.pig.builtin.PigStorage.prepareToWrite(RecordWriter)",0,5,n/a,4,0,1,1,1
"org.apache.pig.builtin.PigStorage.pushProjection(RequiredFieldList)",14,3,n/a,29,3,1,16,8
"org.apache.pig.builtin.PigStorage.putNext(Tuple)",2,4,n/a,8,1,1,3,2
"org.apache.pig.builtin.PigStorage.readField(byte[],int,int)",1,1,n/a,14,1,3,3,2
"org.apache.pig.builtin.PigStorage.relToAbsPathForStoreLocation(String,Path)",1,7,n/a,5,0,2,1,1
"org.apache.pig.builtin.PigStorage.setCompression(Path,Job)",9,1,n/a,12,1,2,8,4
"org.apache.pig.builtin.PigStorage.setLocation(String,Job)",1,16,n/a,6,0,2,2,1
"org.apache.pig.builtin.PigStorage.setPartitionFilter(Expression)",0,3,n/a,4,0,1,0,1
"org.apache.pig.builtin.PigStorage.setStoreFuncUDFContextSignature(String)",0,5,n/a,3,0,1,0,1
"org.apache.pig.builtin.PigStorage.setStoreLocation(String,Job)",15,7,n/a,17,2,2,9,3
"org.apache.pig.builtin.PigStorage.setUDFContextSignature(String)",0,15,n/a,4,0,1,1,1
"org.apache.pig.builtin.PigStorage.shouldOverwrite()",0,4,n/a,4,0,0,1,1
"org.apache.pig.builtin.PigStorage.storeSchema(ResourceSchema,String,Job)",4,2,n/a,11,1,3,6,2
"org.apache.pig.builtin.PigStorage.storeStatistics(ResourceStatistics,String,Job)",0,1,n/a,4,0,3,0,1
"org.apache.pig.builtin.PigStreaming.PigStreaming()",1,3,n/a,6,0,0,1,1
"org.apache.pig.builtin.PigStreaming.PigStreaming(String)",2,0,n/a,11,0,1,2,1
"org.apache.pig.builtin.PigStreaming.deserialize(byte[],int,int)",1,2,n/a,4,0,3,1,1
"org.apache.pig.builtin.PigStreaming.getLoadCaster()",1,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.PigStreaming.serializeToBytes(Tuple)",6,2,n/a,16,2,1,11,3
"org.apache.pig.builtin.PluckTuple.PluckTuple(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.PluckTuple.PluckTuple(String,String)",2,1,n/a,5,0,2,3,1
"org.apache.pig.builtin.PluckTuple.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.PluckTuple.exec(Tuple)",16,7,n/a,28,3,1,21,11
"org.apache.pig.builtin.PluckTuple.outputSchema(Schema)",20,2,n/a,38,3,1,26,14
"org.apache.pig.builtin.RANDOM.RANDOM()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.RANDOM.RANDOM(String)",2,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.RANDOM.exec(Tuple)",1,7,n/a,4,0,1,1,1
"org.apache.pig.builtin.RANDOM.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.REGEX_EXTRACT.REGEX_EXTRACT()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.REGEX_EXTRACT.REGEX_EXTRACT(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.REGEX_EXTRACT.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.REGEX_EXTRACT.exec(Tuple)",19,7,n/a,37,3,1,21,11
"org.apache.pig.builtin.REGEX_EXTRACT.getArgToFuncMapping()",12,2,n/a,10,0,0,7,1
"org.apache.pig.builtin.REGEX_EXTRACT.outputSchema(Schema)",6,2,n/a,8,1,1,3,2
"org.apache.pig.builtin.REGEX_EXTRACT_ALL.REGEX_EXTRACT_ALL()",0,0,n/a,1,0,0,0,1
"org.apache.pig.builtin.REGEX_EXTRACT_ALL.REGEX_EXTRACT_ALL(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.REGEX_EXTRACT_ALL.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.REGEX_EXTRACT_ALL.exec(Tuple)",19,7,n/a,32,3,1,23,11
"org.apache.pig.builtin.REGEX_EXTRACT_ALL.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.REGEX_EXTRACT_ALL.outputSchema(Schema)",6,2,n/a,9,1,1,3,2
"org.apache.pig.builtin.REPLACE.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.REPLACE.exec(Tuple)",7,7,n/a,19,1,1,9,4
"org.apache.pig.builtin.REPLACE.getArgToFuncMapping()",12,2,n/a,13,0,0,7,1
"org.apache.pig.builtin.REPLACE.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.ROUND.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ROUND.exec(Tuple)",8,7,n/a,20,1,1,8,6
"org.apache.pig.builtin.ROUND.getArgToFuncMapping()",17,2,n/a,11,0,0,5,1
"org.apache.pig.builtin.ROUND.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.ROUND_TO.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ROUND_TO.exec(Tuple)",15,7,n/a,25,1,1,14,7
"org.apache.pig.builtin.ROUND_TO.getArgToFuncMapping()",57,2,n/a,35,0,0,29,1
"org.apache.pig.builtin.ROUND_TO.outputSchema(Schema)",6,2,n/a,5,0,1,1,1
"org.apache.pig.builtin.RTRIM.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.RTRIM.exec(Tuple)",6,7,n/a,15,1,1,11,6
"org.apache.pig.builtin.RTRIM.getArgToFuncMapping()",7,2,n/a,9,0,0,3,1
"org.apache.pig.builtin.RTRIM.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.RollupDimensions.RollupDimensions()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.RollupDimensions.RollupDimensions(String)",1,1,n/a,4,0,1,2,1
"org.apache.pig.builtin.RollupDimensions.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.RollupDimensions.exec(Tuple)",6,7,n/a,8,0,1,5,1
"org.apache.pig.builtin.RollupDimensions.iterativelyRollup(List<Tuple>,Tuple)",7,1,n/a,7,1,2,6,2
"org.apache.pig.builtin.RollupDimensions.outputSchema(Schema)",3,2,n/a,14,1,1,3,2
"org.apache.pig.builtin.RoundRobinPartitioner.getPartition(Writable,Writable,int)",0,0,n/a,5,0,3,2,1
"org.apache.pig.builtin.SIN.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.SINH.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.SIZE.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.SIZE.exec(Tuple)",6,7,n/a,13,1,1,7,4
"org.apache.pig.builtin.SIZE.getArgToFuncMapping()",56,2,n/a,35,0,0,29,1
"org.apache.pig.builtin.SIZE.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.SPRINTF.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.SPRINTF.exec(Tuple)",16,7,n/a,26,3,1,22,8
"org.apache.pig.builtin.SPRINTF.getSchemaType()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.SPRINTF.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.SQRT.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.STARTSWITH.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.STARTSWITH.exec(Tuple)",11,7,n/a,23,1,1,15,6
"org.apache.pig.builtin.STARTSWITH.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.STARTSWITH.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.STRSPLIT.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.STRSPLIT.exec(Tuple)",13,7,n/a,30,2,1,13,9
"org.apache.pig.builtin.STRSPLIT.getArgToFuncMapping()",27,2,n/a,19,0,0,13,1
"org.apache.pig.builtin.STRSPLIT.outputSchema(Schema)",2,2,n/a,8,0,1,1,1
"org.apache.pig.builtin.STRSPLITTOBAG.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.STRSPLITTOBAG.exec(Tuple)",15,7,n/a,38,2,1,18,10
"org.apache.pig.builtin.STRSPLITTOBAG.getArgToFuncMapping()",27,2,n/a,16,0,0,13,1
"org.apache.pig.builtin.STRSPLITTOBAG.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.SUBSTRING.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.SUBSTRING.exec(Tuple)",14,7,n/a,27,1,1,14,6
"org.apache.pig.builtin.SUBSTRING.getArgToFuncMapping()",12,2,n/a,13,0,0,7,1
"org.apache.pig.builtin.SUBSTRING.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.SUBTRACT.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.SUBTRACT.classNameOf(Object)",2,1,n/a,3,0,1,1,2
"org.apache.pig.builtin.SUBTRACT.exec(Tuple)",8,7,n/a,14,1,1,5,2
"org.apache.pig.builtin.SUBTRACT.subtract(DataBag,DataBag)",8,1,n/a,15,1,2,8,3
"org.apache.pig.builtin.SUBTRACT.toDataBag(Object)",5,2,n/a,9,1,1,5,3
"org.apache.pig.builtin.SUBTRACT.toSet(DataBag)",5,1,n/a,8,1,1,5,2
"org.apache.pig.builtin.SUM.Final.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.SUM.Intermediate.getOp()",0,28,n/a,4,0,0,1,1
"org.apache.pig.builtin.SUM.SUM()",1,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.SUM.getArgToFuncMapping()",30,2,n/a,19,0,0,9,1
"org.apache.pig.builtin.SecondsBetween.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.SecondsBetween.exec(Tuple)",7,7,n/a,12,1,1,5,5
"org.apache.pig.builtin.SecondsBetween.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.SecondsBetween.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.StringConcat.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.StringConcat.exec(Tuple)",11,7,n/a,20,2,1,15,7
"org.apache.pig.builtin.StringConcat.getSchemaType()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.StringConcat.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.StringMax.Final.exec(Tuple)",4,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.StringMax.Initial.exec(Tuple)",10,7,n/a,20,2,1,11,4
"org.apache.pig.builtin.StringMax.Intermediate.exec(Tuple)",5,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.StringMax.accumulate(Tuple)",5,1,n/a,19,2,1,10,6
"org.apache.pig.builtin.StringMax.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.StringMax.exec(Tuple)",1,7,n/a,8,1,1,3,2
"org.apache.pig.builtin.StringMax.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.StringMax.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.StringMax.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.StringMax.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.StringMax.max(Tuple)",11,4,n/a,30,3,1,20,8
"org.apache.pig.builtin.StringMax.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.StringMin.Final.exec(Tuple)",4,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.StringMin.Initial.exec(Tuple)",10,7,n/a,20,2,1,11,4
"org.apache.pig.builtin.StringMin.Intermediate.exec(Tuple)",5,7,n/a,12,1,1,6,3
"org.apache.pig.builtin.StringMin.accumulate(Tuple)",5,1,n/a,19,2,1,10,6
"org.apache.pig.builtin.StringMin.cleanup()",0,2,n/a,4,0,0,1,1
"org.apache.pig.builtin.StringMin.exec(Tuple)",1,7,n/a,8,1,1,3,2
"org.apache.pig.builtin.StringMin.getFinal()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.StringMin.getInitial()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.StringMin.getIntermed()",1,3,n/a,3,0,0,1,1
"org.apache.pig.builtin.StringMin.getValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.StringMin.min(Tuple)",11,4,n/a,30,3,1,20,8
"org.apache.pig.builtin.StringMin.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.StringSize.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.StringSize.exec(Tuple)",6,7,n/a,13,1,1,7,4
"org.apache.pig.builtin.StringSize.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.SubtractDuration.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.SubtractDuration.exec(Tuple)",7,7,n/a,7,1,1,3,5
"org.apache.pig.builtin.SubtractDuration.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.SubtractDuration.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.TAN.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.TANH.compute(Double)",1,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.TOBAG.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.TOBAG.exec(Tuple)",10,7,n/a,21,3,1,13,4
"org.apache.pig.builtin.TOBAG.nullEquals(Schema,Schema)",1,1,n/a,9,2,2,5,3
"org.apache.pig.builtin.TOBAG.outputSchema(Schema)",8,2,n/a,38,4,1,18,8
"org.apache.pig.builtin.TOKENIZE.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.TOKENIZE.exec(Tuple)",16,7,n/a,37,3,1,26,9
"org.apache.pig.builtin.TOKENIZE.getArgToFuncMapping()",17,2,n/a,11,0,0,9,1
"org.apache.pig.builtin.TOKENIZE.outputSchema(Schema)",9,2,n/a,22,1,1,10,2
"org.apache.pig.builtin.TOMAP.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.TOMAP.exec(Tuple)",18,7,n/a,41,5,1,27,12
"org.apache.pig.builtin.TOMAP.outputSchema(Schema)",20,2,n/a,31,4,1,22,12
"org.apache.pig.builtin.TOP.Final.Final()",0,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.TOP.Final.Final(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.TOP.Final.exec(Tuple)",25,7,n/a,59,3,1,38,18
"org.apache.pig.builtin.TOP.Initial.Initial()",0,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.TOP.Initial.Initial(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.TOP.Initial.exec(Tuple)",11,7,n/a,26,2,1,17,6
"org.apache.pig.builtin.TOP.Intermed.Intermed()",0,0,n/a,3,0,0,1,1
"org.apache.pig.builtin.TOP.Intermed.Intermed(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.TOP.Intermed.exec(Tuple)",29,7,n/a,62,3,1,41,17
"org.apache.pig.builtin.TOP.TOP()",0,0,n/a,5,0,0,1,1
"org.apache.pig.builtin.TOP.TOP(String)",1,0,n/a,4,0,1,1,1
"org.apache.pig.builtin.TOP.TupleComparator.TupleComparator(int,boolean)",0,3,n/a,4,0,2,2,1
"org.apache.pig.builtin.TOP.TupleComparator.compare(Tuple,Tuple)",5,0,n/a,29,4,2,15,7
"org.apache.pig.builtin.TOP.accumulate(Tuple)",9,2,n/a,22,2,1,13,7
"org.apache.pig.builtin.TOP.cleanup()",0,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.TOP.decideSortOrder(String)",3,4,n/a,10,1,1,6,3
"org.apache.pig.builtin.TOP.getArgToFuncMapping()",13,2,n/a,16,0,0,8,1
"org.apache.pig.builtin.TOP.getFinal()",1,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.TOP.getInitial()",1,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.TOP.getIntermed()",1,3,n/a,4,0,0,1,1
"org.apache.pig.builtin.TOP.getValue()",9,2,n/a,24,4,0,14,7
"org.apache.pig.builtin.TOP.outputSchema(Schema)",3,2,n/a,11,2,1,5,3
"org.apache.pig.builtin.TOP.updateTop(PriorityQueue<Tuple>,int,DataBag)",6,5,n/a,9,1,3,6,3
"org.apache.pig.builtin.TOTUPLE.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.TOTUPLE.exec(Tuple)",0,7,n/a,4,0,1,1,1
"org.apache.pig.builtin.TOTUPLE.outputSchema(Schema)",10,2,n/a,14,2,1,8,3
"org.apache.pig.builtin.TRIM.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.TRIM.exec(Tuple)",6,7,n/a,15,1,1,11,6
"org.apache.pig.builtin.TRIM.getArgToFuncMapping()",7,2,n/a,9,0,0,3,1
"org.apache.pig.builtin.TRIM.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.TextLoader.bytesToBag(byte[],ResourceFieldSchema)",1,3,n/a,9,0,2,3,1
"org.apache.pig.builtin.TextLoader.bytesToBigDecimal(byte[])",1,3,n/a,6,0,1,3,1
"org.apache.pig.builtin.TextLoader.bytesToBigInteger(byte[])",1,3,n/a,6,0,1,3,1
"org.apache.pig.builtin.TextLoader.bytesToBoolean(byte[])",1,3,n/a,10,0,1,3,1
"org.apache.pig.builtin.TextLoader.bytesToCharArray(byte[])",1,3,n/a,10,0,1,1,1
"org.apache.pig.builtin.TextLoader.bytesToDateTime(byte[])",1,3,n/a,10,0,1,3,1
"org.apache.pig.builtin.TextLoader.bytesToDouble(byte[])",1,3,n/a,10,0,1,3,1
"org.apache.pig.builtin.TextLoader.bytesToFloat(byte[])",1,3,n/a,10,0,1,3,1
"org.apache.pig.builtin.TextLoader.bytesToInteger(byte[])",1,3,n/a,10,0,1,3,1
"org.apache.pig.builtin.TextLoader.bytesToLong(byte[])",1,4,n/a,10,0,1,3,1
"org.apache.pig.builtin.TextLoader.bytesToMap(byte[],ResourceFieldSchema)",1,3,n/a,6,0,2,3,1
"org.apache.pig.builtin.TextLoader.bytesToTuple(byte[],ResourceFieldSchema)",1,3,n/a,10,0,2,3,1
"org.apache.pig.builtin.TextLoader.getInputFormat()",4,8,n/a,8,1,0,3,3
"org.apache.pig.builtin.TextLoader.getLoadCaster()",0,7,n/a,4,0,0,1,1
"org.apache.pig.builtin.TextLoader.getNext()",7,22,n/a,16,2,0,8,3
"org.apache.pig.builtin.TextLoader.prepareToRead(RecordReader,PigSplit)",0,6,n/a,4,0,2,1,1
"org.apache.pig.builtin.TextLoader.setLocation(String,Job)",1,16,n/a,5,0,2,2,1
"org.apache.pig.builtin.TextLoader.toBytes(Boolean)",1,0,n/a,5,0,1,3,1
"org.apache.pig.builtin.TextLoader.toBytes(DataBag)",1,0,n/a,5,0,1,3,1
"org.apache.pig.builtin.TextLoader.toBytes(DateTime)",1,0,n/a,5,0,1,3,1
"org.apache.pig.builtin.TextLoader.toBytes(Double)",1,0,n/a,5,0,1,3,1
"org.apache.pig.builtin.TextLoader.toBytes(Float)",1,0,n/a,5,0,1,3,1
"org.apache.pig.builtin.TextLoader.toBytes(Integer)",1,0,n/a,5,0,1,3,1
"org.apache.pig.builtin.TextLoader.toBytes(Long)",1,0,n/a,5,0,1,3,1
"org.apache.pig.builtin.TextLoader.toBytes(Map<String, Object>)",1,0,n/a,5,0,1,3,1
"org.apache.pig.builtin.TextLoader.toBytes(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.TextLoader.toBytes(Tuple)",1,0,n/a,5,0,1,3,1
"org.apache.pig.builtin.ToDate.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ToDate.allowIso8601Space(String)",4,2,n/a,28,1,1,3,4
"org.apache.pig.builtin.ToDate.exec(Tuple)",5,7,n/a,6,1,1,3,4
"org.apache.pig.builtin.ToDate.extractDateTime(String)",2,6,n/a,3,0,1,1,1
"org.apache.pig.builtin.ToDate.extractDateTimeZone(String)",3,0,n/a,3,0,1,1,1
"org.apache.pig.builtin.ToDate.getArgToFuncMapping()",32,2,n/a,20,0,0,17,1
"org.apache.pig.builtin.ToDate.outputSchema(Schema)",6,2,n/a,5,0,1,1,1
"org.apache.pig.builtin.ToDate2ARGS.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ToDate2ARGS.exec(Tuple)",8,7,n/a,15,1,1,5,4
"org.apache.pig.builtin.ToDate3ARGS.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ToDate3ARGS.exec(Tuple)",14,7,n/a,10,1,1,5,4
"org.apache.pig.builtin.ToDateISO.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ToDateISO.exec(Tuple)",5,7,n/a,7,1,1,4,4
"org.apache.pig.builtin.ToMilliSeconds.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ToMilliSeconds.exec(Tuple)",4,7,n/a,9,1,1,4,4
"org.apache.pig.builtin.ToMilliSeconds.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.ToMilliSeconds.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.ToString.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ToString.exec(Tuple)",13,7,n/a,13,1,1,8,6
"org.apache.pig.builtin.ToString.getArgToFuncMapping()",17,2,n/a,12,0,0,9,1
"org.apache.pig.builtin.ToString.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.ToUnixTime.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.ToUnixTime.exec(Tuple)",4,7,n/a,9,1,1,4,4
"org.apache.pig.builtin.ToUnixTime.getArgToFuncMapping()",7,2,n/a,6,0,0,3,1
"org.apache.pig.builtin.ToUnixTime.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.TrevniStorage.TrevniStorage()",1,0,n/a,7,0,0,1,1
"org.apache.pig.builtin.TrevniStorage.TrevniStorage(String,String)",1,0,n/a,17,0,2,1,1
"org.apache.pig.builtin.TrevniStorage.getAvroSchema(Path[],Job)",21,1,n/a,30,2,2,18,6
"org.apache.pig.builtin.TrevniStorage.getInputFormat()",23,8,n/a,11,5,0,27,4
"org.apache.pig.builtin.TrevniStorage.getOutputFormat()",45,8,n/a,6,5,0,39,10
"org.apache.pig.builtin.TupleSize.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.TupleSize.exec(Tuple)",6,7,n/a,12,1,1,8,4
"org.apache.pig.builtin.TupleSize.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.UCFIRST.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.UCFIRST.exec(Tuple)",8,7,n/a,15,1,1,11,6
"org.apache.pig.builtin.UCFIRST.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.UPPER.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.UPPER.exec(Tuple)",10,7,n/a,24,1,1,10,6
"org.apache.pig.builtin.UPPER.getArgToFuncMapping()",7,2,n/a,9,0,0,3,1
"org.apache.pig.builtin.UPPER.outputSchema(Schema)",6,2,n/a,9,0,1,1,1
"org.apache.pig.builtin.UniqueID.exec(Tuple)",3,7,n/a,7,0,1,4,1
"org.apache.pig.builtin.UniqueID.outputSchema(Schema)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.Utf8StorageConverter()",0,5,n/a,2,0,0,0,1
"org.apache.pig.builtin.Utf8StorageConverter.bytesToBag(byte[],ResourceFieldSchema)",6,3,n/a,18,1,2,10,3
"org.apache.pig.builtin.Utf8StorageConverter.bytesToBigDecimal(byte[])",2,4,n/a,7,1,1,3,3
"org.apache.pig.builtin.Utf8StorageConverter.bytesToBigInteger(byte[])",2,4,n/a,7,1,1,3,3
"org.apache.pig.builtin.Utf8StorageConverter.bytesToBoolean(byte[])",3,4,n/a,13,1,1,8,4
"org.apache.pig.builtin.Utf8StorageConverter.bytesToCharArray(byte[])",1,5,n/a,6,0,1,3,2
"org.apache.pig.builtin.Utf8StorageConverter.bytesToDateTime(byte[])",5,4,n/a,16,1,1,7,3
"org.apache.pig.builtin.Utf8StorageConverter.bytesToDouble(byte[])",5,4,n/a,15,1,1,6,4
"org.apache.pig.builtin.Utf8StorageConverter.bytesToFloat(byte[])",6,4,n/a,21,1,1,10,7
"org.apache.pig.builtin.Utf8StorageConverter.bytesToInteger(byte[])",17,4,n/a,41,3,1,18,9
"org.apache.pig.builtin.Utf8StorageConverter.bytesToLong(byte[])",21,5,n/a,43,3,1,19,11
"org.apache.pig.builtin.Utf8StorageConverter.bytesToMap(byte[],ResourceFieldSchema)",6,3,n/a,19,1,2,10,3
"org.apache.pig.builtin.Utf8StorageConverter.bytesToObject(byte[],ResourceFieldSchema)",6,1,n/a,12,1,2,7,2
"org.apache.pig.builtin.Utf8StorageConverter.bytesToTuple(byte[],ResourceFieldSchema)",6,3,n/a,19,1,2,10,3
"org.apache.pig.builtin.Utf8StorageConverter.consumeBag(PushbackInputStream,ResourceFieldSchema)",12,2,n/a,30,3,2,22,11
"org.apache.pig.builtin.Utf8StorageConverter.consumeComplexType(PushbackInputStream,ResourceFieldSchema)",5,2,n/a,17,1,2,14,5
"org.apache.pig.builtin.Utf8StorageConverter.consumeMap(PushbackInputStream,ResourceFieldSchema)",35,2,n/a,63,3,2,46,28
"org.apache.pig.builtin.Utf8StorageConverter.consumeTuple(PushbackInputStream,ResourceFieldSchema)",44,3,n/a,87,5,2,59,29
"org.apache.pig.builtin.Utf8StorageConverter.findStartChar(char)",1,2,n/a,8,1,1,9,5
"org.apache.pig.builtin.Utf8StorageConverter.parseSimpleType(byte[],ResourceFieldSchema)",12,2,n/a,38,1,2,35,12
"org.apache.pig.builtin.Utf8StorageConverter.sanityCheckIntegerLong(String)",4,2,n/a,17,2,1,6,6
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(BigDecimal)",2,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(BigInteger)",2,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(Boolean)",2,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(DataBag)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(DataByteArray)",1,0,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(DateTime)",2,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(Double)",2,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(Float)",2,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(Integer)",2,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(Long)",2,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(Map<String, Object>)",2,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(String)",1,20,n/a,4,0,1,1,1
"org.apache.pig.builtin.Utf8StorageConverter.toBytes(Tuple)",2,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.VALUELIST.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.VALUELIST.exec(Tuple)",10,7,n/a,21,1,1,13,5
"org.apache.pig.builtin.VALUELIST.outputSchema(Schema)",13,2,n/a,35,2,1,22,7
"org.apache.pig.builtin.VALUESET.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.VALUESET.exec(Tuple)",14,7,n/a,26,2,1,17,6
"org.apache.pig.builtin.VALUESET.getInitialSetSize(Collection<Object>)",2,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.VALUESET.outputSchema(Schema)",13,2,n/a,36,2,1,22,7
"org.apache.pig.builtin.WeeksBetween.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.WeeksBetween.exec(Tuple)",7,7,n/a,12,1,1,5,5
"org.apache.pig.builtin.WeeksBetween.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.WeeksBetween.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.YearsBetween.allowCompileTimeCalculation()",0,1,n/a,4,0,0,1,1
"org.apache.pig.builtin.YearsBetween.exec(Tuple)",7,7,n/a,13,1,1,6,5
"org.apache.pig.builtin.YearsBetween.getArgToFuncMapping()",10,2,n/a,9,0,0,6,1
"org.apache.pig.builtin.YearsBetween.outputSchema(Schema)",6,2,n/a,4,0,1,1,1
"org.apache.pig.builtin.mock.Storage.Data.get(String)",4,1,n/a,11,1,1,3,2
"org.apache.pig.builtin.mock.Storage.Data.getSchema(String)",1,1,n/a,8,0,1,1,1
"org.apache.pig.builtin.mock.Storage.Data.set(String,Collection<Tuple>)",1,1,n/a,9,0,2,1,1
"org.apache.pig.builtin.mock.Storage.Data.set(String,Schema,Collection<Tuple>)",3,1,n/a,13,1,3,3,2
"org.apache.pig.builtin.mock.Storage.Data.set(String,Schema,Tuple...)",2,0,n/a,10,0,3,1,1
"org.apache.pig.builtin.mock.Storage.Data.set(String,String,Collection<Tuple>)",2,0,n/a,11,0,3,1,1
"org.apache.pig.builtin.mock.Storage.Data.set(String,String,Tuple...)",3,0,n/a,11,0,3,1,1
"org.apache.pig.builtin.mock.Storage.Data.set(String,Tuple...)",2,0,n/a,9,0,2,1,1
"org.apache.pig.builtin.mock.Storage.Data.setInternal(String,String,Collection<Tuple>)",5,2,n/a,21,2,3,9,4
"org.apache.pig.builtin.mock.Storage.Data.setSchema(String,Schema)",1,1,n/a,8,0,2,1,1
"org.apache.pig.builtin.mock.Storage.MockInputFormat.MockInputFormat(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.mock.Storage.MockInputFormat.createRecordReader(InputSplit,TaskAttemptContext)",1,0,n/a,5,0,2,1,1
"org.apache.pig.builtin.mock.Storage.MockInputFormat.getSplits(JobContext)",2,0,n/a,4,0,1,1,1
"org.apache.pig.builtin.mock.Storage.MockInputSplit.MockInputSplit()",0,0,n/a,4,0,0,0,1
"org.apache.pig.builtin.mock.Storage.MockInputSplit.MockInputSplit(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.builtin.mock.Storage.MockInputSplit.equals(Object)",0,0,n/a,4,0,1,1,1
"org.apache.pig.builtin.mock.Storage.MockInputSplit.getLength()",0,0,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.MockInputSplit.getLocations()",0,0,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.MockInputSplit.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.MockInputSplit.readFields(DataInput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.builtin.mock.Storage.MockInputSplit.write(DataOutput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.builtin.mock.Storage.MockOutputCommitter.abortTask(TaskAttemptContext)",0,0,n/a,3,0,1,0,1
"org.apache.pig.builtin.mock.Storage.MockOutputCommitter.commitTask(TaskAttemptContext)",0,0,n/a,3,0,1,0,1
"org.apache.pig.builtin.mock.Storage.MockOutputCommitter.needsTaskCommit(TaskAttemptContext)",0,0,n/a,4,0,1,1,1
"org.apache.pig.builtin.mock.Storage.MockOutputCommitter.setupJob(JobContext)",0,0,n/a,3,0,1,0,1
"org.apache.pig.builtin.mock.Storage.MockOutputCommitter.setupTask(TaskAttemptContext)",0,0,n/a,3,0,1,0,1
"org.apache.pig.builtin.mock.Storage.MockOutputFormat.checkOutputSpecs(JobContext)",0,0,n/a,3,0,1,0,1
"org.apache.pig.builtin.mock.Storage.MockOutputFormat.getOutputCommitter(TaskAttemptContext)",1,0,n/a,5,0,1,1,1
"org.apache.pig.builtin.mock.Storage.MockOutputFormat.getRecordWriter(TaskAttemptContext)",10,0,n/a,9,1,1,3,2
"org.apache.pig.builtin.mock.Storage.MockRecordReader.close()",0,0,n/a,3,0,0,0,1
"org.apache.pig.builtin.mock.Storage.MockRecordReader.getCurrentKey()",0,0,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.MockRecordReader.getCurrentValue()",0,0,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.MockRecordReader.getProgress()",0,0,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.MockRecordReader.initialize(InputSplit,TaskAttemptContext)",0,0,n/a,4,0,2,0,1
"org.apache.pig.builtin.mock.Storage.MockRecordReader.nextKeyValue()",0,0,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.MockRecordWriter.MockRecordWriter(String)",1,2,n/a,4,0,1,2,1
"org.apache.pig.builtin.mock.Storage.MockRecordWriter.close(TaskAttemptContext)",0,0,n/a,3,0,1,0,1
"org.apache.pig.builtin.mock.Storage.MockRecordWriter.write(Object,Object)",0,0,n/a,3,0,2,0,1
"org.apache.pig.builtin.mock.Storage.Parts.Parts(String)",1,1,n/a,4,0,1,2,1
"org.apache.pig.builtin.mock.Storage.Parts.getAll()",4,0,n/a,8,1,0,5,2
"org.apache.pig.builtin.mock.Storage.Parts.set(String,Collection<Tuple>)",2,1,n/a,5,1,2,2,2
"org.apache.pig.builtin.mock.Storage.bag(Tuple...)",2,0,n/a,7,0,1,1,1
"org.apache.pig.builtin.mock.Storage.checkSchema(ResourceSchema)",0,3,n/a,3,0,1,0,1
"org.apache.pig.builtin.mock.Storage.cleanupOnFailure(String,Job)",1,3,n/a,4,0,2,1,1
"org.apache.pig.builtin.mock.Storage.cleanupOnSuccess(String,Job)",1,3,n/a,4,0,2,1,1
"org.apache.pig.builtin.mock.Storage.getData(Job)",6,1,n/a,13,1,1,7,3
"org.apache.pig.builtin.mock.Storage.getInputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.getLoadCaster()",1,7,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.getNext()",3,22,n/a,7,1,0,3,3
"org.apache.pig.builtin.mock.Storage.getOutputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.builtin.mock.Storage.getPartitionKeys(String,Job)",1,4,n/a,5,0,2,2,1
"org.apache.pig.builtin.mock.Storage.getSchema(String,Job)",2,3,n/a,5,0,2,2,2
"org.apache.pig.builtin.mock.Storage.getStatistics(String,Job)",1,4,n/a,6,0,2,2,1
"org.apache.pig.builtin.mock.Storage.init(String,Job)",2,9,n/a,5,0,2,3,1
"org.apache.pig.builtin.mock.Storage.map(Object...)",5,0,n/a,26,2,1,14,7
"org.apache.pig.builtin.mock.Storage.prepareToRead(RecordReader,PigSplit)",0,6,n/a,3,0,2,0,1
"org.apache.pig.builtin.mock.Storage.prepareToWrite(RecordWriter)",1,5,n/a,5,0,1,2,1
"org.apache.pig.builtin.mock.Storage.putNext(Tuple)",3,4,n/a,4,0,1,1,1
"org.apache.pig.builtin.mock.Storage.relToAbsPathForStoreLocation(String,Path)",0,7,n/a,5,0,2,2,1
"org.apache.pig.builtin.mock.Storage.relativeToAbsolutePath(String,Path)",0,11,n/a,5,0,2,2,1
"org.apache.pig.builtin.mock.Storage.resetData(PigContext)",10,1,n/a,23,2,1,11,3
"org.apache.pig.builtin.mock.Storage.resetData(PigServer)",2,0,n/a,8,0,1,1,1
"org.apache.pig.builtin.mock.Storage.schema(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.builtin.mock.Storage.setLocation(String,Job)",3,16,n/a,5,0,2,2,1
"org.apache.pig.builtin.mock.Storage.setPartitionFilter(Expression)",0,3,n/a,3,0,1,0,1
"org.apache.pig.builtin.mock.Storage.setStoreFuncUDFContextSignature(String)",0,5,n/a,3,0,1,0,1
"org.apache.pig.builtin.mock.Storage.setStoreLocation(String,Job)",1,7,n/a,4,0,2,1,1
"org.apache.pig.builtin.mock.Storage.setUDFContextSignature(String)",1,15,n/a,4,0,1,1,1
"org.apache.pig.builtin.mock.Storage.storeSchema(ResourceSchema,String,Job)",3,2,n/a,6,0,3,2,1
"org.apache.pig.builtin.mock.Storage.storeStatistics(ResourceStatistics,String,Job)",1,1,n/a,5,0,3,1,1
"org.apache.pig.builtin.mock.Storage.tuple(Object...)",2,0,n/a,7,0,1,1,1
"org.apache.pig.classification.InterfaceAudience.InterfaceAudience()",0,0,n/a,1,0,0,0,1
"org.apache.pig.classification.InterfaceAudience.LimitedPrivate.value()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.AbstractTuple.equals(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.AbstractTuple.getType(int)",2,5,n/a,7,0,1,1,1
"org.apache.pig.data.AbstractTuple.isNull(int)",1,4,n/a,7,0,1,1,1
"org.apache.pig.data.AbstractTuple.iterator()",2,0,n/a,4,0,0,1,1
"org.apache.pig.data.AbstractTuple.reference(Tuple)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.AbstractTuple.toDelimitedString(String)",3,3,n/a,7,0,1,1,1
"org.apache.pig.data.AbstractTuple.toString()",1,1,n/a,4,0,0,1,1
"org.apache.pig.data.AccumulativeBag.AccumulativeBag(AccumulativeTupleBuffer,int)",0,2,n/a,4,0,2,2,1
"org.apache.pig.data.AccumulativeBag.add(Tuple)",1,93,n/a,3,0,1,1,1
"org.apache.pig.data.AccumulativeBag.addAll(DataBag)",1,6,n/a,3,0,1,1,1
"org.apache.pig.data.AccumulativeBag.clear()",1,7,n/a,3,0,0,1,1
"org.apache.pig.data.AccumulativeBag.compareTo(Object)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.AccumulativeBag.equals(Object)",0,0,n/a,6,1,1,3,2
"org.apache.pig.data.AccumulativeBag.getMemorySize()",0,6,n/a,3,0,0,1,1
"org.apache.pig.data.AccumulativeBag.getTuplebuffer()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.AccumulativeBag.hashCode()",0,0,n/a,4,0,0,2,1
"org.apache.pig.data.AccumulativeBag.isDistinct()",0,4,n/a,3,0,0,1,1
"org.apache.pig.data.AccumulativeBag.isSorted()",0,4,n/a,3,0,0,1,1
"org.apache.pig.data.AccumulativeBag.iterator()",1,150,n/a,3,0,0,1,1
"org.apache.pig.data.AccumulativeBag.markStale(boolean)",0,0,n/a,2,0,1,0,1
"org.apache.pig.data.AccumulativeBag.readFields(DataInput)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.AccumulativeBag.size()",3,83,n/a,5,0,0,5,2
"org.apache.pig.data.AccumulativeBag.spill()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.AccumulativeBag.write(DataOutput)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.AmendableTuple.AmendableTuple(int,Object)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.AmendableTuple.getAmendKey()",0,0,n/a,3,0,0,1,1
"org.apache.pig.data.AmendableTuple.setAmendKey(Object)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.AppendableSchemaTuple.append(Object)",2,30,n/a,7,1,1,3,2
"org.apache.pig.data.AppendableSchemaTuple.appendedFieldsSize()",1,10,n/a,3,0,0,1,2
"org.apache.pig.data.AppendableSchemaTuple.compareTo(SchemaTuple<?>,boolean)",12,4,n/a,23,3,2,16,8
"org.apache.pig.data.AppendableSchemaTuple.compareToSpecific(T)",7,5,n/a,21,2,1,15,6
"org.apache.pig.data.AppendableSchemaTuple.get(int)",4,687,n/a,9,1,1,4,3
"org.apache.pig.data.AppendableSchemaTuple.getAppendedField(int)",2,5,n/a,3,0,1,1,2
"org.apache.pig.data.AppendableSchemaTuple.getAppendedFieldType(int)",1,1,n/a,3,0,1,1,2
"org.apache.pig.data.AppendableSchemaTuple.getAppendedFields()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.AppendableSchemaTuple.getMemorySize()",3,15,n/a,7,0,0,1,1
"org.apache.pig.data.AppendableSchemaTuple.getType(int)",4,6,n/a,9,1,1,4,3
"org.apache.pig.data.AppendableSchemaTuple.getTypeAwareBase(int,String)",4,1,n/a,9,1,2,4,3
"org.apache.pig.data.AppendableSchemaTuple.hashCode()",2,1,n/a,12,2,0,7,4
"org.apache.pig.data.AppendableSchemaTuple.isAppendedFieldNull(int)",2,2,n/a,3,0,1,1,2
"org.apache.pig.data.AppendableSchemaTuple.isAppendedFieldsNull()",1,3,n/a,3,0,0,1,1
"org.apache.pig.data.AppendableSchemaTuple.isNull(int)",4,18,n/a,9,1,1,4,3
"org.apache.pig.data.AppendableSchemaTuple.readFields(DataInput)",6,0,n/a,9,1,1,5,2
"org.apache.pig.data.AppendableSchemaTuple.resetAppendedFields()",0,3,n/a,3,0,0,1,1
"org.apache.pig.data.AppendableSchemaTuple.set(List<Object>)",11,1,n/a,14,1,1,10,3
"org.apache.pig.data.AppendableSchemaTuple.set(SchemaTuple<?>,boolean)",6,3,n/a,7,1,2,6,2
"org.apache.pig.data.AppendableSchemaTuple.set(int,Object)",4,280,n/a,8,1,2,4,3
"org.apache.pig.data.AppendableSchemaTuple.setAppendedField(int,Object)",1,2,n/a,3,0,2,1,1
"org.apache.pig.data.AppendableSchemaTuple.setAppendedFields(Tuple)",0,2,n/a,3,0,1,1,1
"org.apache.pig.data.AppendableSchemaTuple.setSpecific(T)",4,2,n/a,5,0,1,3,1
"org.apache.pig.data.AppendableSchemaTuple.setTypeAwareBase(int,Object,String)",4,1,n/a,9,1,3,4,3
"org.apache.pig.data.AppendableSchemaTuple.size()",2,283,n/a,3,0,0,1,1
"org.apache.pig.data.AppendableSchemaTuple.writeElements(DataOutput)",7,2,n/a,8,1,1,5,2
"org.apache.pig.data.BagFactory.BagFactory()",1,1,n/a,6,0,0,1,1
"org.apache.pig.data.BagFactory.getInstance()",10,74,n/a,38,4,0,19,7
"org.apache.pig.data.BagFactory.newDefaultBag()",n/a,64,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.BagFactory.newDefaultBag(List<Tuple>)",n/a,5,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.BagFactory.newDistinctBag()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.BagFactory.newSortedBag(Comparator<Tuple>)",n/a,5,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.BagFactory.registerBag(DataBag)",1,0,n/a,13,0,1,1,1
"org.apache.pig.data.BagFactory.resetSelf()",0,0,n/a,7,0,0,1,1
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.BinInterSedesTupleRawComparator()",1,1,n/a,3,0,0,1,1
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.compare(WritableComparable,WritableComparable)",10,1,n/a,37,3,2,19,6
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.compare(byte[],int,int,byte[],int,int)",7,1,n/a,17,1,6,8,2
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.compareBinInterSedesBag(ByteBuffer,ByteBuffer,byte,byte)",19,1,n/a,25,1,4,19,3
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.compareBinInterSedesDatum(ByteBuffer,ByteBuffer,boolean[])",98,4,n/a,259,5,3,208,67
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.compareBinInterSedesGenericWritableComparable(ByteBuffer,ByteBuffer)",17,1,n/a,13,0,2,9,1
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.compareBinInterSedesMap(ByteBuffer,ByteBuffer,byte,byte)",19,1,n/a,26,1,4,19,3
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.compareBinSedesTuple(ByteBuffer,ByteBuffer)",20,1,n/a,55,5,2,31,13
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.compareDatum(Object,Object,boolean[])",8,3,n/a,35,4,3,26,18
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.getGeneralizedDataType(byte)",1,16,n/a,69,1,1,66,19
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.getUnsignedByte(ByteBuffer)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.getUnsignedShort(ByteBuffer)",2,1,n/a,4,0,1,1,1
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.hasComparedTupleNull()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.readInt(ByteBuffer,byte)",4,2,n/a,16,1,2,13,7
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.readLong(ByteBuffer,byte)",5,2,n/a,13,1,2,16,8
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.readSize(ByteBuffer)",2,2,n/a,8,0,1,1,1
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.readSize(ByteBuffer,byte)",4,15,n/a,48,1,2,40,15
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator.setConf(Configuration)",9,1,n/a,23,1,1,14,4
"org.apache.pig.data.BinInterSedes.addColsToTuple(DataInput,Tuple)",4,1,n/a,13,1,2,6,2
"org.apache.pig.data.BinInterSedes.getTupleRawComparatorClass()",0,1,n/a,4,0,0,1,1
"org.apache.pig.data.BinInterSedes.getTupleSize(DataInput,byte)",5,2,n/a,44,2,2,38,16
"org.apache.pig.data.BinInterSedes.isTupleByte(byte)",0,1,n/a,18,0,1,1,16
"org.apache.pig.data.BinInterSedes.readBag(DataInput,byte)",7,1,n/a,29,2,2,24,7
"org.apache.pig.data.BinInterSedes.readBigDecimal(DataInput)",2,1,n/a,3,0,1,1,1
"org.apache.pig.data.BinInterSedes.readBigInteger(DataInput)",2,1,n/a,3,0,1,1,1
"org.apache.pig.data.BinInterSedes.readBytes(DataInput,int)",2,0,n/a,5,0,2,3,1
"org.apache.pig.data.BinInterSedes.readDatum(DataInput)",2,27,n/a,11,0,1,2,1
"org.apache.pig.data.BinInterSedes.readDatum(DataInput,byte)",42,7,n/a,90,1,2,80,30
"org.apache.pig.data.BinInterSedes.readInternalMap(DataInput)",5,1,n/a,9,1,1,8,2
"org.apache.pig.data.BinInterSedes.readMap(DataInput,byte)",8,1,n/a,25,2,2,22,6
"org.apache.pig.data.BinInterSedes.readSchemaTuple(DataInput,byte)",7,2,n/a,12,1,2,16,5
"org.apache.pig.data.BinInterSedes.readTuple(DataInput)",2,3,n/a,3,0,1,1,1
"org.apache.pig.data.BinInterSedes.readTuple(DataInput,byte)",3,1,n/a,24,1,2,21,4
"org.apache.pig.data.BinInterSedes.readWritable(DataInput)",6,1,n/a,21,1,1,12,3
"org.apache.pig.data.BinInterSedes.writeBag(DataOutput,DataBag)",11,1,n/a,21,1,2,12,4
"org.apache.pig.data.BinInterSedes.writeBigDecimal(DataOutput,BigDecimal)",2,1,n/a,3,0,2,1,1
"org.apache.pig.data.BinInterSedes.writeBigInteger(DataOutput,BigInteger)",2,1,n/a,3,0,2,1,1
"org.apache.pig.data.BinInterSedes.writeDatum(DataOutput,Object)",2,11,n/a,11,0,2,2,1
"org.apache.pig.data.BinInterSedes.writeDatum(DataOutput,Object,byte)",61,12,n/a,118,3,3,101,35
"org.apache.pig.data.BinInterSedes.writeMap(DataOutput,Map<String, Object>)",15,1,n/a,19,1,2,14,4
"org.apache.pig.data.BinInterSedes.writeTuple(DataOutput,Tuple)",2,2,n/a,7,1,2,3,2
"org.apache.pig.data.BinSedesTuple.BinSedesTuple()",1,1,n/a,6,0,0,1,1
"org.apache.pig.data.BinSedesTuple.BinSedesTuple(List<Object>)",1,0,n/a,8,0,1,1,1
"org.apache.pig.data.BinSedesTuple.BinSedesTuple(List<Object>,int)",1,1,n/a,11,0,2,1,1
"org.apache.pig.data.BinSedesTuple.BinSedesTuple(int)",1,2,n/a,8,0,1,1,1
"org.apache.pig.data.BinSedesTuple.getComparatorClass()",2,1,n/a,3,0,0,1,1
"org.apache.pig.data.BinSedesTuple.readFields(DataInput)",2,0,n/a,6,0,1,2,1
"org.apache.pig.data.BinSedesTuple.write(DataOutput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.BinSedesTupleFactory.isFixedSize()",0,0,n/a,4,0,0,1,1
"org.apache.pig.data.BinSedesTupleFactory.newTuple()",1,25,n/a,4,0,0,1,1
"org.apache.pig.data.BinSedesTupleFactory.newTuple(List)",1,14,n/a,5,0,1,1,1
"org.apache.pig.data.BinSedesTupleFactory.newTuple(Object)",3,14,n/a,13,1,1,5,2
"org.apache.pig.data.BinSedesTupleFactory.newTuple(int)",1,95,n/a,4,0,1,1,1
"org.apache.pig.data.BinSedesTupleFactory.newTupleNoCopy(List)",1,9,n/a,5,0,1,1,1
"org.apache.pig.data.BinSedesTupleFactory.tupleClass()",0,5,n/a,4,0,0,1,1
"org.apache.pig.data.BinSedesTupleFactory.tupleRawComparatorClass()",1,2,n/a,4,0,0,1,1
"org.apache.pig.data.DataBag.add(Tuple)",n/a,93,10,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.DataBag.addAll(DataBag)",n/a,6,6,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.DataBag.clear()",n/a,7,7,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.DataBag.isDistinct()",n/a,4,11,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.DataBag.isSorted()",n/a,4,11,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.DataBag.iterator()",n/a,149,12,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.DataBag.markStale(boolean)",n/a,0,6,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.DataBag.size()",n/a,83,8,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.DataByteArray.DataByteArray()",0,3,n/a,6,0,0,0,1
"org.apache.pig.data.DataByteArray.DataByteArray(DataByteArray,DataByteArray)",4,2,n/a,19,1,2,9,6
"org.apache.pig.data.DataByteArray.DataByteArray(String)",2,1,n/a,13,1,1,3,2
"org.apache.pig.data.DataByteArray.DataByteArray(byte[])",0,15,n/a,8,0,1,1,1
"org.apache.pig.data.DataByteArray.DataByteArray(byte[],int,int)",1,7,n/a,10,0,3,1,1
"org.apache.pig.data.DataByteArray.append(DataByteArray)",2,2,n/a,9,0,1,2,3
"org.apache.pig.data.DataByteArray.append(String)",4,0,n/a,9,1,1,4,2
"org.apache.pig.data.DataByteArray.append(byte[])",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.DataByteArray.append(byte[],int,int)",3,2,n/a,11,1,3,8,4
"org.apache.pig.data.DataByteArray.compare(byte[],byte[])",1,4,n/a,4,0,2,1,1
"org.apache.pig.data.DataByteArray.compareTo(Object)",2,4,n/a,17,1,1,4,2
"org.apache.pig.data.DataByteArray.equals(Object)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.DataByteArray.get()",0,52,n/a,8,0,0,1,1
"org.apache.pig.data.DataByteArray.hashCode()",1,1,n/a,4,0,0,1,1
"org.apache.pig.data.DataByteArray.hashCode(byte[])",1,2,n/a,3,0,1,1,1
"org.apache.pig.data.DataByteArray.set(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.data.DataByteArray.set(byte[])",0,4,n/a,9,0,1,1,1
"org.apache.pig.data.DataByteArray.size()",0,6,n/a,7,0,0,1,1
"org.apache.pig.data.DataByteArray.toString()",1,15,n/a,13,1,0,4,2
"org.apache.pig.data.DataReaderWriter.bytesToBag(DataInput)",4,1,n/a,13,2,1,10,3
"org.apache.pig.data.DataReaderWriter.bytesToBigCharArray(DataInput)",3,1,n/a,6,0,1,4,1
"org.apache.pig.data.DataReaderWriter.bytesToCharArray(DataInput)",3,1,n/a,6,0,1,4,1
"org.apache.pig.data.DataReaderWriter.bytesToInternalMap(DataInput)",5,1,n/a,9,1,1,8,2
"org.apache.pig.data.DataReaderWriter.bytesToMap(DataInput)",5,1,n/a,9,1,1,8,2
"org.apache.pig.data.DataReaderWriter.bytesToTuple(DataInput)",5,1,n/a,18,1,1,9,3
"org.apache.pig.data.DataReaderWriter.bytesToWritable(DataInput)",6,1,n/a,22,1,1,12,3
"org.apache.pig.data.DataReaderWriter.readDatum(DataInput)",2,12,n/a,5,0,1,2,1
"org.apache.pig.data.DataReaderWriter.readDatum(DataInput,byte)",34,2,n/a,51,2,2,46,20
"org.apache.pig.data.DataReaderWriter.writeDatum(DataOutput,Object)",80,21,n/a,129,3,2,110,24
"org.apache.pig.data.DataType.castable(byte,byte)",6,1,n/a,32,1,2,11,11
"org.apache.pig.data.DataType.compare(Object,Object)",3,24,n/a,18,0,2,3,1
"org.apache.pig.data.DataType.compare(Object,Object,byte,byte)",32,4,n/a,103,7,4,68,29
"org.apache.pig.data.DataType.determineFieldSchema(Object)",7,2,n/a,20,1,1,10,3
"org.apache.pig.data.DataType.determineFieldSchema(ResourceFieldSchema)",8,0,n/a,17,1,1,7,3
"org.apache.pig.data.DataType.determineFieldSchema(byte,Iterator,long,Class)",33,2,n/a,85,5,4,56,14
"org.apache.pig.data.DataType.equalByteArrays(byte[],byte[])",0,0,n/a,25,2,2,12,8
"org.apache.pig.data.DataType.extractTypeFromClass(Type)",10,2,n/a,31,2,1,26,9
"org.apache.pig.data.DataType.findType(Object)",0,70,n/a,44,1,1,35,18
"org.apache.pig.data.DataType.findType(Type)",3,70,n/a,48,2,1,33,16
"org.apache.pig.data.DataType.findTypeByName(String)",17,0,n/a,26,0,1,37,19
"org.apache.pig.data.DataType.findTypeClass(byte)",1,2,n/a,23,1,1,39,20
"org.apache.pig.data.DataType.findTypeName(Object)",2,18,n/a,8,0,1,1,1
"org.apache.pig.data.DataType.findTypeName(byte)",0,124,n/a,28,1,1,39,20
"org.apache.pig.data.DataType.genAllTypeNames()",0,2,n/a,14,0,0,2,1
"org.apache.pig.data.DataType.genAllTypes()",0,3,n/a,12,0,0,2,1
"org.apache.pig.data.DataType.genNameToTypeMap()",4,0,n/a,13,1,0,8,2
"org.apache.pig.data.DataType.genTypeToNameMap()",4,5,n/a,13,1,0,8,2
"org.apache.pig.data.DataType.isAtomic(Object)",2,0,n/a,9,0,1,1,1
"org.apache.pig.data.DataType.isAtomic(byte)",0,6,n/a,21,0,1,1,13
"org.apache.pig.data.DataType.isComplex(Object)",2,0,n/a,8,0,1,1,1
"org.apache.pig.data.DataType.isComplex(byte)",0,4,n/a,9,0,1,1,4
"org.apache.pig.data.DataType.isNumberType(byte)",0,28,n/a,16,1,1,15,8
"org.apache.pig.data.DataType.isSchemaType(Object)",2,0,n/a,8,0,1,1,1
"org.apache.pig.data.DataType.isSchemaType(byte)",0,21,n/a,8,0,1,1,3
"org.apache.pig.data.DataType.isUsableType(byte)",0,6,n/a,13,1,1,9,5
"org.apache.pig.data.DataType.mapToString(Map<String, Object>)",12,3,n/a,25,2,1,14,4
"org.apache.pig.data.DataType.mergeType(byte,byte)",4,6,n/a,32,1,2,11,9
"org.apache.pig.data.DataType.numTypes()",1,0,n/a,8,0,0,2,1
"org.apache.pig.data.DataType.spillTupleContents(Tuple,String)",10,0,n/a,11,1,2,7,2
"org.apache.pig.data.DataType.toBag(Object)",3,0,n/a,28,2,1,11,4
"org.apache.pig.data.DataType.toBigDecimal(Object)",2,0,n/a,3,0,1,1,1
"org.apache.pig.data.DataType.toBigDecimal(Object,byte)",18,3,n/a,51,2,2,42,18
"org.apache.pig.data.DataType.toBigInteger(Object)",2,0,n/a,3,0,1,1,1
"org.apache.pig.data.DataType.toBigInteger(Object,byte)",18,3,n/a,51,2,2,42,18
"org.apache.pig.data.DataType.toBoolean(Object)",2,0,n/a,3,0,1,1,1
"org.apache.pig.data.DataType.toBoolean(Object,byte)",23,3,n/a,78,3,2,51,21
"org.apache.pig.data.DataType.toBytes(Object)",2,2,n/a,3,0,1,1,1
"org.apache.pig.data.DataType.toBytes(Object,byte)",16,3,n/a,36,1,2,30,12
"org.apache.pig.data.DataType.toDateTime(Object)",2,2,n/a,3,0,1,1,1
"org.apache.pig.data.DataType.toDateTime(Object,byte)",19,3,n/a,65,2,2,41,16
"org.apache.pig.data.DataType.toDouble(Object)",2,3,n/a,16,0,1,1,1
"org.apache.pig.data.DataType.toDouble(Object,byte)",23,5,n/a,63,2,2,42,18
"org.apache.pig.data.DataType.toFloat(Object)",2,0,n/a,16,0,1,1,1
"org.apache.pig.data.DataType.toFloat(Object,byte)",23,5,n/a,63,2,2,42,18
"org.apache.pig.data.DataType.toInteger(Object)",2,6,n/a,16,0,1,1,1
"org.apache.pig.data.DataType.toInteger(Object,byte)",25,5,n/a,68,3,2,45,19
"org.apache.pig.data.DataType.toLong(Object)",2,1,n/a,16,0,1,1,1
"org.apache.pig.data.DataType.toLong(Object,byte)",23,5,n/a,68,3,2,45,19
"org.apache.pig.data.DataType.toMap(Object)",3,0,n/a,29,2,1,11,5
"org.apache.pig.data.DataType.toString(Object)",2,9,n/a,15,0,1,1,1
"org.apache.pig.data.DataType.toString(Object,byte)",13,5,n/a,59,2,2,40,17
"org.apache.pig.data.DataType.toTuple(Object)",3,0,n/a,28,2,1,11,4
"org.apache.pig.data.DefaultAbstractBag.add(Tuple)",2,95,n/a,12,1,1,4,1
"org.apache.pig.data.DefaultAbstractBag.addAll(Collection<Tuple>)",1,2,n/a,3,0,1,1,1
"org.apache.pig.data.DefaultAbstractBag.addAll(DataBag)",1,6,n/a,4,0,1,1,1
"org.apache.pig.data.DefaultAbstractBag.addAll(Iterable<Tuple>)",1,2,n/a,12,2,1,3,2
"org.apache.pig.data.DefaultAbstractBag.clear()",7,8,n/a,23,3,0,13,4
"org.apache.pig.data.DefaultAbstractBag.compareTo(Object)",27,1,n/a,50,2,1,33,14
"org.apache.pig.data.DefaultAbstractBag.equals(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.DefaultAbstractBag.getMemorySize()",4,7,n/a,26,2,0,11,6
"org.apache.pig.data.DefaultAbstractBag.getSpillFile()",21,9,n/a,41,3,0,17,5
"org.apache.pig.data.DefaultAbstractBag.hashCode()",4,0,n/a,10,1,0,5,2
"org.apache.pig.data.DefaultAbstractBag.incSpillCount(Enum)",1,5,n/a,4,0,1,1,1
"org.apache.pig.data.DefaultAbstractBag.incSpillCount(Enum,long)",6,3,n/a,9,1,2,4,3
"org.apache.pig.data.DefaultAbstractBag.markSpillableIfNecessary()",3,5,n/a,13,2,0,5,3
"org.apache.pig.data.DefaultAbstractBag.markStale(boolean)",0,0,n/a,8,0,1,0,1
"org.apache.pig.data.DefaultAbstractBag.readFields(DataInput)",3,0,n/a,17,2,1,8,3
"org.apache.pig.data.DefaultAbstractBag.reportProgress()",3,11,n/a,8,1,0,2,2
"org.apache.pig.data.DefaultAbstractBag.roundToEight(long)",0,3,n/a,8,0,1,1,1
"org.apache.pig.data.DefaultAbstractBag.sampleContents()",6,1,n/a,20,3,0,13,7
"org.apache.pig.data.DefaultAbstractBag.size()",0,86,n/a,7,0,0,1,1
"org.apache.pig.data.DefaultAbstractBag.toString()",1,0,n/a,6,0,0,1,1
"org.apache.pig.data.DefaultAbstractBag.totalSizeFromAvgTupleSize(long,int)",10,2,n/a,27,2,2,10,3
"org.apache.pig.data.DefaultAbstractBag.warn(String,Enum,Exception)",3,17,n/a,9,1,3,4,2
"org.apache.pig.data.DefaultAbstractBag.write(DataOutput)",1,0,n/a,9,0,1,1,1
"org.apache.pig.data.DefaultBagFactory.DefaultBagFactory()",1,1,n/a,3,0,0,1,1
"org.apache.pig.data.DefaultBagFactory.newDefaultBag()",1,64,n/a,8,0,0,2,1
"org.apache.pig.data.DefaultBagFactory.newDefaultBag(List<Tuple>)",1,5,n/a,11,0,1,2,1
"org.apache.pig.data.DefaultBagFactory.newDistinctBag()",1,2,n/a,8,0,0,2,1
"org.apache.pig.data.DefaultBagFactory.newSortedBag(Comparator<Tuple>)",1,5,n/a,10,0,1,2,1
"org.apache.pig.data.DefaultDataBag.DefaultDataBag()",1,1,n/a,3,0,0,1,1
"org.apache.pig.data.DefaultDataBag.DefaultDataBag(List<Tuple>)",2,1,n/a,11,0,1,3,1
"org.apache.pig.data.DefaultDataBag.DefaultDataBagIterator.DefaultDataBagIterator()",0,1,n/a,2,0,0,0,1
"org.apache.pig.data.DefaultDataBag.DefaultDataBagIterator.hasNext()",1,0,n/a,9,0,0,5,2
"org.apache.pig.data.DefaultDataBag.DefaultDataBagIterator.next()",16,1,n/a,66,3,0,29,9
"org.apache.pig.data.DefaultDataBag.DefaultDataBagIterator.readFromFile()",14,3,n/a,49,3,0,20,8
"org.apache.pig.data.DefaultDataBag.DefaultDataBagIterator.readFromMemory()",3,2,n/a,11,1,0,5,3
"org.apache.pig.data.DefaultDataBag.DefaultDataBagIterator.remove()",0,0,n/a,5,0,0,0,1
"org.apache.pig.data.DefaultDataBag.isDistinct()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.DefaultDataBag.isSorted()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.DefaultDataBag.iterator()",1,149,n/a,4,0,0,1,1
"org.apache.pig.data.DefaultDataBag.spill()",16,1,n/a,50,4,0,27,8
"org.apache.pig.data.DefaultTuple.DefaultTuple()",1,3,n/a,8,0,0,1,1
"org.apache.pig.data.DefaultTuple.DefaultTuple(List<Object>)",1,1,n/a,9,0,1,1,1
"org.apache.pig.data.DefaultTuple.DefaultTuple(List<Object>,int)",0,1,n/a,12,0,2,1,1
"org.apache.pig.data.DefaultTuple.DefaultTuple(int)",2,3,n/a,12,0,1,5,2
"org.apache.pig.data.DefaultTuple.DefaultTupleRawComparator.DefaultTupleRawComparator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.data.DefaultTuple.DefaultTupleRawComparator.compare(Object,Object)",8,0,n/a,21,1,2,13,8
"org.apache.pig.data.DefaultTuple.DefaultTupleRawComparator.compare(byte[],int,int,byte[],int,int)",3,0,n/a,11,0,6,4,1
"org.apache.pig.data.DefaultTuple.DefaultTupleRawComparator.compareDefaultTuple(ByteBuffer,ByteBuffer,boolean)",92,2,n/a,168,6,3,137,48
"org.apache.pig.data.DefaultTuple.DefaultTupleRawComparator.compareTuple(Tuple,Tuple)",6,2,n/a,25,4,2,19,10
"org.apache.pig.data.DefaultTuple.DefaultTupleRawComparator.getConf()",0,0,n/a,4,0,0,1,1
"org.apache.pig.data.DefaultTuple.DefaultTupleRawComparator.hasComparedTupleNull()",0,3,n/a,4,0,0,1,1
"org.apache.pig.data.DefaultTuple.DefaultTupleRawComparator.setConf(Configuration)",6,0,n/a,17,1,1,9,3
"org.apache.pig.data.DefaultTuple.append(Object)",1,29,n/a,12,0,1,1,1
"org.apache.pig.data.DefaultTuple.compareTo(Object)",7,0,n/a,27,5,1,18,7
"org.apache.pig.data.DefaultTuple.get(int)",1,681,n/a,13,0,1,1,1
"org.apache.pig.data.DefaultTuple.getAll()",0,31,n/a,9,0,0,1,1
"org.apache.pig.data.DefaultTuple.getComparatorClass()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.DefaultTuple.getMemorySize()",7,14,n/a,24,1,0,7,2
"org.apache.pig.data.DefaultTuple.hashCode()",4,0,n/a,11,2,0,7,3
"org.apache.pig.data.DefaultTuple.readFields(DataInput)",6,0,n/a,21,2,1,13,4
"org.apache.pig.data.DefaultTuple.set(int,Object)",1,279,n/a,14,0,2,1,1
"org.apache.pig.data.DefaultTuple.size()",1,276,n/a,9,0,0,1,1
"org.apache.pig.data.DefaultTuple.write(DataOutput)",5,0,n/a,9,1,1,7,2
"org.apache.pig.data.DefaultTupleFactory.tupleRawComparatorClass()",1,2,n/a,4,0,0,1,1
"org.apache.pig.data.DistinctDataBag.DistinctDataBag()",1,1,n/a,3,0,0,1,1
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.DistinctDataBagIterator()",3,1,n/a,14,2,0,6,2
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.TContainer.compareTo(TContainer)",1,0,n/a,5,0,1,1,1
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.TContainer.equals(Object)",1,0,n/a,7,0,1,3,2
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.TContainer.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.addToQueue(TContainer,int)",11,5,n/a,57,5,2,26,12
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.hasNext()",1,0,n/a,6,0,0,2,1
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.next()",21,1,n/a,77,3,0,35,13
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.preMerge()",34,1,n/a,98,5,0,44,12
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.readFromMemory()",3,2,n/a,10,1,0,5,3
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.readFromTree()",20,2,n/a,42,3,0,21,6
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.remove()",0,0,n/a,5,0,0,0,1
"org.apache.pig.data.DistinctDataBag.add(Tuple)",2,95,n/a,9,2,1,4,2
"org.apache.pig.data.DistinctDataBag.isDistinct()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.DistinctDataBag.isSorted()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.DistinctDataBag.iterator()",1,150,n/a,4,0,0,1,1
"org.apache.pig.data.DistinctDataBag.size()",4,86,n/a,19,2,0,9,4
"org.apache.pig.data.DistinctDataBag.spill()",21,1,n/a,65,4,0,38,11
"org.apache.pig.data.FieldIsNullException.FieldIsNullException()",0,0,n/a,2,0,0,0,1
"org.apache.pig.data.FieldIsNullException.FieldIsNullException(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.data.FileList.FileList()",0,0,n/a,2,0,0,0,1
"org.apache.pig.data.FileList.FileList(LinkedList<File>)",1,4,n/a,3,0,1,1,1
"org.apache.pig.data.FileList.FileList(int)",1,1,n/a,3,0,1,1,1
"org.apache.pig.data.FileList.finalize()",3,0,n/a,8,2,0,3,3
"org.apache.pig.data.InterSedes.addColsToTuple(DataInput,Tuple)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.InterSedes.getTupleRawComparatorClass()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.InterSedes.readDatum(DataInput)",n/a,11,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.InterSedes.readDatum(DataInput,byte)",n/a,6,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.InterSedes.writeDatum(DataOutput,Object)",n/a,3,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.InterSedes.writeDatum(DataOutput,Object,byte)",n/a,5,1,n/a,n/a,3,n/a,n/a
"org.apache.pig.data.InterSedesFactory.getInterSedesInstance()",1,12,n/a,6,1,0,3,2
"org.apache.pig.data.InternalCachedBag.CachedBagIterator.CachedBagIterator()",7,1,n/a,13,2,0,7,4
"org.apache.pig.data.InternalCachedBag.CachedBagIterator.hasNext()",5,1,n/a,28,2,0,17,7
"org.apache.pig.data.InternalCachedBag.CachedBagIterator.next()",3,0,n/a,14,2,0,9,4
"org.apache.pig.data.InternalCachedBag.CachedBagIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.pig.data.InternalCachedBag.InternalCachedBag()",1,1,n/a,3,0,0,1,1
"org.apache.pig.data.InternalCachedBag.InternalCachedBag(int)",1,7,n/a,3,0,1,1,1
"org.apache.pig.data.InternalCachedBag.InternalCachedBag(int,float)",2,3,n/a,4,0,2,2,1
"org.apache.pig.data.InternalCachedBag.add(Tuple)",15,95,n/a,34,4,1,18,8
"org.apache.pig.data.InternalCachedBag.addDone()",3,2,n/a,14,2,0,7,4
"org.apache.pig.data.InternalCachedBag.clear()",2,8,n/a,9,1,0,5,2
"org.apache.pig.data.InternalCachedBag.init()",2,1,n/a,5,0,0,3,1
"org.apache.pig.data.InternalCachedBag.isDistinct()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.InternalCachedBag.isSorted()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.InternalCachedBag.iterator()",2,149,n/a,9,1,0,3,2
"org.apache.pig.data.InternalCachedBag.spill()",1,1,n/a,5,0,0,1,1
"org.apache.pig.data.InternalCachedBag.updateSpillRecCounter()",1,2,n/a,4,0,0,2,1
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.DistinctDataBagIterator()",3,1,n/a,15,2,0,7,2
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.TContainer.compareTo(TContainer)",1,1,n/a,5,0,1,1,1
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.TContainer.equals(Object)",1,0,n/a,7,1,1,3,2
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.TContainer.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.addToQueue(TContainer,int)",12,4,n/a,53,4,2,26,12
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.hasNext()",1,0,n/a,6,0,0,2,1
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.next()",4,1,n/a,19,1,0,9,5
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.preMerge()",34,1,n/a,96,4,0,43,11
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.readFromMemory()",3,2,n/a,10,1,0,5,3
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.readFromTree()",20,2,n/a,42,3,0,21,6
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.remove()",0,0,n/a,5,0,0,0,1
"org.apache.pig.data.InternalDistinctBag.InternalDistinctBag()",1,0,n/a,3,0,0,1,1
"org.apache.pig.data.InternalDistinctBag.InternalDistinctBag(int)",1,2,n/a,3,0,1,1,1
"org.apache.pig.data.InternalDistinctBag.InternalDistinctBag(int,float)",6,2,n/a,13,3,2,8,4
"org.apache.pig.data.InternalDistinctBag.add(Tuple)",9,95,n/a,20,3,1,10,7
"org.apache.pig.data.InternalDistinctBag.init(int,double)",1,1,n/a,3,0,2,1,1
"org.apache.pig.data.InternalDistinctBag.isDistinct()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.InternalDistinctBag.isSorted()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.InternalDistinctBag.iterator()",1,150,n/a,4,0,0,1,1
"org.apache.pig.data.InternalDistinctBag.size()",4,86,n/a,15,2,0,8,4
"org.apache.pig.data.InternalDistinctBag.spill()",1,1,n/a,9,2,0,4,2
"org.apache.pig.data.InternalMap.InternalMap()",1,1,n/a,3,0,0,1,1
"org.apache.pig.data.InternalMap.InternalMap(int)",1,2,n/a,3,0,1,1,1
"org.apache.pig.data.InternalSortedBag.DefaultComparator.compare(Tuple,Tuple)",1,0,n/a,5,0,2,1,1
"org.apache.pig.data.InternalSortedBag.DefaultComparator.equals(Object)",0,0,n/a,4,0,1,1,1
"org.apache.pig.data.InternalSortedBag.DefaultComparator.hashCode()",0,0,n/a,4,0,0,1,1
"org.apache.pig.data.InternalSortedBag.InternalSortedBag()",1,0,n/a,3,0,0,1,1
"org.apache.pig.data.InternalSortedBag.InternalSortedBag(Comparator<Tuple>)",1,1,n/a,3,0,1,1,1
"org.apache.pig.data.InternalSortedBag.InternalSortedBag(int,Comparator<Tuple>)",1,2,n/a,3,0,2,1,1
"org.apache.pig.data.InternalSortedBag.InternalSortedBag(int,float,Comparator<Tuple>)",2,1,n/a,4,0,3,2,1
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.PQContainer.compareTo(PQContainer)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.PQContainer.equals(Object)",1,0,n/a,7,1,1,3,2
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.PQContainer.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.SortedDataBagIterator()",2,1,n/a,10,2,0,5,2
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.addToQueue(PQContainer,int)",12,4,n/a,38,3,2,21,8
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.hasNext()",1,0,n/a,6,0,0,2,1
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.next()",4,1,n/a,18,1,0,9,5
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.preMerge()",34,1,n/a,95,5,0,44,12
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.readFromMemory()",3,2,n/a,10,1,0,5,3
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.readFromPriorityQ()",19,2,n/a,43,3,0,20,6
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.remove()",0,0,n/a,5,0,0,0,1
"org.apache.pig.data.InternalSortedBag.add(Tuple)",9,95,n/a,20,2,1,10,7
"org.apache.pig.data.InternalSortedBag.init(int,double,Comparator<Tuple>)",2,1,n/a,8,0,3,2,2
"org.apache.pig.data.InternalSortedBag.isDistinct()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.InternalSortedBag.isSorted()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.InternalSortedBag.iterator()",1,149,n/a,4,0,0,1,1
"org.apache.pig.data.InternalSortedBag.proactive_spill(Comparator<Tuple>)",1,5,n/a,9,2,1,4,2
"org.apache.pig.data.InternalSortedBag.spill()",1,1,n/a,4,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.NonSpillableDataBag()",1,4,n/a,3,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.NonSpillableDataBag(List<Tuple>)",0,3,n/a,9,0,1,1,1
"org.apache.pig.data.NonSpillableDataBag.NonSpillableDataBag(int)",1,2,n/a,8,0,1,1,1
"org.apache.pig.data.NonSpillableDataBag.NonSpillableDataBagIterator.hasNext()",1,0,n/a,3,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.NonSpillableDataBagIterator.next()",2,0,n/a,6,0,0,3,2
"org.apache.pig.data.NonSpillableDataBag.NonSpillableDataBagIterator.remove()",1,0,n/a,4,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.add(Tuple)",1,94,n/a,4,0,1,1,1
"org.apache.pig.data.NonSpillableDataBag.addAll(DataBag)",1,6,n/a,6,1,1,2,2
"org.apache.pig.data.NonSpillableDataBag.clear()",1,7,n/a,4,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.compareTo(Object)",25,1,n/a,42,2,1,31,12
"org.apache.pig.data.NonSpillableDataBag.equals(Object)",1,0,n/a,7,0,1,1,1
"org.apache.pig.data.NonSpillableDataBag.getMemorySize()",0,6,n/a,4,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.hashCode()",1,0,n/a,3,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.isDistinct()",0,4,n/a,3,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.isSorted()",0,4,n/a,3,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.iterator()",1,152,n/a,3,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.markStale(boolean)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.NonSpillableDataBag.readFields(DataInput)",3,0,n/a,16,2,1,8,3
"org.apache.pig.data.NonSpillableDataBag.reportProgress()",3,1,n/a,8,1,0,2,2
"org.apache.pig.data.NonSpillableDataBag.size()",1,86,n/a,4,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.spill()",0,1,n/a,5,0,0,1,1
"org.apache.pig.data.NonSpillableDataBag.toString()",11,0,n/a,16,1,0,11,3
"org.apache.pig.data.NonSpillableDataBag.write(DataOutput)",6,0,n/a,17,1,1,5,2
"org.apache.pig.data.ReadOnceBag.ReadOnceBag(Packager,Iterator<NullableTuple>,PigNullableWritable)",0,1,n/a,14,0,3,3,1
"org.apache.pig.data.ReadOnceBag.ReadOnceBagIterator.hasNext()",1,0,n/a,7,0,0,1,1
"org.apache.pig.data.ReadOnceBag.ReadOnceBagIterator.next()",5,0,n/a,16,1,0,7,2
"org.apache.pig.data.ReadOnceBag.ReadOnceBagIterator.remove()",1,0,n/a,7,0,0,1,1
"org.apache.pig.data.ReadOnceBag.add(Tuple)",1,93,n/a,7,0,1,1,1
"org.apache.pig.data.ReadOnceBag.addAll(DataBag)",1,6,n/a,7,0,1,1,1
"org.apache.pig.data.ReadOnceBag.clear()",1,7,n/a,7,0,0,1,1
"org.apache.pig.data.ReadOnceBag.compareTo(Object)",1,0,n/a,9,0,1,1,1
"org.apache.pig.data.ReadOnceBag.equals(Object)",9,0,n/a,25,3,1,9,8
"org.apache.pig.data.ReadOnceBag.getMemorySize()",0,6,n/a,7,0,0,1,1
"org.apache.pig.data.ReadOnceBag.hashCode()",5,0,n/a,13,1,0,5,2
"org.apache.pig.data.ReadOnceBag.isDistinct()",1,4,n/a,7,0,0,1,1
"org.apache.pig.data.ReadOnceBag.isSorted()",1,4,n/a,7,0,0,1,1
"org.apache.pig.data.ReadOnceBag.iterator()",1,149,n/a,7,0,0,1,1
"org.apache.pig.data.ReadOnceBag.markStale(boolean)",1,0,n/a,7,0,1,1,1
"org.apache.pig.data.ReadOnceBag.readFields(DataInput)",1,0,n/a,7,0,1,1,1
"org.apache.pig.data.ReadOnceBag.size()",1,83,n/a,7,0,0,1,1
"org.apache.pig.data.ReadOnceBag.spill()",1,1,n/a,7,0,0,1,1
"org.apache.pig.data.ReadOnceBag.write(DataOutput)",1,0,n/a,9,0,1,3,1
"org.apache.pig.data.SchemaTuple.SchemaTupleQuickGenerator.make()",n/a,3,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.SchemaTuple.append(Object)",1,28,n/a,5,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(BigDecimal)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(BigInteger)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(DataBag)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(DateTime)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(Map<String, Object>)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(String)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(Tuple)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(boolean)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(byte[])",1,0,n/a,6,1,1,3,2
"org.apache.pig.data.SchemaTuple.box(double)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(float)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(int)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.box(long)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.compare(BigDecimal,BigDecimal)",1,5,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.compare(BigInteger,BigInteger)",1,5,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.compare(DataBag,DataBag)",1,1,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.compare(DateTime,DateTime)",1,5,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.compare(Map<String, Object>,Map<String, Object>)",1,5,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.compare(String,String)",1,5,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.compare(boolean,BigDecimal,boolean,BigDecimal)",1,5,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,BigInteger,boolean,BigInteger)",1,5,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,DataBag,boolean,DataBag)",1,1,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,DateTime,boolean,DateTime)",1,5,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,Map<String, Object>,boolean,Map<String, Object>)",1,5,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,SchemaTuple<?>,boolean,Object)",1,1,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,String,boolean,String)",1,5,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,boolean)",0,1,n/a,6,1,2,3,3
"org.apache.pig.data.SchemaTuple.compare(boolean,boolean,boolean,boolean)",1,1,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,byte[],boolean,byte[])",1,1,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,double,boolean,double)",1,1,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,float,boolean,float)",1,1,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,int,boolean,int)",1,1,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(boolean,long,boolean,long)",1,1,n/a,10,1,4,7,5
"org.apache.pig.data.SchemaTuple.compare(byte[],byte[])",1,1,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.compare(double,double)",0,1,n/a,3,0,2,1,3
"org.apache.pig.data.SchemaTuple.compare(float,float)",0,1,n/a,3,0,2,1,3
"org.apache.pig.data.SchemaTuple.compare(int,int)",0,3,n/a,3,0,2,1,3
"org.apache.pig.data.SchemaTuple.compare(long,long)",0,1,n/a,3,0,2,1,3
"org.apache.pig.data.SchemaTuple.compareElementAtPos(int,SchemaTuple<?>,int)",3,0,n/a,9,1,3,5,2
"org.apache.pig.data.SchemaTuple.compareNull(boolean,Tuple,int)",3,0,n/a,9,1,3,5,2
"org.apache.pig.data.SchemaTuple.compareNull(boolean,boolean)",0,1,n/a,10,1,2,7,5
"org.apache.pig.data.SchemaTuple.compareSize(Tuple)",3,2,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.compareTo(Object)",5,2,n/a,15,1,1,7,4
"org.apache.pig.data.SchemaTuple.compareTo(SchemaTuple<?>)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.compareTo(SchemaTuple<?>,boolean)",4,4,n/a,11,1,2,6,4
"org.apache.pig.data.SchemaTuple.compareTo(Tuple)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.compareTo(Tuple,boolean)",11,2,n/a,31,3,2,20,9
"org.apache.pig.data.SchemaTuple.compareToSpecific(T)",1,4,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,BigDecimal,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,BigInteger,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,DataBag,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,DateTime,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,Map<String, Object>,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,SchemaTuple<?>,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,String,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,boolean,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,byte[],SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,double,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,float,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,int,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.compareWithElementAtPos(boolean,long,SchemaTuple<?>,int)",4,0,n/a,11,1,4,7,2
"org.apache.pig.data.SchemaTuple.equals(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.errorIfNull(boolean,String)",1,13,n/a,5,1,2,2,2
"org.apache.pig.data.SchemaTuple.generatedCodeCompareTo(SchemaTuple<?>,boolean)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeCompareToSpecific(T)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetBigDecimal(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetBigInteger(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetBoolean(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetBytes(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetDataBag(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetDateTime(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetDouble(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetField(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetFloat(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetInt(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetLong(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetMap(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetString(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeGetTuple(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeHashCode()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeNullsArray()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeReadFields(DataInput,boolean[])",n/a,2,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSet(SchemaTuple<?>,boolean)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetBigDecimal(int,BigDecimal)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetBigInteger(int,BigInteger)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetBoolean(int,boolean)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetBytes(int,byte[])",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetDataBag(int,DataBag)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetDateTime(int,DateTime)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetDouble(int,double)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetField(int,Object)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetFloat(int,float)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetInt(int,int)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetIterator(Iterator<Object>)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetLong(int,long)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetMap(int,Map<String, Object>)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetSpecific(T)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetString(int,String)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSetTuple(int,Tuple)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeSize()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.SchemaTuple.generatedCodeWriteElements(DataOutput)",n/a,2,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.get(int)",1,687,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getAll()",6,31,n/a,13,2,0,8,3
"org.apache.pig.data.SchemaTuple.getBigDecimal(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getBigInteger(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getBoolean(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getBytes(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getDataBag(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getDateTime(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getDouble(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getFloat(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getGeneratedCodeFieldType(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.getGeneratedCodeMemorySize()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.SchemaTuple.getInt(int)",1,2,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getLong(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getMap(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getMemorySize()",1,15,n/a,9,0,0,1,1
"org.apache.pig.data.SchemaTuple.getQuickGenerator()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.SchemaTuple.getSchemaString()",2,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTuple.getSchemaTupleIdentifier()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.SchemaTuple.getString(int)",1,1,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getTuple(int)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getType(int)",1,6,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.getTypeAwareBase(int,String)",1,1,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.hashCode()",1,1,n/a,4,0,0,1,1
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,BigDecimal,boolean)",1,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,BigInteger,boolean)",1,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,DataBag,boolean)",1,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,DateTime,boolean)",1,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,Map<String, Object>,boolean)",1,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,String,boolean)",1,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,Tuple,boolean)",1,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,boolean,boolean)",0,0,n/a,3,0,3,1,3
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,byte[],boolean)",1,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,double,boolean)",1,0,n/a,4,0,3,2,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,float,boolean)",1,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,int,boolean)",0,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.hashCodePiece(int,long,boolean)",0,0,n/a,3,0,3,1,2
"org.apache.pig.data.SchemaTuple.isGeneratedCodeFieldNull(int)",n/a,1,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.isNull(int)",1,18,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.isSpecificSchemaTuple(Object)",n/a,4,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.SchemaTuple.read(DataInput,BigDecimal)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,BigInteger)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,DataBag)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,DateTime)",4,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,Map<String, Object>)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,String)",2,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,byte[])",2,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,double)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,float)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.read(DataInput,long)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.readFields(DataInput)",3,0,n/a,5,0,1,2,1
"org.apache.pig.data.SchemaTuple.reference(Tuple)",2,1,n/a,8,1,1,3,2
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,BigDecimal)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,BigInteger)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,DataBag)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,DateTime)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,Map<String, Object>)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,String)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,Tuple)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,boolean)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,byte[])",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,double)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,float)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,int)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.returnUnlessNull(boolean,long)",1,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.schemaSize()",n/a,15,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.SchemaTuple.set(List<Object>)",7,1,n/a,7,1,1,4,2
"org.apache.pig.data.SchemaTuple.set(SchemaTuple<?>)",1,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.set(SchemaTuple<?>,boolean)",1,3,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.set(Tuple)",1,3,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.set(Tuple,boolean)",5,1,n/a,12,2,2,6,4
"org.apache.pig.data.SchemaTuple.set(int,Object)",1,280,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setAndCatch(SchemaTuple<?>)",2,0,n/a,7,1,1,3,2
"org.apache.pig.data.SchemaTuple.setAndCatch(Tuple)",2,0,n/a,7,1,1,3,2
"org.apache.pig.data.SchemaTuple.setBigDecimal(int,BigDecimal)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setBigInteger(int,BigInteger)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setBoolean(int,boolean)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setBytes(int,byte[])",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setDataBag(int,DataBag)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setDateTime(int,DateTime)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setDouble(int,double)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setFloat(int,float)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setInt(int,int)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setLong(int,long)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setMap(int,Map<String, Object>)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setSpecific(T)",1,2,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.setString(int,String)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setTuple(int,Tuple)",1,0,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTuple.setTypeAwareBase(int,Object,String)",1,1,n/a,3,0,3,1,1
"org.apache.pig.data.SchemaTuple.size()",1,282,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTuple.staticSchemaGen(String)",5,0,n/a,11,2,1,6,3
"org.apache.pig.data.SchemaTuple.unbox(Boolean)",1,6,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unbox(DataBag)",0,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unbox(DataByteArray)",1,1,n/a,6,1,1,3,2
"org.apache.pig.data.SchemaTuple.unbox(DateTime)",0,6,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unbox(Double)",1,6,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unbox(Float)",1,6,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unbox(Integer)",1,6,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unbox(Long)",1,6,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unbox(Map<String, Object>)",0,6,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,BigDecimal)",0,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,BigInteger)",0,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,DataBag)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,DateTime)",0,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,Map<String, Object>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,String)",0,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,Tuple)",0,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,boolean)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,byte[])",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,double)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,float)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unbox(Object,long)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.unboxBigDecimal(Object)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxBigInteger(Object)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxBoolean(Object)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxBytes(Object)",1,0,n/a,4,0,1,2,2
"org.apache.pig.data.SchemaTuple.unboxDataBag(Object)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxDateTime(Object)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxDouble(Object)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxFloat(Object)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxInt(Object)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxLong(Object)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxMap(Object)",0,0,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxString(Object)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.unboxTuple(Object)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,BigDecimal)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,BigInteger)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,DataBag)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,DateTime)",5,0,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,Map<String, Object>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,SchemaTuple<?>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,String)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,boolean)",8,1,n/a,16,2,2,11,4
"org.apache.pig.data.SchemaTuple.write(DataOutput,byte[])",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,double)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,float)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,int)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.write(DataOutput,long)",1,0,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTuple.writeElements(DataOutput)",3,2,n/a,14,0,1,3,1
"org.apache.pig.data.SchemaTupleBackend.SchemaTupleBackend(Configuration,boolean)",11,1,n/a,28,2,2,14,4
"org.apache.pig.data.SchemaTupleBackend.copyAllFromDistributedCache()",16,1,n/a,28,3,0,19,5
"org.apache.pig.data.SchemaTupleBackend.copyAndResolve()",11,1,n/a,34,2,0,14,6
"org.apache.pig.data.SchemaTupleBackend.initialize(Configuration,PigContext)",3,5,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTupleBackend.initialize(Configuration,PigContext,boolean)",5,2,n/a,11,1,3,7,2
"org.apache.pig.data.SchemaTupleBackend.internalNewSchemaTupleFactory(Schema,boolean,GenContext)",3,1,n/a,12,0,3,1,1
"org.apache.pig.data.SchemaTupleBackend.internalNewSchemaTupleFactory(int)",2,1,n/a,14,1,1,4,2
"org.apache.pig.data.SchemaTupleBackend.newSchemaTupleFactory(Schema,boolean,GenContext)",2,7,n/a,8,1,3,3,2
"org.apache.pig.data.SchemaTupleBackend.newSchemaTupleFactory(Triple<SchemaKey, Boolean, GenContext>)",2,0,n/a,14,1,1,4,2
"org.apache.pig.data.SchemaTupleBackend.newSchemaTupleFactory(int)",2,1,n/a,8,1,1,3,2
"org.apache.pig.data.SchemaTupleBackend.reset()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleBackend.resolveClasses()",19,1,n/a,53,3,0,26,9
"org.apache.pig.data.SchemaTupleClassGenerator.CheckIfNullString.process(int,FieldSchema)",6,1,n/a,15,2,2,9,3
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToSpecificString.CompareToSpecificString(int,boolean)",1,1,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToSpecificString.end()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToSpecificString.prepare()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToSpecificString.process(int,FieldSchema)",4,1,n/a,9,0,2,4,1
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToString.CompareToString(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToString.end()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToString.prepare()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToString.process(int,FieldSchema)",4,1,n/a,7,0,2,4,1
"org.apache.pig.data.SchemaTupleClassGenerator.FieldString.FieldString(File,List<Queue<Integer>>,Schema,boolean)",1,1,n/a,6,0,4,4,1
"org.apache.pig.data.SchemaTupleClassGenerator.FieldString.codeDir()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.FieldString.end()",6,1,n/a,9,0,0,6,1
"org.apache.pig.data.SchemaTupleClassGenerator.FieldString.prepare()",3,1,n/a,10,1,0,5,2
"org.apache.pig.data.SchemaTupleClassGenerator.FieldString.process(int,FieldSchema)",12,1,n/a,21,3,2,11,7
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.GenContext(String,boolean,Class<?>)",0,5,n/a,5,0,3,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.getAnnotationCanonicalName()",1,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.key()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.shouldGenerate(Class)",1,1,n/a,10,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.shouldGenerate(Configuration)",2,1,n/a,13,1,1,4,2
"org.apache.pig.data.SchemaTupleClassGenerator.GeneralIsNullString.end()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.GeneralIsNullString.prepare()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.GeneralIsNullString.process(int,FieldSchema)",1,1,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenericGetString.end()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenericGetString.prepare()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenericGetString.process(int,FieldSchema)",1,1,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenericSetString.end()",4,1,n/a,7,0,0,4,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenericSetString.prepare()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.GenericSetString.process(int,FieldSchema)",7,1,n/a,10,0,2,7,1
"org.apache.pig.data.SchemaTupleClassGenerator.GetDummyString.process(int,FieldSchema)",18,1,n/a,22,1,2,45,15
"org.apache.pig.data.SchemaTupleClassGenerator.GetPosString.GetPosString(Queue<Integer>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.GetPosString.process(int,FieldSchema)",10,1,n/a,20,2,2,12,4
"org.apache.pig.data.SchemaTupleClassGenerator.GetSchemaTupleIdentifierString.GetSchemaTupleIdentifierString(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.GetSchemaTupleIdentifierString.end()",5,1,n/a,8,0,0,5,1
"org.apache.pig.data.SchemaTupleClassGenerator.GetTypeString.end()",4,1,n/a,7,0,0,4,1
"org.apache.pig.data.SchemaTupleClassGenerator.GetTypeString.prepare()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.GetTypeString.process(int,FieldSchema)",1,1,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.HashCode.end()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.HashCode.prepare()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.HashCode.process(int,FieldSchema)",1,1,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.IsSpecificSchemaTuple.IsSpecificSchemaTuple(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.IsSpecificSchemaTuple.prepare()",4,1,n/a,7,0,0,4,1
"org.apache.pig.data.SchemaTupleClassGenerator.ListSetString.end()",1,1,n/a,4,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.ListSetString.prepare()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.ListSetString.process(int,FieldSchema)",1,1,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.MemorySizeString.end()",3,1,n/a,7,0,0,4,1
"org.apache.pig.data.SchemaTupleClassGenerator.MemorySizeString.prepare()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.MemorySizeString.process(int,FieldSchema)",15,1,n/a,32,2,2,24,17
"org.apache.pig.data.SchemaTupleClassGenerator.ReadString.ReadString(Queue<Integer>,boolean)",1,1,n/a,4,0,2,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.ReadString.end()",3,1,n/a,12,2,0,7,3
"org.apache.pig.data.SchemaTupleClassGenerator.ReadString.prepare()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.ReadString.process(int,FieldSchema)",22,1,n/a,28,1,2,23,3
"org.apache.pig.data.SchemaTupleClassGenerator.SchemaSizeString.end()",5,1,n/a,8,0,0,5,1
"org.apache.pig.data.SchemaTupleClassGenerator.SchemaSizeString.process(int,FieldSchema)",0,1,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.SchemaTupleClassGenerator()",0,0,n/a,1,0,0,0,1
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleSpecificString.SetEqualToSchemaTupleSpecificString(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleSpecificString.end()",3,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleSpecificString.prepare()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleSpecificString.process(int,FieldSchema)",6,1,n/a,9,0,2,6,1
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleString.SetEqualToSchemaTupleString(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleString.end()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleString.prepare()",12,1,n/a,15,0,0,12,1
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleString.process(int,FieldSchema)",12,1,n/a,16,1,2,11,2
"org.apache.pig.data.SchemaTupleClassGenerator.SetNullString.process(int,FieldSchema)",8,1,n/a,17,2,2,11,3
"org.apache.pig.data.SchemaTupleClassGenerator.SetPosString.SetPosString(Queue<Integer>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.SetPosString.process(int,FieldSchema)",28,1,n/a,39,3,2,30,5
"org.apache.pig.data.SchemaTupleClassGenerator.SizeString.SizeString(boolean)",1,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.SizeString.end()",5,1,n/a,8,0,0,5,1
"org.apache.pig.data.SchemaTupleClassGenerator.SizeString.process(int,FieldSchema)",0,1,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareGetString.TypeAwareGetString(byte)",1,13,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareGetString.end()",6,1,n/a,7,0,0,4,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareGetString.prepare()",5,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareGetString.process(int,FieldSchema)",2,1,n/a,6,1,2,2,2
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareSetString.TypeAwareSetString(byte)",0,14,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareSetString.end()",4,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareSetString.name()",1,4,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareSetString.prepare()",5,1,n/a,6,0,0,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareSetString.process(int,FieldSchema)",2,1,n/a,5,0,2,2,2
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareSetString.properName()",2,3,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareSetString.thisType()",0,3,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.TypeInFunctionStringOut()",3,21,n/a,4,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.TypeInFunctionStringOut(boolean)",1,5,n/a,4,0,1,2,2
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.add(String)",5,220,n/a,5,1,1,2,2
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.addBreak()",1,27,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.end()",0,1,n/a,1,0,0,0,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.getContent()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isAppendable()",2,1,n/a,6,1,0,3,2
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isBag()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isBigDecimal()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isBigInteger()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isBoolean()",0,7,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isBytearray()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isDateTime()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isDouble()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isFloat()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isInt()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isLong()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isMap()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isObject()",1,0,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isPrimitive()",5,6,n/a,3,0,0,1,5
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isString()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.isTuple()",0,6,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.prepare()",0,1,n/a,1,0,0,0,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.prepareProcess(FieldSchema)",1,1,n/a,5,0,1,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.process(int,FieldSchema)",0,1,n/a,1,0,2,0,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.proper(byte)",4,2,n/a,7,1,1,6,3
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.spaces(int)",2,1,n/a,8,1,1,7,2
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.typeName()",1,4,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut.typeName(byte)",2,3,n/a,18,1,1,29,15
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOutFactory.TypeInFunctionStringOutFactory(Schema,int,boolean,String,File)",105,1,n/a,62,1,5,59,2
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOutFactory.end()",48,1,n/a,54,1,0,9,3
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOutFactory.process(FieldSchema)",1,1,n/a,4,0,1,2,2
"org.apache.pig.data.SchemaTupleClassGenerator.WriteNullsString.WriteNullsString(boolean)",1,1,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.WriteNullsString.end()",6,1,n/a,8,0,0,5,1
"org.apache.pig.data.SchemaTupleClassGenerator.WriteNullsString.prepare()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.WriteNullsString.process(int,FieldSchema)",0,1,n/a,4,0,2,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.WriteString.end()",3,1,n/a,12,2,0,7,3
"org.apache.pig.data.SchemaTupleClassGenerator.WriteString.prepare()",2,1,n/a,5,0,0,2,1
"org.apache.pig.data.SchemaTupleClassGenerator.WriteString.process(int,FieldSchema)",5,1,n/a,11,1,2,6,2
"org.apache.pig.data.SchemaTupleClassGenerator.compileCodeString(String,String,File)",8,1,n/a,18,0,3,6,1
"org.apache.pig.data.SchemaTupleClassGenerator.generateSchemaTuple(Schema,boolean,File,GenContext...)",2,1,n/a,5,0,4,3,1
"org.apache.pig.data.SchemaTupleClassGenerator.generateSchemaTuple(Schema,boolean,int,File,GenContext...)",10,1,n/a,18,1,5,8,2
"org.apache.pig.data.SchemaTupleClassGenerator.getNextGlobalClassIdentifier()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleClassGenerator.produceCodeString(Schema,boolean,int,String,File)",4,1,n/a,14,1,5,4,2
"org.apache.pig.data.SchemaTupleClassGenerator.resetGlobalClassIdentifier()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleFactory.SchemaTupleFactory(Class<SchemaTuple<?>>,SchemaTupleQuickGenerator<? extends SchemaTuple<?>>)",2,1,n/a,6,0,2,3,1
"org.apache.pig.data.SchemaTupleFactory.getInstance(Schema)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SchemaTupleFactory.getInstance(Schema,boolean)",1,1,n/a,3,0,2,1,1
"org.apache.pig.data.SchemaTupleFactory.getInstance(Schema,boolean,GenContext)",1,3,n/a,17,0,3,1,1
"org.apache.pig.data.SchemaTupleFactory.getInstance(int)",1,1,n/a,11,0,1,1,1
"org.apache.pig.data.SchemaTupleFactory.isFixedSize()",1,0,n/a,5,0,0,1,1
"org.apache.pig.data.SchemaTupleFactory.isGeneratable(Schema)",3,2,n/a,19,2,1,6,6
"org.apache.pig.data.SchemaTupleFactory.newTuple()",1,4,n/a,4,0,0,1,1
"org.apache.pig.data.SchemaTupleFactory.newTuple(int)",2,1,n/a,8,1,1,3,2
"org.apache.pig.data.SchemaTupleFactory.tupleClass()",0,0,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleFrontend.SchemaTupleFrontendGenHelper.SchemaTupleFrontendGenHelper(PigContext,Configuration)",4,1,n/a,8,0,2,5,1
"org.apache.pig.data.SchemaTupleFrontend.SchemaTupleFrontendGenHelper.generateAll(Map<Pair<SchemaKey, Boolean>, Pair<Integer, Set<GenContext>>>)",18,1,n/a,36,3,1,23,6
"org.apache.pig.data.SchemaTupleFrontend.SchemaTupleFrontendGenHelper.internalCopyAllGeneratedToDistributedCache()",32,1,n/a,65,2,0,38,8
"org.apache.pig.data.SchemaTupleFrontend.copyAllGeneratedToDistributedCache(PigContext,Configuration)",12,1,n/a,28,1,2,15,4
"org.apache.pig.data.SchemaTupleFrontend.getSchemasToGenerate()",0,1,n/a,3,0,0,1,1
"org.apache.pig.data.SchemaTupleFrontend.internalRegisterToGenerateIfPossible(Schema,boolean,GenContext)",16,1,n/a,20,1,3,15,4
"org.apache.pig.data.SchemaTupleFrontend.lazyReset(PigContext)",0,1,n/a,10,0,1,1,1
"org.apache.pig.data.SchemaTupleFrontend.registerToGenerateIfPossible(Schema,boolean,GenContext)",10,8,n/a,34,2,3,16,5
"org.apache.pig.data.SchemaTupleFrontend.reset()",1,1,n/a,8,0,0,2,1
"org.apache.pig.data.SchemaTupleFrontend.stripAliases(Schema)",2,2,n/a,8,2,1,4,3
"org.apache.pig.data.SelfSpillBag.MemoryLimits.MemoryLimits(int,float)",1,3,n/a,7,0,2,1,1
"org.apache.pig.data.SelfSpillBag.MemoryLimits.addNewObjSize(long)",0,4,n/a,9,0,1,2,1
"org.apache.pig.data.SelfSpillBag.MemoryLimits.getCacheLimit()",0,4,n/a,15,2,0,5,3
"org.apache.pig.data.SelfSpillBag.MemoryLimits.getNumObjectsSizeAdded()",0,0,n/a,6,0,0,1,1
"org.apache.pig.data.SelfSpillBag.MemoryLimits.init(int,float)",0,1,n/a,11,1,2,5,3
"org.apache.pig.data.SelfSpillBag.SelfSpillBag(int)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.SelfSpillBag.SelfSpillBag(int,float)",1,2,n/a,3,0,2,1,1
"org.apache.pig.data.SingleTupleBag.SingleTupleBag(Tuple)",0,4,n/a,3,0,1,1,1
"org.apache.pig.data.SingleTupleBag.TBIterator.hasNext()",0,0,n/a,7,0,0,1,1
"org.apache.pig.data.SingleTupleBag.TBIterator.next()",0,0,n/a,8,0,0,2,1
"org.apache.pig.data.SingleTupleBag.TBIterator.remove()",1,0,n/a,7,0,0,1,1
"org.apache.pig.data.SingleTupleBag.add(Tuple)",0,94,n/a,9,0,1,1,1
"org.apache.pig.data.SingleTupleBag.addAll(DataBag)",1,6,n/a,7,0,1,1,1
"org.apache.pig.data.SingleTupleBag.clear()",1,7,n/a,7,0,0,1,1
"org.apache.pig.data.SingleTupleBag.compareTo(Object)",0,0,n/a,8,0,1,1,1
"org.apache.pig.data.SingleTupleBag.equals(Object)",0,0,n/a,4,0,1,1,1
"org.apache.pig.data.SingleTupleBag.getMemorySize()",0,6,n/a,7,0,0,1,1
"org.apache.pig.data.SingleTupleBag.hashCode()",0,0,n/a,3,0,0,1,1
"org.apache.pig.data.SingleTupleBag.isDistinct()",0,4,n/a,7,0,0,1,1
"org.apache.pig.data.SingleTupleBag.isSorted()",0,4,n/a,7,0,0,1,1
"org.apache.pig.data.SingleTupleBag.iterator()",1,150,n/a,7,0,0,1,1
"org.apache.pig.data.SingleTupleBag.markStale(boolean)",1,0,n/a,7,0,1,1,1
"org.apache.pig.data.SingleTupleBag.readFields(DataInput)",3,0,n/a,15,2,1,8,3
"org.apache.pig.data.SingleTupleBag.size()",0,84,n/a,7,0,0,1,1
"org.apache.pig.data.SingleTupleBag.spill()",0,1,n/a,7,0,0,1,1
"org.apache.pig.data.SingleTupleBag.toString()",0,0,n/a,6,0,0,1,1
"org.apache.pig.data.SingleTupleBag.write(DataOutput)",6,0,n/a,12,1,1,5,2
"org.apache.pig.data.SizeUtil.getMapEntrySize(Object,Object)",2,1,n/a,10,0,2,1,1
"org.apache.pig.data.SizeUtil.getPigObjMemSize(Object)",14,4,n/a,59,3,1,42,17
"org.apache.pig.data.SizeUtil.roundToEight(long)",0,4,n/a,9,0,1,1,1
"org.apache.pig.data.SortedDataBag.DefaultComparator.compare(Tuple,Tuple)",1,0,n/a,5,0,2,1,1
"org.apache.pig.data.SortedDataBag.DefaultComparator.equals(Object)",0,0,n/a,4,0,1,1,1
"org.apache.pig.data.SortedDataBag.DefaultComparator.hashCode()",0,0,n/a,4,0,0,1,1
"org.apache.pig.data.SortedDataBag.SortedDataBag(Comparator<Tuple>)",2,1,n/a,8,0,1,2,2
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.PQContainer.compareTo(PQContainer)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.PQContainer.equals(Object)",1,0,n/a,7,0,1,3,2
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.PQContainer.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.SortedDataBagIterator()",2,1,n/a,10,2,0,5,2
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.addToQueue(PQContainer,int)",11,5,n/a,42,3,2,21,8
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.hasNext()",1,0,n/a,6,0,0,2,1
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.next()",22,1,n/a,79,3,0,37,13
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.preMerge()",34,1,n/a,93,4,0,43,11
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.readFromMemory()",3,2,n/a,10,1,0,5,3
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.readFromPriorityQ()",19,2,n/a,43,3,0,20,6
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.remove()",0,0,n/a,5,0,0,0,1
"org.apache.pig.data.SortedDataBag.isDistinct()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.SortedDataBag.isSorted()",0,4,n/a,4,0,0,1,1
"org.apache.pig.data.SortedDataBag.iterator()",1,149,n/a,4,0,0,1,1
"org.apache.pig.data.SortedDataBag.spill()",17,1,n/a,60,4,0,29,9
"org.apache.pig.data.SortedSpillBag.SortedSpillBag(int,float)",1,2,n/a,3,0,2,1,1
"org.apache.pig.data.SortedSpillBag.proactive_spill(Comparator<Tuple>)",18,3,n/a,63,3,1,32,10
"org.apache.pig.data.TargetedTuple.TargetedTuple()",0,0,n/a,2,0,0,0,1
"org.apache.pig.data.TargetedTuple.TargetedTuple(Tuple,List<OperatorKey>)",0,0,n/a,4,0,2,2,1
"org.apache.pig.data.TargetedTuple.append(Object)",1,28,n/a,4,0,1,1,1
"org.apache.pig.data.TargetedTuple.compareTo(Object)",1,0,n/a,5,0,1,1,1
"org.apache.pig.data.TargetedTuple.equals(Object)",1,0,n/a,5,0,1,1,1
"org.apache.pig.data.TargetedTuple.get(int)",1,681,n/a,4,0,1,1,1
"org.apache.pig.data.TargetedTuple.getAll()",1,31,n/a,4,0,0,1,1
"org.apache.pig.data.TargetedTuple.getMemorySize()",1,14,n/a,4,0,0,1,1
"org.apache.pig.data.TargetedTuple.getTargetOps()",0,0,n/a,3,0,0,1,1
"org.apache.pig.data.TargetedTuple.getType(int)",1,5,n/a,4,0,1,1,1
"org.apache.pig.data.TargetedTuple.hashCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.data.TargetedTuple.readFields(DataInput)",9,0,n/a,17,1,1,13,2
"org.apache.pig.data.TargetedTuple.reference(Tuple)",0,1,n/a,4,0,1,1,1
"org.apache.pig.data.TargetedTuple.set(int,Object)",1,279,n/a,4,0,2,1,1
"org.apache.pig.data.TargetedTuple.setTargetOps(List<OperatorKey>)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.TargetedTuple.size()",1,275,n/a,4,0,0,1,1
"org.apache.pig.data.TargetedTuple.toString()",11,1,n/a,12,1,0,8,2
"org.apache.pig.data.TargetedTuple.toTuple()",0,0,n/a,3,0,0,1,1
"org.apache.pig.data.TargetedTuple.write(DataOutput)",7,0,n/a,12,1,1,6,2
"org.apache.pig.data.TimestampedTuple.TimestampedTuple(String,String,int,SimpleDateFormat)",6,0,n/a,19,3,4,12,5
"org.apache.pig.data.TimestampedTuple.TimestampedTuple(int)",1,0,n/a,3,0,1,1,1
"org.apache.pig.data.TimestampedTuple.getTimeStamp()",0,0,n/a,3,0,0,1,1
"org.apache.pig.data.TimestampedTuple.isHeartBeat()",0,0,n/a,3,0,0,1,1
"org.apache.pig.data.TimestampedTuple.setHeartBeat(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.TimestampedTuple.setTimeStamp(double)",0,0,n/a,3,0,1,1,1
"org.apache.pig.data.Tuple.append(Object)",n/a,28,7,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.Tuple.get(int)",n/a,681,7,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.Tuple.getAll()",n/a,31,6,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.Tuple.getMemorySize()",n/a,14,7,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.Tuple.getType(int)",n/a,5,6,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.Tuple.isNull(int)",n/a,4,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.Tuple.reference(Tuple)",n/a,1,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.Tuple.set(int,Object)",n/a,279,7,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.Tuple.size()",n/a,275,7,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.Tuple.toDelimitedString(String)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TupleFactory.TupleFactory()",0,0,n/a,2,0,0,0,1
"org.apache.pig.data.TupleFactory.getInstance()",14,154,n/a,56,4,0,30,11
"org.apache.pig.data.TupleFactory.isFixedSize()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.TupleFactory.newTuple()",n/a,25,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.TupleFactory.newTuple(List)",n/a,14,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TupleFactory.newTuple(Object)",n/a,14,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TupleFactory.newTuple(int)",n/a,95,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TupleFactory.newTupleNoCopy(List)",n/a,9,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TupleFactory.resetSelf()",0,0,n/a,7,0,0,1,1
"org.apache.pig.data.TupleFactory.tupleClass()",n/a,5,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.TupleFactory.tupleRawComparatorClass()",0,2,n/a,11,0,0,1,1
"org.apache.pig.data.TupleMaker.newTuple()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.TupleMaker.newTuple(int)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TupleRawComparator.hasComparedTupleNull()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getBigDecimal(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getBigInteger(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getBoolean(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getBytes(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getDataBag(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getDateTime(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getDouble(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getFloat(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getInt(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getLong(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getMap(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getSchema()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getString(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.getTuple(int)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setBigDecimal(int,BigDecimal)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setBigInteger(int,BigInteger)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setBoolean(int,boolean)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setBytes(int,byte[])",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setDataBag(int,DataBag)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setDateTime(int,DateTime)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setDouble(int,double)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setFloat(int,float)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setInt(int,int)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setLong(int,long)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setMap(int,Map<String, Object>)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setString(int,String)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.TypeAwareTuple.setTuple(int,Tuple)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.data.UnlimitedNullTuple.append(Object)",1,28,n/a,4,0,1,1,1
"org.apache.pig.data.UnlimitedNullTuple.compareTo(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.UnlimitedNullTuple.get(int)",0,681,n/a,4,0,1,1,1
"org.apache.pig.data.UnlimitedNullTuple.getAll()",1,31,n/a,4,0,0,1,1
"org.apache.pig.data.UnlimitedNullTuple.getMemorySize()",1,14,n/a,4,0,0,1,1
"org.apache.pig.data.UnlimitedNullTuple.readFields(DataInput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.UnlimitedNullTuple.set(int,Object)",1,279,n/a,4,0,2,1,1
"org.apache.pig.data.UnlimitedNullTuple.size()",1,275,n/a,4,0,0,1,1
"org.apache.pig.data.UnlimitedNullTuple.write(DataOutput)",1,0,n/a,4,0,1,1,1
"org.apache.pig.data.WritableByteArray.WritableByteArray()",1,3,n/a,3,0,0,1,1
"org.apache.pig.data.WritableByteArray.WritableByteArray(byte[])",0,0,n/a,4,0,1,2,1
"org.apache.pig.data.WritableByteArray.WritableByteArray(int)",1,1,n/a,3,0,1,1,1
"org.apache.pig.data.WritableByteArray.getData()",0,5,n/a,8,0,0,1,1
"org.apache.pig.data.WritableByteArray.getLength()",0,7,n/a,7,0,0,1,1
"org.apache.pig.data.utils.BytesHelper.getBitByPos(byte,int)",0,0,n/a,3,0,2,1,1
"org.apache.pig.data.utils.BytesHelper.setBitByPos(byte,boolean,int)",0,0,n/a,7,1,3,3,2
"org.apache.pig.data.utils.MethodHelper.MethodHelper()",0,0,n/a,2,0,0,0,1
"org.apache.pig.data.utils.MethodHelper.isNotImplementedAnnotationPresent(Method,Class<?>)",6,1,n/a,17,2,2,6,4
"org.apache.pig.data.utils.MethodHelper.methodNotImplemented()",5,1,n/a,5,0,0,3,1
"org.apache.pig.data.utils.MethodHelper.methodSignatureEqual(Method,Method)",9,1,n/a,27,3,2,14,6
"org.apache.pig.data.utils.SedesHelper.Varint.Varint()",0,0,n/a,2,0,0,0,1
"org.apache.pig.data.utils.SedesHelper.Varint.readSignedVarInt(DataInput)",1,1,n/a,15,0,1,3,1
"org.apache.pig.data.utils.SedesHelper.Varint.readSignedVarLong(DataInput)",1,2,n/a,17,0,1,3,1
"org.apache.pig.data.utils.SedesHelper.Varint.readUnsignedVarInt(DataInput)",2,1,n/a,19,2,1,9,3
"org.apache.pig.data.utils.SedesHelper.Varint.readUnsignedVarLong(DataInput)",2,2,n/a,21,2,1,9,3
"org.apache.pig.data.utils.SedesHelper.Varint.writeSignedVarInt(int,DataOutput)",1,1,n/a,7,0,2,1,1
"org.apache.pig.data.utils.SedesHelper.Varint.writeSignedVarLong(long,DataOutput)",1,4,n/a,15,0,2,1,1
"org.apache.pig.data.utils.SedesHelper.Varint.writeUnsignedVarInt(int,DataOutput)",2,1,n/a,10,1,2,4,2
"org.apache.pig.data.utils.SedesHelper.Varint.writeUnsignedVarLong(long,DataOutput)",2,4,n/a,18,1,2,4,2
"org.apache.pig.data.utils.SedesHelper.readBooleanArray(DataInput,int)",2,2,n/a,11,2,2,11,3
"org.apache.pig.data.utils.SedesHelper.readBytes(DataInput,byte)",4,2,n/a,11,1,2,14,4
"org.apache.pig.data.utils.SedesHelper.readChararray(DataInput,byte)",4,2,n/a,9,1,2,6,2
"org.apache.pig.data.utils.SedesHelper.readGenericTuple(DataInput,byte)",4,3,n/a,8,1,2,7,2
"org.apache.pig.data.utils.SedesHelper.writeBooleanArray(DataOutput,boolean[])",1,1,n/a,10,2,2,10,5
"org.apache.pig.data.utils.SedesHelper.writeBooleanArray(DataOutput,boolean[],boolean)",1,1,n/a,15,3,3,13,7
"org.apache.pig.data.utils.SedesHelper.writeBytes(DataOutput,byte[])",7,2,n/a,14,1,2,10,3
"org.apache.pig.data.utils.SedesHelper.writeChararray(DataOutput,String)",7,2,n/a,14,1,2,8,2
"org.apache.pig.data.utils.SedesHelper.writeGenericTuple(DataOutput,Tuple)",19,2,n/a,49,2,2,45,15
"org.apache.pig.data.utils.StructuresHelper.Pair.Pair(T1,T2)",0,1,n/a,4,0,2,2,1
"org.apache.pig.data.utils.StructuresHelper.Pair.equals(Object)",6,0,n/a,17,1,1,10,5
"org.apache.pig.data.utils.StructuresHelper.Pair.getFirst()",0,5,n/a,3,0,0,1,1
"org.apache.pig.data.utils.StructuresHelper.Pair.getSecond()",0,5,n/a,3,0,0,1,1
"org.apache.pig.data.utils.StructuresHelper.Pair.hashCode()",2,0,n/a,4,0,0,1,3
"org.apache.pig.data.utils.StructuresHelper.Pair.make(A,B)",1,2,n/a,3,0,2,1,1
"org.apache.pig.data.utils.StructuresHelper.Pair.toString()",7,0,n/a,10,0,0,1,1
"org.apache.pig.data.utils.StructuresHelper.SchemaKey.SchemaKey(Schema)",0,3,n/a,3,0,1,1,1
"org.apache.pig.data.utils.StructuresHelper.SchemaKey.equals(Object)",2,0,n/a,8,1,1,4,4
"org.apache.pig.data.utils.StructuresHelper.SchemaKey.get()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.utils.StructuresHelper.SchemaKey.hashCode()",1,0,n/a,8,0,0,1,1
"org.apache.pig.data.utils.StructuresHelper.SchemaKey.hashCode(FieldSchema)",1,1,n/a,3,0,1,1,2
"org.apache.pig.data.utils.StructuresHelper.SchemaKey.hashCode(Schema)",2,2,n/a,12,1,1,8,3
"org.apache.pig.data.utils.StructuresHelper.SchemaKey.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.data.utils.StructuresHelper.StructuresHelper()",0,0,n/a,2,0,0,0,1
"org.apache.pig.data.utils.StructuresHelper.Triple.Triple(T1,T2,T3)",0,1,n/a,5,0,3,3,1
"org.apache.pig.data.utils.StructuresHelper.Triple.equals(Object)",9,0,n/a,26,1,1,16,8
"org.apache.pig.data.utils.StructuresHelper.Triple.getFirst()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.utils.StructuresHelper.Triple.getSecond()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.utils.StructuresHelper.Triple.getThird()",0,2,n/a,3,0,0,1,1
"org.apache.pig.data.utils.StructuresHelper.Triple.hashCode()",3,0,n/a,6,0,0,1,4
"org.apache.pig.data.utils.StructuresHelper.Triple.make(A,B,C)",1,2,n/a,3,0,3,1,1
"org.apache.pig.data.utils.StructuresHelper.Triple.toString()",9,0,n/a,12,0,0,1,1
"org.apache.pig.impl.PigContext.ContextClassLoader.ContextClassLoader(ClassLoader)",1,2,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.ContextClassLoader.ContextClassLoader(URL[],ClassLoader)",1,2,n/a,3,0,2,1,1
"org.apache.pig.impl.PigContext.ContextClassLoader.addURL(URL)",1,1,n/a,4,0,1,1,1
"org.apache.pig.impl.PigContext.PigContext()",2,2,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.PigContext(Configuration)",2,2,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.PigContext(ExecType,Configuration)",2,9,n/a,3,0,2,1,1
"org.apache.pig.impl.PigContext.PigContext(ExecType,Properties)",12,10,n/a,16,0,2,13,1
"org.apache.pig.impl.PigContext.PigContext(Properties)",2,3,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.addJar(String)",4,2,n/a,6,1,1,3,2
"org.apache.pig.impl.PigContext.addJar(URL,String)",6,3,n/a,8,1,2,5,3
"org.apache.pig.impl.PigContext.addPathToSkip(String)",1,1,n/a,9,0,1,1,1
"org.apache.pig.impl.PigContext.addScriptFile(String)",1,3,n/a,8,0,1,1,1
"org.apache.pig.impl.PigContext.addScriptFile(String,String)",4,5,n/a,11,1,2,2,2
"org.apache.pig.impl.PigContext.addScriptJar(String)",2,7,n/a,5,1,1,2,3
"org.apache.pig.impl.PigContext.connect()",4,4,n/a,5,0,0,3,1
"org.apache.pig.impl.PigContext.copy(String,String,boolean)",5,0,n/a,30,2,3,23,6
"org.apache.pig.impl.PigContext.createCl(String)",6,1,n/a,22,1,1,10,4
"org.apache.pig.impl.PigContext.createExecutableManager()",1,1,n/a,12,1,0,3,2
"org.apache.pig.impl.PigContext.doParamSubstitution(BufferedReader)",9,4,n/a,14,1,1,9,2
"org.apache.pig.impl.PigContext.doParamSubstitution(BufferedReader,List<String>,List<String>)",1,4,n/a,8,0,3,3,1
"org.apache.pig.impl.PigContext.doParamSubstitution(InputStream,List<String>,List<String>)",3,4,n/a,7,0,3,1,1
"org.apache.pig.impl.PigContext.doParamSubstitutionOutputToFile(BufferedReader,String)",11,2,n/a,16,1,2,9,3
"org.apache.pig.impl.PigContext.doParamSubstitutionOutputToFile(BufferedReader,String,List<String>,List<String>)",1,0,n/a,9,0,4,3,1
"org.apache.pig.impl.PigContext.getClassCache()",3,1,n/a,8,1,0,5,2
"org.apache.pig.impl.PigContext.getClassForAlias(String)",4,3,n/a,14,1,1,8,3
"org.apache.pig.impl.PigContext.getClassLoader()",0,6,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.getCommandForAlias(String)",1,1,n/a,9,0,1,1,1
"org.apache.pig.impl.PigContext.getConf()",1,0,n/a,7,0,0,1,1
"org.apache.pig.impl.PigContext.getDefaultLogLevel()",0,2,n/a,4,0,0,1,1
"org.apache.pig.impl.PigContext.getDfs()",0,22,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.getErrorSource()",0,7,n/a,8,0,0,1,1
"org.apache.pig.impl.PigContext.getExecType()",0,18,n/a,8,0,0,1,1
"org.apache.pig.impl.PigContext.getExecutionEngine()",0,12,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.getFs()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.getFuncSpecFromAlias(String)",1,2,n/a,7,0,1,4,3
"org.apache.pig.impl.PigContext.getLastAlias()",0,4,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.getLfs()",0,5,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.getLog4jProperties()",0,7,n/a,4,0,0,1,1
"org.apache.pig.impl.PigContext.getPackageImportList()",8,8,n/a,11,1,0,8,2
"org.apache.pig.impl.PigContext.getParamFiles()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.getParamVal()",5,1,n/a,13,2,0,7,3
"org.apache.pig.impl.PigContext.getParams()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.getPathsToSkip()",0,1,n/a,10,0,0,1,1
"org.apache.pig.impl.PigContext.getPreprocessorContext()",0,0,n/a,3,0,0,1,1
"org.apache.pig.impl.PigContext.getProperties()",0,174,n/a,9,0,0,1,1
"org.apache.pig.impl.PigContext.getScriptFiles()",0,2,n/a,7,0,0,1,1
"org.apache.pig.impl.PigContext.hasJar(String)",2,1,n/a,8,2,1,4,3
"org.apache.pig.impl.PigContext.init()",3,1,n/a,8,0,0,2,2
"org.apache.pig.impl.PigContext.initializeImportList(String)",6,1,n/a,14,1,1,9,3
"org.apache.pig.impl.PigContext.instantiateFuncFromAlias(String)",3,0,n/a,7,0,1,4,3
"org.apache.pig.impl.PigContext.instantiateFuncFromSpec(FuncSpec)",27,38,n/a,56,3,1,37,8
"org.apache.pig.impl.PigContext.instantiateFuncFromSpec(String)",2,12,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.instantiateObjectFromParams(Configuration,String,String,Class<T>)",9,3,n/a,36,2,4,10,4
"org.apache.pig.impl.PigContext.markJarAsPredeployed(String)",2,1,n/a,12,1,1,2,3
"org.apache.pig.impl.PigContext.registerFunction(String,FuncSpec)",2,11,n/a,17,1,2,3,2
"org.apache.pig.impl.PigContext.registerStreamCmd(String,StreamingCommand)",2,2,n/a,15,1,2,3,2
"org.apache.pig.impl.PigContext.rename(String,String)",9,1,n/a,33,2,2,25,7
"org.apache.pig.impl.PigContext.resolveClassName(String)",8,16,n/a,28,2,1,15,5
"org.apache.pig.impl.PigContext.setClassLoader(ClassLoader)",1,1,n/a,7,1,1,3,2
"org.apache.pig.impl.PigContext.setDefaultLogLevel(Level)",0,1,n/a,4,0,1,1,1
"org.apache.pig.impl.PigContext.setExecType(ExecType)",0,0,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.setJobtrackerLocation(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.setLastAlias(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.setLog4jProperties(Properties)",0,1,n/a,4,0,1,1,1
"org.apache.pig.impl.PigContext.setPackageImportList(ArrayList<String>)",1,7,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.setParamFiles(List<String>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.setParams(List<String>)",0,3,n/a,3,0,1,1,1
"org.apache.pig.impl.PigContext.staticDataCleanup()",1,0,n/a,4,0,0,1,1
"org.apache.pig.impl.PigImplConstants.PigImplConstants()",1,0,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.DefaultIndexableLoader(String,String,String,String,String)",1,0,n/a,13,0,5,5,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.close()",0,3,n/a,3,0,0,0,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.extractKeysFromIdxTuple(Tuple)",6,3,n/a,10,0,1,10,3
"org.apache.pig.impl.builtin.DefaultIndexableLoader.genKey()",3,1,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.getInputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.getLoadCaster()",1,7,n/a,4,0,0,1,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.getNext()",1,22,n/a,5,0,0,2,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.initRightLoader(int[])",10,1,n/a,13,1,1,5,2
"org.apache.pig.impl.builtin.DefaultIndexableLoader.initialize(Configuration)",0,3,n/a,4,0,1,0,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.prepareToRead(RecordReader,PigSplit)",1,6,n/a,4,0,2,1,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.seekNear(Tuple)",34,4,n/a,83,3,1,48,14
"org.apache.pig.impl.builtin.DefaultIndexableLoader.setIndexFile(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader.setLocation(String,Job)",0,16,n/a,4,0,2,0,1
"org.apache.pig.impl.builtin.FindQuantiles.FindQuantiles()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.FindQuantiles.FindQuantiles(String[])",5,1,n/a,26,1,1,21,7
"org.apache.pig.impl.builtin.FindQuantiles.SortComparator.compare(Tuple,Tuple)",8,0,n/a,33,5,2,24,10
"org.apache.pig.impl.builtin.FindQuantiles.areEqual(Tuple,Tuple)",1,1,n/a,3,0,2,1,1
"org.apache.pig.impl.builtin.FindQuantiles.exec(Tuple)",41,8,n/a,122,4,1,65,22
"org.apache.pig.impl.builtin.FindQuantiles.instantiateFunc()",2,1,n/a,8,1,0,4,2
"org.apache.pig.impl.builtin.FindQuantiles.readObject(ObjectInputStream)",2,0,n/a,6,0,1,2,1
"org.apache.pig.impl.builtin.GFAny.GFAny()",0,0,n/a,1,0,0,0,1
"org.apache.pig.impl.builtin.GFAny.GFAny(int)",0,0,n/a,3,0,1,1,1
"org.apache.pig.impl.builtin.GFAny.exec(Tuple)",1,7,n/a,4,0,1,1,1
"org.apache.pig.impl.builtin.GFCross.GFCross(String)",0,0,n/a,3,0,1,1,1
"org.apache.pig.impl.builtin.GFCross.exec(Tuple)",16,7,n/a,33,3,1,25,7
"org.apache.pig.impl.builtin.GFCross.getCrossKey()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.GFCross.next(int[])",0,1,n/a,14,3,1,9,4
"org.apache.pig.impl.builtin.GFCross.toTuple(int[])",2,1,n/a,7,1,1,6,2
"org.apache.pig.impl.builtin.GFReplicate.GFReplicate()",0,0,n/a,1,0,0,0,1
"org.apache.pig.impl.builtin.GFReplicate.GFReplicate(int)",0,0,n/a,3,0,1,1,1
"org.apache.pig.impl.builtin.GFReplicate.exec(Tuple)",4,7,n/a,8,1,1,6,2
"org.apache.pig.impl.builtin.GetMemNumRows.GetMemNumRows()",1,0,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.GetMemNumRows.exec(Tuple)",9,7,n/a,24,1,1,12,4
"org.apache.pig.impl.builtin.GetMemNumRows.getReturnType()",0,6,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.IdentityColumn.exec(Tuple)",1,7,n/a,4,0,1,1,1
"org.apache.pig.impl.builtin.IdentityColumn.outputSchema(Schema)",0,2,n/a,4,0,1,1,1
"org.apache.pig.impl.builtin.IsFirstReduceOfKey.exec(Tuple)",9,7,n/a,18,1,1,12,4
"org.apache.pig.impl.builtin.IsFirstReduceOfKey.init()",8,1,n/a,16,1,0,8,3
"org.apache.pig.impl.builtin.PartitionSkewedKeys.PartitionSkewedKeys()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.PartitionSkewedKeys.PartitionSkewedKeys(String[])",4,2,n/a,13,1,1,8,4
"org.apache.pig.impl.builtin.PartitionSkewedKeys.calculateReducers(Tuple,long,long,long)",18,2,n/a,45,2,4,28,8
"org.apache.pig.impl.builtin.PartitionSkewedKeys.exec(Tuple)",39,8,n/a,90,4,1,56,17
"org.apache.pig.impl.builtin.PartitionSkewedKeys.getMemorySize(Tuple)",3,3,n/a,10,1,1,4,2
"org.apache.pig.impl.builtin.PartitionSkewedKeys.hasSameKey(Tuple,Tuple)",6,1,n/a,19,3,2,13,7
"org.apache.pig.impl.builtin.PoissonSampleLoader.PoissonSampleLoader(String,String)",3,0,n/a,4,0,2,2,1
"org.apache.pig.impl.builtin.PoissonSampleLoader.createNumRowTuple(Tuple)",8,3,n/a,19,2,1,12,4
"org.apache.pig.impl.builtin.PoissonSampleLoader.getNext()",8,22,n/a,39,2,0,25,7
"org.apache.pig.impl.builtin.PoissonSampleLoader.prepareToRead(RecordReader,PigSplit)",7,8,n/a,20,1,2,14,2
"org.apache.pig.impl.builtin.PoissonSampleLoader.updateSkipInterval(Tuple)",1,2,n/a,17,0,1,5,2
"org.apache.pig.impl.builtin.RandomSampleLoader.RandomSampleLoader(String,String)",3,0,n/a,14,0,2,2,1
"org.apache.pig.impl.builtin.RandomSampleLoader.getNext()",7,22,n/a,45,3,0,25,9
"org.apache.pig.impl.builtin.RandomSampleLoader.getSample()",0,2,n/a,8,1,0,3,2
"org.apache.pig.impl.builtin.RandomSampleLoader.prepareToRead(RecordReader,PigSplit)",1,8,n/a,6,0,2,3,1
"org.apache.pig.impl.builtin.ReadScalars.exec(Tuple)",33,7,n/a,73,3,1,43,13
"org.apache.pig.impl.builtin.ReadScalars.setOutputBuffer(Map<String, DataBag>)",0,1,n/a,5,0,1,3,1
"org.apache.pig.impl.builtin.SampleLoader.SampleLoader(String)",2,2,n/a,4,0,1,2,1
"org.apache.pig.impl.builtin.SampleLoader.computeSamples(ArrayList<Pair<FileSpec, Boolean>>,PigContext)",0,0,n/a,3,0,2,0,1
"org.apache.pig.impl.builtin.SampleLoader.getInputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.impl.builtin.SampleLoader.getLoadCaster()",1,7,n/a,4,0,0,1,1
"org.apache.pig.impl.builtin.SampleLoader.getNumSamples()",0,0,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.SampleLoader.prepareToRead(RecordReader,PigSplit)",1,8,n/a,5,0,2,2,1
"org.apache.pig.impl.builtin.SampleLoader.relativeToAbsolutePath(String,Path)",1,11,n/a,5,0,2,1,1
"org.apache.pig.impl.builtin.SampleLoader.setLocation(String,Job)",1,16,n/a,4,0,2,1,1
"org.apache.pig.impl.builtin.SampleLoader.setNumSamples(int)",0,2,n/a,3,0,1,1,1
"org.apache.pig.impl.builtin.SampleLoader.setUDFContextSignature(String)",1,15,n/a,4,0,1,1,1
"org.apache.pig.impl.builtin.SampleLoader.skipNext()",2,2,n/a,7,1,0,3,2
"org.apache.pig.impl.builtin.StreamingUDF.ProcessErrorThread.ProcessErrorThread()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.StreamingUDF.ProcessErrorThread.run()",14,0,n/a,35,4,0,20,8
"org.apache.pig.impl.builtin.StreamingUDF.ProcessInputThread.ProcessInputThread()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.StreamingUDF.ProcessInputThread.run()",5,0,n/a,16,3,0,9,4
"org.apache.pig.impl.builtin.StreamingUDF.ProcessKiller.run()",1,0,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.StreamingUDF.ProcessOutputThread.ProcessOutputThread()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.StreamingUDF.ProcessOutputThread.run()",12,0,n/a,37,4,0,19,9
"org.apache.pig.impl.builtin.StreamingUDF.StreamingUDF(String,String,String,String,String,String,String)",9,0,n/a,29,2,7,15,5
"org.apache.pig.impl.builtin.StreamingUDF.constructCommand()",17,1,n/a,42,1,0,33,5
"org.apache.pig.impl.builtin.StreamingUDF.createInputHandlers()",5,1,n/a,6,0,0,4,1
"org.apache.pig.impl.builtin.StreamingUDF.ensureUserFileAvailable(String[],String)",26,1,n/a,37,3,2,19,6
"org.apache.pig.impl.builtin.StreamingUDF.exec(Tuple)",2,7,n/a,8,1,1,4,2
"org.apache.pig.impl.builtin.StreamingUDF.getControllerPath(String)",18,1,n/a,40,3,1,19,3
"org.apache.pig.impl.builtin.StreamingUDF.getOutput(Tuple)",18,1,n/a,45,3,1,26,13
"org.apache.pig.impl.builtin.StreamingUDF.getUserFileExtension()",2,3,n/a,8,1,0,3,2
"org.apache.pig.impl.builtin.StreamingUDF.initialize()",7,1,n/a,9,0,0,7,1
"org.apache.pig.impl.builtin.StreamingUDF.isPython()",2,2,n/a,3,0,0,1,1
"org.apache.pig.impl.builtin.StreamingUDF.outputSchema(Schema)",0,2,n/a,4,0,1,1,1
"org.apache.pig.impl.builtin.StreamingUDF.setStreams()",12,1,n/a,11,0,0,5,1
"org.apache.pig.impl.builtin.StreamingUDF.startThreads()",6,1,n/a,8,0,0,6,1
"org.apache.pig.impl.builtin.StreamingUDF.startUdfController()",8,1,n/a,7,0,0,5,1
"org.apache.pig.impl.io.BinStorageInputFormat.createRecordReader(InputSplit,TaskAttemptContext)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.io.BinStorageOutputFormat.getRecordWriter(TaskAttemptContext)",5,0,n/a,12,0,1,5,1
"org.apache.pig.impl.io.BinStorageRecordReader.close()",1,0,n/a,5,1,0,2,2
"org.apache.pig.impl.io.BinStorageRecordReader.getCurrentKey()",0,0,n/a,6,0,0,1,1
"org.apache.pig.impl.io.BinStorageRecordReader.getCurrentValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.impl.io.BinStorageRecordReader.getProgress()",1,0,n/a,10,1,0,3,2
"org.apache.pig.impl.io.BinStorageRecordReader.initialize(InputSplit,TaskAttemptContext)",10,0,n/a,16,1,2,11,2
"org.apache.pig.impl.io.BinStorageRecordReader.nextKeyValue()",7,1,n/a,46,3,0,31,18
"org.apache.pig.impl.io.BinStorageRecordWriter.BinStorageRecordWriter(DataOutputStream)",0,1,n/a,6,0,1,1,1
"org.apache.pig.impl.io.BinStorageRecordWriter.close(TaskAttemptContext)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.io.BinStorageRecordWriter.write(WritableComparable,Tuple)",4,1,n/a,12,0,2,4,1
"org.apache.pig.impl.io.BufferedPositionedInputStream.BufferedPositionedInputStream(InputStream)",1,3,n/a,3,0,1,1,1
"org.apache.pig.impl.io.BufferedPositionedInputStream.BufferedPositionedInputStream(InputStream,long)",1,3,n/a,7,0,2,4,2
"org.apache.pig.impl.io.BufferedPositionedInputStream.close()",2,3,n/a,4,0,0,2,1
"org.apache.pig.impl.io.BufferedPositionedInputStream.getPosition()",1,4,n/a,8,0,0,3,2
"org.apache.pig.impl.io.BufferedPositionedInputStream.read()",1,9,n/a,6,0,0,3,1
"org.apache.pig.impl.io.BufferedPositionedInputStream.read(byte[],int,int)",1,0,n/a,6,0,3,3,1
"org.apache.pig.impl.io.BufferedPositionedInputStream.readLine(Charset,byte)",37,0,n/a,68,3,2,54,15
"org.apache.pig.impl.io.BufferedPositionedInputStream.skip(long)",1,0,n/a,6,0,1,3,1
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator.DataStorageInputStreamIterator(ElementDescriptor[])",0,2,n/a,3,0,1,1,1
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator.available()",2,0,n/a,6,0,0,3,2
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator.close()",1,0,n/a,8,1,0,4,2
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator.doNext()",1,2,n/a,4,0,0,2,1
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator.isEOF()",1,5,n/a,9,2,0,5,3
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator.read()",3,0,n/a,10,1,0,6,3
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator.read(byte[])",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator.read(byte[],int,int)",4,1,n/a,15,2,3,10,6
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator.skip(long)",2,0,n/a,7,1,1,3,3
"org.apache.pig.impl.io.FileLocalizer.FetchFileRet.FetchFileRet(File,boolean)",0,4,n/a,4,0,2,2,1
"org.apache.pig.impl.io.FileLocalizer.checkDefaultPrefix(ExecType,String)",1,5,n/a,5,0,2,3,3
"org.apache.pig.impl.io.FileLocalizer.create(String,PigContext)",1,0,n/a,3,0,2,1,1
"org.apache.pig.impl.io.FileLocalizer.create(String,boolean,PigContext)",13,1,n/a,18,2,3,11,4
"org.apache.pig.impl.io.FileLocalizer.createContainer(ContainerDescriptor)",2,2,n/a,6,1,1,3,2
"org.apache.pig.impl.io.FileLocalizer.delete(String,PigContext)",8,1,n/a,11,1,2,7,2
"org.apache.pig.impl.io.FileLocalizer.deleteTempFiles()",5,2,n/a,10,2,0,5,3
"org.apache.pig.impl.io.FileLocalizer.deleteTempResourceFiles()",2,1,n/a,9,2,0,4,3
"org.apache.pig.impl.io.FileLocalizer.fetchFile(Properties,String)",1,7,n/a,10,0,2,1,1
"org.apache.pig.impl.io.FileLocalizer.fetchFiles(Properties,String)",1,1,n/a,10,0,2,1,1
"org.apache.pig.impl.io.FileLocalizer.fetchFilesInternal(Properties,String,boolean)",36,2,n/a,70,3,3,31,14
"org.apache.pig.impl.io.FileLocalizer.fetchResource(String)",14,1,n/a,35,3,1,19,4
"org.apache.pig.impl.io.FileLocalizer.fileExists(String,DataStorage)",3,2,n/a,9,0,2,2,2
"org.apache.pig.impl.io.FileLocalizer.fileExists(String,PigContext)",2,2,n/a,4,0,2,1,1
"org.apache.pig.impl.io.FileLocalizer.fullPath(String,DataStorage)",5,3,n/a,19,2,2,9,3
"org.apache.pig.impl.io.FileLocalizer.fullPath(String,PigContext)",7,5,n/a,14,2,2,7,3
"org.apache.pig.impl.io.FileLocalizer.getFileElementDescriptors(ElementDescriptor)",15,3,n/a,38,3,1,22,6
"org.apache.pig.impl.io.FileLocalizer.getSize(String)",4,0,n/a,8,1,1,4,2
"org.apache.pig.impl.io.FileLocalizer.getSize(String,Properties)",5,1,n/a,13,1,2,10,2
"org.apache.pig.impl.io.FileLocalizer.getTempContainer(PigContext)",13,2,n/a,23,2,1,11,4
"org.apache.pig.impl.io.FileLocalizer.getTemporaryPath(PigContext)",1,17,n/a,3,0,1,1,1
"org.apache.pig.impl.io.FileLocalizer.getTemporaryPath(PigContext,String)",6,1,n/a,6,0,2,3,1
"org.apache.pig.impl.io.FileLocalizer.getTemporaryResourcePath(PigContext)",2,2,n/a,18,1,1,3,2
"org.apache.pig.impl.io.FileLocalizer.globMatchesFiles(ElementDescriptor,DataStorage)",3,2,n/a,21,2,2,10,5
"org.apache.pig.impl.io.FileLocalizer.hadoopify(String,PigContext)",21,0,n/a,27,1,2,15,6
"org.apache.pig.impl.io.FileLocalizer.isDirectory(String,DataStorage)",1,3,n/a,9,0,2,2,1
"org.apache.pig.impl.io.FileLocalizer.isDirectory(String,PigContext)",2,1,n/a,4,0,2,1,1
"org.apache.pig.impl.io.FileLocalizer.isFile(String,DataStorage)",1,0,n/a,8,0,2,1,1
"org.apache.pig.impl.io.FileLocalizer.isFile(String,PigContext)",2,1,n/a,4,0,2,1,1
"org.apache.pig.impl.io.FileLocalizer.open(String,ExecType,DataStorage)",10,0,n/a,23,1,3,7,2
"org.apache.pig.impl.io.FileLocalizer.open(String,PigContext)",13,1,n/a,14,1,2,7,2
"org.apache.pig.impl.io.FileLocalizer.open(String,long,PigContext)",22,0,n/a,35,2,3,15,6
"org.apache.pig.impl.io.FileLocalizer.openDFSFile(ElementDescriptor)",17,4,n/a,26,3,1,14,6
"org.apache.pig.impl.io.FileLocalizer.openDFSFile(String)",4,0,n/a,14,1,1,4,2
"org.apache.pig.impl.io.FileLocalizer.openDFSFile(String,Properties)",3,1,n/a,5,0,2,3,1
"org.apache.pig.impl.io.FileLocalizer.openLFSFile(ElementDescriptor)",1,2,n/a,7,0,1,1,1
"org.apache.pig.impl.io.FileLocalizer.parseCygPath(String,int)",9,0,n/a,42,2,2,26,8
"org.apache.pig.impl.io.FileLocalizer.relativeRoot(PigContext)",4,1,n/a,17,1,1,4,2
"org.apache.pig.impl.io.FileLocalizer.setInitialized(boolean)",1,3,n/a,9,1,1,2,2
"org.apache.pig.impl.io.FileLocalizer.setR(Random)",0,0,n/a,4,0,1,1,1
"org.apache.pig.impl.io.FileSpec.FileSpec(String,FuncSpec)",2,20,n/a,4,0,2,2,2
"org.apache.pig.impl.io.FileSpec.equals(Object)",2,3,n/a,10,1,1,6,4
"org.apache.pig.impl.io.FileSpec.getFileName()",0,94,n/a,3,0,0,1,1
"org.apache.pig.impl.io.FileSpec.getFuncName()",1,5,n/a,3,0,0,1,1
"org.apache.pig.impl.io.FileSpec.getFuncSpec()",0,48,n/a,3,0,0,1,1
"org.apache.pig.impl.io.FileSpec.getSize()",1,0,n/a,3,0,0,1,1
"org.apache.pig.impl.io.FileSpec.hashCode()",3,0,n/a,4,0,0,1,1
"org.apache.pig.impl.io.FileSpec.toString()",0,2,n/a,4,0,0,1,1
"org.apache.pig.impl.io.InterRecordReader.close()",1,0,n/a,5,1,0,2,2
"org.apache.pig.impl.io.InterRecordReader.getCurrentKey()",0,0,n/a,6,0,0,1,1
"org.apache.pig.impl.io.InterRecordReader.getCurrentValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.impl.io.InterRecordReader.getProgress()",1,0,n/a,10,1,0,3,2
"org.apache.pig.impl.io.InterRecordReader.initialize(InputSplit,TaskAttemptContext)",10,0,n/a,16,1,2,11,2
"org.apache.pig.impl.io.InterRecordReader.nextKeyValue()",8,1,n/a,47,3,0,31,18
"org.apache.pig.impl.io.InterRecordWriter.InterRecordWriter(DataOutputStream)",0,1,n/a,6,0,1,1,1
"org.apache.pig.impl.io.InterRecordWriter.close(TaskAttemptContext)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.io.InterRecordWriter.write(WritableComparable,Tuple)",4,1,n/a,12,0,2,4,1
"org.apache.pig.impl.io.InterStorage.InterInputFormat.createRecordReader(InputSplit,TaskAttemptContext)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.io.InterStorage.InterOutputFormat.getRecordWriter(TaskAttemptContext)",5,0,n/a,12,0,1,5,1
"org.apache.pig.impl.io.InterStorage.InterStorage()",1,1,n/a,6,0,0,1,1
"org.apache.pig.impl.io.InterStorage.checkSchema(ResourceSchema)",0,3,n/a,3,0,1,0,1
"org.apache.pig.impl.io.InterStorage.cleanupOnFailure(String,Job)",1,3,n/a,4,0,2,1,1
"org.apache.pig.impl.io.InterStorage.cleanupOnSuccess(String,Job)",0,3,n/a,4,0,2,0,1
"org.apache.pig.impl.io.InterStorage.getInputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.impl.io.InterStorage.getNext()",2,22,n/a,8,1,0,3,2
"org.apache.pig.impl.io.InterStorage.getOutputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.impl.io.InterStorage.getPartitionKeys(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.impl.io.InterStorage.getSchema(String,Job)",1,3,n/a,5,0,2,1,1
"org.apache.pig.impl.io.InterStorage.getStatistics(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.impl.io.InterStorage.hashCode()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.io.InterStorage.prepareToRead(RecordReader,PigSplit)",0,6,n/a,4,0,2,1,1
"org.apache.pig.impl.io.InterStorage.prepareToWrite(RecordWriter)",0,5,n/a,4,0,1,1,1
"org.apache.pig.impl.io.InterStorage.putNext(Tuple)",2,4,n/a,8,1,1,3,2
"org.apache.pig.impl.io.InterStorage.relToAbsPathForStoreLocation(String,Path)",1,7,n/a,5,0,2,1,1
"org.apache.pig.impl.io.InterStorage.setLocation(String,Job)",1,16,n/a,4,0,2,1,1
"org.apache.pig.impl.io.InterStorage.setPartitionFilter(Expression)",1,3,n/a,4,0,1,1,1
"org.apache.pig.impl.io.InterStorage.setStoreFuncUDFContextSignature(String)",0,5,n/a,3,0,1,0,1
"org.apache.pig.impl.io.InterStorage.setStoreLocation(String,Job)",2,7,n/a,4,0,2,1,1
"org.apache.pig.impl.io.NullableBag.NullableBag()",2,3,n/a,6,1,0,3,2
"org.apache.pig.impl.io.NullableBag.NullableBag(DataBag)",0,1,n/a,6,0,1,1,1
"org.apache.pig.impl.io.NullableBag.getValueAsPigType()",1,15,n/a,3,0,0,1,2
"org.apache.pig.impl.io.NullableBigDecimalWritable.NullableBigDecimalWritable()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableBigDecimalWritable.NullableBigDecimalWritable(BigDecimal)",1,1,n/a,3,0,1,1,1
"org.apache.pig.impl.io.NullableBigDecimalWritable.getValueAsPigType()",2,17,n/a,4,0,0,1,2
"org.apache.pig.impl.io.NullableBigIntegerWritable.NullableBigIntegerWritable()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableBigIntegerWritable.NullableBigIntegerWritable(BigInteger)",1,1,n/a,3,0,1,1,1
"org.apache.pig.impl.io.NullableBigIntegerWritable.getValueAsPigType()",2,17,n/a,4,0,0,1,2
"org.apache.pig.impl.io.NullableBooleanWritable.NullableBooleanWritable()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableBooleanWritable.NullableBooleanWritable(boolean)",1,1,n/a,6,0,1,1,1
"org.apache.pig.impl.io.NullableBooleanWritable.getValueAsPigType()",2,17,n/a,3,0,0,1,2
"org.apache.pig.impl.io.NullableBytesWritable.NullableBytesWritable()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableBytesWritable.NullableBytesWritable(Object)",3,1,n/a,11,1,1,4,2
"org.apache.pig.impl.io.NullableBytesWritable.getValueAsPigType()",3,17,n/a,10,1,0,5,3
"org.apache.pig.impl.io.NullableDateTimeWritable.NullableDateTimeWritable()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableDateTimeWritable.NullableDateTimeWritable(DateTime)",1,1,n/a,3,0,1,1,1
"org.apache.pig.impl.io.NullableDateTimeWritable.getValueAsPigType()",2,17,n/a,3,0,0,1,2
"org.apache.pig.impl.io.NullableDoubleWritable.NullableDoubleWritable()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableDoubleWritable.NullableDoubleWritable(double)",1,1,n/a,6,0,1,1,1
"org.apache.pig.impl.io.NullableDoubleWritable.getValueAsPigType()",2,17,n/a,3,0,0,1,2
"org.apache.pig.impl.io.NullableFloatWritable.NullableFloatWritable()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableFloatWritable.NullableFloatWritable(float)",1,1,n/a,6,0,1,1,1
"org.apache.pig.impl.io.NullableFloatWritable.getValueAsPigType()",2,17,n/a,3,0,0,1,2
"org.apache.pig.impl.io.NullableIntWritable.NullableIntWritable()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableIntWritable.NullableIntWritable(int)",1,1,n/a,6,0,1,1,1
"org.apache.pig.impl.io.NullableIntWritable.getValueAsPigType()",2,17,n/a,3,0,0,1,2
"org.apache.pig.impl.io.NullableLongWritable.NullableLongWritable()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableLongWritable.NullableLongWritable(long)",1,1,n/a,6,0,1,1,1
"org.apache.pig.impl.io.NullableLongWritable.getValueAsPigType()",2,17,n/a,3,0,0,1,2
"org.apache.pig.impl.io.NullablePartitionWritable.NullablePartitionWritable()",0,1,n/a,2,0,0,0,1
"org.apache.pig.impl.io.NullablePartitionWritable.NullablePartitionWritable(PigNullableWritable)",1,5,n/a,3,0,1,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.clone()",3,2,n/a,7,0,0,4,1
"org.apache.pig.impl.io.NullablePartitionWritable.compareTo(Object)",2,2,n/a,4,0,1,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.getIndex()",1,55,n/a,4,0,0,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.getKey()",0,47,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.getPartition()",0,2,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.getValueAsPigType()",1,15,n/a,4,0,0,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.hashCode()",1,1,n/a,4,0,0,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.isNull()",1,82,n/a,4,0,0,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.readFields(DataInput)",4,1,n/a,10,1,1,5,2
"org.apache.pig.impl.io.NullablePartitionWritable.setIndex(byte)",1,19,n/a,4,0,1,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.setKey(PigNullableWritable)",0,2,n/a,3,0,1,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.setNull(boolean)",1,16,n/a,4,0,1,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.setPartition(int)",0,5,n/a,3,0,1,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.toString()",1,1,n/a,4,0,0,1,1
"org.apache.pig.impl.io.NullablePartitionWritable.write(DataOutput)",5,1,n/a,5,0,1,2,1
"org.apache.pig.impl.io.NullableText.NullableText()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.io.NullableText.NullableText(String)",1,1,n/a,6,0,1,1,1
"org.apache.pig.impl.io.NullableText.NullableText(byte[])",1,0,n/a,6,0,1,1,1
"org.apache.pig.impl.io.NullableText.getValueAsPigType()",2,17,n/a,3,0,0,1,2
"org.apache.pig.impl.io.NullableTuple.NullableTuple()",0,3,n/a,2,0,0,0,1
"org.apache.pig.impl.io.NullableTuple.NullableTuple(NullableTuple)",4,0,n/a,5,0,1,3,1
"org.apache.pig.impl.io.NullableTuple.NullableTuple(Tuple)",0,8,n/a,6,0,1,1,1
"org.apache.pig.impl.io.NullableTuple.getValueAsPigType()",1,26,n/a,4,0,0,1,2
"org.apache.pig.impl.io.NullableTuple.readFields(DataInput)",5,1,n/a,9,1,1,5,2
"org.apache.pig.impl.io.NullableUnknownWritable.NullableUnknownWritable()",0,1,n/a,2,0,0,0,1
"org.apache.pig.impl.io.NullableUnknownWritable.NullableUnknownWritable(WritableComparable<?>)",0,0,n/a,3,0,1,1,1
"org.apache.pig.impl.io.NullableUnknownWritable.getValueAsPigType()",1,15,n/a,4,0,0,1,2
"org.apache.pig.impl.io.PigFile.PigFile(String)",0,0,n/a,3,0,1,1,1
"org.apache.pig.impl.io.PigFile.PigFile(String,boolean)",0,0,n/a,4,0,2,2,1
"org.apache.pig.impl.io.PigFile.load(LoadFunc,PigContext)",7,0,n/a,10,1,2,6,2
"org.apache.pig.impl.io.PigFile.store(DataBag,FuncSpec,PigContext)",29,0,n/a,35,2,3,27,4
"org.apache.pig.impl.io.PigFile.toString()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.io.PigNullableWritable.clone()",3,2,n/a,12,1,0,7,2
"org.apache.pig.impl.io.PigNullableWritable.compareTo(Object)",4,2,n/a,41,3,1,26,17
"org.apache.pig.impl.io.PigNullableWritable.equals(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.io.PigNullableWritable.getIndex()",0,55,n/a,6,0,0,1,1
"org.apache.pig.impl.io.PigNullableWritable.getValueAsPigType()",n/a,15,14,n/a,n/a,0,n/a,n/a
"org.apache.pig.impl.io.PigNullableWritable.hashCode()",1,1,n/a,11,0,0,3,2
"org.apache.pig.impl.io.PigNullableWritable.isNull()",0,82,n/a,6,0,0,1,1
"org.apache.pig.impl.io.PigNullableWritable.readFields(DataInput)",3,1,n/a,9,0,1,4,2
"org.apache.pig.impl.io.PigNullableWritable.setIndex(byte)",0,17,n/a,6,0,1,1,1
"org.apache.pig.impl.io.PigNullableWritable.setNull(boolean)",0,16,n/a,6,0,1,1,1
"org.apache.pig.impl.io.PigNullableWritable.toString()",1,1,n/a,4,0,0,1,2
"org.apache.pig.impl.io.PigNullableWritable.write(DataOutput)",3,1,n/a,9,0,1,4,2
"org.apache.pig.impl.io.ReadToEndLoader.ReadToEndLoader(LoadFunc,Configuration,String,int)",1,6,n/a,16,0,4,5,1
"org.apache.pig.impl.io.ReadToEndLoader.ReadToEndLoader(LoadFunc,Configuration,String,int,PigContext)",1,1,n/a,9,0,5,6,1
"org.apache.pig.impl.io.ReadToEndLoader.ReadToEndLoader(LoadFunc,Configuration,String,int,String)",1,1,n/a,9,0,5,6,1
"org.apache.pig.impl.io.ReadToEndLoader.ReadToEndLoader(LoadFunc,Configuration,String,int[])",1,1,n/a,20,0,4,6,2
"org.apache.pig.impl.io.ReadToEndLoader.getInputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.impl.io.ReadToEndLoader.getLoadCaster()",1,7,n/a,4,0,0,1,1
"org.apache.pig.impl.io.ReadToEndLoader.getNext()",5,28,n/a,22,3,0,10,4
"org.apache.pig.impl.io.ReadToEndLoader.getNextHelper()",3,2,n/a,13,2,0,7,3
"org.apache.pig.impl.io.ReadToEndLoader.getPartitionKeys(String,Job)",1,4,n/a,8,1,2,3,2
"org.apache.pig.impl.io.ReadToEndLoader.getSchema(String,Job)",1,3,n/a,8,1,2,3,2
"org.apache.pig.impl.io.ReadToEndLoader.getStatistics(String,Job)",1,4,n/a,8,1,2,3,2
"org.apache.pig.impl.io.ReadToEndLoader.init()",11,4,n/a,24,1,0,11,4
"org.apache.pig.impl.io.ReadToEndLoader.initializeReader()",11,1,n/a,27,1,0,13,3
"org.apache.pig.impl.io.ReadToEndLoader.prepareToRead(RecordReader,PigSplit)",1,6,n/a,4,0,2,1,1
"org.apache.pig.impl.io.ReadToEndLoader.setLocation(String,Job)",1,16,n/a,4,0,2,1,1
"org.apache.pig.impl.io.ReadToEndLoader.setPartitionFilter(Expression)",1,3,n/a,6,1,1,2,2
"org.apache.pig.impl.io.ReadToEndLoader.setUDFContextSignature(String)",0,15,n/a,4,0,1,1,1
"org.apache.pig.impl.io.ReadToEndLoader.updateCurSplitIndex()",0,2,n/a,17,2,0,6,3
"org.apache.pig.impl.io.ResourceNotFoundException.ResourceNotFoundException(String)",0,1,n/a,4,0,1,1,1
"org.apache.pig.impl.io.ResourceNotFoundException.toString()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.SequenceFileInterStorage()",1,0,n/a,6,0,0,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.SequenceFileTupleOutputFormat.getRecordWriter(TaskAttemptContext)",4,0,n/a,4,2,1,4,1
"org.apache.pig.impl.io.SequenceFileInterStorage.SequenceFileTupleOutputFormat.getSequenceWriter(TaskAttemptContext)",8,1,n/a,24,1,1,10,2
"org.apache.pig.impl.io.SequenceFileInterStorage.checkSchema(ResourceSchema)",0,3,n/a,3,0,1,0,1
"org.apache.pig.impl.io.SequenceFileInterStorage.cleanupOnFailure(String,Job)",1,3,n/a,4,0,2,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.cleanupOnSuccess(String,Job)",0,3,n/a,4,0,2,0,1
"org.apache.pig.impl.io.SequenceFileInterStorage.getInputFormat()",1,8,n/a,5,0,0,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.getNext()",3,22,n/a,13,2,0,5,3
"org.apache.pig.impl.io.SequenceFileInterStorage.getOutputFormat()",1,8,n/a,5,0,0,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.getPartitionKeys(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.getSchema(String,Job)",1,3,n/a,5,0,2,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.getStatistics(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.prepareToRead(RecordReader,PigSplit)",0,6,n/a,6,0,2,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.prepareToWrite(RecordWriter)",0,5,n/a,5,0,1,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.putNext(Tuple)",2,4,n/a,9,1,1,3,2
"org.apache.pig.impl.io.SequenceFileInterStorage.relToAbsPathForStoreLocation(String,Path)",1,7,n/a,5,0,2,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.setLocation(String,Job)",1,16,n/a,4,0,2,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.setPartitionFilter(Expression)",1,3,n/a,5,0,1,1,1
"org.apache.pig.impl.io.SequenceFileInterStorage.setStoreFuncUDFContextSignature(String)",0,5,n/a,3,0,1,0,1
"org.apache.pig.impl.io.SequenceFileInterStorage.setStoreLocation(String,Job)",4,7,n/a,6,0,2,3,1
"org.apache.pig.impl.io.TFileRecordReader.close()",3,0,n/a,7,1,0,6,4
"org.apache.pig.impl.io.TFileRecordReader.getCurrentKey()",0,0,n/a,6,0,0,1,1
"org.apache.pig.impl.io.TFileRecordReader.getCurrentValue()",0,1,n/a,4,0,0,1,1
"org.apache.pig.impl.io.TFileRecordReader.getProgress()",2,0,n/a,14,1,0,3,2
"org.apache.pig.impl.io.TFileRecordReader.initialize(InputSplit,TaskAttemptContext)",12,0,n/a,13,0,2,9,1
"org.apache.pig.impl.io.TFileRecordReader.nextKeyValue()",6,1,n/a,18,1,0,9,2
"org.apache.pig.impl.io.TFileRecordWriter.TFileRecordWriter(Path,String,Configuration)",3,1,n/a,9,0,3,3,1
"org.apache.pig.impl.io.TFileRecordWriter.close(TaskAttemptContext)",2,0,n/a,9,0,1,4,3
"org.apache.pig.impl.io.TFileRecordWriter.write(WritableComparable,Tuple)",9,1,n/a,22,1,2,8,1
"org.apache.pig.impl.io.TFileStorage.TFileInputFormat.createRecordReader(InputSplit,TaskAttemptContext)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.io.TFileStorage.TFileOutputFormat.getRecordWriter(TaskAttemptContext)",10,0,n/a,19,1,1,9,5
"org.apache.pig.impl.io.TFileStorage.TFileStorage()",1,0,n/a,6,0,0,1,1
"org.apache.pig.impl.io.TFileStorage.checkSchema(ResourceSchema)",0,3,n/a,3,0,1,0,1
"org.apache.pig.impl.io.TFileStorage.cleanupOnFailure(String,Job)",1,3,n/a,4,0,2,1,1
"org.apache.pig.impl.io.TFileStorage.cleanupOnSuccess(String,Job)",0,3,n/a,4,0,2,0,1
"org.apache.pig.impl.io.TFileStorage.getInputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.impl.io.TFileStorage.getNext()",2,22,n/a,9,1,0,3,2
"org.apache.pig.impl.io.TFileStorage.getOutputFormat()",1,8,n/a,4,0,0,1,1
"org.apache.pig.impl.io.TFileStorage.getPartitionKeys(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.impl.io.TFileStorage.getSchema(String,Job)",1,3,n/a,5,0,2,1,1
"org.apache.pig.impl.io.TFileStorage.getStatistics(String,Job)",0,4,n/a,5,0,2,1,1
"org.apache.pig.impl.io.TFileStorage.hashCode()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.io.TFileStorage.prepareToRead(RecordReader,PigSplit)",0,6,n/a,4,0,2,1,1
"org.apache.pig.impl.io.TFileStorage.prepareToWrite(RecordWriter)",0,5,n/a,4,0,1,1,1
"org.apache.pig.impl.io.TFileStorage.putNext(Tuple)",2,4,n/a,9,1,1,3,2
"org.apache.pig.impl.io.TFileStorage.relToAbsPathForStoreLocation(String,Path)",1,7,n/a,5,0,2,1,1
"org.apache.pig.impl.io.TFileStorage.setLocation(String,Job)",1,16,n/a,4,0,2,1,1
"org.apache.pig.impl.io.TFileStorage.setPartitionFilter(Expression)",1,3,n/a,4,0,1,1,1
"org.apache.pig.impl.io.TFileStorage.setStoreFuncUDFContextSignature(String)",0,5,n/a,3,0,1,0,1
"org.apache.pig.impl.io.TFileStorage.setStoreLocation(String,Job)",2,7,n/a,4,0,2,1,1
"org.apache.pig.impl.logicalLayer.CanonicalNamer.getNewName()",2,5,n/a,3,0,0,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException()",1,4,n/a,6,0,0,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(Operator,String)",3,1,n/a,9,0,2,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(Operator,String,int)",3,8,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(Operator,String,int,Throwable)",3,0,n/a,11,0,4,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(Operator,String,int,byte)",3,3,n/a,12,0,4,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(Operator,String,int,byte,Throwable)",3,1,n/a,13,0,5,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(Operator,String,int,byte,boolean,String,Throwable)",3,1,n/a,15,0,7,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String)",1,22,n/a,8,0,1,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,Throwable)",1,4,n/a,9,0,2,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int)",1,80,n/a,9,0,2,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int,SourceLocation)",1,1,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int,Throwable)",1,5,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int,boolean)",1,4,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int,byte)",1,27,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int,byte,Throwable)",1,4,n/a,11,0,4,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int,byte,Throwable,SourceLocation)",1,0,n/a,12,0,5,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int,byte,boolean)",1,4,n/a,12,0,4,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int,byte,boolean,String)",1,13,n/a,13,0,5,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(String,int,byte,boolean,String,Throwable)",1,5,n/a,14,0,6,1,1
"org.apache.pig.impl.logicalLayer.FrontendException.FrontendException(Throwable)",1,22,n/a,8,0,1,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.FieldSchema(FieldSchema)",2,3,n/a,23,2,1,10,3
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.FieldSchema(String,Schema)",1,5,n/a,14,0,2,4,1
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.FieldSchema(String,Schema,byte)",5,35,n/a,24,1,3,8,3
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.FieldSchema(String,byte)",1,237,n/a,15,0,2,4,1
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.castable(FieldSchema,FieldSchema)",7,2,n/a,68,4,2,23,32
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.clone()",4,2,n/a,19,1,0,5,3
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.equals(FieldSchema,FieldSchema,boolean,boolean)",3,6,n/a,51,3,4,19,17
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.equals(Object)",1,0,n/a,16,0,1,4,2
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.findFieldSchema(String)",2,0,n/a,15,1,1,5,3
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.hashCode()",2,1,n/a,6,0,0,1,3
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.isNullOrUnknownType(FieldSchema)",0,6,n/a,3,0,1,1,2
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.mergePrefixFieldSchema(FieldSchema)",1,0,n/a,11,0,1,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.mergePrefixFieldSchema(FieldSchema,boolean)",1,0,n/a,15,0,2,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.mergePrefixFieldSchema(FieldSchema,boolean,boolean)",17,3,n/a,84,4,3,40,15
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.setFieldSchemaDefaultType(FieldSchema,byte)",2,1,n/a,14,1,2,6,4
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema.toString()",10,0,n/a,19,1,0,10,3
"org.apache.pig.impl.logicalLayer.schema.Schema.Schema()",3,69,n/a,5,0,0,3,1
"org.apache.pig.impl.logicalLayer.schema.Schema.Schema(FieldSchema)",6,153,n/a,16,2,1,8,3
"org.apache.pig.impl.logicalLayer.schema.Schema.Schema(List<FieldSchema>)",5,6,n/a,16,3,1,8,4
"org.apache.pig.impl.logicalLayer.schema.Schema.Schema(Schema)",16,3,n/a,32,5,1,21,6
"org.apache.pig.impl.logicalLayer.schema.Schema.add(FieldSchema)",3,115,n/a,9,2,1,5,3
"org.apache.pig.impl.logicalLayer.schema.Schema.addAlias(String,FieldSchema)",2,0,n/a,8,2,2,4,3
"org.apache.pig.impl.logicalLayer.schema.Schema.castable(Schema,Schema)",8,1,n/a,33,2,2,16,8
"org.apache.pig.impl.logicalLayer.schema.Schema.checkNullAlias(FieldSchema,Schema)",1,2,n/a,10,1,2,2,2
"org.apache.pig.impl.logicalLayer.schema.Schema.clone()",17,3,n/a,37,1,0,20,4
"org.apache.pig.impl.logicalLayer.schema.Schema.equals(Object)",1,0,n/a,14,0,1,4,2
"org.apache.pig.impl.logicalLayer.schema.Schema.equals(Schema,Schema,boolean,boolean)",16,7,n/a,81,3,4,37,24
"org.apache.pig.impl.logicalLayer.schema.Schema.findFieldSchema(String)",2,2,n/a,17,2,1,8,5
"org.apache.pig.impl.logicalLayer.schema.Schema.generateNestedSchema(byte,byte...)",5,33,n/a,15,1,2,7,2
"org.apache.pig.impl.logicalLayer.schema.Schema.getAliases()",1,2,n/a,3,0,0,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.getField(String)",29,2,n/a,64,4,1,34,12
"org.apache.pig.impl.logicalLayer.schema.Schema.getField(int)",4,58,n/a,19,1,1,6,2
"org.apache.pig.impl.logicalLayer.schema.Schema.getFieldSubNameMatch(String)",13,2,n/a,45,3,1,24,10
"org.apache.pig.impl.logicalLayer.schema.Schema.getFieldSubNameMatchThrowSchemaMergeException(Schema,String)",3,2,n/a,20,1,2,6,2
"org.apache.pig.impl.logicalLayer.schema.Schema.getFields()",0,36,n/a,3,0,0,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.getPigSchema(ResourceSchema)",15,12,n/a,26,5,1,14,8
"org.apache.pig.impl.logicalLayer.schema.Schema.getPosition(String)",1,2,n/a,10,0,1,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.getPosition(String,boolean)",20,2,n/a,61,3,2,32,11
"org.apache.pig.impl.logicalLayer.schema.Schema.getPositionSubName(String)",1,0,n/a,10,0,1,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.hashCode()",1,1,n/a,10,1,0,6,2
"org.apache.pig.impl.logicalLayer.schema.Schema.indent(StringBuilder,int)",2,2,n/a,12,1,2,4,3
"org.apache.pig.impl.logicalLayer.schema.Schema.isTwoLevelAccessRequired()",0,7,n/a,8,0,0,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.merge(Schema,boolean)",1,0,n/a,10,0,2,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.mergeAlias(String,String,boolean)",0,2,n/a,23,1,3,7,4
"org.apache.pig.impl.logicalLayer.schema.Schema.mergeFieldSchemaFirstLevelSameAlias(FieldSchema,FieldSchema)",8,1,n/a,58,3,2,25,9
"org.apache.pig.impl.logicalLayer.schema.Schema.mergeNameSpacedAlias(String,String)",3,1,n/a,22,1,2,7,4
"org.apache.pig.impl.logicalLayer.schema.Schema.mergePrefixSchema(Schema,boolean)",1,0,n/a,15,0,2,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.mergePrefixSchema(Schema,boolean,boolean)",19,2,n/a,66,3,3,33,7
"org.apache.pig.impl.logicalLayer.schema.Schema.mergeSchema(Schema,Schema,boolean)",1,1,n/a,23,1,3,4,2
"org.apache.pig.impl.logicalLayer.schema.Schema.mergeSchema(Schema,Schema,boolean,boolean,boolean)",45,3,n/a,152,3,5,72,22
"org.apache.pig.impl.logicalLayer.schema.Schema.mergeSchemaByAlias(Schema,Schema)",16,1,n/a,47,3,2,18,7
"org.apache.pig.impl.logicalLayer.schema.Schema.mergeSchemasByAlias(Collection<Schema>)",9,0,n/a,36,2,1,15,4
"org.apache.pig.impl.logicalLayer.schema.Schema.prettyPrint()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.printAliases()",2,0,n/a,6,1,0,3,2
"org.apache.pig.impl.logicalLayer.schema.Schema.reconcile(Schema)",24,0,n/a,61,6,1,37,12
"org.apache.pig.impl.logicalLayer.schema.Schema.setSchemaDefaultType(Schema,byte)",2,3,n/a,11,1,2,4,3
"org.apache.pig.impl.logicalLayer.schema.Schema.setTwoLevelAccessRequired(boolean)",0,6,n/a,8,0,1,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.size()",1,71,n/a,8,0,0,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.stringifySchema(StringBuilder,Schema,byte)",1,0,n/a,4,0,3,1,1
"org.apache.pig.impl.logicalLayer.schema.Schema.stringifySchema(StringBuilder,Schema,byte,int)",22,4,n/a,64,4,4,38,16
"org.apache.pig.impl.logicalLayer.schema.Schema.toIndentedString(int)",4,2,n/a,10,1,1,5,2
"org.apache.pig.impl.logicalLayer.schema.Schema.toString()",1,7,n/a,4,0,0,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String,int)",1,1,n/a,9,0,2,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String,int,byte)",1,12,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String,int,byte,Throwable)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException.SchemaMergeException(Throwable)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.checkDataTypes(List<Byte>)",3,1,n/a,11,2,1,3,3
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.checkParameters(List<String>,List<Byte>)",4,3,n/a,9,1,2,3,2
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newBagSchema(Byte[])",2,0,n/a,12,0,1,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newBagSchema(List<Byte>)",3,0,n/a,14,0,1,2,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newBagSchema(List<String>,List<Byte>)",4,1,n/a,17,0,2,4,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newBagSchema(String,String,List<String>,List<Byte>)",4,0,n/a,20,0,4,4,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newBagSchema(String,String,String[],Byte[])",3,0,n/a,5,0,4,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newBagSchema(String[],Byte[])",3,0,n/a,13,0,2,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newNames(int)",2,2,n/a,7,1,1,6,2
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newTupleSchema(Byte[])",2,0,n/a,12,0,1,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newTupleSchema(List<Byte>)",3,0,n/a,13,0,1,2,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newTupleSchema(List<String>,List<Byte>)",1,1,n/a,13,0,2,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newTupleSchema(String,List<String>,List<Byte>)",10,3,n/a,25,1,3,11,2
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newTupleSchema(String,String[],Byte[])",3,0,n/a,15,0,3,1,1
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil.newTupleSchema(String[],Byte[])",3,0,n/a,14,0,2,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(Operator,String,int,byte)",1,21,n/a,11,0,4,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(Operator,String,int,byte,Throwable)",1,0,n/a,13,0,5,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String,int)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String,int,byte)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String,int,byte,Throwable)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException.TypeCheckerException(Throwable)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.CompilationMessageCollector()",0,4,n/a,3,0,0,0,1
"org.apache.pig.impl.plan.CompilationMessageCollector.Message.Message(String,MessageType)",0,1,n/a,4,0,2,2,1
"org.apache.pig.impl.plan.CompilationMessageCollector.Message.Message(String,MessageType,Enum)",1,2,n/a,4,0,3,2,1
"org.apache.pig.impl.plan.CompilationMessageCollector.Message.getKind()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.Message.getMessage()",0,2,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.Message.getMessageType()",0,3,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.Unknown.toString()",0,0,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.collect(String,MessageType)",2,51,n/a,4,0,2,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.collect(String,MessageType,Enum)",2,9,n/a,3,0,3,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.get(int)",1,0,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.getKindAggregate(MessageType)",8,1,n/a,16,3,1,11,5
"org.apache.pig.impl.plan.CompilationMessageCollector.hasError()",1,0,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.hasMessage()",1,0,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.hasMessageType(MessageType)",4,1,n/a,9,2,1,5,3
"org.apache.pig.impl.plan.CompilationMessageCollector.iterator()",1,4,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.logAggregate(Map<Enum, Long>,MessageType,Log)",10,3,n/a,16,3,3,9,8
"org.apache.pig.impl.plan.CompilationMessageCollector.logAllMessages(CompilationMessageCollector,Log)",6,2,n/a,7,1,2,4,2
"org.apache.pig.impl.plan.CompilationMessageCollector.logAllMessages(Log)",1,0,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.logMessage(String,MessageType,Log)",3,4,n/a,12,1,3,9,4
"org.apache.pig.impl.plan.CompilationMessageCollector.logMessages(CompilationMessageCollector,MessageType,boolean,Log)",8,2,n/a,15,3,4,8,4
"org.apache.pig.impl.plan.CompilationMessageCollector.logMessages(MessageType,boolean,Log)",1,3,n/a,3,0,3,1,1
"org.apache.pig.impl.plan.CompilationMessageCollector.size()",1,0,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.DependencyOrderWalker.DependencyOrderWalker(P)",1,27,n/a,6,0,1,1,1
"org.apache.pig.impl.plan.DependencyOrderWalker.DependencyOrderWalker(P,boolean)",1,4,n/a,8,0,2,2,1
"org.apache.pig.impl.plan.DependencyOrderWalker.doAllPredecessors(O,Set<O>,Collection<O>)",8,2,n/a,17,3,3,7,5
"org.apache.pig.impl.plan.DependencyOrderWalker.spawnChildWalker(P)",1,13,n/a,4,0,1,1,1
"org.apache.pig.impl.plan.DependencyOrderWalker.walk(PlanVisitor<O, P>)",6,2,n/a,29,1,1,11,5
"org.apache.pig.impl.plan.DepthFirstWalker.DepthFirstWalker(P)",1,50,n/a,6,0,1,1,1
"org.apache.pig.impl.plan.DepthFirstWalker.depthFirst(O,Collection<O>,Set<O>,PlanVisitor<O, P>)",6,2,n/a,15,2,4,7,4
"org.apache.pig.impl.plan.DepthFirstWalker.spawnChildWalker(P)",1,13,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.DepthFirstWalker.walk(PlanVisitor<O, P>)",3,2,n/a,10,0,1,3,1
"org.apache.pig.impl.plan.DotPlanDumper.DotPlanDumper(P,PrintStream)",4,0,n/a,4,0,2,1,1
"org.apache.pig.impl.plan.DotPlanDumper.DotPlanDumper(P,PrintStream,boolean,Set<Operator>,Set<Operator>,Set<Operator>)",1,5,n/a,10,0,6,5,1
"org.apache.pig.impl.plan.DotPlanDumper.connectInvisible(E,S)",2,0,n/a,4,0,2,2,1
"org.apache.pig.impl.plan.DotPlanDumper.connectInvisibleInput(E,E,S)",4,1,n/a,6,1,3,3,2
"org.apache.pig.impl.plan.DotPlanDumper.connectInvisibleInput(E,S)",7,2,n/a,12,2,2,7,4
"org.apache.pig.impl.plan.DotPlanDumper.connectInvisibleOutput(E,OperatorPlan<? extends Operator>)",8,4,n/a,15,2,2,7,5
"org.apache.pig.impl.plan.DotPlanDumper.dump()",5,8,n/a,12,1,0,7,3
"org.apache.pig.impl.plan.DotPlanDumper.dumpEdge(Operator,Operator)",16,2,n/a,23,1,2,15,6
"org.apache.pig.impl.plan.DotPlanDumper.dumpInvisibleEdge(String,String)",4,3,n/a,6,0,2,4,1
"org.apache.pig.impl.plan.DotPlanDumper.dumpInvisibleInput(E)",6,1,n/a,6,0,1,4,1
"org.apache.pig.impl.plan.DotPlanDumper.dumpInvisibleInput(E,E)",6,1,n/a,6,0,2,4,1
"org.apache.pig.impl.plan.DotPlanDumper.dumpInvisibleOperators(E)",2,1,n/a,4,0,1,2,1
"org.apache.pig.impl.plan.DotPlanDumper.dumpInvisibleOutput(E)",6,3,n/a,6,0,1,4,1
"org.apache.pig.impl.plan.DotPlanDumper.dumpMultiInputNestedOperator(E,MultiMap<E, S>)",25,1,n/a,29,2,2,22,5
"org.apache.pig.impl.plan.DotPlanDumper.dumpMultiOutputNestedOperator(E,Collection<S>)",4,2,n/a,9,1,2,5,2
"org.apache.pig.impl.plan.DotPlanDumper.dumpNestedOperator(E,Collection<S>)",14,1,n/a,19,1,2,14,3
"org.apache.pig.impl.plan.DotPlanDumper.dumpOperator(E)",6,4,n/a,7,0,1,4,1
"org.apache.pig.impl.plan.DotPlanDumper.getAttributes(E)",1,4,n/a,9,0,1,3,1
"org.apache.pig.impl.plan.DotPlanDumper.getClusterID(Operator)",1,4,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.DotPlanDumper.getClusterID(Operator,Operator)",2,2,n/a,3,0,2,1,1
"org.apache.pig.impl.plan.DotPlanDumper.getID(Operator)",2,11,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.DotPlanDumper.getInvisibleAttributes(Operator)",0,3,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.DotPlanDumper.getName(E)",1,2,n/a,7,0,1,1,1
"org.apache.pig.impl.plan.DotPlanDumper.getSubgraphID(Operator,Operator,boolean)",2,3,n/a,10,1,3,5,2
"org.apache.pig.impl.plan.DotPlanDumper.getSubgraphID(Operator,boolean)",1,8,n/a,10,1,2,5,2
"org.apache.pig.impl.plan.DotPlanDumper.makeDumper(S,PrintStream)",1,5,n/a,7,0,2,1,1
"org.apache.pig.impl.plan.MapKeysInfo.MapKeysInfo()",0,2,n/a,4,0,0,2,1
"org.apache.pig.impl.plan.MapKeysInfo.MapKeysInfo(List<String>)",0,0,n/a,4,0,1,2,1
"org.apache.pig.impl.plan.MapKeysInfo.MapKeysInfo(boolean)",0,0,n/a,4,0,1,2,1
"org.apache.pig.impl.plan.MapKeysInfo.MapKeysInfo(boolean,List<String>)",0,0,n/a,4,0,2,2,1
"org.apache.pig.impl.plan.MapKeysInfo.getKeys()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.plan.MapKeysInfo.needAllKeys()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.plan.MapKeysInfo.toString()",9,0,n/a,17,1,0,14,5
"org.apache.pig.impl.plan.NodeIdGenerator.NodeIdGenerator()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.NodeIdGenerator.getGenerator()",0,71,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.NodeIdGenerator.getNextNodeId(String)",3,236,n/a,9,1,1,6,2
"org.apache.pig.impl.plan.NodeIdGenerator.reset()",1,0,n/a,4,0,0,1,1
"org.apache.pig.impl.plan.NodeIdGenerator.reset(String)",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.plan.Operator.Operator(OperatorKey)",0,6,n/a,6,0,1,1,1
"org.apache.pig.impl.plan.Operator.clone()",4,1,n/a,12,0,0,4,1
"org.apache.pig.impl.plan.Operator.compareTo(Operator)",1,0,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.Operator.equals(Object)",0,10,n/a,10,0,1,3,2
"org.apache.pig.impl.plan.Operator.getOperatorKey()",0,239,n/a,6,0,0,1,1
"org.apache.pig.impl.plan.Operator.getProjectionMap()",0,1,n/a,11,0,0,1,1
"org.apache.pig.impl.plan.Operator.hashCode()",1,1,n/a,9,0,0,1,1
"org.apache.pig.impl.plan.Operator.name()",n/a,17,72,n/a,n/a,0,n/a,n/a
"org.apache.pig.impl.plan.Operator.regenerateProjectionMap()",2,5,n/a,7,0,0,2,1
"org.apache.pig.impl.plan.Operator.rewire(Operator<V>,int,Operator<V>,boolean)",0,16,n/a,24,1,4,2,2
"org.apache.pig.impl.plan.Operator.supportsMultipleInputs()",n/a,2,45,n/a,n/a,0,n/a,n/a
"org.apache.pig.impl.plan.Operator.supportsMultipleOutputs()",n/a,2,39,n/a,n/a,0,n/a,n/a
"org.apache.pig.impl.plan.Operator.toString()",1,3,n/a,4,0,0,1,1
"org.apache.pig.impl.plan.Operator.unsetProjectionMap()",0,1,n/a,8,0,0,0,1
"org.apache.pig.impl.plan.Operator.visit(V)",n/a,4,65,n/a,n/a,1,n/a,n/a
"org.apache.pig.impl.plan.OperatorKey.OperatorKey()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.OperatorKey.OperatorKey(String,long)",0,240,n/a,4,0,2,2,1
"org.apache.pig.impl.plan.OperatorKey.compareTo(OperatorKey)",1,1,n/a,13,1,1,8,4
"org.apache.pig.impl.plan.OperatorKey.equals(Object)",1,4,n/a,11,1,1,4,3
"org.apache.pig.impl.plan.OperatorKey.fromString(String)",6,2,n/a,5,0,1,3,1
"org.apache.pig.impl.plan.OperatorKey.genOpKey(String)",3,29,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.OperatorKey.getId()",0,5,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.OperatorKey.getScope()",0,5,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.OperatorKey.hashCode()",2,1,n/a,4,0,0,1,1
"org.apache.pig.impl.plan.OperatorKey.toString()",0,193,n/a,4,0,0,1,1
"org.apache.pig.impl.plan.OperatorPlan.IndexHelper.IndexHelper(List<E>)",5,4,n/a,10,3,1,7,4
"org.apache.pig.impl.plan.OperatorPlan.IndexHelper.getIndex(E)",2,2,n/a,4,0,1,3,3
"org.apache.pig.impl.plan.OperatorPlan.OperatorPlan()",8,5,n/a,10,0,0,8,1
"org.apache.pig.impl.plan.OperatorPlan.add(E)",5,195,n/a,11,0,1,3,1
"org.apache.pig.impl.plan.OperatorPlan.addAsLeaf(E)",5,110,n/a,17,1,1,6,3
"org.apache.pig.impl.plan.OperatorPlan.checkInPlan(E)",5,12,n/a,8,1,1,4,2
"org.apache.pig.impl.plan.OperatorPlan.connect(E,E)",19,41,n/a,37,1,2,13,5
"org.apache.pig.impl.plan.OperatorPlan.createSoftLink(E,E)",4,2,n/a,13,0,2,4,1
"org.apache.pig.impl.plan.OperatorPlan.disconnect(E,E)",3,13,n/a,17,0,2,7,3
"org.apache.pig.impl.plan.OperatorPlan.doInsertBetween(E,E,E,boolean)",16,3,n/a,32,2,4,17,7
"org.apache.pig.impl.plan.OperatorPlan.doMerge(OperatorPlan<E>,boolean)",43,2,n/a,66,3,2,40,19
"org.apache.pig.impl.plan.OperatorPlan.dump(PrintStream)",16,0,n/a,18,2,1,11,6
"org.apache.pig.impl.plan.OperatorPlan.generateNewMap(E,E,MultiMap<E, E>)",12,2,n/a,26,2,3,15,5
"org.apache.pig.impl.plan.OperatorPlan.getKeys()",0,1,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.OperatorPlan.getLeaves()",5,94,n/a,14,3,0,5,5
"org.apache.pig.impl.plan.OperatorPlan.getOperator(OperatorKey)",1,22,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.getOperatorKey(E)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.getPredecessors(E)",1,102,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.getRoots()",5,105,n/a,14,3,0,5,5
"org.apache.pig.impl.plan.OperatorPlan.getSoftLinkPredecessors(E)",1,3,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.getSoftLinkSuccessors(E)",1,3,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.getSuccessors(E)",1,96,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.insertBetween(E,E,E)",1,1,n/a,16,0,3,1,1
"org.apache.pig.impl.plan.OperatorPlan.isSingleLeafPlan()",2,0,n/a,4,0,0,2,1
"org.apache.pig.impl.plan.OperatorPlan.iterator()",2,6,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.OperatorPlan.markDirty()",2,8,n/a,4,0,0,2,1
"org.apache.pig.impl.plan.OperatorPlan.merge(OperatorPlan<E>)",1,5,n/a,12,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.mergeSharedPlan(OperatorPlan<E>)",1,0,n/a,11,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.pathExists(E,E)",4,1,n/a,19,2,2,7,6
"org.apache.pig.impl.plan.OperatorPlan.pushAfter(E,E,int)",42,0,n/a,129,2,3,64,24
"org.apache.pig.impl.plan.OperatorPlan.pushBefore(E,E,int)",42,0,n/a,123,2,3,59,23
"org.apache.pig.impl.plan.OperatorPlan.reconnectPredecessors(E,boolean,boolean)",22,1,n/a,69,4,3,34,13
"org.apache.pig.impl.plan.OperatorPlan.reconnectSuccessors(E,boolean,boolean)",35,2,n/a,83,4,3,49,17
"org.apache.pig.impl.plan.OperatorPlan.remove(E)",8,20,n/a,15,0,1,7,1
"org.apache.pig.impl.plan.OperatorPlan.removeAndReconnect(E)",34,5,n/a,76,4,1,55,18
"org.apache.pig.impl.plan.OperatorPlan.removeAndReconnectMultiSucc(E)",1,0,n/a,15,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.removeEdges(E,MultiMap<E, E>,MultiMap<E, E>)",7,4,n/a,16,1,3,9,3
"org.apache.pig.impl.plan.OperatorPlan.removeSoftLink(E,E)",2,1,n/a,9,0,2,2,1
"org.apache.pig.impl.plan.OperatorPlan.replace(E,E)",20,1,n/a,30,2,2,19,6
"org.apache.pig.impl.plan.OperatorPlan.replaceAndAddPredecessors(E,E)",8,1,n/a,22,3,2,11,5
"org.apache.pig.impl.plan.OperatorPlan.replaceAndAddSucessors(E,E)",8,1,n/a,22,3,2,11,5
"org.apache.pig.impl.plan.OperatorPlan.replaceNode(E,E,E,MultiMap<E, E>)",13,14,n/a,40,3,4,32,12
"org.apache.pig.impl.plan.OperatorPlan.size()",1,35,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.OperatorPlan.swap(E,E)",44,0,n/a,123,1,2,81,22
"org.apache.pig.impl.plan.OperatorPlan.trimAbove(E)",7,1,n/a,20,2,1,7,3
"org.apache.pig.impl.plan.OperatorPlan.trimAbove(List<E>)",4,2,n/a,10,2,1,5,3
"org.apache.pig.impl.plan.OperatorPlan.trimBelow(E)",2,5,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.OperatorPlan.trimBelow(List<E>)",4,2,n/a,10,2,1,5,3
"org.apache.pig.impl.plan.PlanDumper.PlanDumper(P,PrintStream)",0,2,n/a,4,0,2,2,1
"org.apache.pig.impl.plan.PlanDumper.dump()",12,6,n/a,32,3,0,19,10
"org.apache.pig.impl.plan.PlanDumper.dumpEdge(Operator,Operator)",3,2,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.PlanDumper.dumpMultiInputNestedOperator(E,MultiMap<E, S>)",5,1,n/a,15,2,2,5,3
"org.apache.pig.impl.plan.PlanDumper.dumpMultiOutputNestedOperator(E,Collection<S>)",5,2,n/a,16,2,2,6,3
"org.apache.pig.impl.plan.PlanDumper.dumpNestedOperator(E,Collection<S>)",3,1,n/a,13,1,2,4,2
"org.apache.pig.impl.plan.PlanDumper.dumpOperator(E)",3,4,n/a,7,0,1,1,1
"org.apache.pig.impl.plan.PlanDumper.getMultiInputNestedPlans(E)",1,1,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.PlanDumper.getMultiOutputNestedPlans(E)",1,1,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.PlanDumper.getNestedPlans(E)",1,1,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.PlanDumper.isVerbose()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.PlanDumper.join(String,String[])",2,3,n/a,16,2,2,8,4
"org.apache.pig.impl.plan.PlanDumper.makeDumper(S,PrintStream)",1,3,n/a,10,0,2,1,1
"org.apache.pig.impl.plan.PlanDumper.setVerbose(boolean)",0,3,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.PlanException.PlanException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String)",1,6,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String,int)",1,2,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String,int,byte)",1,62,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String,int,byte,Throwable)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.impl.plan.PlanException.PlanException(Throwable)",1,6,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(Operator,String)",1,1,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(Operator,String,int)",1,4,n/a,9,0,3,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(Operator,String,int,byte)",1,3,n/a,10,0,4,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String,int)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String,int,byte)",1,2,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String,int,byte,Throwable)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.impl.plan.PlanValidationException.PlanValidationException(Throwable)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.PlanVisitor.PlanVisitor(P,PlanWalker<O, P>)",1,6,n/a,9,0,2,3,1
"org.apache.pig.impl.plan.PlanVisitor.getPlan()",0,40,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.PlanVisitor.popWalker()",3,14,n/a,12,1,0,3,2
"org.apache.pig.impl.plan.PlanVisitor.pushWalker(PlanWalker<O, P>)",1,14,n/a,9,0,1,2,1
"org.apache.pig.impl.plan.PlanVisitor.visit()",1,114,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.PlanWalker.PlanWalker(P)",0,3,n/a,6,0,1,1,1
"org.apache.pig.impl.plan.PlanWalker.getPlan()",0,2,n/a,3,0,0,1,1
"org.apache.pig.impl.plan.PlanWalker.setPlan(P)",0,1,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.PlanWalker.spawnChildWalker(P)",n/a,13,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.impl.plan.PlanWalker.walk(PlanVisitor<O, P>)",n/a,2,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.impl.plan.ProjectionMap.Column.Column(Pair<Integer, Integer>)",1,0,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.ProjectionMap.Column.Column(Pair<Integer, Integer>,boolean,byte)",0,1,n/a,16,0,3,3,1
"org.apache.pig.impl.plan.ProjectionMap.Column.cast()",1,0,n/a,9,0,0,1,1
"org.apache.pig.impl.plan.ProjectionMap.Column.getCast()",0,1,n/a,9,0,0,1,1
"org.apache.pig.impl.plan.ProjectionMap.Column.getCastType()",0,0,n/a,9,0,0,1,1
"org.apache.pig.impl.plan.ProjectionMap.Column.getInputColumn()",0,0,n/a,10,0,0,1,1
"org.apache.pig.impl.plan.ProjectionMap.Column.toString()",5,0,n/a,9,1,0,5,2
"org.apache.pig.impl.plan.ProjectionMap.ProjectionMap(MultiMap<Integer, Column>,List<Pair<Integer, Integer>>,List<Integer>)",1,0,n/a,14,0,3,1,1
"org.apache.pig.impl.plan.ProjectionMap.ProjectionMap(MultiMap<Integer, Column>,List<Pair<Integer, Integer>>,List<Integer>,boolean)",0,2,n/a,19,0,4,4,1
"org.apache.pig.impl.plan.ProjectionMap.ProjectionMap(boolean)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.ProjectionMap.changes()",1,0,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.ProjectionMap.getAddedFields()",0,0,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.ProjectionMap.getChanges()",0,1,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.ProjectionMap.getMappedFields()",0,0,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.ProjectionMap.getRemovedFields()",0,0,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.ProjectionMap.setAddedFields(List<Integer>)",0,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.ProjectionMap.setChanges(boolean)",0,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.ProjectionMap.setMappedFields(MultiMap<Integer, Column>)",0,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.ProjectionMap.setRemovedFields(List<Pair<Integer, Integer>>)",0,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.ProjectionMap.toString()",6,0,n/a,9,0,0,6,1
"org.apache.pig.impl.plan.RequiredFields.RequiredFields(List<Pair<Integer, Integer>>)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.RequiredFields.RequiredFields(List<Pair<Integer, Integer>>,boolean,boolean)",3,3,n/a,31,1,3,12,5
"org.apache.pig.impl.plan.RequiredFields.RequiredFields(boolean)",1,0,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.RequiredFields.RequiredFields(boolean,boolean)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.RequiredFields.getField(int)",1,1,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.RequiredFields.getFields()",0,1,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.RequiredFields.getMapKeysInfo(int)",1,1,n/a,9,0,1,1,1
"org.apache.pig.impl.plan.RequiredFields.getNeedAllFields()",0,3,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.RequiredFields.getNeedNoFields()",0,3,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.RequiredFields.merge(RequiredFields)",19,0,n/a,60,4,1,37,15
"org.apache.pig.impl.plan.RequiredFields.mergeMapKey(int,int,String)",8,1,n/a,22,0,3,10,5
"org.apache.pig.impl.plan.RequiredFields.mergeMapKeysInfo(int,int,MapKeysInfo)",7,0,n/a,32,1,3,14,7
"org.apache.pig.impl.plan.RequiredFields.needAllFields()",1,1,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.RequiredFields.needNoFields()",1,1,n/a,7,0,0,1,1
"org.apache.pig.impl.plan.RequiredFields.reIndex(int)",0,0,n/a,15,2,1,3,3
"org.apache.pig.impl.plan.RequiredFields.setFields(List<Pair<Integer, Integer>>)",3,0,n/a,14,1,1,7,3
"org.apache.pig.impl.plan.RequiredFields.setMapKeysInfo(int,MapKeysInfo)",1,0,n/a,11,0,2,1,1
"org.apache.pig.impl.plan.RequiredFields.setMapKeysInfo(int,int,MapKeysInfo)",3,0,n/a,16,0,3,4,2
"org.apache.pig.impl.plan.RequiredFields.setNeedAllFields(boolean)",1,0,n/a,10,0,1,3,3
"org.apache.pig.impl.plan.RequiredFields.setNeedNoFields(boolean)",1,0,n/a,10,0,1,3,3
"org.apache.pig.impl.plan.RequiredFields.size()",1,1,n/a,9,0,0,3,2
"org.apache.pig.impl.plan.RequiredFields.toString()",5,0,n/a,8,0,0,5,1
"org.apache.pig.impl.plan.ReverseDependencyOrderWalker.ReverseDependencyOrderWalker(P)",1,4,n/a,6,0,1,1,1
"org.apache.pig.impl.plan.ReverseDependencyOrderWalker.doAllSuccessors(O,Set<O>,Collection<O>)",8,2,n/a,17,3,3,7,5
"org.apache.pig.impl.plan.ReverseDependencyOrderWalker.spawnChildWalker(P)",1,13,n/a,3,0,1,1,1
"org.apache.pig.impl.plan.ReverseDependencyOrderWalker.walk(PlanVisitor<O, P>)",5,2,n/a,25,1,1,9,4
"org.apache.pig.impl.plan.VisitorException.VisitorException()",1,6,n/a,6,0,0,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(Operator,String)",1,1,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(Operator,String,int)",1,1,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(Operator,String,int,byte)",1,12,n/a,11,0,4,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(Operator,String,int,byte,Throwable)",1,1,n/a,13,0,5,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String)",1,24,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String,Throwable)",1,6,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String,int)",1,11,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String,int,Throwable)",1,6,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String,int,boolean)",1,6,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String,int,byte)",1,10,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String,int,byte,Throwable)",1,6,n/a,12,0,4,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String,int,byte,boolean)",1,6,n/a,12,0,4,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String,int,byte,boolean,String)",1,6,n/a,13,0,5,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(String,int,byte,boolean,String,Throwable)",1,6,n/a,14,0,6,1,1
"org.apache.pig.impl.plan.VisitorException.VisitorException(Throwable)",1,24,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException()",1,0,n/a,6,0,0,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String,Throwable)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String,int)",1,0,n/a,9,0,2,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String,int,Throwable)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String,int,boolean)",1,0,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String,int,byte)",1,13,n/a,10,0,3,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String,int,byte,Throwable)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String,int,byte,boolean)",1,0,n/a,12,0,4,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String,int,byte,boolean,String)",1,0,n/a,13,0,5,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(String,int,byte,boolean,String,Throwable)",1,0,n/a,14,0,6,1,1
"org.apache.pig.impl.plan.optimizer.OptimizerException.OptimizerException(Throwable)",1,0,n/a,8,0,1,1,1
"org.apache.pig.impl.streaming.DefaultInputHandler.DefaultInputHandler()",1,2,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.DefaultInputHandler.DefaultInputHandler(HandleSpec)",1,1,n/a,3,0,1,1,1
"org.apache.pig.impl.streaming.DefaultInputHandler.close(Process)",2,4,n/a,15,2,1,4,4
"org.apache.pig.impl.streaming.DefaultInputHandler.getInputType()",0,4,n/a,4,0,0,1,1
"org.apache.pig.impl.streaming.DefaultOutputHandler.DefaultOutputHandler()",1,2,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.DefaultOutputHandler.DefaultOutputHandler(HandleSpec)",1,1,n/a,3,0,1,1,1
"org.apache.pig.impl.streaming.DefaultOutputHandler.getOutputType()",0,2,n/a,4,0,0,1,1
"org.apache.pig.impl.streaming.ExecutableManager.ExecutableManager()",0,1,n/a,5,0,0,0,1
"org.apache.pig.impl.streaming.ExecutableManager.ProcessErrorThread.ProcessErrorThread()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.ExecutableManager.ProcessErrorThread.run()",10,0,n/a,27,3,0,15,6
"org.apache.pig.impl.streaming.ExecutableManager.ProcessInputThread.ProcessInputThread(InputHandler,POStream,UDFContext)",2,2,n/a,10,0,3,5,1
"org.apache.pig.impl.streaming.ExecutableManager.ProcessInputThread.run()",19,0,n/a,90,5,0,34,14
"org.apache.pig.impl.streaming.ExecutableManager.ProcessOutputThread.ProcessOutputThread(OutputHandler,POStream)",2,2,n/a,7,0,2,3,1
"org.apache.pig.impl.streaming.ExecutableManager.ProcessOutputThread.processOutput(Tuple)",11,2,n/a,43,3,1,23,5
"org.apache.pig.impl.streaming.ExecutableManager.ProcessOutputThread.run()",12,0,n/a,31,2,0,16,4
"org.apache.pig.impl.streaming.ExecutableManager.close()",19,4,n/a,57,2,0,28,10
"org.apache.pig.impl.streaming.ExecutableManager.configure(POStream)",3,2,n/a,14,0,1,4,1
"org.apache.pig.impl.streaming.ExecutableManager.exec()",16,3,n/a,32,1,0,11,2
"org.apache.pig.impl.streaming.ExecutableManager.killProcess(Process)",3,6,n/a,13,1,1,4,2
"org.apache.pig.impl.streaming.ExecutableManager.processError(String)",1,3,n/a,13,0,1,1,1
"org.apache.pig.impl.streaming.ExecutableManager.run()",11,1,n/a,31,1,0,9,2
"org.apache.pig.impl.streaming.ExecutableManager.sendOutput(BlockingQueue<Result>,Result)",3,4,n/a,14,2,2,6,3
"org.apache.pig.impl.streaming.FileInputHandler.FileInputHandler(HandleSpec)",5,1,n/a,13,1,1,8,2
"org.apache.pig.impl.streaming.FileInputHandler.bindTo(OutputStream)",1,3,n/a,5,0,1,1,1
"org.apache.pig.impl.streaming.FileInputHandler.close(Process)",3,4,n/a,8,1,1,5,2
"org.apache.pig.impl.streaming.FileInputHandler.getInputType()",0,4,n/a,4,0,0,1,1
"org.apache.pig.impl.streaming.FileOutputHandler.FileOutputHandler(HandleSpec)",1,1,n/a,5,0,1,2,1
"org.apache.pig.impl.streaming.FileOutputHandler.bindTo(String,BufferedPositionedInputStream,long,long)",5,4,n/a,11,0,4,3,1
"org.apache.pig.impl.streaming.FileOutputHandler.getOutputType()",0,2,n/a,4,0,0,1,1
"org.apache.pig.impl.streaming.HandlerFactory.createInputHandler(StreamingCommand)",6,1,n/a,18,1,1,5,4
"org.apache.pig.impl.streaming.HandlerFactory.createOutputHandler(StreamingCommand)",6,1,n/a,18,1,1,5,4
"org.apache.pig.impl.streaming.InputHandler.bindTo(OutputStream)",0,3,n/a,14,1,1,3,2
"org.apache.pig.impl.streaming.InputHandler.close(Process)",2,4,n/a,20,1,1,5,2
"org.apache.pig.impl.streaming.InputHandler.getInputType()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.impl.streaming.InputHandler.putNext(Tuple)",6,2,n/a,14,1,1,4,2
"org.apache.pig.impl.streaming.OutputHandler.bindTo(String,BufferedPositionedInputStream,long,long)",1,4,n/a,16,1,4,4,2
"org.apache.pig.impl.streaming.OutputHandler.close()",1,2,n/a,11,1,0,4,2
"org.apache.pig.impl.streaming.OutputHandler.getNext()",10,3,n/a,22,1,0,10,4
"org.apache.pig.impl.streaming.OutputHandler.getOutputType()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.impl.streaming.OutputHandler.getRecordDelimiter()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.OutputHandler.isEndOfRow()",5,1,n/a,15,1,0,9,4
"org.apache.pig.impl.streaming.OutputHandler.readNextLine()",3,1,n/a,9,1,0,6,2
"org.apache.pig.impl.streaming.OutputHandler.readValue()",5,1,n/a,17,2,0,10,4
"org.apache.pig.impl.streaming.PigStreamingUDF.PigStreamingUDF()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.PigStreamingUDF.PigStreamingUDF(FieldSchema)",1,1,n/a,4,0,1,2,1
"org.apache.pig.impl.streaming.PigStreamingUDF.deserialize(FieldSchema,byte[],int,int)",20,3,n/a,41,1,4,30,15
"org.apache.pig.impl.streaming.PigStreamingUDF.deserialize(byte[],int,int)",3,2,n/a,5,0,3,2,1
"org.apache.pig.impl.streaming.PigStreamingUDF.deserializeBag(FieldSchema,byte[],int,int)",8,1,n/a,13,2,4,11,3
"org.apache.pig.impl.streaming.PigStreamingUDF.deserializeMap(byte[],int,int)",8,1,n/a,21,2,3,18,5
"org.apache.pig.impl.streaming.PigStreamingUDF.deserializeTuple(FieldSchema,byte[],int,int)",9,1,n/a,16,2,4,14,3
"org.apache.pig.impl.streaming.PigStreamingUDF.extractString(byte[],int,int,boolean)",3,4,n/a,8,1,4,4,2
"org.apache.pig.impl.streaming.PigStreamingUDF.getLoadCaster()",1,2,n/a,4,0,0,1,1
"org.apache.pig.impl.streaming.PigStreamingUDF.getRecordDelim()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.PigStreamingUDF.serializeToBytes(Tuple)",8,2,n/a,21,2,1,16,4
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.HandleSpec(String)",2,0,n/a,10,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.HandleSpec(String,String)",0,3,n/a,12,0,2,2,1
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.clone()",3,1,n/a,8,1,0,3,2
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.compareTo(HandleSpec)",1,0,n/a,3,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.equals(Object)",2,0,n/a,7,1,1,4,4
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.getName()",0,3,n/a,9,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.getSpec()",0,7,n/a,9,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.hashCode()",1,0,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.setName(String)",0,0,n/a,9,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.setSpec(String)",0,0,n/a,9,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec.toString()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.StreamingCommand(PigContext,String[])",0,2,n/a,12,0,2,3,1
"org.apache.pig.impl.streaming.StreamingCommand.addHandleSpec(Handle,HandleSpec)",4,6,n/a,14,1,2,5,2
"org.apache.pig.impl.streaming.StreamingCommand.addPathToCache(String)",15,1,n/a,39,2,1,17,6
"org.apache.pig.impl.streaming.StreamingCommand.addPathToShip(String)",6,3,n/a,20,1,1,6,3
"org.apache.pig.impl.streaming.StreamingCommand.clone()",13,0,n/a,19,3,0,12,4
"org.apache.pig.impl.streaming.StreamingCommand.getCacheSpecs()",0,2,n/a,8,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.getCommandArgs()",0,2,n/a,8,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.getExecutable()",0,1,n/a,8,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.getHandleSpecs(Handle)",1,11,n/a,9,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.getInputSpec()",7,1,n/a,12,1,0,4,3
"org.apache.pig.impl.streaming.StreamingCommand.getLogDir()",0,1,n/a,8,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.getLogFilesLimit()",0,2,n/a,8,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.getOutputSpec()",7,3,n/a,14,1,0,4,3
"org.apache.pig.impl.streaming.StreamingCommand.getPersistStderr()",0,1,n/a,9,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.getShipFiles()",0,1,n/a,9,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.getShipSpecs()",0,2,n/a,8,0,0,1,1
"org.apache.pig.impl.streaming.StreamingCommand.setCommandArgs(String[])",0,0,n/a,9,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.setExecutable(String)",0,0,n/a,8,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.setInputSpec(HandleSpec)",4,0,n/a,13,1,1,4,3
"org.apache.pig.impl.streaming.StreamingCommand.setLogDir(String)",3,1,n/a,12,1,1,4,2
"org.apache.pig.impl.streaming.StreamingCommand.setLogFilesLimit(int)",1,1,n/a,8,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.setOutputSpec(HandleSpec)",4,0,n/a,15,1,1,4,3
"org.apache.pig.impl.streaming.StreamingCommand.setPersistStderr(boolean)",0,1,n/a,9,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.setShipFiles(boolean)",0,1,n/a,9,0,1,1,1
"org.apache.pig.impl.streaming.StreamingCommand.toString()",9,4,n/a,9,1,0,6,2
"org.apache.pig.impl.streaming.StreamingDelimiters.StreamingDelimiters()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.StreamingDelimiters(byte,byte,boolean)",9,2,n/a,27,1,3,14,2
"org.apache.pig.impl.streaming.StreamingDelimiters.getBagBegin()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getBagEnd()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getFieldDelim()",0,6,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getFullDelim(byte)",0,9,n/a,6,0,1,3,2
"org.apache.pig.impl.streaming.StreamingDelimiters.getMapBegin()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getMapEnd()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getMapKeyDelim()",0,2,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getNull()",0,4,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getParamDelim()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getRecordEnd()",0,3,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getTupleBegin()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.getTupleEnd()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingDelimiters.isDelimiter(byte[],byte[],int,int,int)",1,3,n/a,16,0,5,1,4
"org.apache.pig.impl.streaming.StreamingDelimiters.updateDepth(byte[],int,int)",0,3,n/a,18,1,3,8,12
"org.apache.pig.impl.streaming.StreamingUDFException.StreamingUDFException()",0,0,n/a,2,0,0,0,1
"org.apache.pig.impl.streaming.StreamingUDFException.StreamingUDFException(String)",0,0,n/a,3,0,1,1,1
"org.apache.pig.impl.streaming.StreamingUDFException.StreamingUDFException(String,Integer)",0,1,n/a,4,0,2,2,1
"org.apache.pig.impl.streaming.StreamingUDFException.StreamingUDFException(String,String)",1,1,n/a,3,0,2,1,1
"org.apache.pig.impl.streaming.StreamingUDFException.StreamingUDFException(String,String,Integer)",0,1,n/a,5,0,3,3,1
"org.apache.pig.impl.streaming.StreamingUDFException.StreamingUDFException(String,String,Throwable)",2,1,n/a,5,0,3,3,1
"org.apache.pig.impl.streaming.StreamingUDFException.getLanguage()",0,0,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingUDFException.getLineNumber()",0,2,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingUDFException.getMessage()",0,1,n/a,4,0,0,1,1
"org.apache.pig.impl.streaming.StreamingUDFException.toString()",5,6,n/a,8,0,0,4,3
"org.apache.pig.impl.streaming.StreamingUDFInputHandler.StreamingUDFInputHandler(PigStreamingBase)",0,1,n/a,3,0,1,1,1
"org.apache.pig.impl.streaming.StreamingUDFOutputHandler.StreamingUDFOutputHandler(PigStreamingUDF)",0,1,n/a,3,0,1,1,1
"org.apache.pig.impl.streaming.StreamingUDFOutputHandler.getRecordDelimiter()",1,1,n/a,4,0,0,1,1
"org.apache.pig.impl.streaming.StreamingUDFOutputSchemaException.StreamingUDFOutputSchemaException(String,int)",1,1,n/a,4,0,2,2,1
"org.apache.pig.impl.streaming.StreamingUDFOutputSchemaException.getLineNumber()",0,0,n/a,3,0,0,1,1
"org.apache.pig.impl.streaming.StreamingUtil.addJobConfToEnvironment(Configuration,Map<String, String>)",7,1,n/a,16,2,2,11,4
"org.apache.pig.impl.streaming.StreamingUtil.createProcess(StreamingCommand)",23,2,n/a,34,1,1,20,3
"org.apache.pig.impl.streaming.StreamingUtil.envPut(Map<String, String>,String,String)",3,1,n/a,6,1,3,3,2
"org.apache.pig.impl.streaming.StreamingUtil.setupEnvironment(ProcessBuilder)",9,1,n/a,23,1,1,11,3
"org.apache.pig.impl.util.BagFormat.format(DataBag)",11,2,n/a,14,1,1,11,3
"org.apache.pig.impl.util.CastUtils.convertToType(LoadCaster,byte[],ResourceFieldSchema,byte)",14,1,n/a,28,1,4,29,15
"org.apache.pig.impl.util.CastUtils.stringToBoolean(String)",2,2,n/a,13,2,1,7,4
"org.apache.pig.impl.util.CastUtils.stringToDouble(String)",3,2,n/a,21,2,1,6,3
"org.apache.pig.impl.util.CastUtils.stringToFloat(String)",3,2,n/a,21,2,1,6,3
"org.apache.pig.impl.util.CastUtils.stringToInteger(String)",9,2,n/a,39,4,1,12,5
"org.apache.pig.impl.util.CastUtils.stringToLong(String)",9,2,n/a,39,4,1,12,5
"org.apache.pig.impl.util.CompilerUtils.addEmptyBagOuterJoin(PhysicalPlan,Schema,boolean,String)",69,3,n/a,96,2,4,53,4
"org.apache.pig.impl.util.ConfigurationValidator.ensureLongType(Properties,String,long)",7,2,n/a,17,2,3,7,3
"org.apache.pig.impl.util.ConfigurationValidator.getValidatedProperties(Properties)",4,0,n/a,18,1,1,6,2
"org.apache.pig.impl.util.ConfigurationValidator.validatePigProperties(Properties)",2,4,n/a,8,0,1,2,1
"org.apache.pig.impl.util.HashOutputStream.HashOutputStream(HashFunction)",1,1,n/a,3,0,1,1,1
"org.apache.pig.impl.util.HashOutputStream.getHashCode()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.HashOutputStream.write(int)",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.util.IdentityHashSet.add(E)",2,7,n/a,8,1,1,4,2
"org.apache.pig.impl.util.IdentityHashSet.addAll(Collection<? extends E>)",2,1,n/a,10,2,1,6,3
"org.apache.pig.impl.util.IdentityHashSet.clear()",1,2,n/a,3,0,0,1,1
"org.apache.pig.impl.util.IdentityHashSet.contains(Object)",1,4,n/a,3,0,1,1,1
"org.apache.pig.impl.util.IdentityHashSet.containsAll(Collection<?>)",1,0,n/a,6,1,1,4,3
"org.apache.pig.impl.util.IdentityHashSet.isEmpty()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.IdentityHashSet.iterator()",7,1,n/a,3,2,0,4,1
"org.apache.pig.impl.util.IdentityHashSet.remove(Object)",2,0,n/a,8,1,1,4,2
"org.apache.pig.impl.util.IdentityHashSet.removeAll(Collection<?>)",1,0,n/a,4,0,1,3,2
"org.apache.pig.impl.util.IdentityHashSet.retainAll(Collection<?>)",5,0,n/a,10,1,1,7,3
"org.apache.pig.impl.util.IdentityHashSet.size()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.IdentityHashSet.toArray()",1,0,n/a,3,0,0,1,1
"org.apache.pig.impl.util.IdentityHashSet.toArray(T[])",1,0,n/a,3,0,1,1,1
"org.apache.pig.impl.util.IdentityHashSet.toString()",12,0,n/a,16,1,0,13,3
"org.apache.pig.impl.util.JarManager.DefaultPigPackages.DefaultPigPackages(Class)",0,6,n/a,3,0,1,1,1
"org.apache.pig.impl.util.JarManager.DefaultPigPackages.getPkgClass()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.JarManager.addDependencyJars(Job,Class<?>...)",10,0,n/a,22,0,2,8,2
"org.apache.pig.impl.util.JarManager.addQualifiedJarsName(FileSystem,Set<String>,Class<?>...)",8,1,n/a,22,2,3,8,3
"org.apache.pig.impl.util.JarManager.addStream(JarOutputStream,String,InputStream,Map<String, String>,long)",7,2,n/a,32,1,5,10,3
"org.apache.pig.impl.util.JarManager.createCl(String,PigContext)",7,0,n/a,21,1,2,10,4
"org.apache.pig.impl.util.JarManager.createPigScriptUDFJar(OutputStream,PigContext,HashMap<String, String>)",34,1,n/a,43,2,3,27,8
"org.apache.pig.impl.util.JarManager.createPigScriptUDFJar(PigContext)",12,2,n/a,24,3,1,17,3
"org.apache.pig.impl.util.JarManager.findContainingJar(Class)",18,7,n/a,45,4,1,19,8
"org.apache.pig.impl.util.JarManager.getDefaultJars()",8,2,n/a,13,2,0,8,5
"org.apache.pig.impl.util.JavaCompilerHelper.JavaCompilerHelper()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.JavaCompilerHelper.JavaSourceFromString.JavaSourceFromString(String,String)",3,1,n/a,4,0,2,2,1
"org.apache.pig.impl.util.JavaCompilerHelper.JavaSourceFromString.getCharContent(boolean)",0,0,n/a,4,0,1,1,1
"org.apache.pig.impl.util.JavaCompilerHelper.addToClassPath(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.impl.util.JavaCompilerHelper.compile(String,JavaSourceFromString...)",18,1,n/a,19,2,2,14,3
"org.apache.pig.impl.util.JavaCompilerHelper.getClassPath()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.LineageTracer.getCounts()",2,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.LineageTracer.getMembers(Tuple)",6,0,n/a,10,1,1,7,3
"org.apache.pig.impl.util.LineageTracer.getMembershipMap()",8,0,n/a,15,2,0,10,3
"org.apache.pig.impl.util.LineageTracer.getRepresentative(Tuple)",3,7,n/a,9,1,1,5,2
"org.apache.pig.impl.util.LineageTracer.getWeightedCounts(IdentityHashSet<Tuple>,int)",16,1,n/a,18,1,2,14,6
"org.apache.pig.impl.util.LineageTracer.insert(Tuple)",6,0,n/a,10,1,1,5,2
"org.apache.pig.impl.util.LineageTracer.link(Tuple,Tuple)",5,1,n/a,10,1,2,7,3
"org.apache.pig.impl.util.LineageTracer.union(Tuple,Tuple)",3,0,n/a,4,0,2,1,1
"org.apache.pig.impl.util.LinkedMultiMap.LinkedMultiMap()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.LinkedMultiMap.LinkedMultiMap(int)",1,0,n/a,6,0,1,1,1
"org.apache.pig.impl.util.LogUtils.getPermissionException(Exception)",4,1,n/a,7,1,1,4,4
"org.apache.pig.impl.util.LogUtils.getPigException(Throwable)",6,2,n/a,21,3,1,11,10
"org.apache.pig.impl.util.LogUtils.warn(Object,String,PigWarning,Log)",3,19,n/a,9,1,4,4,2
"org.apache.pig.impl.util.LogUtils.writeLog(String,String,String,Log)",24,5,n/a,37,3,4,25,9
"org.apache.pig.impl.util.LogUtils.writeLog(Throwable,String,Log,boolean,String)",1,6,n/a,3,0,5,1,1
"org.apache.pig.impl.util.LogUtils.writeLog(Throwable,String,Log,boolean,String,boolean,boolean)",53,2,n/a,84,3,7,61,23
"org.apache.pig.impl.util.MultiMap.MultiMap()",1,23,n/a,3,0,0,1,1
"org.apache.pig.impl.util.MultiMap.MultiMap(int)",1,2,n/a,6,0,1,1,1
"org.apache.pig.impl.util.MultiMap.clear()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.MultiMap.containsKey(K)",1,6,n/a,3,0,1,1,1
"org.apache.pig.impl.util.MultiMap.containsValue(V)",1,0,n/a,3,0,1,1,1
"org.apache.pig.impl.util.MultiMap.get(K)",1,120,n/a,8,0,1,1,1
"org.apache.pig.impl.util.MultiMap.isEmpty()",1,2,n/a,3,0,0,1,1
"org.apache.pig.impl.util.MultiMap.keySet()",1,33,n/a,7,0,0,1,1
"org.apache.pig.impl.util.MultiMap.put(K,Collection<V>)",4,1,n/a,16,1,2,5,2
"org.apache.pig.impl.util.MultiMap.put(K,V)",5,23,n/a,17,1,2,6,2
"org.apache.pig.impl.util.MultiMap.remove(K,V)",8,9,n/a,25,2,2,13,5
"org.apache.pig.impl.util.MultiMap.removeKey(K)",1,14,n/a,8,0,1,1,1
"org.apache.pig.impl.util.MultiMap.size()",1,16,n/a,7,0,0,1,1
"org.apache.pig.impl.util.MultiMap.toString()",10,0,n/a,18,2,0,12,3
"org.apache.pig.impl.util.MultiMap.values()",6,12,n/a,18,1,0,8,3
"org.apache.pig.impl.util.NumValCarrier.NumValCarrier()",19,0,n/a,21,0,0,19,1
"org.apache.pig.impl.util.NumValCarrier.ValCarrier.ValCarrier(String)",0,5,n/a,3,0,1,1,1
"org.apache.pig.impl.util.NumValCarrier.ValCarrier.getNextString()",0,0,n/a,3,0,0,1,1
"org.apache.pig.impl.util.NumValCarrier.makeNameFromDataType(byte)",2,0,n/a,3,0,1,1,1
"org.apache.pig.impl.util.ObjectSerializer.decodeBytes(String)",3,1,n/a,3,0,1,1,1
"org.apache.pig.impl.util.ObjectSerializer.deserialize(String)",11,69,n/a,14,1,1,9,4
"org.apache.pig.impl.util.ObjectSerializer.encodeBytes(byte[])",3,1,n/a,3,0,1,1,2
"org.apache.pig.impl.util.ObjectSerializer.serialize(Serializable)",10,70,n/a,15,1,1,10,3
"org.apache.pig.impl.util.Pair.Pair(T,U)",0,39,n/a,8,0,2,2,1
"org.apache.pig.impl.util.Pair.equals(Object)",2,0,n/a,29,2,1,16,9
"org.apache.pig.impl.util.Pair.hashCode()",2,0,n/a,5,0,0,1,3
"org.apache.pig.impl.util.Pair.toString()",2,0,n/a,7,0,0,1,1
"org.apache.pig.impl.util.PropertiesUtil.loadDefaultProperties()",2,3,n/a,9,0,0,3,1
"org.apache.pig.impl.util.PropertiesUtil.loadDefaultProperties(Properties)",19,2,n/a,30,2,1,15,3
"org.apache.pig.impl.util.PropertiesUtil.loadPropertiesFromClasspath(Properties,String)",5,2,n/a,27,2,2,12,5
"org.apache.pig.impl.util.PropertiesUtil.loadPropertiesFromFile(Properties,String)",12,1,n/a,27,3,2,14,6
"org.apache.pig.impl.util.PropertiesUtil.setDefaultsIfUnset(Properties)",8,1,n/a,22,1,1,8,5
"org.apache.pig.impl.util.RewindableIterator.RewindableIterator(Iterator<E>)",1,0,n/a,4,0,1,2,1
"org.apache.pig.impl.util.RewindableIterator.hasNext()",2,0,n/a,3,0,0,1,2
"org.apache.pig.impl.util.RewindableIterator.hasNext(int)",4,0,n/a,12,2,1,7,3
"org.apache.pig.impl.util.RewindableIterator.next()",7,0,n/a,9,1,0,7,4
"org.apache.pig.impl.util.RewindableIterator.noRewind()",1,0,n/a,8,1,0,4,2
"org.apache.pig.impl.util.RewindableIterator.rewind()",1,0,n/a,4,0,0,3,2
"org.apache.pig.impl.util.Spillable.getMemorySize()",n/a,6,7,n/a,n/a,0,n/a,n/a
"org.apache.pig.impl.util.Spillable.spill()",n/a,1,12,n/a,n/a,0,n/a,n/a
"org.apache.pig.impl.util.SpillableMemoryManager.SpillableMemoryManager()",15,1,n/a,40,3,0,19,5
"org.apache.pig.impl.util.SpillableMemoryManager.SpillablePtr.SpillablePtr(Spillable,long)",1,1,n/a,4,0,2,2,1
"org.apache.pig.impl.util.SpillableMemoryManager.SpillablePtr.get()",1,4,n/a,3,0,0,1,1
"org.apache.pig.impl.util.SpillableMemoryManager.SpillablePtr.getMemorySize()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.SpillableMemoryManager.cleanupStaticData()",1,0,n/a,5,0,0,2,1
"org.apache.pig.impl.util.SpillableMemoryManager.clearSpillables()",5,0,n/a,13,3,0,6,3
"org.apache.pig.impl.util.SpillableMemoryManager.configure(Properties)",5,2,n/a,12,1,1,4,2
"org.apache.pig.impl.util.SpillableMemoryManager.getInstance()",0,3,n/a,3,0,0,1,1
"org.apache.pig.impl.util.SpillableMemoryManager.handleNotification(Notification,Object)",53,0,n/a,14,5,2,94,21
"org.apache.pig.impl.util.SpillableMemoryManager.registerSpillable(Spillable)",9,3,n/a,37,4,1,16,8
"org.apache.pig.impl.util.StorageUtil.bytesToTuple(byte[],int,int,byte)",5,2,n/a,23,2,4,11,4
"org.apache.pig.impl.util.StorageUtil.parseFieldDel(String)",16,2,n/a,39,2,1,22,10
"org.apache.pig.impl.util.StorageUtil.parseSingleQuotedString(String)",7,1,n/a,17,2,1,9,7
"org.apache.pig.impl.util.StorageUtil.putField(OutputStream,Object)",1,2,n/a,3,0,2,1,1
"org.apache.pig.impl.util.StorageUtil.putField(OutputStream,Object,StreamingDelimiters,boolean)",72,7,n/a,110,3,4,77,23
"org.apache.pig.impl.util.StorageUtil.putField(OutputStream,Object,boolean)",1,0,n/a,3,0,3,1,1
"org.apache.pig.impl.util.StorageUtil.readField(ArrayList<Object>,byte[],int,int)",3,2,n/a,9,1,4,3,2
"org.apache.pig.impl.util.StorageUtil.textToTuple(Text,byte)",3,0,n/a,10,0,2,1,1
"org.apache.pig.impl.util.StorageUtil.writeField(OutputStream,byte[],byte,boolean)",3,10,n/a,7,1,4,3,2
"org.apache.pig.impl.util.StringUtils.getPathStrings(String)",8,0,n/a,35,4,1,27,9
"org.apache.pig.impl.util.StringUtils.join(AbstractCollection<String>,String)",9,0,n/a,10,1,2,8,3
"org.apache.pig.impl.util.StringUtils.unescapeInputString(String)",21,1,n/a,76,4,1,58,17
"org.apache.pig.impl.util.TupleFormat.format(Tuple)",19,4,n/a,40,4,1,24,8
"org.apache.pig.impl.util.UDFContext.UDFContext()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.util.UDFContext.UDFContextKey.UDFContextKey()",0,0,n/a,2,0,0,0,1
"org.apache.pig.impl.util.UDFContext.UDFContextKey.UDFContextKey(String,String[])",0,1,n/a,4,0,2,2,1
"org.apache.pig.impl.util.UDFContext.UDFContextKey.equals(Object)",4,0,n/a,21,1,1,15,8
"org.apache.pig.impl.util.UDFContext.UDFContextKey.hashCode()",2,0,n/a,12,0,0,5,2
"org.apache.pig.impl.util.UDFContext.addJobConf(Configuration)",0,9,n/a,9,0,1,1,1
"org.apache.pig.impl.util.UDFContext.cleanupStaticData()",2,0,n/a,4,2,0,2,1
"org.apache.pig.impl.util.UDFContext.clone()",1,2,n/a,11,0,0,5,1
"org.apache.pig.impl.util.UDFContext.deserialize()",4,2,n/a,12,0,0,2,1
"org.apache.pig.impl.util.UDFContext.generateKey(Class<?>,String[])",2,2,n/a,3,0,2,1,1
"org.apache.pig.impl.util.UDFContext.getClientSystemProps()",0,2,n/a,9,0,0,1,1
"org.apache.pig.impl.util.UDFContext.getJobConf()",1,10,n/a,12,0,0,3,2
"org.apache.pig.impl.util.UDFContext.getUDFContext()",1,63,n/a,6,0,0,1,1
"org.apache.pig.impl.util.UDFContext.getUDFProperties(Class)",4,14,n/a,32,1,1,6,2
"org.apache.pig.impl.util.UDFContext.getUDFProperties(Class,String[])",4,10,n/a,34,1,2,6,2
"org.apache.pig.impl.util.UDFContext.isFrontend()",2,5,n/a,11,0,0,1,3
"org.apache.pig.impl.util.UDFContext.isUDFConfEmpty()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.UDFContext.reset()",1,3,n/a,3,0,0,1,1
"org.apache.pig.impl.util.UDFContext.serialize(Configuration)",4,5,n/a,12,0,1,2,1
"org.apache.pig.impl.util.UDFContext.setClientSystemProps(Properties)",0,3,n/a,6,0,1,1,1
"org.apache.pig.impl.util.UDFContext.setUdfContext(UDFContext)",1,5,n/a,6,0,1,1,1
"org.apache.pig.impl.util.UriUtil.isHDFSFile(String)",5,2,n/a,9,1,1,5,7
"org.apache.pig.impl.util.UriUtil.isHDFSFileOrLocalOrS3N(String,Configuration)",2,3,n/a,5,0,2,3,2
"org.apache.pig.impl.util.Utils.TEMPFILE_CODEC.TEMPFILE_CODEC(String)",0,5,n/a,3,0,1,1,1
"org.apache.pig.impl.util.Utils.TEMPFILE_CODEC.getHadoopCodecClassName()",0,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.Utils.TEMPFILE_CODEC.lowerName()",2,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.Utils.TEMPFILE_STORAGE.TEMPFILE_STORAGE(Class<? extends FileInputLoadFunc>,List<TEMPFILE_CODEC>)",0,3,n/a,6,0,2,2,1
"org.apache.pig.impl.util.Utils.TEMPFILE_STORAGE.ensureCodecSupported(String)",3,3,n/a,7,1,1,3,2
"org.apache.pig.impl.util.Utils.TEMPFILE_STORAGE.getStorageClass()",0,4,n/a,3,0,0,1,1
"org.apache.pig.impl.util.Utils.TEMPFILE_STORAGE.lowerName()",2,3,n/a,3,0,0,1,1
"org.apache.pig.impl.util.Utils.TEMPFILE_STORAGE.supportedCodecsToString()",5,2,n/a,13,2,0,8,3
"org.apache.pig.impl.util.Utils.buildSimpleFuncSpec(String,byte...)",5,0,n/a,7,1,2,4,2
"org.apache.pig.impl.util.Utils.checkNullAndClass(Object,Object)",3,2,n/a,21,2,2,5,3
"org.apache.pig.impl.util.Utils.checkNullEquals(Object,Object,boolean)",1,3,n/a,24,2,3,6,5
"org.apache.pig.impl.util.Utils.depthFirstSearchForFile(FileStatus[],FileSystem)",1,2,n/a,12,0,2,1,1
"org.apache.pig.impl.util.Utils.depthFirstSearchForFile(FileStatus[],FileSystem,PathFilter)",13,3,n/a,4,3,3,9,5
"org.apache.pig.impl.util.Utils.extractHeapSizeInMB(String)",9,1,n/a,22,2,1,14,7
"org.apache.pig.impl.util.Utils.getCompositeStream(InputStream,Properties)",6,3,n/a,11,1,2,6,2
"org.apache.pig.impl.util.Utils.getSchema(LoadFunc,String,boolean,Job)",13,4,n/a,35,2,4,20,6
"org.apache.pig.impl.util.Utils.getSchemaFromBagSchemaString(String)",3,0,n/a,16,0,1,2,1
"org.apache.pig.impl.util.Utils.getSchemaFromString(String)",3,34,n/a,13,0,1,4,1
"org.apache.pig.impl.util.Utils.getSchemaWithInputSourceTag(ResourceSchema,String)",4,2,n/a,20,1,2,9,2
"org.apache.pig.impl.util.Utils.getScriptSchema(String,Configuration)",3,0,n/a,19,1,2,5,2
"org.apache.pig.impl.util.Utils.getScriptSchemaKey(String)",0,2,n/a,3,0,1,1,1
"org.apache.pig.impl.util.Utils.getStackStraceStr(Throwable)",4,2,n/a,6,0,1,4,1
"org.apache.pig.impl.util.Utils.getStringFromArray(String[])",4,1,n/a,8,1,1,5,2
"org.apache.pig.impl.util.Utils.getTmpFileCompressorName(PigContext)",11,8,n/a,9,1,1,6,3
"org.apache.pig.impl.util.Utils.getTmpFileStorage(Properties)",11,3,n/a,17,1,1,9,4
"org.apache.pig.impl.util.Utils.getTmpFileStorageClass(Properties)",2,2,n/a,3,0,1,1,1
"org.apache.pig.impl.util.Utils.getTmpFileStorageObject(Configuration)",5,2,n/a,10,1,1,5,3
"org.apache.pig.impl.util.Utils.isHadoop2()",2,2,n/a,6,0,0,4,2
"org.apache.pig.impl.util.Utils.isHadoop23()",2,2,n/a,6,0,0,4,2
"org.apache.pig.impl.util.Utils.isLocal(PigContext,Configuration)",3,7,n/a,3,0,2,1,2
"org.apache.pig.impl.util.Utils.isVendorIBM()",2,2,n/a,8,0,0,1,1
"org.apache.pig.impl.util.Utils.mergeCollection(Collection<O>,Collection<O>)",9,9,n/a,29,3,2,16,9
"org.apache.pig.impl.util.Utils.parseConstant(String)",4,1,n/a,6,0,1,3,1
"org.apache.pig.impl.util.Utils.parseSchema(String)",4,2,n/a,6,0,1,3,1
"org.apache.pig.impl.util.Utils.recomputeProperties(JobConf,Properties)",13,3,n/a,32,3,2,12,6
"org.apache.pig.impl.util.Utils.setDefaultTimeZone(Configuration)",4,4,n/a,7,1,1,3,3
"org.apache.pig.impl.util.Utils.setMapredCompressionCodecProps(Configuration)",10,1,n/a,12,1,1,6,4
"org.apache.pig.impl.util.Utils.setTmpFileCompressionOnConf(PigContext,Configuration)",21,2,n/a,39,3,2,21,9
"org.apache.pig.impl.util.Utils.slashisize(String)",1,5,n/a,10,0,1,1,1
"org.apache.pig.impl.util.Utils.substituteVars(String)",12,1,n/a,24,2,1,18,5
"org.apache.pig.impl.util.WrappedIOException.wrap(String,Throwable)",5,1,n/a,7,0,2,4,1
"org.apache.pig.impl.util.WrappedIOException.wrap(Throwable)",2,0,n/a,3,0,1,1,1
"org.apache.pig.impl.util.avro.AvroArrayReader.AvroArrayReader(Schema)",0,1,n/a,7,0,1,1,1
"org.apache.pig.impl.util.avro.AvroArrayReader.close()",1,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.avro.AvroArrayReader.getCurrentKey()",1,0,n/a,5,0,0,1,1
"org.apache.pig.impl.util.avro.AvroArrayReader.getCurrentValue()",6,0,n/a,22,1,0,5,2
"org.apache.pig.impl.util.avro.AvroArrayReader.getProgress()",2,0,n/a,9,1,0,3,2
"org.apache.pig.impl.util.avro.AvroArrayReader.initialize(InputSplit,TaskAttemptContext)",9,0,n/a,13,0,2,6,1
"org.apache.pig.impl.util.avro.AvroArrayReader.nextKeyValue()",2,0,n/a,12,1,0,6,3
"org.apache.pig.impl.util.avro.AvroBagWrapper.AvroBagWrapper(GenericArray<T>)",0,3,n/a,5,0,1,1,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.add(Tuple)",1,94,n/a,2,0,1,1,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.addAll(DataBag)",1,6,n/a,6,1,1,2,2
"org.apache.pig.impl.util.avro.AvroBagWrapper.clear()",1,7,n/a,1,0,0,1,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.compareTo(Object)",4,0,n/a,11,1,1,6,3
"org.apache.pig.impl.util.avro.AvroBagWrapper.getMemorySize()",0,7,n/a,4,0,0,1,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.isDistinct()",0,4,n/a,1,0,0,1,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.isSorted()",0,4,n/a,1,0,0,1,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.iterator()",7,149,n/a,8,3,0,4,2
"org.apache.pig.impl.util.avro.AvroBagWrapper.markStale(boolean)",0,0,n/a,1,0,1,0,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.readFields(DataInput)",3,0,n/a,5,0,1,1,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.size()",1,83,n/a,1,0,0,1,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.spill()",0,1,n/a,2,0,0,1,1
"org.apache.pig.impl.util.avro.AvroBagWrapper.write(DataOutput)",3,0,n/a,5,0,1,1,1
"org.apache.pig.impl.util.avro.AvroMapWrapper.AvroMapWrapper(Map<CharSequence, Object>)",5,2,n/a,11,0,1,4,3
"org.apache.pig.impl.util.avro.AvroMapWrapper.clear()",1,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.avro.AvroMapWrapper.containsKey(Object)",3,0,n/a,8,1,1,3,3
"org.apache.pig.impl.util.avro.AvroMapWrapper.containsValue(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.util.avro.AvroMapWrapper.entrySet()",9,0,n/a,14,2,0,8,3
"org.apache.pig.impl.util.avro.AvroMapWrapper.get(Object)",4,0,n/a,10,1,1,5,3
"org.apache.pig.impl.util.avro.AvroMapWrapper.isEmpty()",1,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.avro.AvroMapWrapper.keySet()",5,0,n/a,11,2,0,6,3
"org.apache.pig.impl.util.avro.AvroMapWrapper.put(CharSequence,Object)",1,0,n/a,4,0,2,1,1
"org.apache.pig.impl.util.avro.AvroMapWrapper.putAll(Map<? extends CharSequence, ? extends Object>)",1,0,n/a,5,0,1,1,1
"org.apache.pig.impl.util.avro.AvroMapWrapper.remove(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.util.avro.AvroMapWrapper.size()",1,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.avro.AvroMapWrapper.values()",4,0,n/a,4,2,0,2,1
"org.apache.pig.impl.util.avro.AvroRecordReader.AvroRecordReader(Schema)",0,1,n/a,7,0,1,1,1
"org.apache.pig.impl.util.avro.AvroRecordReader.close()",1,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.avro.AvroRecordReader.getCurrentKey()",1,0,n/a,5,0,0,1,1
"org.apache.pig.impl.util.avro.AvroRecordReader.getCurrentValue()",0,0,n/a,15,1,0,3,2
"org.apache.pig.impl.util.avro.AvroRecordReader.getProgress()",2,0,n/a,9,1,0,3,2
"org.apache.pig.impl.util.avro.AvroRecordReader.initialize(InputSplit,TaskAttemptContext)",9,0,n/a,13,0,2,6,1
"org.apache.pig.impl.util.avro.AvroRecordReader.nextKeyValue()",5,0,n/a,15,1,0,8,4
"org.apache.pig.impl.util.avro.AvroRecordWriter.AvroRecordWriter(Path,Configuration)",0,2,n/a,12,0,2,2,1
"org.apache.pig.impl.util.avro.AvroRecordWriter.close(TaskAttemptContext)",1,0,n/a,5,0,1,1,1
"org.apache.pig.impl.util.avro.AvroRecordWriter.configureDataFileWriter(DataFileWriter<Record>,JobConf)",27,1,n/a,26,1,2,11,6
"org.apache.pig.impl.util.avro.AvroRecordWriter.prepareToWrite(Schema)",10,1,n/a,12,1,1,7,2
"org.apache.pig.impl.util.avro.AvroRecordWriter.write(NullWritable,Object)",3,0,n/a,12,1,2,4,3
"org.apache.pig.impl.util.avro.AvroStorageDataConversionUtilities.packIntoAvro(DataBag,Schema)",15,1,n/a,30,3,2,10,6
"org.apache.pig.impl.util.avro.AvroStorageDataConversionUtilities.packIntoAvro(Map<CharSequence, Object>,Schema)",8,2,n/a,9,1,2,5,2
"org.apache.pig.impl.util.avro.AvroStorageDataConversionUtilities.packIntoAvro(Object,Schema)",12,2,n/a,28,2,2,19,10
"org.apache.pig.impl.util.avro.AvroStorageDataConversionUtilities.packIntoAvro(Tuple,Schema)",9,3,n/a,22,2,2,8,3
"org.apache.pig.impl.util.avro.AvroStorageDataConversionUtilities.utf8(CharSequence)",5,1,n/a,9,1,1,5,2
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.avroSchemaToResourceSchema(Schema,Boolean)",3,1,n/a,15,0,2,1,1
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.avroSchemaToResourceSchema(Schema,Set<Schema>,Map<String, ResourceSchema>,Boolean)",19,5,n/a,48,3,4,20,6
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.createNullableUnion(Schema)",3,3,n/a,8,0,1,1,1
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.createNullableUnion(Type)",2,3,n/a,8,0,1,1,1
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.fieldToResourceFieldSchema(Field,Set<Schema>,Map<String, ResourceSchema>,Boolean)",65,2,n/a,121,3,4,76,15
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.getPigType(Schema)",21,8,n/a,52,2,1,40,22
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.isNullableUnion(Schema)",11,4,n/a,14,0,1,1,5
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.isUnionOfSimpleTypes(Schema)",2,1,n/a,24,2,1,19,5
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.newSchemaFromRequiredFieldList(Schema,List<RequiredField>)",28,1,n/a,52,4,2,21,8
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.newSchemaFromRequiredFieldList(Schema,RequiredFieldList)",2,1,n/a,12,0,2,1,1
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.removeSimpleUnion(Schema)",3,4,n/a,17,3,1,6,4
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.resourceFieldSchemaToAvroSchema(String,String,byte,String,ResourceSchema,Map<String, List<Schema>>,Boolean)",52,2,n/a,125,4,7,68,28
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.resourceSchemaToAvroSchema(ResourceSchema,String,String,Map<String, List<Schema>>,Boolean)",20,5,n/a,44,2,5,14,7
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities.toAvroName(String,Boolean)",3,2,n/a,24,1,2,7,4
"org.apache.pig.impl.util.avro.AvroTupleWrapper.AvroTupleWrapper(T)",0,5,n/a,7,0,1,1,1
"org.apache.pig.impl.util.avro.AvroTupleWrapper.append(Object)",17,28,n/a,26,1,1,22,9
"org.apache.pig.impl.util.avro.AvroTupleWrapper.compareTo(Object)",3,0,n/a,10,1,1,3,2
"org.apache.pig.impl.util.avro.AvroTupleWrapper.get(int)",16,682,n/a,28,1,1,21,10
"org.apache.pig.impl.util.avro.AvroTupleWrapper.getAll()",7,31,n/a,13,2,0,7,3
"org.apache.pig.impl.util.avro.AvroTupleWrapper.getMemorySize()",1,15,n/a,4,0,0,1,1
"org.apache.pig.impl.util.avro.AvroTupleWrapper.getMemorySize(IndexedRecord)",17,1,n/a,38,2,1,30,10
"org.apache.pig.impl.util.avro.AvroTupleWrapper.getPigObject(Object)",9,5,n/a,24,1,1,15,8
"org.apache.pig.impl.util.avro.AvroTupleWrapper.getType(int)",5,5,n/a,5,0,1,2,1
"org.apache.pig.impl.util.avro.AvroTupleWrapper.isNull(int)",1,4,n/a,4,0,1,1,2
"org.apache.pig.impl.util.avro.AvroTupleWrapper.iterator()",7,0,n/a,4,2,0,2,1
"org.apache.pig.impl.util.avro.AvroTupleWrapper.readFields(DataInput)",3,0,n/a,6,0,1,1,1
"org.apache.pig.impl.util.avro.AvroTupleWrapper.reference(Tuple)",0,1,n/a,5,0,1,1,1
"org.apache.pig.impl.util.avro.AvroTupleWrapper.set(int,Object)",1,279,n/a,4,0,2,1,1
"org.apache.pig.impl.util.avro.AvroTupleWrapper.size()",3,275,n/a,4,0,0,1,1
"org.apache.pig.impl.util.avro.AvroTupleWrapper.toDelimitedString(String)",10,3,n/a,18,2,1,11,4
"org.apache.pig.impl.util.avro.AvroTupleWrapper.write(DataOutput)",3,0,n/a,5,0,1,1,1
"org.apache.pig.impl.util.hive.HiveUtils.Field.Field(String,ObjectInspector,int)",0,2,n/a,5,0,3,3,1
"org.apache.pig.impl.util.hive.HiveUtils.Field.getFieldComment()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.Field.getFieldID()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.Field.getFieldName()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.Field.getFieldObjectInspector()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigDataByteArrayObjectInspector.PigDataByteArrayObjectInspector()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigDataByteArrayObjectInspector.getPrimitiveJavaObject(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigDataByteArrayObjectInspector.getPrimitiveWritableObject(Object)",3,0,n/a,6,0,1,1,3
"org.apache.pig.impl.util.hive.HiveUtils.PigDecimalObjectInspector.PigDecimalObjectInspector()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigDecimalObjectInspector.getPrimitiveJavaObject(Object)",2,0,n/a,8,1,1,3,4
"org.apache.pig.impl.util.hive.HiveUtils.PigDecimalObjectInspector.getPrimitiveWritableObject(Object)",4,0,n/a,8,1,1,3,4
"org.apache.pig.impl.util.hive.HiveUtils.PigJodaTimeStampObjectInspector.PigJodaTimeStampObjectInspector()",1,1,n/a,3,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigJodaTimeStampObjectInspector.getPrimitiveJavaObject(Object)",2,0,n/a,4,0,1,1,2
"org.apache.pig.impl.util.hive.HiveUtils.PigJodaTimeStampObjectInspector.getPrimitiveWritableObject(Object)",3,0,n/a,4,0,1,1,2
"org.apache.pig.impl.util.hive.HiveUtils.PigListObjectInspector.PigListObjectInspector(ListTypeInfo)",2,1,n/a,3,0,1,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigListObjectInspector.equals(Object)",3,0,n/a,11,1,1,6,4
"org.apache.pig.impl.util.hive.HiveUtils.PigListObjectInspector.getCategory()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigListObjectInspector.getList(Object)",6,0,n/a,18,3,1,9,4
"org.apache.pig.impl.util.hive.HiveUtils.PigListObjectInspector.getListElement(Object,int)",6,0,n/a,25,3,2,14,6
"org.apache.pig.impl.util.hive.HiveUtils.PigListObjectInspector.getListElementObjectInspector()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigListObjectInspector.getListLength(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigListObjectInspector.getTypeName()",1,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector.PigMapObjectInspector(MapTypeInfo)",2,1,n/a,4,0,1,2,1
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector.equals(Object)",4,0,n/a,11,1,1,6,5
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector.getCategory()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector.getMap(Object)",0,0,n/a,4,0,1,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector.getMapKeyObjectInspector()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector.getMapSize(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector.getMapValueElement(Object,Object)",1,0,n/a,4,0,2,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector.getMapValueObjectInspector()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector.getTypeName()",2,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector.PigStructInspector(List<StructField>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector.PigStructInspector(StructTypeInfo)",10,1,n/a,9,1,1,7,2
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector.equals(Object)",13,0,n/a,23,3,1,15,8
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector.getAllStructFieldRefs()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector.getCategory()",0,0,n/a,4,0,0,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector.getStructFieldData(Object,StructField)",2,0,n/a,10,1,2,5,2
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector.getStructFieldRef(String)",2,0,n/a,9,2,1,4,3
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector.getStructFieldsDataAsList(Object)",1,0,n/a,4,0,1,1,1
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector.getTypeName()",13,0,n/a,16,2,0,13,3
"org.apache.pig.impl.util.hive.HiveUtils.convertHiveToPig(Object,ObjectInspector,boolean[])",34,10,n/a,70,4,3,54,16
"org.apache.pig.impl.util.hive.HiveUtils.createObjectInspector(TypeInfo)",14,9,n/a,44,2,1,36,17
"org.apache.pig.impl.util.hive.HiveUtils.getConstantObjectInspector(Object)",10,2,n/a,18,1,1,15,8
"org.apache.pig.impl.util.hive.HiveUtils.getPrimaryFromHive(Object,PrimitiveObjectInspector)",20,1,n/a,50,1,2,43,12
"org.apache.pig.impl.util.hive.HiveUtils.getResourceFieldSchema(TypeInfo)",48,8,n/a,99,2,1,92,22
"org.apache.pig.impl.util.hive.HiveUtils.getTypeInfo(ResourceFieldSchema)",37,7,n/a,76,2,1,66,21
"org.apache.pig.newplan.BaseOperatorPlan.BaseOperatorPlan()",7,2,n/a,9,0,0,7,1
"org.apache.pig.newplan.BaseOperatorPlan.BaseOperatorPlan(BaseOperatorPlan)",7,1,n/a,11,0,1,7,1
"org.apache.pig.newplan.BaseOperatorPlan.add(Operator)",3,98,n/a,10,0,1,3,2
"org.apache.pig.newplan.BaseOperatorPlan.checkPredecessors(Operator,Operator)",11,2,n/a,19,2,2,17,9
"org.apache.pig.newplan.BaseOperatorPlan.connect(Operator,Operator)",4,52,n/a,13,1,2,5,4
"org.apache.pig.newplan.BaseOperatorPlan.connect(Operator,int,Operator,int)",4,22,n/a,19,1,4,5,4
"org.apache.pig.newplan.BaseOperatorPlan.createSoftLink(Operator,Operator)",2,4,n/a,9,0,2,2,1
"org.apache.pig.newplan.BaseOperatorPlan.disconnect(Operator,Operator)",10,33,n/a,25,1,2,8,3
"org.apache.pig.newplan.BaseOperatorPlan.explain(PrintStream,String,boolean)",0,1,n/a,2,0,3,0,1
"org.apache.pig.newplan.BaseOperatorPlan.getOperators()",1,48,n/a,3,0,0,1,1
"org.apache.pig.newplan.BaseOperatorPlan.getPredecessors(Operator)",1,142,n/a,10,0,1,1,1
"org.apache.pig.newplan.BaseOperatorPlan.getSinks()",4,49,n/a,15,3,0,5,5
"org.apache.pig.newplan.BaseOperatorPlan.getSoftLinkPredecessors(Operator)",1,18,n/a,10,0,1,1,1
"org.apache.pig.newplan.BaseOperatorPlan.getSoftLinkSuccessors(Operator)",1,6,n/a,9,0,1,1,1
"org.apache.pig.newplan.BaseOperatorPlan.getSources()",4,72,n/a,15,3,0,5,5
"org.apache.pig.newplan.BaseOperatorPlan.getSuccessors(Operator)",1,114,n/a,9,0,1,1,1
"org.apache.pig.newplan.BaseOperatorPlan.insertBetween(Operator,Operator,Operator)",4,9,n/a,7,0,3,4,1
"org.apache.pig.newplan.BaseOperatorPlan.isConnected(Operator,Operator)",2,2,n/a,9,0,2,2,2
"org.apache.pig.newplan.BaseOperatorPlan.isEqual(OperatorPlan)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.BaseOperatorPlan.isEqual(OperatorPlan,OperatorPlan)",6,2,n/a,26,4,2,19,10
"org.apache.pig.newplan.BaseOperatorPlan.markDirty()",2,5,n/a,4,0,0,2,1
"org.apache.pig.newplan.BaseOperatorPlan.moveTree(Operator,BaseOperatorPlan)",14,1,n/a,27,4,2,14,5
"org.apache.pig.newplan.BaseOperatorPlan.pathExists(Operator,Operator)",4,2,n/a,18,2,2,7,6
"org.apache.pig.newplan.BaseOperatorPlan.remove(Operator)",10,19,n/a,18,1,1,6,5
"org.apache.pig.newplan.BaseOperatorPlan.removeAndReconnect(Operator)",31,10,n/a,69,3,1,43,23
"org.apache.pig.newplan.BaseOperatorPlan.removeSoftLink(Operator,Operator)",2,4,n/a,9,0,2,2,1
"org.apache.pig.newplan.BaseOperatorPlan.replace(Operator,Operator)",16,3,n/a,25,2,2,22,5
"org.apache.pig.newplan.BaseOperatorPlan.size()",1,12,n/a,6,0,0,1,1
"org.apache.pig.newplan.BaseOperatorPlan.toString()",4,0,n/a,11,1,0,6,2
"org.apache.pig.newplan.BaseOperatorPlan.trimBelow(Operator)",7,2,n/a,17,2,1,7,3
"org.apache.pig.newplan.DependencyOrderWalker.DependencyOrderWalker(OperatorPlan)",1,35,n/a,6,0,1,1,1
"org.apache.pig.newplan.DependencyOrderWalker.doAllPredecessors(Operator,Set<Operator>,Collection<Operator>)",8,3,n/a,17,3,3,7,5
"org.apache.pig.newplan.DependencyOrderWalker.spawnChildWalker(OperatorPlan)",1,7,n/a,4,0,1,1,1
"org.apache.pig.newplan.DependencyOrderWalker.walk(PlanVisitor)",5,16,n/a,25,1,1,9,4
"org.apache.pig.newplan.DepthFirstWalker.DepthFirstWalker(OperatorPlan)",1,7,n/a,3,0,1,1,1
"org.apache.pig.newplan.DepthFirstWalker.depthFirst(Operator,Collection<Operator>,Set<Operator>,PlanVisitor)",6,2,n/a,13,2,4,7,4
"org.apache.pig.newplan.DepthFirstWalker.spawnChildWalker(OperatorPlan)",1,7,n/a,4,0,1,1,1
"org.apache.pig.newplan.DepthFirstWalker.walk(PlanVisitor)",3,16,n/a,11,0,1,3,1
"org.apache.pig.newplan.DotPlanDumper.DotPlanDumper(BaseOperatorPlan,PrintStream)",4,0,n/a,4,0,2,1,1
"org.apache.pig.newplan.DotPlanDumper.DotPlanDumper(BaseOperatorPlan,PrintStream,boolean,Set<Operator>,Set<Operator>,Set<Operator>)",1,3,n/a,10,0,6,5,1
"org.apache.pig.newplan.DotPlanDumper.connectInvisible(Operator,BaseOperatorPlan)",2,0,n/a,4,0,2,2,1
"org.apache.pig.newplan.DotPlanDumper.connectInvisibleInput(Operator,BaseOperatorPlan)",9,2,n/a,17,2,2,11,5
"org.apache.pig.newplan.DotPlanDumper.connectInvisibleInput(Operator,Operator,BaseOperatorPlan)",6,1,n/a,11,1,3,7,3
"org.apache.pig.newplan.DotPlanDumper.connectInvisibleOutput(Operator,BaseOperatorPlan)",10,4,n/a,20,2,2,11,6
"org.apache.pig.newplan.DotPlanDumper.dump()",5,7,n/a,12,1,0,7,3
"org.apache.pig.newplan.DotPlanDumper.dumpEdge(Operator,Operator)",20,2,n/a,29,1,2,19,7
"org.apache.pig.newplan.DotPlanDumper.dumpInvisibleEdge(String,String)",4,3,n/a,6,0,2,4,1
"org.apache.pig.newplan.DotPlanDumper.dumpInvisibleInput(Operator)",6,1,n/a,6,0,1,4,1
"org.apache.pig.newplan.DotPlanDumper.dumpInvisibleInput(Operator,Operator)",6,1,n/a,6,0,2,4,1
"org.apache.pig.newplan.DotPlanDumper.dumpInvisibleOperators(Operator)",2,1,n/a,4,0,1,2,1
"org.apache.pig.newplan.DotPlanDumper.dumpInvisibleOutput(Operator)",6,3,n/a,6,0,1,4,1
"org.apache.pig.newplan.DotPlanDumper.dumpMultiInputNestedOperator(Operator,MultiMap<Operator, BaseOperatorPlan>)",25,1,n/a,29,2,2,22,5
"org.apache.pig.newplan.DotPlanDumper.dumpMultiOutputNestedOperator(Operator,Collection<BaseOperatorPlan>)",4,2,n/a,9,1,2,5,2
"org.apache.pig.newplan.DotPlanDumper.dumpNestedOperator(Operator,Collection<BaseOperatorPlan>)",14,1,n/a,19,1,2,14,3
"org.apache.pig.newplan.DotPlanDumper.dumpOperator(Operator)",6,4,n/a,7,0,1,4,1
"org.apache.pig.newplan.DotPlanDumper.getAttributes(Operator)",1,4,n/a,9,0,1,3,1
"org.apache.pig.newplan.DotPlanDumper.getClusterID(Operator)",1,4,n/a,3,0,1,1,1
"org.apache.pig.newplan.DotPlanDumper.getClusterID(Operator,Operator)",2,2,n/a,3,0,2,1,1
"org.apache.pig.newplan.DotPlanDumper.getID(Operator)",2,11,n/a,3,0,1,1,1
"org.apache.pig.newplan.DotPlanDumper.getInvisibleAttributes(Operator)",0,3,n/a,3,0,1,1,1
"org.apache.pig.newplan.DotPlanDumper.getName(Operator)",1,1,n/a,7,0,1,1,1
"org.apache.pig.newplan.DotPlanDumper.getSubgraphID(Operator,Operator,boolean)",2,3,n/a,10,1,3,5,2
"org.apache.pig.newplan.DotPlanDumper.getSubgraphID(Operator,boolean)",1,8,n/a,10,1,2,5,2
"org.apache.pig.newplan.DotPlanDumper.makeDumper(BaseOperatorPlan,PrintStream)",1,5,n/a,7,0,2,1,1
"org.apache.pig.newplan.DotPlanDumper.reverse(BaseOperatorPlan)",0,4,n/a,3,0,1,1,1
"org.apache.pig.newplan.FilterExtractor.FilterExtractor(LogicalExpressionPlan)",2,2,n/a,11,0,1,3,1
"org.apache.pig.newplan.FilterExtractor.addToFilterPlan(LogicalExpression)",1,8,n/a,5,0,1,2,1
"org.apache.pig.newplan.FilterExtractor.andLogicalExpressions(LogicalExpressionPlan,LogicalExpression,LogicalExpression)",5,4,n/a,17,1,3,10,5
"org.apache.pig.newplan.FilterExtractor.canPushDown()",0,0,n/a,6,0,0,1,1
"org.apache.pig.newplan.FilterExtractor.checkPushDown(BinaryExpression)",21,2,n/a,63,2,1,28,7
"org.apache.pig.newplan.FilterExtractor.checkPushDown(LogicalExpression)",6,3,n/a,21,1,1,15,5
"org.apache.pig.newplan.FilterExtractor.checkPushDown(ProjectExpression)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.FilterExtractor.checkPushDown(UnaryExpression)",6,1,n/a,22,2,1,15,5
"org.apache.pig.newplan.FilterExtractor.getExpression(BinaryExpression,OpType)",5,14,n/a,5,0,2,1,1
"org.apache.pig.newplan.FilterExtractor.getExpression(LogicalExpression)",34,5,n/a,63,2,1,53,23
"org.apache.pig.newplan.FilterExtractor.getExpression(UnaryExpression,OpType)",3,2,n/a,4,0,2,1,1
"org.apache.pig.newplan.FilterExtractor.getFilteredPlan()",0,1,n/a,6,0,0,1,1
"org.apache.pig.newplan.FilterExtractor.getPushDownExpression()",0,2,n/a,6,0,0,1,1
"org.apache.pig.newplan.FilterExtractor.isFilterRemovable()",0,1,n/a,6,0,0,1,1
"org.apache.pig.newplan.FilterExtractor.isSupportedOpType(BinaryExpression)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.FilterExtractor.isSupportedOpType(UnaryExpression)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.FilterExtractor.orLogicalExpressions(LogicalExpressionPlan,LogicalExpression,LogicalExpression)",5,4,n/a,15,1,3,8,5
"org.apache.pig.newplan.FilterExtractor.removeFromFilteredPlan(Operator)",8,5,n/a,21,1,1,13,4
"org.apache.pig.newplan.FilterExtractor.visit()",4,2,n/a,14,1,0,6,2
"org.apache.pig.newplan.Operator.Operator(String,OperatorPlan)",2,4,n/a,6,0,2,4,1
"org.apache.pig.newplan.Operator.accept(PlanVisitor)",n/a,7,48,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.Operator.annotate(String,Object)",1,30,n/a,8,0,2,1,1
"org.apache.pig.newplan.Operator.getAnnotation(String)",1,19,n/a,9,0,1,1,1
"org.apache.pig.newplan.Operator.getLocation()",0,57,n/a,3,0,0,1,1
"org.apache.pig.newplan.Operator.getName()",0,26,n/a,3,0,0,1,1
"org.apache.pig.newplan.Operator.getPlan()",0,112,n/a,7,0,0,1,1
"org.apache.pig.newplan.Operator.isEqual(Operator)",n/a,39,45,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.Operator.removeAnnotation(String)",1,4,n/a,8,0,1,1,1
"org.apache.pig.newplan.Operator.setLocation(SourceLocation)",0,42,n/a,3,0,1,1,1
"org.apache.pig.newplan.Operator.setPlan(OperatorPlan)",0,5,n/a,3,0,1,1,1
"org.apache.pig.newplan.OperatorPlan.add(Operator)",n/a,23,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.connect(Operator,Operator)",n/a,17,2,n/a,n/a,2,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.connect(Operator,int,Operator,int)",n/a,13,2,n/a,n/a,4,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.createSoftLink(Operator,Operator)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.disconnect(Operator,Operator)",n/a,15,2,n/a,n/a,2,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.getOperators()",n/a,10,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.getPredecessors(Operator)",n/a,100,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.getSinks()",n/a,9,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.getSoftLinkPredecessors(Operator)",n/a,17,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.getSoftLinkSuccessors(Operator)",n/a,4,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.getSources()",n/a,25,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.getSuccessors(Operator)",n/a,79,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.insertBetween(Operator,Operator,Operator)",n/a,7,2,n/a,n/a,3,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.isEqual(OperatorPlan)",n/a,0,4,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.pathExists(Operator,Operator)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.remove(Operator)",n/a,4,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.removeAndReconnect(Operator)",n/a,6,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.removeSoftLink(Operator,Operator)",n/a,4,2,n/a,n/a,2,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.replace(Operator,Operator)",n/a,3,2,n/a,n/a,2,n/a,n/a
"org.apache.pig.newplan.OperatorPlan.size()",n/a,1,2,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.OperatorSubPlan.OperatorSubPlan(OperatorPlan)",3,14,n/a,6,0,1,4,1
"org.apache.pig.newplan.OperatorSubPlan.add(Operator)",3,47,n/a,6,0,1,3,1
"org.apache.pig.newplan.OperatorSubPlan.connect(Operator,Operator)",1,17,n/a,4,0,2,1,1
"org.apache.pig.newplan.OperatorSubPlan.connect(Operator,int,Operator,int)",1,13,n/a,4,0,4,1,1
"org.apache.pig.newplan.OperatorSubPlan.createSoftLink(Operator,Operator)",1,3,n/a,4,0,2,1,1
"org.apache.pig.newplan.OperatorSubPlan.disconnect(Operator,Operator)",1,15,n/a,4,0,2,1,1
"org.apache.pig.newplan.OperatorSubPlan.getBasePlan()",0,3,n/a,3,0,0,1,1
"org.apache.pig.newplan.OperatorSubPlan.getOperators()",1,11,n/a,4,0,0,1,1
"org.apache.pig.newplan.OperatorSubPlan.getPredecessors(Operator)",4,101,n/a,16,4,1,9,5
"org.apache.pig.newplan.OperatorSubPlan.getSinks()",4,9,n/a,11,3,0,5,5
"org.apache.pig.newplan.OperatorSubPlan.getSoftLinkPredecessors(Operator)",1,17,n/a,4,0,1,1,1
"org.apache.pig.newplan.OperatorSubPlan.getSoftLinkSuccessors(Operator)",1,4,n/a,4,0,1,1,1
"org.apache.pig.newplan.OperatorSubPlan.getSources()",4,26,n/a,11,3,0,5,5
"org.apache.pig.newplan.OperatorSubPlan.getSuccessors(Operator)",4,80,n/a,16,4,1,9,5
"org.apache.pig.newplan.OperatorSubPlan.insertBetween(Operator,Operator,Operator)",1,7,n/a,5,0,3,1,1
"org.apache.pig.newplan.OperatorSubPlan.isEqual(OperatorPlan)",1,0,n/a,4,0,1,1,1
"org.apache.pig.newplan.OperatorSubPlan.pathExists(Operator,Operator)",0,1,n/a,5,0,2,1,1
"org.apache.pig.newplan.OperatorSubPlan.remove(Operator)",3,4,n/a,6,0,1,3,1
"org.apache.pig.newplan.OperatorSubPlan.removeAndReconnect(Operator)",1,6,n/a,5,0,1,1,1
"org.apache.pig.newplan.OperatorSubPlan.removeSoftLink(Operator,Operator)",1,4,n/a,4,0,2,1,1
"org.apache.pig.newplan.OperatorSubPlan.replace(Operator,Operator)",1,3,n/a,5,0,2,1,1
"org.apache.pig.newplan.OperatorSubPlan.size()",1,3,n/a,4,0,0,1,1
"org.apache.pig.newplan.PartitionFilterExtractor.PartitionFilterExtractor(LogicalExpressionPlan,List<String>)",2,1,n/a,10,0,2,2,1
"org.apache.pig.newplan.PartitionFilterExtractor.checkPushDown(ProjectExpression)",4,1,n/a,13,1,1,8,2
"org.apache.pig.newplan.PartitionFilterExtractor.isSupportedOpType(BinaryExpression)",0,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.PartitionFilterExtractor.isSupportedOpType(UnaryExpression)",0,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.PlanDumper.PlanDumper(BaseOperatorPlan,PrintStream)",0,2,n/a,4,0,2,2,1
"org.apache.pig.newplan.PlanDumper.dump()",18,6,n/a,36,3,0,23,10
"org.apache.pig.newplan.PlanDumper.dumpEdge(Operator,Operator)",3,2,n/a,9,0,2,1,1
"org.apache.pig.newplan.PlanDumper.dumpMultiInputNestedOperator(Operator,MultiMap<Operator, BaseOperatorPlan>)",5,1,n/a,15,2,2,5,3
"org.apache.pig.newplan.PlanDumper.dumpMultiOutputNestedOperator(Operator,Collection<BaseOperatorPlan>)",5,2,n/a,16,2,2,6,3
"org.apache.pig.newplan.PlanDumper.dumpNestedOperator(Operator,Collection<BaseOperatorPlan>)",3,1,n/a,13,1,2,4,2
"org.apache.pig.newplan.PlanDumper.dumpOperator(Operator)",3,4,n/a,7,0,1,1,1
"org.apache.pig.newplan.PlanDumper.getMultiInputNestedPlans(Operator)",1,1,n/a,9,0,1,1,1
"org.apache.pig.newplan.PlanDumper.getMultiOutputNestedPlans(Operator)",1,1,n/a,9,0,1,1,1
"org.apache.pig.newplan.PlanDumper.getNestedPlans(Operator)",1,1,n/a,9,0,1,1,1
"org.apache.pig.newplan.PlanDumper.isVerbose()",0,0,n/a,3,0,0,1,1
"org.apache.pig.newplan.PlanDumper.join(String,String[])",2,3,n/a,16,2,2,8,4
"org.apache.pig.newplan.PlanDumper.makeDumper(BaseOperatorPlan,PrintStream)",1,3,n/a,10,0,2,1,1
"org.apache.pig.newplan.PlanDumper.setVerbose(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.PlanEdge.PlanEdge()",1,5,n/a,3,0,0,1,1
"org.apache.pig.newplan.PlanEdge.PlanEdge(int)",1,0,n/a,6,0,1,1,1
"org.apache.pig.newplan.PlanEdge.put(Operator,Operator,int)",6,2,n/a,23,2,3,8,3
"org.apache.pig.newplan.PlanEdge.removeWithPosition(Operator,Operator)",8,2,n/a,32,2,2,19,6
"org.apache.pig.newplan.PlanEdge.shallowClone()",7,4,n/a,10,1,0,6,2
"org.apache.pig.newplan.PlanVisitor.PlanVisitor(OperatorPlan,PlanWalker)",1,4,n/a,9,0,2,3,1
"org.apache.pig.newplan.PlanVisitor.getPlan()",0,0,n/a,3,0,0,1,1
"org.apache.pig.newplan.PlanVisitor.popWalker()",3,16,n/a,12,1,0,3,2
"org.apache.pig.newplan.PlanVisitor.pushWalker(PlanWalker)",1,16,n/a,9,0,1,2,1
"org.apache.pig.newplan.PlanVisitor.visit()",1,74,n/a,7,0,0,1,1
"org.apache.pig.newplan.PlanWalker.PlanWalker(OperatorPlan)",0,5,n/a,6,0,1,1,1
"org.apache.pig.newplan.PlanWalker.getPlan()",0,11,n/a,3,0,0,1,1
"org.apache.pig.newplan.PlanWalker.setPlan(OperatorPlan)",0,0,n/a,7,0,1,1,1
"org.apache.pig.newplan.PlanWalker.spawnChildWalker(OperatorPlan)",n/a,7,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.PlanWalker.walk(PlanVisitor)",n/a,16,6,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.PredicatePushDownFilterExtractor.PredicatePushDownFilterExtractor(LogicalExpressionPlan,List<String>,List<OpType>)",1,1,n/a,6,0,3,3,1
"org.apache.pig.newplan.PredicatePushDownFilterExtractor.checkPushDown(ProjectExpression)",4,1,n/a,13,1,1,8,2
"org.apache.pig.newplan.PredicatePushDownFilterExtractor.isSupportedOpType(BinaryExpression)",14,1,n/a,34,1,1,29,15
"org.apache.pig.newplan.PredicatePushDownFilterExtractor.isSupportedOpType(UnaryExpression)",2,1,n/a,12,1,1,7,4
"org.apache.pig.newplan.PredicatePushDownFilterExtractor.visit()",3,3,n/a,9,1,0,3,3
"org.apache.pig.newplan.ReverseDependencyOrderWalker.ReverseDependencyOrderWalker(OperatorPlan)",1,18,n/a,3,0,1,1,1
"org.apache.pig.newplan.ReverseDependencyOrderWalker.doAllSuccessors(Operator,Set<Operator>,Collection<Operator>)",8,2,n/a,17,3,3,7,5
"org.apache.pig.newplan.ReverseDependencyOrderWalker.spawnChildWalker(OperatorPlan)",1,7,n/a,4,0,1,1,1
"org.apache.pig.newplan.ReverseDependencyOrderWalker.walk(PlanVisitor)",5,16,n/a,25,1,1,9,4
"org.apache.pig.newplan.ReverseDependencyOrderWalkerWOSeenChk.ReverseDependencyOrderWalkerWOSeenChk(OperatorPlan)",1,9,n/a,3,0,1,1,1
"org.apache.pig.newplan.ReverseDependencyOrderWalkerWOSeenChk.doAllSuccessors(Operator,Collection<Operator>)",6,2,n/a,12,2,2,5,4
"org.apache.pig.newplan.ReverseDependencyOrderWalkerWOSeenChk.spawnChildWalker(OperatorPlan)",1,7,n/a,4,0,1,1,1
"org.apache.pig.newplan.ReverseDependencyOrderWalkerWOSeenChk.walk(PlanVisitor)",4,16,n/a,24,1,1,8,4
"org.apache.pig.newplan.SubtreeDependencyOrderWalker.SubtreeDependencyOrderWalker(OperatorPlan)",1,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.SubtreeDependencyOrderWalker.SubtreeDependencyOrderWalker(OperatorPlan,Operator)",1,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.SubtreeDependencyOrderWalker.walk(PlanVisitor)",4,16,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.DotLOPrinter.DotLOPrinter(BaseOperatorPlan,PrintStream)",4,1,n/a,4,0,2,1,1
"org.apache.pig.newplan.logical.DotLOPrinter.DotLOPrinter(BaseOperatorPlan,PrintStream,boolean,Set<Operator>,Set<Operator>,Set<Operator>)",1,2,n/a,7,0,6,1,1
"org.apache.pig.newplan.logical.DotLOPrinter.getAttributes(Operator)",3,4,n/a,13,1,1,7,3
"org.apache.pig.newplan.logical.DotLOPrinter.getMultiInputNestedPlans(Operator)",21,1,n/a,25,2,1,17,5
"org.apache.pig.newplan.logical.DotLOPrinter.getName(Operator)",18,2,n/a,16,1,1,11,4
"org.apache.pig.newplan.logical.DotLOPrinter.getNestedPlans(Operator)",13,1,n/a,23,1,1,14,7
"org.apache.pig.newplan.logical.DotLOPrinter.makeDumper(BaseOperatorPlan,PrintStream)",1,5,n/a,6,0,2,1,1
"org.apache.pig.newplan.logical.DotLOPrinter.reverse(BaseOperatorPlan)",0,4,n/a,6,0,1,3,2
"org.apache.pig.newplan.logical.Util.OpFinder.OpFinder(LogicalPlan,Class<C>)",2,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.Util.OpFinder.getFoundOps()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOCogroup)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOCross)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOCube)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LODistinct)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOFilter)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOForEach)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOGenerate)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOInnerLoad)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOJoin)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOLimit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOLoad)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LONative)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LORank)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOSort)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOSplit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOSplitOutput)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOStore)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOStream)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visit(LOUnion)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.Util.OpFinder.visitOp(LogicalRelationalOperator)",3,19,n/a,6,1,1,2,2
"org.apache.pig.newplan.logical.Util.addForEachAfter(LogicalPlan,LogicalRelationalOperator,int,Set<Integer>)",25,3,n/a,34,2,4,27,4
"org.apache.pig.newplan.logical.Util.fixSchemaAddTupleInBag(Schema)",3,1,n/a,13,0,1,3,1
"org.apache.pig.newplan.logical.Util.getLogicalRelationalOperators(LogicalPlan,Class<C>)",3,3,n/a,16,0,2,3,1
"org.apache.pig.newplan.logical.Util.translateFieldSchema(FieldSchema)",2,3,n/a,8,1,1,5,2
"org.apache.pig.newplan.logical.Util.translateFieldSchema(LogicalFieldSchema)",2,1,n/a,14,1,1,9,4
"org.apache.pig.newplan.logical.Util.translateSchema(LogicalSchema)",6,12,n/a,24,2,1,11,4
"org.apache.pig.newplan.logical.Util.translateSchema(Schema)",5,5,n/a,13,1,1,8,3
"org.apache.pig.newplan.logical.expression.AddExpression.AddExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.AddExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.AddExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.AddExpression.getFieldSchema()",4,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.AddExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.AllSameExpressionVisitor(OperatorPlan,PlanWalker)",1,4,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.execute(LogicalExpression)",n/a,24,4,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(AddExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(AndExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(BinCondExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(CastExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(ConstantExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(DereferenceExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(DivideExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(EqualExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(GreaterThanEqualExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(GreaterThanExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(IsNullExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(LessThanEqualExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(LessThanExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(MapLookupExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(ModExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(MultiplyExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(NegativeExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(NotEqualExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(NotExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(OrExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(ProjectExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(RegexExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(SubtractExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor.visit(UserFuncExpression)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.expression.AndExpression.AndExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,3,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.AndExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.AndExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.AndExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.AndExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.BinCondExpression.BinCondExpression(OperatorPlan,LogicalExpression,LogicalExpression,LogicalExpression)",5,2,n/a,17,0,4,5,1
"org.apache.pig.newplan.logical.expression.BinCondExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.BinCondExpression.deepCopy(LogicalExpressionPlan)",9,46,n/a,10,0,1,3,1
"org.apache.pig.newplan.logical.expression.BinCondExpression.getCondition()",2,5,n/a,8,0,0,1,1
"org.apache.pig.newplan.logical.expression.BinCondExpression.getFieldSchema()",5,71,n/a,11,0,0,7,2
"org.apache.pig.newplan.logical.expression.BinCondExpression.getLhs()",2,15,n/a,8,0,0,1,1
"org.apache.pig.newplan.logical.expression.BinCondExpression.getRhs()",2,16,n/a,8,0,0,1,1
"org.apache.pig.newplan.logical.expression.BinCondExpression.isEqual(Operator)",9,39,n/a,10,1,1,4,5
"org.apache.pig.newplan.logical.expression.BinaryExpression.BinaryExpression(String,OperatorPlan,LogicalExpression,LogicalExpression)",4,14,n/a,17,0,4,4,1
"org.apache.pig.newplan.logical.expression.BinaryExpression.getLhs()",2,78,n/a,8,0,0,1,1
"org.apache.pig.newplan.logical.expression.BinaryExpression.getRhs()",2,70,n/a,8,0,0,1,1
"org.apache.pig.newplan.logical.expression.CastExpression.CastExpression(OperatorPlan,LogicalExpression,LogicalFieldSchema)",3,7,n/a,5,0,3,3,1
"org.apache.pig.newplan.logical.expression.CastExpression.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.expression.CastExpression.deepCopy(LogicalExpressionPlan)",10,46,n/a,17,2,1,8,3
"org.apache.pig.newplan.logical.expression.CastExpression.getFieldSchema()",7,70,n/a,14,1,0,9,3
"org.apache.pig.newplan.logical.expression.CastExpression.getFuncSpec()",0,2,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.expression.CastExpression.isEqual(Operator)",3,39,n/a,9,1,1,4,3
"org.apache.pig.newplan.logical.expression.CastExpression.setFuncSpec(FuncSpec)",0,3,n/a,7,0,1,1,1
"org.apache.pig.newplan.logical.expression.ColumnExpression.ColumnExpression(String,OperatorPlan)",1,7,n/a,8,0,2,1,1
"org.apache.pig.newplan.logical.expression.ConstantExpression.ConstantExpression(OperatorPlan,Object)",2,8,n/a,10,0,2,3,1
"org.apache.pig.newplan.logical.expression.ConstantExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.ConstantExpression.deepCopy(LogicalExpressionPlan)",4,46,n/a,7,0,1,4,1
"org.apache.pig.newplan.logical.expression.ConstantExpression.getFieldSchema()",4,70,n/a,20,1,0,9,6
"org.apache.pig.newplan.logical.expression.ConstantExpression.getValue()",0,15,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.expression.ConstantExpression.inheritSchema(LogicalExpression)",2,1,n/a,7,1,1,4,2
"org.apache.pig.newplan.logical.expression.ConstantExpression.isEqual(Operator)",4,39,n/a,10,1,1,4,7
"org.apache.pig.newplan.logical.expression.ConstantExpression.setValue(Object)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.expression.DereferenceExpression.DereferenceExpression(OperatorPlan)",2,2,n/a,4,0,1,2,1
"org.apache.pig.newplan.logical.expression.DereferenceExpression.DereferenceExpression(OperatorPlan,List<Integer>)",2,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.expression.DereferenceExpression.DereferenceExpression(OperatorPlan,int)",2,0,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.expression.DereferenceExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.DereferenceExpression.deepCopy(LogicalExpressionPlan)",12,46,n/a,16,0,1,10,1
"org.apache.pig.newplan.logical.expression.DereferenceExpression.getBagColumns()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.DereferenceExpression.getFieldSchema()",35,68,n/a,66,7,0,40,16
"org.apache.pig.newplan.logical.expression.DereferenceExpression.getRawColumns()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.DereferenceExpression.getReferredExpression()",5,5,n/a,6,1,0,3,2
"org.apache.pig.newplan.logical.expression.DereferenceExpression.isEqual(Operator)",6,39,n/a,12,2,1,6,5
"org.apache.pig.newplan.logical.expression.DereferenceExpression.setBagColumns(List<Integer>)",1,1,n/a,4,0,1,2,1
"org.apache.pig.newplan.logical.expression.DereferenceExpression.setRawColumns(List<Object>)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.expression.DereferenceExpression.toString()",11,1,n/a,16,0,0,12,3
"org.apache.pig.newplan.logical.expression.DereferenceExpression.translateAliasToPos(LogicalSchema,List<Object>)",9,2,n/a,20,3,2,13,8
"org.apache.pig.newplan.logical.expression.DivideExpression.DivideExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.DivideExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.DivideExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.DivideExpression.getFieldSchema()",4,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.DivideExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.EqualExpression.EqualExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.EqualExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.EqualExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.EqualExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.EqualExpression.isEqual(Operator)",6,39,n/a,11,1,1,4,4
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.ExpToPhyTranslationVisitor(OperatorPlan,LogicalRelationalOperator,PhysicalPlan,Map<Operator, PhysicalOperator>)",2,0,n/a,4,0,4,1,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.ExpToPhyTranslationVisitor(OperatorPlan,PlanWalker,LogicalRelationalOperator,PhysicalPlan,Map<Operator, PhysicalOperator>)",2,9,n/a,8,0,5,5,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.attachBinaryComparisonOperator(BinaryExpression,BinaryComparisonOperator)",16,8,n/a,25,2,2,16,4
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.attachBinaryExpressionOperator(BinaryExpression,BinaryExpressionOperator)",16,6,n/a,25,2,2,16,4
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.getPhysicalPlan()",0,0,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.setPigContext(PigContext)",0,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(AddExpression)",4,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(AndExpression)",4,1,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(BinCondExpression)",21,1,n/a,26,2,1,18,4
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(CastExpression)",22,1,n/a,31,2,1,18,4
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(ConstantExpression)",9,1,n/a,14,0,1,5,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(DereferenceExpression)",13,1,n/a,14,1,1,9,2
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(DivideExpression)",4,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(EqualExpression)",4,1,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(GreaterThanEqualExpression)",4,1,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(GreaterThanExpression)",4,1,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(IsNullExpression)",15,1,n/a,20,1,1,12,2
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(LessThanEqualExpression)",4,1,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(LessThanExpression)",4,1,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(MapLookupExpression)",16,1,n/a,19,1,1,12,2
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(ModExpression)",4,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(MultiplyExpression)",4,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(NegativeExpression)",12,1,n/a,19,1,1,11,2
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(NotEqualExpression)",4,1,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(NotExpression)",14,1,n/a,20,1,1,12,2
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(OrExpression)",4,1,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(ProjectExpression)",27,1,n/a,34,2,1,16,9
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(RegexExpression)",8,1,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(SubtractExpression)",4,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor.visit(UserFuncExpression)",34,2,n/a,50,3,1,30,9
"org.apache.pig.newplan.logical.expression.GreaterThanEqualExpression.GreaterThanEqualExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.GreaterThanEqualExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.GreaterThanEqualExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.GreaterThanEqualExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.GreaterThanEqualExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.GreaterThanExpression.GreaterThanExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.GreaterThanExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.GreaterThanExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.GreaterThanExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.GreaterThanExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.IsNullExpression.IsNullExpression(OperatorPlan,LogicalExpression)",1,1,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.expression.IsNullExpression.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.expression.IsNullExpression.deepCopy(LogicalExpressionPlan)",5,46,n/a,8,0,1,3,1
"org.apache.pig.newplan.logical.expression.IsNullExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.IsNullExpression.isEqual(Operator)",3,39,n/a,9,1,1,4,3
"org.apache.pig.newplan.logical.expression.LessThanEqualExpression.LessThanEqualExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.LessThanEqualExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.LessThanEqualExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.LessThanEqualExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.LessThanEqualExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.LessThanExpression.LessThanExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,3,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.LessThanExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.LessThanExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.LessThanExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.LessThanExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.LogicalExpression.LogicalExpression(String,OperatorPlan)",1,5,n/a,8,0,2,1,1
"org.apache.pig.newplan.logical.expression.LogicalExpression.deepCopy(LogicalExpressionPlan)",n/a,46,25,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.logical.expression.LogicalExpression.getFieldSchema()",n/a,68,25,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.logical.expression.LogicalExpression.getNextUid()",0,12,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.LogicalExpression.getType()",3,59,n/a,9,0,0,3,3
"org.apache.pig.newplan.logical.expression.LogicalExpression.hasFieldSchema()",0,1,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.expression.LogicalExpression.neverUseForRealSetFieldSchema(LogicalFieldSchema)",1,0,n/a,4,0,1,2,1
"org.apache.pig.newplan.logical.expression.LogicalExpression.resetFieldSchema()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.LogicalExpression.resetNextUid()",0,0,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.expression.LogicalExpression.resetUid()",0,2,n/a,8,0,0,1,1
"org.apache.pig.newplan.logical.expression.LogicalExpression.toString()",10,1,n/a,15,0,0,11,3
"org.apache.pig.newplan.logical.expression.LogicalExpressionPlan.deepCopy()",5,6,n/a,7,0,0,5,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionPlan.explain(PrintStream,String,boolean)",5,1,n/a,9,0,3,5,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionPlan.isEqual(OperatorPlan)",10,5,n/a,15,2,1,10,7
"org.apache.pig.newplan.logical.expression.LogicalExpressionPlan.merge(LogicalExpressionPlan)",11,3,n/a,25,3,1,14,5
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.LogicalExpressionVisitor(OperatorPlan,PlanWalker)",2,17,n/a,9,1,2,3,2
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(AddExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(AndExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(BinCondExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(CastExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(ConstantExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(DereferenceExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(DivideExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(EqualExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(GreaterThanEqualExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(GreaterThanExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(IsNullExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(LessThanEqualExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(LessThanExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(MapLookupExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(ModExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(MultiplyExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(NegativeExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(NotEqualExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(NotExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(OrExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(ProjectExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(RegexExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(ScalarExpression)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(SubtractExpression)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor.visit(UserFuncExpression)",0,2,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.expression.MapLookupExpression.MapLookupExpression(OperatorPlan,String)",2,1,n/a,5,0,2,3,1
"org.apache.pig.newplan.logical.expression.MapLookupExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.MapLookupExpression.deepCopy(LogicalExpressionPlan)",9,46,n/a,14,0,1,8,1
"org.apache.pig.newplan.logical.expression.MapLookupExpression.getFieldSchema()",6,69,n/a,17,2,0,11,5
"org.apache.pig.newplan.logical.expression.MapLookupExpression.getLookupKey()",0,3,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.MapLookupExpression.getMap()",2,5,n/a,7,1,0,4,2
"org.apache.pig.newplan.logical.expression.MapLookupExpression.isEqual(Operator)",12,39,n/a,23,4,1,12,7
"org.apache.pig.newplan.logical.expression.MapLookupExpression.toString()",11,1,n/a,16,0,0,12,3
"org.apache.pig.newplan.logical.expression.ModExpression.ModExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.ModExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.ModExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.ModExpression.getFieldSchema()",4,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.ModExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.MultiplyExpression.MultiplyExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.MultiplyExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.MultiplyExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.MultiplyExpression.getFieldSchema()",4,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.MultiplyExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.NegativeExpression.NegativeExpression(OperatorPlan,LogicalExpression)",1,1,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.expression.NegativeExpression.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.expression.NegativeExpression.deepCopy(LogicalExpressionPlan)",5,46,n/a,8,0,1,3,1
"org.apache.pig.newplan.logical.expression.NegativeExpression.getFieldSchema()",5,68,n/a,9,0,0,6,2
"org.apache.pig.newplan.logical.expression.NegativeExpression.isEqual(Operator)",3,39,n/a,9,1,1,4,3
"org.apache.pig.newplan.logical.expression.NotEqualExpression.NotEqualExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.NotEqualExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.NotEqualExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.NotEqualExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.NotEqualExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.NotExpression.NotExpression(OperatorPlan,LogicalExpression)",1,2,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.expression.NotExpression.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.expression.NotExpression.deepCopy(LogicalExpressionPlan)",5,46,n/a,8,0,1,3,1
"org.apache.pig.newplan.logical.expression.NotExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.NotExpression.isEqual(Operator)",3,39,n/a,9,1,1,4,3
"org.apache.pig.newplan.logical.expression.OrExpression.OrExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,3,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.OrExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.OrExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.OrExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.OrExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.ProjectExpression.ProjectExpression(OperatorPlan,int,LogicalRelationalOperator)",2,1,n/a,15,0,3,5,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.ProjectExpression(OperatorPlan,int,String,Operator,LogicalRelationalOperator)",2,5,n/a,17,0,5,6,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.ProjectExpression(OperatorPlan,int,int,LogicalRelationalOperator)",2,14,n/a,16,0,4,5,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.ProjectExpression(ProjectExpression,OperatorPlan)",2,1,n/a,19,0,2,12,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.ProjectExpression.deepCopy(LogicalExpressionPlan)",6,46,n/a,17,0,1,10,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.findColNum(String)",13,3,n/a,26,2,1,17,7
"org.apache.pig.newplan.logical.expression.ProjectExpression.findReferent()",6,21,n/a,18,1,0,8,4
"org.apache.pig.newplan.logical.expression.ProjectExpression.getAttachedRelationalOp()",0,6,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.getColAlias()",0,15,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.getColNum()",1,24,n/a,12,1,0,3,2
"org.apache.pig.newplan.logical.expression.ProjectExpression.getEndCol()",0,12,n/a,6,0,0,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.getFieldSchema()",61,92,n/a,125,5,0,80,34
"org.apache.pig.newplan.logical.expression.ProjectExpression.getInputNum()",0,17,n/a,9,0,0,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.getProjectedOperator()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.getStartCol()",0,7,n/a,6,0,0,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.getType()",6,63,n/a,13,2,0,6,5
"org.apache.pig.newplan.logical.expression.ProjectExpression.isEqual(Operator)",11,39,n/a,19,1,1,12,11
"org.apache.pig.newplan.logical.expression.ProjectExpression.isProjectStar()",0,18,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.isRangeOrStarProject()",2,14,n/a,3,0,0,1,2
"org.apache.pig.newplan.logical.expression.ProjectExpression.isRangeProject()",0,13,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.setAttachedRelationalOp(LogicalRelationalOperator)",0,10,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.setColNum(int)",0,6,n/a,9,0,1,2,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.setColumnNumberFromAlias()",6,3,n/a,29,2,0,14,7
"org.apache.pig.newplan.logical.expression.ProjectExpression.setEndAlias(String)",0,1,n/a,7,0,1,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.setEndCol(int)",0,2,n/a,6,0,1,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.setInputNum(int)",0,9,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.setStartAlias(String)",0,1,n/a,7,0,1,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.setStartCol(int)",0,2,n/a,6,0,1,1,1
"org.apache.pig.newplan.logical.expression.ProjectExpression.toString()",21,1,n/a,26,0,0,21,8
"org.apache.pig.newplan.logical.expression.RegexExpression.RegexExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.RegexExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.RegexExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.RegexExpression.getFieldSchema()",2,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.RegexExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.ScalarExpression.ScalarExpression(OperatorPlan)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.expression.ScalarExpression.ScalarExpression(OperatorPlan,Operator,Operator)",1,1,n/a,6,0,3,3,1
"org.apache.pig.newplan.logical.expression.ScalarExpression.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.expression.ScalarExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,18,2,1,11,3
"org.apache.pig.newplan.logical.expression.ScalarExpression.getAttachedLogicalOperator()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.ScalarExpression.getFieldSchema()",10,70,n/a,28,3,0,14,6
"org.apache.pig.newplan.logical.expression.ScalarExpression.getImplicitReferencedOperator()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.ScalarExpression.setAttachedLogicalOperator(Operator)",0,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.expression.ScalarExpression.setImplicitReferencedOperator(Operator)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.expression.ScalarExpression.toString()",10,1,n/a,16,0,0,11,3
"org.apache.pig.newplan.logical.expression.SubtractExpression.SubtractExpression(OperatorPlan,LogicalExpression,LogicalExpression)",1,1,n/a,12,0,3,1,1
"org.apache.pig.newplan.logical.expression.SubtractExpression.accept(PlanVisitor)",2,7,n/a,10,1,1,3,2
"org.apache.pig.newplan.logical.expression.SubtractExpression.deepCopy(LogicalExpressionPlan)",7,46,n/a,9,0,1,3,1
"org.apache.pig.newplan.logical.expression.SubtractExpression.getFieldSchema()",4,68,n/a,8,0,0,5,2
"org.apache.pig.newplan.logical.expression.SubtractExpression.isEqual(Operator)",6,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.expression.UnaryExpression.UnaryExpression(String,OperatorPlan,LogicalExpression)",3,4,n/a,14,0,3,3,1
"org.apache.pig.newplan.logical.expression.UnaryExpression.getExpression()",2,41,n/a,12,1,0,4,2
"org.apache.pig.newplan.logical.expression.UserFuncExpression.UserFuncExpression(OperatorPlan,FuncSpec)",3,6,n/a,8,1,2,5,2
"org.apache.pig.newplan.logical.expression.UserFuncExpression.UserFuncExpression(OperatorPlan,FuncSpec,List<LogicalExpression>)",2,4,n/a,6,1,3,3,2
"org.apache.pig.newplan.logical.expression.UserFuncExpression.UserFuncExpression(OperatorPlan,FuncSpec,List<LogicalExpression>,boolean)",1,3,n/a,4,0,4,2,1
"org.apache.pig.newplan.logical.expression.UserFuncExpression.UserFuncExpression(OperatorPlan,FuncSpec,List<LogicalExpression>,boolean,boolean,boolean,String,String)",1,1,n/a,8,0,8,6,1
"org.apache.pig.newplan.logical.expression.UserFuncExpression.UserFuncExpression(OperatorPlan,FuncSpec,boolean)",1,1,n/a,4,0,3,2,1
"org.apache.pig.newplan.logical.expression.UserFuncExpression.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.expression.UserFuncExpression.deepCopy(LogicalExpressionPlan)",10,46,n/a,26,3,1,14,4
"org.apache.pig.newplan.logical.expression.UserFuncExpression.getArguments()",3,5,n/a,15,1,0,8,3
"org.apache.pig.newplan.logical.expression.UserFuncExpression.getEvalFunc()",1,2,n/a,6,1,0,3,2
"org.apache.pig.newplan.logical.expression.UserFuncExpression.getFieldSchema()",42,69,n/a,65,3,0,42,15
"org.apache.pig.newplan.logical.expression.UserFuncExpression.getFuncSpec()",0,15,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.UserFuncExpression.getSignature()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.UserFuncExpression.initializeInvokerFunction()",31,1,n/a,78,3,0,61,20
"org.apache.pig.newplan.logical.expression.UserFuncExpression.isDeterministic()",6,2,n/a,12,1,0,7,3
"org.apache.pig.newplan.logical.expression.UserFuncExpression.isEqual(Operator)",12,39,n/a,35,3,1,21,11
"org.apache.pig.newplan.logical.expression.UserFuncExpression.isViaDefine()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.expression.UserFuncExpression.setFuncSpec(FuncSpec)",1,1,n/a,7,0,1,2,1
"org.apache.pig.newplan.logical.expression.UserFuncExpression.toString()",11,1,n/a,15,0,0,11,3
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.AllExpressionVisitor(OperatorPlan,PlanWalker)",1,9,n/a,8,0,2,1,1
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.getVisitor(LogicalExpressionPlan)",n/a,5,9,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOCogroup)",4,3,n/a,8,1,1,4,2
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOCube)",4,2,n/a,8,1,1,4,2
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOFilter)",3,2,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOForEach)",5,1,n/a,11,0,1,6,1
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOGenerate)",2,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOInnerLoad)",5,1,n/a,9,0,1,4,1
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOJoin)",2,2,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOLimit)",4,1,n/a,8,1,1,4,2
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LORank)",2,2,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOSort)",2,2,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visit(LOSplitOutput)",3,2,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor.visitAll(Collection<LogicalExpressionPlan>)",2,6,n/a,6,1,1,3,2
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.AllSameRalationalNodesVisitor(OperatorPlan,PlanWalker)",1,2,n/a,7,0,2,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.execute(LogicalRelationalOperator)",n/a,17,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOCogroup)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOCross)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOCube)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LODistinct)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOFilter)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOForEach)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOJoin)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOLimit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOLoad)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LONative)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LORank)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOSort)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOSplit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOSplitOutput)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOStore)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOStream)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor.visit(LOUnion)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.ExpressionUidResetter.ExpressionUidResetter(OperatorPlan)",2,8,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.ExpressionUidResetter.execute(LogicalExpression)",1,24,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.FieldSchemaResetter.FieldSchemaResetter(OperatorPlan)",2,4,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.FieldSchemaResetter.execute(LogicalExpression)",2,24,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer.LogicalPlanOptimizer(OperatorPlan,int,Set<String>)",1,0,n/a,3,0,3,1,1
"org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer.LogicalPlanOptimizer(OperatorPlan,int,Set<String>,PigContext)",6,2,n/a,20,1,4,8,3
"org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer.addListeners()",4,1,n/a,4,0,0,2,1
"org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer.buildRuleSets()",73,1,n/a,109,0,0,74,13
"org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer.checkAndAddRule(Set<Rule>,Rule)",14,17,n/a,18,1,2,9,5
"org.apache.pig.newplan.logical.optimizer.LogicalPlanPrinter.LogicalPlanPrinter(OperatorPlan,PrintStream)",2,3,n/a,7,0,2,1,1
"org.apache.pig.newplan.logical.optimizer.LogicalPlanPrinter.LogicalPlanPrinter(OperatorPlan,PrintStream,ArrayList<byte[]>)",1,2,n/a,11,1,3,6,2
"org.apache.pig.newplan.logical.optimizer.LogicalPlanPrinter.depthFirst(Operator)",15,2,n/a,26,2,1,19,5
"org.apache.pig.newplan.logical.optimizer.LogicalPlanPrinter.depthFirstLP()",6,1,n/a,12,1,0,7,3
"org.apache.pig.newplan.logical.optimizer.LogicalPlanPrinter.printNodePlan(Operator)",22,1,n/a,46,3,1,27,17
"org.apache.pig.newplan.logical.optimizer.LogicalPlanPrinter.printPlan(OperatorPlan)",6,9,n/a,9,1,1,6,2
"org.apache.pig.newplan.logical.optimizer.LogicalPlanPrinter.visit()",2,78,n/a,8,1,0,3,2
"org.apache.pig.newplan.logical.optimizer.LogicalPlanPrinter.writeWithTabs(byte[])",2,4,n/a,6,1,1,3,2
"org.apache.pig.newplan.logical.optimizer.ProjectionPatcher.ProjectionFinder.ProjectionFinder(OperatorPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.ProjectionPatcher.ProjectionFinder.getVisitor(LogicalExpressionPlan)",1,5,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.ProjectionPatcher.ProjectionRewriter.ProjectionRewriter(OperatorPlan,LogicalRelationalOperator)",2,1,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.optimizer.ProjectionPatcher.ProjectionRewriter.visit(ProjectExpression)",12,1,n/a,36,3,1,20,8
"org.apache.pig.newplan.logical.optimizer.ProjectionPatcher.transformed(OperatorPlan,OperatorPlan)",2,1,n/a,9,0,2,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaPatcher.transformed(OperatorPlan,OperatorPlan)",2,1,n/a,12,0,2,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.SchemaResetter(OperatorPlan)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.SchemaResetter(OperatorPlan,boolean)",2,11,n/a,5,0,2,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.validate(LogicalSchema)",5,17,n/a,36,3,1,11,6
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOCogroup)",6,2,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOCross)",3,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOCube)",6,2,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LODistinct)",3,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOFilter)",6,2,n/a,7,0,1,4,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOForEach)",8,2,n/a,10,0,1,7,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOGenerate)",5,1,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOInnerLoad)",4,1,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOJoin)",5,2,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOLimit)",7,1,n/a,10,1,1,5,2
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOLoad)",3,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LORank)",5,2,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOSort)",5,2,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOSplit)",3,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOSplitOutput)",6,1,n/a,7,0,1,4,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOStore)",3,2,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOStream)",3,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visit(LOUnion)",3,2,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter.visitAll(Collection<LogicalExpressionPlan>)",2,6,n/a,6,1,1,3,2
"org.apache.pig.newplan.logical.optimizer.UidResetter.UidResetter(OperatorPlan)",2,3,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOCogroup)",5,1,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOCross)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LODistinct)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOFilter)",4,1,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOForEach)",6,1,n/a,9,0,1,6,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOGenerate)",4,1,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOInnerLoad)",3,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOJoin)",4,1,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOLimit)",5,1,n/a,9,1,1,4,2
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOLoad)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LORank)",4,1,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOSort)",4,1,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOSplit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOSplitOutput)",4,1,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOStore)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOStream)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.optimizer.UidResetter.visit(LOUnion)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.LOCogroup(LogicalPlan)",1,3,n/a,7,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.LOCogroup(OperatorPlan,MultiMap<Integer, LogicalExpressionPlan>,GROUPTYPE,boolean[])",2,1,n/a,9,1,4,5,2
"org.apache.pig.newplan.logical.relational.LOCogroup.LOCogroup(OperatorPlan,MultiMap<Integer, LogicalExpressionPlan>,boolean[])",1,0,n/a,4,0,3,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOCogroup.getExpressionPlans()",0,23,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.getGeneratedInputUids()",1,1,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.getGroupType()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.getInner()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.getInputs(LogicalPlan)",1,16,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.getPlanSchema(LogicalExpressionPlan)",5,2,n/a,13,0,1,5,2
"org.apache.pig.newplan.logical.relational.LOCogroup.getSchema()",37,93,n/a,103,4,0,61,17
"org.apache.pig.newplan.logical.relational.LOCogroup.isEqual(Operator)",12,39,n/a,40,5,1,24,14
"org.apache.pig.newplan.logical.relational.LOCogroup.resetGroupType()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.resetUid()",1,12,n/a,5,0,0,2,1
"org.apache.pig.newplan.logical.relational.LOCogroup.setExpressionPlans(MultiMap<Integer, LogicalExpressionPlan>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.setGroupType(GROUPTYPE)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCogroup.setInnerFlags(boolean[])",1,1,n/a,5,1,1,2,2
"org.apache.pig.newplan.logical.relational.LOCross.LOCross(LogicalPlan)",1,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCross.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOCross.getInputs()",1,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCross.getSchema()",12,91,n/a,39,3,0,27,9
"org.apache.pig.newplan.logical.relational.LOCross.isEqual(Operator)",1,39,n/a,8,1,1,3,3
"org.apache.pig.newplan.logical.relational.LOCross.isNested()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCross.setNested(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCube.LOCube(LogicalPlan)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCube.LOCube(OperatorPlan,MultiMap<Integer, LogicalExpressionPlan>)",1,0,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.relational.LOCube.accept(PlanVisitor)",2,7,n/a,8,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOCube.getExpressionPlans()",0,3,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCube.getInputs(LogicalPlan)",1,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCube.getOperations()",0,0,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCube.getSchema()",0,90,n/a,5,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOCube.isEqual(Operator)",7,39,n/a,23,5,1,13,7
"org.apache.pig.newplan.logical.relational.LOCube.resetUid()",0,11,n/a,4,0,0,0,1
"org.apache.pig.newplan.logical.relational.LOCube.setExpressionPlans(MultiMap<Integer, LogicalExpressionPlan>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOCube.setOperations(List<String>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LODistinct.LODistinct(LogicalPlan)",1,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LODistinct.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LODistinct.getInput(LogicalPlan)",2,3,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LODistinct.getSchema()",3,92,n/a,9,0,0,6,2
"org.apache.pig.newplan.logical.relational.LODistinct.isEqual(Operator)",1,39,n/a,8,1,1,3,3
"org.apache.pig.newplan.logical.relational.LOFilter.LOFilter(LogicalPlan)",1,9,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOFilter.LOFilter(LogicalPlan,LogicalExpressionPlan)",1,2,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.relational.LOFilter.LOFilter(LogicalPlan,LogicalExpressionPlan,boolean)",1,0,n/a,4,0,3,2,1
"org.apache.pig.newplan.logical.relational.LOFilter.LOFilter(LogicalPlan,boolean)",1,2,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.relational.LOFilter.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOFilter.getFilterPlan()",0,24,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOFilter.getInput(LogicalPlan)",2,3,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOFilter.getSchema()",3,93,n/a,9,0,0,6,2
"org.apache.pig.newplan.logical.relational.LOFilter.isEqual(Operator)",2,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.relational.LOFilter.isSample()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOFilter.setFilterPlan(LogicalExpressionPlan)",0,7,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOForEach.LOForEach(OperatorPlan)",1,15,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOForEach.NestedRelationalOperatorFinder.NestedRelationalOperatorFinder(LogicalPlan,String)",2,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.relational.LOForEach.NestedRelationalOperatorFinder.execute(LogicalRelationalOperator)",3,17,n/a,5,0,1,2,3
"org.apache.pig.newplan.logical.relational.LOForEach.NestedRelationalOperatorFinder.getMatchedOperator()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOForEach.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOForEach.dumpNestedSchema(String,String)",5,1,n/a,9,1,2,6,2
"org.apache.pig.newplan.logical.relational.LOForEach.findReacheableInnerLoadFromBoundaryProject(ProjectExpression)",11,3,n/a,25,3,1,16,6
"org.apache.pig.newplan.logical.relational.LOForEach.getInnerPlan()",0,30,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOForEach.getSchema()",2,94,n/a,19,2,0,9,4
"org.apache.pig.newplan.logical.relational.LOForEach.isEqual(Operator)",1,39,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOForEach.setInnerPlan(LogicalPlan)",0,10,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.LOGenerate(OperatorPlan)",1,5,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.LOGenerate(OperatorPlan,List<LogicalExpressionPlan>,boolean[])",1,6,n/a,5,0,3,3,1
"org.apache.pig.newplan.logical.relational.LOGenerate.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOGenerate.getFlattenFlags()",0,13,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.getOutputPlanSchemas()",0,6,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.getOutputPlans()",0,25,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.getSchema()",51,92,n/a,126,8,0,79,39
"org.apache.pig.newplan.logical.relational.LOGenerate.getUidOnlySchemas()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.getUserDefinedSchema()",0,11,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.isEqual(Operator)",8,39,n/a,20,2,1,14,6
"org.apache.pig.newplan.logical.relational.LOGenerate.resetSchema()",1,39,n/a,5,0,0,2,1
"org.apache.pig.newplan.logical.relational.LOGenerate.resetUid()",0,12,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.setFlattenFlags(boolean[])",0,5,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.setOutputPlanSchemas(List<LogicalSchema>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.setOutputPlans(List<LogicalExpressionPlan>)",0,4,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.setUidOnlySchemas(List<LogicalSchema>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.setUserDefinedSchema(List<LogicalSchema>)",0,6,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOGenerate.toString()",12,1,n/a,25,2,0,19,7
"org.apache.pig.newplan.logical.relational.LOInnerLoad.LOInnerLoad(LogicalPlan,LOForEach,ProjectExpression)",3,1,n/a,8,0,3,5,1
"org.apache.pig.newplan.logical.relational.LOInnerLoad.LOInnerLoad(OperatorPlan,LOForEach,String)",3,2,n/a,9,0,3,4,1
"org.apache.pig.newplan.logical.relational.LOInnerLoad.LOInnerLoad(OperatorPlan,LOForEach,int)",3,13,n/a,9,0,3,4,1
"org.apache.pig.newplan.logical.relational.LOInnerLoad.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOInnerLoad.getColNum()",1,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOInnerLoad.getLOForEach()",0,2,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOInnerLoad.getProjection()",0,23,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOInnerLoad.getSchema()",19,97,n/a,27,4,0,20,10
"org.apache.pig.newplan.logical.relational.LOInnerLoad.isEqual(Operator)",2,39,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOInnerLoad.resetSchema()",2,38,n/a,5,0,0,2,1
"org.apache.pig.newplan.logical.relational.LOInnerLoad.setLocation(SourceLocation)",2,44,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.relational.LOInnerLoad.sourceIsBag()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOInnerLoad.toString()",32,1,n/a,31,2,0,22,8
"org.apache.pig.newplan.logical.relational.LOJoin.LOJoin(LogicalPlan)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.LOJoin(LogicalPlan,MultiMap<Integer, LogicalExpressionPlan>,JOINTYPE,boolean[])",1,0,n/a,9,0,4,4,1
"org.apache.pig.newplan.logical.relational.LOJoin.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOJoin.getExpressionPlanValues()",1,5,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.getExpressionPlans()",0,11,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.getInnerFlags()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.getInputs(LogicalPlan)",1,11,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.getJoinPlan(int)",1,5,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.getJoinType()",0,12,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.getName()",1,26,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.getSchema()",11,93,n/a,36,3,0,25,8
"org.apache.pig.newplan.logical.relational.LOJoin.isEqual(Operator)",18,39,n/a,44,4,1,39,18
"org.apache.pig.newplan.logical.relational.LOJoin.isInner(int)",0,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.resetJoinType()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.setInnerFlags(boolean[])",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.setJoinPlans(MultiMap<Integer, LogicalExpressionPlan>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOJoin.setJoinType(JOINTYPE)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLimit.LOLimit(LogicalPlan)",1,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLimit.LOLimit(LogicalPlan,LogicalExpressionPlan)",2,0,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.relational.LOLimit.LOLimit(LogicalPlan,long)",2,4,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.relational.LOLimit.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOLimit.getInput(LogicalPlan)",2,3,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLimit.getLimit()",0,21,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLimit.getLimitPlan()",0,19,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLimit.getSchema()",3,91,n/a,9,0,0,6,2
"org.apache.pig.newplan.logical.relational.LOLimit.isEqual(Operator)",8,39,n/a,10,1,1,5,7
"org.apache.pig.newplan.logical.relational.LOLimit.setLimit(long)",0,4,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLimit.setLimitPlan(LogicalExpressionPlan)",0,3,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.LOLoad(FileSpec,LogicalSchema,LogicalPlan,Configuration,LoadFunc,String)",6,2,n/a,30,2,6,14,4
"org.apache.pig.newplan.logical.relational.LOLoad.LOLoad(LogicalSchema,LogicalPlan)",1,3,n/a,10,0,2,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOLoad.getCastState()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.getConfiguration()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.getDeterminedSchema()",0,3,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.getFileSpec()",0,15,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.getLimit()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.getLoadFunc()",5,8,n/a,11,2,0,6,4
"org.apache.pig.newplan.logical.relational.LOLoad.getSchema()",11,104,n/a,42,3,0,28,13
"org.apache.pig.newplan.logical.relational.LOLoad.getSchemaFile()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.getSchemaFromMetaData()",11,1,n/a,12,2,0,7,4
"org.apache.pig.newplan.logical.relational.LOLoad.getScriptSchema()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.getSignature()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.isCastAdjusted()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.isEqual(Operator)",2,39,n/a,17,3,1,10,6
"org.apache.pig.newplan.logical.relational.LOLoad.isTmpLoad()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.resetUid()",0,12,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.setCastState(CastState)",0,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.setLimit(long)",0,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.setRequiredFields(List<Integer>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.setScriptSchema(LogicalSchema)",0,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.setTmpLoad(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOLoad.storeScriptSchema(Configuration,LogicalSchema,String)",6,1,n/a,35,2,3,7,5
"org.apache.pig.newplan.logical.relational.LOLoad.toString()",1,1,n/a,5,0,0,2,1
"org.apache.pig.newplan.logical.relational.LONative.LONative(OperatorPlan,String,String[])",1,1,n/a,7,0,3,3,1
"org.apache.pig.newplan.logical.relational.LONative.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LONative.getNativeMRJar()",0,1,n/a,6,0,0,1,1
"org.apache.pig.newplan.logical.relational.LONative.getParams()",0,1,n/a,6,0,0,1,1
"org.apache.pig.newplan.logical.relational.LONative.getSchema()",0,89,n/a,5,0,0,1,1
"org.apache.pig.newplan.logical.relational.LONative.isEqual(Operator)",5,39,n/a,32,1,1,17,9
"org.apache.pig.newplan.logical.relational.LONative.setNativeMRJar(String)",0,0,n/a,6,0,1,1,1
"org.apache.pig.newplan.logical.relational.LONative.setParams(String[])",0,0,n/a,6,0,1,1,1
"org.apache.pig.newplan.logical.relational.LORank.LORank(OperatorPlan)",1,2,n/a,4,0,1,2,1
"org.apache.pig.newplan.logical.relational.LORank.LORank(OperatorPlan,List<LogicalExpressionPlan>,List<Boolean>)",1,0,n/a,6,0,3,4,1
"org.apache.pig.newplan.logical.relational.LORank.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LORank.getAscendingCol()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LORank.getRankColPlans()",0,14,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LORank.getSchema()",14,91,n/a,42,1,0,24,7
"org.apache.pig.newplan.logical.relational.LORank.isDenseRank()",0,2,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LORank.isEqual(Operator)",2,39,n/a,11,1,1,6,4
"org.apache.pig.newplan.logical.relational.LORank.isRowNumber()",0,3,n/a,8,0,0,1,1
"org.apache.pig.newplan.logical.relational.LORank.setAscendingCol(List<Boolean>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LORank.setIsDenseRank(boolean)",0,0,n/a,7,0,1,1,1
"org.apache.pig.newplan.logical.relational.LORank.setIsRowNumber(boolean)",0,0,n/a,7,0,1,1,1
"org.apache.pig.newplan.logical.relational.LORank.setRankColPlan(List<LogicalExpressionPlan>)",0,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSort.LOSort(OperatorPlan)",1,3,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSort.LOSort(OperatorPlan,List<LogicalExpressionPlan>,List<Boolean>,FuncSpec)",1,1,n/a,8,0,4,4,1
"org.apache.pig.newplan.logical.relational.LOSort.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOSort.createCopy(LOSort)",13,1,n/a,17,1,1,8,2
"org.apache.pig.newplan.logical.relational.LOSort.getAscendingCols()",0,5,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOSort.getInput(LogicalPlan)",2,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSort.getLimit()",0,5,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOSort.getOrder(List<Boolean>,int)",1,2,n/a,4,0,2,1,2
"org.apache.pig.newplan.logical.relational.LOSort.getSchema()",3,92,n/a,9,0,0,6,2
"org.apache.pig.newplan.logical.relational.LOSort.getSortColPlans()",0,16,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOSort.getSortInfo()",30,2,n/a,47,3,0,26,10
"org.apache.pig.newplan.logical.relational.LOSort.getUserFunc()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOSort.isEqual(Operator)",9,39,n/a,17,1,1,13,8
"org.apache.pig.newplan.logical.relational.LOSort.isLimited()",0,0,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOSort.isStar()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOSort.setAscendingCols(List<Boolean>)",0,3,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSort.setLimit(long)",0,3,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSort.setSortColPlans(List<LogicalExpressionPlan>)",0,4,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSort.setStar(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSort.setUserFunc(FuncSpec)",0,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSplit.LOSplit(OperatorPlan)",1,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSplit.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOSplit.getSchema()",3,93,n/a,9,0,0,6,2
"org.apache.pig.newplan.logical.relational.LOSplit.isEqual(Operator)",1,39,n/a,8,1,1,3,3
"org.apache.pig.newplan.logical.relational.LOSplitOutput.LOSplitOutput(LogicalPlan)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOSplitOutput.LOSplitOutput(LogicalPlan,LogicalExpressionPlan)",1,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.relational.LOSplitOutput.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOSplitOutput.getFilterPlan()",0,12,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOSplitOutput.getInputUids(long)",3,4,n/a,7,1,1,4,3
"org.apache.pig.newplan.logical.relational.LOSplitOutput.getSchema()",6,96,n/a,12,1,0,8,3
"org.apache.pig.newplan.logical.relational.LOSplitOutput.isEqual(Operator)",2,39,n/a,9,1,1,4,4
"org.apache.pig.newplan.logical.relational.LOSplitOutput.reassignUidRec(LogicalSchema)",6,2,n/a,16,2,1,8,7
"org.apache.pig.newplan.logical.relational.LOSplitOutput.resetUid()",1,12,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOSplitOutput.setFilterPlan(LogicalExpressionPlan)",0,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOStore.LOStore(LogicalPlan,FileSpec,StoreFuncInterface,String)",1,3,n/a,6,0,4,4,1
"org.apache.pig.newplan.logical.relational.LOStore.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOStore.getFileSpec()",0,6,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStore.getInputSpec()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStore.getOutputSpec()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStore.getSchema()",3,97,n/a,5,0,0,2,1
"org.apache.pig.newplan.logical.relational.LOStore.getSignature()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStore.getSortInfo()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStore.getStoreFunc()",0,5,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStore.isEqual(Operator)",2,39,n/a,18,2,1,10,8
"org.apache.pig.newplan.logical.relational.LOStore.isTmpStore()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStore.setInputSpec(FileSpec)",0,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOStore.setSortInfo(SortInfo)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOStore.setTmpStore(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOStream.LOStream(LogicalPlan,ExecutableManager,StreamingCommand,LogicalSchema)",1,2,n/a,6,0,4,4,1
"org.apache.pig.newplan.logical.relational.LOStream.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOStream.getCastState()",0,0,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStream.getExecutableManager()",0,1,n/a,6,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStream.getSchema()",8,91,n/a,19,2,0,15,6
"org.apache.pig.newplan.logical.relational.LOStream.getScriptSchema()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStream.getStreamingCommand()",0,3,n/a,9,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStream.isCastAdjusted()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStream.isEqual(Operator)",1,39,n/a,8,1,1,3,3
"org.apache.pig.newplan.logical.relational.LOStream.resetUid()",0,12,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOStream.setCastState(CastState)",0,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOUnion.LOUnion(OperatorPlan)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOUnion.LOUnion(OperatorPlan,boolean)",1,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.relational.LOUnion.accept(PlanVisitor)",2,7,n/a,7,1,1,3,2
"org.apache.pig.newplan.logical.relational.LOUnion.createMergedSchemaOnAlias(List<LogicalSchema>,List<String>)",11,1,n/a,29,3,2,16,5
"org.apache.pig.newplan.logical.relational.LOUnion.getCachedOuputUid(long)",0,1,n/a,10,2,1,6,3
"org.apache.pig.newplan.logical.relational.LOUnion.getInputUids(long)",2,2,n/a,9,1,1,5,3
"org.apache.pig.newplan.logical.relational.LOUnion.getInputs()",1,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOUnion.getInputs(LogicalPlan)",1,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LOUnion.getSchema()",38,94,n/a,92,5,0,64,22
"org.apache.pig.newplan.logical.relational.LOUnion.isEqual(Operator)",1,39,n/a,8,1,1,3,3
"org.apache.pig.newplan.logical.relational.LOUnion.isOnSchema()",0,4,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOUnion.resetUid()",1,12,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.relational.LOUnion.setUnionOnSchema(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.LogToPhyTranslationVisitor(OperatorPlan)",5,1,n/a,6,0,1,4,1
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.compileFE4Flattening(boolean[],String,int,String,SourceLocation,List<Operator>)",20,2,n/a,39,3,6,24,4
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.compileToLR_GR_PackTrio(LogicalRelationalOperator,String,boolean[],MultiMap<Integer, LogicalExpressionPlan>)",55,3,n/a,66,2,4,51,7
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.compileToMergeCogrp(LogicalRelationalOperator,MultiMap<Integer, LogicalExpressionPlan>)",32,2,n/a,41,2,2,29,5
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.getLogToPhyMap()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.getPhysicalPlan()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.setPigContext(PigContext)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.translateCollectedCogroup(LOCogroup)",26,1,n/a,34,1,1,24,4
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.translateExpressionPlans(LogicalRelationalOperator,List<LogicalExpressionPlan>)",12,4,n/a,35,1,2,13,4
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.translateMergeCogroup(LOCogroup)",19,1,n/a,23,2,1,16,4
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.translateSoftLinks(Operator)",5,7,n/a,9,1,1,6,3
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.updateWithEmptyBagCheck(PhysicalPlan,Operator)",6,1,n/a,24,2,2,11,3
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.validateMergeCogrp(boolean[])",0,1,n/a,7,1,1,4,3
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOCogroup)",12,1,n/a,19,1,1,15,5
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOCross)",156,1,n/a,138,4,1,112,11
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LODistinct)",18,1,n/a,19,1,1,14,2
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOFilter)",29,1,n/a,42,1,1,27,3
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOForEach)",64,1,n/a,100,6,1,67,14
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOInnerLoad)",23,1,n/a,35,2,1,19,6
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOJoin)",140,1,n/a,257,5,1,167,43
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOLimit)",31,1,n/a,33,1,1,24,3
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOLoad)",31,1,n/a,33,2,1,22,3
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LONative)",20,1,n/a,28,1,1,20,3
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LORank)",194,1,n/a,201,4,1,141,10
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOSort)",44,1,n/a,54,1,1,34,5
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOSplit)",24,1,n/a,46,2,1,35,7
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOSplitOutput)",29,1,n/a,42,1,1,27,3
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOStore)",36,2,n/a,52,1,1,24,4
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOStream)",18,1,n/a,26,1,1,17,3
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOUnion)",15,2,n/a,20,2,1,14,3
"org.apache.pig.newplan.logical.relational.LogicalPlan.LogicalPlan()",1,27,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalPlan.LogicalPlan(LogicalPlan)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalPlan.explain(PrintStream,String,boolean)",12,2,n/a,20,1,3,13,4
"org.apache.pig.newplan.logical.relational.LogicalPlan.findByAlias(String)",11,0,n/a,17,2,1,11,5
"org.apache.pig.newplan.logical.relational.LogicalPlan.getSignature()",8,1,n/a,17,0,0,6,1
"org.apache.pig.newplan.logical.relational.LogicalPlan.isEqual(OperatorPlan)",1,2,n/a,21,1,1,3,3
"org.apache.pig.newplan.logical.relational.LogicalPlan.optimize(PigContext)",29,3,n/a,48,1,1,30,7
"org.apache.pig.newplan.logical.relational.LogicalPlan.validate(PigContext,String,boolean)",39,2,n/a,42,2,3,26,6
"org.apache.pig.newplan.logical.relational.LogicalPlanData.LogicalPlanData(LogicalPlan)",4,1,n/a,10,1,1,7,2
"org.apache.pig.newplan.logical.relational.LogicalPlanData.getLoadFuncs()",4,0,n/a,11,1,0,4,2
"org.apache.pig.newplan.logical.relational.LogicalPlanData.getNumLogicalRelationOperators()",0,0,n/a,10,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalPlanData.getNumSinks()",1,0,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalPlanData.getNumSources()",1,0,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalPlanData.getSinks()",4,0,n/a,11,1,0,4,2
"org.apache.pig.newplan.logical.relational.LogicalPlanData.getSources()",4,0,n/a,12,1,0,4,2
"org.apache.pig.newplan.logical.relational.LogicalPlanData.getStoreFuncs()",4,0,n/a,11,1,0,4,2
"org.apache.pig.newplan.logical.relational.LogicalPlanData.init()",5,1,n/a,14,3,0,9,5
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.LogicalRelationalNodesVisitor(OperatorPlan,PlanWalker)",5,25,n/a,9,2,2,5,3
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOCogroup)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOCross)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOCube)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LODistinct)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOFilter)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOForEach)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOGenerate)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOInnerLoad)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOJoin)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOLimit)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOLoad)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LONative)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LORank)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOSort)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOSplit)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOSplitOutput)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOStore)",0,2,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOStream)",0,1,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor.visit(LOUnion)",0,2,n/a,2,0,1,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.LogicalRelationalOperator(String,OperatorPlan)",1,28,n/a,8,0,2,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.LogicalRelationalOperator(String,OperatorPlan,int)",1,1,n/a,12,0,3,2,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.addFieldSchemaUidsToSet(Set<Long>,LogicalFieldSchema)",4,2,n/a,11,2,2,6,4
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.checkEquality(LogicalRelationalOperator)",3,16,n/a,23,1,1,10,7
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.fixDuplicateUids(List<LogicalFieldSchema>)",2,1,n/a,13,1,1,3,2
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.getAlias()",0,86,n/a,10,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.getCustomPartitioner()",0,3,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.getLineNumber()",0,0,n/a,8,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.getRequestedParallelism()",0,29,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.getSchema()",n/a,89,19,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.isPinnedOption(Integer)",1,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.neverUseForRealSetSchema(LogicalSchema)",0,0,n/a,9,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.pinOption(Integer)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.resetSchema()",0,36,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.resetUid()",0,11,n/a,7,0,0,0,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.setAlias(String)",0,12,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.setCustomPartitioner(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.setRequestedParallelism(int)",0,3,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.setSchema(LogicalSchema)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator.toString()",10,1,n/a,18,2,0,12,5
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.LogicalFieldSchema(LogicalFieldSchema)",1,9,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.LogicalFieldSchema(String,LogicalSchema,byte)",1,49,n/a,3,0,3,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.LogicalFieldSchema(String,LogicalSchema,byte,long)",0,16,n/a,6,0,4,4,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.castable(LogicalFieldSchema,LogicalFieldSchema)",7,2,n/a,63,4,2,22,28
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.cloneUid()",7,4,n/a,15,2,0,11,3
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.compatible(LogicalFieldSchema)",6,2,n/a,16,2,1,14,10
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.deepCopy()",2,12,n/a,5,0,0,2,3
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.equals(LogicalFieldSchema,LogicalFieldSchema,boolean,boolean)",3,1,n/a,38,3,4,15,14
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.isEqual(Object)",1,4,n/a,7,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.isEqual(Object,boolean)",2,2,n/a,23,2,2,13,9
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.merge(LogicalFieldSchema,LogicalFieldSchema,MergeMode)",27,2,n/a,112,5,3,63,36
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.mergeUid(LogicalFieldSchema)",10,33,n/a,33,4,1,18,8
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.normalize()",10,3,n/a,24,4,0,11,8
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.resetUid()",1,5,n/a,9,1,0,3,2
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.stampFieldSchema()",3,5,n/a,13,2,0,5,4
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema.toString(boolean)",4,10,n/a,26,2,1,19,9
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalSchema()",1,44,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.addField(LogicalFieldSchema)",1,48,n/a,7,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.castable(LogicalSchema,LogicalSchema)",8,1,n/a,34,2,2,16,8
"org.apache.pig.newplan.logical.relational.LogicalSchema.checkNullAlias(LogicalFieldSchema,LogicalSchema)",1,2,n/a,9,1,2,2,2
"org.apache.pig.newplan.logical.relational.LogicalSchema.deepCopy()",5,10,n/a,6,0,0,6,2
"org.apache.pig.newplan.logical.relational.LogicalSchema.equals(LogicalSchema,LogicalSchema,boolean,boolean)",9,1,n/a,45,3,4,22,15
"org.apache.pig.newplan.logical.relational.LogicalSchema.findField(long)",3,5,n/a,21,3,1,10,5
"org.apache.pig.newplan.logical.relational.LogicalSchema.getField(String)",8,2,n/a,37,3,1,16,10
"org.apache.pig.newplan.logical.relational.LogicalSchema.getField(int)",1,112,n/a,8,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.getFieldPosition(String)",2,5,n/a,11,1,1,6,3
"org.apache.pig.newplan.logical.relational.LogicalSchema.getFieldSubNameMatch(String)",13,5,n/a,45,3,1,24,10
"org.apache.pig.newplan.logical.relational.LogicalSchema.getFields()",0,52,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.isEqual(Object)",1,2,n/a,8,0,1,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.isEqual(Object,boolean)",6,3,n/a,20,2,2,11,6
"org.apache.pig.newplan.logical.relational.LogicalSchema.merge(LogicalSchema,LogicalSchema,MergeMode)",13,7,n/a,35,2,3,21,10
"org.apache.pig.newplan.logical.relational.LogicalSchema.mergeNameSpacedAlias(String,String)",3,2,n/a,18,1,2,7,4
"org.apache.pig.newplan.logical.relational.LogicalSchema.mergeSchemaByAlias(LogicalSchema,LogicalSchema)",18,1,n/a,42,3,2,20,7
"org.apache.pig.newplan.logical.relational.LogicalSchema.mergeSchemasByAlias(List<LogicalSchema>)",7,1,n/a,32,2,1,13,4
"org.apache.pig.newplan.logical.relational.LogicalSchema.mergeUid(LogicalSchema)",14,4,n/a,19,2,1,15,5
"org.apache.pig.newplan.logical.relational.LogicalSchema.normalize()",2,2,n/a,9,1,0,2,2
"org.apache.pig.newplan.logical.relational.LogicalSchema.resetUid()",1,1,n/a,8,1,0,2,2
"org.apache.pig.newplan.logical.relational.LogicalSchema.size()",1,104,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.relational.LogicalSchema.toString(boolean)",7,17,n/a,10,1,1,6,3
"org.apache.pig.newplan.logical.relational.MapSideMergeValidator.isAcceptableForEachOp(Operator)",3,1,n/a,8,1,1,4,2
"org.apache.pig.newplan.logical.relational.MapSideMergeValidator.isAcceptableSortOp(Operator)",4,1,n/a,17,3,1,9,5
"org.apache.pig.newplan.logical.relational.MapSideMergeValidator.validateMapSideMerge(List<Operator>,OperatorPlan)",6,4,n/a,25,3,2,9,14
"org.apache.pig.newplan.logical.relational.SchemaNotDefinedException.SchemaNotDefinedException(String)",1,5,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.relational.SchemaNotDefinedException.SchemaNotDefinedException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.relational.SchemaNotDefinedException.SchemaNotDefinedException(Throwable)",1,5,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.AddForEach.AddForEach(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.AddForEach.AddForEachTransformer.addForeach(LogicalRelationalOperator)",10,1,n/a,13,1,1,10,4
"org.apache.pig.newplan.logical.rules.AddForEach.AddForEachTransformer.addSuccessors(Operator)",3,2,n/a,8,2,1,4,3
"org.apache.pig.newplan.logical.rules.AddForEach.AddForEachTransformer.check(OperatorPlan)",4,1,n/a,13,2,1,7,7
"org.apache.pig.newplan.logical.rules.AddForEach.AddForEachTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.AddForEach.AddForEachTransformer.shouldAdd(LogicalRelationalOperator)",11,1,n/a,25,1,1,20,9
"org.apache.pig.newplan.logical.rules.AddForEach.AddForEachTransformer.transform(OperatorPlan)",2,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.rules.AddForEach.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.ColumnMapKeyPrune.ColumnMapKeyPrune(String)",1,1,n/a,4,0,1,2,1
"org.apache.pig.newplan.logical.rules.ColumnMapKeyPrune.ColumnMapKeyPruneTransformer.check(OperatorPlan)",4,1,n/a,15,1,1,8,3
"org.apache.pig.newplan.logical.rules.ColumnMapKeyPrune.ColumnMapKeyPruneTransformer.merge()",16,1,n/a,37,4,0,21,13
"org.apache.pig.newplan.logical.rules.ColumnMapKeyPrune.ColumnMapKeyPruneTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.ColumnMapKeyPrune.ColumnMapKeyPruneTransformer.transform(OperatorPlan)",3,1,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.rules.ColumnMapKeyPrune.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.ColumnDependencyVisitor(OperatorPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.collectUids(LogicalRelationalOperator,LogicalExpressionPlan,Set<Long>)",10,7,n/a,20,4,3,12,6
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.getAllUids(LogicalSchema)",5,4,n/a,17,2,1,8,6
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.setOutputUids(LogicalRelationalOperator)",15,16,n/a,33,5,1,20,8
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOCogroup)",22,1,n/a,32,2,1,16,7
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOCross)",8,1,n/a,19,2,1,12,5
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LODistinct)",9,1,n/a,14,1,1,10,3
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOFilter)",5,1,n/a,10,0,1,5,1
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOForEach)",13,1,n/a,16,1,1,10,3
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOGenerate)",53,2,n/a,79,9,1,54,24
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOInnerLoad)",2,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOJoin)",8,1,n/a,14,1,1,8,2
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOLimit)",5,1,n/a,11,0,1,6,2
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOLoad)",2,1,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LORank)",5,1,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOSort)",5,1,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOSplit)",2,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOSplitOutput)",7,1,n/a,13,1,1,7,2
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOStore)",9,2,n/a,16,2,1,10,4
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOStream)",6,1,n/a,9,0,1,4,1
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor.visit(LOUnion)",5,2,n/a,9,1,1,5,2
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnPruneHelper(OperatorPlan)",0,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.addOperator(Operator,OperatorSubPlan)",3,2,n/a,13,1,2,8,4
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.check()",19,1,n/a,39,3,0,26,9
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.clearAnnotation()",6,4,n/a,9,1,0,6,2
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.getColumns(LogicalSchema,Set<Long>)",8,1,n/a,17,2,2,11,4
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.getSubPlan()",7,1,n/a,16,2,0,10,4
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.reportChanges()",0,0,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.ColumnPruneVisitor(OperatorPlan,Map<LOLoad, Pair<Map<Integer, Set<String>>, Set<Integer>>>,boolean)",2,2,n/a,6,0,3,3,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.addForEachIfNecessary(LogicalRelationalOperator)",11,2,n/a,17,2,1,12,5
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.addRequiredItems(LOLoad,Pair<Map<Integer, Set<String>>, Set<Integer>>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.removeSubTree(LogicalRelationalOperator)",10,2,n/a,17,2,1,10,5
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOCogroup)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOCross)",0,1,n/a,3,0,1,0,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOFilter)",0,1,n/a,3,0,1,0,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOForEach)",76,1,n/a,135,5,1,94,33
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOJoin)",0,1,n/a,3,0,1,0,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOLimit)",0,1,n/a,3,0,1,0,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOLoad)",94,2,n/a,120,3,1,96,26
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LORank)",0,1,n/a,3,0,1,0,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOSort)",0,1,n/a,3,0,1,0,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOSplit)",16,1,n/a,20,3,1,16,6
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOSplitOutput)",0,1,n/a,3,0,1,0,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOStore)",0,2,n/a,3,0,1,0,1
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor.visit(LOUnion)",4,2,n/a,9,1,1,4,2
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculator(String,PigContext)",1,2,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.ConstantCalculatorExpressionVisitor.ConstantCalculatorExpressionVisitor(OperatorPlan,LogicalRelationalOperator,PigContext)",2,1,n/a,6,0,3,3,1
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.ConstantCalculatorExpressionVisitor.execute(LogicalExpression)",47,24,n/a,64,3,1,45,10
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.ConstantCalculatorExpressionVisitor.restoreDefaultTimeZone()",1,2,n/a,6,1,0,3,2
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.ConstantCalculatorExpressionVisitor.setDefaultTimeZone()",6,2,n/a,7,1,0,4,3
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.ConstantCalculatorLogicalPlanVisitor.ConstantCalculatorLogicalPlanVisitor(OperatorPlan,PigContext)",2,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.ConstantCalculatorLogicalPlanVisitor.getVisitor(LogicalExpressionPlan)",1,5,n/a,5,0,1,1,1
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.ConstantCalculatorTransformer(List<LogicalRelationalOperator>,PigContext)",0,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.check(OperatorPlan)",5,1,n/a,14,2,1,8,3
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.transform(OperatorPlan)",2,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.rules.ConstantCalculator.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.FilterAboveForeach.FilterAboveForEachTransformer.check(OperatorPlan)",18,1,n/a,46,3,1,29,12
"org.apache.pig.newplan.logical.rules.FilterAboveForeach.FilterAboveForEachTransformer.getFilterProjectionUids(LOFilter)",21,1,n/a,37,6,1,23,7
"org.apache.pig.newplan.logical.rules.FilterAboveForeach.FilterAboveForEachTransformer.hasAll(LogicalRelationalOperator,Pair<List<Long>, List<Byte>>)",5,1,n/a,24,2,2,15,7
"org.apache.pig.newplan.logical.rules.FilterAboveForeach.FilterAboveForEachTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.FilterAboveForeach.FilterAboveForEachTransformer.transform(OperatorPlan)",18,1,n/a,70,1,1,20,5
"org.apache.pig.newplan.logical.rules.FilterAboveForeach.FilterAboveForeach(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.FilterAboveForeach.buildPattern()",6,1,n/a,12,0,0,7,1
"org.apache.pig.newplan.logical.rules.FilterAboveForeach.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.FilterConstantCalculator.FilterConstantCalculator(String,PigContext)",1,1,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.rules.FilterConstantCalculator.buildPattern()",3,1,n/a,7,0,0,4,1
"org.apache.pig.newplan.logical.rules.ForEachConstantCalculator.ForEachConstantCalculator(String,PigContext)",1,1,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.rules.ForEachConstantCalculator.buildPattern()",3,1,n/a,7,0,0,4,1
"org.apache.pig.newplan.logical.rules.GroupByConstParallelSetter.GroupAllParallelSetterTransformer.check(OperatorPlan)",8,1,n/a,22,3,1,10,5
"org.apache.pig.newplan.logical.rules.GroupByConstParallelSetter.GroupAllParallelSetterTransformer.reportChanges()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.GroupByConstParallelSetter.GroupAllParallelSetterTransformer.transform(OperatorPlan)",7,1,n/a,16,3,1,8,4
"org.apache.pig.newplan.logical.rules.GroupByConstParallelSetter.GroupByConstParallelSetter(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.GroupByConstParallelSetter.buildPattern()",3,1,n/a,7,0,0,4,1
"org.apache.pig.newplan.logical.rules.GroupByConstParallelSetter.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.LimitOptimizer.LimitOptimizer(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.LimitOptimizer.OptimizeLimitTransformer.check(OperatorPlan)",10,1,n/a,34,5,1,21,14
"org.apache.pig.newplan.logical.rules.LimitOptimizer.OptimizeLimitTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.LimitOptimizer.OptimizeLimitTransformer.transform(OperatorPlan)",60,1,n/a,99,4,1,52,29
"org.apache.pig.newplan.logical.rules.LimitOptimizer.buildPattern()",3,1,n/a,7,0,0,4,1
"org.apache.pig.newplan.logical.rules.LimitOptimizer.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.LoadTypeCastInserter.LoadTypeCastInserter(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.LoadTypeCastInserter.buildPattern()",3,1,n/a,6,0,0,3,1
"org.apache.pig.newplan.logical.rules.LoadTypeCastInserter.determineSchema(LogicalRelationalOperator)",1,2,n/a,10,0,1,1,1
"org.apache.pig.newplan.logical.rules.LoadTypeCastInserter.isCastAdjusted(LogicalRelationalOperator)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.rules.LoadTypeCastInserter.markCastInserted(LogicalRelationalOperator)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.rules.LoadTypeCastInserter.markCastNoNeed(LogicalRelationalOperator)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.rules.LogicalRelationalNodeValidator.validate()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector.FullMapCollector(OperatorPlan,Set<Long>)",2,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector.FullMapExpCollector.FullMapExpCollector(OperatorPlan,Set<Long>)",2,1,n/a,5,0,2,2,1
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector.FullMapExpCollector.visit(UserFuncExpression)",7,2,n/a,8,0,1,6,4
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector.getVisitor(LogicalExpressionPlan)",1,5,n/a,5,0,1,1,1
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector.visit(LOCogroup)",5,3,n/a,13,2,1,7,3
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector.visit(LOSplitOutput)",8,2,n/a,10,2,1,5,5
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector.visit(LOStore)",4,2,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector.visit(LOUnion)",5,2,n/a,13,2,1,7,3
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapKeysPruneHelper(OperatorPlan)",3,1,n/a,8,1,1,4,2
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.MapExprMarker.MapExprMarker(OperatorPlan)",3,1,n/a,4,0,1,2,1
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.MapExprMarker.visit(MapLookupExpression)",8,1,n/a,13,1,1,8,2
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.MapMarker(OperatorPlan)",3,1,n/a,4,0,1,2,1
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.getVisitor(LogicalExpressionPlan)",1,10,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.mergeUidKeys(Map<Long, Set<String>>)",11,5,n/a,10,2,1,5,3
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.visit(LOFilter)",4,2,n/a,7,0,1,4,1
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.visit(LOGenerate)",4,1,n/a,10,1,1,6,2
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.visit(LOJoin)",4,2,n/a,10,1,1,6,2
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.visit(LOLoad)",10,1,n/a,13,3,1,9,4
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.visit(LOSort)",4,2,n/a,10,1,1,6,2
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.visit(LOSplitOutput)",13,2,n/a,21,4,1,13,6
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.check()",19,1,n/a,50,4,0,26,12
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.getMapUids(LogicalSchema)",3,3,n/a,15,2,1,5,3
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.hasMap(LogicalSchema)",1,0,n/a,15,2,1,4,3
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.reportChanges()",0,0,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.rules.MergeFilter.MergeFilter(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.MergeFilter.MergeFilterTransformer.check(OperatorPlan)",5,1,n/a,12,2,1,6,4
"org.apache.pig.newplan.logical.rules.MergeFilter.MergeFilterTransformer.combineFilterCond(LOFilter,LOFilter)",27,1,n/a,40,3,2,25,9
"org.apache.pig.newplan.logical.rules.MergeFilter.MergeFilterTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.MergeFilter.MergeFilterTransformer.transform(OperatorPlan)",25,1,n/a,35,3,1,24,11
"org.apache.pig.newplan.logical.rules.MergeFilter.buildPattern()",3,1,n/a,9,0,0,4,1
"org.apache.pig.newplan.logical.rules.MergeFilter.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEach(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer.addBranchToPlan(LOGenerate,int,OperatorPlan,LOForEach)",18,1,n/a,23,1,4,18,4
"org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer.check(OperatorPlan)",33,1,n/a,70,5,1,44,24
"org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer.getOperatorToMerge(Operator,OperatorPlan,LOForEach)",3,2,n/a,10,1,3,5,2
"org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer.transform(OperatorPlan)",85,1,n/a,107,4,1,75,20
"org.apache.pig.newplan.logical.rules.MergeForEach.buildPattern()",3,1,n/a,8,0,0,4,1
"org.apache.pig.newplan.logical.rules.MergeForEach.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.OptimizerUtils.findGenerate(LOForEach)",3,5,n/a,9,0,1,2,1
"org.apache.pig.newplan.logical.rules.OptimizerUtils.hasFlatten(LOForEach)",2,0,n/a,9,0,1,2,1
"org.apache.pig.newplan.logical.rules.OptimizerUtils.hasFlatten(LOGenerate)",1,3,n/a,18,3,1,8,4
"org.apache.pig.newplan.logical.rules.OptimizerUtils.planHasNonDeterministicUdf(LogicalExpressionPlan)",4,4,n/a,22,3,1,7,4
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.PartitionFilterOptimizer(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.PartitionFilterPushDownTransformer.check(OperatorPlan)",14,1,n/a,28,1,1,17,9
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.PartitionFilterPushDownTransformer.getMappedKeys(String[])",3,1,n/a,16,1,1,6,2
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.PartitionFilterPushDownTransformer.reportChanges()",0,1,n/a,7,0,0,1,2
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.PartitionFilterPushDownTransformer.setupColNameMaps()",13,1,n/a,12,1,0,7,4
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.PartitionFilterPushDownTransformer.transform(OperatorPlan)",17,1,n/a,29,2,1,16,4
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.PartitionFilterPushDownTransformer.updateMappedColNames(Expression)",7,3,n/a,9,1,1,6,3
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.buildPattern()",3,1,n/a,11,0,0,4,1
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.PredicatePushDownTransformer.check(OperatorPlan)",15,1,n/a,28,1,1,17,9
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.PredicatePushDownTransformer.getMappedKeys(List<String>)",6,1,n/a,16,1,1,6,2
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.PredicatePushDownTransformer.reportChanges()",0,1,n/a,7,0,0,1,2
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.PredicatePushDownTransformer.setupColNameMaps()",13,1,n/a,12,1,0,7,4
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.PredicatePushDownTransformer.transform(OperatorPlan)",12,1,n/a,33,2,1,11,3
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.PredicatePushDownTransformer.updateMappedColNames(Expression)",7,3,n/a,9,1,1,6,3
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.PredicatePushdownOptimizer(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.buildPattern()",3,1,n/a,7,0,0,4,1
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.PushDownForEachFlatten(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.PushDownForEachFlattenTransformer.check(OperatorPlan)",30,1,n/a,92,7,1,55,26
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.PushDownForEachFlattenTransformer.getNonFlattenFieldUids(LOGenerate)",9,1,n/a,12,1,1,11,3
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.PushDownForEachFlattenTransformer.getProjectExpressions(LogicalExpressionPlan)",4,1,n/a,10,2,1,6,3
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.PushDownForEachFlattenTransformer.isPureProjection(LogicalExpressionPlan)",3,1,n/a,12,0,1,5,3
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.PushDownForEachFlattenTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.PushDownForEachFlattenTransformer.transform(OperatorPlan)",69,1,n/a,99,6,1,84,21
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.buildPattern()",3,1,n/a,7,0,0,4,1
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilter(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer.check(OperatorPlan)",18,1,n/a,76,4,1,42,32
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer.collectUidFromExpPlan(LogicalExpressionPlan)",6,2,n/a,12,2,1,8,3
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer.containUDF(LogicalExpressionPlan)",3,1,n/a,8,1,1,5,3
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer.findInputsToAddFilter(LogicalExpressionPlan,Operator,List<Operator>)",12,1,n/a,35,3,3,24,13
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer.findNonFilterPredecessor(Operator)",3,2,n/a,21,2,1,10,5
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer.hasAll(LogicalRelationalOperator,Set<Long>)",2,3,n/a,12,2,2,7,4
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer.insertFilter(Operator,Operator,LOFilter)",3,2,n/a,7,0,3,3,1
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer.transform(OperatorPlan)",59,1,n/a,88,4,1,64,20
"org.apache.pig.newplan.logical.rules.PushUpFilter.buildPattern()",3,1,n/a,7,0,0,4,1
"org.apache.pig.newplan.logical.rules.PushUpFilter.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.SplitFilter.SplitFilter(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.SplitFilter.SplitFilterTransformer.check(OperatorPlan)",6,1,n/a,10,1,1,6,3
"org.apache.pig.newplan.logical.rules.SplitFilter.SplitFilterTransformer.fillSubPlan(OperatorPlan,OperatorPlan,Operator)",4,3,n/a,11,2,3,6,3
"org.apache.pig.newplan.logical.rules.SplitFilter.SplitFilterTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.SplitFilter.SplitFilterTransformer.transform(OperatorPlan)",35,1,n/a,38,2,1,29,5
"org.apache.pig.newplan.logical.rules.SplitFilter.buildPattern()",3,1,n/a,9,0,0,4,1
"org.apache.pig.newplan.logical.rules.SplitFilter.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.StreamTypeCastInserter.StreamTypeCastInserter(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.StreamTypeCastInserter.buildPattern()",3,1,n/a,6,0,0,3,1
"org.apache.pig.newplan.logical.rules.StreamTypeCastInserter.determineSchema(LogicalRelationalOperator)",5,2,n/a,11,1,1,6,2
"org.apache.pig.newplan.logical.rules.StreamTypeCastInserter.isCastAdjusted(LogicalRelationalOperator)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.rules.StreamTypeCastInserter.markCastInserted(LogicalRelationalOperator)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.rules.StreamTypeCastInserter.markCastNoNeed(LogicalRelationalOperator)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.rules.TypeCastInserter.TypeCastInserter(String)",1,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.rules.TypeCastInserter.TypeCastInserterTransformer.atLeastOneCastNeeded(LogicalSchema,LogicalSchema)",4,2,n/a,12,2,2,7,5
"org.apache.pig.newplan.logical.rules.TypeCastInserter.TypeCastInserterTransformer.check(OperatorPlan)",10,1,n/a,29,1,1,17,9
"org.apache.pig.newplan.logical.rules.TypeCastInserter.TypeCastInserterTransformer.reportChanges()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.TypeCastInserter.TypeCastInserterTransformer.transform(OperatorPlan)",54,1,n/a,79,3,1,53,13
"org.apache.pig.newplan.logical.rules.TypeCastInserter.determineSchema(LogicalRelationalOperator)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.logical.rules.TypeCastInserter.getNewTransformer()",1,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.TypeCastInserter.isCastAdjusted(LogicalRelationalOperator)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.logical.rules.TypeCastInserter.markCastInserted(LogicalRelationalOperator)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.logical.rules.TypeCastInserter.markCastNoNeed(LogicalRelationalOperator)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.logical.rules.WholePlanRule.WholePlanRule(String,boolean)",1,2,n/a,3,0,2,1,1
"org.apache.pig.newplan.logical.rules.WholePlanRule.buildPattern()",0,1,n/a,4,0,0,1,1
"org.apache.pig.newplan.logical.rules.WholePlanRule.match(OperatorPlan)",2,1,n/a,6,0,1,4,1
"org.apache.pig.newplan.logical.visitor.CastLineageSetter.CastLineageSetter(LogicalPlan,CompilationMessageCollector)",5,1,n/a,14,0,2,5,1
"org.apache.pig.newplan.logical.visitor.CastLineageSetter.CastLineageSetterExpVisitor.CastLineageSetterExpVisitor(OperatorPlan,Map<Long, FuncSpec>,CompilationMessageCollector)",2,1,n/a,10,0,3,3,1
"org.apache.pig.newplan.logical.visitor.CastLineageSetter.CastLineageSetterExpVisitor.containsByteArrayOrEmtpyInSchema(LogicalFieldSchema)",4,2,n/a,20,1,1,10,7
"org.apache.pig.newplan.logical.visitor.CastLineageSetter.CastLineageSetterExpVisitor.visit(CastExpression)",13,1,n/a,29,2,1,9,3
"org.apache.pig.newplan.logical.visitor.CastLineageSetter.getVisitor(LogicalExpressionPlan)",1,5,n/a,5,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ColumnAliasConversionVisitor.ColumnAliasConversionVisitor(OperatorPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ColumnAliasConversionVisitor.getVisitor(LogicalExpressionPlan)",29,5,n/a,40,5,1,27,15
"org.apache.pig.newplan.logical.visitor.DanglingNestedNodeRemover.DanglingNestedNodeRemover(OperatorPlan)",2,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.DanglingNestedNodeRemover.visit(LOForEach)",10,1,n/a,24,3,1,16,6
"org.apache.pig.newplan.logical.visitor.DuplicateForEachColumnRewriteVisitor.DuplicateForEachColumnRewriteVisitor(OperatorPlan)",2,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.DuplicateForEachColumnRewriteVisitor.checkAndAdd(long,List<Long>)",2,2,n/a,6,0,2,4,2
"org.apache.pig.newplan.logical.visitor.DuplicateForEachColumnRewriteVisitor.findAllExpPlansToInsertIdentity(LOForEach)",33,1,n/a,52,6,1,33,16
"org.apache.pig.newplan.logical.visitor.DuplicateForEachColumnRewriteVisitor.visit(LOForEach)",13,1,n/a,24,1,1,12,3
"org.apache.pig.newplan.logical.visitor.ImplicitSplitInsertVisitor.ImplicitSplitInsertVisitor(LogicalPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ImplicitSplitInsertVisitor.execute(LogicalRelationalOperator)",24,17,n/a,47,1,1,23,5
"org.apache.pig.newplan.logical.visitor.ImplicitSplitInsertVisitor.nodeHasTwoOutputs(LogicalRelationalOperator)",2,1,n/a,13,1,1,6,5
"org.apache.pig.newplan.logical.visitor.InputOutputFileValidatorVisitor.InputOutputFileValidatorVisitor(OperatorPlan,PigContext)",2,1,n/a,4,0,2,2,1
"org.apache.pig.newplan.logical.visitor.InputOutputFileValidatorVisitor.visit(LOStore)",25,2,n/a,56,4,1,39,15
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindExpVisitor.LineageFindExpVisitor(LogicalExpressionPlan,Map<Long, FuncSpec>)",2,1,n/a,5,0,2,2,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindExpVisitor.getNULLConstantInCast(LogicalExpression)",6,3,n/a,20,2,1,9,5
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindExpVisitor.updateUidMap(LogicalExpression,LogicalExpression)",4,2,n/a,7,0,2,3,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindExpVisitor.visit(BinCondExpression)",19,1,n/a,24,1,1,12,3
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindExpVisitor.visit(DereferenceExpression)",2,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindExpVisitor.visit(MapLookupExpression)",2,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindExpVisitor.visit(ProjectExpression)",7,1,n/a,17,2,1,8,6
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindExpVisitor.visit(ScalarExpression)",21,1,n/a,45,3,1,22,6
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindRelVisitor(OperatorPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.addUidLoadFuncToMap(long,FuncSpec)",4,12,n/a,21,1,2,8,4
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.getAssociatedLoadFunc(LogicalRelationalOperator)",14,5,n/a,42,4,1,22,9
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.getUid2LoadFuncMap()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.haveIdenticalCasters(FuncSpec,FuncSpec)",12,5,n/a,24,1,2,11,11
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.instantiateCaster(FuncSpec)",11,2,n/a,27,2,1,16,7
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.mapMatchLoadFuncToUid(LogicalFieldSchema,List<LogicalFieldSchema>)",14,3,n/a,53,3,2,27,13
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.mapRelToPredLoadFunc(LogicalRelationalOperator,Operator)",3,1,n/a,6,1,2,2,2
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.mapToPredLoadFunc(LogicalRelationalOperator)",12,15,n/a,29,2,1,13,6
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.setLoadFuncForUids(LogicalSchema,FuncSpec)",3,4,n/a,16,1,2,5,3
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOCogroup)",33,1,n/a,39,2,1,24,8
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOCross)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LODistinct)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOFilter)",3,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOForEach)",6,1,n/a,9,0,1,6,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOGenerate)",18,1,n/a,32,3,1,19,8
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOInnerLoad)",23,1,n/a,26,3,1,11,8
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOJoin)",4,1,n/a,8,1,1,4,2
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOLimit)",4,1,n/a,6,0,1,3,2
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOLoad)",7,1,n/a,6,0,1,3,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LORank)",3,1,n/a,8,1,1,4,2
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOSort)",3,1,n/a,8,1,1,4,2
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOSplit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOSplitOutput)",18,1,n/a,32,2,1,19,8
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOStore)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOStream)",8,1,n/a,9,0,1,6,1
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LOUnion)",8,2,n/a,41,4,1,17,8
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visitExpression(LogicalExpressionPlan)",2,8,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.visitor.ProjExpanderForForeach.ProjExpanderForForeach(OperatorPlan,LOGenerate,Map<Integer, LogicalRelationalOperator>,Map<ProjectExpression, LogicalRelationalOperator>,LOForEach,List<LOInnerLoad>)",3,1,n/a,17,0,6,7,1
"org.apache.pig.newplan.logical.visitor.ProjExpanderForForeach.expandProjectStar(ProjectExpression)",8,1,n/a,22,1,1,16,3
"org.apache.pig.newplan.logical.visitor.ProjExpanderForForeach.visit(ProjectExpression)",3,1,n/a,6,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ProjExpanderForForeach.visit(UserFuncExpression)",27,2,n/a,62,3,1,31,13
"org.apache.pig.newplan.logical.visitor.ProjExpanderForNonForeach.ProjExpanderForNonForeach(OperatorPlan)",2,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ProjExpanderForNonForeach.expandProjectStar(ProjectExpression)",6,1,n/a,18,1,1,12,3
"org.apache.pig.newplan.logical.visitor.ProjExpanderForNonForeach.visit(UserFuncExpression)",18,2,n/a,48,3,1,24,11
"org.apache.pig.newplan.logical.visitor.ProjStarInUdfExpander.ProjStarInUdfExpander(OperatorPlan)",2,7,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ProjStarInUdfExpander.getVisitor(LogicalExpressionPlan)",1,5,n/a,6,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ProjStarInUdfExpander.visit(LOForEach)",29,2,n/a,79,3,1,42,11
"org.apache.pig.newplan.logical.visitor.ProjStarInUdfExpander.visit(LOGenerate)",0,1,n/a,3,0,1,0,1
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.FindProjects.FindProjects(LogicalExpressionPlan)",2,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.FindProjects.getProjs()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.FindProjects.visit(ProjectExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.ProjectStarExpander(OperatorPlan)",2,6,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.createExpPlanWithProj(LogicalRelationalOperator,int,int)",3,1,n/a,17,0,3,4,1
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.expandPlan(LogicalExpressionPlan,ProjectExpression,int)",6,1,n/a,28,1,3,13,3
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.expandPlan(LogicalExpressionPlan,int)",4,3,n/a,21,1,2,7,2
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.expandPlans(MultiMap<Integer, LogicalExpressionPlan>)",7,3,n/a,15,2,1,9,3
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.getProjectLonelyStar(LogicalExpressionPlan,Map<Integer, LogicalRelationalOperator>)",9,1,n/a,33,3,2,13,7
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.getProjectStar(LogicalExpressionPlan)",4,4,n/a,30,4,1,11,5
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.visit(LOCogroup)",15,2,n/a,42,3,1,18,7
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.visit(LOCube)",2,2,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.visit(LOForEach)",86,2,n/a,159,6,1,104,28
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.visit(LOJoin)",2,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.visit(LORank)",23,2,n/a,36,2,1,26,9
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.visit(LOSort)",23,2,n/a,44,2,1,26,9
"org.apache.pig.newplan.logical.visitor.ProjectStarExpanderUtil.getProjectStartEndCols(LogicalExpressionPlan,ProjectExpression)",17,3,n/a,45,1,2,17,7
"org.apache.pig.newplan.logical.visitor.ResetProjectionAttachedRelationalOpVisitor.ResetProjectionAttachedRelationalOpVisitor(LogicalExpressionPlan,LogicalRelationalOperator)",2,2,n/a,6,0,2,2,1
"org.apache.pig.newplan.logical.visitor.ResetProjectionAttachedRelationalOpVisitor.visit(ProjectExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ScalarVariableValidator.ProjectFinder.ProjectFinder(OperatorPlan,PlanWalker)",1,2,n/a,4,0,2,1,1
"org.apache.pig.newplan.logical.visitor.ScalarVariableValidator.ProjectFinder.found()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.visitor.ScalarVariableValidator.ProjectFinder.visit(ProjectExpression)",0,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ScalarVariableValidator.ScalarVariableValidator(OperatorPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.visitor.ScalarVariableValidator.visit(LOFilter)",7,1,n/a,17,3,1,8,4
"org.apache.pig.newplan.logical.visitor.ScalarVariableValidator.visit(LOLimit)",6,1,n/a,14,2,1,7,3
"org.apache.pig.newplan.logical.visitor.ScalarVisitor.ScalarVisitor(OperatorPlan,PigContext,String)",2,1,n/a,5,0,3,3,1
"org.apache.pig.newplan.logical.visitor.ScalarVisitor.getVisitor(LogicalExpressionPlan)",33,5,n/a,43,5,1,29,10
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.SchemaAliasVisitor(OperatorPlan)",2,2,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.validate(LogicalRelationalOperator)",12,16,n/a,25,4,1,15,7
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOCogroup)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOCross)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LODistinct)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOFilter)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOForEach)",3,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOGenerate)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOInnerLoad)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOJoin)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOLimit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LONative)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LORank)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOSort)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOSplit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOSplitOutput)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOStore)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOStream)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(LOUnion)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SortInfoSetter.SortInfoSetter(OperatorPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.visitor.SortInfoSetter.visit(LOStore)",21,2,n/a,36,4,1,22,10
"org.apache.pig.newplan.logical.visitor.StoreAliasSetter.StoreAliasSetter(OperatorPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.visitor.StoreAliasSetter.visit(LOStore)",4,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.FieldSchemaResetter.FieldSchemaResetter(OperatorPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.FieldSchemaResetter.execute(LogicalExpression)",1,24,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.ScoreFuncSpecListComparator.compare(Pair<Long, FuncSpec>,Pair<Long, FuncSpec>)",0,0,n/a,12,0,2,5,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.TypeCheckingExpVisitor(OperatorPlan,CompilationMessageCollector,LogicalRelationalOperator)",4,1,n/a,14,0,3,5,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.addCastsToCompareBinaryExp(BinaryExpression,boolean)",22,6,n/a,73,2,2,27,35
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.addCastsToNumericBinExpression(BinaryExpression)",23,4,n/a,47,2,1,21,12
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.bestFitMatch(List<FuncSpec>,Schema,SchemaType)",5,1,n/a,28,2,3,15,6
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.bestFitMatchWithByteArrays(List<FuncSpec>,Schema,UserFuncExpression,SchemaType)",43,1,n/a,90,6,4,38,11
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.byteArrayFound(UserFuncExpression,Schema)",3,1,n/a,24,3,2,13,5
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.collectCastWarning(Operator,byte,byte,CompilationMessageCollector)",5,2,n/a,59,1,4,42,13
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.convertEmptyTupleToBytearrayTuple(FieldSchema)",5,2,n/a,14,2,1,6,6
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.exactMatch(List<FuncSpec>,Schema,UserFuncExpression,SchemaType)",1,1,n/a,16,0,4,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.exactMatchHelper(List<FuncSpec>,Schema,UserFuncExpression,SchemaType,boolean)",17,2,n/a,37,2,5,14,5
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.exactMatchWithByteArrays(List<FuncSpec>,Schema,UserFuncExpression,SchemaType)",1,1,n/a,19,0,4,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.fitPossible(Schema,Schema,SchemaType)",20,2,n/a,56,2,3,31,17
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.generateIncompatibleTypesMessage(BinaryExpression)",12,3,n/a,15,1,1,7,5
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.getByteArrayPositions(UserFuncExpression,Schema)",5,1,n/a,24,3,2,12,4
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.insertCast(LogicalExpression,LogicalFieldSchema,LogicalExpression)",7,3,n/a,19,1,3,9,2
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.insertCast(LogicalExpression,byte,LogicalExpression)",2,28,n/a,13,0,3,2,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.insertCastsForNullToBoolean(BinaryExpression)",10,1,n/a,9,0,1,4,5
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.insertCastsForUDF(UserFuncExpression,Schema,Schema,SchemaType)",10,1,n/a,17,2,4,10,5
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.isNotBagWithEmptyTuple(FieldSchema)",3,1,n/a,19,1,1,4,6
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.schemaEqualsForMatching(Schema,Schema,SchemaType,boolean)",19,1,n/a,82,4,4,30,20
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.throwIncompatibleTypeError(BinaryExpression)",3,2,n/a,7,0,1,4,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(AddExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(AndExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(BinCondExpression)",56,1,n/a,84,4,1,45,25
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(CastExpression)",18,2,n/a,40,1,1,17,7
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(DereferenceExpression)",4,1,n/a,17,1,1,10,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(DivideExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(EqualExpression)",1,1,n/a,5,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(GreaterThanEqualExpression)",1,1,n/a,5,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(GreaterThanExpression)",1,1,n/a,5,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(LessThanEqualExpression)",1,1,n/a,5,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(LessThanExpression)",1,1,n/a,5,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(MapLookupExpression)",4,1,n/a,9,1,1,2,2
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(ModExpression)",17,1,n/a,49,2,1,32,18
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(MultiplyExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(NegativeExpression)",7,1,n/a,17,1,1,8,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(NotEqualExpression)",1,1,n/a,5,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(NotExpression)",9,1,n/a,14,1,1,8,4
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(OrExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(RegexExpression)",14,1,n/a,25,1,1,9,5
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(SubtractExpression)",1,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visit(UserFuncExpression)",43,2,n/a,132,5,1,52,17
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.visitBooleanBinary(BinaryExpression)",7,2,n/a,16,1,1,10,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.TypeCheckingRelVisitor(OperatorPlan,CompilationMessageCollector)",2,2,n/a,5,0,2,2,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.getAtomicColType(MultiMap<Integer, LogicalExpressionPlan>)",13,1,n/a,36,2,1,20,5
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.getAtomicJoinColType(LOJoin)",14,1,n/a,36,2,1,20,5
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.getSchemaFromInnerPlans(MultiMap<Integer, LogicalExpressionPlan>,LogicalRelationalOperator)",24,2,n/a,73,4,2,36,9
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.insertAtomicCastForInnerPlan(LogicalExpressionPlan,LogicalRelationalOperator,byte)",14,5,n/a,34,1,3,14,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.insertCastForEachInBetweenIfNecessary(LogicalRelationalOperator,LogicalRelationalOperator)",37,1,n/a,101,2,2,57,10
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.isCoGroupOnMultiCols(LOCogroup)",5,1,n/a,12,1,1,4,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.isJoinOnMultiCols(LOJoin)",5,2,n/a,12,1,1,4,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.isMultiExprPlanPerInput(MultiMap<Integer, LogicalExpressionPlan>)",4,1,n/a,8,1,1,3,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.throwTypeCheckerException(Operator,String,int,byte,FrontendException)",2,37,n/a,7,1,5,3,2
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOCogroup)",51,1,n/a,99,5,1,63,15
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOCross)",4,1,n/a,21,1,1,7,2
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LODistinct)",4,1,n/a,20,1,1,7,2
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOFilter)",17,1,n/a,38,1,1,21,4
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOForEach)",7,2,n/a,15,1,1,8,2
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOGenerate)",11,1,n/a,17,2,1,12,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOInnerLoad)",2,1,n/a,5,0,1,2,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOJoin)",47,1,n/a,98,5,1,64,15
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOLimit)",17,1,n/a,39,2,1,23,7
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOLoad)",0,1,n/a,4,0,1,0,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LORank)",12,1,n/a,31,2,1,18,4
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOSort)",13,1,n/a,30,2,1,17,4
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOSplit)",9,1,n/a,23,1,1,13,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOSplitOutput)",21,1,n/a,39,1,1,26,5
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOStore)",2,2,n/a,6,0,1,2,1
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visit(LOUnion)",21,2,n/a,57,4,1,27,9
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.visitExpressionPlan(LogicalExpressionPlan,LogicalRelationalOperator)",2,9,n/a,7,0,2,2,1
"org.apache.pig.newplan.logical.visitor.UDFExpFinder.UDFExpFinder(OperatorPlan)",2,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.UDFExpFinder.getUDFList()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.logical.visitor.UDFExpFinder.visit(UserFuncExpression)",1,2,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.UDFFinder.UDFFinder(OperatorPlan)",2,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.UDFFinder.getUDFList()",0,1,n/a,7,0,0,1,1
"org.apache.pig.newplan.logical.visitor.UDFFinder.visit(LOForEach)",5,1,n/a,8,0,1,5,1
"org.apache.pig.newplan.logical.visitor.UDFFinder.visit(LOGenerate)",5,1,n/a,8,1,1,4,2
"org.apache.pig.newplan.logical.visitor.UnionOnSchemaSetter.UnionOnSchemaSetter(OperatorPlan)",2,1,n/a,4,0,1,1,1
"org.apache.pig.newplan.logical.visitor.UnionOnSchemaSetter.visit(LOUnion)",49,2,n/a,70,4,1,54,12
"org.apache.pig.newplan.optimizer.PlanOptimizer.PlanOptimizer(OperatorPlan,List<Set<Rule>>,int)",1,1,n/a,14,0,3,4,2
"org.apache.pig.newplan.optimizer.PlanOptimizer.addPlanTransformListener(PlanTransformListener)",1,2,n/a,9,0,1,1,1
"org.apache.pig.newplan.optimizer.PlanOptimizer.optimize()",12,1,n/a,45,9,0,24,13
"org.apache.pig.newplan.optimizer.PlanTransformListener.transformed(OperatorPlan,OperatorPlan)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.apache.pig.newplan.optimizer.Rule.PatternMatchOperatorPlan.PatternMatchOperatorPlan(OperatorPlan)",1,1,n/a,3,0,1,1,1
"org.apache.pig.newplan.optimizer.Rule.PatternMatchOperatorPlan.check(List<Operator>)",14,1,n/a,20,2,1,15,6
"org.apache.pig.newplan.optimizer.Rule.PatternMatchOperatorPlan.check(Operator,Operator,Deque<Operator>)",22,2,n/a,56,5,3,33,16
"org.apache.pig.newplan.optimizer.Rule.Rule(String,OperatorPlan)",0,0,n/a,8,0,2,2,1
"org.apache.pig.newplan.optimizer.Rule.Rule(String,boolean)",1,13,n/a,10,0,2,3,1
"org.apache.pig.newplan.optimizer.Rule.buildPattern()",n/a,1,15,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.optimizer.Rule.getName()",0,5,n/a,3,0,0,1,1
"org.apache.pig.newplan.optimizer.Rule.getNewTransformer()",n/a,1,14,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.optimizer.Rule.getPattern()",0,0,n/a,7,0,0,1,1
"org.apache.pig.newplan.optimizer.Rule.isMandatory()",0,2,n/a,3,0,0,1,1
"org.apache.pig.newplan.optimizer.Rule.isSkipListener()",0,1,n/a,3,0,0,1,1
"org.apache.pig.newplan.optimizer.Rule.match(Operator,Operator)",4,4,n/a,7,0,2,1,2
"org.apache.pig.newplan.optimizer.Rule.match(OperatorPlan)",33,1,n/a,84,6,1,47,15
"org.apache.pig.newplan.optimizer.Rule.setSkipListener(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.pig.newplan.optimizer.Transformer.check(OperatorPlan)",n/a,1,14,n/a,n/a,1,n/a,n/a
"org.apache.pig.newplan.optimizer.Transformer.reportChanges()",n/a,1,14,n/a,n/a,0,n/a,n/a
"org.apache.pig.newplan.optimizer.Transformer.transform(OperatorPlan)",n/a,1,14,n/a,n/a,1,n/a,n/a
"org.apache.pig.parser.DryRunGruntParser.DryRunGruntParser(Reader,String,PigContext)",1,1,n/a,5,0,3,3,1
"org.apache.pig.parser.DryRunGruntParser.getResult()",1,1,n/a,1,0,0,1,1
"org.apache.pig.parser.DryRunGruntParser.parseStopOnError()",2,1,n/a,11,2,0,6,3
"org.apache.pig.parser.DryRunGruntParser.printAliases()",0,0,n/a,3,0,0,0,1
"org.apache.pig.parser.DryRunGruntParser.printClear()",0,0,n/a,3,0,0,0,1
"org.apache.pig.parser.DryRunGruntParser.printHelp()",0,0,n/a,3,0,0,0,1
"org.apache.pig.parser.DryRunGruntParser.processCD(String)",3,0,n/a,4,0,1,1,1
"org.apache.pig.parser.DryRunGruntParser.processCat(String)",3,0,n/a,4,0,1,1,1
"org.apache.pig.parser.DryRunGruntParser.processCopy(String,String)",5,0,n/a,4,0,2,1,1
"org.apache.pig.parser.DryRunGruntParser.processCopyFromLocal(String,String)",5,0,n/a,5,0,2,1,1
"org.apache.pig.parser.DryRunGruntParser.processCopyToLocal(String,String)",5,0,n/a,5,0,2,1,1
"org.apache.pig.parser.DryRunGruntParser.processDeclare(String,String)",0,0,n/a,3,0,2,0,1
"org.apache.pig.parser.DryRunGruntParser.processDefault(String,String)",0,0,n/a,3,0,2,0,1
"org.apache.pig.parser.DryRunGruntParser.processDescribe(String)",3,0,n/a,4,0,1,1,1
"org.apache.pig.parser.DryRunGruntParser.processDump(String)",3,0,n/a,4,0,1,1,1
"org.apache.pig.parser.DryRunGruntParser.processExplain(String,String,boolean,String,String,List<String>,List<String>)",20,0,n/a,34,2,7,20,13
"org.apache.pig.parser.DryRunGruntParser.processFsCommand(String[])",5,0,n/a,5,0,1,2,1
"org.apache.pig.parser.DryRunGruntParser.processHistory(boolean)",0,0,n/a,3,0,1,0,1
"org.apache.pig.parser.DryRunGruntParser.processIllustrate(String,String,String,List<String>,List<String>)",15,0,n/a,26,2,5,14,8
"org.apache.pig.parser.DryRunGruntParser.processKill(String)",3,0,n/a,4,0,1,1,1
"org.apache.pig.parser.DryRunGruntParser.processLS(String)",4,0,n/a,6,0,1,4,2
"org.apache.pig.parser.DryRunGruntParser.processMkdir(String)",3,0,n/a,4,0,1,1,1
"org.apache.pig.parser.DryRunGruntParser.processMove(String,String)",5,0,n/a,4,0,2,1,1
"org.apache.pig.parser.DryRunGruntParser.processPWD()",1,0,n/a,4,0,0,1,1
"org.apache.pig.parser.DryRunGruntParser.processPig(String)",38,0,n/a,60,2,1,47,13
"org.apache.pig.parser.DryRunGruntParser.processRegister(String)",3,0,n/a,4,0,1,1,1
"org.apache.pig.parser.DryRunGruntParser.processRegister(String,String,String)",8,0,n/a,12,1,3,6,3
"org.apache.pig.parser.DryRunGruntParser.processRemove(String,String)",5,0,n/a,9,1,2,4,3
"org.apache.pig.parser.DryRunGruntParser.processSQLCommand(String)",3,0,n/a,4,0,1,1,1
"org.apache.pig.parser.DryRunGruntParser.processScript(String,boolean,List<String>,List<String>)",10,0,n/a,18,2,4,10,6
"org.apache.pig.parser.DryRunGruntParser.processSet()",1,0,n/a,4,0,0,1,1
"org.apache.pig.parser.DryRunGruntParser.processSet(String,String)",5,0,n/a,5,0,2,1,1
"org.apache.pig.parser.DryRunGruntParser.processShCommand(String[])",5,0,n/a,5,0,1,2,1
"org.apache.pig.parser.DryRunGruntParser.prompt()",0,0,n/a,3,0,0,0,1
"org.apache.pig.parser.DryRunGruntParser.quit()",0,0,n/a,4,0,0,1,1
"org.apache.pig.parser.DuplicatedSchemaAliasException.DuplicatedSchemaAliasException(IntStream,SourceLocation,String)",1,0,n/a,4,0,3,2,1
"org.apache.pig.parser.DuplicatedSchemaAliasException.getAlias()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.DuplicatedSchemaAliasException.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.FunctionType.tryCasting(Class<?>,byte)",3,2,n/a,28,1,2,24,9
"org.apache.pig.parser.InvalidCommandException.InvalidCommandException(IntStream,SourceLocation,String)",1,2,n/a,4,0,3,2,1
"org.apache.pig.parser.InvalidCommandException.getCmd()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.InvalidCommandException.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.InvalidPathException.InvalidPathException(IntStream,SourceLocation,MalformedURLException)",1,1,n/a,4,0,3,2,1
"org.apache.pig.parser.InvalidPathException.getEx()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.InvalidPathException.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.InvalidScalarProjectionException.InvalidScalarProjectionException(IntStream,SourceLocation,ScalarExpression)",1,0,n/a,6,0,3,3,1
"org.apache.pig.parser.InvalidScalarProjectionException.InvalidScalarProjectionException(IntStream,SourceLocation,ScalarExpression,String)",2,0,n/a,10,0,4,3,1
"org.apache.pig.parser.InvalidScalarProjectionException.toString()",3,0,n/a,5,0,0,1,2
"org.apache.pig.parser.LogicalPlanBuilder.LogicalPlanBuilder(IntStream)",5,0,n/a,8,0,1,6,1
"org.apache.pig.parser.LogicalPlanBuilder.LogicalPlanBuilder(PigContext,String,Map<String, String>,IntStream)",1,0,n/a,8,0,4,5,1
"org.apache.pig.parser.LogicalPlanBuilder.buildAssertOp(SourceLocation,LOFilter,String,String,LogicalExpression,String,LogicalExpressionPlan)",17,0,n/a,22,1,7,14,3
"org.apache.pig.parser.LogicalPlanBuilder.buildCommand(SourceLocation,String)",5,1,n/a,11,1,2,7,2
"org.apache.pig.parser.LogicalPlanBuilder.buildCommand(SourceLocation,String,List<String>,List<String>,List<HandleSpec>,List<HandleSpec>,String,Integer)",10,0,n/a,40,3,8,23,13
"org.apache.pig.parser.LogicalPlanBuilder.buildCrossOp(SourceLocation,String,List<String>,String)",2,0,n/a,4,0,4,2,1
"org.apache.pig.parser.LogicalPlanBuilder.buildCubeOp(SourceLocation,LOCube,String,String,List<String>,MultiMap<Integer, LogicalExpressionPlan>)",16,0,n/a,23,1,6,13,3
"org.apache.pig.parser.LogicalPlanBuilder.buildDistinctOp(SourceLocation,String,String,String)",2,0,n/a,4,0,4,2,1
"org.apache.pig.parser.LogicalPlanBuilder.buildFilterOp(SourceLocation,LOFilter,String,String,LogicalExpressionPlan)",9,3,n/a,13,1,5,7,2
"org.apache.pig.parser.LogicalPlanBuilder.buildForeachOp(SourceLocation,LOForEach,String,String,LogicalPlan)",12,1,n/a,13,1,5,8,2
"org.apache.pig.parser.LogicalPlanBuilder.buildFuncSpec(SourceLocation,String,List<String>,byte)",5,0,n/a,6,0,4,4,2
"org.apache.pig.parser.LogicalPlanBuilder.buildGenerateOp(SourceLocation,LOForEach,LOGenerate,List<LogicalExpressionPlan>,List<Boolean>,List<LogicalSchema>)",21,1,n/a,38,3,6,27,8
"org.apache.pig.parser.LogicalPlanBuilder.buildGroupOp(SourceLocation,LOCogroup,String,List<String>,MultiMap<Integer, LogicalExpressionPlan>,GROUPTYPE,List<Boolean>,String)",24,1,n/a,36,4,8,24,8
"org.apache.pig.parser.LogicalPlanBuilder.buildInvokerUDF(SourceLocation,LogicalExpressionPlan,String,String,boolean,List<LogicalExpression>)",4,0,n/a,5,0,6,3,1
"org.apache.pig.parser.LogicalPlanBuilder.buildJoinOp(SourceLocation,LOJoin,String,List<String>,MultiMap<Integer, LogicalExpressionPlan>,JOINTYPE,List<Boolean>,String)",28,0,n/a,53,2,8,35,15
"org.apache.pig.parser.LogicalPlanBuilder.buildLimitOp(SourceLocation,LOLimit,String,String,LogicalExpressionPlan)",2,0,n/a,4,0,5,2,1
"org.apache.pig.parser.LogicalPlanBuilder.buildLimitOp(SourceLocation,String,String,long)",2,0,n/a,4,0,4,2,1
"org.apache.pig.parser.LogicalPlanBuilder.buildLoadOp(SourceLocation,String,String,FuncSpec,LogicalSchema)",32,0,n/a,51,3,5,29,9
"org.apache.pig.parser.LogicalPlanBuilder.buildNativeOp(SourceLocation,String,String,List<String>,String,String,IntStream)",15,0,n/a,21,1,7,14,4
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedCrossOp(SourceLocation,LogicalPlan,String,List<Operator>)",3,0,n/a,6,0,4,4,1
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedDistinctOp(SourceLocation,LogicalPlan,String,Operator)",2,0,n/a,5,0,4,3,1
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedFilterOp(SourceLocation,LOFilter,LogicalPlan,String,Operator,LogicalExpressionPlan)",2,0,n/a,7,0,6,3,1
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedForeachOp(SourceLocation,LOForEach,LogicalPlan,String,Operator,LogicalPlan)",2,0,n/a,7,0,6,3,1
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedLimitOp(SourceLocation,LOLimit,LogicalPlan,String,Operator,LogicalExpressionPlan)",2,0,n/a,6,0,6,3,1
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedLimitOp(SourceLocation,LogicalPlan,String,Operator,long)",2,0,n/a,5,0,5,3,1
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedOp(SourceLocation,LogicalPlan,LogicalRelationalOperator,String,List<Operator>)",4,1,n/a,9,1,5,5,2
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedOp(SourceLocation,LogicalPlan,LogicalRelationalOperator,String,Operator)",4,6,n/a,7,0,5,4,1
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedOperatorInput(SourceLocation,LogicalPlan,LOForEach,Map<String, Operator>,LogicalExpression)",16,0,n/a,25,2,5,17,5
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedProjectOp(SourceLocation,LogicalPlan,LOForEach,Map<String, Operator>,String,ProjectExpression,List<LogicalExpressionPlan>)",39,0,n/a,56,2,7,37,6
"org.apache.pig.parser.LogicalPlanBuilder.buildNestedSortOp(SourceLocation,LOSort,LogicalPlan,String,Operator,List<LogicalExpressionPlan>,List<Boolean>,FuncSpec)",7,0,n/a,13,1,8,10,3
"org.apache.pig.parser.LogicalPlanBuilder.buildOp(SourceLocation,LogicalRelationalOperator,String,List<String>,String)",12,19,n/a,17,2,5,12,3
"org.apache.pig.parser.LogicalPlanBuilder.buildOp(SourceLocation,LogicalRelationalOperator,String,String,String)",3,19,n/a,7,0,5,4,2
"org.apache.pig.parser.LogicalPlanBuilder.buildProjectExpr(SourceLocation,LogicalExpressionPlan,LogicalRelationalOperator,Map<String, Operator>,Map<String, LogicalExpressionPlan>,String,int)",16,0,n/a,54,5,7,29,9
"org.apache.pig.parser.LogicalPlanBuilder.buildProjectExpr(SourceLocation,LogicalExpressionPlan,LogicalRelationalOperator,int,String,int)",3,0,n/a,15,0,6,4,2
"org.apache.pig.parser.LogicalPlanBuilder.buildRangeProjectExpr(SourceLocation,LogicalExpressionPlan,LogicalRelationalOperator,int,LogicalExpression,LogicalExpression)",21,0,n/a,65,3,6,29,12
"org.apache.pig.parser.LogicalPlanBuilder.buildRankOp(SourceLocation,LORank,String,String,List<LogicalExpressionPlan>,List<Boolean>)",16,0,n/a,19,1,6,14,4
"org.apache.pig.parser.LogicalPlanBuilder.buildSampleOp(SourceLocation,LOFilter,String,String,LogicalExpressionPlan,LogicalExpression)",5,0,n/a,7,0,6,3,1
"org.apache.pig.parser.LogicalPlanBuilder.buildSampleOp(SourceLocation,String,String,double,SourceLocation)",9,0,n/a,12,0,5,7,1
"org.apache.pig.parser.LogicalPlanBuilder.buildSortOp(SourceLocation,LOSort,String,String,List<LogicalExpressionPlan>,List<Boolean>,FuncSpec)",17,0,n/a,19,1,7,15,4
"org.apache.pig.parser.LogicalPlanBuilder.buildSplitOp(SourceLocation,String)",2,0,n/a,4,0,2,2,1
"org.apache.pig.parser.LogicalPlanBuilder.buildSplitOtherwiseOp(SourceLocation,LOSplitOutput,String,String)",24,0,n/a,51,2,4,27,8
"org.apache.pig.parser.LogicalPlanBuilder.buildSplitOutputOp(SourceLocation,LOSplitOutput,String,String,LogicalExpressionPlan)",2,0,n/a,5,0,5,2,1
"org.apache.pig.parser.LogicalPlanBuilder.buildStoreOp(SourceLocation,String,String,String,FuncSpec)",16,0,n/a,27,3,5,16,5
"org.apache.pig.parser.LogicalPlanBuilder.buildStreamOp(SourceLocation,String,String,StreamingCommand,LogicalSchema,IntStream)",4,0,n/a,10,1,6,4,2
"org.apache.pig.parser.LogicalPlanBuilder.buildTuple(List<Object>)",2,0,n/a,4,0,1,2,1
"org.apache.pig.parser.LogicalPlanBuilder.buildUDF(SourceLocation,LogicalExpressionPlan,String,List<LogicalExpression>)",9,0,n/a,24,1,4,14,3
"org.apache.pig.parser.LogicalPlanBuilder.buildUnionOp(SourceLocation,String,List<String>,boolean)",3,0,n/a,5,0,4,3,1
"org.apache.pig.parser.LogicalPlanBuilder.checkDuplicateAliases(List<String>,SourceLocation,String)",6,2,n/a,19,2,3,8,4
"org.apache.pig.parser.LogicalPlanBuilder.checkDuplicateProject(List<LogicalExpressionPlan>)",15,1,n/a,23,3,1,17,6
"org.apache.pig.parser.LogicalPlanBuilder.checkRangeProjectExpr(SourceLocation,LogicalExpression)",1,2,n/a,9,1,2,3,2
"org.apache.pig.parser.LogicalPlanBuilder.combineCubeOperations(ArrayList<String>,MultiMap<Integer, LogicalExpressionPlan>)",8,1,n/a,41,4,2,23,8
"org.apache.pig.parser.LogicalPlanBuilder.convertCubeToFGPlan(SourceLocation,LOCube,String,List<String>,MultiMap<Integer, LogicalExpressionPlan>)",80,1,n/a,136,6,5,83,22
"org.apache.pig.parser.LogicalPlanBuilder.createCubeOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createDataBag()",2,0,n/a,4,0,0,2,1
"org.apache.pig.parser.LogicalPlanBuilder.createFilterOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createForeachOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createGenerateOp(LogicalPlan)",1,0,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createGroupOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createInnerLoad(SourceLocation,LogicalPlan,LOForEach,String)",2,3,n/a,8,1,4,3,2
"org.apache.pig.parser.LogicalPlanBuilder.createJoinOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createLimitOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createNestedFilterOp(LogicalPlan)",1,0,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createNestedForeachOp(LogicalPlan)",1,0,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createNestedLimitOp(LogicalPlan)",1,0,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createNestedSortOp(LogicalPlan)",1,0,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createRankOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createSampleOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createSortOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.createSplitOutputOp()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.defineCommand(String,StreamingCommand)",4,0,n/a,8,1,2,4,2
"org.apache.pig.parser.LogicalPlanBuilder.defineFunction(String,FuncSpec)",3,0,n/a,8,1,2,4,2
"org.apache.pig.parser.LogicalPlanBuilder.getLastRel()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.getLastRel(SourceLocation)",1,0,n/a,6,1,1,3,2
"org.apache.pig.parser.LogicalPlanBuilder.getNextId()",1,1,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.getNextId(String)",1,2,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.getOperators()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.getPlan()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.getProjectExpList(List<LogicalExpressionPlan>,LogicalRelationalOperator)",11,1,n/a,21,3,2,14,4
"org.apache.pig.parser.LogicalPlanBuilder.getUserDefinedSchema(List<LogicalExpressionPlan>)",16,1,n/a,29,4,1,16,6
"org.apache.pig.parser.LogicalPlanBuilder.injectForeachOperator(SourceLocation,LOCube,LOForEach)",12,1,n/a,22,3,3,11,5
"org.apache.pig.parser.LogicalPlanBuilder.lookupCommand(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.lookupFunction(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.lookupOperator(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.mergeAndMarkForDelete(ArrayList<String>,MultiMap<Integer, LogicalExpressionPlan>,int,int)",5,2,n/a,13,1,4,7,2
"org.apache.pig.parser.LogicalPlanBuilder.newOperatorKey()",3,3,n/a,3,0,0,1,1
"org.apache.pig.parser.LogicalPlanBuilder.newOperatorKey(String)",3,2,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.parseBigDecimal(String)",3,0,n/a,4,0,1,2,1
"org.apache.pig.parser.LogicalPlanBuilder.parseBigInteger(String)",3,0,n/a,4,0,1,2,1
"org.apache.pig.parser.LogicalPlanBuilder.parseGroupType(String,SourceLocation)",5,0,n/a,13,1,2,8,4
"org.apache.pig.parser.LogicalPlanBuilder.parseJoinType(String,SourceLocation)",9,0,n/a,17,1,2,12,8
"org.apache.pig.parser.LogicalPlanBuilder.parseLong(String)",3,0,n/a,7,0,1,2,1
"org.apache.pig.parser.LogicalPlanBuilder.performDeletion(MultiMap<Integer, LogicalExpressionPlan>,ArrayList<String>)",15,1,n/a,23,2,2,16,5
"org.apache.pig.parser.LogicalPlanBuilder.processExpressionPlan(LOForEach,LogicalPlan,LogicalExpressionPlan,ArrayList<Operator>)",20,1,n/a,56,5,4,22,7
"org.apache.pig.parser.LogicalPlanBuilder.putOperator(String,Operator)",1,0,n/a,3,0,2,1,1
"org.apache.pig.parser.LogicalPlanBuilder.setAlias(LogicalRelationalOperator,String)",2,4,n/a,5,0,2,3,2
"org.apache.pig.parser.LogicalPlanBuilder.setBytearrayForNULLType(LogicalSchema)",2,1,n/a,14,2,1,5,4
"org.apache.pig.parser.LogicalPlanBuilder.setParallel(LogicalRelationalOperator,Integer)",1,0,n/a,5,1,2,2,2
"org.apache.pig.parser.LogicalPlanBuilder.setPartitioner(LogicalRelationalOperator,String)",1,1,n/a,4,0,2,2,2
"org.apache.pig.parser.LogicalPlanBuilder.setupInnerLoadAndProj(LOInnerLoad,ProjectExpression,LogicalPlan,ArrayList<Operator>)",7,3,n/a,9,0,4,5,1
"org.apache.pig.parser.LogicalPlanBuilder.typeToClass(Class<?>)",1,2,n/a,21,1,1,17,9
"org.apache.pig.parser.LogicalPlanBuilder.undollar(String)",3,0,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.unquote(String)",3,2,n/a,3,0,1,1,1
"org.apache.pig.parser.LogicalPlanBuilder.validateFuncSpec(SourceLocation,FuncSpec,byte)",4,1,n/a,15,2,3,10,3
"org.apache.pig.parser.NonProjectExpressionException.NonProjectExpressionException(IntStream,SourceLocation,LogicalExpression)",1,1,n/a,4,0,3,2,1
"org.apache.pig.parser.NonProjectExpressionException.getExpression()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.NonProjectExpressionException.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.ParserException.ParserException(RecognitionException)",1,24,n/a,3,0,1,1,1
"org.apache.pig.parser.ParserException.ParserException(String)",1,24,n/a,3,0,1,1,1
"org.apache.pig.parser.ParserException.ParserException(String,SourceLocation)",1,1,n/a,3,0,2,1,1
"org.apache.pig.parser.ParserException.ParserException(String,Throwable)",1,0,n/a,3,0,2,1,1
"org.apache.pig.parser.ParserException.toString()",1,6,n/a,4,0,0,1,1
"org.apache.pig.parser.ParserValidationException.ParserValidationException(IntStream,SourceLocation,Exception)",1,18,n/a,4,0,3,2,1
"org.apache.pig.parser.ParserValidationException.ParserValidationException(IntStream,SourceLocation,String)",1,18,n/a,4,0,3,2,1
"org.apache.pig.parser.ParserValidationException.getCause()",0,0,n/a,4,0,0,1,1
"org.apache.pig.parser.ParserValidationException.toString()",2,0,n/a,3,0,0,1,2
"org.apache.pig.parser.PigMacro.PigMacro(String,String,List<String>,List<String>,String,Map<String, PigMacro>)",4,1,n/a,11,0,6,8,3
"org.apache.pig.parser.PigMacro.getErrorMessage(String,int,String,String)",12,10,n/a,13,1,4,8,3
"org.apache.pig.parser.PigMacro.getName()",0,1,n/a,1,0,0,1,1
"org.apache.pig.parser.PigMacro.getStack()",0,0,n/a,1,0,0,1,1
"org.apache.pig.parser.PigMacro.getStartLine()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.PigMacro.inline(String[],String[],CommonTree,String)",6,1,n/a,14,2,4,8,4
"org.apache.pig.parser.PigMacro.isMultiValueReturn(StreamTokenizer,List<String>,boolean)",6,2,n/a,16,2,3,8,9
"org.apache.pig.parser.PigMacro.macroInline(CommonTree,List<PigMacro>,Set<String>,PigContext)",27,2,n/a,58,2,4,30,7
"org.apache.pig.parser.PigMacro.maskAlias(String,Set<String>,CommonTree,String)",49,1,n/a,76,1,4,48,8
"org.apache.pig.parser.PigMacro.matchChar(StreamTokenizer,int,boolean)",2,7,n/a,7,0,3,6,4
"org.apache.pig.parser.PigMacro.matchDollarAlias(StreamTokenizer,boolean)",4,3,n/a,10,1,2,6,6
"org.apache.pig.parser.PigMacro.matchWord(StreamTokenizer,String,boolean)",3,3,n/a,10,1,3,6,5
"org.apache.pig.parser.PigMacro.setInvocationStack(Tree,List<InvocationPoint>)",4,2,n/a,8,1,2,7,2
"org.apache.pig.parser.PigMacro.setPigContext(PigContext)",0,1,n/a,3,0,1,1,1
"org.apache.pig.parser.PigMacro.setStack(Set<String>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.parser.PigMacro.setStartLine(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.parser.PigMacro.skipSingleLineComment(StreamTokenizer)",5,1,n/a,10,1,1,7,4
"org.apache.pig.parser.PigMacro.substituteParams(String[],String[],int,String)",48,1,n/a,74,3,4,43,22
"org.apache.pig.parser.PigMacro.traverseMacro(Tree,List<CommonTree>,String)",6,3,n/a,11,1,3,8,3
"org.apache.pig.parser.PigMacro.validate()",36,1,n/a,46,5,0,31,17
"org.apache.pig.parser.PigParserNode.InvocationPoint.InvocationPoint(int,String,String)",0,1,n/a,5,0,3,3,1
"org.apache.pig.parser.PigParserNode.InvocationPoint.getFile()",0,1,n/a,3,0,0,1,1
"org.apache.pig.parser.PigParserNode.InvocationPoint.getLine()",0,1,n/a,3,0,0,1,1
"org.apache.pig.parser.PigParserNode.InvocationPoint.getMacro()",0,1,n/a,3,0,0,1,1
"org.apache.pig.parser.PigParserNode.PigParserNode(PigParserNode)",2,1,n/a,6,0,1,4,1
"org.apache.pig.parser.PigParserNode.PigParserNode(Token,String,Token)",2,0,n/a,4,0,3,2,1
"org.apache.pig.parser.PigParserNode.PigParserNode(Token,String,int)",3,2,n/a,7,1,3,4,3
"org.apache.pig.parser.PigParserNode.dupNode()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.PigParserNode.getFileName()",0,6,n/a,3,0,0,1,1
"org.apache.pig.parser.PigParserNode.getInvocationStack()",0,1,n/a,3,0,0,1,1
"org.apache.pig.parser.PigParserNode.getNextInvocationPoint()",2,2,n/a,4,0,0,3,3
"org.apache.pig.parser.PigParserNode.getStartLine()",0,1,n/a,3,0,0,1,1
"org.apache.pig.parser.PigParserNode.setInvocationStack(List<InvocationPoint>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.parser.PigParserNodeAdaptor.PigParserNodeAdaptor(String,int)",0,1,n/a,4,0,2,2,1
"org.apache.pig.parser.PigParserNodeAdaptor.create(Token)",1,0,n/a,4,0,1,1,1
"org.apache.pig.parser.PigRecognitionException.PigRecognitionException(IntStream,SourceLocation)",3,10,n/a,6,0,2,4,1
"org.apache.pig.parser.PigRecognitionException.msgHeader()",1,8,n/a,3,0,0,1,1
"org.apache.pig.parser.PlanGenerationFailureException.PlanGenerationFailureException(IntStream,SourceLocation,Exception)",1,8,n/a,4,0,3,2,1
"org.apache.pig.parser.PlanGenerationFailureException.getCause()",0,0,n/a,4,0,0,1,1
"org.apache.pig.parser.PlanGenerationFailureException.getEx()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.PlanGenerationFailureException.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.parser.QueryParserDriver.QueryParserDriver(PigContext,String,Map<String, String>)",2,5,n/a,8,0,3,6,1
"org.apache.pig.parser.QueryParserDriver.applyRegisters(Tree)",27,2,n/a,33,3,1,20,8
"org.apache.pig.parser.QueryParserDriver.checkError(BaseRecognizer)",2,10,n/a,7,0,1,3,2
"org.apache.pig.parser.QueryParserDriver.expandImport(Tree)",8,1,n/a,18,1,1,11,4
"org.apache.pig.parser.QueryParserDriver.expandMacro(Tree)",15,2,n/a,21,1,1,13,3
"org.apache.pig.parser.QueryParserDriver.getErrorMessage(String,CommonTree,String,String)",18,5,n/a,19,1,4,14,6
"org.apache.pig.parser.QueryParserDriver.getLastRel()",0,1,n/a,3,0,0,1,1
"org.apache.pig.parser.QueryParserDriver.getMacroFile(String)",21,2,n/a,37,4,1,19,7
"org.apache.pig.parser.QueryParserDriver.getOperators()",0,1,n/a,3,0,0,1,1
"org.apache.pig.parser.QueryParserDriver.getPigServer()",1,2,n/a,6,1,0,3,2
"org.apache.pig.parser.QueryParserDriver.inlineMacro(List<CommonTree>,List<PigMacro>)",7,2,n/a,14,2,2,8,3
"org.apache.pig.parser.QueryParserDriver.macroImport(CommonTree)",38,1,n/a,57,3,1,37,8
"org.apache.pig.parser.QueryParserDriver.makeMacroDef(CommonTree,Map<String, PigMacro>)",42,1,n/a,62,2,2,41,8
"org.apache.pig.parser.QueryParserDriver.parse(CommonTokenStream)",11,3,n/a,17,1,1,11,3
"org.apache.pig.parser.QueryParserDriver.parse(String)",17,5,n/a,23,1,1,17,3
"org.apache.pig.parser.QueryParserDriver.parseConstant(CommonTokenStream)",10,1,n/a,16,1,1,10,3
"org.apache.pig.parser.QueryParserDriver.parseConstant(String)",14,2,n/a,20,1,1,14,3
"org.apache.pig.parser.QueryParserDriver.parseSchema(CommonTokenStream)",10,1,n/a,16,1,1,10,3
"org.apache.pig.parser.QueryParserDriver.parseSchema(String)",14,2,n/a,20,1,1,14,3
"org.apache.pig.parser.QueryParserDriver.tokenize(String,String)",6,5,n/a,14,1,2,8,2
"org.apache.pig.parser.QueryParserDriver.traverse(Tree,List<CommonTree>,List<CommonTree>)",10,3,n/a,13,1,3,10,4
"org.apache.pig.parser.QueryParserDriver.traverseImport(Tree,List<CommonTree>)",6,3,n/a,10,1,2,8,3
"org.apache.pig.parser.QueryParserDriver.traverseInline(Tree,List<CommonTree>)",6,2,n/a,10,1,2,8,3
"org.apache.pig.parser.QueryParserDriver.validateAst(Tree)",5,1,n/a,8,0,1,6,1
"org.apache.pig.parser.QueryParserFileStream.LA(int)",1,0,n/a,4,0,1,1,1
"org.apache.pig.parser.QueryParserFileStream.QueryParserFileStream(String)",1,0,n/a,3,0,1,1,1
"org.apache.pig.parser.QueryParserFileStream.QueryParserFileStream(String,String)",1,0,n/a,4,0,2,1,1
"org.apache.pig.parser.QueryParserStreamUtil.LA(int,int,int,char[])",1,2,n/a,16,1,4,7,4
"org.apache.pig.parser.QueryParserStringStream.LA(int)",1,0,n/a,4,0,1,1,1
"org.apache.pig.parser.QueryParserStringStream.QueryParserStringStream(String,String)",1,2,n/a,4,0,2,2,1
"org.apache.pig.parser.QueryParserUtils.attachStorePlan(String,LogicalPlan,String,String,Operator,String,PigContext)",17,2,n/a,20,1,7,15,3
"org.apache.pig.parser.QueryParserUtils.constructFileNameSignature(String,FuncSpec)",1,1,n/a,3,0,2,1,1
"org.apache.pig.parser.QueryParserUtils.createParser(CommonTokenStream)",1,3,n/a,3,0,1,1,1
"org.apache.pig.parser.QueryParserUtils.createParser(CommonTokenStream,int)",4,2,n/a,7,0,2,4,1
"org.apache.pig.parser.QueryParserUtils.generateErrorHeader(RecognitionException,String)",2,1,n/a,3,0,2,1,1
"org.apache.pig.parser.QueryParserUtils.getCurrentDir(PigContext)",5,3,n/a,6,0,1,4,1
"org.apache.pig.parser.QueryParserUtils.getFileFromImportSearchPath(String)",13,1,n/a,22,4,1,13,10
"org.apache.pig.parser.QueryParserUtils.getRemoteHosts(String,URI,Configuration)",31,1,n/a,38,4,3,25,16
"org.apache.pig.parser.QueryParserUtils.removeQuotes(String)",4,2,n/a,6,0,1,3,3
"org.apache.pig.parser.QueryParserUtils.replaceNodeWithNodeList(Tree,CommonTree,String)",11,3,n/a,22,3,3,14,5
"org.apache.pig.parser.QueryParserUtils.setHdfsServers(String,PigContext)",18,2,n/a,30,3,2,22,9
"org.apache.pig.parser.SourceLocation.SourceLocation()",0,1,n/a,2,0,0,0,1
"org.apache.pig.parser.SourceLocation.SourceLocation(PigParserNode)",3,0,n/a,6,0,1,4,1
"org.apache.pig.parser.SourceLocation.SourceLocation(SourceLocation)",0,25,n/a,6,0,1,4,1
"org.apache.pig.parser.SourceLocation.SourceLocation(String,int,int)",0,2,n/a,5,0,3,3,1
"org.apache.pig.parser.SourceLocation.file()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.SourceLocation.line()",0,2,n/a,3,0,0,1,1
"org.apache.pig.parser.SourceLocation.node()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.SourceLocation.offset()",0,2,n/a,3,0,0,1,1
"org.apache.pig.parser.SourceLocation.toString()",14,2,n/a,21,2,0,15,6
"org.apache.pig.parser.StreamingCommandUtils.StreamingCommandUtils(PigContext)",0,1,n/a,3,0,1,1,1
"org.apache.pig.parser.StreamingCommandUtils.Which.load(String)",10,0,n/a,22,2,1,10,5
"org.apache.pig.parser.StreamingCommandUtils.checkAndShip(StreamingCommand,String)",8,2,n/a,18,2,2,9,5
"org.apache.pig.parser.StreamingCommandUtils.checkAutoShipSpecs(StreamingCommand,String[])",6,1,n/a,18,3,2,9,6
"org.apache.pig.parser.StreamingCommandUtils.inSkipPaths(String)",2,1,n/a,9,2,1,4,3
"org.apache.pig.parser.StreamingCommandUtils.isQuotedString(String)",3,1,n/a,3,0,1,1,2
"org.apache.pig.parser.StreamingCommandUtils.splitArgs(String)",16,2,n/a,52,4,1,32,11
"org.apache.pig.parser.UndefinedAliasException.UndefinedAliasException(IntStream,SourceLocation,String)",1,0,n/a,4,0,3,2,1
"org.apache.pig.parser.UndefinedAliasException.getAlias()",0,0,n/a,3,0,0,1,1
"org.apache.pig.parser.UndefinedAliasException.toString()",1,0,n/a,3,0,0,1,1
"org.apache.pig.pen.AugmentBaseDataVisitor.AugmentBaseDataVisitor(OperatorPlan,Map<Operator, PhysicalOperator>,Map<LOLoad, DataBag>,Map<Operator, DataBag>)",2,1,n/a,12,0,4,4,1
"org.apache.pig.pen.AugmentBaseDataVisitor.BackPropConstraint(Tuple,List<Integer>,LogicalSchema,boolean)",13,1,n/a,23,3,4,13,6
"org.apache.pig.pen.AugmentBaseDataVisitor.GenerateMatchingTuple(LogicalSchema,LogicalExpressionPlan,boolean)",5,2,n/a,5,0,3,1,1
"org.apache.pig.pen.AugmentBaseDataVisitor.GenerateMatchingTuple(Tuple,LogicalExpressionPlan,boolean)",10,2,n/a,11,0,3,9,2
"org.apache.pig.pen.AugmentBaseDataVisitor.GenerateMatchingTupleHelper(Tuple,AndExpression,boolean)",4,1,n/a,7,0,3,4,1
"org.apache.pig.pen.AugmentBaseDataVisitor.GenerateMatchingTupleHelper(Tuple,BinaryExpression,boolean)",110,1,n/a,163,3,3,99,48
"org.apache.pig.pen.AugmentBaseDataVisitor.GenerateMatchingTupleHelper(Tuple,IsNullExpression,boolean)",5,1,n/a,8,0,3,4,2
"org.apache.pig.pen.AugmentBaseDataVisitor.GenerateMatchingTupleHelper(Tuple,NotExpression,boolean)",2,1,n/a,5,0,3,2,1
"org.apache.pig.pen.AugmentBaseDataVisitor.GenerateMatchingTupleHelper(Tuple,Operator,boolean)",4,5,n/a,16,0,3,9,5
"org.apache.pig.pen.AugmentBaseDataVisitor.GenerateMatchingTupleHelper(Tuple,OrExpression,boolean)",4,1,n/a,7,0,3,4,1
"org.apache.pig.pen.AugmentBaseDataVisitor.GetGroupByInput(Object,List<Integer>,int)",10,2,n/a,16,2,3,11,4
"org.apache.pig.pen.AugmentBaseDataVisitor.GetJoinInput(Tuple,List<Integer>,List<Integer>,int)",13,1,n/a,15,2,4,10,4
"org.apache.pig.pen.AugmentBaseDataVisitor.GetJoinInput(Tuple,List<Integer>,int)",10,1,n/a,15,2,3,10,4
"org.apache.pig.pen.AugmentBaseDataVisitor.GetLargerValue(Object)",18,4,n/a,41,2,1,35,18
"org.apache.pig.pen.AugmentBaseDataVisitor.GetSmallerValue(Object)",23,4,n/a,47,2,1,39,20
"org.apache.pig.pen.AugmentBaseDataVisitor.GetUnequalValue(Object)",4,4,n/a,10,0,1,7,5
"org.apache.pig.pen.AugmentBaseDataVisitor.generateData(byte,String)",11,35,n/a,32,2,2,27,14
"org.apache.pig.pen.AugmentBaseDataVisitor.getNewBaseData()",29,2,n/a,44,5,0,33,12
"org.apache.pig.pen.AugmentBaseDataVisitor.getOriLimitMap()",0,1,n/a,3,0,0,1,1
"org.apache.pig.pen.AugmentBaseDataVisitor.inInput(Tuple,DataBag,LogicalSchema)",7,1,n/a,16,2,3,14,5
"org.apache.pig.pen.AugmentBaseDataVisitor.setLimit()",0,1,n/a,3,0,0,1,1
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOCogroup)",66,1,n/a,106,6,1,69,22
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOCross)",0,1,n/a,3,0,1,0,1
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LODistinct)",37,1,n/a,44,2,1,32,14
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOFilter)",32,1,n/a,64,3,1,29,13
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOForEach)",28,1,n/a,46,3,1,28,10
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOJoin)",70,1,n/a,98,6,1,61,22
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOLimit)",36,1,n/a,49,3,1,27,10
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOLoad)",52,1,n/a,89,3,1,50,19
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOSort)",9,1,n/a,12,0,1,7,4
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOSplit)",1,1,n/a,5,0,1,2,3
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOStore)",11,2,n/a,14,1,1,7,4
"org.apache.pig.pen.AugmentBaseDataVisitor.visit(LOUnion)",19,2,n/a,31,2,1,20,8
"org.apache.pig.pen.EquivalenceClasses.getEqClasses(PhysicalPlan,Operator,LogicalPlan,Map<Operator, PhysicalOperator>,Map<LogicalRelationalOperator, Collection<IdentityHashSet<Tuple>>>,HashMap<PhysicalOperator, Collection<IdentityHashSet<Tuple>>>,Map<Operator, DataBag>,Map<LOForEach, Map<LogicalRelationalOperator, PhysicalOperator>>,HashSet<Operator>)",43,2,n/a,61,3,9,40,15
"org.apache.pig.pen.EquivalenceClasses.getLoToEqClassMap(PhysicalPlan,LogicalPlan,Map<Operator, PhysicalOperator>,Map<Operator, DataBag>,Map<LOForEach, Map<LogicalRelationalOperator, PhysicalOperator>>,HashMap<PhysicalOperator, Collection<IdentityHashSet<Tuple>>>)",4,1,n/a,15,1,6,6,2
"org.apache.pig.pen.ExampleGenerator.ExampleGenerator(LogicalPlan,PigContext)",7,1,n/a,17,1,2,9,2
"org.apache.pig.pen.ExampleGenerator.compilePlan(LogicalPlan)",3,1,n/a,6,0,1,4,1
"org.apache.pig.pen.ExampleGenerator.getData()",1,2,n/a,3,0,0,1,1
"org.apache.pig.pen.ExampleGenerator.getData(Map<LOLoad, DataBag>)",1,3,n/a,5,0,1,2,1
"org.apache.pig.pen.ExampleGenerator.getData(PhysicalPlan)",21,5,n/a,30,2,1,19,8
"org.apache.pig.pen.ExampleGenerator.getEqClasses()",6,5,n/a,10,1,0,6,3
"org.apache.pig.pen.ExampleGenerator.getExamples()",51,1,n/a,83,1,0,52,11
"org.apache.pig.pen.ExampleGenerator.getLineage()",0,5,n/a,3,0,0,1,1
"org.apache.pig.pen.ExampleGenerator.getLoToEqClassMap()",15,5,n/a,35,6,0,23,9
"org.apache.pig.pen.ExampleGenerator.getLogToDataMap(Map<PhysicalOperator, DataBag>)",17,1,n/a,14,2,1,8,5
"org.apache.pig.pen.ExampleGenerator.getLogToPhyMap()",0,1,n/a,3,0,0,1,1
"org.apache.pig.pen.ExampleGenerator.phyToMRTransform(PhysicalPlan,Map<PhysicalOperator, DataBag>)",12,1,n/a,11,2,2,6,3
"org.apache.pig.pen.ExampleGenerator.readBaseData(List<Operator>)",12,1,n/a,19,2,1,13,5
"org.apache.pig.pen.ExampleGenerator.setLoadDataMap()",14,1,n/a,21,3,0,13,5
"org.apache.pig.pen.ExampleGenerator.setMaxRecords(int)",0,0,n/a,3,0,1,1,1
"org.apache.pig.pen.FakeRawKeyValueIterator.FakeRawKeyValueIterator(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.pig.pen.FakeRawKeyValueIterator.close()",0,0,n/a,3,0,0,0,1
"org.apache.pig.pen.FakeRawKeyValueIterator.getKey()",0,0,n/a,4,0,0,1,1
"org.apache.pig.pen.FakeRawKeyValueIterator.getProgress()",0,0,n/a,4,0,0,1,1
"org.apache.pig.pen.FakeRawKeyValueIterator.getValue()",0,0,n/a,4,0,0,1,1
"org.apache.pig.pen.FakeRawKeyValueIterator.next()",0,0,n/a,4,0,0,1,1
"org.apache.pig.pen.Illustrable.illustratorMarkup(Object,Object,int)",n/a,0,44,n/a,n/a,3,n/a,n/a
"org.apache.pig.pen.Illustrable.setIllustrator(Illustrator)",n/a,0,5,n/a,n/a,1,n/a,n/a
"org.apache.pig.pen.Illustrator.Illustrator(LineageTracer,LinkedList<IdentityHashSet<Tuple>>,IllustratorAttacher,PigContext)",3,4,n/a,9,0,4,7,1
"org.apache.pig.pen.Illustrator.Illustrator(LineageTracer,LinkedList<IdentityHashSet<Tuple>>,int,IllustratorAttacher,LogicalSchema,PigContext)",1,1,n/a,6,0,6,3,1
"org.apache.pig.pen.Illustrator.addData(Tuple)",1,16,n/a,3,0,1,1,1
"org.apache.pig.pen.Illustrator.addInputs(IdentityHashSet<Tuple>)",2,0,n/a,5,0,1,3,2
"org.apache.pig.pen.Illustrator.ceilingCheck()",0,1,n/a,6,0,0,3,3
"org.apache.pig.pen.Illustrator.getData()",0,4,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.getEqClassesShared()",0,2,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.getEquivalenceClasses()",0,22,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.getInputs()",0,2,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.getLineage()",0,13,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.getOriginalLimit()",0,1,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.getSchema()",0,2,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.getSubExpResult()",0,9,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.getSubExpResults()",0,3,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.setEqClassesShared()",0,1,n/a,3,0,0,1,1
"org.apache.pig.pen.Illustrator.setEquivalenceClasses(LinkedList<IdentityHashSet<Tuple>>,PhysicalOperator)",1,4,n/a,4,0,2,2,1
"org.apache.pig.pen.Illustrator.setOriginalLimit(long)",0,0,n/a,3,0,1,1,1
"org.apache.pig.pen.Illustrator.setSubExpResult(boolean)",0,2,n/a,3,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.IllustratorAttacher(PhysicalPlan,LineageTracer,int,Map<POLoad, LogicalSchema>,PigContext)",4,1,n/a,10,0,5,7,1
"org.apache.pig.pen.IllustratorAttacher.getDataMap()",0,3,n/a,3,0,0,1,1
"org.apache.pig.pen.IllustratorAttacher.innerPlanAttach(PhysicalOperator,PhysicalPlan)",10,4,n/a,15,2,2,12,4
"org.apache.pig.pen.IllustratorAttacher.revisit(PhysicalPlan)",4,2,n/a,13,0,1,7,1
"org.apache.pig.pen.IllustratorAttacher.setIllustrator(PhysicalOperator)",9,3,n/a,11,0,1,9,3
"org.apache.pig.pen.IllustratorAttacher.setIllustrator(PhysicalOperator,LinkedList<IdentityHashSet<Tuple>>)",6,1,n/a,9,0,2,7,4
"org.apache.pig.pen.IllustratorAttacher.setIllustrator(PhysicalOperator,int)",9,24,n/a,14,1,2,12,4
"org.apache.pig.pen.IllustratorAttacher.visitAnd(POAnd)",1,2,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitBinCond(POBinCond)",0,2,n/a,3,0,1,0,1
"org.apache.pig.pen.IllustratorAttacher.visitCast(POCast)",0,2,n/a,3,0,1,0,1
"org.apache.pig.pen.IllustratorAttacher.visitComparisonFunc(POUserComparisonFunc)",1,2,n/a,5,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitCounter(POCounter)",1,1,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitDemux(PODemux)",4,3,n/a,9,0,1,6,4
"org.apache.pig.pen.IllustratorAttacher.visitDistinct(PODistinct)",1,3,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitEqualTo(EqualToExpr)",4,2,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitFilter(POFilter)",5,4,n/a,7,0,1,4,1
"org.apache.pig.pen.IllustratorAttacher.visitGTOrEqual(GTOrEqualToExpr)",4,2,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitGreaterThan(GreaterThanExpr)",4,2,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitIsNull(POIsNull)",4,2,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitLTOrEqual(LTOrEqualToExpr)",4,2,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitLessThan(LessThanExpr)",4,2,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitLimit(POLimit)",1,3,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitLoad(POLoad)",9,3,n/a,14,0,1,10,2
"org.apache.pig.pen.IllustratorAttacher.visitLocalRearrange(POLocalRearrange)",2,5,n/a,5,0,1,2,1
"org.apache.pig.pen.IllustratorAttacher.visitMapLookUp(POMapLookUp)",1,2,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitNegative(PONegative)",1,2,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitNot(PONot)",4,2,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitNotEqualTo(NotEqualToExpr)",4,2,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitOr(POOr)",1,2,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitPOForEach(POForEach)",16,5,n/a,18,1,1,10,8
"org.apache.pig.pen.IllustratorAttacher.visitPOOptimizedForEach(POOptimizedForEach)",1,2,n/a,7,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitPackage(POPackage)",2,2,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitProject(POProject)",0,3,n/a,3,0,1,0,1
"org.apache.pig.pen.IllustratorAttacher.visitRank(PORank)",1,1,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitRegexp(PORegexp)",4,2,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitSort(POSort)",1,4,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitSplit(POSplit)",4,4,n/a,8,0,1,5,4
"org.apache.pig.pen.IllustratorAttacher.visitStore(POStore)",1,2,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitStream(POStream)",1,3,n/a,4,0,1,1,1
"org.apache.pig.pen.IllustratorAttacher.visitUnion(POUnion)",2,3,n/a,6,0,1,3,3
"org.apache.pig.pen.IllustratorAttacher.visitUserFunc(POUserFunc)",0,4,n/a,3,0,1,0,1
"org.apache.pig.pen.LineageTrimmingVisitor.LineageTrimmingVisitor(LogicalPlan,Map<LOLoad, DataBag>,ExampleGenerator,Map<Operator, PhysicalOperator>,PhysicalPlan,PigContext)",4,2,n/a,16,0,6,9,1
"org.apache.pig.pen.LineageTrimmingVisitor.PruneBaseDataConstrainedCoverage(Map<LOLoad, DataBag>,LineageTracer,Collection<IdentityHashSet<Tuple>>)",43,1,n/a,105,4,3,62,20
"org.apache.pig.pen.LineageTrimmingVisitor.checkCompleteness(LogicalRelationalOperator)",9,2,n/a,20,1,1,12,2
"org.apache.pig.pen.LineageTrimmingVisitor.checkNewBaseData(DataBag,Map<LOLoad, DataBag>,Set<Tuple>)",24,2,n/a,5,2,3,30,9
"org.apache.pig.pen.LineageTrimmingVisitor.getBaseData()",0,2,n/a,3,0,0,1,1
"org.apache.pig.pen.LineageTrimmingVisitor.init()",9,1,n/a,13,1,0,9,2
"org.apache.pig.pen.LineageTrimmingVisitor.processLoad(LOLoad)",34,1,n/a,32,2,1,24,10
"org.apache.pig.pen.LineageTrimmingVisitor.processOperator(LogicalRelationalOperator)",18,12,n/a,31,3,1,21,9
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOCogroup)",21,1,n/a,25,4,1,14,7
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOCross)",1,1,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LODistinct)",1,1,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOFilter)",1,1,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOForEach)",1,1,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOJoin)",1,1,n/a,6,1,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOLimit)",1,1,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOLoad)",1,1,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOSort)",1,1,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOSplit)",1,1,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOSplitOutput)",1,1,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOStore)",1,2,n/a,5,0,1,2,2
"org.apache.pig.pen.LineageTrimmingVisitor.visit(LOUnion)",1,2,n/a,5,0,1,2,2
"org.apache.pig.pen.LocalMapReduceSimulator.OutputAttacher.OutputAttacher(PhysicalPlan,Map<String, DataBag>)",2,2,n/a,5,0,2,2,1
"org.apache.pig.pen.LocalMapReduceSimulator.OutputAttacher.visitUserFunc(POUserFunc)",4,4,n/a,6,1,1,2,3
"org.apache.pig.pen.LocalMapReduceSimulator.getPhyToMRMap()",0,1,n/a,3,0,0,1,1
"org.apache.pig.pen.LocalMapReduceSimulator.launchPig(PhysicalPlan,Map<LOLoad, DataBag>,LineageTracer,IllustratorAttacher,ExampleGenerator,PigContext)",104,1,n/a,152,7,6,106,36
"org.apache.pig.pen.POOptimizeDisabler.POOptimizeDisabler(OperatorPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.pen.POOptimizeDisabler.visit(LOCogroup)",1,1,n/a,5,0,1,1,1
"org.apache.pig.pen.POOptimizeDisabler.visit(LOJoin)",1,1,n/a,5,0,1,1,1
"org.apache.pig.pen.PhysicalPlanResetter.PhysicalPlanResetter(PhysicalPlan)",2,1,n/a,3,0,1,1,1
"org.apache.pig.pen.PhysicalPlanResetter.visitPackage(POPackage)",2,2,n/a,4,0,1,1,1
"org.apache.pig.pen.util.DisplayExamples.AddSpaces(int,boolean)",4,15,n/a,10,1,2,8,3
"org.apache.pig.pen.util.DisplayExamples.DisplayNestedTable(String[][],Operator,String,DataBag,DataBag,StringBuffer)",32,1,n/a,55,2,6,44,9
"org.apache.pig.pen.util.DisplayExamples.DisplayTable(String[][],Operator,DataBag,StringBuffer)",37,1,n/a,62,2,4,48,14
"org.apache.pig.pen.util.DisplayExamples.MakeArray(Operator,DataBag)",8,2,n/a,14,2,2,13,3
"org.apache.pig.pen.util.DisplayExamples.ShortenField(DataBag)",22,1,n/a,25,3,1,18,6
"org.apache.pig.pen.util.DisplayExamples.ShortenField(Object)",5,5,n/a,18,2,1,10,5
"org.apache.pig.pen.util.DisplayExamples.ShortenField(Tuple)",16,4,n/a,22,3,1,17,4
"org.apache.pig.pen.util.DisplayExamples.printMetrics(Operator,Map<Operator, DataBag>,Map<LogicalRelationalOperator, Collection<IdentityHashSet<Tuple>>>)",4,0,n/a,22,0,3,1,1
"org.apache.pig.pen.util.DisplayExamples.printNestedTabular(LOForEach,Map<LOForEach, Map<LogicalRelationalOperator, DataBag>>,DataBag,StringBuffer)",6,1,n/a,10,1,4,3,2
"org.apache.pig.pen.util.DisplayExamples.printNestedTabular(Operator,LogicalPlan,String,DataBag,Map<LogicalRelationalOperator, DataBag>,StringBuffer)",8,2,n/a,22,2,6,12,7
"org.apache.pig.pen.util.DisplayExamples.printSimple(Operator,LogicalPlan,Map<Operator, DataBag>)",6,1,n/a,16,2,3,7,4
"org.apache.pig.pen.util.DisplayExamples.printTabular(LogicalPlan,Map<Operator, DataBag>,Map<LOForEach, Map<LogicalRelationalOperator, DataBag>>)",8,1,n/a,16,2,3,8,5
"org.apache.pig.pen.util.DisplayExamples.printTabular(Operator,LogicalPlan,Map<Operator, DataBag>,Map<LOForEach, Map<LogicalRelationalOperator, DataBag>>,Set<Operator>,StringBuffer)",17,3,n/a,36,2,6,17,10
"org.apache.pig.pen.util.ExampleTuple.ExampleTuple()",0,0,n/a,2,0,0,0,1
"org.apache.pig.pen.util.ExampleTuple.ExampleTuple(Object)",0,0,n/a,3,0,1,1,1
"org.apache.pig.pen.util.ExampleTuple.ExampleTuple(Tuple)",0,14,n/a,5,0,1,1,1
"org.apache.pig.pen.util.ExampleTuple.append(Object)",1,28,n/a,4,0,1,1,1
"org.apache.pig.pen.util.ExampleTuple.compareTo(Object)",1,0,n/a,5,0,1,1,1
"org.apache.pig.pen.util.ExampleTuple.get(int)",1,681,n/a,4,0,1,1,1
"org.apache.pig.pen.util.ExampleTuple.getAll()",1,31,n/a,4,0,0,1,1
"org.apache.pig.pen.util.ExampleTuple.getMemorySize()",1,14,n/a,4,0,0,1,1
"org.apache.pig.pen.util.ExampleTuple.getType(int)",1,5,n/a,4,0,1,1,1
"org.apache.pig.pen.util.ExampleTuple.isNull(int)",1,4,n/a,4,0,1,1,1
"org.apache.pig.pen.util.ExampleTuple.readFields(DataInput)",3,0,n/a,6,0,1,3,1
"org.apache.pig.pen.util.ExampleTuple.reference(Tuple)",1,1,n/a,4,0,1,1,1
"org.apache.pig.pen.util.ExampleTuple.set(int,Object)",1,281,n/a,4,0,2,1,1
"org.apache.pig.pen.util.ExampleTuple.size()",1,276,n/a,4,0,0,1,1
"org.apache.pig.pen.util.ExampleTuple.toString()",1,1,n/a,4,0,0,1,1
"org.apache.pig.pen.util.ExampleTuple.toTuple()",0,1,n/a,3,0,0,1,1
"org.apache.pig.pen.util.ExampleTuple.write(DataOutput)",3,0,n/a,7,0,1,3,1
"org.apache.pig.pen.util.LineageTracer.getCounts()",1,0,n/a,5,0,0,1,1
"org.apache.pig.pen.util.LineageTracer.getMembers(Tuple)",6,0,n/a,11,1,1,7,3
"org.apache.pig.pen.util.LineageTracer.getMembershipMap()",8,1,n/a,15,2,0,10,3
"org.apache.pig.pen.util.LineageTracer.getRepresentative(Tuple)",3,8,n/a,9,1,1,5,2
"org.apache.pig.pen.util.LineageTracer.getWeightedCounts(float,float)",8,2,n/a,23,1,2,12,5
"org.apache.pig.pen.util.LineageTracer.insert(Tuple)",6,11,n/a,11,1,1,5,2
"org.apache.pig.pen.util.LineageTracer.link(Tuple,Tuple)",5,1,n/a,11,1,2,7,3
"org.apache.pig.pen.util.LineageTracer.union(Tuple,Tuple)",3,7,n/a,4,0,2,1,1
"org.apache.pig.pen.util.MetricEvaluation.getCompleteness(Operator,Map<Operator, DataBag>,Map<LogicalRelationalOperator, Collection<IdentityHashSet<Tuple>>>,boolean)",9,5,n/a,34,2,4,21,4
"org.apache.pig.pen.util.MetricEvaluation.getCompletenessLogic(Collection<IdentityHashSet<Tuple>>)",1,2,n/a,9,1,1,5,3
"org.apache.pig.pen.util.MetricEvaluation.getConciseness(Operator,Map<Operator, DataBag>,Map<LogicalRelationalOperator, Collection<IdentityHashSet<Tuple>>>,boolean)",12,1,n/a,34,2,4,22,6
"org.apache.pig.pen.util.MetricEvaluation.getRealness(Operator,Map<Operator, DataBag>,boolean)",10,1,n/a,31,2,3,21,9
"org.apache.pig.pen.util.PreOrderDepthFirstWalker.PreOrderDepthFirstWalker(OperatorPlan)",1,2,n/a,7,0,1,1,1
"org.apache.pig.pen.util.PreOrderDepthFirstWalker.depthFirst(Operator,Collection<Operator>,Set<Operator>,PlanVisitor)",6,2,n/a,14,2,4,9,4
"org.apache.pig.pen.util.PreOrderDepthFirstWalker.getBranchFlag()",0,9,n/a,3,0,0,1,1
"org.apache.pig.pen.util.PreOrderDepthFirstWalker.setBranchFlag()",0,2,n/a,3,0,0,1,1
"org.apache.pig.pen.util.PreOrderDepthFirstWalker.spawnChildWalker(OperatorPlan)",1,7,n/a,3,0,1,1,1
"org.apache.pig.pen.util.PreOrderDepthFirstWalker.walk(PlanVisitor)",3,16,n/a,13,0,1,3,1
"org.apache.pig.scripting.BoundScript.BoundScript(List<String>,ScriptPigContext,String)",2,3,n/a,6,0,3,3,1
"org.apache.pig.scripting.BoundScript.BoundScript(String,ScriptPigContext,String)",1,3,n/a,5,0,3,3,1
"org.apache.pig.scripting.BoundScript.MyCallable.MyCallable(String,PigContext,PigProgressNotificationListener)",0,1,n/a,5,0,3,3,1
"org.apache.pig.scripting.BoundScript.MyCallable.call()",18,0,n/a,20,1,0,15,2
"org.apache.pig.scripting.BoundScript.describe(String)",7,0,n/a,15,1,1,6,2
"org.apache.pig.scripting.BoundScript.exec(String)",22,1,n/a,22,1,1,17,3
"org.apache.pig.scripting.BoundScript.explain()",7,0,n/a,13,1,0,6,2
"org.apache.pig.scripting.BoundScript.illustrate()",7,0,n/a,13,1,0,6,2
"org.apache.pig.scripting.BoundScript.registerQuery(PigServer,String)",6,3,n/a,10,1,2,6,2
"org.apache.pig.scripting.BoundScript.run()",1,0,n/a,11,0,0,1,1
"org.apache.pig.scripting.BoundScript.run(Properties)",43,2,n/a,59,2,1,39,9
"org.apache.pig.scripting.BoundScript.run(String)",5,2,n/a,18,1,1,8,2
"org.apache.pig.scripting.BoundScript.runSingle()",1,1,n/a,9,0,0,1,1
"org.apache.pig.scripting.BoundScript.runSingle(Properties)",10,2,n/a,25,1,1,10,4
"org.apache.pig.scripting.BoundScript.runSingle(String)",5,2,n/a,18,1,1,8,2
"org.apache.pig.scripting.BoundScript.setPigStats(List<PigStats>)",4,1,n/a,8,1,1,6,5
"org.apache.pig.scripting.BoundScript.setPigStats(PigStats)",4,1,n/a,8,1,1,4,2
"org.apache.pig.scripting.Pig.Pig(String,ScriptPigContext,String)",0,1,n/a,5,0,3,3,1
"org.apache.pig.scripting.Pig.addDefineClause(String,String)",1,1,n/a,3,0,2,1,1
"org.apache.pig.scripting.Pig.addRegisterScriptUDFClause(String,String)",5,1,n/a,11,1,2,6,3
"org.apache.pig.scripting.Pig.bind()",5,2,n/a,24,1,0,6,2
"org.apache.pig.scripting.Pig.bind(List<Map<String, Object>>)",4,4,n/a,19,1,1,4,2
"org.apache.pig.scripting.Pig.bind(Map<String, Object>)",2,4,n/a,14,0,1,1,1
"org.apache.pig.scripting.Pig.compile(String)",1,1,n/a,9,0,1,1,1
"org.apache.pig.scripting.Pig.compile(String,String)",10,3,n/a,16,0,2,5,1
"org.apache.pig.scripting.Pig.compileFromFile(String)",1,1,n/a,12,0,1,1,1
"org.apache.pig.scripting.Pig.compileFromFile(String,String)",2,2,n/a,15,0,2,1,1
"org.apache.pig.scripting.Pig.define(String,String)",2,1,n/a,13,0,2,2,1
"org.apache.pig.scripting.Pig.fixNonEscapedDollarSign(String)",11,1,n/a,20,3,1,15,5
"org.apache.pig.scripting.Pig.fs(String)",9,1,n/a,23,2,1,11,4
"org.apache.pig.scripting.Pig.getDefineClauses()",3,1,n/a,7,1,0,4,2
"org.apache.pig.scripting.Pig.getRegisterScriptUDFClauses()",3,1,n/a,7,1,0,4,2
"org.apache.pig.scripting.Pig.getScriptContext()",2,8,n/a,7,1,0,4,2
"org.apache.pig.scripting.Pig.getScriptFromFile(String)",9,1,n/a,15,2,1,10,2
"org.apache.pig.scripting.Pig.registerJar(String)",5,1,n/a,14,0,1,4,1
"org.apache.pig.scripting.Pig.registerUDF(String,String)",7,1,n/a,20,0,2,7,3
"org.apache.pig.scripting.Pig.replaceParameters(String,Map<String, Object>)",16,2,n/a,25,2,2,12,4
"org.apache.pig.scripting.Pig.set(String,String)",6,1,n/a,13,0,2,3,1
"org.apache.pig.scripting.Pig.sql(String)",17,0,n/a,22,1,1,10,4
"org.apache.pig.scripting.ScriptEngine.SupportedScriptLang.SupportedScriptLang(String[],String[],String)",0,5,n/a,5,0,3,3,1
"org.apache.pig.scripting.ScriptEngine.SupportedScriptLang.accepts(String,String)",4,1,n/a,21,2,2,10,6
"org.apache.pig.scripting.ScriptEngine.SupportedScriptLang.contains(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.scripting.ScriptEngine.SupportedScriptLang.getEngineClassName()",0,1,n/a,3,0,0,1,1
"org.apache.pig.scripting.ScriptEngine.declaresShebang(String)",2,1,n/a,5,0,1,3,2
"org.apache.pig.scripting.ScriptEngine.getInstance(String)",6,2,n/a,21,2,1,7,3
"org.apache.pig.scripting.ScriptEngine.getJarPath(Class<?>)",14,6,n/a,18,1,1,4,2
"org.apache.pig.scripting.ScriptEngine.getParamsFromVariables()",n/a,1,5,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.ScriptEngine.getPigStatsMap()",0,4,n/a,6,0,0,1,1
"org.apache.pig.scripting.ScriptEngine.getResourceUsingClassLoader(String,ClassLoader)",1,4,n/a,6,1,2,3,2
"org.apache.pig.scripting.ScriptEngine.getScriptAsStream(String)",21,3,n/a,46,3,1,23,12
"org.apache.pig.scripting.ScriptEngine.getScriptingLang()",n/a,1,5,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.ScriptEngine.getSupportedScriptLang(String)",8,1,n/a,23,2,1,11,4
"org.apache.pig.scripting.ScriptEngine.main(PigContext,String)",n/a,1,5,n/a,n/a,2,n/a,n/a
"org.apache.pig.scripting.ScriptEngine.registerFunctions(String,String,PigContext)",n/a,2,5,n/a,n/a,3,n/a,n/a
"org.apache.pig.scripting.ScriptEngine.run(PigContext,String)",2,1,n/a,16,0,2,2,1
"org.apache.pig.scripting.ScriptEngine.setPigStats(String,List<PigStats>)",1,0,n/a,3,0,2,1,1
"org.apache.pig.scripting.ScriptEngine.setPigStats(String,PigStats)",4,3,n/a,8,1,2,5,2
"org.apache.pig.scripting.ScriptPigContext.ScriptPigContext(PigContext,ScriptEngine)",0,1,n/a,4,0,2,2,1
"org.apache.pig.scripting.ScriptPigContext.get()",1,2,n/a,3,0,0,1,1
"org.apache.pig.scripting.ScriptPigContext.getPigContext()",0,18,n/a,3,0,0,1,1
"org.apache.pig.scripting.ScriptPigContext.getScriptEngine()",0,5,n/a,3,0,0,1,1
"org.apache.pig.scripting.ScriptPigContext.set(PigContext,ScriptEngine)",3,1,n/a,5,0,2,2,1
"org.apache.pig.scripting.ScriptingOutputCapturer.ScriptingOutputCapturer(ExecType)",0,1,n/a,3,0,1,1,1
"org.apache.pig.scripting.ScriptingOutputCapturer.getRunId()",0,2,n/a,3,0,0,1,1
"org.apache.pig.scripting.ScriptingOutputCapturer.getStandardOutputRootWriteLocation()",20,1,n/a,46,3,0,31,13
"org.apache.pig.scripting.ScriptingOutputCapturer.getTaskLogDir(String,String,String)",10,1,n/a,19,2,3,14,5
"org.apache.pig.scripting.ScriptingOutputCapturer.getUdfOutput()",14,0,n/a,20,3,0,14,3
"org.apache.pig.scripting.ScriptingOutputCapturer.isClassCapturingOutput()",0,1,n/a,3,0,0,1,1
"org.apache.pig.scripting.ScriptingOutputCapturer.isInstanceCapturingOutput()",0,1,n/a,3,0,0,1,1
"org.apache.pig.scripting.ScriptingOutputCapturer.registerOutputLocation(String,String)",1,1,n/a,3,0,2,1,1
"org.apache.pig.scripting.ScriptingOutputCapturer.setInstanceCapturingOutput(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.scripting.ScriptingOutputCapturer.startCapturingOutput()",0,0,n/a,3,0,0,1,1
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.SyncProgressNotificationAdaptor(List<PigProgressNotificationListener>)",0,1,n/a,4,0,1,1,1
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.initialPlanNotification(String,OperatorPlan<?>)",4,2,n/a,14,3,2,5,3
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.jobFailedNotification(String,JobStats)",1,2,n/a,8,2,2,3,2
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.jobFinishedNotification(String,JobStats)",1,2,n/a,8,2,2,3,2
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.jobStartedNotification(String,String)",1,2,n/a,8,2,2,3,2
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.jobsSubmittedNotification(String,int)",1,2,n/a,8,2,2,3,2
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.launchCompletedNotification(String,int)",1,2,n/a,9,2,2,3,2
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.launchStartedNotification(String,int)",1,2,n/a,8,2,2,3,2
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.outputCompletedNotification(String,OutputStats)",1,2,n/a,9,2,2,3,2
"org.apache.pig.scripting.SyncProgressNotificationAdaptor.progressUpdatedNotification(String,int)",1,2,n/a,8,2,2,3,2
"org.apache.pig.scripting.groovy.AccumulatorAccumulate.value()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.groovy.AccumulatorCleanup.value()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.groovy.AccumulatorGetValue.value()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.groovy.AlgebraicFinal.value()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.groovy.AlgebraicInitial.value()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.groovy.AlgebraicIntermed.value()",n/a,1,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.groovy.GroovyAccumulatorEvalFunc.GroovyAccumulatorEvalFunc(String,String,String,String,String,String)",5,0,n/a,9,0,6,3,1
"org.apache.pig.scripting.groovy.GroovyAccumulatorEvalFunc.accumulate(Tuple)",1,2,n/a,4,0,1,1,1
"org.apache.pig.scripting.groovy.GroovyAccumulatorEvalFunc.cleanup()",1,3,n/a,7,1,0,2,2
"org.apache.pig.scripting.groovy.GroovyAccumulatorEvalFunc.getValue()",2,2,n/a,8,1,0,3,2
"org.apache.pig.scripting.groovy.GroovyAccumulatorEvalFunc.outputSchema(Schema)",1,2,n/a,4,0,1,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.AlgebraicFunctionWrapper.AlgebraicFunctionWrapper()",0,3,n/a,2,0,0,0,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.AlgebraicFunctionWrapper.AlgebraicFunctionWrapper(String,String,String)",1,3,n/a,3,0,3,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigDecimalGroovyAlgebraicEvalFunc.BigDecimalGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigDecimalGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigDecimalGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigIntegerGroovyAlgebraicEvalFunc.BigIntegerGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigIntegerGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigIntegerGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BooleanGroovyAlgebraicEvalFunc.BooleanGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BooleanGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BooleanGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.ChararrayGroovyAlgebraicEvalFunc.ChararrayGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.ChararrayGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.ChararrayGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataBagGroovyAlgebraicEvalFunc.DataBagGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataBagGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataBagGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataByteArrayGroovyAlgebraicEvalFunc.DataByteArrayGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataByteArrayGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataByteArrayGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DateTimeGroovyAlgebraicEvalFunc.DateTimeGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DateTimeGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DateTimeGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DoubleGroovyAlgebraicEvalFunc.DoubleGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DoubleGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DoubleGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.Final.Final()",0,1,n/a,2,0,0,0,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,13,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.FloatGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.FloatGroovyAlgebraicEvalFunc.FloatGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.FloatGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.GroovyAlgebraicEvalFunc()",0,0,n/a,2,0,0,0,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.GroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,13,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.Initial.Initial()",0,0,n/a,2,0,0,0,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.Initial.Initial(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.IntegerGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.IntegerGroovyAlgebraicEvalFunc.IntegerGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.IntegerGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.Intermed.Intermed()",0,0,n/a,2,0,0,0,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.Intermed.Intermed(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.LongGroovyAlgebraicEvalFunc.Final.Final()",0,0,n/a,2,0,0,0,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.LongGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.LongGroovyAlgebraicEvalFunc.LongGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.LongGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.MapGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.MapGroovyAlgebraicEvalFunc.MapGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.MapGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.TupleGroovyAlgebraicEvalFunc.Final.Final(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.TupleGroovyAlgebraicEvalFunc.TupleGroovyAlgebraicEvalFunc(String,String,String,String,String,String)",1,0,n/a,4,0,6,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.TupleGroovyAlgebraicEvalFunc.getFinal()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.getFinal()",n/a,4,13,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.getInitial()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.getIntermed()",1,4,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyEvalFunc.GroovyEvalFunc()",0,2,n/a,2,0,0,0,1
"org.apache.pig.scripting.groovy.GroovyEvalFunc.GroovyEvalFunc(String,String,String)",1,2,n/a,3,0,3,1,1
"org.apache.pig.scripting.groovy.GroovyEvalFunc.GroovyEvalFunc(String,String,String,Object)",29,2,n/a,59,3,4,33,16
"org.apache.pig.scripting.groovy.GroovyEvalFunc.exec(Tuple)",10,11,n/a,23,2,1,12,6
"org.apache.pig.scripting.groovy.GroovyEvalFunc.getInvocationTarget()",0,2,n/a,3,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyEvalFunc.outputSchema(Schema)",10,3,n/a,17,2,1,8,4
"org.apache.pig.scripting.groovy.GroovyEvalFuncObject.GroovyEvalFuncObject()",1,0,n/a,3,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyEvalFuncObject.GroovyEvalFuncObject(String,String,String)",1,2,n/a,3,0,3,1,1
"org.apache.pig.scripting.groovy.GroovyEvalFuncObject.GroovyEvalFuncObject(String,String,String,Object)",1,2,n/a,3,0,4,1,1
"org.apache.pig.scripting.groovy.GroovyScriptEngine.getEngine()",0,1,n/a,3,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyScriptEngine.getParamsFromVariables()",0,1,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyScriptEngine.getScriptingLang()",0,1,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyScriptEngine.isAccumulator(Annotation)",6,1,n/a,5,0,1,1,3
"org.apache.pig.scripting.groovy.GroovyScriptEngine.isAlgebraic(Annotation)",6,1,n/a,5,0,1,1,3
"org.apache.pig.scripting.groovy.GroovyScriptEngine.main(PigContext,String)",22,1,n/a,38,2,2,16,7
"org.apache.pig.scripting.groovy.GroovyScriptEngine.registerFunctions(String,String,PigContext)",158,3,n/a,243,7,3,142,82
"org.apache.pig.scripting.groovy.GroovyUtils.DataBagGroovyIterator.DataBagGroovyIterator(Iterator<Tuple>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.scripting.groovy.GroovyUtils.DataBagGroovyIterator.hasNext()",1,0,n/a,4,0,0,1,1
"org.apache.pig.scripting.groovy.GroovyUtils.DataBagGroovyIterator.next()",3,0,n/a,8,1,0,3,2
"org.apache.pig.scripting.groovy.GroovyUtils.DataBagGroovyIterator.remove()",0,0,n/a,3,0,0,0,1
"org.apache.pig.scripting.groovy.GroovyUtils.groovyToPig(Object)",25,6,n/a,138,3,1,46,27
"org.apache.pig.scripting.groovy.GroovyUtils.pigToGroovy(Object)",21,5,n/a,75,2,1,33,14
"org.apache.pig.scripting.groovy.OutputSchemaFunction.value()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.jruby.JrubyAccumulatorEvalFunc.JrubyAccumulatorEvalFunc()",0,0,n/a,2,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAccumulatorEvalFunc.JrubyAccumulatorEvalFunc(String,String)",0,0,n/a,8,0,2,2,1
"org.apache.pig.scripting.jruby.JrubyAccumulatorEvalFunc.accumulate(Tuple)",5,2,n/a,11,0,1,4,2
"org.apache.pig.scripting.jruby.JrubyAccumulatorEvalFunc.cleanup()",0,3,n/a,5,0,0,2,1
"org.apache.pig.scripting.jruby.JrubyAccumulatorEvalFunc.getValue()",3,2,n/a,12,1,0,4,2
"org.apache.pig.scripting.jruby.JrubyAccumulatorEvalFunc.initialize()",3,2,n/a,11,0,0,3,1
"org.apache.pig.scripting.jruby.JrubyAccumulatorEvalFunc.outputSchema(Schema)",4,2,n/a,11,0,1,4,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper.AlgebraicFunctionWrapper()",0,3,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper.AlgebraicFunctionWrapper(String,String,String)",0,3,n/a,10,0,3,3,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper.exec(Tuple)",n/a,7,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper.getFileName()",0,0,n/a,1,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper.getFunctionName()",0,0,n/a,1,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper.getReceiver()",0,3,n/a,1,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper.getStage()",0,3,n/a,1,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper.initialize()",3,3,n/a,4,0,0,2,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper.isInitialized()",0,3,n/a,1,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.BagJrubyAlgebraicEvalFunc.BagJrubyAlgebraicEvalFunc(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.BagJrubyAlgebraicEvalFunc.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.BagJrubyAlgebraicEvalFunc.Final.Final(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.BagJrubyAlgebraicEvalFunc.getFinal()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.ChararrayJrubyAlgebraicEvalFunc.ChararrayJrubyAlgebraicEvalFunc(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.ChararrayJrubyAlgebraicEvalFunc.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.ChararrayJrubyAlgebraicEvalFunc.Final.Final(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.ChararrayJrubyAlgebraicEvalFunc.getFinal()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DataByteArrayJrubyAlgebraicEvalFunc.DataByteArrayJrubyAlgebraicEvalFunc(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DataByteArrayJrubyAlgebraicEvalFunc.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DataByteArrayJrubyAlgebraicEvalFunc.Final.Final(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DataByteArrayJrubyAlgebraicEvalFunc.getFinal()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DoubleJrubyAlgebraicEvalFunc.DoubleJrubyAlgebraicEvalFunc(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DoubleJrubyAlgebraicEvalFunc.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DoubleJrubyAlgebraicEvalFunc.Final.Final(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DoubleJrubyAlgebraicEvalFunc.getFinal()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Final.Final()",0,9,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Final.Final(String,String)",1,9,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Final.exec(Tuple)",10,7,n/a,13,1,1,7,3
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.FloatJrubyAlgebraicEvalFunc.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.FloatJrubyAlgebraicEvalFunc.Final.Final(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.FloatJrubyAlgebraicEvalFunc.FloatJrubyAlgebraicEvalFunc(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.FloatJrubyAlgebraicEvalFunc.getFinal()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Initial.Initial()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Initial.Initial(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Initial.exec(Tuple)",13,7,n/a,12,1,1,7,3
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.IntegerJrubyAlgebraicEvalFunc.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.IntegerJrubyAlgebraicEvalFunc.Final.Final(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.IntegerJrubyAlgebraicEvalFunc.IntegerJrubyAlgebraicEvalFunc(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.IntegerJrubyAlgebraicEvalFunc.getFinal()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Intermed.Intermed()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Intermed.Intermed(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Intermed.exec(Tuple)",11,7,n/a,12,1,1,7,3
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.JrubyAlgebraicEvalFunc()",0,0,n/a,2,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.JrubyAlgebraicEvalFunc(String,String)",1,9,n/a,5,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.LongJrubyAlgebraicEvalFunc.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.LongJrubyAlgebraicEvalFunc.Final.Final(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.LongJrubyAlgebraicEvalFunc.LongJrubyAlgebraicEvalFunc(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.LongJrubyAlgebraicEvalFunc.getFinal()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.MapJrubyAlgebraicEvalFunc.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.MapJrubyAlgebraicEvalFunc.Final.Final(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.MapJrubyAlgebraicEvalFunc.MapJrubyAlgebraicEvalFunc(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.MapJrubyAlgebraicEvalFunc.getFinal()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.TupleJrubyAlgebraicEvalFunc.Final.Final()",0,0,n/a,1,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.TupleJrubyAlgebraicEvalFunc.Final.Final(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.TupleJrubyAlgebraicEvalFunc.TupleJrubyAlgebraicEvalFunc(String,String)",1,0,n/a,1,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.TupleJrubyAlgebraicEvalFunc.getFinal()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.getFinal()",n/a,4,9,n/a,n/a,0,n/a,n/a
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.getInitial()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.getIntermed()",1,4,n/a,2,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyEvalFunc.JrubyEvalFunc()",0,0,n/a,2,0,0,0,1
"org.apache.pig.scripting.jruby.JrubyEvalFunc.JrubyEvalFunc(String,String)",0,0,n/a,12,0,2,2,1
"org.apache.pig.scripting.jruby.JrubyEvalFunc.exec(Tuple)",8,7,n/a,27,3,1,15,10
"org.apache.pig.scripting.jruby.JrubyEvalFunc.initialize()",6,2,n/a,13,0,0,6,1
"org.apache.pig.scripting.jruby.JrubyEvalFunc.outputSchema(Schema)",4,2,n/a,11,0,1,4,2
"org.apache.pig.scripting.jruby.JrubyScriptEngine.RubyFunctions.getFromCache(String,Map<String, Map<String, Object>>,String)",11,1,n/a,16,1,3,11,5
"org.apache.pig.scripting.jruby.JrubyScriptEngine.RubyFunctions.getFunctions(String,String)",3,6,n/a,3,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyScriptEngine.getParamsFromVariables()",1,1,n/a,5,0,0,2,1
"org.apache.pig.scripting.jruby.JrubyScriptEngine.getScriptingLang()",0,1,n/a,4,0,0,1,1
"org.apache.pig.scripting.jruby.JrubyScriptEngine.libsToShip()",18,1,n/a,32,3,0,16,8
"org.apache.pig.scripting.jruby.JrubyScriptEngine.listRecursively(File)",6,2,n/a,12,2,1,7,3
"org.apache.pig.scripting.jruby.JrubyScriptEngine.main(PigContext,String)",1,1,n/a,4,0,2,1,1
"org.apache.pig.scripting.jruby.JrubyScriptEngine.registerFunctions(String,String,PigContext)",54,2,n/a,73,4,3,69,25
"org.apache.pig.scripting.jruby.PigJrubyLibrary.enumeratorize(Ruby,IRubyObject,String)",2,2,n/a,19,1,3,3,2
"org.apache.pig.scripting.jruby.PigJrubyLibrary.load(Ruby,boolean)",3,0,n/a,14,0,2,3,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,Boolean)",2,9,n/a,10,0,2,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,DataBag)",2,1,n/a,10,0,2,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,DataByteArray)",2,1,n/a,10,0,2,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,Double)",1,9,n/a,10,0,2,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,Float)",2,9,n/a,10,0,2,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,Integer)",2,9,n/a,10,0,2,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,Long)",1,9,n/a,10,0,2,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,Map<T, ?>)",7,9,n/a,24,2,2,10,4
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,Object)",15,9,n/a,40,1,2,25,13
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,Schema)",2,3,n/a,10,0,2,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,String)",2,9,n/a,10,0,2,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.pigToRuby(Ruby,Tuple)",4,3,n/a,14,0,2,4,2
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(IRubyObject)",14,18,n/a,39,1,1,25,14
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyArray)",5,18,n/a,13,0,1,5,2
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyBignum)",1,18,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyBoolean)",1,18,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyDataBag)",1,1,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyDataByteArray)",1,1,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyFixnum)",1,18,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyFloat)",1,18,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyHash)",13,18,n/a,22,2,1,10,6
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyInteger)",1,18,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyNil)",0,18,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubySchema)",1,1,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.PigJrubyLibrary.rubyToPig(RubyString)",1,18,n/a,9,0,1,1,1
"org.apache.pig.scripting.jruby.RubyDataBag.RubyDataBag(Ruby,RubyClass)",2,1,n/a,10,0,2,2,1
"org.apache.pig.scripting.jruby.RubyDataBag.RubyDataBag(Ruby,RubyClass,DataBag)",1,5,n/a,13,0,3,2,1
"org.apache.pig.scripting.jruby.RubyDataBag.add(ThreadContext,IRubyObject[])",6,0,n/a,27,2,2,7,5
"org.apache.pig.scripting.jruby.RubyDataBag.clear()",1,0,n/a,7,0,0,1,1
"org.apache.pig.scripting.jruby.RubyDataBag.clone(ThreadContext)",5,0,n/a,15,0,1,5,2
"org.apache.pig.scripting.jruby.RubyDataBag.define(Ruby)",6,1,n/a,3,2,1,6,1
"org.apache.pig.scripting.jruby.RubyDataBag.each(ThreadContext,Block)",5,0,n/a,22,0,2,6,3
"org.apache.pig.scripting.jruby.RubyDataBag.flatten(ThreadContext,Block)",6,0,n/a,21,0,2,6,3
"org.apache.pig.scripting.jruby.RubyDataBag.getBag()",0,2,n/a,3,0,0,1,1
"org.apache.pig.scripting.jruby.RubyDataBag.initialize()",1,0,n/a,12,0,0,2,1
"org.apache.pig.scripting.jruby.RubyDataBag.initialize(IRubyObject)",2,0,n/a,16,1,1,4,2
"org.apache.pig.scripting.jruby.RubyDataBag.inspect(ThreadContext,IRubyObject[])",11,0,n/a,18,0,2,7,3
"org.apache.pig.scripting.jruby.RubyDataBag.isDistinct(ThreadContext)",3,0,n/a,10,0,1,1,1
"org.apache.pig.scripting.jruby.RubyDataBag.isEmpty(ThreadContext)",3,0,n/a,10,0,1,1,1
"org.apache.pig.scripting.jruby.RubyDataBag.isSorted(ThreadContext)",3,0,n/a,10,0,1,1,1
"org.apache.pig.scripting.jruby.RubyDataBag.iterator()",1,0,n/a,3,0,0,1,1
"org.apache.pig.scripting.jruby.RubyDataBag.size(ThreadContext)",3,0,n/a,10,0,1,1,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.RubyDataByteArray(Ruby,RubyClass)",2,4,n/a,10,0,2,2,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.RubyDataByteArray(Ruby,RubyClass,DataByteArray)",4,0,n/a,14,0,3,5,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.RubyDataByteArray(Ruby,RubyClass,DataByteArray,DataByteArray)",2,1,n/a,13,0,4,2,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.RubyDataByteArray(Ruby,RubyClass,byte[])",2,0,n/a,11,0,3,2,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.append(ThreadContext,IRubyObject)",6,0,n/a,16,0,2,3,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.compare(ThreadContext,IRubyObject,IRubyObject,IRubyObject)",9,0,n/a,25,1,4,8,3
"org.apache.pig.scripting.jruby.RubyDataByteArray.compareTo(ThreadContext,IRubyObject)",7,0,n/a,19,1,2,5,2
"org.apache.pig.scripting.jruby.RubyDataByteArray.define(Ruby)",4,1,n/a,3,2,1,5,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.equals(ThreadContext,IRubyObject)",5,0,n/a,16,1,2,4,2
"org.apache.pig.scripting.jruby.RubyDataByteArray.getDBA()",0,11,n/a,3,0,0,1,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.hash(ThreadContext)",3,0,n/a,10,0,1,1,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.initialize()",1,0,n/a,11,0,0,2,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.initialize(IRubyObject)",8,2,n/a,24,1,1,9,3
"org.apache.pig.scripting.jruby.RubyDataByteArray.initialize(IRubyObject,IRubyObject)",4,0,n/a,18,1,2,4,3
"org.apache.pig.scripting.jruby.RubyDataByteArray.plus(ThreadContext,IRubyObject)",7,0,n/a,15,0,2,3,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.set(IRubyObject)",5,0,n/a,19,1,1,5,3
"org.apache.pig.scripting.jruby.RubyDataByteArray.size(ThreadContext)",3,0,n/a,8,0,1,1,1
"org.apache.pig.scripting.jruby.RubyDataByteArray.toString(ThreadContext)",3,0,n/a,8,0,1,1,1
"org.apache.pig.scripting.jruby.RubySchema.RubySchema(Ruby,RubyClass)",2,3,n/a,4,0,2,2,1
"org.apache.pig.scripting.jruby.RubySchema.RubySchema(Ruby,RubyClass,Schema)",1,0,n/a,11,0,3,1,1
"org.apache.pig.scripting.jruby.RubySchema.RubySchema(Ruby,RubyClass,Schema,boolean)",2,7,n/a,20,1,4,4,2
"org.apache.pig.scripting.jruby.RubySchema.RubySchema(Ruby,RubyClass,String)",3,0,n/a,18,1,3,4,2
"org.apache.pig.scripting.jruby.RubySchema.add(ThreadContext,IRubyObject[])",2,0,n/a,15,0,2,3,1
"org.apache.pig.scripting.jruby.RubySchema.addInPlace(ThreadContext,IRubyObject[])",9,1,n/a,17,0,2,6,2
"org.apache.pig.scripting.jruby.RubySchema.bag(ThreadContext,IRubyObject,IRubyObject)",8,1,n/a,19,1,3,5,2
"org.apache.pig.scripting.jruby.RubySchema.bag(ThreadContext,IRubyObject,IRubyObject,IRubyObject)",2,0,n/a,16,0,4,3,1
"org.apache.pig.scripting.jruby.RubySchema.clone(ThreadContext)",3,1,n/a,9,0,1,2,1
"org.apache.pig.scripting.jruby.RubySchema.define(Ruby)",6,1,n/a,3,2,1,6,1
"org.apache.pig.scripting.jruby.RubySchema.find(Schema,String)",6,1,n/a,21,1,2,9,6
"org.apache.pig.scripting.jruby.RubySchema.find(ThreadContext,IRubyObject)",6,0,n/a,18,1,2,4,2
"org.apache.pig.scripting.jruby.RubySchema.fixSchemaNames(Schema)",16,5,n/a,40,4,1,21,10
"org.apache.pig.scripting.jruby.RubySchema.get(ThreadContext)",7,0,n/a,19,1,1,6,3
"org.apache.pig.scripting.jruby.RubySchema.get(ThreadContext,IRubyObject)",25,0,n/a,37,2,2,17,6
"org.apache.pig.scripting.jruby.RubySchema.get(ThreadContext,IRubyObject,IRubyObject)",11,0,n/a,19,1,3,6,3
"org.apache.pig.scripting.jruby.RubySchema.getInternalSchema()",0,6,n/a,8,0,0,1,1
"org.apache.pig.scripting.jruby.RubySchema.getName(ThreadContext)",6,0,n/a,17,1,1,5,3
"org.apache.pig.scripting.jruby.RubySchema.index(ThreadContext,IRubyObject)",6,0,n/a,19,2,2,5,3
"org.apache.pig.scripting.jruby.RubySchema.initialize(IRubyObject[])",5,2,n/a,20,1,1,7,3
"org.apache.pig.scripting.jruby.RubySchema.makeNullAliasRubySchema(ThreadContext,byte)",5,11,n/a,11,0,2,2,1
"org.apache.pig.scripting.jruby.RubySchema.map(ThreadContext,IRubyObject,IRubyObject)",9,1,n/a,19,1,3,5,2
"org.apache.pig.scripting.jruby.RubySchema.map(ThreadContext,IRubyObject,IRubyObject,IRubyObject)",2,0,n/a,16,0,4,3,1
"org.apache.pig.scripting.jruby.RubySchema.nullBag(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullBoolean(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullBytearray(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullChararray(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullDateTime(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullDouble(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullFloate(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullInt(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullLong(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullMap(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.nullTuple(ThreadContext,IRubyObject)",1,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.jruby.RubySchema.rubyArgToSchema(Object)",38,8,n/a,108,5,1,48,20
"org.apache.pig.scripting.jruby.RubySchema.set(ThreadContext,IRubyObject[])",23,0,n/a,43,1,2,29,9
"org.apache.pig.scripting.jruby.RubySchema.setName(IRubyObject)",6,0,n/a,22,2,1,8,4
"org.apache.pig.scripting.jruby.RubySchema.setName(String)",3,0,n/a,21,1,1,8,5
"org.apache.pig.scripting.jruby.RubySchema.setNameIf(IRubyObject)",3,3,n/a,12,1,1,3,2
"org.apache.pig.scripting.jruby.RubySchema.size(ThreadContext)",3,0,n/a,8,0,1,1,1
"org.apache.pig.scripting.jruby.RubySchema.toString(ThreadContext)",3,0,n/a,10,0,1,1,1
"org.apache.pig.scripting.jruby.RubySchema.tuple(ThreadContext,IRubyObject,IRubyObject)",5,3,n/a,19,1,3,5,2
"org.apache.pig.scripting.jruby.RubySchema.tuple(ThreadContext,IRubyObject,IRubyObject,IRubyObject)",2,0,n/a,16,0,4,3,1
"org.apache.pig.scripting.js.JSPig.JSPig(Pig)",0,4,n/a,3,0,1,1,1
"org.apache.pig.scripting.js.JSPig.bind()",1,0,n/a,8,0,0,1,1
"org.apache.pig.scripting.js.JSPig.bind(Object)",6,0,n/a,22,3,1,10,5
"org.apache.pig.scripting.js.JSPig.compile(String)",2,0,n/a,9,0,1,1,1
"org.apache.pig.scripting.js.JSPig.compile(String,String)",2,0,n/a,12,0,2,1,1
"org.apache.pig.scripting.js.JSPig.compileFromFile(String)",2,0,n/a,12,0,1,1,1
"org.apache.pig.scripting.js.JSPig.compileFromFile(String,String)",2,0,n/a,15,0,2,1,1
"org.apache.pig.scripting.js.JSPig.define(String,String)",1,0,n/a,9,0,2,1,1
"org.apache.pig.scripting.js.JSPig.fs(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.scripting.js.JSPig.registerJar(String)",1,0,n/a,8,0,1,1,1
"org.apache.pig.scripting.js.JSPig.registerUDF(String,String)",1,0,n/a,10,0,2,1,1
"org.apache.pig.scripting.js.JSPig.set(String,String)",1,0,n/a,8,0,2,1,1
"org.apache.pig.scripting.js.JsFunction.JsFunction(String)",10,0,n/a,19,2,1,8,4
"org.apache.pig.scripting.js.JsFunction.append(StringBuffer,Object)",16,3,n/a,29,3,2,15,5
"org.apache.pig.scripting.js.JsFunction.debugConvertJSToPig(int,String,Object,Schema)",5,3,n/a,5,1,4,2,2
"org.apache.pig.scripting.js.JsFunction.debugConvertPigToJS(int,String,Object,Schema)",4,4,n/a,5,1,4,2,2
"org.apache.pig.scripting.js.JsFunction.debugReturn(int,Object)",4,7,n/a,5,1,2,2,2
"org.apache.pig.scripting.js.JsFunction.exec(Tuple)",25,7,n/a,32,1,1,22,9
"org.apache.pig.scripting.js.JsFunction.indent(int)",3,3,n/a,12,1,1,6,2
"org.apache.pig.scripting.js.JsFunction.jsToPigBag(Scriptable,Schema,int)",13,1,n/a,14,1,3,10,4
"org.apache.pig.scripting.js.JsFunction.jsToPigMap(Scriptable,Schema,int)",7,1,n/a,19,3,3,14,5
"org.apache.pig.scripting.js.JsFunction.jsToPigTuple(Scriptable,Schema,int)",17,3,n/a,31,3,3,25,9
"org.apache.pig.scripting.js.JsFunction.outputSchema(Schema)",1,2,n/a,5,0,1,2,1
"org.apache.pig.scripting.js.JsFunction.pigBagToJS(DataBag,Schema,int)",11,1,n/a,24,1,3,10,4
"org.apache.pig.scripting.js.JsFunction.pigMapToJS(Map<String, Object>,Schema,int)",7,1,n/a,16,1,3,6,2
"org.apache.pig.scripting.js.JsFunction.pigTupleToJS(Tuple,Schema,int)",18,3,n/a,33,3,3,21,6
"org.apache.pig.scripting.js.JsFunction.stringify(Schema)",3,4,n/a,10,0,1,3,1
"org.apache.pig.scripting.js.JsFunction.stringify(Schema,StringBuffer)",12,2,n/a,25,3,2,12,4
"org.apache.pig.scripting.js.JsFunction.toString(Object)",3,3,n/a,10,0,1,3,1
"org.apache.pig.scripting.js.JsScriptEngine.JsScriptEngine()",3,1,n/a,5,0,0,3,1
"org.apache.pig.scripting.js.JsScriptEngine.eval(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.scripting.js.JsScriptEngine.getContext()",3,6,n/a,11,1,0,5,2
"org.apache.pig.scripting.js.JsScriptEngine.getInstance()",4,1,n/a,6,0,0,3,1
"org.apache.pig.scripting.js.JsScriptEngine.getParamsFromVariables()",8,1,n/a,16,3,0,10,4
"org.apache.pig.scripting.js.JsScriptEngine.getScope()",0,5,n/a,3,0,0,1,1
"org.apache.pig.scripting.js.JsScriptEngine.getScriptingLang()",0,1,n/a,4,0,0,1,1
"org.apache.pig.scripting.js.JsScriptEngine.jsCall(String,Object[])",3,1,n/a,11,0,2,3,1
"org.apache.pig.scripting.js.JsScriptEngine.jsEval(String,Reader)",3,3,n/a,13,1,2,3,2
"org.apache.pig.scripting.js.JsScriptEngine.jsEval(String,String)",3,3,n/a,13,1,2,3,2
"org.apache.pig.scripting.js.JsScriptEngine.jsNewArray(long)",2,1,n/a,8,0,1,1,1
"org.apache.pig.scripting.js.JsScriptEngine.jsNewObject()",2,3,n/a,7,0,0,1,1
"org.apache.pig.scripting.js.JsScriptEngine.jsPut(String,Object)",1,0,n/a,8,0,2,1,1
"org.apache.pig.scripting.js.JsScriptEngine.load(String,InputStream)",2,2,n/a,3,0,2,1,1
"org.apache.pig.scripting.js.JsScriptEngine.main(PigContext,String)",6,1,n/a,12,1,2,6,2
"org.apache.pig.scripting.js.JsScriptEngine.registerFunctions(String,String,PigContext)",14,3,n/a,30,3,3,18,7
"org.apache.pig.scripting.jython.JythonFunction.JythonFunction(String,String)",20,0,n/a,46,3,2,30,11
"org.apache.pig.scripting.jython.JythonFunction.exec(Tuple)",8,7,n/a,20,2,1,8,6
"org.apache.pig.scripting.jython.JythonFunction.logOnce(String)",2,3,n/a,6,0,1,3,2
"org.apache.pig.scripting.jython.JythonFunction.outputSchema(Schema)",13,2,n/a,34,4,1,17,7
"org.apache.pig.scripting.jython.JythonScriptEngine.DirDeleter.DirDeleter(File)",0,1,n/a,3,0,1,1,1
"org.apache.pig.scripting.jython.JythonScriptEngine.DirDeleter.delete(File)",4,2,n/a,8,2,1,4,3
"org.apache.pig.scripting.jython.JythonScriptEngine.DirDeleter.run()",2,0,n/a,8,1,0,3,2
"org.apache.pig.scripting.jython.JythonScriptEngine.Interpreter.execfile(InputStream,String,PigContext)",37,2,n/a,77,4,3,40,21
"org.apache.pig.scripting.jython.JythonScriptEngine.Interpreter.get(String)",2,0,n/a,3,0,1,1,1
"org.apache.pig.scripting.jython.JythonScriptEngine.Interpreter.getModuleState()",24,2,n/a,52,6,0,29,11
"org.apache.pig.scripting.jython.JythonScriptEngine.Interpreter.init(String,PigContext)",8,2,n/a,40,2,2,10,3
"org.apache.pig.scripting.jython.JythonScriptEngine.Interpreter.setMain(boolean)",2,4,n/a,7,1,1,3,2
"org.apache.pig.scripting.jython.JythonScriptEngine.getFunction(String,String)",3,2,n/a,12,0,2,3,1
"org.apache.pig.scripting.jython.JythonScriptEngine.getParamsFromVariables()",9,1,n/a,16,2,0,10,3
"org.apache.pig.scripting.jython.JythonScriptEngine.getScriptingLang()",0,1,n/a,4,0,0,1,1
"org.apache.pig.scripting.jython.JythonScriptEngine.hasFunction(InputStream)",9,1,n/a,21,2,1,15,6
"org.apache.pig.scripting.jython.JythonScriptEngine.load(InputStream,String,PigContext)",1,1,n/a,11,0,3,1,1
"org.apache.pig.scripting.jython.JythonScriptEngine.main(PigContext,String)",18,1,n/a,32,2,2,20,5
"org.apache.pig.scripting.jython.JythonScriptEngine.registerFunctions(String,String,PigContext)",23,3,n/a,38,4,3,21,11
"org.apache.pig.scripting.jython.JythonScriptEngine.resolvePyModulePath(String,Object)",9,1,n/a,19,3,2,13,8
"org.apache.pig.scripting.jython.JythonUtils.pigToPython(Object)",13,2,n/a,21,2,1,15,7
"org.apache.pig.scripting.jython.JythonUtils.pigTupleToPyTuple(Tuple)",4,3,n/a,8,1,1,5,2
"org.apache.pig.scripting.jython.JythonUtils.pythonToPig(PyObject)",40,5,n/a,74,4,1,48,21
"org.apache.pig.scripting.streaming.python.PythonScriptEngine.getFunctions(InputStream)",20,1,n/a,29,3,1,24,5
"org.apache.pig.scripting.streaming.python.PythonScriptEngine.getParamsFromVariables()",1,1,n/a,4,0,0,1,1
"org.apache.pig.scripting.streaming.python.PythonScriptEngine.getScriptingLang()",0,1,n/a,4,0,0,1,1
"org.apache.pig.scripting.streaming.python.PythonScriptEngine.main(PigContext,String)",3,1,n/a,7,0,2,3,1
"org.apache.pig.scripting.streaming.python.PythonScriptEngine.registerFunctions(String,String,PigContext)",18,3,n/a,37,1,3,21,5
"org.apache.pig.tools.ToolsPigServer.PigPlans.PigPlans(LogicalPlan)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.ToolsPigServer.ToolsPigServer(ExecType,Properties)",1,0,n/a,8,0,2,1,1
"org.apache.pig.tools.ToolsPigServer.ToolsPigServer(PigContext)",1,0,n/a,8,0,1,1,1
"org.apache.pig.tools.ToolsPigServer.ToolsPigServer(String)",1,0,n/a,10,0,1,1,1
"org.apache.pig.tools.ToolsPigServer.getPlans()",0,1,n/a,9,0,0,1,1
"org.apache.pig.tools.ToolsPigServer.registerNoRun(String,Map<String, String>,List<String>)",18,0,n/a,47,2,3,19,4
"org.apache.pig.tools.ToolsPigServer.runPlan(LogicalPlan,String)",2,1,n/a,13,0,2,2,1
"org.apache.pig.tools.cmdline.CmdLineParser.CmdLineParser(String[])",2,1,n/a,10,0,1,4,1
"org.apache.pig.tools.cmdline.CmdLineParser.getNextOpt()",25,1,n/a,69,3,0,44,17
"org.apache.pig.tools.cmdline.CmdLineParser.getRemainingArgs()",1,3,n/a,13,0,0,5,2
"org.apache.pig.tools.cmdline.CmdLineParser.getValInt()",1,0,n/a,11,0,0,3,2
"org.apache.pig.tools.cmdline.CmdLineParser.getValStr()",0,13,n/a,9,0,0,1,1
"org.apache.pig.tools.cmdline.CmdLineParser.registerOpt(char,String,ValueExpected)",7,21,n/a,25,2,3,8,5
"org.apache.pig.tools.counters.PigCounterHelper.incrCounter(Enum<?>,long)",11,0,n/a,20,3,2,9,6
"org.apache.pig.tools.counters.PigCounterHelper.incrCounter(String,String,long)",12,4,n/a,21,3,3,10,6
"org.apache.pig.tools.grunt.Command.execute(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.pig.tools.grunt.Grunt.Grunt(BufferedReader,PigContext)",2,4,n/a,7,1,2,4,2
"org.apache.pig.tools.grunt.Grunt.checkScript(String)",13,2,n/a,15,1,1,8,2
"org.apache.pig.tools.grunt.Grunt.exec()",11,3,n/a,12,1,0,7,2
"org.apache.pig.tools.grunt.Grunt.run()",12,1,n/a,15,2,0,9,3
"org.apache.pig.tools.grunt.Grunt.setConsoleReader(ConsoleReader)",5,1,n/a,6,0,1,3,1
"org.apache.pig.tools.grunt.GruntParser.ExplainState.ExplainState(String,String,String,boolean,String)",2,1,n/a,11,0,5,8,1
"org.apache.pig.tools.grunt.GruntParser.GruntParser(InputStream)",2,0,n/a,4,0,1,2,1
"org.apache.pig.tools.grunt.GruntParser.GruntParser(InputStream,PigServer)",2,3,n/a,5,0,2,3,1
"org.apache.pig.tools.grunt.GruntParser.GruntParser(InputStream,String)",1,0,n/a,3,0,2,1,1
"org.apache.pig.tools.grunt.GruntParser.GruntParser(InputStream,String,PigServer)",2,1,n/a,5,0,3,3,1
"org.apache.pig.tools.grunt.GruntParser.GruntParser(PigScriptParserTokenManager)",1,0,n/a,3,0,1,1,1
"org.apache.pig.tools.grunt.GruntParser.GruntParser(PigScriptParserTokenManager,PigServer)",2,3,n/a,5,0,2,3,1
"org.apache.pig.tools.grunt.GruntParser.GruntParser(Reader)",2,0,n/a,4,0,1,2,1
"org.apache.pig.tools.grunt.GruntParser.GruntParser(Reader,PigServer)",2,3,n/a,5,0,2,3,1
"org.apache.pig.tools.grunt.GruntParser.StreamPrinter.StreamPrinter(InputStream,String,PrintStream)",0,4,n/a,5,0,3,3,1
"org.apache.pig.tools.grunt.GruntParser.StreamPrinter.run()",7,0,n/a,19,3,0,10,5
"org.apache.pig.tools.grunt.GruntParser.discardBatch()",2,8,n/a,5,1,0,2,2
"org.apache.pig.tools.grunt.GruntParser.executeBatch()",22,18,n/a,31,4,0,15,8
"org.apache.pig.tools.grunt.GruntParser.explainCurrentBatch()",1,1,n/a,3,0,0,1,1
"org.apache.pig.tools.grunt.GruntParser.explainCurrentBatch(boolean)",17,2,n/a,34,2,1,21,10
"org.apache.pig.tools.grunt.GruntParser.init()",2,6,n/a,8,0,0,6,1
"org.apache.pig.tools.grunt.GruntParser.isDone()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.grunt.GruntParser.loadScript(String,boolean,boolean,boolean,List<String>,List<String>)",29,4,n/a,45,2,6,32,8
"org.apache.pig.tools.grunt.GruntParser.parameterSubstitutionInGrunt(String)",5,25,n/a,6,1,1,3,3
"org.apache.pig.tools.grunt.GruntParser.parseOnly()",2,1,n/a,12,1,0,5,3
"org.apache.pig.tools.grunt.GruntParser.parseStopOnError()",1,2,n/a,4,0,0,1,1
"org.apache.pig.tools.grunt.GruntParser.parseStopOnError(boolean)",8,5,n/a,41,2,1,19,10
"org.apache.pig.tools.grunt.GruntParser.printAliases()",2,0,n/a,8,1,0,3,2
"org.apache.pig.tools.grunt.GruntParser.printClear()",7,0,n/a,8,0,0,5,1
"org.apache.pig.tools.grunt.GruntParser.printHelp()",42,0,n/a,46,0,0,42,1
"org.apache.pig.tools.grunt.GruntParser.printLengthAndReplication(ElementDescriptor)",5,2,n/a,8,0,1,4,1
"org.apache.pig.tools.grunt.GruntParser.processCD(String)",19,0,n/a,33,4,1,17,7
"org.apache.pig.tools.grunt.GruntParser.processCat(String)",22,0,n/a,42,5,1,27,9
"org.apache.pig.tools.grunt.GruntParser.processCopy(String,String)",9,0,n/a,20,2,2,11,3
"org.apache.pig.tools.grunt.GruntParser.processCopyFromLocal(String,String)",9,0,n/a,20,2,2,11,3
"org.apache.pig.tools.grunt.GruntParser.processCopyToLocal(String,String)",9,0,n/a,20,2,2,11,3
"org.apache.pig.tools.grunt.GruntParser.processDeclare(String,String)",1,0,n/a,4,0,2,1,1
"org.apache.pig.tools.grunt.GruntParser.processDefault(String,String)",1,0,n/a,4,0,2,1,1
"org.apache.pig.tools.grunt.GruntParser.processDescribe(String)",15,0,n/a,31,3,1,16,7
"org.apache.pig.tools.grunt.GruntParser.processDump(String)",15,0,n/a,30,2,1,16,7
"org.apache.pig.tools.grunt.GruntParser.processExplain(String,String,boolean,String,String,List<String>,List<String>)",8,0,n/a,24,3,7,10,7
"org.apache.pig.tools.grunt.GruntParser.processExplain(String,String,boolean,String,String,List<String>,List<String>,boolean)",8,2,n/a,32,3,8,18,6
"org.apache.pig.tools.grunt.GruntParser.processFsCommand(String[])",9,0,n/a,24,2,1,15,6
"org.apache.pig.tools.grunt.GruntParser.processHistory(boolean)",1,0,n/a,4,0,1,1,1
"org.apache.pig.tools.grunt.GruntParser.processIllustrate(String,String,String,List<String>,List<String>)",24,0,n/a,54,4,5,31,15
"org.apache.pig.tools.grunt.GruntParser.processKill(String)",4,0,n/a,6,0,1,2,1
"org.apache.pig.tools.grunt.GruntParser.processLS(String)",20,0,n/a,39,5,1,22,8
"org.apache.pig.tools.grunt.GruntParser.processMkdir(String)",6,0,n/a,13,1,1,7,2
"org.apache.pig.tools.grunt.GruntParser.processMove(String,String)",11,0,n/a,23,3,2,13,4
"org.apache.pig.tools.grunt.GruntParser.processPWD()",6,0,n/a,11,1,0,5,2
"org.apache.pig.tools.grunt.GruntParser.processPig(String)",6,0,n/a,15,1,1,7,3
"org.apache.pig.tools.grunt.GruntParser.processRegister(String)",3,0,n/a,6,0,1,3,1
"org.apache.pig.tools.grunt.GruntParser.processRegister(String,String,String)",8,0,n/a,16,2,3,9,4
"org.apache.pig.tools.grunt.GruntParser.processRemove(String,String)",20,0,n/a,43,5,2,28,9
"org.apache.pig.tools.grunt.GruntParser.processSQLCommand(String)",16,0,n/a,20,2,1,12,5
"org.apache.pig.tools.grunt.GruntParser.processScript(String,boolean,List<String>,List<String>)",10,0,n/a,30,3,4,16,5
"org.apache.pig.tools.grunt.GruntParser.processSet()",15,0,n/a,22,2,0,15,4
"org.apache.pig.tools.grunt.GruntParser.processSet(String,String)",26,0,n/a,44,2,2,23,11
"org.apache.pig.tools.grunt.GruntParser.processShCommand(String[])",30,0,n/a,50,3,1,35,8
"org.apache.pig.tools.grunt.GruntParser.prompt()",1,2,n/a,7,1,0,2,2
"org.apache.pig.tools.grunt.GruntParser.quit()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.grunt.GruntParser.runPreprocessor(String,List<String>,List<String>)",5,1,n/a,8,0,3,5,1
"org.apache.pig.tools.grunt.GruntParser.runSQLCommand(String,String,boolean)",40,2,n/a,46,2,3,32,8
"org.apache.pig.tools.grunt.GruntParser.setBatchOn()",1,4,n/a,3,0,0,1,1
"org.apache.pig.tools.grunt.GruntParser.setExplainState(ExplainState)",0,0,n/a,4,0,1,1,1
"org.apache.pig.tools.grunt.GruntParser.setInteractive(boolean)",2,9,n/a,7,1,1,3,2
"org.apache.pig.tools.grunt.GruntParser.setLoadOnly(boolean)",0,1,n/a,4,0,1,1,1
"org.apache.pig.tools.grunt.GruntParser.setProps()",8,1,n/a,6,0,0,4,1
"org.apache.pig.tools.grunt.GruntParser.setScriptIllustrate()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.grunt.GruntParser.setValidateEachStatement(boolean)",1,2,n/a,3,0,1,1,1
"org.apache.pig.tools.grunt.PigCompletor.PigCompletor()",16,1,n/a,32,2,0,17,5
"org.apache.pig.tools.grunt.PigCompletor.complete(String,int,List)",13,0,n/a,34,3,3,24,9
"org.apache.pig.tools.grunt.PigCompletor.isDelimit(char)",1,1,n/a,5,0,1,3,2
"org.apache.pig.tools.grunt.PigCompletor.loadCandidateKeywords(InputStream,Set<String>)",10,4,n/a,20,2,2,12,6
"org.apache.pig.tools.grunt.PigCompletor.searchCandidate(String)",3,1,n/a,8,1,1,5,3
"org.apache.pig.tools.grunt.PigCompletorAliases.PigCompletorAliases(PigServer)",5,1,n/a,12,1,1,6,2
"org.apache.pig.tools.grunt.PigCompletorAliases.complete(String,int,List)",16,0,n/a,45,2,3,34,13
"org.apache.pig.tools.grunt.PigCompletorAliases.searchCandidate(String)",5,1,n/a,9,1,1,5,4
"org.apache.pig.tools.parameters.ParameterSubstitutionException.ParameterSubstitutionException(String)",1,2,n/a,3,0,1,1,1
"org.apache.pig.tools.parameters.ParameterSubstitutionException.getMessage()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.parameters.ParameterSubstitutionPreprocessor.ParameterSubstitutionPreprocessor(PreprocessorContext)",2,4,n/a,6,0,1,4,1
"org.apache.pig.tools.parameters.ParameterSubstitutionPreprocessor.ParameterSubstitutionPreprocessor(int)",2,0,n/a,7,0,1,1,1
"org.apache.pig.tools.parameters.ParameterSubstitutionPreprocessor.genSubstitutedFile(BufferedReader,Writer)",10,4,n/a,21,2,2,8,3
"org.apache.pig.tools.parameters.ParameterSubstitutionPreprocessor.genSubstitutedFile(BufferedReader,Writer,String[],String[])",6,0,n/a,11,1,4,4,4
"org.apache.pig.tools.parameters.ParameterSubstitutionPreprocessor.parsePigFile(BufferedReader,Writer)",8,1,n/a,14,1,2,9,2
"org.apache.pig.tools.parameters.PreprocessorContext.PreprocessorContext(Map<String, String>)",1,0,n/a,4,0,1,2,1
"org.apache.pig.tools.parameters.PreprocessorContext.PreprocessorContext(int)",2,3,n/a,8,0,1,2,1
"org.apache.pig.tools.parameters.PreprocessorContext.executeShellCommand(String)",40,1,n/a,75,2,1,56,13
"org.apache.pig.tools.parameters.PreprocessorContext.getParamVal()",0,3,n/a,3,0,0,1,1
"org.apache.pig.tools.parameters.PreprocessorContext.loadParamVal(List<String>,List<String>)",10,5,n/a,20,3,2,13,6
"org.apache.pig.tools.parameters.PreprocessorContext.processOrdLine(String,String)",1,0,n/a,10,0,2,1,1
"org.apache.pig.tools.parameters.PreprocessorContext.processOrdLine(String,String,Boolean)",7,1,n/a,20,2,3,7,4
"org.apache.pig.tools.parameters.PreprocessorContext.processShellCmd(String,String)",1,0,n/a,9,0,2,1,1
"org.apache.pig.tools.parameters.PreprocessorContext.processShellCmd(String,String,Boolean)",12,1,n/a,25,2,3,12,5
"org.apache.pig.tools.parameters.PreprocessorContext.setPigContext(PigContext)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.parameters.PreprocessorContext.substitute(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.tools.parameters.PreprocessorContext.substitute(String,String)",26,2,n/a,55,4,2,38,14
"org.apache.pig.tools.parameters.PreprocessorContext.validate(String)",8,0,n/a,16,1,1,10,4
"org.apache.pig.tools.pigstats.EmbeddedPigStats.EmbeddedPigStats(Map<String, List<PigStats>>)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getAllErrorMessages()",5,0,n/a,13,3,0,7,4
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getAllStats()",0,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getBytesWritten()",1,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getDuration()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getErrorCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getFeatures()",1,2,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getInputStats()",1,2,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getJobClient()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getJobGraph()",1,4,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getNumberBytes(String)",1,0,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getNumberJobs()",1,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getNumberRecords(String)",1,0,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getOutputAlias(String)",1,0,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getOutputLocations()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getOutputNames()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getOutputStats()",1,11,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getPigProperties()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getProactiveSpillCountObjects()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getProactiveSpillCountRecords()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getRecordWritten()",1,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getReturnCode()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getSMMSpillCount()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.getScriptId()",1,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.isEmbedded()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmbeddedPigStats.isSuccessful()",2,6,n/a,13,3,0,7,4
"org.apache.pig.tools.pigstats.EmbeddedPigStats.result(String)",1,1,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.EmptyPigStats()",6,4,n/a,7,0,0,4,1
"org.apache.pig.tools.pigstats.EmptyPigStats.EmptyPigStats(PigContext,POStore)",13,1,n/a,14,0,2,11,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getAllErrorMessages()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getAllStats()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getBytesWritten()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getInputStats()",0,2,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getJobClient()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getJobGraph()",0,4,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getNumberBytes(String)",0,0,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getNumberFailedJobs()",0,2,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getNumberJobs()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getNumberRecords(String)",0,0,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getNumberSuccessfulJobs()",0,3,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getOutputAlias(String)",0,0,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getOutputLocations()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getOutputNames()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getOutputStats()",0,11,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getProactiveSpillCountObjects()",0,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getProactiveSpillCountRecords()",0,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getRecordWritten()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.getSMMSpillCount()",0,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.isEmbedded()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.result(String)",1,1,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.setBackendException(String,Exception)",1,1,n/a,4,0,2,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.start()",1,2,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.EmptyPigStats.stop()",1,2,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.InputStats(String,long,long,boolean)",2,5,n/a,12,1,4,7,2
"org.apache.pig.tools.pigstats.InputStats.getBytes()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.getConf()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.getDisplayString()",20,2,n/a,30,2,0,19,7
"org.apache.pig.tools.pigstats.InputStats.getInputType()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.getLocation()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.getName()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.getNumberRecords()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.isSuccessful()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.markIndexerInput()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.markSampleInput()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.markSideFileInput()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.InputStats.setConf(Configuration)",0,4,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.JobStats.JobStats(String,JobGraph)",3,3,n/a,5,0,2,3,1
"org.apache.pig.tools.pigstats.JobStats.accept(PlanVisitor)",n/a,7,3,n/a,n/a,1,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.calculateMedianValue(List<Long>)",6,1,n/a,19,1,1,7,2
"org.apache.pig.tools.pigstats.JobStats.getAlias()",1,3,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.getAliasLocation()",1,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.getAvgMapTime()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getAvgREduceTime()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getBytesWritten()",1,0,n/a,12,1,0,6,3
"org.apache.pig.tools.pigstats.JobStats.getDisplayString()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getErrorMessage()",0,1,n/a,1,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.getException()",0,5,n/a,1,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.getFeature()",1,5,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.getHadoopCounters()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getHdfsBytesRead()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.getHdfsBytesWritten()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.getInputs()",1,3,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.getJobId()",n/a,9,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getMapInputRecords()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getMapOutputRecords()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getMaxMapTime()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getMaxReduceTime()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getMinMapTime()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getMinReduceTime()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getMultiInputCounters()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getMultiStoreCounters()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getNumberMaps()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getNumberReduces()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getOutputSize(POStore,Configuration)",10,2,n/a,30,3,2,14,5
"org.apache.pig.tools.pigstats.JobStats.getOutputs()",1,6,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.getProactiveSpillCountObjects()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getProactiveSpillCountRecs()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getRecordWrittern()",1,0,n/a,12,1,0,6,3
"org.apache.pig.tools.pigstats.JobStats.getReduceInputRecords()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getReduceOutputRecords()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getSMMSpillCount()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.JobStats.getState()",0,2,n/a,1,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.isEqual(Operator)",2,39,n/a,5,0,1,3,2
"org.apache.pig.tools.pigstats.JobStats.isIndexer()",3,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.isSampler()",3,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.isSuccessful()",0,4,n/a,1,0,0,1,1
"org.apache.pig.tools.pigstats.JobStats.setBackendException(Exception)",0,3,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.JobStats.setConf(Configuration)",0,3,n/a,6,1,1,3,2
"org.apache.pig.tools.pigstats.JobStats.setErrorMsg(String)",0,2,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.JobStats.setSuccessful(boolean)",0,8,n/a,3,0,1,1,2
"org.apache.pig.tools.pigstats.OutputStats.OutputStats(String,long,long,boolean)",2,5,n/a,12,1,4,7,2
"org.apache.pig.tools.pigstats.OutputStats.getAlias()",1,6,n/a,3,0,0,1,2
"org.apache.pig.tools.pigstats.OutputStats.getBytes()",0,7,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.OutputStats.getConf()",0,4,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.OutputStats.getDisplayString()",15,2,n/a,19,2,0,11,4
"org.apache.pig.tools.pigstats.OutputStats.getFunctionName()",3,0,n/a,4,0,0,1,2
"org.apache.pig.tools.pigstats.OutputStats.getLocation()",0,6,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.OutputStats.getName()",0,4,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.OutputStats.getNumberRecords()",0,2,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.OutputStats.getPOStore()",0,8,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.OutputStats.getRecords()",0,5,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.OutputStats.isSuccessful()",0,2,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.OutputStats.iterator()",20,0,n/a,4,3,0,34,11
"org.apache.pig.tools.pigstats.OutputStats.setBytes(long)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.OutputStats.setConf(Configuration)",0,4,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.OutputStats.setPOStore(POStore)",0,4,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.OutputStats.setRecords(long)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.OutputStats.setSuccessful(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.PigProgressNotificationListener.initialPlanNotification(String,OperatorPlan<?>)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.tools.pigstats.PigProgressNotificationListener.jobFailedNotification(String,JobStats)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.tools.pigstats.PigProgressNotificationListener.jobFinishedNotification(String,JobStats)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.tools.pigstats.PigProgressNotificationListener.jobStartedNotification(String,String)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.tools.pigstats.PigProgressNotificationListener.jobsSubmittedNotification(String,int)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.tools.pigstats.PigProgressNotificationListener.launchCompletedNotification(String,int)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.tools.pigstats.PigProgressNotificationListener.launchStartedNotification(String,int)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.tools.pigstats.PigProgressNotificationListener.outputCompletedNotification(String,OutputStats)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.tools.pigstats.PigProgressNotificationListener.progressUpdatedNotification(String,int)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.pig.tools.pigstats.PigStats.JobComparator.compare(JobStats,JobStats)",3,0,n/a,4,0,2,1,1
"org.apache.pig.tools.pigstats.PigStats.JobGraph.getFailedJobs()",6,1,n/a,11,2,0,7,3
"org.apache.pig.tools.pigstats.PigStats.JobGraph.getJobList()",2,0,n/a,10,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.JobGraph.getSuccessfulJobs()",8,1,n/a,12,2,0,8,3
"org.apache.pig.tools.pigstats.PigStats.JobGraph.isConnected(Operator,Operator)",5,6,n/a,13,3,2,7,5
"org.apache.pig.tools.pigstats.PigStats.JobGraph.iterator()",4,17,n/a,2,2,0,3,1
"org.apache.pig.tools.pigstats.PigStats.JobGraph.toString()",4,1,n/a,10,1,0,5,2
"org.apache.pig.tools.pigstats.PigStats.JobGraphPrinter.JobGraphPrinter(OperatorPlan)",3,1,n/a,4,0,1,2,1
"org.apache.pig.tools.pigstats.PigStats.JobGraphPrinter.toString()",2,1,n/a,5,0,0,2,1
"org.apache.pig.tools.pigstats.PigStats.JobGraphPrinter.visit(JobStats)",8,3,n/a,11,2,1,7,3
"org.apache.pig.tools.pigstats.PigStats.get()",1,24,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getAllErrorMessages()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.PigStats.getAllStats()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.PigStats.getBytesWritten()",4,1,n/a,13,1,0,7,3
"org.apache.pig.tools.pigstats.PigStats.getDuration()",0,0,n/a,3,0,0,1,3
"org.apache.pig.tools.pigstats.PigStats.getErrorCode()",0,0,n/a,6,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getErrorMessage()",0,2,n/a,6,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getErrorThrowable()",0,0,n/a,6,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getFeatures()",2,2,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getFileName()",2,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getHadoopVersion()",2,2,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getInputStats()",7,2,n/a,10,2,0,6,3
"org.apache.pig.tools.pigstats.PigStats.getJobClient()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.PigStats.getJobGraph()",0,4,n/a,6,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getNumberBytes(String)",6,0,n/a,16,2,1,9,4
"org.apache.pig.tools.pigstats.PigStats.getNumberFailedJobs()",4,2,n/a,8,1,0,6,3
"org.apache.pig.tools.pigstats.PigStats.getNumberJobs()",1,1,n/a,6,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getNumberRecords(String)",6,0,n/a,16,2,1,9,4
"org.apache.pig.tools.pigstats.PigStats.getNumberSuccessfulJobs()",4,3,n/a,8,1,0,6,3
"org.apache.pig.tools.pigstats.PigStats.getOutputAlias(String)",6,0,n/a,17,2,1,9,4
"org.apache.pig.tools.pigstats.PigStats.getOutputLocations()",5,0,n/a,10,1,0,4,2
"org.apache.pig.tools.pigstats.PigStats.getOutputNames()",5,0,n/a,10,1,0,4,2
"org.apache.pig.tools.pigstats.PigStats.getOutputStats()",7,11,n/a,10,2,0,6,3
"org.apache.pig.tools.pigstats.PigStats.getPigContext()",0,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getPigProperties()",1,0,n/a,9,1,0,3,2
"org.apache.pig.tools.pigstats.PigStats.getPigVersion()",2,2,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getProactiveSpillCountObjects()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.PigStats.getProactiveSpillCountRecords()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.PigStats.getRecordWritten()",4,1,n/a,13,1,0,7,3
"org.apache.pig.tools.pigstats.PigStats.getReturnCode()",0,0,n/a,6,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.getSMMSpillCount()",n/a,0,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.PigStats.getScriptId()",2,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.PigStats.isEmbedded()",n/a,1,4,n/a,n/a,0,n/a,n/a
"org.apache.pig.tools.pigstats.PigStats.isSuccessful()",1,6,n/a,4,0,0,1,3
"org.apache.pig.tools.pigstats.PigStats.result(String)",11,1,n/a,17,4,1,11,6
"org.apache.pig.tools.pigstats.PigStats.setBackendException(String,Exception)",12,1,n/a,21,2,2,13,7
"org.apache.pig.tools.pigstats.PigStats.setErrorCode(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.PigStats.setErrorMessage(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.PigStats.setErrorThrowable(Throwable)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.PigStats.setReturnCode(int)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.PigStats.start()",2,2,n/a,4,0,0,2,1
"org.apache.pig.tools.pigstats.PigStats.start(PigStats)",2,10,n/a,4,0,1,2,1
"org.apache.pig.tools.pigstats.PigStats.stop()",5,2,n/a,12,1,0,8,6
"org.apache.pig.tools.pigstats.PigStatsUtil.getEmptyPigStats()",2,4,n/a,11,0,0,1,1
"org.apache.pig.tools.pigstats.PigStatsUtil.getMultiInputsCounterName(String,int)",1,2,n/a,11,0,2,2,2
"org.apache.pig.tools.pigstats.PigStatsUtil.getMultiStoreCounterName(POStore)",4,4,n/a,11,0,1,2,2
"org.apache.pig.tools.pigstats.PigStatsUtil.getPigStats(int)",4,4,n/a,14,1,1,5,2
"org.apache.pig.tools.pigstats.PigStatsUtil.getShortName(String)",8,2,n/a,21,1,1,13,6
"org.apache.pig.tools.pigstats.PigStatsUtil.isTempFile(String)",2,2,n/a,4,0,1,2,1
"org.apache.pig.tools.pigstats.PigStatsUtil.setErrorCode(int)",4,1,n/a,7,1,1,4,2
"org.apache.pig.tools.pigstats.PigStatsUtil.setErrorMessage(String)",4,7,n/a,7,1,1,4,2
"org.apache.pig.tools.pigstats.PigStatsUtil.setErrorThrowable(Throwable)",4,4,n/a,7,1,1,4,2
"org.apache.pig.tools.pigstats.PigStatsUtil.setStatsMap(Map<String, List<PigStats>>)",2,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.PigStatusReporter.PigStatusReporter()",0,1,n/a,2,0,0,0,1
"org.apache.pig.tools.pigstats.PigStatusReporter.getCounter(Enum<?>)",1,4,n/a,10,0,1,1,2
"org.apache.pig.tools.pigstats.PigStatusReporter.getCounter(String,String)",1,1,n/a,10,0,2,1,2
"org.apache.pig.tools.pigstats.PigStatusReporter.getInstance()",1,22,n/a,9,1,0,3,2
"org.apache.pig.tools.pigstats.PigStatusReporter.getProgress()",1,0,n/a,3,0,0,1,2
"org.apache.pig.tools.pigstats.PigStatusReporter.incrCounter(Enum<?>,long)",1,6,n/a,3,0,2,1,2
"org.apache.pig.tools.pigstats.PigStatusReporter.incrCounter(String,String,long)",1,16,n/a,3,0,3,1,2
"org.apache.pig.tools.pigstats.PigStatusReporter.progress()",1,1,n/a,6,1,0,2,2
"org.apache.pig.tools.pigstats.PigStatusReporter.setContext(TaskContext<?>)",0,8,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.PigStatusReporter.setStatus(String)",1,1,n/a,6,1,1,2,2
"org.apache.pig.tools.pigstats.PigStatusReporter.staticDataCleanup()",0,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.AliasVisitor(PhysicalPlan,List<String>,List<String>)",5,4,n/a,9,1,3,7,3
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.setAlias(PhysicalOperator)",7,14,n/a,13,2,1,8,4
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitCollectedGroup(POCollectedGroup)",2,4,n/a,6,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitDistinct(PODistinct)",2,3,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitFRJoin(POFRJoin)",2,3,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitFilter(POFilter)",2,4,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitLimit(POLimit)",2,3,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitLoad(POLoad)",2,3,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitLocalRearrange(POLocalRearrange)",2,5,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitMergeCoGroup(POMergeCogroup)",2,3,n/a,6,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitMergeJoin(POMergeJoin)",2,3,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitPOForEach(POForEach)",2,4,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitSkewedJoin(POSkewedJoin)",2,3,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitSort(POSort)",2,4,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitStream(POStream)",2,3,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor.visitUnion(POUnion)",2,3,n/a,5,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.FeatureVisitor(PhysicalPlan,BitSet)",2,3,n/a,4,0,2,2,1
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.visitCollectedGroup(POCollectedGroup)",2,4,n/a,5,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.visitDemux(PODemux)",2,3,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.visitDistinct(PODistinct)",2,3,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.visitFRJoin(POFRJoin)",2,3,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.visitMergeCoGroup(POMergeCogroup)",2,3,n/a,5,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.visitMergeJoin(POMergeJoin)",5,3,n/a,7,0,1,3,2
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.visitPartialAgg(POPartialAgg)",2,2,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.visitSplit(POSplit)",2,4,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor.visitStream(POStream)",2,3,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.LogicalPlanFeatureVisitor(LogicalPlan,BitSet)",2,1,n/a,4,0,2,2,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOCogroup)",13,1,n/a,14,2,1,8,5
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOCross)",2,1,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LODistinct)",2,1,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOFilter)",2,1,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOForEach)",0,1,n/a,3,0,1,0,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOJoin)",15,1,n/a,14,1,1,10,6
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOLimit)",2,1,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LONative)",2,1,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LORank)",2,1,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOSort)",2,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOSplit)",0,1,n/a,3,0,1,0,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOStream)",2,1,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor.visit(LOUnion)",2,2,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.PIG_PROPERTY.PIG_PROPERTY(String)",0,13,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.PIG_PROPERTY.toString()",0,25,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.ScriptState.ScriptState(String)",0,2,n/a,4,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.bitSetToLong(BitSet)",2,1,n/a,7,1,1,6,2
"org.apache.pig.tools.pigstats.ScriptState.emitInitialPlanNotification(OperatorPlan<?>)",4,2,n/a,11,2,1,4,3
"org.apache.pig.tools.pigstats.ScriptState.emitJobFailedNotification(JobStats)",1,3,n/a,5,1,1,2,2
"org.apache.pig.tools.pigstats.ScriptState.emitJobStartedNotification(String)",1,2,n/a,5,1,1,2,2
"org.apache.pig.tools.pigstats.ScriptState.emitJobsSubmittedNotification(int)",1,4,n/a,5,1,1,2,2
"org.apache.pig.tools.pigstats.ScriptState.emitLaunchCompletedNotification(int)",1,2,n/a,5,1,1,2,2
"org.apache.pig.tools.pigstats.ScriptState.emitLaunchStartedNotification(int)",1,2,n/a,5,1,1,2,2
"org.apache.pig.tools.pigstats.ScriptState.emitOutputCompletedNotification(OutputStats)",1,3,n/a,5,1,1,2,2
"org.apache.pig.tools.pigstats.ScriptState.emitProgressUpdatedNotification(int)",1,5,n/a,5,1,1,2,2
"org.apache.pig.tools.pigstats.ScriptState.emitjobFinishedNotification(JobStats)",1,2,n/a,5,1,1,2,2
"org.apache.pig.tools.pigstats.ScriptState.featureLongToString(long)",9,2,n/a,13,2,1,11,5
"org.apache.pig.tools.pigstats.ScriptState.get()",1,20,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.ScriptState.getAllListeners()",0,2,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.ScriptState.getCommandLine()",0,2,n/a,3,0,0,1,2
"org.apache.pig.tools.pigstats.ScriptState.getFileName()",0,7,n/a,3,0,0,1,2
"org.apache.pig.tools.pigstats.ScriptState.getHadoopVersion()",1,3,n/a,6,1,0,3,3
"org.apache.pig.tools.pigstats.ScriptState.getId()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.ScriptState.getPigContext()",0,3,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.ScriptState.getPigVersion()",8,3,n/a,20,3,0,12,5
"org.apache.pig.tools.pigstats.ScriptState.getScript()",0,3,n/a,3,0,0,1,2
"org.apache.pig.tools.pigstats.ScriptState.getScriptFeatures()",1,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.ScriptState.registerListener(PigProgressNotificationListener)",1,4,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.setCommandLine(String)",3,2,n/a,4,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.setFileName(String)",0,2,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.setPigContext(PigContext)",0,3,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.ScriptState.setScript(BufferedReader)",8,5,n/a,13,2,1,8,3
"org.apache.pig.tools.pigstats.ScriptState.setScript(File)",5,5,n/a,16,3,1,8,4
"org.apache.pig.tools.pigstats.ScriptState.setScript(String)",8,5,n/a,18,2,1,9,5
"org.apache.pig.tools.pigstats.ScriptState.setScriptFeatures(LogicalPlan)",7,1,n/a,11,1,1,6,2
"org.apache.pig.tools.pigstats.ScriptState.start(ScriptState)",2,5,n/a,4,0,1,2,1
"org.apache.pig.tools.pigstats.ScriptState.start(String,PigContext)",6,0,n/a,11,0,2,5,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.MRJobStats(String,JobGraph)",1,1,n/a,3,0,2,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.TaskStat.TaskStat(int,long,long,long,long)",0,1,n/a,7,0,5,5,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.accept(PlanVisitor)",1,7,n/a,7,1,1,3,2
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.addCounters(Job)",36,1,n/a,46,2,1,25,5
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.addInputStatistics()",19,2,n/a,24,2,0,21,8
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.addMapReduceStatistics(Iterator<TaskReport>,Iterator<TaskReport>)",10,1,n/a,20,2,2,12,7
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.addMapReduceStatistics(Job)",5,1,n/a,15,1,1,9,3
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.addOneInputStats(String,int)",6,1,n/a,17,2,2,10,3
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.addOneOutputStats(POStore)",12,2,n/a,19,1,1,14,4
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.addOutputStatistics()",20,2,n/a,31,3,0,21,12
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.appendStat(long,StringBuilder)",3,8,n/a,8,1,2,4,2
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getAlias()",1,5,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getAliasLocation()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getAvgMapTime()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getAvgREduceTime()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getDisplayString()",39,2,n/a,32,2,0,21,6
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getFeature()",1,7,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getHadoopCounters()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getJobId()",1,9,n/a,4,0,0,1,2
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getMapInputRecords()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getMapOutputRecords()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getMaxMapTime()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getMaxReduceTime()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getMinMapTime()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getMinReduceTime()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getMultiInputCounters()",1,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getMultiStoreCounters()",1,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getNumberMaps()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getNumberReduces()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getProactiveSpillCountObjects()",0,2,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getProactiveSpillCountRecs()",0,2,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getReduceInputRecords()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getReduceOutputRecords()",0,1,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getSMMSpillCount()",0,2,n/a,2,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.getTaskStat(Iterator<TaskReport>)",8,2,n/a,20,1,1,17,4
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.setAlias(MapReduceOper)",7,2,n/a,6,0,1,4,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.setConf(Configuration)",9,4,n/a,16,1,1,7,2
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.setId(JobID)",0,2,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.setMapStat(int,long,long,long,long)",0,2,n/a,7,0,5,5,1
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.setReduceStat(int,long,long,long,long)",0,2,n/a,7,0,5,5,1
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.accumulateStats(JobControl)",10,2,n/a,22,2,1,11,5
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.addFailedJobStats(SimplePigStats,Job)",6,1,n/a,12,1,2,9,3
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.addJobStats(Job)",2,1,n/a,10,0,1,2,1
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.addNativeJobStats(PigStats,NativeMapReduceOper,boolean)",1,2,n/a,4,0,3,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.addNativeJobStats(PigStats,NativeMapReduceOper,boolean,Exception)",6,2,n/a,15,1,4,9,4
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.addSuccessJobStats(SimplePigStats,Job)",8,1,n/a,14,1,2,11,3
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.displayStatistics()",2,0,n/a,6,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.getMultiStoreCount(Job,JobClient,String)",7,0,n/a,24,2,3,8,3
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.setBackendException(Job,Exception)",4,1,n/a,8,1,2,4,2
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.startCollection(PigContext,JobClient,JobControlCompiler,MROperPlan)",7,1,n/a,15,0,4,4,1
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.stopCollection(boolean)",11,1,n/a,20,2,1,10,4
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil.updateJobMroMap(Map<Job, MapReduceOper>)",5,1,n/a,15,1,1,4,2
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.MRScriptState(String)",1,2,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.addSettingsToConf(MapReduceOper,Configuration)",54,1,n/a,47,3,2,34,11
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.addWorkflowAdjacenciesToConf(MROperPlan,Configuration)",11,1,n/a,12,3,2,7,4
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.get()",1,16,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.getAlias(MapReduceOper)",3,3,n/a,6,1,1,3,2
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.getAliasLocation(MapReduceOper)",3,3,n/a,6,1,1,3,2
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.getPigFeature(MapReduceOper)",51,2,n/a,60,4,1,42,17
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.setAlias(MapReduceOper)",19,2,n/a,24,2,1,18,4
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.setJobParents(MapReduceOper,Configuration)",18,1,n/a,27,3,2,18,7
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState.setPigFeature(MapReduceOper,Configuration)",12,1,n/a,9,1,2,5,2
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.JobGraphBuilder.JobGraphBuilder(MROperPlan)",4,1,n/a,6,0,1,3,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.JobGraphBuilder.visitMROp(MapReduceOper)",10,2,n/a,16,3,1,9,4
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.SimplePigStats()",2,2,n/a,4,0,0,2,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.addMRJobStats(Job)",9,3,n/a,13,1,1,10,2
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.addMRJobStatsForNative(NativeMapReduceOper)",6,1,n/a,6,0,1,4,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.display()",73,2,n/a,67,2,0,46,13
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.finish()",1,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.getAllErrorMessages()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.getAllStats()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.getJobClient()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.getJobControlCompiler()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.getProactiveSpillCountObjects()",4,1,n/a,9,1,0,5,2
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.getProactiveSpillCountRecords()",4,1,n/a,9,1,0,5,2
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.getSMMSpillCount()",4,1,n/a,9,1,0,5,2
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.initialize(PigContext,JobClient,JobControlCompiler,MROperPlan)",5,1,n/a,17,1,4,10,5
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.isEmbedded()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.isInitialized()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.isJobSeen(Job)",1,2,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.mapMROperToJob(MapReduceOper,Job)",5,1,n/a,12,2,2,6,3
"org.apache.pig.tools.pigstats.tez.PigTezProgressNotificationListener.dagCompletedNotification(String,String,boolean,TezDAGStats)",n/a,1,0,n/a,n/a,4,n/a,n/a
"org.apache.pig.tools.pigstats.tez.PigTezProgressNotificationListener.dagLaunchNotification(String,String,OperatorPlan<?>,int)",n/a,1,0,n/a,n/a,4,n/a,n/a
"org.apache.pig.tools.pigstats.tez.PigTezProgressNotificationListener.dagProgressNotification(String,String,int,int)",n/a,1,0,n/a,n/a,4,n/a,n/a
"org.apache.pig.tools.pigstats.tez.PigTezProgressNotificationListener.dagStartedNotification(String,String,String)",n/a,1,0,n/a,n/a,3,n/a,n/a
"org.apache.pig.tools.pigstats.tez.TezDAGStats.JobGraphBuilder.JobGraphBuilder(TezOperPlan,TezDAGScriptInfo)",5,1,n/a,7,0,2,5,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.JobGraphBuilder.getJobPlan()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.JobGraphBuilder.getTezVertexStatsMap()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.JobGraphBuilder.visit()",3,115,n/a,11,2,0,5,3
"org.apache.pig.tools.pigstats.tez.TezDAGStats.JobGraphBuilder.visitTezOp(TezOperator)",21,2,n/a,25,3,1,14,5
"org.apache.pig.tools.pigstats.tez.TezDAGStats.TezDAGStats(String,JobGraph,Map<String, TezVertexStats>)",1,1,n/a,4,0,3,2,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.accept(PlanVisitor)",1,7,n/a,7,1,1,3,2
"org.apache.pig.tools.pigstats.tez.TezDAGStats.accumulateStats(TezJob)",81,1,n/a,86,6,1,53,18
"org.apache.pig.tools.pigstats.tez.TezDAGStats.covertToHadoopCounters(TezCounters)",8,1,n/a,10,2,1,6,3
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getAvgMapTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getAvgREduceTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getDisplayString()",15,3,n/a,18,0,0,9,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getHadoopCounters()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getJobId()",0,9,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getMapInputRecords()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getMapOutputRecords()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getMaxMapTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getMaxReduceTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getMinMapTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getMinReduceTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getMultiInputCounters()",1,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getMultiStoreCounters()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getNumberMaps()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getNumberReduces()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getProactiveSpillCountObjects()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getProactiveSpillCountRecs()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getReduceInputRecords()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getReduceOutputRecords()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getSMMSpillCount()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.getVertexStats(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.setAlias(TezDAGScriptInfo)",6,1,n/a,5,0,1,3,1
"org.apache.pig.tools.pigstats.tez.TezDAGStats.setJobId(String)",0,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.DAGGraphBuilder.DAGGraphBuilder(TezPlanContainer)",2,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.DAGGraphBuilder.visitTezPlanContainerNode(TezPlanContainerNode)",22,1,n/a,20,3,1,14,4
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.TezPigScriptStats(PigContext)",3,2,n/a,6,0,1,4,1
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.accumulateStats(TezJob)",26,1,n/a,38,3,1,24,10
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.addTezJobStatsForNative(String,NativeTezOper,boolean)",4,3,n/a,6,0,3,4,1
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.display()",58,1,n/a,50,4,0,39,13
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.finish()",2,1,n/a,4,0,0,2,1
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.getAllErrorMessages()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.getAllStats()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.getJobClient()",1,0,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.getProactiveSpillCountObjects()",2,0,n/a,8,1,0,4,2
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.getProactiveSpillCountRecords()",2,0,n/a,8,1,0,4,2
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.getSMMSpillCount()",2,0,n/a,8,1,0,4,2
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.getVertexStats(String,String)",2,2,n/a,4,0,2,2,2
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.initialize(TezPlanContainer)",4,1,n/a,8,1,1,4,2
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.isEmbedded()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.DAGAliasVisitor.DAGAliasVisitor(TezOperPlan)",5,1,n/a,6,0,1,4,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.DAGAliasVisitor.visit()",17,115,n/a,18,1,0,16,4
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.DAGAliasVisitor.visitTezOp(TezOperator)",68,2,n/a,71,2,1,54,20
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.TezDAGScriptInfo(TezOperPlan)",1,1,n/a,4,0,1,2,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.getAlias()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.getAlias(TezOperator)",2,2,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.getAliasLocation()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.getAliasLocation(TezOperator)",2,3,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.getPigFeatures()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.getPigFeatures(TezOperator)",2,3,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.initialize()",3,1,n/a,7,1,0,3,2
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezScriptState(String)",1,1,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.addDAGSettingsToConf(Configuration)",15,1,n/a,8,0,1,6,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.addVertexSettingsToConf(String,TezOperator,Configuration)",29,1,n/a,29,3,3,20,8
"org.apache.pig.tools.pigstats.tez.TezScriptState.addWorkflowAdjacenciesToConf(TezOperPlan,Configuration)",11,0,n/a,12,3,2,7,4
"org.apache.pig.tools.pigstats.tez.TezScriptState.dagCompletedNotification(String,TezDAGStats)",2,1,n/a,5,1,2,2,2
"org.apache.pig.tools.pigstats.tez.TezScriptState.dagLaunchNotification(String,OperatorPlan<?>,int)",1,1,n/a,5,1,3,2,2
"org.apache.pig.tools.pigstats.tez.TezScriptState.dagProgressNotification(String,int,int)",1,1,n/a,5,1,3,2,2
"org.apache.pig.tools.pigstats.tez.TezScriptState.dagStartedNotification(String,String)",1,1,n/a,5,1,2,2,2
"org.apache.pig.tools.pigstats.tez.TezScriptState.get()",1,6,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.getDAGScriptInfo(String)",1,2,n/a,3,0,1,1,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.registerListener(PigProgressNotificationListener)",2,4,n/a,7,1,1,3,2
"org.apache.pig.tools.pigstats.tez.TezScriptState.setDAGScriptInfo(TezPlanContainerNode)",5,1,n/a,5,0,1,3,1
"org.apache.pig.tools.pigstats.tez.TezScriptState.setJobParents(String,TezOperator,Configuration)",15,1,n/a,21,3,3,13,6
"org.apache.pig.tools.pigstats.tez.TezScriptState.setPigFeature(String,TezOperator,Configuration)",14,1,n/a,13,1,3,8,3
"org.apache.pig.tools.pigstats.tez.TezVertexStats.TezVertexStats(String,JobGraph,boolean)",1,1,n/a,4,0,3,2,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.accept(PlanVisitor)",1,7,n/a,7,1,1,3,2
"org.apache.pig.tools.pigstats.tez.TezVertexStats.accumulateStats(VertexStatus,int)",36,1,n/a,48,3,2,33,13
"org.apache.pig.tools.pigstats.tez.TezVertexStats.addInputStatistics()",14,1,n/a,30,4,0,18,9
"org.apache.pig.tools.pigstats.tez.TezVertexStats.addOutputStatistics()",28,1,n/a,49,4,0,31,16
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getAvgMapTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getAvgREduceTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getCounters()",0,1,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getDisplayString()",16,2,n/a,12,1,0,7,5
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getHadoopCounters()",1,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getJobId()",0,9,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getMapInputRecords()",0,1,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getMapOutputRecords()",0,1,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getMaxMapTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getMaxReduceTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getMinMapTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getMinReduceTime()",0,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getMultiInputCounters()",1,0,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getMultiStoreCounters()",0,2,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getNumberMaps()",0,1,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getNumberReduces()",0,1,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getParallelism()",0,0,n/a,3,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getProactiveSpillCountObjects()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getProactiveSpillCountRecs()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getReduceInputRecords()",0,1,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getReduceOutputRecords()",0,1,n/a,5,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.getSMMSpillCount()",0,1,n/a,4,0,0,1,1
"org.apache.pig.tools.pigstats.tez.TezVertexStats.hasLoadOrStore()",2,0,n/a,7,1,0,3,5
"org.apache.pig.tools.pigstats.tez.TezVertexStats.setConf(Configuration)",6,4,n/a,15,1,1,5,2
"org.apache.pig.tools.streams.StreamGenerator.StreamGenerator()",13,0,n/a,17,0,0,9,1
"org.apache.pig.tools.streams.StreamGenerator.actionPerformed(ActionEvent)",17,0,n/a,35,3,1,29,8
"org.apache.pig.tools.streams.StreamGenerator.addWidgets()",19,1,n/a,25,0,0,17,1
"org.apache.pig.tools.streams.StreamGenerator.createAndShowGUI()",1,1,n/a,9,0,0,1,1
"org.apache.pig.tools.streams.StreamGenerator.main(String[])",3,0,n/a,3,2,1,2,1
"org.apache.pig.tools.timer.PerformanceTimer.PerformanceTimer(String)",0,1,n/a,10,0,1,4,1
"org.apache.pig.tools.timer.PerformanceTimer.print(PrintStream)",9,0,n/a,23,1,1,15,3
"org.apache.pig.tools.timer.PerformanceTimer.start()",1,0,n/a,9,0,0,3,1
"org.apache.pig.tools.timer.PerformanceTimer.stop()",1,0,n/a,8,0,0,2,1
"org.apache.pig.tools.timer.PerformanceTimerFactory.PerformanceTimerFactory()",1,1,n/a,4,0,0,1,1
"org.apache.pig.tools.timer.PerformanceTimerFactory.dumpTimers()",1,1,n/a,4,0,0,1,1
"org.apache.pig.tools.timer.PerformanceTimerFactory.dumpTimers(PrintStream)",5,1,n/a,12,1,1,4,2
"org.apache.pig.tools.timer.PerformanceTimerFactory.getPerfTimerFactory()",1,1,n/a,11,1,0,3,2
"org.apache.pig.tools.timer.PerformanceTimerFactory.getTimer(String)",3,0,n/a,15,1,1,5,2
"org.apache.pig.validator.BlackAndWhitelistFilter.BlackAndWhitelistFilter(PigContext)",3,6,n/a,6,0,1,4,1
"org.apache.pig.validator.BlackAndWhitelistFilter.BlackAndWhitelistFilter(PigServer)",2,2,n/a,3,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistFilter.init()",12,1,n/a,20,3,0,13,6
"org.apache.pig.validator.BlackAndWhitelistFilter.validate(Command)",9,36,n/a,10,1,1,4,4
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistValidator(PigContext,OperatorPlan)",0,1,n/a,4,0,2,2,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.BlackAndWhitelistVisitor(OperatorPlan)",8,1,n/a,7,0,1,5,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.check(String)",6,17,n/a,10,1,1,4,7
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.init()",12,1,n/a,22,3,0,13,6
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOCogroup)",2,1,n/a,4,0,1,2,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOCross)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOCube)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LODistinct)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOFilter)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOForEach)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOGenerate)",0,1,n/a,3,0,1,0,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOInnerLoad)",0,1,n/a,2,0,1,0,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOJoin)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOLimit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOLoad)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LONative)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LORank)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOSort)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOSplit)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOSplitOutput)",0,1,n/a,3,0,1,0,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOStore)",1,2,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOStream)",1,1,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor.visit(LOUnion)",1,2,n/a,4,0,1,1,1
"org.apache.pig.validator.BlackAndWhitelistValidator.validate()",2,1,n/a,4,0,0,2,1
"org.apache.pig.validator.PigCommandFilter.validate(Command)",n/a,24,1,n/a,n/a,1,n/a,n/a

Class,CBO,CSA,CSO,CSOA,Dcy*,DIT,Inner,LCOM,LOC,NCLOC,NOC,NOIC,NOOC,OCavg,Query,RFC,WMC
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantBooleanObjectInspector",1,1,2,3,0,0,0,1,19,15,0,0,0,"1,50",1,2,3
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantDoubleObjectInspector",1,1,2,3,0,0,0,1,19,15,0,0,0,"1,50",1,2,3
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantFloatObjectInspector",1,1,2,3,0,0,0,1,19,15,0,0,0,"1,50",1,2,3
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantIntObjectInspector",1,1,2,3,0,0,0,1,19,15,0,0,0,"1,50",1,2,3
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantLongObjectInspector",1,1,2,3,0,0,0,1,19,15,0,0,0,"1,50",1,2,3
"org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaConstantStringObjectInspector",1,1,2,3,0,0,0,1,15,15,0,0,0,"1,50",1,2,3
"org.apache.pig.Accumulator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.pig.AccumulatorEvalFunc",8,5,32,37,849,1,1,1,22,15,5,22,0,"1,00",2,4,1
"org.apache.pig.Algebraic",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.pig.AlgebraicEvalFunc",12,21,43,64,851,2,2,1,155,98,2,23,0,"2,20",5,20,11
"org.apache.pig.CollectableLoadFunc",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.ComparisonFunc",8,1,4,5,848,0,0,2,50,16,0,0,0,"1,00",2,5,3
"org.apache.pig.EvalFunc",211,6,25,31,848,0,0,16,283,133,183,0,0,"1,54",16,35,37
"org.apache.pig.EvalFunc.SchemaType",5,2,0,2,0,n/a,0,0,8,4,n/a,0,0,n/a,0,0,0
"org.apache.pig.ExceptionalFunction",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.ExecType",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,5,n/a
"org.apache.pig.ExecTypeProvider",7,1,3,4,848,0,0,1,45,33,0,0,0,"2,33",3,5,7
"org.apache.pig.Expression",24,1,1,2,1,0,0,1,15,8,6,0,0,"1,00",1,1,1
"org.apache.pig.Expression.BetweenExpression",3,3,5,8,2,1,0,2,21,19,0,1,0,"1,00",3,4,4
"org.apache.pig.Expression.BinaryExpression",6,3,5,8,2,1,0,2,36,20,0,1,0,"1,00",3,5,4
"org.apache.pig.Expression.Column",6,2,5,7,2,1,0,1,29,17,0,1,0,"1,00",2,4,4
"org.apache.pig.Expression.Const",4,2,4,6,2,1,0,1,24,15,0,1,0,"1,33",2,3,4
"org.apache.pig.Expression.InExpression",3,2,4,6,2,1,0,1,25,25,0,1,0,"1,67",2,3,5
"org.apache.pig.Expression.OpType",11,21,3,24,0,n/a,0,0,38,32,n/a,0,0,"1,00",1,3,3
"org.apache.pig.Expression.UnaryExpression",4,2,4,6,2,1,0,1,16,14,0,1,0,"1,00",2,4,3
"org.apache.pig.FileInputLoadFunc",10,0,12,12,848,1,1,1,24,18,5,6,0,"2,00",1,2,2
"org.apache.pig.FileSplitComparable",2,3,8,11,848,0,0,1,76,63,0,0,0,"2,50",4,10,20
"org.apache.pig.FilterFunc",4,5,26,31,848,1,0,1,9,5,3,21,1,"1,00",0,1,1
"org.apache.pig.FuncSpec",104,4,18,22,848,0,0,6,209,144,0,0,0,"2,28",10,20,41
"org.apache.pig.Function",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.IndexableLoadFunc",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.pig.IteratingAccumulatorEvalFunc",6,18,39,57,851,2,2,2,99,80,0,23,0,"2,17",3,8,13
"org.apache.pig.IteratingAccumulatorEvalFunc.DelayedQueueIterator",2,1,3,4,851,0,0,2,31,31,0,0,0,"2,67",2,3,8
"org.apache.pig.JVMReuseImpl",2,1,2,3,2,0,0,1,41,41,0,0,0,"4,50",1,4,9
"org.apache.pig.JVMReuseManager",10,3,4,7,2,0,0,1,62,31,0,0,0,"1,75",2,4,7
"org.apache.pig.LoadCaster",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,12,n/a
"org.apache.pig.LoadFunc",59,0,13,13,848,0,0,10,260,116,13,0,0,"2,89",9,17,26
"org.apache.pig.LoadFuncMetadataWrapper",7,2,32,34,850,2,1,1,44,34,1,16,0,"1,14",4,14,8
"org.apache.pig.LoadFuncWrapper",7,1,21,22,849,1,0,1,71,53,1,3,3,"1,18",6,19,13
"org.apache.pig.LoadMetadata",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.apache.pig.LoadPredicatePushdown",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.pig.LoadPushDown",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.LoadPushDown.OperatorSet",6,1,0,1,0,n/a,0,0,4,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.LoadPushDown.RequiredField",6,5,11,16,0,0,0,4,81,52,0,0,0,"1,18",5,11,13
"org.apache.pig.LoadPushDown.RequiredFieldList",9,2,5,7,1,0,0,1,51,34,0,0,0,"1,60",2,5,8
"org.apache.pig.LoadPushDown.RequiredFieldResponse",7,1,3,4,0,0,0,1,30,14,0,0,0,"1,00",1,3,3
"org.apache.pig.LoadStoreCaster",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.Main",31,13,22,35,859,0,0,4,874,794,0,0,0,"5,43",17,80,125
"org.apache.pig.Main.ExecMode",1,4,0,4,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.OrderedLoadFunc",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.OverwritableStoreFunc",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.PigConfiguration",44,75,1,76,0,0,0,0,314,91,0,0,0,"1,00",0,1,1
"org.apache.pig.PigConstants",12,8,1,9,0,0,0,0,33,14,0,0,0,"1,00",0,1,1
"org.apache.pig.PigCounters",8,3,0,3,0,n/a,0,0,11,5,n/a,0,0,n/a,0,0,0
"org.apache.pig.PigException",206,12,37,49,3,0,0,7,412,159,2,0,0,"1,24",12,37,46
"org.apache.pig.PigRunner",4,0,1,1,860,0,0,1,10,7,0,0,0,"1,00",1,3,1
"org.apache.pig.PigRunner.ReturnCode",6,10,0,10,0,0,0,0,13,12,0,0,0,n/a,0,0,0
"org.apache.pig.PigServer",54,13,77,90,848,0,0,4,1.201,704,1,0,0,"1,88",35,174,145
"org.apache.pig.PigServer.Graph",22,9,23,32,848,0,0,2,387,308,0,0,0,"2,96",11,57,74
"org.apache.pig.PigStreamingBase",11,0,8,8,848,0,2,2,63,25,2,0,0,"1,50",5,7,3
"org.apache.pig.PigToStream",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.PigWarning",44,47,0,47,0,n/a,0,0,54,50,n/a,0,0,n/a,0,0,0
"org.apache.pig.PrimitiveEvalFunc",3,7,34,41,850,2,0,2,33,26,1,25,0,"1,25",3,10,5
"org.apache.pig.ResourceSchema",49,6,17,23,848,0,0,2,262,173,0,0,0,"2,88",11,26,49
"org.apache.pig.ResourceSchema.Order",1,2,0,2,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.ResourceSchema.ResourceFieldSchema",35,5,16,21,848,0,0,2,150,98,0,0,0,"1,44",11,24,23
"org.apache.pig.ResourceStatistics",19,5,14,19,2,0,0,2,121,78,0,0,0,"1,57",12,15,22
"org.apache.pig.ResourceStatistics.ResourceFieldStatistics",2,6,13,19,1,0,0,3,122,84,0,0,0,"1,54",13,13,20
"org.apache.pig.SortColInfo",6,4,7,11,848,0,0,3,77,46,0,0,0,"1,57",6,9,11
"org.apache.pig.SortColInfo.Order",4,2,0,2,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.SortInfo",8,3,6,9,848,0,0,2,65,39,0,0,0,"1,50",5,8,9
"org.apache.pig.StaticDataCleanup",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.StoreCaster",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,13,n/a
"org.apache.pig.StoreFunc",13,0,20,20,848,0,1,10,160,39,1,0,0,"1,14",2,14,8
"org.apache.pig.StoreFuncInterface",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,9,n/a
"org.apache.pig.StoreFuncMetadataWrapper",6,2,29,31,850,1,2,1,39,28,1,11,0,"1,20",1,10,6
"org.apache.pig.StoreFuncWrapper",6,1,22,23,849,0,1,1,80,61,1,0,0,"1,15",4,23,15
"org.apache.pig.StoreMetadata",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.StoreResources",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.StreamToPig",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.TerminatingAccumulator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.TypedOutputEvalFunc",6,6,33,39,849,1,0,2,124,84,1,22,0,"2,62",4,11,21
"org.apache.pig.backend.BackendException",8,7,44,51,4,1,0,0,125,43,2,13,0,"1,00",0,24,12
"org.apache.pig.backend.datastorage.ContainerDescriptor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.backend.datastorage.DataStorage",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,19,n/a
"org.apache.pig.backend.datastorage.DataStorageException",8,7,56,63,5,2,0,0,124,43,0,13,0,"1,00",0,24,12
"org.apache.pig.backend.datastorage.ElementDescriptor",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,16,n/a
"org.apache.pig.backend.datastorage.ImmutableOutputStream",1,1,2,3,0,0,0,1,10,10,0,0,0,"1,00",0,2,2
"org.apache.pig.backend.datastorage.SeekableInputStream",7,0,2,2,1,0,0,2,24,4,1,0,0,n/a,1,2,0
"org.apache.pig.backend.datastorage.SeekableInputStream.FLAGS",3,3,0,3,0,n/a,0,0,5,5,n/a,0,0,n/a,0,0,0
"org.apache.pig.backend.executionengine.ExecException",318,7,56,63,5,2,0,0,124,43,2,13,0,"1,00",0,24,12
"org.apache.pig.backend.executionengine.ExecJob",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,13,n/a
"org.apache.pig.backend.executionengine.ExecJob.JOB_STATUS",3,2,0,2,0,n/a,0,0,4,4,n/a,0,0,n/a,0,0,0
"org.apache.pig.backend.executionengine.ExecutionEngine",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,12,n/a
"org.apache.pig.backend.hadoop.BigDecimalWritable",4,2,10,12,848,0,0,1,47,46,0,0,0,"1,10",5,13,11
"org.apache.pig.backend.hadoop.BigDecimalWritable.Comparator",2,2,2,4,848,0,0,1,20,18,0,0,0,"1,00",1,5,2
"org.apache.pig.backend.hadoop.BigIntegerWritable",4,2,10,12,848,0,0,1,47,46,0,0,0,"1,10",5,13,11
"org.apache.pig.backend.hadoop.BigIntegerWritable.Comparator",2,2,2,4,848,0,0,1,20,18,0,0,0,"1,00",1,5,2
"org.apache.pig.backend.hadoop.DateTimeWritable",2,2,10,12,1,0,0,1,52,45,0,0,0,"1,10",5,11,11
"org.apache.pig.backend.hadoop.DateTimeWritable.Comparator",2,0,2,2,1,0,0,1,14,11,0,0,0,"1,00",1,2,2
"org.apache.pig.backend.hadoop.DoubleWritable",2,1,10,11,1,0,0,1,42,36,0,0,0,"1,30",5,11,13
"org.apache.pig.backend.hadoop.DoubleWritable.Comparator",2,0,2,2,1,0,0,1,12,11,0,0,0,"2,00",1,2,4
"org.apache.pig.backend.hadoop.HDataType",31,14,6,20,848,0,0,1,276,271,0,0,0,"13,50",6,34,81
"org.apache.pig.backend.hadoop.accumulo.AbstractAccumuloStorage",24,31,61,92,854,1,1,8,585,485,1,3,3,"2,70",22,75,108
"org.apache.pig.backend.hadoop.accumulo.AccumuloBinaryConverter",8,2,50,52,850,0,3,20,189,157,0,0,0,"1,24",25,28,31
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorage",10,29,68,97,855,2,1,2,275,210,0,42,1,"5,71",2,20,40
"org.apache.pig.backend.hadoop.accumulo.AccumuloStorageOptions",1,11,7,18,0,0,0,4,70,70,0,0,0,"1,29",6,7,9
"org.apache.pig.backend.hadoop.accumulo.Column",3,3,7,10,854,0,0,2,86,78,0,0,0,"2,86",6,7,20
"org.apache.pig.backend.hadoop.accumulo.Column.Type",3,3,0,3,0,n/a,0,0,3,3,n/a,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.accumulo.FixedByteArrayOutputStream",1,2,3,5,0,0,0,1,20,16,0,0,0,"1,00",0,3,3
"org.apache.pig.backend.hadoop.accumulo.Utils",1,1,10,11,0,0,0,1,314,234,0,0,0,"4,30",4,10,43
"org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil",43,0,6,6,848,0,0,4,68,59,0,0,0,"2,17",4,6,13
"org.apache.pig.backend.hadoop.datastorage.HConfiguration",1,1,3,4,0,0,0,1,28,24,0,0,0,"2,00",1,3,6
"org.apache.pig.backend.hadoop.datastorage.HDataStorage",16,5,41,46,848,0,1,10,160,157,0,0,0,"1,45",16,27,32
"org.apache.pig.backend.hadoop.datastorage.HDirectory",10,2,56,58,848,1,2,1,120,103,0,18,0,"1,69",6,29,22
"org.apache.pig.backend.hadoop.datastorage.HFile",5,2,54,56,848,1,1,1,37,37,0,18,0,"1,00",5,19,11
"org.apache.pig.backend.hadoop.datastorage.HPath",11,2,43,45,848,0,1,4,131,130,2,0,0,"1,17",15,30,28
"org.apache.pig.backend.hadoop.datastorage.HSeekableInputStream",5,2,14,16,8,1,0,1,73,73,0,0,0,"1,33",7,13,16
"org.apache.pig.backend.hadoop.executionengine.HExecutionEngine",38,15,31,46,848,0,1,2,279,244,2,0,0,"2,26",11,49,43
"org.apache.pig.backend.hadoop.executionengine.HJob",13,8,29,37,848,0,1,12,130,126,0,0,0,"1,26",8,23,24
"org.apache.pig.backend.hadoop.executionengine.JobCreationException",7,7,64,71,10,2,0,0,124,43,0,13,0,"1,00",0,24,12
"org.apache.pig.backend.hadoop.executionengine.Launcher",18,10,16,26,848,0,0,10,514,324,2,0,0,"3,92",8,29,47
"org.apache.pig.backend.hadoop.executionengine.Launcher.HangingJobKiller",1,0,2,2,848,0,0,1,11,11,0,0,0,"1,00",0,3,2
"org.apache.pig.backend.hadoop.executionengine.Launcher.JobControlThreadExceptionHandler",3,0,1,1,848,0,0,1,12,6,0,0,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.MapRedResult",1,2,1,3,849,0,0,0,9,9,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.TaskContext",4,0,8,8,0,0,0,8,14,14,3,0,0,"1,00",6,8,3
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchContext",2,1,2,3,0,0,0,1,13,9,0,0,0,"1,00",2,2,2
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchLauncher",31,2,5,7,848,0,0,2,112,87,0,0,0,"2,60",1,35,13
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer",12,1,4,5,848,0,0,1,86,51,0,0,0,"3,25",3,13,13
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchOptimizer.FetchablePlanVisitor",35,5,86,91,848,2,0,2,140,128,0,35,23,"1,12",2,37,29
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchPOStoreImpl",7,4,7,11,848,1,0,1,69,64,0,0,2,"1,75",1,10,7
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchProgressableReporter",2,1,4,5,1,0,1,2,12,8,0,0,0,"1,00",0,2,2
"org.apache.pig.backend.hadoop.executionengine.fetch.FetchTaskContext",3,1,14,15,2,1,0,1,42,42,0,3,0,"1,67",5,8,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.AccumulatorOptimizer",7,3,9,12,848,2,0,1,12,8,0,4,1,"1,00",0,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnChainInfo",8,1,11,12,848,0,0,1,98,85,0,0,0,"1,82",7,19,20
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ColumnInfo",4,4,11,15,848,0,0,3,73,66,0,0,0,"1,27",9,12,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer",8,5,11,16,848,2,0,1,23,20,0,4,1,"1,00",1,8,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.DistinctCombiner",0,0,0,0,0,0,0,0,7,2,0,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.DistinctCombiner.Combine",4,2,2,4,848,0,0,1,26,18,0,0,0,"1,00",0,4,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.FileBasedOutputSizeReader",5,1,5,6,848,0,1,1,62,41,0,0,0,"3,33",3,7,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.IllustrateDummyReporter",0,1,5,6,0,0,0,4,27,21,0,0,0,"1,00",3,5,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.InputSizeReducerEstimator",15,1,5,6,848,0,1,1,132,74,0,0,0,"3,50",4,13,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler",113,18,31,49,848,0,0,1,1.302,1.053,0,0,0,"6,77",16,120,210
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.JoinDistributedCacheVisitor",17,5,64,69,848,2,0,1,94,84,0,55,3,"3,25",0,24,13
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.ParallelConstantVisitor",7,5,62,67,848,2,0,1,25,24,0,57,1,"2,50",0,9,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigBagWritableComparator",2,0,3,3,849,1,0,0,5,5,0,1,0,"1,00",0,4,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigBigDecimalWritableComparator",3,0,3,3,848,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigBigIntegerWritableComparator",3,0,3,3,848,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigBooleanWritableComparator",3,0,3,3,10,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigCharArrayWritableComparator",3,0,3,3,10,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigDBAWritableComparator",3,0,3,3,848,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigDateTimeWritableComparator",3,0,3,3,12,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigDoubleWritableComparator",3,0,3,3,12,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigFloatWritableComparator",3,0,3,3,10,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingBagWritableComparator",1,0,1,1,849,0,0,0,5,5,0,0,0,"1,00",0,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingBigDecimalWritableComparator",2,0,1,1,848,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingBigIntegerWritableComparator",2,0,1,1,848,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingBooleanWritableComparator",2,0,1,1,9,0,0,0,7,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingCharArrayWritableComparator",2,0,1,1,9,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingDBAWritableComparator",2,0,1,1,848,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingDateTimeWritableComparator",2,0,1,1,11,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingDoubleWritableComparator",2,0,1,1,11,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingFloatWritableComparator",2,0,1,1,9,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingIntWritableComparator",2,0,1,1,9,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingLongWritableComparator",2,0,1,1,9,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingPartitionWritableComparator",2,0,1,1,848,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigGroupingTupleWritableComparator",2,0,1,1,848,0,0,0,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigIntWritableComparator",3,0,3,3,10,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigLongWritableComparator",3,0,3,3,10,1,0,0,5,5,0,1,0,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigSecondaryKeyGroupComparator",7,0,2,2,848,0,0,1,51,44,0,0,0,"6,50",1,8,13
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigTupleWritableComparator",4,0,3,3,848,1,0,0,5,5,0,1,0,"1,00",0,4,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.PigWritableComparator",12,0,2,2,0,0,0,1,10,10,12,0,0,"1,00",1,2,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.KeyTypeDiscoveryVisitor",13,3,9,12,848,2,0,1,69,41,0,4,1,"4,50",0,9,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.KeyTypeDiscoveryVisitor.PhyPlanKeyTypeVisitor",8,5,62,67,848,2,0,1,14,14,0,57,1,"1,00",0,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LimitAdjuster",27,7,12,19,848,2,0,1,179,155,0,4,1,"5,20",0,52,26
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.LocalExecType",5,1,11,12,848,0,1,5,38,34,0,0,0,"1,33",6,7,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler",87,20,113,133,848,2,0,1,2.208,1.787,0,35,23,"4,57",20,245,242
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.FindKeyTypeVisitor",8,4,62,66,848,2,0,1,11,11,0,57,1,"1,00",0,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.FindStoreNameVisitor",8,5,62,67,848,2,0,1,17,17,0,57,1,"1,50",0,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.LastInputStreamingOptimizer",20,4,10,14,848,2,0,1,164,128,0,4,1,"9,00",0,24,27
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompilerException",4,7,80,87,11,3,0,0,124,43,0,13,0,"1,00",0,24,12
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRConfiguration",22,41,0,41,0,0,0,0,43,43,0,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecType",5,2,11,13,848,0,1,5,38,34,0,0,0,"1,33",6,7,8
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRExecutionEngine",10,5,34,39,848,1,1,2,16,16,0,17,0,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRTaskContext",6,1,16,17,1,1,0,1,54,54,0,1,2,"1,75",5,8,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRUtil",17,0,2,2,848,0,0,1,56,49,0,0,0,"1,00",1,22,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher",60,11,28,39,848,1,0,1,642,547,0,10,0,"6,62",5,106,86
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper",48,36,79,115,848,1,0,20,399,322,1,10,0,"1,36",38,83,87
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper.OPER_FEATURE",1,6,0,6,0,n/a,0,0,13,8,n/a,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReducePOStoreImpl",10,3,8,11,848,1,0,2,72,51,0,0,2,"1,40",1,13,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MergeJoinIndexer",21,10,16,26,848,1,0,1,147,121,0,5,1,"3,67",3,37,22
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer",31,7,41,48,848,2,0,1,978,811,0,3,2,"4,41",21,109,150
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NativeMapReduceOper",18,39,87,126,848,2,0,3,68,67,0,66,2,"1,50",5,19,12
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopFilterRemover",7,4,9,13,848,2,0,1,20,12,0,4,1,"1,00",0,6,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopFilterRemover.PhysicalRemover",13,4,64,68,848,2,0,1,48,48,0,56,2,"3,00",0,17,12
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover",15,7,10,17,848,2,0,1,79,37,0,4,1,"2,00",0,15,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.PhysicalRemover",14,3,65,68,848,2,0,3,67,49,0,54,4,"2,40",0,19,12
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.NoopStoreRemover.RemovableStore",4,3,0,3,848,0,0,0,5,5,0,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.POToChange",4,3,1,4,849,0,0,0,10,10,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PhyPlanSetter",60,4,112,116,848,2,0,1,243,231,0,7,51,"1,02",0,67,53
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigDecimalRawComparator",9,3,5,8,848,0,0,2,69,60,3,0,0,"2,80",3,11,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBigIntegerRawComparator",9,3,5,8,848,0,0,2,69,60,3,0,0,"2,80",3,11,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBooleanRawComparator",8,3,5,8,10,0,0,2,71,62,3,0,0,"3,20",3,9,16
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBytesRawComparator",11,3,5,8,848,0,0,2,135,106,3,0,0,"5,00",3,14,25
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner",0,0,0,0,0,0,0,0,2,2,0,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner.Combine",24,10,7,17,848,0,0,1,206,161,0,0,0,"3,86",2,38,27
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDateTimeRawComparator",9,3,5,8,12,0,0,2,77,68,3,0,0,"2,80",3,11,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigDoubleRawComparator",9,3,5,8,12,0,0,2,69,60,3,0,0,"2,80",3,11,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigFileInputFormat",5,0,1,1,848,0,0,1,11,7,5,0,0,"1,00",1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigFloatRawComparator",8,3,5,8,10,0,0,2,69,60,3,0,0,"2,80",3,9,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase",34,13,10,23,849,0,0,2,227,174,0,0,0,"4,43",3,48,31
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce",2,3,1,4,3,0,0,1,46,15,0,0,0,"1,00",0,3,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Map",5,0,1,1,849,0,0,1,17,13,1,0,0,"1,00",0,5,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.MapWithComparator",5,0,1,1,849,0,0,1,30,20,0,0,0,"2,00",0,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.MapWithPartitionIndex",12,0,3,3,850,1,0,1,77,61,0,0,1,"5,50",0,13,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.Reduce",34,12,9,21,850,0,0,2,257,193,0,0,0,"5,67",4,45,34
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce.ReduceWithComparator",15,1,2,3,849,0,0,1,86,60,0,0,0,"4,50",0,17,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigHadoopLogger",13,5,7,12,848,0,1,2,65,46,0,0,0,"1,83",2,8,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigInputFormat",21,4,9,13,848,0,0,1,261,184,0,0,0,"2,44",7,27,22
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigIntRawComparator",8,2,5,7,10,0,0,2,69,60,3,0,0,"3,20",3,9,16
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigLongRawComparator",8,3,5,8,10,0,0,2,69,60,3,0,0,"2,80",3,9,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapOnly",0,0,0,0,0,0,0,0,18,2,0,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapOnly.Map",3,0,1,1,7,0,0,1,7,7,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapReduceCounter",1,0,0,0,0,0,0,0,2,2,0,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapReduceCounter.PigMapCounter",6,4,2,6,848,0,0,1,48,39,0,0,0,"3,00",0,6,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapReduceCounter.PigReduceCounter",5,5,2,7,848,0,0,1,49,35,0,0,0,"3,00",0,6,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter",11,3,15,18,848,0,0,1,378,319,1,0,0,"4,33",5,26,65
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat",18,5,8,13,848,0,0,1,172,109,1,0,0,"2,50",4,20,20
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.Mode",2,2,0,2,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.PigRecordWriter",4,3,3,6,848,0,0,1,52,33,0,0,0,"2,00",0,5,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader",11,17,9,26,848,0,0,2,194,140,0,0,0,"2,78",6,25,25
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigReducerEstimator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator",6,2,4,6,848,0,0,2,54,47,0,0,0,"2,75",2,8,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSequenceFileInputFormat",2,1,1,2,849,0,0,1,35,31,0,0,0,"3,50",1,2,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit",31,12,25,37,5,0,0,1,384,269,0,0,0,"2,00",15,28,52
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigStatsOutputSizeReader",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextInputFormat",3,0,1,1,848,0,0,1,11,7,0,0,0,"1,00",1,2,1
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextOutputFormat",3,1,2,3,848,0,0,1,33,33,0,0,0,"2,00",1,3,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextOutputFormat.PigLineRecordWriter",3,3,2,5,848,0,0,1,29,29,0,0,0,"2,00",0,5,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTextRawComparator",8,3,5,8,10,0,0,2,68,59,3,0,0,"2,80",3,9,14
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleDefaultRawComparator",11,5,8,13,848,0,1,2,120,103,0,0,0,"3,00",5,17,21
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigTupleSortComparator",15,4,6,10,848,0,0,2,134,117,3,0,0,"4,17",4,17,25
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators",0,0,0,0,0,0,0,0,7,2,0,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawBytesComparator",2,2,7,9,849,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawBytesPartitionComparator",3,2,8,10,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigDecimalRawPartitionComparator",3,2,8,10,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawBytesComparator",2,2,7,9,849,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawBytesPartitionComparator",3,2,8,10,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBigIntegerRawPartitionComparator",3,2,8,10,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawBytesComparator",2,3,7,10,11,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawBytesPartitionComparator",3,3,8,11,849,1,0,2,16,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBooleanRawPartitionComparator",3,3,8,11,849,1,0,2,17,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawBytesComparator",2,3,7,10,849,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawBytesPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigBytesRawPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawBytesComparator",2,3,7,10,13,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawBytesPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDateTimeRawPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawBytesComparator",2,3,7,10,13,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawBytesPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigDoubleRawPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawBytesComparator",2,3,7,10,11,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawBytesPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigFloatRawPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawBytesComparator",2,2,7,9,11,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawBytesPartitionComparator",3,2,8,10,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigIntRawPartitionComparator",3,2,8,10,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawBytesComparator",2,3,7,10,11,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawBytesPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigLongRawPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawBytesComparator",2,3,7,10,11,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawBytesPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTextRawPartitionComparator",3,3,8,11,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortBytesComparator",2,4,8,12,849,1,0,1,9,9,0,3,1,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortBytesPartitionComparator",3,4,9,13,849,1,0,2,13,13,0,2,2,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigWritableComparators.PigTupleSortPartitionComparator",3,4,9,13,849,1,0,2,13,13,0,2,2,"1,00",2,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.ProgressableReporter",5,1,7,8,1,0,1,1,23,23,0,0,0,"1,20",0,5,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.RunJarSecurityManager",2,4,6,10,0,0,0,2,40,36,0,0,0,"1,50",2,6,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SampleOptimizer",19,6,11,17,848,2,0,1,181,151,0,3,2,"7,25",0,34,29
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer",34,7,15,22,851,2,0,2,372,333,0,4,1,"7,62",5,66,61
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizer.SecondaryKeyDiscover",14,6,9,15,851,0,0,1,155,129,0,0,0,"3,11",6,19,28
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SecondaryKeyOptimizerMR",10,5,15,20,848,2,1,1,39,33,0,4,1,"2,20",3,18,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.SortKeyInfo",5,2,5,7,848,0,0,1,47,43,0,0,0,"2,20",4,6,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.UDFEndOfAllInputNeededVisitor",7,4,63,67,848,2,0,1,16,16,0,57,1,"1,33",1,7,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.UDFFinishVisitor",10,3,62,65,848,2,0,1,10,10,0,57,1,"1,00",0,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.CountingMap",2,2,3,5,0,0,0,2,32,26,0,0,0,"1,67",2,3,5
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.DiscreteProbabilitySampleGenerator",4,4,4,8,2,0,0,1,49,41,0,0,0,"2,50",2,6,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.SecondaryKeyPartitioner",6,1,3,4,848,0,0,2,24,24,0,0,0,"1,00",2,6,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.SkewedPartitioner",11,6,4,10,848,0,0,1,85,71,1,0,0,"3,25",2,11,13
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners.WeightedRangePartitioner",28,6,8,14,848,0,0,1,173,151,1,0,0,"4,25",5,23,34
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter",9,9,47,56,848,2,0,3,61,55,0,22,5,"1,43",4,13,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerOperator",7,5,22,27,848,1,0,5,22,18,0,9,1,"1,00",5,9,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerPlan",6,9,47,56,848,1,0,0,33,26,0,33,0,"3,00",0,5,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.DotMRPrinter.InnerPrinter",9,7,44,51,848,2,0,3,37,33,0,23,3,"1,00",3,9,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter",8,3,9,12,848,2,0,1,28,18,0,4,1,"2,00",0,9,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.EndOfAllInputSetter.EndOfAllInputChecker",15,4,70,74,848,2,0,1,54,48,0,50,8,"1,10",1,13,11
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRIntermediateDataVisitor",9,4,10,14,848,2,0,2,34,25,0,4,1,"2,00",1,8,6
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRIntermediateDataVisitor.StoreFinder",7,3,62,65,848,2,0,1,12,12,0,57,1,"1,50",0,7,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MROpPlanVisitor",23,3,7,10,848,1,0,1,12,7,17,4,0,"1,00",0,3,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MROperPlan",30,9,48,57,848,1,0,0,30,18,0,33,0,"1,00",1,5,2
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MRPrinter",13,5,10,15,848,2,0,1,60,53,0,4,1,"3,00",0,15,9
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator",15,3,11,14,848,2,0,1,83,59,0,4,1,"3,75",1,17,15
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.LoRearrangeDiscoverer",13,5,63,68,848,2,0,1,52,37,0,57,1,"2,33",1,17,7
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator.PackageDiscoverer",7,4,63,67,848,2,0,1,21,13,0,57,1,"1,00",1,5,3
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.ScalarPhyFinder",8,4,63,67,848,2,0,1,15,15,0,57,1,"1,33",1,6,4
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.UDFFinder",14,5,68,73,848,2,0,1,55,39,0,54,4,"1,25",1,16,10
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.XMLMRPrinter",12,6,10,16,848,2,0,1,65,57,0,4,1,"2,33",0,10,7
"org.apache.pig.backend.hadoop.executionengine.optimizer.SecondaryKeyOptimizer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.LogicalToPhysicalTranslatorException",4,7,80,87,11,3,0,0,124,43,0,13,0,"1,00",0,24,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.POPrinter",4,3,61,64,849,2,0,0,78,5,0,58,0,"1,00",0,3,1
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.POStatus",83,7,0,7,0,0,0,0,47,9,0,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator",192,21,71,92,848,1,1,11,381,279,32,9,1,"1,45",30,73,77
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.OriginalLocation",2,3,5,8,0,0,0,3,24,24,0,0,0,"1,00",4,5,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.Result",88,3,3,6,1,0,0,0,26,17,0,0,0,"1,33",1,3,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add",15,19,100,119,848,4,1,3,95,88,0,59,7,"1,77",10,25,23
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryComparisonOperator",16,20,106,126,848,4,2,2,37,27,9,67,1,"1,17",2,9,7
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.BinaryExpressionOperator",23,19,87,106,848,3,1,3,57,45,6,60,0,"1,10",5,12,11
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ComparisonOperator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,13,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ConstantExpression",29,18,102,120,848,3,1,6,130,116,0,42,15,"1,08",21,37,27
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide",17,19,101,120,848,4,1,3,124,113,0,59,7,"2,36",11,27,33
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.EqualToExpr",18,21,113,134,848,5,2,3,100,95,0,68,2,"2,57",4,21,18
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator",47,17,77,94,848,2,1,5,97,75,9,48,4,"2,11",7,17,19
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GTOrEqualToExpr",18,21,113,134,848,5,2,3,83,78,0,68,2,"2,14",4,19,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.GreaterThanExpr",18,20,113,133,848,5,2,3,82,77,0,68,2,"2,14",4,19,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LTOrEqualToExpr",18,21,113,134,848,5,2,3,83,78,0,68,2,"2,14",4,19,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.LessThanExpr",18,21,113,134,848,5,2,3,83,78,0,68,2,"2,14",4,19,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod",15,19,97,116,848,4,1,3,73,70,0,62,4,"1,70",7,22,17
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply",15,19,100,119,848,4,1,3,91,88,0,59,7,"1,77",10,25,23
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.NotEqualToExpr",18,21,113,134,848,5,2,3,96,91,0,68,2,"2,57",4,20,18
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POAnd",18,20,112,132,848,5,2,3,77,58,0,68,2,"2,50",3,17,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POBinCond",19,20,107,127,848,3,1,4,175,163,0,42,15,"1,33",22,44,40
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast",34,24,105,129,848,3,1,4,1.849,1.768,0,43,14,"14,39",21,98,403
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POIsNull",18,19,110,129,848,5,2,3,64,63,0,65,2,"1,71",3,19,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POMapLookUp",17,17,101,118,848,3,1,6,117,116,0,44,13,"1,12",19,36,27
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONegative",17,18,98,116,848,4,1,4,81,80,0,57,7,"1,46",9,28,19
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONot",16,21,109,130,848,5,2,3,55,49,0,65,2,"1,50",3,17,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POOr",17,20,112,132,848,5,2,3,75,56,0,68,2,"2,50",3,17,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject",49,25,120,145,848,3,1,5,503,428,1,41,16,"2,12",30,70,91
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORegexp",19,21,114,135,848,5,2,3,55,52,0,68,2,"1,62",3,21,13
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PORelationToExprProject",17,24,129,153,848,4,1,3,116,66,0,86,5,"1,67",3,23,15
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc",27,21,104,125,848,3,1,5,151,142,0,43,14,"1,26",21,45,34
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc",58,40,131,171,848,3,1,9,488,445,0,39,18,"1,76",36,117,95
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract",15,19,100,119,848,4,1,3,95,88,0,59,7,"1,77",10,25,23
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryComparisonOperator",9,18,103,121,848,4,2,2,34,23,2,66,0,"1,20",2,7,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.UnaryExpressionOperator",11,17,85,102,848,3,1,2,52,35,2,60,0,"1,12",3,12,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.CompiledAutomaton",2,1,3,4,1,0,1,1,12,12,0,0,0,"1,00",1,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.CompiledRegex",2,1,3,4,1,0,1,1,11,11,0,0,0,"1,00",1,2,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.NonConstantRegex",2,3,2,5,1,0,1,1,22,18,0,0,0,"2,00",1,1,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.RegexImpl",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex.RegexInit",6,5,7,12,848,0,1,1,176,158,0,0,0,"5,83",4,10,35
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.DotPOPrinter",19,7,47,54,848,2,0,4,103,98,0,23,5,"3,14",5,23,22
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternNode",5,10,23,33,10,1,0,6,99,51,0,8,0,"1,08",6,13,13
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PatternPlan",5,9,54,63,850,1,1,2,202,134,0,25,0,"5,33",4,23,32
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor",104,3,60,63,848,1,0,45,231,171,38,4,0,"1,16",0,69,64
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan",147,11,60,71,848,1,0,8,254,190,0,33,3,"3,07",3,51,43
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PlanPrinter",32,10,25,35,848,1,0,1,217,217,0,3,1,"2,80",5,52,56
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.UdfCacheShipFilesVisitor",13,5,67,72,848,2,0,1,54,54,0,54,4,"2,43",2,19,17
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.XMLPhysicalPlanPrinter",27,5,70,75,848,2,0,1,159,159,0,57,1,"3,70",3,33,37
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.AccumulativeTupleBuffer",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.CombinerPackager",16,22,42,64,848,1,1,2,119,78,0,32,3,"4,00",3,15,20
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.JoinPackager",24,27,47,74,848,1,1,1,189,145,0,31,4,"3,10",4,45,31
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.LitePackager",17,18,45,63,848,1,1,6,105,72,0,27,8,"1,62",6,21,13
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.MultiQueryPackager",15,23,49,72,848,1,1,1,193,102,0,32,3,"1,67",7,27,20
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup",31,25,84,109,848,2,1,8,195,167,0,51,2,"2,17",9,40,39
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter",26,25,97,122,848,2,1,8,233,160,1,52,1,"1,29",14,46,40
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross",22,20,80,100,848,2,1,5,197,174,0,52,1,"2,79",7,41,39
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux",21,26,83,109,848,2,1,5,256,153,0,52,1,"2,29",10,34,39
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct",35,23,81,104,848,2,1,7,126,110,1,48,4,"1,73",8,34,26
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin",48,33,87,120,848,2,1,6,408,322,1,52,1,"3,00",12,72,63
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin.TupleToMapKey",5,2,3,5,848,0,0,1,20,20,0,0,0,"1,67",2,4,5
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter",29,19,79,98,848,2,1,5,159,90,0,50,2,"1,92",7,28,25
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach",64,37,102,139,848,2,1,5,655,568,1,47,5,"3,69",17,93,133
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.ResetFinder",11,3,65,68,848,2,0,1,34,24,0,54,4,"1,20",0,7,6
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange",14,18,80,98,848,2,1,8,69,56,0,52,1,"1,00",7,19,14
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit",31,19,82,101,848,2,1,5,126,114,0,49,3,"1,75",8,34,28
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad",49,26,93,119,848,2,1,8,202,164,1,52,1,"1,41",13,51,38
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange",54,42,108,150,848,2,1,5,741,547,2,49,3,"2,62",22,82,110
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeCogroup",39,35,90,125,848,2,1,5,433,316,0,52,1,"2,96",13,62,74
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin",42,49,92,141,848,2,1,6,505,430,0,52,1,"2,96",14,75,77
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin.TuplesToSchemaTupleList",9,2,6,8,848,0,0,1,42,37,0,0,0,"1,50",5,9,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PONative",14,18,78,96,848,2,1,5,68,62,0,53,0,"1,33",7,17,16
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POOptimizedForEach",18,37,111,148,848,3,1,3,108,82,0,73,4,"2,22",3,24,20
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage",59,27,87,114,848,2,1,4,238,173,1,48,4,"1,71",9,60,36
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.POPackageTupleBuffer",8,4,10,14,848,0,1,2,59,55,0,0,0,"2,00",3,9,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.PeekedBag",10,6,28,34,848,1,2,1,57,56,0,14,1,"1,60",1,4,8
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartialAgg",29,49,101,150,848,2,3,6,509,440,0,52,1,"2,61",19,60,86
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPartitionRearrange",22,44,119,163,848,3,1,2,149,117,0,81,3,"2,09",5,31,23
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPoissonSample",16,29,75,104,848,2,1,6,170,138,0,52,1,"3,56",6,21,32
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange",21,23,82,105,848,2,1,7,157,134,0,51,2,"1,69",8,33,27
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank",27,23,86,109,848,2,1,7,151,126,1,52,1,"1,40",10,37,28
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POReservoirSample",17,23,80,103,848,2,1,5,155,139,0,52,1,"2,64",8,25,37
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin",21,19,80,99,848,2,1,8,74,61,0,53,0,"1,14",7,19,16
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort",39,29,88,117,848,2,1,9,203,177,0,48,4,"1,77",12,45,39
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.SortComparator",11,1,2,3,848,0,0,1,69,64,0,0,0,"5,00",2,9,10
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort.UDFSortComparator",5,1,1,2,848,0,0,1,23,20,0,0,0,"2,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSortedDistinct",12,23,87,110,848,3,1,2,54,45,0,61,2,"2,00",2,16,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit",32,21,85,106,848,2,1,7,253,160,0,50,2,"2,32",11,29,44
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore",74,31,104,135,848,2,1,11,245,206,1,52,1,"1,37",17,59,52
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStoreImpl",4,0,3,3,848,0,0,3,29,8,2,0,0,"1,00",1,3,2
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStream",31,27,85,112,848,2,1,8,308,190,0,51,2,"2,32",13,35,44
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion",28,20,78,98,848,2,1,5,154,113,0,51,2,"2,25",5,26,27
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager",48,19,37,56,848,0,1,5,388,303,4,0,0,"2,06",21,58,72
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.Packager.PackageType",4,2,0,2,0,n/a,0,0,3,3,n/a,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.MonitoredUDFExecutor",6,9,4,13,848,0,0,2,120,96,0,0,0,"2,43",2,13,17
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.MonitoredUDFExecutor.ErrorCallback",4,0,2,2,848,0,0,2,22,18,0,0,0,"2,00",0,5,4
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper",29,1,5,6,848,0,0,3,60,38,0,0,0,"1,80",4,11,9
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper.OpFinder",57,5,115,120,848,2,0,1,287,287,0,6,52,"1,02",2,108,56
"org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder",111,11,24,35,977,2,0,2,1.008,841,0,4,1,"9,94",9,127,169
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecType",6,5,12,17,977,0,1,6,52,49,1,0,0,"1,57",7,8,11
"org.apache.pig.backend.hadoop.executionengine.tez.TezExecutionEngine",9,5,35,40,977,1,1,2,22,22,0,16,1,"1,00",3,10,4
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob",10,14,14,28,977,0,0,1,164,154,0,0,0,"1,71",10,21,24
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.DAGStatusReporter",1,0,1,1,977,0,0,1,7,7,0,0,0,"2,00",0,1,2
"org.apache.pig.backend.hadoop.executionengine.tez.TezJob.TezJobConfig",2,1,3,4,0,0,0,1,12,12,0,0,0,"1,00",1,3,3
"org.apache.pig.backend.hadoop.executionengine.tez.TezJobCompiler",15,3,5,8,977,0,0,1,85,77,0,0,0,"2,00",4,21,10
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher",49,15,27,42,977,1,0,2,320,292,0,9,1,"3,83",2,85,46
"org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.ProgressReporter",8,4,3,7,977,0,0,1,53,49,0,0,0,"3,67",1,13,11
"org.apache.pig.backend.hadoop.executionengine.tez.TezLocalExecType",1,2,14,16,978,1,1,3,26,23,0,3,3,"1,67",3,3,5
"org.apache.pig.backend.hadoop.executionengine.tez.TezResourceManager",9,7,7,14,849,0,0,2,91,82,0,0,0,"2,29",5,11,16
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager",7,4,8,12,977,0,0,1,222,209,0,0,0,"3,33",3,14,30
"org.apache.pig.backend.hadoop.executionengine.tez.TezSessionManager.SessionInfo",1,3,4,7,0,0,0,3,18,18,0,0,0,"1,00",2,4,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler",99,21,106,127,977,2,0,1,2.094,1.778,0,36,22,"4,57",16,272,210
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompiler.FindKeyTypeVisitor",8,4,62,66,849,2,0,1,11,11,0,57,1,"1,00",0,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezCompilerException",2,7,80,87,11,3,0,0,153,43,0,13,0,"1,00",0,24,12
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor",13,12,11,23,849,0,0,5,65,58,0,0,0,"1,18",5,12,13
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOpPlanVisitor",23,3,7,10,876,1,0,1,12,7,17,4,0,"1,00",0,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan",40,12,60,72,876,1,0,5,210,177,0,33,2,"3,36",6,39,47
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator",45,32,102,134,876,1,0,27,420,363,1,9,1,"1,20",48,99,104
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.LoaderInfo",7,5,10,15,849,0,0,5,37,37,0,0,0,"1,00",5,10,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.OPER_FEATURE",2,14,0,14,0,n/a,0,0,31,16,n/a,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator.VertexGroupInfo",7,6,14,20,849,0,0,6,52,52,0,0,0,"1,07",7,14,15
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator",14,3,11,14,879,2,0,1,59,48,0,4,1,"2,50",1,19,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.LoRearrangeDiscoverer",19,8,64,72,877,2,0,1,72,56,0,56,2,"2,50",1,23,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOPackageAnnotator.PackageDiscoverer",7,4,63,67,849,2,0,1,21,13,0,57,1,"1,00",1,5,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOStreamVisitor",8,5,11,16,876,2,0,3,20,20,0,4,1,"1,25",2,9,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOStreamVisitor.StreamFileVisitor",8,3,62,65,876,2,0,1,11,11,0,57,1,"1,00",0,7,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPOUserFuncVisitor",8,5,11,16,876,2,0,1,22,22,0,4,1,"1,25",2,11,5
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer",19,13,55,68,882,1,0,3,155,141,0,33,0,"3,22",4,36,29
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode",12,3,24,27,882,1,0,5,42,42,0,7,3,"1,11",7,12,10
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerPrinter",11,5,10,15,882,2,0,1,30,26,0,4,1,"1,00",0,13,3
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerUDFCollector",7,4,10,14,882,2,0,1,20,16,0,4,1,"1,33",1,7,4
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerVisitor",8,3,7,10,882,1,0,1,9,7,3,4,0,"1,00",0,3,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPrinter",14,5,10,15,876,2,0,1,55,47,0,4,1,"2,67",0,16,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPrinter.TezGraphPrinter",10,4,10,14,877,2,0,1,36,33,0,4,1,"2,33",1,9,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.NativeTezOper",13,36,110,146,977,2,0,4,70,69,0,92,2,"1,50",5,18,12
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterStatsTez",13,22,89,111,854,2,3,6,134,122,0,52,1,"1,50",7,23,24
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POCounterTez",13,29,112,141,853,3,3,3,96,96,0,73,4,"1,73",3,21,19
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POFRJoinTez",19,38,99,137,851,3,2,1,148,130,0,66,2,"3,00",3,28,24
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POIdentityInOutTez",13,49,139,188,852,4,3,2,118,108,0,93,3,"2,22",3,14,20
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez",24,44,126,170,850,3,2,2,134,120,2,81,3,"1,53",7,32,23
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTezFactory",18,2,5,7,977,0,0,1,57,57,0,0,0,"2,60",4,19,13
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTezFactory.LocalRearrangeType",2,4,0,4,0,n/a,0,0,6,6,n/a,0,0,n/a,0,0,0
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POPartitionRearrangeTez",25,49,133,182,857,4,2,1,190,163,0,90,3,"3,57",4,42,25
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.PORankTez",15,29,101,130,851,3,2,2,122,117,0,62,4,"2,00",4,23,22
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad",18,36,102,138,851,3,2,4,186,173,0,65,2,"3,36",4,27,37
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffleTezLoad.TezAccumulativeTupleBuffer",8,4,10,14,851,0,1,1,111,106,0,0,0,"4,00",2,8,24
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POShuffledValueInputTez",14,23,82,105,850,2,2,6,106,97,0,52,1,"1,67",6,19,20
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POSimpleTezLoad",14,30,104,134,850,3,2,2,84,71,0,74,1,"1,86",2,11,13
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez",15,34,118,152,851,3,3,2,99,95,0,84,2,"1,90",4,24,19
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueInputTez",15,25,82,107,850,2,2,6,115,105,0,52,1,"1,75",6,19,21
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez",19,25,86,111,852,2,3,5,128,119,0,52,1,"1,56",8,24,25
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez.EmptyWritable",2,0,2,2,0,0,0,2,8,8,0,0,0,"1,00",0,2,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.AccumulatorOptimizer",7,3,9,12,877,2,0,1,13,9,0,4,1,"1,00",0,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.CombinerOptimizer",16,5,11,16,877,2,0,1,60,52,0,4,1,"3,25",1,18,13
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.LoaderProcessor",23,7,10,17,878,2,0,1,130,106,0,4,1,"4,67",1,42,14
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.MultiQueryOptimizerTez",19,5,12,17,878,2,0,1,206,182,0,4,1,"8,60",0,47,43
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.NoopFilterRemover",13,4,9,13,877,2,0,1,40,33,0,4,1,"4,00",0,11,8
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.ParallelismSetter",24,9,11,20,977,2,0,1,161,142,0,4,1,"8,00",1,39,32
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.SecondaryKeyOptimizerTez",17,7,15,22,877,2,1,1,83,73,0,4,1,"3,20",3,24,16
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezEstimatedParallelismClearer",6,3,9,12,877,2,0,1,9,9,0,4,1,"1,00",0,5,2
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator",12,5,5,10,876,0,1,1,101,81,0,0,0,"6,33",2,16,19
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezOperDependencyParallelismEstimator.TezParallelismFactorVisitor",22,5,70,75,876,2,0,2,78,74,0,51,7,"1,90",2,24,19
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.TezParallelismEstimator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer.UnionOptimizer",29,5,18,23,877,2,0,1,485,365,0,4,1,"7,18",3,71,79
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.FindQuantilesTez",10,16,35,51,856,2,0,1,70,66,0,22,1,"3,00",2,17,12
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.IsFirstReduceOfKeyTez",3,6,28,34,857,2,0,1,6,6,0,23,1,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.PartitionSkewedKeysTez",7,15,34,49,856,2,0,1,45,45,0,23,1,"2,33",1,11,7
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez",10,9,35,44,851,1,1,1,71,71,0,22,0,"2,33",2,11,14
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.ObjectCache",5,3,6,9,0,0,0,2,43,29,0,0,0,"1,17",3,6,7
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PartitionerDefinedVertexManager",1,3,6,9,0,0,0,4,68,55,0,0,0,"2,17",0,6,13
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigGraceShuffleVertexManager",14,9,3,12,977,0,0,1,114,109,0,0,0,"4,75",0,16,19
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigOutputFormatTez",3,3,8,11,850,1,0,1,13,11,0,3,1,"1,00",1,3,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigOutputFormatTez.PigOutputCommitterTez",4,3,18,21,849,1,0,1,38,38,0,7,3,"1,00",0,11,5
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.PigProcessor",37,14,10,24,855,0,0,2,248,226,0,0,0,"3,90",0,46,39
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.SkewedPartitionerTez",3,5,5,10,857,1,0,1,7,7,0,3,1,"1,00",0,2,1
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezInput",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,4,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezOutput",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,3,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezTaskConfigurable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezTaskContext",2,1,14,15,1,1,0,1,44,44,0,3,0,"1,67",5,6,10
"org.apache.pig.backend.hadoop.executionengine.tez.runtime.WeightedRangePartitionerTez",9,8,10,18,856,1,0,1,42,41,0,5,2,"2,50",1,7,5
"org.apache.pig.backend.hadoop.executionengine.tez.util.MRToTezHelper",5,5,9,14,849,0,0,3,198,163,0,0,0,"2,89",2,10,26
"org.apache.pig.backend.hadoop.executionengine.tez.util.SecurityHelper",3,1,3,4,2,0,0,1,61,52,0,0,0,"3,00",0,3,9
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil",39,1,14,15,876,0,0,3,182,161,0,0,0,"2,00",5,59,28
"org.apache.pig.backend.hadoop.executionengine.tez.util.TezRuntimeUtil",8,1,1,2,856,0,0,1,54,45,0,0,0,"6,00",1,9,6
"org.apache.pig.backend.hadoop.executionengine.util.AccumulatorOptimizerUtil",25,1,4,5,848,0,0,2,207,158,0,0,0,"11,00",3,25,44
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil",36,2,15,17,848,0,0,1,547,343,0,0,0,"3,93",9,72,59
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.AlgebraicPlanChecker",15,7,69,76,848,2,0,1,137,83,0,52,6,"2,33",2,15,21
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.DistinctPatcher",20,4,64,68,848,2,0,1,73,46,0,57,1,"1,75",1,19,7
"org.apache.pig.backend.hadoop.executionengine.util.CombinerOptimizerUtil.fixMapProjects",9,3,63,66,848,2,0,1,28,15,0,57,1,"1,33",0,7,4
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil",47,5,13,18,848,0,0,4,526,380,0,0,0,"4,73",7,53,71
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.ComparableSplit",2,3,7,10,1,0,0,2,43,41,0,0,0,"1,86",4,8,13
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.DummySplit",1,1,3,4,0,0,0,2,14,14,0,0,0,"1,00",2,3,3
"org.apache.pig.backend.hadoop.executionengine.util.MapRedUtil.Node",2,3,6,9,1,0,0,1,35,35,0,0,0,"1,50",2,6,9
"org.apache.pig.backend.hadoop.executionengine.util.ParallelConstantVisitor",7,5,62,67,849,2,0,1,23,22,0,57,1,"2,00",0,8,4
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil",33,1,5,6,848,0,0,2,346,313,0,0,0,"11,20",3,66,56
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.POToChange",4,3,1,4,848,0,0,0,10,10,0,0,0,"1,00",0,1,1
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyDiscover",14,6,9,15,848,0,0,1,155,129,0,0,0,"3,11",6,19,28
"org.apache.pig.backend.hadoop.executionengine.util.SecondaryKeyOptimizerUtil.SecondaryKeyOptimizerInfo",3,5,10,15,0,0,0,5,37,37,0,0,0,"1,00",5,10,10
"org.apache.pig.backend.hadoop.hbase.HBaseBinaryConverter",9,0,50,50,849,0,3,21,155,122,0,0,0,"1,20",25,27,30
"org.apache.pig.backend.hadoop.hbase.HBaseStorage",33,39,69,108,856,1,5,9,1.064,819,0,2,4,"4,20",21,95,185
"org.apache.pig.backend.hadoop.hbase.HBaseStorage.ColumnInfo",2,4,7,11,856,0,0,3,43,35,0,0,0,"1,29",6,7,9
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat",3,5,4,9,2,0,0,1,44,43,0,0,0,"1,75",2,5,7
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableIFBuilder",2,6,7,13,3,0,0,1,19,19,0,0,0,"1,14",7,8,8
"org.apache.pig.backend.hadoop.hbase.HBaseTableInputFormat.HBaseTableRecordReader",2,9,4,13,2,0,0,1,75,75,0,0,0,"3,00",2,4,12
"org.apache.pig.backend.hadoop.hbase.TableSplitComparable",1,1,8,9,0,0,0,1,53,46,0,0,0,"1,88",4,8,15
"org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager",10,24,17,41,848,1,0,1,196,166,0,1,4,"3,11",2,22,28
"org.apache.pig.builtin.ABS",13,5,29,34,857,1,0,3,50,36,0,19,3,"1,25",4,10,5
"org.apache.pig.builtin.ACOS",1,5,31,36,851,3,0,1,12,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.ARITY",7,5,28,33,849,1,0,3,26,21,0,20,2,"1,33",3,6,4
"org.apache.pig.builtin.ASIN",1,5,31,36,851,3,0,1,12,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.ATAN",1,5,31,36,851,3,0,1,12,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.AVG",23,8,43,51,876,1,2,6,179,145,0,20,2,"2,33",10,23,28
"org.apache.pig.builtin.AVG.Final",6,5,26,31,876,1,0,1,25,25,0,22,0,"3,00",1,3,3
"org.apache.pig.builtin.AVG.Initial",8,5,26,31,876,1,0,1,38,34,0,22,0,"4,00",1,6,4
"org.apache.pig.builtin.AVG.Intermediate",6,5,26,31,876,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.AddDuration",7,5,29,34,849,1,0,3,62,26,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase",17,7,43,50,857,2,2,2,118,110,3,25,1,"3,50",6,18,28
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.Final",8,5,27,32,858,2,1,1,13,13,3,22,0,"1,00",1,2,1
"org.apache.pig.builtin.AlgebraicBigDecimalMathBase.Intermediate",9,6,27,33,858,2,1,1,14,14,3,22,0,"1,00",1,3,1
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase",17,7,43,50,857,2,2,2,118,110,3,25,1,"3,50",6,18,28
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.Final",8,5,27,32,858,2,1,1,13,13,3,22,0,"1,00",1,2,1
"org.apache.pig.builtin.AlgebraicBigIntegerMathBase.Intermediate",9,6,27,33,858,2,1,1,14,14,3,22,0,"1,00",1,3,1
"org.apache.pig.builtin.AlgebraicByteArrayMathBase",18,7,44,51,856,2,2,2,111,104,3,24,2,"3,22",7,18,29
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.Final",9,5,27,32,857,2,1,1,13,13,3,22,0,"1,00",1,2,1
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.Initial",8,6,26,32,849,1,0,1,26,21,0,22,0,"3,00",1,6,3
"org.apache.pig.builtin.AlgebraicByteArrayMathBase.Intermediate",10,6,27,33,857,2,1,1,14,14,3,22,0,"1,00",1,3,1
"org.apache.pig.builtin.AlgebraicDoubleMathBase",16,7,43,50,855,2,2,2,95,88,3,25,1,"3,00",6,14,24
"org.apache.pig.builtin.AlgebraicDoubleMathBase.Final",8,5,27,32,856,2,1,1,13,13,3,22,0,"1,00",1,2,1
"org.apache.pig.builtin.AlgebraicDoubleMathBase.Intermediate",9,6,27,33,856,2,1,1,14,14,3,22,0,"1,00",1,3,1
"org.apache.pig.builtin.AlgebraicFloatMathBase",15,7,43,50,855,2,2,2,94,87,2,25,1,"3,00",6,14,24
"org.apache.pig.builtin.AlgebraicFloatMathBase.Final",7,5,27,32,856,2,1,1,13,13,2,22,0,"1,00",1,2,1
"org.apache.pig.builtin.AlgebraicFloatMathBase.Intermediate",8,6,27,33,856,2,1,1,14,14,2,22,0,"1,00",1,3,1
"org.apache.pig.builtin.AlgebraicIntMathBase",15,7,43,50,855,2,2,2,94,87,2,25,1,"3,00",6,14,24
"org.apache.pig.builtin.AlgebraicIntMathBase.Final",7,5,27,32,856,2,1,1,13,13,2,22,0,"1,00",1,2,1
"org.apache.pig.builtin.AlgebraicIntMathBase.Intermediate",8,6,27,33,856,2,1,1,14,14,2,22,0,"1,00",1,3,1
"org.apache.pig.builtin.AlgebraicLongMathBase",16,7,43,50,855,2,2,2,97,88,3,25,1,"3,00",6,14,24
"org.apache.pig.builtin.AlgebraicLongMathBase.Final",8,5,27,32,856,2,1,1,13,13,3,22,0,"1,00",1,2,1
"org.apache.pig.builtin.AlgebraicLongMathBase.Intermediate",9,6,27,33,856,2,1,1,14,14,3,22,0,"1,00",1,3,1
"org.apache.pig.builtin.AlgebraicMathBase",33,6,32,38,854,1,1,4,51,46,7,22,0,"2,60",3,4,13
"org.apache.pig.builtin.AlgebraicMathBase.Final",10,5,26,31,851,1,1,0,2,2,7,22,0,n/a,0,0,0
"org.apache.pig.builtin.AlgebraicMathBase.Initial",7,6,26,32,849,1,0,1,24,19,0,22,0,"2,00",1,5,2
"org.apache.pig.builtin.AlgebraicMathBase.Intermediate",11,5,26,31,851,1,1,0,2,2,7,22,0,n/a,0,0,0
"org.apache.pig.builtin.AlgebraicMathBase.KNOWN_OP",66,3,0,3,0,n/a,0,0,3,3,n/a,0,0,n/a,0,0,0
"org.apache.pig.builtin.AlgebraicMathBase.KnownOpProvider",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.builtin.Assert",3,5,27,32,848,1,0,2,27,23,0,21,1,"2,00",2,4,4
"org.apache.pig.builtin.AvroStorage",27,13,60,73,859,1,4,12,564,391,1,4,2,"1,80",16,49,63
"org.apache.pig.builtin.BagSize",9,5,28,33,849,1,0,3,26,23,0,20,2,"1,33",3,7,4
"org.apache.pig.builtin.BagToString",9,7,28,35,849,1,0,3,96,79,0,20,2,"6,33",3,11,19
"org.apache.pig.builtin.BagToTuple",10,5,29,34,849,1,0,3,101,81,0,20,2,"4,75",4,18,19
"org.apache.pig.builtin.Base",5,5,27,32,849,1,0,2,13,10,1,20,2,"1,00",2,5,2
"org.apache.pig.builtin.BigDecimalAbs",3,5,27,32,849,1,0,2,13,13,0,21,1,"1,50",2,4,3
"org.apache.pig.builtin.BigDecimalAvg",15,8,43,51,852,1,2,6,154,135,0,21,1,"2,25",10,21,27
"org.apache.pig.builtin.BigDecimalAvg.Final",6,5,26,31,852,1,0,1,25,25,0,22,0,"3,00",1,4,3
"org.apache.pig.builtin.BigDecimalAvg.Initial",7,5,26,31,852,1,0,1,29,27,0,22,0,"3,00",1,5,3
"org.apache.pig.builtin.BigDecimalAvg.Intermediate",6,5,26,31,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.BigDecimalMax",4,7,41,48,858,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.BigDecimalMax.Final",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigDecimalMax.Intermediate",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigDecimalMin",4,7,41,48,858,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.BigDecimalMin.Final",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigDecimalMin.Intermediate",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigDecimalSum",4,7,41,48,858,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.BigDecimalSum.Final",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigDecimalSum.Intermediate",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigDecimalWrapper",2,2,21,23,1,0,0,1,74,68,0,0,0,"1,00",4,21,21
"org.apache.pig.builtin.BigDecimalWrapper.BigDecimalInfinity",1,2,0,2,0,n/a,0,0,4,4,n/a,0,0,n/a,0,0,0
"org.apache.pig.builtin.BigIntegerAbs",3,5,27,32,849,1,0,2,13,13,0,21,1,"1,50",2,4,3
"org.apache.pig.builtin.BigIntegerAvg",15,8,43,51,852,1,2,6,154,135,0,21,1,"2,25",10,21,27
"org.apache.pig.builtin.BigIntegerAvg.Final",6,5,26,31,852,1,0,1,25,25,0,22,0,"3,00",1,4,3
"org.apache.pig.builtin.BigIntegerAvg.Initial",7,5,26,31,852,1,0,1,29,27,0,22,0,"3,00",1,5,3
"org.apache.pig.builtin.BigIntegerAvg.Intermediate",6,5,26,31,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.BigIntegerMax",4,7,41,48,858,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.BigIntegerMax.Final",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigIntegerMax.Intermediate",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigIntegerMin",4,7,41,48,858,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.BigIntegerMin.Final",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigIntegerMin.Intermediate",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigIntegerSum",4,7,41,48,858,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.BigIntegerSum.Final",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigIntegerSum.Intermediate",2,5,28,33,859,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.BigIntegerWrapper",2,2,11,13,1,0,0,1,44,38,0,0,0,"1,00",4,11,11
"org.apache.pig.builtin.BigIntegerWrapper.BigIntegerInfinity",1,2,0,2,0,n/a,0,0,4,4,n/a,0,0,n/a,0,0,0
"org.apache.pig.builtin.BinStorage",25,7,56,63,854,2,3,17,280,261,0,6,1,"1,19",19,42,37
"org.apache.pig.builtin.BinStorage.UnImplementedLoadCaster",6,1,24,25,849,0,1,1,53,53,0,0,0,"1,00",12,13,12
"org.apache.pig.builtin.Bloom",4,7,32,39,849,2,0,1,83,56,0,22,1,"1,29",3,11,9
"org.apache.pig.builtin.BuildBloom",10,9,43,52,853,2,1,5,68,30,0,24,1,"1,00",5,11,7
"org.apache.pig.builtin.BuildBloom.Final",4,9,37,46,850,2,0,1,19,19,0,25,0,"1,00",1,7,4
"org.apache.pig.builtin.BuildBloom.Initial",6,9,37,46,850,2,0,1,33,29,0,25,0,"1,50",1,13,6
"org.apache.pig.builtin.BuildBloom.Intermediate",4,9,37,46,850,2,0,1,19,19,0,25,0,"1,00",1,8,4
"org.apache.pig.builtin.BuildBloomBase",9,9,33,42,849,1,0,2,91,71,4,22,0,"1,50",4,11,12
"org.apache.pig.builtin.CBRT",1,5,31,36,851,3,0,1,11,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.CEIL",1,5,31,36,851,3,0,1,12,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.CONCAT",12,5,30,35,850,1,0,4,54,47,0,18,4,"1,60",5,13,8
"org.apache.pig.builtin.COR",14,7,38,45,852,1,1,6,186,151,0,21,1,"2,20",8,25,22
"org.apache.pig.builtin.COR.Final",8,7,28,35,852,1,0,1,63,58,0,22,0,"3,00",1,12,9
"org.apache.pig.builtin.COR.Initial",5,5,26,31,852,1,0,1,23,23,0,22,0,"4,00",1,8,4
"org.apache.pig.builtin.COR.Intermed",4,5,26,31,852,1,0,1,12,12,0,22,0,"2,00",1,4,2
"org.apache.pig.builtin.COS",1,5,31,36,851,3,0,1,11,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.COSH",1,5,31,36,851,3,0,1,11,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.COUNT",16,7,41,48,852,1,2,7,105,83,0,20,2,"1,60",8,18,16
"org.apache.pig.builtin.COUNT.Final",5,5,26,31,852,1,0,1,12,12,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.COUNT.Initial",4,5,26,31,852,1,0,1,17,13,0,22,0,"3,00",1,4,3
"org.apache.pig.builtin.COUNT.Intermediate",5,5,26,31,852,1,0,1,14,14,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.COUNT_STAR",14,7,40,47,852,1,2,6,86,63,0,21,1,"1,22",7,15,11
"org.apache.pig.builtin.COUNT_STAR.Final",5,5,26,31,852,1,0,1,12,12,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.COUNT_STAR.Initial",4,5,26,31,852,1,0,1,12,8,0,22,0,"2,00",1,3,2
"org.apache.pig.builtin.COUNT_STAR.Intermediate",5,5,26,31,852,1,0,1,14,14,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.COV",14,7,38,45,852,1,1,6,172,136,0,21,1,"2,20",8,25,22
"org.apache.pig.builtin.COV.Final",8,7,28,35,852,1,0,1,54,50,0,22,0,"3,00",1,12,9
"org.apache.pig.builtin.COV.Initial",5,5,26,31,852,1,0,1,22,22,0,22,0,"4,00",1,8,4
"org.apache.pig.builtin.COV.Intermed",4,5,26,31,852,1,0,1,10,10,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.ConstantSize",8,5,28,33,849,1,0,3,25,22,0,20,2,"1,33",3,6,4
"org.apache.pig.builtin.CubeDimensions",12,9,32,41,848,1,0,3,93,57,0,20,2,"1,57",3,18,11
"org.apache.pig.builtin.CurrentTime",4,7,28,35,849,1,0,2,29,24,0,21,1,"2,00",2,7,6
"org.apache.pig.builtin.DIFF",7,7,28,35,849,1,0,2,67,48,0,21,1,"4,00",2,12,12
"org.apache.pig.builtin.DateTimeMax",14,6,40,46,852,1,2,5,85,77,0,21,1,"1,78",7,14,16
"org.apache.pig.builtin.DateTimeMax.Final",5,5,26,31,852,1,0,1,14,14,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.DateTimeMax.Initial",7,6,26,32,849,1,0,1,23,21,0,22,0,"2,00",1,4,2
"org.apache.pig.builtin.DateTimeMax.Intermediate",6,6,26,32,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.DateTimeMin",14,6,40,46,852,1,2,5,85,77,0,21,1,"1,78",7,14,16
"org.apache.pig.builtin.DateTimeMin.Final",5,5,26,31,852,1,0,1,14,14,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.DateTimeMin.Initial",7,6,26,32,849,1,0,1,23,21,0,22,0,"2,00",1,4,2
"org.apache.pig.builtin.DateTimeMin.Intermediate",6,6,26,32,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.DaysBetween",7,5,29,34,849,1,0,4,74,29,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.Distinct",14,8,36,44,848,1,1,4,93,83,0,22,0,"2,38",7,17,19
"org.apache.pig.builtin.Distinct.Final",4,5,26,31,848,1,0,1,6,6,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.Distinct.Initial",6,5,26,31,848,1,0,1,15,12,0,22,0,"2,00",1,4,2
"org.apache.pig.builtin.Distinct.Intermediate",3,5,26,31,848,1,0,1,6,6,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.DoubleAbs",2,5,31,36,851,3,0,1,6,6,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.DoubleAvg",15,8,42,50,852,1,2,6,149,132,0,21,1,"2,36",9,20,26
"org.apache.pig.builtin.DoubleAvg.Final",6,5,26,31,852,1,0,1,25,25,0,22,0,"3,00",1,3,3
"org.apache.pig.builtin.DoubleAvg.Initial",7,5,26,31,852,1,0,1,29,27,0,22,0,"3,00",1,5,3
"org.apache.pig.builtin.DoubleAvg.Intermediate",6,5,26,31,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.DoubleBase",24,5,30,35,850,2,0,2,31,19,17,23,1,"2,00",3,7,4
"org.apache.pig.builtin.DoubleMax",4,7,41,48,856,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.DoubleMax.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.DoubleMax.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.DoubleMin",4,7,41,48,856,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.DoubleMin.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.DoubleMin.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.DoubleRound",6,5,28,33,849,1,0,3,30,21,0,20,2,"1,33",3,8,4
"org.apache.pig.builtin.DoubleRoundTo",8,5,28,33,849,1,0,3,62,37,0,20,2,"2,00",3,9,6
"org.apache.pig.builtin.DoubleSum",5,7,41,48,856,3,2,0,8,5,1,31,0,"1,00",0,2,1
"org.apache.pig.builtin.DoubleSum.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.DoubleSum.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.ENDSWITH",10,5,29,34,849,1,0,4,46,42,0,19,3,"1,25",4,12,5
"org.apache.pig.builtin.EXP",1,5,31,36,851,3,0,1,8,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.EqualsIgnoreCase",3,5,28,33,849,2,0,2,29,25,0,22,1,"2,50",2,5,5
"org.apache.pig.builtin.FLOOR",1,5,31,36,851,3,0,1,12,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.FloatAbs",6,5,28,33,849,1,0,3,26,21,0,20,2,"1,33",3,8,4
"org.apache.pig.builtin.FloatAvg",15,8,42,50,852,1,2,6,149,132,0,21,1,"2,36",9,20,26
"org.apache.pig.builtin.FloatAvg.Final",6,5,26,31,852,1,0,1,25,25,0,22,0,"3,00",1,3,3
"org.apache.pig.builtin.FloatAvg.Initial",7,5,26,31,852,1,0,1,28,26,0,22,0,"4,00",1,5,4
"org.apache.pig.builtin.FloatAvg.Intermediate",6,5,26,31,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.FloatMax",4,7,41,48,856,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.FloatMax.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.FloatMax.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.FloatMin",4,7,41,48,856,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.FloatMin.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.FloatMin.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.FloatRound",6,5,28,33,849,1,0,3,32,21,0,20,2,"1,33",3,8,4
"org.apache.pig.builtin.FloatRoundTo",8,5,28,33,849,1,0,3,62,37,0,20,2,"2,00",3,9,6
"org.apache.pig.builtin.FloatSum",1,7,42,49,857,4,2,0,7,3,0,31,0,"1,00",0,1,1
"org.apache.pig.builtin.FuncUtils",7,0,2,2,849,0,0,2,18,13,0,0,0,"1,50",2,3,3
"org.apache.pig.builtin.FunctionWrapperEvalFunc",5,10,43,53,854,3,0,3,123,89,0,26,1,"1,78",6,16,16
"org.apache.pig.builtin.FunctionWrapperEvalFunc.GoogleFunctionBridge",2,1,5,6,2,0,2,1,15,12,0,0,0,"1,00",2,3,3
"org.apache.pig.builtin.GenericInvoker",13,6,31,37,850,1,0,1,72,30,5,21,1,"1,33",2,14,8
"org.apache.pig.builtin.GetDay",7,5,29,34,849,1,0,4,64,23,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.GetHour",7,5,29,34,849,1,0,4,64,23,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.GetMilliSecond",7,5,29,34,849,1,0,4,64,23,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.GetMinute",7,5,29,34,849,1,0,4,64,23,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.GetMonth",7,5,29,34,849,1,0,4,64,23,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.GetSecond",7,5,29,34,849,1,0,4,64,23,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.GetWeek",7,5,29,34,849,1,0,4,64,23,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.GetWeekYear",7,5,29,34,849,1,0,4,64,23,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.GetYear",7,5,29,34,849,1,0,4,64,23,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.HiveUDAF",14,11,37,48,876,2,1,1,98,90,0,22,1,"2,00",6,20,16
"org.apache.pig.builtin.HiveUDAF.Final",8,9,28,37,876,1,0,1,34,34,0,22,0,"1,67",1,11,5
"org.apache.pig.builtin.HiveUDAF.Initial",4,5,28,33,849,1,0,1,15,15,0,22,0,"1,33",1,5,4
"org.apache.pig.builtin.HiveUDAF.Intermediate",8,10,28,38,876,1,0,1,36,36,0,22,0,"1,67",1,13,5
"org.apache.pig.builtin.HiveUDAF.SchemaAndEvaluatorInfo",8,10,4,14,864,0,0,1,79,79,0,0,0,"2,75",3,10,11
"org.apache.pig.builtin.HiveUDF",9,9,32,41,876,2,0,1,91,82,0,19,3,"2,33",3,18,14
"org.apache.pig.builtin.HiveUDF.SchemaInfo",7,2,1,3,864,0,0,1,25,25,0,0,0,"3,00",0,10,3
"org.apache.pig.builtin.HiveUDFBase",12,5,29,34,876,1,0,4,63,63,3,21,1,"2,75",4,12,11
"org.apache.pig.builtin.HiveUDFBase.ConstantObjectInspectInfo",14,1,5,6,863,0,0,1,41,41,0,0,0,"2,20",4,11,11
"org.apache.pig.builtin.HiveUDFBase.HiveReporter",2,1,9,10,5,0,0,3,45,42,0,0,0,"1,00",4,15,9
"org.apache.pig.builtin.HiveUDTF",12,12,32,44,876,2,0,2,81,74,0,20,3,"1,83",3,23,11
"org.apache.pig.builtin.HiveUDTF.HiveUDTFCollector",6,1,3,4,876,0,0,1,22,22,0,0,0,"1,33",1,9,4
"org.apache.pig.builtin.HiveUDTF.SchemaInfo",8,2,1,3,864,0,0,1,20,20,0,0,0,"2,00",0,8,2
"org.apache.pig.builtin.HoursBetween",7,5,29,34,849,1,0,4,73,29,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.INDEXOF",6,6,28,34,849,1,0,3,43,29,0,20,2,"1,67",3,8,5
"org.apache.pig.builtin.INVERSEMAP",11,7,29,36,849,1,0,3,78,51,0,20,2,"2,50",4,14,10
"org.apache.pig.builtin.IntAbs",6,5,28,33,849,1,0,3,32,21,0,20,2,"1,33",3,8,4
"org.apache.pig.builtin.IntAvg",15,8,42,50,852,1,2,6,153,132,0,21,1,"2,36",9,20,26
"org.apache.pig.builtin.IntAvg.Final",6,5,26,31,852,1,0,1,25,25,0,22,0,"3,00",1,3,3
"org.apache.pig.builtin.IntAvg.Initial",7,5,26,31,852,1,0,1,28,26,0,22,0,"4,00",1,5,4
"org.apache.pig.builtin.IntAvg.Intermediate",6,5,26,31,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.IntMax",4,7,41,48,856,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.IntMax.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.IntMax.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.IntMin",4,7,41,48,856,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.IntMin.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.IntMin.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.IntSum",1,7,42,49,857,4,2,0,7,3,0,31,0,"1,00",0,1,1
"org.apache.pig.builtin.InvokeForDouble",2,6,35,41,851,2,0,0,16,13,0,24,0,"1,00",0,7,4
"org.apache.pig.builtin.InvokeForFloat",2,6,35,41,851,2,0,0,16,13,0,24,0,"1,00",0,7,4
"org.apache.pig.builtin.InvokeForInt",2,6,35,41,851,2,0,0,16,13,0,24,0,"1,00",0,7,4
"org.apache.pig.builtin.InvokeForLong",2,6,35,41,851,2,0,0,16,13,0,24,0,"1,00",0,7,4
"org.apache.pig.builtin.InvokeForString",2,6,35,41,851,2,0,0,16,13,0,24,0,"1,00",0,7,4
"org.apache.pig.builtin.Invoker",7,12,11,23,849,0,0,1,189,187,0,0,0,"4,36",9,16,48
"org.apache.pig.builtin.InvokerFunction",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.builtin.InvokerGenerator",11,16,41,57,848,1,0,1,240,233,0,21,1,"2,75",9,21,44
"org.apache.pig.builtin.InvokerGenerator.ByteClassLoader",3,1,3,4,9,0,0,1,18,18,0,0,0,"1,00",2,3,3
"org.apache.pig.builtin.IsEmpty",7,5,28,33,848,2,0,2,27,24,0,22,1,"2,00",2,6,4
"org.apache.pig.builtin.JsonLoader",20,7,29,36,850,1,1,8,260,217,0,3,3,"3,40",9,36,51
"org.apache.pig.builtin.JsonMetadata",21,8,20,28,848,0,2,3,258,208,0,0,0,"2,21",7,28,31
"org.apache.pig.builtin.JsonStorage",14,6,35,41,850,1,3,7,230,187,0,4,2,"3,33",4,29,40
"org.apache.pig.builtin.KEYSET",9,6,28,34,849,1,0,3,62,44,0,20,2,"2,33",3,12,7
"org.apache.pig.builtin.LAST_INDEX_OF",8,5,29,34,849,1,0,4,53,32,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.LCFIRST",7,5,28,33,849,1,0,3,28,25,0,20,2,"2,00",3,8,6
"org.apache.pig.builtin.LOG",1,5,31,36,851,3,0,1,11,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.LOG10",1,5,31,36,851,3,0,1,10,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.LOWER",8,5,29,34,849,1,0,3,47,28,0,19,3,"1,25",4,10,5
"org.apache.pig.builtin.LTRIM",9,5,29,34,849,1,0,3,38,31,0,19,3,"1,75",4,9,7
"org.apache.pig.builtin.LongAbs",6,5,28,33,849,1,0,3,26,21,0,20,2,"1,33",3,8,4
"org.apache.pig.builtin.LongAvg",15,8,42,50,852,1,2,6,149,132,0,21,1,"2,36",9,20,26
"org.apache.pig.builtin.LongAvg.Final",6,5,26,31,852,1,0,1,25,25,0,22,0,"3,00",1,3,3
"org.apache.pig.builtin.LongAvg.Initial",7,5,26,31,852,1,0,1,28,26,0,22,0,"3,00",1,5,3
"org.apache.pig.builtin.LongAvg.Intermediate",6,5,26,31,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.LongMax",4,7,41,48,856,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.LongMax.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.LongMax.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.LongMin",4,7,41,48,856,3,2,0,8,5,0,31,0,"1,00",0,2,1
"org.apache.pig.builtin.LongMin.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.LongMin.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.LongSum",5,7,41,48,856,3,2,0,8,5,1,31,0,"1,00",0,2,1
"org.apache.pig.builtin.LongSum.Final",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.LongSum.Intermediate",2,5,28,33,857,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.MAX",15,7,43,50,881,3,2,1,39,19,0,31,1,"1,00",1,4,2
"org.apache.pig.builtin.MAX.Final",2,5,28,33,858,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.MAX.Intermediate",2,5,28,33,858,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.MIN",15,7,43,50,881,3,2,1,39,19,0,31,1,"1,00",1,4,2
"org.apache.pig.builtin.MIN.Final",2,5,28,33,858,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.MIN.Intermediate",2,5,28,33,858,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.MapSize",8,5,28,33,849,1,0,3,27,24,0,20,2,"1,33",3,6,4
"org.apache.pig.builtin.MilliSecondsBetween",7,5,29,34,849,1,0,4,74,29,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.MinutesBetween",7,5,29,34,849,1,0,4,74,29,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.MonitoredUDF",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,8,n/a
"org.apache.pig.builtin.MonthsBetween",7,5,29,34,849,1,0,4,75,30,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.Nondeterministic",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.builtin.OrcStorage",36,20,68,88,867,1,5,11,559,538,0,4,2,"3,00",23,75,114
"org.apache.pig.builtin.OrcStorage.NonEmptyOrcFileFilter",5,1,2,3,863,0,0,1,21,21,0,0,0,"1,50",1,5,3
"org.apache.pig.builtin.OutputSchema",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.builtin.ParquetLoader",9,2,40,42,851,3,2,4,35,31,0,20,1,"1,00",2,11,6
"org.apache.pig.builtin.ParquetStorer",5,2,32,34,851,2,2,2,26,19,0,13,1,"1,00",0,5,3
"org.apache.pig.builtin.PigStorage",40,20,66,86,848,2,6,16,476,372,0,6,1,"2,23",16,69,78
"org.apache.pig.builtin.PigStreaming",10,3,13,16,848,1,2,2,52,35,0,2,0,"1,40",3,12,7
"org.apache.pig.builtin.PluckTuple",8,11,30,41,849,1,0,2,114,86,0,20,2,"3,40",3,16,17
"org.apache.pig.builtin.RANDOM",6,6,29,35,848,1,0,2,22,18,0,21,1,"1,00",2,7,4
"org.apache.pig.builtin.REGEX_EXTRACT",8,8,31,39,849,1,0,3,84,68,0,19,3,"1,83",4,14,11
"org.apache.pig.builtin.REGEX_EXTRACT_ALL",8,9,31,40,849,1,0,4,79,64,0,19,3,"1,83",4,15,11
"org.apache.pig.builtin.REPLACE",8,5,29,34,849,1,0,3,53,35,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.ROUND",9,5,29,34,851,1,0,4,47,32,0,19,3,"1,25",4,10,5
"org.apache.pig.builtin.ROUND_TO",9,5,29,34,851,1,0,3,89,63,0,19,3,"1,75",4,13,7
"org.apache.pig.builtin.RTRIM",9,5,29,34,849,1,0,3,38,31,0,19,3,"1,75",4,9,7
"org.apache.pig.builtin.RollupDimensions",12,8,31,39,848,1,0,3,54,39,0,20,2,"1,17",3,16,7
"org.apache.pig.builtin.RoundRobinPartitioner",2,1,1,2,0,0,0,1,8,8,0,0,0,"1,00",1,1,1
"org.apache.pig.builtin.SIN",1,5,31,36,851,3,0,1,11,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.SINH",1,5,31,36,851,3,0,1,11,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.SIZE",15,5,29,34,854,1,0,3,65,55,0,19,3,"1,25",4,10,5
"org.apache.pig.builtin.SPRINTF",8,5,29,34,849,1,0,4,51,40,0,19,3,"2,00",4,8,8
"org.apache.pig.builtin.SQRT",1,5,31,36,851,3,0,1,11,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.STARTSWITH",10,5,29,34,849,1,0,4,46,42,0,19,3,"1,25",4,12,5
"org.apache.pig.builtin.STRSPLIT",9,6,29,35,849,1,0,4,72,47,0,19,3,"2,00",4,12,8
"org.apache.pig.builtin.STRSPLITTOBAG",11,7,29,36,849,1,0,4,74,55,0,19,3,"2,25",4,17,9
"org.apache.pig.builtin.SUBSTRING",8,5,29,34,849,1,0,3,61,42,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.SUBTRACT",5,5,31,36,849,1,0,2,63,47,0,21,1,"2,17",6,13,13
"org.apache.pig.builtin.SUM",11,7,43,50,869,3,2,1,42,17,0,31,1,"1,00",1,4,2
"org.apache.pig.builtin.SUM.Final",2,5,28,33,858,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.SUM.Intermediate",2,5,28,33,858,3,1,1,6,6,0,23,0,"1,00",1,1,1
"org.apache.pig.builtin.SecondsBetween",7,5,29,34,849,1,0,4,74,29,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.StringConcat",9,5,29,34,849,1,0,4,37,34,0,19,3,"1,75",4,8,7
"org.apache.pig.builtin.StringMax",14,6,40,46,852,1,2,5,85,77,0,21,1,"1,78",7,14,16
"org.apache.pig.builtin.StringMax.Final",5,5,26,31,852,1,0,1,14,14,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.StringMax.Initial",7,6,26,32,849,1,0,1,23,21,0,22,0,"2,00",1,4,2
"org.apache.pig.builtin.StringMax.Intermediate",6,6,26,32,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.StringMin",14,6,40,46,852,1,2,5,85,77,0,21,1,"1,78",7,14,16
"org.apache.pig.builtin.StringMin.Final",5,5,26,31,852,1,0,1,14,14,0,22,0,"1,00",1,2,1
"org.apache.pig.builtin.StringMin.Initial",7,6,26,32,849,1,0,1,23,21,0,22,0,"2,00",1,4,2
"org.apache.pig.builtin.StringMin.Intermediate",6,6,26,32,852,1,0,1,15,15,0,22,0,"1,00",1,3,1
"org.apache.pig.builtin.StringSize",8,5,28,33,849,1,0,3,26,23,0,20,2,"1,33",3,6,4
"org.apache.pig.builtin.SubtractDuration",7,5,29,34,849,1,0,3,62,26,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.TAN",1,5,31,36,851,3,0,1,11,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.TANH",1,5,31,36,851,3,0,1,12,5,0,26,0,"1,00",1,1,1
"org.apache.pig.builtin.TOBAG",9,5,29,34,849,1,0,3,128,64,0,20,2,"3,25",4,16,13
"org.apache.pig.builtin.TOKENIZE",12,7,29,36,849,1,0,3,84,75,0,19,3,"2,75",4,18,11
"org.apache.pig.builtin.TOMAP",6,5,28,33,849,1,0,3,86,76,0,20,2,"6,33",3,10,19
"org.apache.pig.builtin.TOP",16,11,47,58,854,2,2,6,154,117,0,21,2,"2,08",7,26,25
"org.apache.pig.builtin.TOP.Final",7,8,28,36,854,1,0,1,70,60,0,22,0,"5,00",1,12,15
"org.apache.pig.builtin.TOP.Initial",6,6,28,34,854,1,0,1,40,35,0,22,0,"2,00",1,10,6
"org.apache.pig.builtin.TOP.Intermed",8,8,28,36,854,1,0,1,73,64,0,22,0,"4,67",1,14,14
"org.apache.pig.builtin.TOP.TupleComparator",6,4,2,6,849,0,0,1,39,35,0,0,0,"3,50",1,5,7
"org.apache.pig.builtin.TOTUPLE",5,5,28,33,849,1,0,3,29,24,0,20,2,"1,33",3,10,4
"org.apache.pig.builtin.TRIM",9,5,29,34,849,1,0,3,38,31,0,19,3,"1,75",4,9,7
"org.apache.pig.builtin.TextLoader",11,3,49,52,849,1,1,6,202,157,0,5,1,"1,07",25,30,29
"org.apache.pig.builtin.ToDate",13,6,32,38,848,1,0,5,117,51,0,19,3,"1,29",7,15,9
"org.apache.pig.builtin.ToDate2ARGS",4,5,27,32,848,1,0,2,24,15,0,21,1,"1,50",2,5,3
"org.apache.pig.builtin.ToDate3ARGS",4,5,27,32,848,1,0,2,19,16,0,21,1,"1,50",2,5,3
"org.apache.pig.builtin.ToDateISO",4,5,27,32,848,1,0,2,16,13,0,21,1,"1,50",2,6,3
"org.apache.pig.builtin.ToMilliSeconds",7,5,29,34,849,1,0,4,64,25,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.ToString",7,5,29,34,849,1,0,3,40,35,0,19,3,"1,75",4,13,7
"org.apache.pig.builtin.ToUnixTime",7,5,29,34,849,1,0,4,61,25,0,19,3,"1,25",4,9,5
"org.apache.pig.builtin.TrevniStorage",10,11,65,76,862,2,4,2,240,210,0,32,3,"1,85",3,9,37
"org.apache.pig.builtin.TupleSize",8,5,28,33,849,1,0,3,25,22,0,20,2,"1,67",3,7,5
"org.apache.pig.builtin.UCFIRST",7,5,28,33,849,1,0,3,28,25,0,20,2,"2,00",3,8,6
"org.apache.pig.builtin.UPPER",8,5,29,34,849,1,0,3,54,34,0,19,3,"1,25",4,10,5
"org.apache.pig.builtin.UniqueID",6,6,27,33,849,1,0,2,22,14,0,21,1,"1,00",2,4,2
"org.apache.pig.builtin.Utf8StorageConverter",19,8,59,67,848,0,3,14,566,535,0,0,0,"3,68",33,49,125
"org.apache.pig.builtin.VALUELIST",10,7,28,35,849,1,0,3,85,63,0,20,2,"3,00",3,14,9
"org.apache.pig.builtin.VALUESET",10,7,29,36,849,1,0,3,92,72,0,20,2,"2,75",4,17,11
"org.apache.pig.builtin.WeeksBetween",7,5,29,34,849,1,0,4,74,29,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.YearsBetween",7,5,29,34,849,1,0,4,75,30,0,19,3,"1,25",4,11,5
"org.apache.pig.builtin.mock.Storage",23,10,55,65,857,1,3,11,260,176,0,3,3,"1,27",16,44,38
"org.apache.pig.builtin.mock.Storage.Data",6,3,10,13,850,0,0,4,120,53,0,0,0,"1,50",2,13,15
"org.apache.pig.builtin.mock.Storage.MockInputFormat",3,1,3,4,2,0,0,2,15,15,0,0,0,"1,00",2,4,3
"org.apache.pig.builtin.mock.Storage.MockInputSplit",1,1,8,9,0,0,0,2,34,33,0,0,0,"1,00",4,8,8
"org.apache.pig.builtin.mock.Storage.MockOutputCommitter",1,0,5,5,0,0,0,5,18,18,0,0,0,"1,00",1,5,5
"org.apache.pig.builtin.mock.Storage.MockOutputFormat",3,0,3,3,9,0,0,3,19,19,0,0,0,"1,33",2,4,4
"org.apache.pig.builtin.mock.Storage.MockRecordReader",1,0,6,6,0,0,0,6,25,25,0,0,0,"1,00",4,6,6
"org.apache.pig.builtin.mock.Storage.MockRecordWriter",3,2,3,5,7,0,0,2,15,14,0,0,0,"1,00",0,3,3
"org.apache.pig.builtin.mock.Storage.Parts",2,2,3,5,7,0,0,1,22,21,0,0,0,"1,67",1,3,5
"org.apache.pig.classification.InterfaceAudience",0,0,1,1,0,0,0,0,6,3,0,0,0,"1,00",0,1,1
"org.apache.pig.classification.InterfaceAudience.LimitedPrivate",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.classification.InterfaceAudience.Private",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.classification.InterfaceAudience.Public",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.classification.InterfaceStability",0,0,0,0,0,0,0,0,6,2,0,0,0,n/a,0,0,0
"org.apache.pig.classification.InterfaceStability.Evolving",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.classification.InterfaceStability.Stable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.classification.InterfaceStability.Unstable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.data.AbstractTuple",9,0,17,17,848,0,1,5,43,30,5,0,0,"1,00",6,11,7
"org.apache.pig.data.AccumulativeBag",6,3,27,30,10,0,2,12,62,62,0,0,0,"1,12",10,18,19
"org.apache.pig.data.AmendableTuple",1,3,34,37,849,2,1,1,17,14,0,17,0,"1,00",1,4,3
"org.apache.pig.data.AppendableSchemaTuple",9,3,290,293,848,2,2,1,203,200,0,164,17,"2,04",18,60,53
"org.apache.pig.data.BagFactory",62,2,8,10,848,0,0,6,109,53,1,0,0,"2,00",5,11,8
"org.apache.pig.data.BinInterSedes",23,55,29,84,848,0,1,3,562,523,0,0,0,"5,30",15,43,122
"org.apache.pig.data.BinInterSedes.BinInterSedesTupleRawComparator",13,9,20,29,848,0,1,2,674,621,0,0,0,"7,58",17,30,144
"org.apache.pig.data.BinSedesTuple",9,3,38,41,848,2,1,2,57,29,0,15,2,"1,00",1,15,7
"org.apache.pig.data.BinSedesTupleFactory",6,0,19,19,848,1,1,8,49,44,1,0,1,"1,00",8,13,8
"org.apache.pig.data.DataBag",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,8,n/a
"org.apache.pig.data.DataByteArray",45,2,19,21,848,0,0,2,176,103,0,0,0,"1,58",12,21,30
"org.apache.pig.data.DataReaderWriter",17,5,10,15,848,0,0,1,283,265,0,0,0,"5,70",9,24,57
"org.apache.pig.data.DataType",306,20,53,73,848,0,0,2,1.557,1.165,0,0,0,"6,83",52,73,362
"org.apache.pig.data.DefaultAbstractBag",34,15,33,48,848,0,2,3,359,253,4,0,0,"2,39",9,48,55
"org.apache.pig.data.DefaultAbstractBag.BagDelimiterTuple",3,1,31,32,848,2,1,0,1,1,2,17,0,n/a,0,0,0
"org.apache.pig.data.DefaultAbstractBag.EndBag",2,2,31,33,848,3,1,0,2,2,0,17,0,n/a,0,0,0
"org.apache.pig.data.DefaultAbstractBag.StartBag",2,2,31,33,848,3,1,0,2,2,0,17,0,n/a,0,0,0
"org.apache.pig.data.DefaultBagFactory",12,0,11,11,848,1,0,4,45,25,0,1,0,"1,00",4,10,5
"org.apache.pig.data.DefaultDataBag",9,9,39,48,848,1,2,4,89,65,0,21,0,"1,67",4,14,10
"org.apache.pig.data.DefaultDataBag.DefaultDataBagIterator",4,6,6,12,848,0,0,2,161,101,0,0,0,"2,67",4,8,16
"org.apache.pig.data.DefaultTuple",14,2,32,34,848,1,1,2,200,117,4,7,0,"1,80",7,23,27
"org.apache.pig.data.DefaultTuple.DefaultTupleRawComparator",12,5,9,14,848,0,1,2,260,243,0,0,0,"7,00",6,18,56
"org.apache.pig.data.DefaultTupleFactory",3,0,20,20,849,2,1,1,10,7,0,7,1,"1,00",1,2,1
"org.apache.pig.data.DistinctDataBag",10,9,40,49,848,1,2,3,123,95,0,19,2,"2,43",5,15,17
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator",7,5,8,13,848,0,0,2,327,218,0,0,0,"4,62",4,13,37
"org.apache.pig.data.DistinctDataBag.DistinctDataBagIterator.TContainer",2,2,3,5,7,0,0,1,20,20,0,0,0,"1,33",3,3,4
"org.apache.pig.data.FieldIsNullException",3,6,58,64,6,3,0,0,7,7,0,13,0,"1,00",0,3,2
"org.apache.pig.data.FileList",5,2,4,6,0,0,0,0,32,20,0,0,0,"1,50",0,4,6
"org.apache.pig.data.InterSedes",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,6,n/a
"org.apache.pig.data.InterSedesFactory",13,1,1,2,848,0,0,1,16,11,0,0,0,"2,00",1,1,2
"org.apache.pig.data.InternalCachedBag",17,14,47,61,848,2,2,4,110,104,0,19,2,"1,83",4,24,22
"org.apache.pig.data.InternalCachedBag.CachedBagIterator",4,4,4,8,848,0,0,2,65,64,0,0,0,"2,75",2,6,11
"org.apache.pig.data.InternalDistinctBag",10,11,47,58,848,3,2,3,100,82,0,20,2,"2,00",5,18,20
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator",7,5,8,13,848,0,0,2,260,180,0,0,0,"4,00",4,13,32
"org.apache.pig.data.InternalDistinctBag.DistinctDataBagIterator.TContainer",2,2,3,5,7,0,0,1,20,20,0,0,0,"1,33",3,3,4
"org.apache.pig.data.InternalMap",6,1,2,3,0,0,0,0,16,9,0,0,0,"1,00",0,2,2
"org.apache.pig.data.InternalSortedBag",10,12,48,60,848,3,2,4,88,67,0,20,2,"1,45",5,19,16
"org.apache.pig.data.InternalSortedBag.DefaultComparator",2,0,3,3,7,0,0,1,15,15,0,0,0,"1,00",3,3,3
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator",7,5,8,13,848,0,0,2,239,170,0,0,0,"3,62",4,13,29
"org.apache.pig.data.InternalSortedBag.SortedDataBagIterator.PQContainer",3,2,3,5,848,0,0,1,25,19,0,0,0,"1,33",3,3,4
"org.apache.pig.data.NonSpillableDataBag",21,2,30,32,848,0,2,7,190,134,0,0,0,"1,75",10,31,35
"org.apache.pig.data.NonSpillableDataBag.NonSpillableDataBagIterator",2,1,3,4,848,0,0,2,19,11,0,0,0,"1,33",2,4,4
"org.apache.pig.data.ReadOnceBag",9,4,26,30,848,0,2,13,164,104,1,0,0,"1,31",9,20,21
"org.apache.pig.data.ReadOnceBag.ReadOnceBagIterator",7,0,3,3,848,0,0,2,33,24,0,0,0,"1,00",2,6,3
"org.apache.pig.data.SchemaTuple",19,4,288,292,848,1,2,94,1.075,1.039,1,3,4,"1,46",191,273,290
"org.apache.pig.data.SchemaTuple.SchemaTupleQuickGenerator",2,0,1,1,0,0,0,1,3,3,0,0,0,n/a,1,1,0
"org.apache.pig.data.SchemaTupleBackend",22,10,12,22,848,0,0,1,233,168,0,0,0,"2,67",5,23,32
"org.apache.pig.data.SchemaTupleClassGenerator",9,2,7,9,848,0,0,1,77,44,0,0,0,"1,29",3,17,9
"org.apache.pig.data.SchemaTupleClassGenerator.CheckIfNullString",3,6,30,36,848,1,0,1,19,19,0,26,1,"3,00",0,4,3
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToSpecificString",3,5,33,38,848,1,0,3,27,27,0,24,3,"1,00",0,6,4
"org.apache.pig.data.SchemaTupleClassGenerator.CompareToString",3,9,33,42,848,1,0,3,29,28,0,24,3,"1,00",0,5,4
"org.apache.pig.data.SchemaTupleClassGenerator.FieldString",6,11,34,45,848,1,0,3,58,58,0,24,3,"2,00",1,15,10
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext",18,8,5,13,6,n/a,0,2,71,32,n/a,0,0,"1,20",4,5,6
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.GenerateForceLoad",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.GenerateForeach",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.GenerateFrJoin",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.GenerateMergeJoin",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.data.SchemaTupleClassGenerator.GenContext.GenerateUdf",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.data.SchemaTupleClassGenerator.GeneralIsNullString",3,4,32,36,848,1,0,3,18,18,0,24,3,"1,00",0,4,3
"org.apache.pig.data.SchemaTupleClassGenerator.GenericGetString",3,4,32,36,848,1,0,3,18,18,0,24,3,"1,00",0,4,3
"org.apache.pig.data.SchemaTupleClassGenerator.GenericSetString",3,4,32,36,848,1,0,3,25,25,0,24,3,"1,00",0,4,3
"org.apache.pig.data.SchemaTupleClassGenerator.GetDummyString",4,4,30,34,848,1,0,1,24,24,0,26,1,"15,00",0,4,15
"org.apache.pig.data.SchemaTupleClassGenerator.GetPosString",3,7,31,38,848,1,0,1,28,28,0,26,1,"2,50",0,7,5
"org.apache.pig.data.SchemaTupleClassGenerator.GetSchemaTupleIdentifierString",2,5,31,36,848,1,0,1,14,14,0,26,1,"1,00",0,4,2
"org.apache.pig.data.SchemaTupleClassGenerator.GetTypeString",3,4,32,36,848,1,0,3,19,19,0,24,3,"1,00",0,5,3
"org.apache.pig.data.SchemaTupleClassGenerator.HashCode",3,4,32,36,848,1,0,3,17,17,0,24,3,"1,00",0,4,3
"org.apache.pig.data.SchemaTupleClassGenerator.IsSpecificSchemaTuple",2,5,31,36,848,1,0,1,13,13,0,26,1,"1,00",0,3,2
"org.apache.pig.data.SchemaTupleClassGenerator.ListSetString",3,4,32,36,848,1,0,3,15,15,0,24,3,"1,00",0,4,3
"org.apache.pig.data.SchemaTupleClassGenerator.MemorySizeString",3,8,32,40,848,1,0,2,51,49,0,24,3,"4,33",0,19,13
"org.apache.pig.data.SchemaTupleClassGenerator.ReadString",3,6,33,39,848,1,0,2,53,53,0,24,3,"2,00",0,9,8
"org.apache.pig.data.SchemaTupleClassGenerator.SchemaSizeString",3,5,31,36,848,1,0,1,15,15,0,25,2,"1,00",0,4,2
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleSpecificString",3,5,33,38,848,1,0,3,27,26,0,24,3,"1,00",0,6,4
"org.apache.pig.data.SchemaTupleClassGenerator.SetEqualToSchemaTupleString",3,5,33,38,848,1,0,3,42,42,0,24,3,"1,25",0,8,5
"org.apache.pig.data.SchemaTupleClassGenerator.SetNullString",3,6,30,36,848,1,0,1,21,21,0,26,1,"3,00",0,4,3
"org.apache.pig.data.SchemaTupleClassGenerator.SetPosString",3,7,31,38,848,1,0,1,47,47,0,26,1,"3,00",0,8,6
"org.apache.pig.data.SchemaTupleClassGenerator.SizeString",3,5,32,37,848,1,0,1,18,18,0,25,2,"1,00",0,6,3
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareGetString",4,5,40,45,848,2,0,3,24,24,0,27,3,"1,25",0,9,5
"org.apache.pig.data.SchemaTupleClassGenerator.TypeAwareSetString",4,5,36,41,848,1,0,1,32,32,1,24,3,"1,14",3,10,8
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOut",29,4,29,33,848,0,0,5,120,120,25,0,0,"1,69",21,30,49
"org.apache.pig.data.SchemaTupleClassGenerator.TypeInFunctionStringOutFactory",31,4,3,7,848,0,0,1,127,126,0,0,0,"2,33",1,21,7
"org.apache.pig.data.SchemaTupleClassGenerator.WriteNullsString",3,5,33,38,848,1,0,2,25,23,0,24,3,"1,00",0,7,4
"org.apache.pig.data.SchemaTupleClassGenerator.WriteString",3,5,32,37,848,1,0,2,31,31,0,24,3,"2,00",0,6,6
"org.apache.pig.data.SchemaTupleFactory",17,4,12,16,848,0,1,5,91,53,0,0,0,"1,40",9,16,14
"org.apache.pig.data.SchemaTupleFrontend",14,4,7,11,848,0,0,1,125,89,0,0,0,"2,57",3,21,18
"org.apache.pig.data.SchemaTupleFrontend.SchemaTupleFrontendGenHelper",12,3,3,6,848,0,0,1,114,99,0,0,0,"3,67",1,11,11
"org.apache.pig.data.SelfSpillBag",6,8,35,43,848,1,2,0,15,12,2,21,0,"1,00",0,3,2
"org.apache.pig.data.SelfSpillBag.MemoryLimits",6,6,5,11,1,0,0,1,77,48,0,0,0,"2,20",2,5,11
"org.apache.pig.data.SingleTupleBag",8,2,27,29,848,0,2,10,133,82,0,0,0,"1,12",10,18,19
"org.apache.pig.data.SingleTupleBag.TBIterator",2,1,3,4,848,0,0,2,25,16,0,0,0,"1,00",2,3,3
"org.apache.pig.data.SizeUtil",9,1,3,4,848,0,0,1,86,64,0,0,0,"6,33",3,7,19
"org.apache.pig.data.SortedDataBag",11,11,38,49,848,1,2,4,99,66,0,21,0,"2,20",4,12,11
"org.apache.pig.data.SortedDataBag.DefaultComparator",2,0,3,3,7,0,0,1,15,15,0,0,0,"1,00",3,3,3
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator",7,5,8,13,848,0,0,2,306,207,0,0,0,"4,00",4,13,32
"org.apache.pig.data.SortedDataBag.SortedDataBagIterator.PQContainer",3,2,3,5,848,0,0,1,25,19,0,0,0,"1,33",3,3,4
"org.apache.pig.data.SortedSpillBag",7,8,37,45,848,2,2,1,75,52,2,21,0,"4,00",1,8,8
"org.apache.pig.data.TargetedTuple",4,4,36,40,849,1,1,1,118,104,0,3,4,"1,16",11,29,22
"org.apache.pig.data.TimestampedTuple",2,6,37,43,849,2,1,2,44,41,0,17,0,"1,50",2,7,9
"org.apache.pig.data.Tuple",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,10,n/a
"org.apache.pig.data.TupleFactory",151,1,13,14,848,0,1,9,142,70,1,0,0,"2,75",9,11,11
"org.apache.pig.data.TupleMaker",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.data.TupleRawComparator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.data.TypeAwareTuple",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,27,n/a
"org.apache.pig.data.UnlimitedNullTuple",3,0,26,26,848,1,1,9,38,38,0,7,0,"1,00",5,10,9
"org.apache.pig.data.WritableByteArray",6,0,5,5,1,0,0,2,45,18,0,0,0,"1,00",2,5,5
"org.apache.pig.data.utils.BytesHelper",0,2,2,4,0,0,0,1,14,14,0,0,0,"1,50",2,2,3
"org.apache.pig.data.utils.MethodHelper",3,0,4,4,2,0,0,1,55,41,0,0,0,"3,00",3,4,12
"org.apache.pig.data.utils.MethodHelper.NotImplemented",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.data.utils.SedesHelper",6,2,9,11,848,0,0,2,146,144,0,0,0,"4,56",4,17,41
"org.apache.pig.data.utils.SedesHelper.Varint",1,0,9,9,0,0,0,4,139,60,0,0,0,"1,67",4,9,15
"org.apache.pig.data.utils.StructuresHelper",0,0,1,1,0,0,0,0,4,4,0,0,0,"1,00",0,1,1
"org.apache.pig.data.utils.StructuresHelper.Pair",2,2,7,9,0,0,0,3,52,48,0,0,0,"1,86",6,7,13
"org.apache.pig.data.utils.StructuresHelper.SchemaKey",6,2,7,9,848,0,0,1,50,42,0,0,0,"1,57",6,10,11
"org.apache.pig.data.utils.StructuresHelper.Triple",1,3,8,11,0,0,0,4,66,66,0,0,0,"2,25",7,8,18
"org.apache.pig.impl.PigContext",151,35,65,100,848,0,0,11,704,543,0,0,0,"1,60",36,95,104
"org.apache.pig.impl.PigContext.ContextClassLoader",1,0,3,3,0,0,0,1,16,12,0,0,0,"1,00",0,3,3
"org.apache.pig.impl.PigImplConstants",13,8,1,9,0,0,0,0,37,14,0,0,0,"1,00",0,1,1
"org.apache.pig.impl.builtin.DefaultIndexableLoader",24,10,26,36,848,1,1,7,174,141,0,5,1,"2,23",5,34,29
"org.apache.pig.impl.builtin.FindQuantiles",18,16,31,47,848,1,0,1,182,131,1,22,0,"5,00",2,19,30
"org.apache.pig.impl.builtin.FindQuantiles.SortComparator",5,0,1,1,848,0,0,1,35,34,0,0,0,"9,00",1,4,9
"org.apache.pig.impl.builtin.FindQuantiles.State",2,3,0,3,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.impl.builtin.GFAny",3,8,28,36,849,1,0,1,16,13,0,22,0,"1,00",1,3,3
"org.apache.pig.impl.builtin.GFCross",10,15,30,45,848,1,0,1,69,69,0,22,0,"2,80",3,14,14
"org.apache.pig.impl.builtin.GFReplicate",6,8,28,36,850,1,0,1,17,17,0,22,0,"1,33",1,7,4
"org.apache.pig.impl.builtin.GetMemNumRows",7,6,28,34,848,1,0,2,39,26,0,21,1,"1,67",2,10,5
"org.apache.pig.impl.builtin.IdentityColumn",5,5,27,32,848,1,0,2,15,10,0,21,1,"1,00",2,3,2
"org.apache.pig.impl.builtin.IsFirstReduceOfKey",10,7,27,34,848,1,0,1,38,37,1,22,0,"3,00",1,9,6
"org.apache.pig.impl.builtin.PartitionSkewedKeys",18,17,31,48,848,1,0,1,220,174,1,22,0,"5,33",4,18,32
"org.apache.pig.impl.builtin.PoissonSampleLoader",12,15,26,41,848,2,0,1,132,93,0,15,1,"3,20",2,17,16
"org.apache.pig.impl.builtin.RandomSampleLoader",6,5,25,30,848,2,0,1,85,54,0,15,1,"3,25",2,9,13
"org.apache.pig.impl.builtin.ReadScalars",11,9,27,36,848,1,0,1,92,76,0,22,0,"5,00",1,14,10
"org.apache.pig.impl.builtin.SampleLoader",10,3,21,24,848,1,0,3,57,51,2,3,3,"1,00",5,18,11
"org.apache.pig.impl.builtin.StreamingUDF",27,43,39,82,859,1,0,1,298,274,0,21,1,"2,50",8,46,35
"org.apache.pig.impl.builtin.StreamingUDF.ProcessErrorThread",2,0,2,2,859,0,0,1,40,38,0,0,0,"3,00",0,2,6
"org.apache.pig.impl.builtin.StreamingUDF.ProcessInputThread",3,0,2,2,859,0,0,1,24,21,0,0,0,"1,50",0,3,3
"org.apache.pig.impl.builtin.StreamingUDF.ProcessKiller",1,0,1,1,859,0,0,1,5,5,0,0,0,"1,00",0,1,1
"org.apache.pig.impl.builtin.StreamingUDF.ProcessOutputThread",4,0,2,2,859,0,0,1,45,37,0,0,0,"3,50",0,4,7
"org.apache.pig.impl.io.BinStorageInputFormat",4,0,2,2,850,1,0,1,14,8,0,1,0,"1,00",1,1,1
"org.apache.pig.impl.io.BinStorageOutputFormat",3,0,1,1,850,0,0,1,18,12,0,0,0,"1,00",1,2,1
"org.apache.pig.impl.io.BinStorageRecordReader",7,9,6,15,849,0,0,2,101,84,0,0,0,"3,33",4,11,20
"org.apache.pig.impl.io.BinStorageRecordWriter",4,4,3,7,849,0,0,1,39,23,0,0,0,"1,00",0,4,3
"org.apache.pig.impl.io.BufferedPositionedInputStream",7,7,8,15,1,0,0,1,129,111,0,0,0,"2,88",5,8,23
"org.apache.pig.impl.io.FileLocalizer",40,9,39,48,848,0,0,3,645,501,0,0,0,"2,36",34,71,92
"org.apache.pig.impl.io.FileLocalizer.DataStorageInputStreamIterator",3,3,9,12,12,0,0,1,71,71,0,0,0,"2,22",6,10,20
"org.apache.pig.impl.io.FileLocalizer.FetchFileRet",5,2,1,3,0,0,0,0,8,8,0,0,0,"1,00",0,1,1
"org.apache.pig.impl.io.FileSpec",63,3,8,11,848,0,0,3,43,39,0,0,0,"1,38",7,11,11
"org.apache.pig.impl.io.InterRecordReader",8,10,6,16,848,0,0,2,104,86,0,0,0,"3,33",4,13,20
"org.apache.pig.impl.io.InterRecordWriter",5,5,3,8,848,0,0,1,41,24,0,0,0,"1,00",0,5,3
"org.apache.pig.impl.io.InterStorage",18,4,44,48,848,2,3,15,103,92,0,7,0,"1,05",8,25,20
"org.apache.pig.impl.io.InterStorage.InterInputFormat",4,0,2,2,848,1,0,1,11,8,0,1,0,"1,00",1,1,1
"org.apache.pig.impl.io.InterStorage.InterOutputFormat",3,0,1,1,848,0,0,1,15,12,0,0,0,"1,00",1,2,1
"org.apache.pig.impl.io.NullableBag",4,4,15,19,848,1,0,1,21,15,0,11,0,"1,67",1,6,5
"org.apache.pig.impl.io.NullableBigDecimalWritable",7,3,15,18,848,1,0,1,12,12,0,11,0,"1,33",1,7,4
"org.apache.pig.impl.io.NullableBigIntegerWritable",7,3,15,18,848,1,0,1,12,12,0,11,0,"1,33",1,7,4
"org.apache.pig.impl.io.NullableBooleanWritable",6,3,15,18,8,1,0,1,17,11,0,11,0,"1,33",1,4,4
"org.apache.pig.impl.io.NullableBytesWritable",9,4,15,19,848,1,0,1,30,24,0,11,0,"1,33",1,9,4
"org.apache.pig.impl.io.NullableDateTimeWritable",7,3,15,18,10,1,0,1,11,11,0,11,0,"1,33",1,7,4
"org.apache.pig.impl.io.NullableDoubleWritable",7,3,15,18,10,1,0,1,17,11,0,11,0,"1,33",1,7,4
"org.apache.pig.impl.io.NullableFloatWritable",6,3,15,18,8,1,0,1,17,11,0,11,0,"1,33",1,4,4
"org.apache.pig.impl.io.NullableIntWritable",6,3,15,18,8,1,0,1,17,11,0,11,0,"1,33",1,4,4
"org.apache.pig.impl.io.NullableLongWritable",6,3,15,18,8,1,0,1,17,11,0,11,0,"1,33",1,4,4
"org.apache.pig.impl.io.NullablePartitionWritable",32,5,29,34,848,1,0,2,79,75,0,1,10,"1,00",9,29,17
"org.apache.pig.impl.io.NullableText",6,3,16,19,8,1,0,1,23,14,0,11,0,"1,25",1,5,5
"org.apache.pig.impl.io.NullableTuple",37,5,17,22,848,1,0,1,33,27,0,10,1,"1,40",1,10,7
"org.apache.pig.impl.io.NullableUnknownWritable",2,3,15,18,8,1,0,1,15,11,0,11,0,"1,33",1,4,4
"org.apache.pig.impl.io.PigFile",13,2,5,7,849,0,0,1,60,58,0,0,0,"1,60",2,22,8
"org.apache.pig.impl.io.PigNullableWritable",65,5,12,17,7,0,0,2,148,86,14,0,0,"2,36",8,14,26
"org.apache.pig.impl.io.ReadToEndLoader",21,11,32,43,848,1,1,4,262,180,0,4,2,"1,78",8,30,32
"org.apache.pig.impl.io.ResourceNotFoundException",2,2,2,4,0,0,0,0,13,13,0,0,0,"1,00",1,2,2
"org.apache.pig.impl.io.SequenceFileInterStorage",14,5,43,48,848,2,3,15,112,103,0,7,0,"1,06",7,22,19
"org.apache.pig.impl.io.SequenceFileInterStorage.SequenceFileTupleOutputFormat",2,0,2,2,848,0,0,1,43,40,0,0,0,"1,25",2,2,5
"org.apache.pig.impl.io.TFileRecordReader",5,7,6,13,848,0,0,2,75,61,0,0,0,"1,83",4,8,11
"org.apache.pig.impl.io.TFileRecordWriter",5,4,3,7,848,0,0,1,54,37,0,0,0,"1,67",0,5,5
"org.apache.pig.impl.io.TFileStorage",16,4,44,48,848,2,3,15,104,94,0,7,0,"1,05",8,25,20
"org.apache.pig.impl.io.TFileStorage.TFileInputFormat",4,0,2,2,848,1,0,1,12,9,0,1,0,"1,00",1,1,1
"org.apache.pig.impl.io.TFileStorage.TFileOutputFormat",4,0,1,1,848,0,0,1,23,20,0,0,0,"3,00",1,2,3
"org.apache.pig.impl.logicalLayer.CanonicalNamer",2,2,1,3,1,0,0,1,10,7,0,0,0,"1,00",1,3,1
"org.apache.pig.impl.logicalLayer.FrontendException",278,7,52,59,9,1,0,0,216,69,5,13,0,"1,00",0,36,20
"org.apache.pig.impl.logicalLayer.schema.Schema",165,7,46,53,848,0,0,1,1.262,907,0,0,0,"4,39",32,76,202
"org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema",154,7,16,23,848,0,0,1,431,267,0,0,0,"4,06",11,32,65
"org.apache.pig.impl.logicalLayer.schema.SchemaMergeException",4,7,64,71,10,2,0,0,125,43,0,13,0,"1,00",0,24,12
"org.apache.pig.impl.logicalLayer.schema.SchemaUtil",4,1,15,16,849,0,0,7,225,117,0,0,0,"1,33",13,20,20
"org.apache.pig.impl.logicalLayer.validators.TypeCheckerException",4,7,82,89,11,3,0,0,148,50,0,13,0,"1,00",0,28,14
"org.apache.pig.impl.plan.CompilationMessageCollector",16,1,16,17,4,0,0,1,117,108,0,0,0,"2,12",7,20,34
"org.apache.pig.impl.plan.CompilationMessageCollector.Message",2,3,5,8,1,0,0,3,22,22,0,0,0,"1,00",3,5,5
"org.apache.pig.impl.plan.CompilationMessageCollector.MessageType",11,4,0,4,0,n/a,0,0,6,6,n/a,0,0,n/a,0,0,0
"org.apache.pig.impl.plan.CompilationMessageCollector.Unknown",1,1,1,2,0,n/a,0,0,6,6,n/a,0,0,"1,00",1,1,1
"org.apache.pig.impl.plan.DependencyOrderWalker",35,2,10,12,848,1,0,1,76,46,0,2,0,"2,40",1,11,12
"org.apache.pig.impl.plan.DepthFirstWalker",53,1,9,10,848,1,0,2,42,28,0,2,0,"1,75",1,10,7
"org.apache.pig.impl.plan.DotPlanDumper",9,7,40,47,848,1,0,1,246,233,3,11,7,"1,73",9,36,45
"org.apache.pig.impl.plan.MapKeysInfo",1,2,7,9,0,0,0,2,45,45,0,0,0,"1,57",3,7,11
"org.apache.pig.impl.plan.NodeIdGenerator",60,2,5,7,0,0,0,1,27,27,0,0,0,"1,20",2,5,6
"org.apache.pig.impl.plan.Operator",135,2,15,17,848,0,0,7,136,55,5,0,0,"1,18",11,20,13
"org.apache.pig.impl.plan.OperatorKey",137,3,10,13,1,0,0,3,64,59,0,0,0,"1,40",8,12,14
"org.apache.pig.impl.plan.OperatorPlan",106,10,46,56,848,0,0,1,1.273,895,5,0,0,"4,65",19,66,214
"org.apache.pig.impl.plan.OperatorPlan.IndexHelper",1,1,2,3,0,0,0,1,20,17,0,0,0,"3,00",1,2,6
"org.apache.pig.impl.plan.PlanDumper",8,3,14,17,848,0,0,1,169,101,1,0,0,"2,07",5,21,29
"org.apache.pig.impl.plan.PlanException",42,7,64,71,10,2,0,0,124,43,0,13,0,"1,00",0,24,12
"org.apache.pig.impl.plan.PlanValidationException",7,7,83,90,11,3,0,0,152,52,0,13,0,"1,00",0,30,15
"org.apache.pig.impl.plan.PlanVisitor",68,3,5,8,848,0,0,2,55,26,5,0,0,"1,20",1,7,6
"org.apache.pig.impl.plan.PlanWalker",20,1,5,6,848,0,0,3,41,15,3,0,0,"1,00",2,5,3
"org.apache.pig.impl.plan.ProjectionMap",4,4,13,17,848,0,0,4,146,58,0,0,0,"1,00",6,13,13
"org.apache.pig.impl.plan.ProjectionMap.Column",3,3,7,10,848,0,0,3,82,35,0,0,0,"1,14",5,8,8
"org.apache.pig.impl.plan.RequiredFields",2,4,22,26,2,0,0,1,340,197,0,0,0,"2,55",9,24,56
"org.apache.pig.impl.plan.ReverseDependencyOrderWalker",9,1,9,10,848,1,0,2,62,36,0,2,0,"2,50",1,10,10
"org.apache.pig.impl.plan.VisitorException",191,7,68,75,10,2,0,0,167,56,6,13,0,"1,00",0,32,16
"org.apache.pig.impl.plan.optimizer.OptimizerException",8,7,80,87,11,3,0,0,124,43,0,13,0,"1,00",0,24,12
"org.apache.pig.impl.streaming.DefaultInputHandler",8,4,8,12,848,1,0,2,32,22,1,2,1,"1,25",1,7,5
"org.apache.pig.impl.streaming.DefaultOutputHandler",8,8,11,19,848,1,0,1,17,12,1,4,0,"1,00",1,5,3
"org.apache.pig.impl.streaming.ExecutableManager",21,21,8,29,848,0,0,2,214,128,1,0,0,"2,25",0,24,18
"org.apache.pig.impl.streaming.ExecutableManager.ProcessErrorThread",1,0,2,2,848,0,0,1,32,31,0,0,0,"2,50",0,3,5
"org.apache.pig.impl.streaming.ExecutableManager.ProcessInputThread",8,4,2,6,848,0,0,1,110,68,0,0,0,"4,50",0,12,9
"org.apache.pig.impl.streaming.ExecutableManager.ProcessOutputThread",7,2,3,5,848,0,0,1,89,71,0,0,0,"2,00",0,11,6
"org.apache.pig.impl.streaming.FileInputHandler",8,5,8,13,848,1,0,3,38,33,0,1,2,"1,25",1,7,5
"org.apache.pig.impl.streaming.FileOutputHandler",8,9,11,20,848,1,0,2,28,20,0,3,1,"1,00",1,6,3
"org.apache.pig.impl.streaming.HandlerFactory",11,0,2,2,848,0,0,1,42,22,0,0,0,"3,00",2,9,6
"org.apache.pig.impl.streaming.InputHandler",13,4,4,8,848,0,0,2,74,29,2,0,0,"2,00",1,8,6
"org.apache.pig.impl.streaming.InputHandler.InputType",5,2,0,2,0,n/a,0,0,4,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.impl.streaming.OutputHandler",14,10,8,18,848,0,0,2,128,85,2,0,0,"2,71",6,11,19
"org.apache.pig.impl.streaming.OutputHandler.OutputType",4,2,0,2,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.impl.streaming.PigStreamingUDF",19,7,19,26,849,1,2,2,149,147,0,2,0,"3,27",9,35,36
"org.apache.pig.impl.streaming.StreamingCommand",19,12,25,37,848,0,0,8,331,174,0,0,0,"1,56",13,28,39
"org.apache.pig.impl.streaming.StreamingCommand.Handle",4,2,0,2,0,n/a,0,0,4,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.impl.streaming.StreamingCommand.HandleSpec",11,3,11,14,848,0,0,2,97,48,0,0,0,"1,09",7,11,12
"org.apache.pig.impl.streaming.StreamingDelimiters",3,23,16,39,1,0,0,13,130,105,0,0,0,"1,38",14,16,22
"org.apache.pig.impl.streaming.StreamingUDFException",4,10,66,76,6,3,0,3,46,45,0,12,1,"1,20",4,11,12
"org.apache.pig.impl.streaming.StreamingUDFInputHandler",4,4,9,13,849,2,0,0,5,5,0,5,0,"1,00",0,1,1
"org.apache.pig.impl.streaming.StreamingUDFOutputHandler",4,8,13,21,850,2,0,1,9,9,0,4,1,"1,00",1,3,2
"org.apache.pig.impl.streaming.StreamingUDFOutputSchemaException",1,2,2,4,0,0,0,1,11,11,0,0,0,"1,00",1,2,2
"org.apache.pig.impl.streaming.StreamingUtil",5,3,4,7,848,0,0,1,84,69,0,0,0,"3,00",1,7,12
"org.apache.pig.impl.util.BagFormat",4,0,1,1,848,0,0,1,16,16,0,0,0,"3,00",1,3,3
"org.apache.pig.impl.util.CastUtils",8,3,6,9,848,0,0,3,166,145,0,0,0,"4,83",6,20,29
"org.apache.pig.impl.util.CompilerUtils",28,0,1,1,848,0,0,1,102,66,0,0,0,"3,00",0,32,3
"org.apache.pig.impl.util.ConfigurationValidator",3,1,3,4,2,0,0,1,46,33,0,0,0,"1,67",1,3,5
"org.apache.pig.impl.util.GroupingSpillable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,0,n/a
"org.apache.pig.impl.util.HashOutputStream",1,1,3,4,0,0,0,1,13,13,0,0,0,"1,00",1,3,3
"org.apache.pig.impl.util.IdentityHashSet",12,1,14,15,0,0,0,3,97,97,0,0,0,"1,65",13,14,28
"org.apache.pig.impl.util.JarManager",10,1,8,9,848,0,0,2,225,161,0,0,0,"4,12",4,12,33
"org.apache.pig.impl.util.JarManager.DefaultPigPackages",1,7,2,9,0,n/a,0,1,15,15,n/a,0,0,"1,00",1,2,2
"org.apache.pig.impl.util.JavaCompilerHelper",2,2,4,6,1,0,0,1,32,31,0,0,0,"1,50",1,4,6
"org.apache.pig.impl.util.JavaCompilerHelper.JavaSourceFromString",2,1,2,3,0,0,0,1,15,11,0,0,0,"1,00",1,2,2
"org.apache.pig.impl.util.LineageTracer",2,3,8,11,8,0,0,1,88,77,0,0,0,"2,62",5,10,21
"org.apache.pig.impl.util.LinkedMultiMap",2,2,17,19,1,1,0,0,16,9,0,13,0,"1,00",0,2,2
"org.apache.pig.impl.util.LogUtils",14,0,6,6,848,0,0,3,163,161,0,0,0,"5,83",2,10,35
"org.apache.pig.impl.util.MultiMap",42,2,15,17,0,0,0,1,161,100,2,0,0,"1,67",10,15,25
"org.apache.pig.impl.util.NumValCarrier",2,1,2,3,850,0,0,1,27,27,0,0,0,"1,00",1,3,2
"org.apache.pig.impl.util.NumValCarrier.ValCarrier",1,2,2,4,0,0,0,1,10,10,0,0,0,"1,00",1,2,2
"org.apache.pig.impl.util.ObjectSerializer",46,0,4,4,0,0,0,2,37,37,0,0,0,"1,75",4,4,7
"org.apache.pig.impl.util.Pair",54,3,4,7,0,0,0,0,57,47,0,0,0,"3,25",3,4,13
"org.apache.pig.impl.util.PropertiesUtil",5,3,5,8,2,0,0,1,120,86,0,0,0,"3,20",1,6,16
"org.apache.pig.impl.util.RewindableIterator",0,4,6,10,0,0,0,1,46,45,0,0,0,"2,17",3,6,13
"org.apache.pig.impl.util.Spillable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.impl.util.SpillableMemoryManager",9,15,7,22,6,0,0,1,311,231,0,0,0,"4,38",1,14,35
"org.apache.pig.impl.util.SpillableMemoryManager.SpillablePtr",2,2,3,5,1,0,0,2,14,14,0,0,0,"1,00",2,3,3
"org.apache.pig.impl.util.StorageUtil",12,2,9,11,848,0,0,3,245,206,0,0,0,"5,22",4,28,47
"org.apache.pig.impl.util.StringUtils",2,0,3,3,0,0,0,3,123,115,0,0,0,"9,00",3,3,27
"org.apache.pig.impl.util.TupleFormat",7,1,1,2,848,0,0,1,48,36,0,0,0,"7,00",1,5,7
"org.apache.pig.impl.util.UDFContext",38,6,17,23,6,0,0,2,200,99,0,0,0,"1,16",9,22,22
"org.apache.pig.impl.util.UDFContext.UDFContextKey",1,3,4,7,0,0,0,0,49,38,0,0,0,"3,00",2,4,12
"org.apache.pig.impl.util.UriUtil",4,0,2,2,0,0,0,2,16,16,0,0,0,"2,50",2,2,5
"org.apache.pig.impl.util.Utils",87,5,32,37,848,0,0,20,498,369,0,0,0,"2,53",28,65,86
"org.apache.pig.impl.util.Utils.TEMPFILE_CODEC",2,6,3,9,0,n/a,0,2,17,17,n/a,0,0,"1,00",2,3,3
"org.apache.pig.impl.util.Utils.TEMPFILE_STORAGE",6,5,5,10,848,n/a,0,3,48,48,n/a,0,0,"1,40",4,6,7
"org.apache.pig.impl.util.WrappedIOException",0,0,2,2,0,0,0,1,22,13,0,0,0,"1,00",2,2,2
"org.apache.pig.impl.util.avro.AvroArrayReader",1,5,7,12,0,0,0,2,83,70,0,0,0,"1,43",4,7,10
"org.apache.pig.impl.util.avro.AvroBagWrapper",5,2,24,26,852,0,2,8,72,60,0,0,0,"1,27",7,15,19
"org.apache.pig.impl.util.avro.AvroMapWrapper",1,2,13,15,852,0,0,1,106,94,0,0,0,"1,50",10,14,21
"org.apache.pig.impl.util.avro.AvroRecordReader",1,5,7,12,0,0,0,2,79,66,0,0,0,"1,43",4,7,10
"org.apache.pig.impl.util.avro.AvroRecordWriter",3,4,5,9,851,0,0,1,76,61,1,0,0,"2,60",0,6,13
"org.apache.pig.impl.util.avro.AvroStorageDataConversionUtilities",7,0,5,5,850,0,0,1,105,85,0,0,0,"4,00",5,12,20
"org.apache.pig.impl.util.avro.AvroStorageSchemaConversionUtilities",9,1,14,15,849,0,0,2,571,456,0,0,0,"7,07",14,33,99
"org.apache.pig.impl.util.avro.AvroTupleWrapper",8,2,27,29,852,0,1,3,224,208,0,0,0,"3,11",11,21,56
"org.apache.pig.impl.util.hive.HiveUtils",35,1,6,7,862,0,0,2,360,355,0,0,0,"15,33",6,41,92
"org.apache.pig.impl.util.hive.HiveUtils.Field",2,3,5,8,0,0,0,4,26,26,0,0,0,"1,00",4,5,5
"org.apache.pig.impl.util.hive.HiveUtils.PigDataByteArrayObjectInspector",2,0,3,3,849,0,0,2,16,16,0,0,0,"1,67",2,4,5
"org.apache.pig.impl.util.hive.HiveUtils.PigDecimalObjectInspector",1,0,3,3,0,0,0,2,22,22,0,0,0,"3,00",2,3,9
"org.apache.pig.impl.util.hive.HiveUtils.PigJodaTimeStampObjectInspector",1,0,3,3,0,0,0,2,14,14,0,0,0,"1,67",2,3,5
"org.apache.pig.impl.util.hive.HiveUtils.PigListObjectInspector",4,4,8,12,862,0,0,5,79,78,0,0,0,"1,88",7,13,15
"org.apache.pig.impl.util.hive.HiveUtils.PigMapObjectInspector",1,2,9,11,862,0,0,5,47,47,0,0,0,"1,22",8,10,11
"org.apache.pig.impl.util.hive.HiveUtils.PigStructInspector",4,1,9,10,862,0,0,4,85,85,0,0,0,"2,11",7,13,19
"org.apache.pig.newplan.BaseOperatorPlan",86,8,50,58,12,0,1,3,448,330,4,0,0,"2,77",15,46,83
"org.apache.pig.newplan.DependencyOrderWalker",36,1,9,10,848,1,0,2,60,36,1,2,0,"2,50",1,10,10
"org.apache.pig.newplan.DepthFirstWalker",12,1,9,10,848,1,0,2,36,28,0,2,0,"1,75",1,10,7
"org.apache.pig.newplan.DotPlanDumper",6,7,41,48,15,1,0,1,268,255,1,6,7,"1,85",10,36,50
"org.apache.pig.newplan.FilterExtractor",38,6,19,25,848,0,0,1,316,238,2,0,0,"3,88",16,37,62
"org.apache.pig.newplan.FilterExtractor.KeyState",4,2,0,2,848,0,0,0,4,4,0,0,0,n/a,0,0,0
"org.apache.pig.newplan.Operator",142,5,11,16,9,0,0,6,71,39,4,0,0,"1,00",6,12,9
"org.apache.pig.newplan.OperatorPlan",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,20,n/a
"org.apache.pig.newplan.OperatorSubPlan",19,4,42,46,13,0,1,11,147,140,1,0,0,"1,64",12,27,36
"org.apache.pig.newplan.PartitionFilterExtractor",9,7,23,30,848,1,0,3,45,29,0,12,0,"1,25",3,7,5
"org.apache.pig.newplan.PlanDumper",6,3,14,17,14,0,0,1,171,103,1,0,0,"2,07",5,22,29
"org.apache.pig.newplan.PlanEdge",4,2,20,22,11,1,0,1,77,53,0,13,0,"2,60",2,8,13
"org.apache.pig.newplan.PlanVisitor",102,4,5,9,9,0,0,2,56,27,4,0,0,"1,20",1,7,6
"org.apache.pig.newplan.PlanWalker",23,1,5,6,9,0,0,3,37,14,5,0,0,"1,00",2,5,3
"org.apache.pig.newplan.PredicatePushDownFilterExtractor",27,8,24,32,848,1,0,2,87,76,0,11,1,"5,00",3,9,25
"org.apache.pig.newplan.ReverseDependencyOrderWalker",22,1,9,10,848,1,0,2,56,36,0,2,0,"2,50",1,10,10
"org.apache.pig.newplan.ReverseDependencyOrderWalkerWOSeenChk",9,1,9,10,848,1,0,2,50,31,0,2,0,"2,25",1,11,9
"org.apache.pig.newplan.SubtreeDependencyOrderWalker",6,2,12,14,848,2,0,1,19,18,0,4,1,"1,33",0,6,4
"org.apache.pig.newplan.logical.DotLOPrinter",18,7,49,56,848,2,0,5,107,102,0,17,6,"2,88",6,29,23
"org.apache.pig.newplan.logical.Util",26,0,7,7,848,0,0,3,124,98,0,0,0,"2,43",7,33,17
"org.apache.pig.newplan.logical.Util.OpFinder",25,5,47,52,848,2,0,1,92,92,0,4,19,"1,05",1,24,23
"org.apache.pig.newplan.logical.expression.AddExpression",16,7,28,35,848,3,0,4,53,40,0,16,0,"1,60",3,17,8
"org.apache.pig.newplan.logical.expression.AllSameExpressionVisitor",33,3,57,60,848,2,0,1,106,102,4,5,24,"1,00",0,27,25
"org.apache.pig.newplan.logical.expression.AndExpression",19,7,28,35,848,3,0,4,53,40,0,16,0,"1,60",3,16,8
"org.apache.pig.newplan.logical.expression.BinCondExpression",14,7,28,35,848,2,0,2,84,58,0,14,0,"1,38",6,22,11
"org.apache.pig.newplan.logical.expression.BinaryExpression",24,7,23,30,848,2,0,1,39,17,14,14,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.expression.CastExpression",22,9,29,38,848,3,0,3,70,61,0,15,0,"1,71",4,22,12
"org.apache.pig.newplan.logical.expression.ColumnExpression",6,7,21,28,848,2,0,0,14,5,4,14,0,"1,00",0,2,1
"org.apache.pig.newplan.logical.expression.ConstantExpression",27,9,29,38,848,3,0,2,84,66,0,14,0,"1,62",4,19,13
"org.apache.pig.newplan.logical.expression.DereferenceExpression",18,9,35,44,848,3,0,2,194,169,0,13,1,"2,71",8,37,38
"org.apache.pig.newplan.logical.expression.DivideExpression",16,7,28,35,848,3,0,4,53,40,0,16,0,"1,60",3,17,8
"org.apache.pig.newplan.logical.expression.EqualExpression",17,7,28,35,848,3,0,4,55,42,0,16,0,"1,60",3,16,8
"org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor",85,9,61,70,848,2,0,2,406,384,0,5,24,"1,70",1,126,51
"org.apache.pig.newplan.logical.expression.GreaterThanEqualExpression",17,7,28,35,848,3,0,4,50,40,0,16,0,"1,60",3,16,8
"org.apache.pig.newplan.logical.expression.GreaterThanExpression",17,7,28,35,848,3,0,4,50,40,0,16,0,"1,60",3,16,8
"org.apache.pig.newplan.logical.expression.IsNullExpression",16,7,27,34,848,3,0,4,37,37,0,15,0,"1,60",3,15,8
"org.apache.pig.newplan.logical.expression.LessThanEqualExpression",17,7,28,35,848,3,0,4,50,40,0,16,0,"1,60",3,16,8
"org.apache.pig.newplan.logical.expression.LessThanExpression",18,7,28,35,848,3,0,4,50,40,0,16,0,"1,60",3,16,8
"org.apache.pig.newplan.logical.expression.LogicalExpression",68,8,22,30,848,1,0,4,89,49,5,8,0,"1,33",6,14,12
"org.apache.pig.newplan.logical.expression.LogicalExpressionPlan",90,7,52,59,848,1,1,4,61,53,0,23,2,"2,75",3,14,11
"org.apache.pig.newplan.logical.expression.LogicalExpressionVisitor",54,3,31,34,848,1,0,24,65,62,17,4,0,"1,04",0,28,27
"org.apache.pig.newplan.logical.expression.MapLookupExpression",18,8,29,37,848,3,0,2,102,93,0,13,1,"2,50",6,24,20
"org.apache.pig.newplan.logical.expression.ModExpression",16,7,28,35,848,3,0,4,53,40,0,16,0,"1,60",3,17,8
"org.apache.pig.newplan.logical.expression.MultiplyExpression",16,7,28,35,848,3,0,4,53,40,0,16,0,"1,60",3,17,8
"org.apache.pig.newplan.logical.expression.NegativeExpression",13,7,27,34,848,3,0,4,38,38,0,15,0,"1,60",3,17,8
"org.apache.pig.newplan.logical.expression.NotEqualExpression",17,7,28,35,848,3,0,4,53,40,0,16,0,"1,60",3,16,8
"org.apache.pig.newplan.logical.expression.NotExpression",18,7,27,34,848,3,0,4,37,37,0,15,0,"1,60",3,15,8
"org.apache.pig.newplan.logical.expression.OrExpression",18,7,28,35,848,3,0,4,54,40,0,16,0,"1,60",3,16,8
"org.apache.pig.newplan.logical.expression.ProjectExpression",55,17,51,68,848,3,0,2,470,370,0,12,2,"2,83",17,62,85
"org.apache.pig.newplan.logical.expression.RegexExpression",17,7,28,35,848,3,0,4,53,40,0,16,0,"1,60",3,16,8
"org.apache.pig.newplan.logical.expression.ScalarExpression",22,19,48,67,848,3,0,2,95,89,0,21,4,"1,90",5,27,19
"org.apache.pig.newplan.logical.expression.SubtractExpression",16,7,28,35,848,3,0,4,53,40,0,16,0,"1,60",3,17,8
"org.apache.pig.newplan.logical.expression.UnaryExpression",16,7,22,29,848,2,0,1,32,16,4,14,0,"1,50",1,6,3
"org.apache.pig.newplan.logical.expression.UserFuncExpression",41,17,38,55,848,2,0,2,317,293,1,13,1,"3,61",10,63,65
"org.apache.pig.newplan.logical.optimizer.AllExpressionVisitor",31,4,39,43,848,2,0,1,105,86,9,12,11,"1,31",1,35,17
"org.apache.pig.newplan.logical.optimizer.AllSameRalationalNodesVisitor",24,3,44,47,848,2,0,1,88,74,2,6,17,"1,00",0,20,18
"org.apache.pig.newplan.logical.optimizer.ExpressionUidResetter",6,3,59,62,848,3,0,1,9,9,0,53,0,"1,00",0,5,2
"org.apache.pig.newplan.logical.optimizer.FieldSchemaResetter",6,3,59,62,848,3,0,1,10,10,0,53,0,"1,00",0,6,2
"org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer",24,9,8,17,848,1,0,2,161,115,0,2,0,"4,20",1,25,21
"org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer.RulesReportKey",1,2,0,2,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.newplan.logical.optimizer.LogicalPlanPrinter",17,12,13,25,848,1,0,1,139,129,0,3,1,"4,12",0,24,33
"org.apache.pig.newplan.logical.optimizer.ProjectionPatcher",6,0,2,2,848,0,1,1,15,8,0,0,0,"1,00",0,3,1
"org.apache.pig.newplan.logical.optimizer.ProjectionPatcher.ProjectionFinder",8,4,41,45,848,3,0,1,9,9,0,34,0,"1,00",1,5,2
"org.apache.pig.newplan.logical.optimizer.ProjectionPatcher.ProjectionRewriter",11,3,33,36,848,2,0,1,41,33,0,28,1,"4,00",0,14,8
"org.apache.pig.newplan.logical.optimizer.SchemaPatcher",6,0,2,2,848,0,1,1,19,7,0,0,0,"1,00",0,3,1
"org.apache.pig.newplan.logical.optimizer.SchemaResetter",38,4,47,51,848,2,0,2,166,156,0,5,18,"1,32",0,66,29
"org.apache.pig.newplan.logical.optimizer.UidResetter",31,3,43,46,848,2,0,17,113,113,0,6,17,"1,33",0,45,24
"org.apache.pig.newplan.logical.relational.LOCogroup",41,18,46,64,848,2,0,3,240,199,0,22,1,"2,71",8,41,46
"org.apache.pig.newplan.logical.relational.LOCogroup.GROUPTYPE",4,3,0,3,0,n/a,0,0,8,5,n/a,0,0,n/a,0,0,0
"org.apache.pig.newplan.logical.relational.LOCross",28,13,36,49,848,2,0,3,71,68,0,23,0,"2,43",4,20,17
"org.apache.pig.newplan.logical.relational.LOCube",18,13,40,53,848,2,0,6,119,64,0,22,1,"1,45",5,19,16
"org.apache.pig.newplan.logical.relational.LODistinct",25,12,34,46,848,2,0,4,34,33,0,23,0,"1,60",3,12,8
"org.apache.pig.newplan.logical.relational.LOFilter",45,14,40,54,848,2,0,5,57,57,0,23,0,"1,27",5,19,14
"org.apache.pig.newplan.logical.relational.LOForEach",59,13,37,50,848,2,0,3,80,74,0,23,0,"2,38",5,21,19
"org.apache.pig.newplan.logical.relational.LOForEach.NestedRelationalOperatorFinder",6,5,47,52,848,3,0,1,16,16,0,40,0,"1,33",1,6,4
"org.apache.pig.newplan.logical.relational.LOGenerate",46,16,47,63,848,2,0,2,241,219,0,20,3,"3,50",8,35,63
"org.apache.pig.newplan.logical.relational.LOInnerLoad",38,14,42,56,848,2,0,3,134,120,0,20,3,"2,23",7,38,29
"org.apache.pig.newplan.logical.relational.LOJoin",44,16,46,62,848,2,0,4,159,137,0,22,1,"2,35",10,34,40
"org.apache.pig.newplan.logical.relational.LOJoin.JOINTYPE",9,5,0,5,0,n/a,0,0,10,7,n/a,0,0,n/a,0,0,0
"org.apache.pig.newplan.logical.relational.LOLimit",35,15,40,55,848,2,0,4,58,58,0,23,0,"1,36",5,19,15
"org.apache.pig.newplan.logical.relational.LOLoad",52,23,54,77,848,2,0,7,232,185,0,21,2,"1,84",15,49,46
"org.apache.pig.newplan.logical.relational.LOLoad.CastState",3,3,0,3,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.newplan.logical.relational.LONative",15,13,37,50,848,2,0,3,109,52,0,23,0,"2,12",4,12,17
"org.apache.pig.newplan.logical.relational.LORank",27,18,42,60,848,2,0,6,153,92,0,23,0,"1,69",6,26,22
"org.apache.pig.newplan.logical.relational.LOSort",44,16,49,65,848,2,0,3,158,147,0,23,0,"1,90",12,41,38
"org.apache.pig.newplan.logical.relational.LOSplit",27,11,33,44,848,2,0,3,29,29,0,23,0,"1,75",2,10,7
"org.apache.pig.newplan.logical.relational.LOSplitOutput",36,13,39,52,848,2,0,3,72,71,0,22,1,"1,90",4,20,19
"org.apache.pig.newplan.logical.relational.LOStore",38,17,43,60,848,2,0,8,77,72,0,23,0,"1,36",9,21,19
"org.apache.pig.newplan.logical.relational.LOStream",26,17,40,57,848,2,0,5,82,70,0,22,1,"1,64",7,22,18
"org.apache.pig.newplan.logical.relational.LOStream.CastState",2,3,0,3,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.newplan.logical.relational.LOUnion",33,13,42,55,848,2,0,4,183,171,0,22,1,"3,23",8,31,42
"org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor",99,9,55,64,848,2,0,1,1.446,1.290,0,6,17,"4,03",7,237,121
"org.apache.pig.newplan.logical.relational.LogicalPlan",103,7,56,63,848,1,1,6,180,140,0,23,2,"2,88",3,49,23
"org.apache.pig.newplan.logical.relational.LogicalPlanData",8,4,9,13,848,0,0,1,110,69,0,0,0,"2,00",7,14,18
"org.apache.pig.newplan.logical.relational.LogicalRelationalNodesVisitor",51,3,25,28,848,1,0,19,52,49,25,4,0,"1,10",0,23,22
"org.apache.pig.newplan.logical.relational.LogicalRelationalOperator",97,11,31,42,848,1,0,9,182,103,19,8,0,"1,63",8,25,31
"org.apache.pig.newplan.logical.relational.LogicalSchema",74,1,24,25,848,0,0,1,450,323,0,0,0,"3,88",19,38,93
"org.apache.pig.newplan.logical.relational.LogicalSchema.LogicalFieldSchema",79,4,17,21,848,0,0,1,405,327,0,0,0,"6,29",11,37,107
"org.apache.pig.newplan.logical.relational.LogicalSchema.MergeMode",5,4,0,4,0,n/a,0,0,6,6,n/a,0,0,n/a,0,0,0
"org.apache.pig.newplan.logical.relational.MapSideMergeValidator",18,0,3,3,848,0,0,1,52,49,0,0,0,"3,67",3,11,11
"org.apache.pig.newplan.logical.relational.SchemaNotDefinedException",2,1,3,4,0,0,0,0,15,12,0,0,0,"1,00",0,3,3
"org.apache.pig.newplan.logical.rules.AddForEach",4,6,16,22,848,2,0,1,9,9,0,8,0,"1,00",1,3,2
"org.apache.pig.newplan.logical.rules.AddForEach.AddForEachTransformer",17,1,9,10,848,1,0,2,71,69,0,0,0,"3,33",3,14,20
"org.apache.pig.newplan.logical.rules.ColumnMapKeyPrune",4,7,16,23,848,2,0,1,17,11,0,8,0,"1,00",1,3,2
"org.apache.pig.newplan.logical.rules.ColumnMapKeyPrune.ColumnMapKeyPruneTransformer",14,5,7,12,848,1,0,1,77,61,0,0,0,"3,50",2,15,14
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper",13,5,7,12,848,0,0,1,112,103,0,0,0,"3,29",4,25,23
"org.apache.pig.newplan.logical.rules.ColumnPruneHelper.ColumnDependencyVisitor",36,3,46,49,848,2,0,1,356,318,0,6,17,"3,81",2,63,80
"org.apache.pig.newplan.logical.rules.ColumnPruneVisitor",40,6,42,48,848,2,0,9,361,331,0,10,13,"4,94",0,81,84
"org.apache.pig.newplan.logical.rules.ConstantCalculator",7,8,13,21,848,1,0,1,12,12,2,6,0,"1,00",1,4,2
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer",10,3,7,10,848,1,0,3,32,31,0,0,0,"1,50",2,7,6
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.ConstantCalculatorExpressionVisitor",25,6,61,67,848,3,0,1,88,84,0,53,0,"3,25",0,29,13
"org.apache.pig.newplan.logical.rules.ConstantCalculator.ConstantCalculatorTransformer.ConstantCalculatorLogicalPlanVisitor",9,5,41,46,848,3,0,1,12,12,0,34,0,"1,00",1,5,2
"org.apache.pig.newplan.logical.rules.FilterAboveForeach",10,6,14,20,848,1,0,2,27,19,0,6,0,"1,00",2,9,3
"org.apache.pig.newplan.logical.rules.FilterAboveForeach.FilterAboveForEachTransformer",17,4,8,12,848,1,0,1,187,122,0,0,0,"5,40",4,23,27
"org.apache.pig.newplan.logical.rules.FilterConstantCalculator",8,8,15,23,848,2,0,1,12,12,0,7,0,"1,00",1,6,2
"org.apache.pig.newplan.logical.rules.ForEachConstantCalculator",8,8,15,23,848,2,0,1,12,12,0,7,0,"1,00",1,6,2
"org.apache.pig.newplan.logical.rules.GroupByConstParallelSetter",9,7,14,21,848,1,0,2,24,17,0,6,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.rules.GroupByConstParallelSetter.GroupAllParallelSetterTransformer",13,0,6,6,848,1,0,3,44,40,0,0,0,"3,33",2,12,10
"org.apache.pig.newplan.logical.rules.LimitOptimizer",9,6,14,20,848,1,0,2,16,16,0,6,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.rules.LimitOptimizer.OptimizeLimitTransformer",21,0,6,6,848,1,0,1,139,120,0,0,0,"11,33",2,23,34
"org.apache.pig.newplan.logical.rules.LoadTypeCastInserter",10,6,23,29,848,2,0,5,33,27,0,7,0,"1,00",3,13,6
"org.apache.pig.newplan.logical.rules.LogicalRelationalNodeValidator",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper",12,3,5,8,848,0,0,2,120,72,0,0,0,"3,60",4,16,18
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector",18,5,45,50,848,3,0,1,54,54,0,28,4,"2,17",1,20,13
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.FullMapCollector.FullMapExpCollector",10,4,33,37,848,2,0,1,16,16,0,28,1,"2,00",0,7,4
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker",18,5,48,53,848,3,0,1,96,92,0,23,6,"2,44",1,25,22
"org.apache.pig.newplan.logical.rules.MapKeysPruneHelper.MapMarker.MapExprMarker",8,4,33,37,848,2,0,1,20,20,0,28,1,"1,50",0,7,3
"org.apache.pig.newplan.logical.rules.MergeFilter",9,6,14,20,848,1,0,2,18,16,0,6,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.rules.MergeFilter.MergeFilterTransformer",13,1,7,8,848,1,0,1,94,87,0,0,0,"5,25",2,21,21
"org.apache.pig.newplan.logical.rules.MergeForEach",10,7,14,21,848,1,0,2,18,17,0,6,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer",18,0,8,8,848,1,0,1,216,199,0,0,0,"9,40",4,52,47
"org.apache.pig.newplan.logical.rules.OptimizerUtils",13,0,4,4,848,0,0,2,60,36,0,0,0,"2,50",4,9,10
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer",12,14,14,28,848,1,0,2,47,24,0,6,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer.PartitionFilterPushDownTransformer",19,2,9,11,848,1,0,1,105,86,0,0,0,"3,17",3,32,19
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer",9,7,14,21,848,1,0,2,17,17,0,6,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.rules.PredicatePushdownOptimizer.PredicatePushDownTransformer",19,9,9,18,848,1,0,1,129,86,0,0,0,"3,00",3,29,18
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten",9,6,14,20,848,1,0,2,23,16,0,6,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.PushDownForEachFlattenTransformer",24,1,9,10,848,1,0,1,232,202,0,0,0,"8,33",5,45,50
"org.apache.pig.newplan.logical.rules.PushUpFilter",9,6,14,20,848,1,0,2,16,16,0,6,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.rules.PushUpFilter.PushUpFilterTransformer",34,1,12,13,848,1,0,1,266,229,0,0,0,"6,33",7,40,57
"org.apache.pig.newplan.logical.rules.SplitFilter",9,6,14,20,848,1,0,2,18,16,0,6,0,"1,00",2,7,3
"org.apache.pig.newplan.logical.rules.SplitFilter.SplitFilterTransformer",14,1,7,8,848,1,0,1,66,65,0,0,0,"2,75",2,21,11
"org.apache.pig.newplan.logical.rules.StreamTypeCastInserter",12,6,23,29,848,2,0,5,34,34,0,7,0,"1,17",3,17,7
"org.apache.pig.newplan.logical.rules.TypeCastInserter",8,6,17,23,848,1,0,5,13,13,2,6,0,"1,00",3,7,2
"org.apache.pig.newplan.logical.rules.TypeCastInserter.TypeCastInserterTransformer",26,0,7,7,848,1,0,1,126,97,0,0,0,"5,50",3,41,22
"org.apache.pig.newplan.logical.rules.WholePlanRule",4,6,14,20,17,1,0,2,20,15,2,5,1,"1,00",2,4,3
"org.apache.pig.newplan.logical.visitor.CastLineageSetter",11,6,41,47,848,3,0,1,27,20,0,34,0,"1,00",1,8,2
"org.apache.pig.newplan.logical.visitor.CastLineageSetter.CastLineageSetterExpVisitor",15,5,34,39,848,2,0,1,63,46,0,28,1,"3,33",1,14,10
"org.apache.pig.newplan.logical.visitor.ColumnAliasConversionVisitor",16,4,41,45,848,3,0,1,59,55,0,34,0,"3,50",1,5,14
"org.apache.pig.newplan.logical.visitor.DanglingNestedNodeRemover",9,3,27,30,848,2,0,1,30,29,0,22,1,"3,50",0,8,7
"org.apache.pig.newplan.logical.visitor.DuplicateForEachColumnRewriteVisitor",19,3,29,32,848,2,0,1,89,79,0,22,1,"5,00",2,20,20
"org.apache.pig.newplan.logical.visitor.ImplicitSplitInsertVisitor",16,3,47,50,848,3,0,1,65,45,0,40,0,"2,67",1,19,8
"org.apache.pig.newplan.logical.visitor.InputOutputFileValidatorVisitor",14,4,27,31,848,2,0,1,63,63,0,22,1,"6,00",0,18,12
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor",48,6,53,59,848,2,0,1,490,396,0,6,17,"3,50",4,84,98
"org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.LineageFindExpVisitor",26,4,39,43,848,2,0,1,134,110,0,24,5,"2,75",1,32,22
"org.apache.pig.newplan.logical.visitor.ProjExpanderForForeach",18,9,35,44,848,2,0,1,115,98,0,27,2,"4,00",1,20,16
"org.apache.pig.newplan.logical.visitor.ProjExpanderForNonForeach",13,3,34,37,848,2,0,1,72,60,0,28,1,"4,67",1,15,14
"org.apache.pig.newplan.logical.visitor.ProjStarInUdfExpander",21,4,43,47,848,3,0,3,102,76,0,30,2,"3,50",1,21,14
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander",30,3,38,41,848,2,0,1,450,345,0,17,6,"4,92",5,79,64
"org.apache.pig.newplan.logical.visitor.ProjectStarExpander.FindProjects",6,4,34,38,848,2,0,1,14,14,0,28,1,"1,00",1,5,3
"org.apache.pig.newplan.logical.visitor.ProjectStarExpanderUtil",11,0,1,1,848,0,0,1,50,30,0,0,0,"4,00",1,13,4
"org.apache.pig.newplan.logical.visitor.ResetProjectionAttachedRelationalOpVisitor",8,4,33,37,848,2,0,1,14,14,0,28,1,"1,00",0,5,2
"org.apache.pig.newplan.logical.visitor.ScalarVariableValidator",13,4,28,32,848,2,0,1,43,36,0,21,2,"2,67",0,13,8
"org.apache.pig.newplan.logical.visitor.ScalarVariableValidator.ProjectFinder",6,4,34,38,848,2,0,1,14,14,0,28,1,"1,00",1,4,3
"org.apache.pig.newplan.logical.visitor.ScalarVisitor",20,6,41,47,848,3,0,1,63,57,0,34,0,"2,67",1,5,8
"org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor",28,3,44,47,848,2,0,2,98,94,0,6,17,"1,26",0,28,24
"org.apache.pig.newplan.logical.visitor.SortInfoSetter",17,3,27,30,848,2,0,1,41,36,0,22,1,"5,00",0,12,10
"org.apache.pig.newplan.logical.visitor.StoreAliasSetter",8,3,27,30,848,2,0,1,9,9,0,22,1,"1,00",0,7,2
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor",53,7,74,81,848,2,0,1,1.207,904,0,8,21,"4,40",11,104,189
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.FieldSchemaResetter",6,3,59,62,848,3,0,1,9,9,0,53,0,"1,00",0,5,2
"org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.ScoreFuncSpecListComparator",3,0,1,1,848,0,0,1,14,11,0,0,0,"3,00",1,1,3
"org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor",39,4,52,56,848,2,0,4,884,697,0,7,16,"3,63",7,101,98
"org.apache.pig.newplan.logical.visitor.UDFExpFinder",6,4,34,38,848,2,0,1,14,14,0,28,1,"1,00",1,5,3
"org.apache.pig.newplan.logical.visitor.UDFFinder",12,4,29,33,848,2,0,2,30,26,0,21,2,"1,25",1,15,5
"org.apache.pig.newplan.logical.visitor.UnionOnSchemaSetter",20,3,27,30,848,2,0,1,86,74,0,22,1,"6,00",0,39,12
"org.apache.pig.newplan.optimizer.PlanOptimizer",7,5,3,8,18,0,0,1,100,55,1,0,0,"4,67",0,11,14
"org.apache.pig.newplan.optimizer.PlanTransformListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.newplan.optimizer.Rule",34,7,11,18,16,0,0,6,161,98,13,0,0,"2,56",8,19,23
"org.apache.pig.newplan.optimizer.Rule.PatternMatchOperatorPlan",5,4,45,49,16,1,1,1,81,67,0,21,0,"6,33",2,11,19
"org.apache.pig.newplan.optimizer.Transformer",32,0,3,3,10,0,0,3,29,5,14,0,0,n/a,2,3,0
"org.apache.pig.parser.DryRunGruntParser",6,7,35,42,849,0,0,8,289,289,0,0,0,"2,00",2,42,70
"org.apache.pig.parser.DuplicatedSchemaAliasException",2,3,5,8,4,1,0,1,14,14,0,1,0,"1,00",2,5,3
"org.apache.pig.parser.FunctionType",7,7,1,8,848,0,0,1,37,37,0,0,0,"9,00",0,1,9
"org.apache.pig.parser.InvalidCommandException",3,3,5,8,4,1,0,1,14,14,0,1,0,"1,00",2,5,3
"org.apache.pig.parser.InvalidPathException",3,3,5,8,4,1,0,1,14,14,0,1,0,"1,00",2,5,3
"org.apache.pig.parser.InvalidScalarProjectionException",4,4,5,9,849,1,0,0,26,22,0,1,0,"1,33",1,7,4
"org.apache.pig.parser.LogicalPlanBuilder",86,11,103,114,848,0,0,16,1.502,1.357,0,0,0,"2,54",81,298,264
"org.apache.pig.parser.NonProjectExpressionException",4,3,5,8,848,1,0,1,14,14,0,1,0,"1,00",2,5,3
"org.apache.pig.parser.ParserException",18,8,57,65,10,2,0,0,20,20,0,12,1,"1,00",1,8,5
"org.apache.pig.parser.ParserValidationException",3,4,6,10,4,1,0,1,20,20,0,1,0,"1,25",2,6,5
"org.apache.pig.parser.PigMacro",10,11,20,31,848,0,0,1,392,362,0,0,0,"3,90",12,35,78
"org.apache.pig.parser.PigParserNode",5,3,9,12,1,0,0,4,44,41,0,0,0,"1,22",5,9,11
"org.apache.pig.parser.PigParserNode.InvocationPoint",3,3,4,7,0,0,0,3,20,19,0,0,0,"1,00",3,4,4
"org.apache.pig.parser.PigParserNodeAdaptor",2,2,2,4,2,0,0,1,12,12,0,0,0,"1,00",1,3,2
"org.apache.pig.parser.PigRecognitionException",9,2,2,4,3,0,0,1,20,13,8,0,0,"1,00",1,5,2
"org.apache.pig.parser.PlanGenerationFailureException",3,3,6,9,4,1,0,1,18,18,0,1,0,"1,00",3,6,4
"org.apache.pig.parser.QueryParserDriver",24,14,24,38,848,0,0,1,471,449,0,0,0,"2,50",16,52,60
"org.apache.pig.parser.QueryParserFileStream",1,0,3,3,1,0,0,1,17,13,0,0,0,"1,00",1,4,3
"org.apache.pig.parser.QueryParserStreamUtil",2,0,1,1,0,0,0,1,18,14,0,0,0,"4,00",1,1,4
"org.apache.pig.parser.QueryParserStringStream",3,0,2,2,1,0,0,1,14,10,0,0,0,"1,00",1,3,2
"org.apache.pig.parser.QueryParserUtils",25,0,11,11,848,0,0,7,162,158,0,0,0,"3,73",8,33,41
"org.apache.pig.parser.SourceLocation",46,4,9,13,2,0,0,4,58,58,0,0,0,"1,44",5,14,13
"org.apache.pig.parser.StreamingCommandUtils",6,6,6,12,848,0,0,2,127,94,0,0,0,"3,50",3,9,21
"org.apache.pig.parser.StreamingCommandUtils.Which",1,0,1,1,0,0,0,1,24,18,0,0,0,"3,00",1,1,3
"org.apache.pig.parser.UndefinedAliasException",2,3,5,8,4,1,0,1,14,14,0,1,0,"1,00",2,5,3
"org.apache.pig.pen.AugmentBaseDataVisitor",59,11,58,69,848,2,0,3,1.087,977,0,11,12,"7,30",13,95,241
"org.apache.pig.pen.EquivalenceClasses",13,0,2,2,848,0,0,1,80,76,0,0,0,"8,50",1,7,17
"org.apache.pig.pen.ExampleGenerator",34,20,15,35,848,0,0,1,290,259,0,0,0,"3,53",9,50,53
"org.apache.pig.pen.FakeRawKeyValueIterator",0,1,6,7,0,0,0,5,25,25,0,0,0,"1,00",4,6,6
"org.apache.pig.pen.Illustrable",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,2,n/a
"org.apache.pig.pen.Illustrator",31,12,18,30,848,0,0,10,88,83,0,0,0,"1,11",10,22,20
"org.apache.pig.pen.IllustratorAttacher",52,11,101,112,848,2,0,5,283,267,0,24,34,"1,61",1,66,66
"org.apache.pig.pen.LineageTrimmingVisitor",33,15,46,61,848,2,0,1,369,342,0,10,13,"3,50",4,48,77
"org.apache.pig.pen.LocalMapReduceSimulator",36,2,2,4,848,0,0,1,163,154,0,0,0,"17,00",1,32,34
"org.apache.pig.pen.LocalMapReduceSimulator.OutputAttacher",9,4,62,66,848,2,0,1,14,14,0,57,1,"1,50",0,6,3
"org.apache.pig.pen.POOptimizeDisabler",7,3,28,31,848,2,0,2,15,13,0,21,2,"1,00",0,7,3
"org.apache.pig.pen.PhysicalPlanResetter",8,3,62,65,848,2,0,1,12,9,0,57,1,"1,00",0,6,2
"org.apache.pig.pen.util.DisplayExamples",20,1,13,14,848,0,0,3,333,305,0,0,0,"5,08",6,32,66
"org.apache.pig.pen.util.ExampleTuple",19,5,34,39,848,1,1,2,81,75,0,3,4,"1,00",9,26,17
"org.apache.pig.pen.util.LineageTracer",16,3,8,11,848,0,0,1,131,80,0,0,0,"2,50",5,8,20
"org.apache.pig.pen.util.MetricEvaluation",8,0,4,4,848,0,0,3,111,104,0,0,0,"5,50",4,8,22
"org.apache.pig.pen.util.PreOrderDepthFirstWalker",9,2,11,13,848,1,0,2,46,34,0,2,0,"1,50",2,13,9
"org.apache.pig.scripting.BoundScript",15,4,15,19,851,0,0,1,251,186,0,0,0,"2,27",7,44,34
"org.apache.pig.scripting.BoundScript.MyCallable",9,3,2,5,851,0,0,1,30,30,0,0,0,"1,00",1,15,2
"org.apache.pig.scripting.Pig",9,6,22,28,852,0,0,1,328,193,0,0,0,"1,91",15,40,42
"org.apache.pig.scripting.ScriptEngine",18,3,14,17,848,0,0,9,196,123,5,0,0,"2,60",11,20,26
"org.apache.pig.scripting.ScriptEngine.SupportedScriptLang",2,9,4,13,0,n/a,0,3,51,45,n/a,0,0,"2,50",3,5,10
"org.apache.pig.scripting.ScriptPigContext",5,3,5,8,848,0,0,3,27,23,0,0,0,"1,00",4,5,5
"org.apache.pig.scripting.ScriptingOutputCapturer",5,6,10,16,849,0,0,5,124,114,0,0,0,"2,60",6,13,26
"org.apache.pig.scripting.SyncProgressNotificationAdaptor",5,2,19,21,849,0,1,1,88,88,0,0,0,"1,90",0,19,19
"org.apache.pig.scripting.groovy.AccumulatorAccumulate",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.scripting.groovy.AccumulatorCleanup",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.scripting.groovy.AccumulatorGetValue",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.scripting.groovy.AlgebraicFinal",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.scripting.groovy.AlgebraicInitial",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.scripting.groovy.AlgebraicIntermed",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.scripting.groovy.GroovyAccumulatorEvalFunc",6,8,37,45,895,2,1,3,37,34,0,22,1,"1,00",2,10,5
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc",16,19,48,67,895,3,2,3,18,18,13,26,0,"1,00",3,6,4
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.AlgebraicFunctionWrapper",4,9,33,42,895,2,0,0,7,7,3,25,0,"1,00",0,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigDecimalGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigDecimalGroovyAlgebraicEvalFunc.Final",2,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigIntegerGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BigIntegerGroovyAlgebraicEvalFunc.Final",2,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BooleanGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.BooleanGroovyAlgebraicEvalFunc.Final",2,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.ChararrayGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.ChararrayGroovyAlgebraicEvalFunc.Final",2,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataBagGroovyAlgebraicEvalFunc",4,19,50,69,895,4,2,1,17,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataBagGroovyAlgebraicEvalFunc.Final",3,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataByteArrayGroovyAlgebraicEvalFunc",4,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DataByteArrayGroovyAlgebraicEvalFunc.Final",3,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DateTimeGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DateTimeGroovyAlgebraicEvalFunc.Final",2,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DoubleGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.DoubleGroovyAlgebraicEvalFunc.Final",2,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.Final",14,9,35,44,895,3,0,0,8,8,13,25,0,"1,00",0,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.FloatGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.FloatGroovyAlgebraicEvalFunc.Final",2,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.Initial",3,9,35,44,895,3,0,0,8,8,0,25,0,"1,00",0,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.IntegerGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.IntegerGroovyAlgebraicEvalFunc.Final",2,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.Intermed",3,9,35,44,895,3,0,0,8,8,0,25,0,"1,00",0,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.LongGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.LongGroovyAlgebraicEvalFunc.Final",2,9,37,46,895,4,0,0,8,8,0,25,0,"1,00",0,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.MapGroovyAlgebraicEvalFunc",3,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.MapGroovyAlgebraicEvalFunc.Final",2,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.TupleGroovyAlgebraicEvalFunc",4,19,50,69,895,4,2,1,10,10,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.groovy.GroovyAlgebraicEvalFunc.TupleGroovyAlgebraicEvalFunc.Final",3,9,36,45,895,4,0,0,6,6,0,25,0,"1,00",0,2,1
"org.apache.pig.scripting.groovy.GroovyEvalFunc",15,10,31,41,895,1,0,1,114,101,2,21,1,"3,50",3,19,21
"org.apache.pig.scripting.groovy.GroovyEvalFuncObject",3,9,34,43,895,2,0,0,11,11,0,25,0,"1,00",0,6,3
"org.apache.pig.scripting.groovy.GroovyScriptEngine",36,4,15,19,895,1,0,3,314,249,0,4,0,"9,29",6,25,65
"org.apache.pig.scripting.groovy.GroovyUtils",9,2,2,4,850,0,0,1,217,102,0,0,0,"16,00",2,15,32
"org.apache.pig.scripting.groovy.GroovyUtils.DataBagGroovyIterator",3,1,4,5,850,0,0,2,21,21,0,0,0,"1,00",2,5,4
"org.apache.pig.scripting.groovy.OutputSchemaFunction",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.scripting.jruby.JrubyAccumulatorEvalFunc",10,12,39,51,863,2,1,1,75,47,0,22,1,"1,29",2,12,9
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc",17,23,48,71,863,3,2,3,27,14,9,26,0,"1,00",3,8,4
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.AlgebraicFunctionWrapper",7,10,34,44,863,1,0,3,34,24,3,22,0,"1,00",6,10,8
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.BagJrubyAlgebraicEvalFunc",3,19,50,69,866,4,2,1,12,5,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.BagJrubyAlgebraicEvalFunc.Final",3,10,39,49,865,3,0,0,4,4,0,29,0,"1,00",0,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.ChararrayJrubyAlgebraicEvalFunc",2,19,50,69,866,4,2,1,5,5,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.ChararrayJrubyAlgebraicEvalFunc.Final",2,10,39,49,865,3,0,0,4,4,0,29,0,"1,00",0,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DataByteArrayJrubyAlgebraicEvalFunc",3,19,50,69,866,4,2,1,5,5,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DataByteArrayJrubyAlgebraicEvalFunc.Final",3,10,39,49,865,3,0,0,4,4,0,29,0,"1,00",0,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DoubleJrubyAlgebraicEvalFunc",2,19,50,69,866,4,2,1,5,5,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.DoubleJrubyAlgebraicEvalFunc.Final",2,10,39,49,865,3,0,0,4,4,0,29,0,"1,00",0,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Final",15,10,37,47,864,2,0,1,21,17,9,28,0,"1,33",1,11,4
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.FloatJrubyAlgebraicEvalFunc",2,19,50,69,866,4,2,1,5,5,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.FloatJrubyAlgebraicEvalFunc.Final",2,10,39,49,865,3,0,0,4,4,0,29,0,"1,00",0,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Initial",6,10,37,47,863,2,0,1,22,16,0,28,0,"1,33",1,12,4
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.IntegerJrubyAlgebraicEvalFunc",2,19,50,69,866,4,2,1,5,5,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.IntegerJrubyAlgebraicEvalFunc.Final",2,10,39,49,865,3,0,0,4,4,0,29,0,"1,00",0,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.Intermed",7,10,37,47,863,2,0,1,20,16,0,28,0,"1,33",1,12,4
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.LongJrubyAlgebraicEvalFunc",2,19,50,69,866,4,2,1,5,5,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.LongJrubyAlgebraicEvalFunc.Final",2,10,39,49,865,3,0,0,4,4,0,29,0,"1,00",0,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.MapJrubyAlgebraicEvalFunc",2,19,50,69,866,4,2,1,5,5,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.MapJrubyAlgebraicEvalFunc.Final",2,10,39,49,865,3,0,0,4,4,0,29,0,"1,00",0,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.TupleJrubyAlgebraicEvalFunc",3,19,50,69,866,4,2,1,5,5,0,28,0,"1,00",1,3,2
"org.apache.pig.scripting.jruby.JrubyAlgebraicEvalFunc.TupleJrubyAlgebraicEvalFunc.Final",3,10,39,49,865,3,0,0,4,4,0,29,0,"1,00",0,3,2
"org.apache.pig.scripting.jruby.JrubyEvalFunc",8,16,30,46,863,1,0,1,87,57,0,21,1,"2,00",2,9,10
"org.apache.pig.scripting.jruby.JrubyScriptEngine",14,4,14,18,863,1,0,4,145,118,0,4,0,"6,33",5,15,38
"org.apache.pig.scripting.jruby.JrubyScriptEngine.RubyFunctions",5,3,2,5,863,0,0,1,43,32,0,0,0,"2,50",2,3,5
"org.apache.pig.scripting.jruby.PigJrubyLibrary",15,2,27,29,852,0,0,5,396,185,0,0,0,"2,19",26,38,59
"org.apache.pig.scripting.jruby.RubyDataBag",10,5,17,22,852,0,0,4,266,121,0,0,0,"1,58",13,33,30
"org.apache.pig.scripting.jruby.RubyDataByteArray",3,3,18,21,849,0,0,2,271,139,0,0,0,"1,45",12,30,29
"org.apache.pig.scripting.jruby.RubySchema",11,4,43,47,849,0,0,2,860,437,0,0,0,"2,13",35,55,96
"org.apache.pig.scripting.js.JSPig",2,1,12,13,853,0,0,10,136,55,0,0,0,"1,25",7,23,15
"org.apache.pig.scripting.js.JsFunction",15,9,42,51,851,1,0,1,313,245,0,21,1,"3,35",11,39,57
"org.apache.pig.scripting.js.JsScriptEngine",7,7,24,31,851,1,0,2,182,139,0,4,0,"1,56",12,24,25
"org.apache.pig.scripting.js.JsScriptEngine.Holder",4,1,0,1,851,0,0,0,28,25,0,0,0,n/a,0,5,2
"org.apache.pig.scripting.jython.JythonFunction",11,11,29,40,853,1,0,3,118,108,0,21,1,"4,25",2,13,17
"org.apache.pig.scripting.jython.JythonScriptEngine",10,4,16,20,853,1,0,4,161,142,0,4,0,"3,38",6,21,27
"org.apache.pig.scripting.jython.JythonScriptEngine.DirDeleter",2,1,3,4,853,0,0,1,27,22,0,0,0,"1,67",1,3,5
"org.apache.pig.scripting.jython.JythonScriptEngine.Interpreter",6,3,5,8,853,0,0,1,233,187,0,0,0,"7,40",2,12,37
"org.apache.pig.scripting.jython.JythonUtils",8,2,3,5,849,0,0,2,107,99,0,0,0,"9,67",3,14,29
"org.apache.pig.scripting.streaming.python.PythonScriptEngine",6,4,13,17,849,1,0,3,86,86,0,4,0,"2,60",4,10,13
"org.apache.pig.tools.ToolsPigServer",11,11,81,92,850,1,0,2,105,51,0,57,0,"1,17",2,18,7
"org.apache.pig.tools.ToolsPigServer.PigPlans",2,1,1,2,849,0,0,0,6,6,0,0,0,"1,00",0,1,1
"org.apache.pig.tools.cmdline.CmdLineParser",3,6,6,12,2,0,0,1,146,102,0,0,0,"4,17",4,6,25
"org.apache.pig.tools.cmdline.CmdLineParser.ValueExpected",2,3,0,3,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.tools.counters.PigCounterHelper",3,2,2,4,6,0,0,2,51,33,0,0,0,"5,00",0,7,10
"org.apache.pig.tools.grunt.Command",0,0,1,1,0,0,0,1,3,3,0,0,0,n/a,0,1,0
"org.apache.pig.tools.grunt.Grunt",9,4,5,9,851,0,0,1,62,62,0,0,0,"1,40",1,16,7
"org.apache.pig.tools.grunt.GruntParser",30,13,62,75,848,0,0,3,1.087,1.055,0,0,0,"3,08",6,128,191
"org.apache.pig.tools.grunt.GruntParser.ExplainState",1,8,1,9,0,0,0,0,21,21,0,0,0,"1,00",0,1,1
"org.apache.pig.tools.grunt.GruntParser.StreamPrinter",1,3,2,5,0,0,0,1,33,29,0,0,0,"2,50",0,2,5
"org.apache.pig.tools.grunt.PigCompletor",2,3,5,8,0,0,0,2,104,101,0,0,0,"4,40",4,5,22
"org.apache.pig.tools.grunt.PigCompletorAliases",4,3,3,6,850,0,0,1,71,71,0,0,0,"5,67",2,5,17
"org.apache.pig.tools.parameters.ParameterSubstitutionException",1,1,2,3,0,0,0,1,10,10,0,0,0,"1,00",1,2,2
"org.apache.pig.tools.parameters.ParameterSubstitutionPreprocessor",3,3,5,8,848,0,0,1,64,50,0,0,0,"1,60",0,7,8
"org.apache.pig.tools.parameters.PreprocessorContext",8,6,13,19,848,0,0,2,277,220,0,0,0,"3,31",4,16,43
"org.apache.pig.tools.pigstats.EmbeddedPigStats",5,11,68,79,848,1,0,24,134,128,0,15,19,"1,22",26,29,33
"org.apache.pig.tools.pigstats.EmptyPigStats",10,13,67,80,848,1,0,23,127,120,0,17,17,"1,00",21,33,26
"org.apache.pig.tools.pigstats.InputStats",9,7,13,20,1,0,0,3,89,85,0,0,0,"1,46",8,13,19
"org.apache.pig.tools.pigstats.InputStats.INPUT_TYPE",1,4,0,4,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.tools.pigstats.JobStats",29,19,55,74,848,1,0,35,263,164,3,8,0,"1,43",38,52,33
"org.apache.pig.tools.pigstats.JobStats.JobState",5,3,0,3,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.tools.pigstats.OutputStats",26,8,18,26,848,0,0,4,149,145,0,0,0,"1,52",12,29,32
"org.apache.pig.tools.pigstats.PigProgressNotificationListener",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,9,n/a
"org.apache.pig.tools.pigstats.PigStats",45,13,43,56,848,0,0,18,314,254,4,0,0,"2,00",36,60,72
"org.apache.pig.tools.pigstats.PigStats.JobComparator",2,0,1,1,848,0,0,1,6,6,0,0,0,"1,00",1,2,1
"org.apache.pig.tools.pigstats.PigStats.JobGraph",22,7,54,61,848,1,1,2,76,67,0,23,2,"1,78",6,12,16
"org.apache.pig.tools.pigstats.PigStats.JobGraphPrinter",10,4,8,12,848,1,0,1,26,23,0,4,0,"1,67",1,7,5
"org.apache.pig.tools.pigstats.PigStatsUtil",18,16,10,26,848,0,0,8,139,103,1,0,0,"2,00",6,22,20
"org.apache.pig.tools.pigstats.PigStatusReporter",21,2,11,13,4,0,0,2,68,55,0,0,0,"1,73",6,20,19
"org.apache.pig.tools.pigstats.ScriptState",32,11,32,43,848,0,0,4,236,217,2,0,0,"1,88",14,47,60
"org.apache.pig.tools.pigstats.ScriptState.AliasVisitor",22,6,76,82,848,2,0,1,99,99,0,44,14,"1,31",0,35,21
"org.apache.pig.tools.pigstats.ScriptState.FeatureVisitor",19,4,70,74,848,2,0,1,48,48,0,49,9,"1,10",0,13,11
"org.apache.pig.tools.pigstats.ScriptState.LogicalPlanFeatureVisitor",22,4,39,43,848,2,0,3,76,76,0,10,13,"1,64",0,20,23
"org.apache.pig.tools.pigstats.ScriptState.PIG_FEATURE",6,25,0,25,0,n/a,0,0,30,27,n/a,0,0,n/a,0,0,0
"org.apache.pig.tools.pigstats.ScriptState.PIG_PROPERTY",2,14,2,16,0,n/a,0,0,26,23,n/a,0,0,"1,00",1,2,2
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats",23,41,93,134,848,2,0,2,377,372,0,25,4,"2,03",24,71,79
"org.apache.pig.tools.pigstats.mapreduce.MRJobStats.TaskStat",1,5,1,6,0,0,0,0,14,14,0,0,0,"1,00",0,1,1
"org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil",15,3,12,15,848,1,0,6,175,127,0,0,0,"2,42",6,40,29
"org.apache.pig.tools.pigstats.mapreduce.MRScriptState",29,13,39,52,848,1,0,3,210,200,0,28,0,"4,50",4,45,45
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats",19,16,58,74,848,1,0,6,189,182,0,34,0,"2,00",12,44,34
"org.apache.pig.tools.pigstats.mapreduce.SimplePigStats.JobGraphBuilder",14,3,9,12,848,2,0,1,27,24,0,4,1,"2,50",0,12,5
"org.apache.pig.tools.pigstats.tez.PigTezProgressNotificationListener",4,0,13,13,977,0,1,4,47,9,0,0,0,n/a,0,4,0
"org.apache.pig.tools.pigstats.tez.TezDAGStats",17,35,81,116,977,2,0,10,258,239,0,29,0,"1,59",22,60,43
"org.apache.pig.tools.pigstats.tez.TezDAGStats.JobGraphBuilder",18,7,12,19,977,2,0,1,58,53,0,3,2,"2,00",2,23,10
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats",22,13,55,68,977,1,0,5,169,157,0,34,0,"2,50",9,50,35
"org.apache.pig.tools.pigstats.tez.TezPigScriptStats.DAGGraphBuilder",17,3,9,12,977,2,0,1,28,25,0,4,1,"2,50",0,20,5
"org.apache.pig.tools.pigstats.tez.TezScriptState",30,12,43,55,977,1,0,3,136,126,0,27,1,"2,36",3,47,33
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo",11,8,8,16,878,0,0,7,39,39,0,0,0,"1,00",6,11,8
"org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo.DAGAliasVisitor",12,6,10,16,878,2,0,1,100,100,0,3,2,"7,33",0,23,22
"org.apache.pig.tools.pigstats.tez.TezVertexStats",19,29,83,112,977,2,0,11,294,285,0,28,1,"2,07",23,47,60
"org.apache.pig.tools.streams.StreamGenerator",1,12,5,17,1,0,0,2,105,84,0,0,0,"1,83",0,5,11
"org.apache.pig.tools.timer.PerformanceTimer",2,5,4,9,1,0,0,1,58,44,0,0,0,"1,50",0,4,6
"org.apache.pig.tools.timer.PerformanceTimer.State",1,2,0,2,0,n/a,0,0,1,1,n/a,0,0,n/a,0,0,0
"org.apache.pig.tools.timer.PerformanceTimerFactory",2,2,5,7,2,0,0,2,51,37,0,0,0,"1,60",2,6,8
"org.apache.pig.validator.BlackAndWhitelistFilter",10,5,5,10,848,0,1,1,51,46,0,0,0,"2,75",0,7,11
"org.apache.pig.validator.BlackAndWhitelistValidator",7,2,3,5,848,0,1,1,18,12,0,0,0,"1,00",0,4,2
"org.apache.pig.validator.BlackAndWhitelistValidator.BlackAndWhitelistVisitor",26,7,47,54,848,2,0,4,117,113,0,4,19,"1,32",0,26,29
"org.apache.pig.validator.PigCommandFilter",n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,n/a,1,n/a
"org.apache.pig.validator.PigCommandFilter.Command",7,26,0,26,0,n/a,0,0,3,3,n/a,0,0,n/a,0,0,0

Package,C(rec),LOC(rec),METH(rec)
"",1.557,287.415,10.595
"META-INF",n/a,32,n/a
"META-INF.services",n/a,32,n/a
"docs",n/a,107.993,n/a
"docs.jdiff",n/a,84.433,n/a
"docs.src",n/a,23.378,n/a
"docs.src.documentation",n/a,23.378,n/a
"docs.src.documentation.classes",n/a,58,n/a
"docs.src.documentation.conf",n/a,307,n/a
"docs.src.documentation.content",n/a,21.842,n/a
"docs.src.documentation.content.xdocs",n/a,21.738,n/a
"docs.src.documentation.content.xdocs.images",n/a,142,n/a
"docs.src.documentation.resources",n/a,145,n/a
"docs.src.documentation.resources.images",n/a,28,n/a
"docs.src.documentation.resources.schema",n/a,86,n/a
"docs.src.documentation.resources.stylesheets",n/a,31,n/a
"docs.src.documentation.translations",n/a,545,n/a
"main",n/a,376,n/a
"main.jruby",n/a,376,n/a
"org",1.557,178.209,10.595
"org.apache",1.557,178.209,10.595
"org.apache.hadoop",6,234,12
"org.apache.hadoop.hive",6,234,12
"org.apache.hadoop.hive.serde2",6,234,12
"org.apache.hadoop.hive.serde2.objectinspector",6,234,12
"org.apache.hadoop.hive.serde2.objectinspector.primitive",6,234,12
"org.apache.pig",1.551,177.975,10.583
"org.apache.pig.backend",449,60.026,3.585
"org.apache.pig.backend.datastorage",7,498,51
"org.apache.pig.backend.executionengine",4,421,37
"org.apache.pig.backend.hadoop",437,58.963,3.485
"org.apache.pig.backend.hadoop.accumulo",8,1.799,101
"org.apache.pig.backend.hadoop.datastorage",7,816,94
"org.apache.pig.backend.hadoop.executionengine",405,53.794,3.128
"org.apache.pig.backend.hadoop.executionengine.fetch",7,676,49
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer",177,16.775,827
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.partitioners",5,519,22
"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans",17,971,67
"org.apache.pig.backend.hadoop.executionengine.optimizer",1,28,3
"org.apache.pig.backend.hadoop.executionengine.physicalLayer",106,19.691,1.429
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators",36,6.487,456
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.regex",5,327,12
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans",8,1.647,131
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators",47,9.978,695
"org.apache.pig.backend.hadoop.executionengine.physicalLayer.util",7,607,69
"org.apache.pig.backend.hadoop.executionengine.tez",89,12.915,649
"org.apache.pig.backend.hadoop.executionengine.tez.plan",57,8.708,484
"org.apache.pig.backend.hadoop.executionengine.tez.plan.operator",18,2.493,166
"org.apache.pig.backend.hadoop.executionengine.tez.plan.optimizer",12,1.758,53
"org.apache.pig.backend.hadoop.executionengine.tez.plan.udf",4,304,14
"org.apache.pig.backend.hadoop.executionengine.tez.runtime",13,987,49
"org.apache.pig.backend.hadoop.executionengine.tez.util",4,667,27
"org.apache.pig.backend.hadoop.executionengine.util",16,2.414,93
"org.apache.pig.backend.hadoop.hbase",7,1.641,99
"org.apache.pig.backend.hadoop.streaming",1,237,9
"org.apache.pig.builtin",337,21.504,1.283
"org.apache.pig.builtin.mock",9,592,71
"org.apache.pig.classification",8,81,2
"org.apache.pig.data",113,13.100,998
"org.apache.pig.data.utils",9,622,47
"org.apache.pig.impl",177,21.102,1.253
"org.apache.pig.impl.builtin",20,2.026,87
"org.apache.pig.impl.io",41,3.471,254
"org.apache.pig.impl.logicalLayer",7,2.594,124
"org.apache.pig.impl.logicalLayer.schema",4,2.123,89
"org.apache.pig.impl.logicalLayer.validators",1,167,14
"org.apache.pig.impl.plan",24,3.963,267
"org.apache.pig.impl.plan.optimizer",1,143,12
"org.apache.pig.impl.streaming",23,2.079,125
"org.apache.pig.impl.util",59,6.125,327
"org.apache.pig.impl.util.avro",11,1.590,85
"org.apache.pig.impl.util.hive",8,720,46
"org.apache.pig.newplan",182,24.174,1.414
"org.apache.pig.newplan.logical",159,21.135,1.207
"org.apache.pig.newplan.logical.expression",33,3.964,291
"org.apache.pig.newplan.logical.optimizer",13,1.191,96
"org.apache.pig.newplan.logical.relational",34,6.037,373
"org.apache.pig.newplan.logical.rules",45,4.377,210
"org.apache.pig.newplan.logical.visitor",31,5.150,200
"org.apache.pig.newplan.optimizer",5,489,21
"org.apache.pig.parser",26,9.006,265
"org.apache.pig.pen",18,3.770,196
"org.apache.pig.pen.util",5,840,48
"org.apache.pig.scripting",99,7.052,432
"org.apache.pig.scripting.groovy",44,1.428,87
"org.apache.pig.scripting.jruby",37,2.668,190
"org.apache.pig.scripting.js",4,769,45
"org.apache.pig.scripting.jython",5,775,23
"org.apache.pig.scripting.streaming",1,123,5
"org.apache.pig.scripting.streaming.python",1,123,5
"org.apache.pig.tools",57,9.090,607
"org.apache.pig.tools.cmdline",2,179,6
"org.apache.pig.tools.counters",1,73,2
"org.apache.pig.tools.grunt",7,1.749,79
"org.apache.pig.tools.parameters",3,988,20
"org.apache.pig.tools.pigscript",n/a,826,n/a
"org.apache.pig.tools.pigscript.parser",n/a,826,n/a
"org.apache.pig.tools.pigstats",37,4.833,478
"org.apache.pig.tools.pigstats.mapreduce",6,1.171,81
"org.apache.pig.tools.pigstats.tez",9,1.348,106
"org.apache.pig.tools.streams",2,133,6
"org.apache.pig.tools.timer",3,162,9
"org.apache.pig.validator",5,300,29
"packages",n/a,318,n/a
"packages.templates",n/a,15,n/a
"packages.templates.conf",n/a,15,n/a
"python",n/a,377,n/a
"python.streaming",n/a,377,n/a

Project,C,L(J),LOCp,METH
"project",1.557,171.448,287.415,10.534

