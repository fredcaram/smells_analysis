Complexity metrics,Qua, 25 out 2017 18:00:00 BRST
Method,ev(G),iv(G),v(G)
"org.apache.commons.codec.DecoderException.DecoderException()",1,1,1
"org.apache.commons.codec.DecoderException.DecoderException(String)",1,1,1
"org.apache.commons.codec.DecoderException.DecoderException(String,Throwable)",1,1,1
"org.apache.commons.codec.DecoderException.DecoderException(Throwable)",1,1,1
"org.apache.commons.codec.EncoderException.EncoderException()",1,1,1
"org.apache.commons.codec.EncoderException.EncoderException(String)",1,1,1
"org.apache.commons.codec.EncoderException.EncoderException(String,Throwable)",1,1,1
"org.apache.commons.codec.EncoderException.EncoderException(Throwable)",1,1,1
"org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator(StringEncoder)",1,1,1
"org.apache.commons.codec.StringEncoderComparator.compare(Object,Object)",1,1,2
"org.apache.commons.codec.binary.Base32.Base32()",1,1,1
"org.apache.commons.codec.binary.Base32.Base32(boolean)",1,1,1
"org.apache.commons.codec.binary.Base32.Base32(int)",1,1,1
"org.apache.commons.codec.binary.Base32.Base32(int,byte[])",1,1,1
"org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean)",4,3,6
"org.apache.commons.codec.binary.Base32.decode(byte[],int,int)",5,5,17
"org.apache.commons.codec.binary.Base32.encode(byte[],int,int)",5,7,16
"org.apache.commons.codec.binary.Base32.isInAlphabet(byte)",1,1,3
"org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream)",1,1,1
"org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean)",1,1,1
"org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean,int,byte[])",1,1,1
"org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream)",1,1,1
"org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean)",1,1,1
"org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean,int,byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.Base64()",1,1,1
"org.apache.commons.codec.binary.Base64.Base64(boolean)",1,1,1
"org.apache.commons.codec.binary.Base64.Base64(int)",1,1,1
"org.apache.commons.codec.binary.Base64.Base64(int,byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.Base64(int,byte[],boolean)",3,4,6
"org.apache.commons.codec.binary.Base64.decode(byte[],int,int)",5,4,13
"org.apache.commons.codec.binary.Base64.decodeBase64(String)",1,1,1
"org.apache.commons.codec.binary.Base64.decodeBase64(byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.decodeInteger(byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.encode(byte[],int,int)",5,7,16
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean)",1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean)",1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)",3,1,5
"org.apache.commons.codec.binary.Base64.encodeBase64Chunked(byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64String(byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64URLSafe(byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString(byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.encodeInteger(BigInteger)",2,1,2
"org.apache.commons.codec.binary.Base64.isBase64(String)",1,1,1
"org.apache.commons.codec.binary.Base64.isBase64(byte)",1,1,4
"org.apache.commons.codec.binary.Base64.isBase64(byte[])",3,3,4
"org.apache.commons.codec.binary.Base64.isInAlphabet(byte)",1,1,3
"org.apache.commons.codec.binary.Base64.isUrlSafe()",1,1,1
"org.apache.commons.codec.binary.Base64.toIntegerBytes(BigInteger)",2,2,4
"org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream)",1,1,1
"org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean)",1,1,1
"org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean,int,byte[])",1,1,1
"org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream)",1,1,1
"org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean)",1,1,1
"org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean,int,byte[])",1,1,1
"org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int)",1,1,3
"org.apache.commons.codec.binary.BaseNCodec.available()",1,1,2
"org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])",4,3,5
"org.apache.commons.codec.binary.BaseNCodec.decode(Object)",3,3,3
"org.apache.commons.codec.binary.BaseNCodec.decode(String)",1,1,1
"org.apache.commons.codec.binary.BaseNCodec.decode(byte[])",2,1,3
"org.apache.commons.codec.binary.BaseNCodec.encode(Object)",2,1,2
"org.apache.commons.codec.binary.BaseNCodec.encode(byte[])",2,1,3
"org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[])",1,1,1
"org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[])",1,1,1
"org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int)",1,2,3
"org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()",1,1,1
"org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])",1,1,2
"org.apache.commons.codec.binary.BaseNCodec.hasData()",1,1,1
"org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(String)",1,1,1
"org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)",3,5,6
"org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte)",3,2,3
"org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int)",2,2,4
"org.apache.commons.codec.binary.BaseNCodec.reset()",1,1,1
"org.apache.commons.codec.binary.BaseNCodec.resizeBuffer()",1,2,2
"org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream(InputStream,BaseNCodec,boolean)",1,1,1
"org.apache.commons.codec.binary.BaseNCodecInputStream.markSupported()",1,1,1
"org.apache.commons.codec.binary.BaseNCodecInputStream.read()",2,2,4
"org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)",5,8,11
"org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream(OutputStream,BaseNCodec,boolean)",1,1,1
"org.apache.commons.codec.binary.BaseNCodecOutputStream.close()",1,2,2
"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()",1,1,1
"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)",1,4,4
"org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)",4,6,8
"org.apache.commons.codec.binary.BaseNCodecOutputStream.write(int)",1,1,1
"org.apache.commons.codec.binary.BinaryCodec.decode(Object)",5,4,5
"org.apache.commons.codec.binary.BinaryCodec.decode(byte[])",1,1,1
"org.apache.commons.codec.binary.BinaryCodec.encode(Object)",2,1,2
"org.apache.commons.codec.binary.BinaryCodec.encode(byte[])",1,1,1
"org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])",2,1,5
"org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])",2,1,6
"org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])",1,1,2
"org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])",2,1,5
"org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])",2,1,5
"org.apache.commons.codec.binary.BinaryCodec.toAsciiString(byte[])",1,1,1
"org.apache.commons.codec.binary.BinaryCodec.toByteArray(String)",2,1,2
"org.apache.commons.codec.binary.Hex.Hex()",1,1,1
"org.apache.commons.codec.binary.Hex.Hex(String)",1,1,1
"org.apache.commons.codec.binary.Hex.decode(Object)",1,3,3
"org.apache.commons.codec.binary.Hex.decode(byte[])",1,2,2
"org.apache.commons.codec.binary.Hex.decodeHex(char[])",2,2,3
"org.apache.commons.codec.binary.Hex.encode(Object)",1,4,4
"org.apache.commons.codec.binary.Hex.encode(byte[])",1,1,1
"org.apache.commons.codec.binary.Hex.encodeHex(byte[])",1,1,1
"org.apache.commons.codec.binary.Hex.encodeHex(byte[],boolean)",1,1,2
"org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])",1,1,2
"org.apache.commons.codec.binary.Hex.encodeHexString(byte[])",1,1,1
"org.apache.commons.codec.binary.Hex.getCharsetName()",1,1,1
"org.apache.commons.codec.binary.Hex.toDigit(char,int)",2,1,2
"org.apache.commons.codec.binary.Hex.toString()",1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1(String)",1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(String,String)",2,2,3
"org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(String)",1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUtf16(String)",1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be(String)",1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le(String)",1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUtf8(String)",1,1,1
"org.apache.commons.codec.binary.StringUtils.newIllegalStateException(String,UnsupportedEncodingException)",1,1,1
"org.apache.commons.codec.binary.StringUtils.newString(byte[],String)",2,2,3
"org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byte[])",1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byte[])",1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUtf16(byte[])",1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUtf16Be(byte[])",1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUtf16Le(byte[])",1,1,1
"org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.digest(MessageDigest,InputStream)",1,2,2
"org.apache.commons.codec.digest.DigestUtils.getBytesUtf8(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.getDigest(String)",1,2,2
"org.apache.commons.codec.digest.DigestUtils.getMd5Digest()",1,1,1
"org.apache.commons.codec.digest.DigestUtils.getSha256Digest()",1,1,1
"org.apache.commons.codec.digest.DigestUtils.getSha384Digest()",1,1,1
"org.apache.commons.codec.digest.DigestUtils.getSha512Digest()",1,1,1
"org.apache.commons.codec.digest.DigestUtils.getShaDigest()",1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5Hex(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5Hex(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.md5Hex(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256Hex(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256Hex(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha256Hex(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384Hex(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384Hex(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha384Hex(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512Hex(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512Hex(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.sha512Hex(byte[])",1,1,1
"org.apache.commons.codec.digest.DigestUtils.shaHex(InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.shaHex(String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.shaHex(byte[])",1,1,1
"org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone()",1,1,1
"org.apache.commons.codec.language.AbstractCaverphone.encode(Object)",2,1,2
"org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual(String,String)",1,1,1
"org.apache.commons.codec.language.Caverphone1.encode(String)",2,2,3
"org.apache.commons.codec.language.Caverphone2.encode(String)",2,2,3
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(char[])",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(int)",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.length()",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.toString()",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.CologneInputBuffer(char[])",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft(char)",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.copyData(int,int)",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextChar()",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextPos()",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext()",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.CologneOutputBuffer(int)",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char)",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.copyData(int,int)",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)",3,1,3
"org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(String)",6,17,37
"org.apache.commons.codec.language.ColognePhonetic.encode(Object)",2,2,2
"org.apache.commons.codec.language.ColognePhonetic.encode(String)",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.isEncodeEqual(String,String)",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.preprocess(String)",5,1,5
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphone()",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.DoubleMetaphoneResult(int)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String,String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char,char)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(String)",1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(char)",1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(String)",1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(char)",1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getAlternate()",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getPrimary()",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.isComplete()",1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.charAt(String,int)",2,2,3
"org.apache.commons.codec.language.DoubleMetaphone.cleanInput(String)",3,1,3
"org.apache.commons.codec.language.DoubleMetaphone.conditionC0(String,int)",5,6,7
"org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(String,int)",4,4,5
"org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(String,int)",1,8,8
"org.apache.commons.codec.language.DoubleMetaphone.conditionL0(String,int)",3,5,6
"org.apache.commons.codec.language.DoubleMetaphone.conditionM0(String,int)",2,3,4
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String,String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String,String,String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String,String,String,String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String,String,String,String,String,String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String[])",4,4,5
"org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String,boolean)",3,5,37
"org.apache.commons.codec.language.DoubleMetaphone.encode(Object)",2,1,2
"org.apache.commons.codec.language.DoubleMetaphone.encode(String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.getMaxCodeLen()",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(DoubleMetaphoneResult,int)",1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.handleC(String,DoubleMetaphoneResult,int)",7,16,17
"org.apache.commons.codec.language.DoubleMetaphone.handleCC(String,DoubleMetaphoneResult,int)",1,6,6
"org.apache.commons.codec.language.DoubleMetaphone.handleCH(String,DoubleMetaphoneResult,int)",4,7,7
"org.apache.commons.codec.language.DoubleMetaphone.handleD(String,DoubleMetaphoneResult,int)",1,4,4
"org.apache.commons.codec.language.DoubleMetaphone.handleG(String,DoubleMetaphoneResult,int,boolean)",1,26,26
"org.apache.commons.codec.language.DoubleMetaphone.handleGH(String,DoubleMetaphoneResult,int)",1,16,16
"org.apache.commons.codec.language.DoubleMetaphone.handleH(String,DoubleMetaphoneResult,int)",1,4,4
"org.apache.commons.codec.language.DoubleMetaphone.handleJ(String,DoubleMetaphoneResult,int,boolean)",1,16,17
"org.apache.commons.codec.language.DoubleMetaphone.handleL(String,DoubleMetaphoneResult,int)",1,3,3
"org.apache.commons.codec.language.DoubleMetaphone.handleP(String,DoubleMetaphoneResult,int)",1,2,3
"org.apache.commons.codec.language.DoubleMetaphone.handleR(String,DoubleMetaphoneResult,int,boolean)",1,5,6
"org.apache.commons.codec.language.DoubleMetaphone.handleS(String,DoubleMetaphoneResult,int,boolean)",1,15,17
"org.apache.commons.codec.language.DoubleMetaphone.handleSC(String,DoubleMetaphoneResult,int)",1,8,8
"org.apache.commons.codec.language.DoubleMetaphone.handleT(String,DoubleMetaphoneResult,int)",1,8,9
"org.apache.commons.codec.language.DoubleMetaphone.handleW(String,DoubleMetaphoneResult,int)",1,11,11
"org.apache.commons.codec.language.DoubleMetaphone.handleX(String,DoubleMetaphoneResult,int)",1,5,6
"org.apache.commons.codec.language.DoubleMetaphone.handleZ(String,DoubleMetaphoneResult,int,boolean)",1,6,7
"org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String,boolean)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.isSilentStart(String)",3,2,3
"org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(String)",1,4,4
"org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen(int)",1,1,1
"org.apache.commons.codec.language.Metaphone.Metaphone()",1,1,1
"org.apache.commons.codec.language.Metaphone.encode(Object)",2,1,2
"org.apache.commons.codec.language.Metaphone.encode(String)",1,1,1
"org.apache.commons.codec.language.Metaphone.getMaxCodeLen()",1,1,1
"org.apache.commons.codec.language.Metaphone.isLastChar(int,int)",1,1,1
"org.apache.commons.codec.language.Metaphone.isMetaphoneEqual(String,String)",1,1,1
"org.apache.commons.codec.language.Metaphone.isNextChar(StringBuffer,int,char)",1,3,3
"org.apache.commons.codec.language.Metaphone.isPreviousChar(StringBuffer,int,char)",1,3,3
"org.apache.commons.codec.language.Metaphone.isVowel(StringBuffer,int)",1,1,1
"org.apache.commons.codec.language.Metaphone.metaphone(String)",5,51,80
"org.apache.commons.codec.language.Metaphone.regionMatch(StringBuffer,int,String)",1,3,3
"org.apache.commons.codec.language.Metaphone.setMaxCodeLen(int)",1,1,1
"org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex()",1,1,1
"org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(String)",1,1,1
"org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(char[])",1,1,1
"org.apache.commons.codec.language.RefinedSoundex.difference(String,String)",1,1,1
"org.apache.commons.codec.language.RefinedSoundex.encode(Object)",2,1,2
"org.apache.commons.codec.language.RefinedSoundex.encode(String)",1,1,1
"org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)",2,1,2
"org.apache.commons.codec.language.RefinedSoundex.soundex(String)",5,4,6
"org.apache.commons.codec.language.Soundex.Soundex()",1,1,1
"org.apache.commons.codec.language.Soundex.Soundex(String)",1,1,1
"org.apache.commons.codec.language.Soundex.Soundex(char[])",1,1,1
"org.apache.commons.codec.language.Soundex.difference(String,String)",1,1,1
"org.apache.commons.codec.language.Soundex.encode(Object)",2,1,2
"org.apache.commons.codec.language.Soundex.encode(String)",1,1,1
"org.apache.commons.codec.language.Soundex.getMappingCode(String,int)",4,3,8
"org.apache.commons.codec.language.Soundex.getSoundexMapping()",1,1,1
"org.apache.commons.codec.language.Soundex.map(char)",2,2,3
"org.apache.commons.codec.language.Soundex.soundex(String)",3,3,8
"org.apache.commons.codec.language.SoundexUtils.clean(String)",3,5,6
"org.apache.commons.codec.language.SoundexUtils.difference(StringEncoder,String,String)",1,1,1
"org.apache.commons.codec.language.SoundexUtils.differenceEncoded(String,String)",2,2,5
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(Object)",2,1,2
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(String)",2,1,2
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.getNameType()",1,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.getRuleType()",1,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.isConcat()",1,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.setConcat(boolean)",1,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.setNameType(NameType)",1,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoder.setRuleType(RuleType)",1,1,1
"org.apache.commons.codec.language.bm.Lang.Lang(List<LangRule>,Languages)",1,1,1
"org.apache.commons.codec.language.bm.Lang.LangRule.LangRule(Pattern,Set<String>,boolean)",1,1,1
"org.apache.commons.codec.language.bm.Lang.LangRule.matches(String)",1,1,1
"org.apache.commons.codec.language.bm.Lang.guessLanguage(String)",2,2,2
"org.apache.commons.codec.language.bm.Lang.guessLanguages(String)",1,4,4
"org.apache.commons.codec.language.bm.Lang.instance(NameType)",1,1,1
"org.apache.commons.codec.language.bm.Lang.loadFromResource(String,Languages)",7,6,9
"org.apache.commons.codec.language.bm.Languages.Languages(Set<String>)",1,1,1
"org.apache.commons.codec.language.bm.Languages.getLanguages()",1,1,1
"org.apache.commons.codec.language.bm.Languages.instance(NameType)",1,1,1
"org.apache.commons.codec.language.bm.Languages.instance(String)",2,5,7
"org.apache.commons.codec.language.bm.Languages.langResourceName(NameType)",1,1,1
"org.apache.commons.codec.language.bm.NameType.NameType(String)",1,1,1
"org.apache.commons.codec.language.bm.NameType.getName()",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(NameType,RuleType,boolean)",2,1,2
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.RulesApplication(List<Rule>,Set<String>,String,String,int)",2,1,2
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getI()",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getPhonetic()",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.invoke()",4,4,7
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.isFound()",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(String,List<Rule>,Set<String>,boolean)",8,9,11
"org.apache.commons.codec.language.bm.PhoneticEngine.applyRuleIfCompatible(String,String,Set<String>)",3,4,8
"org.apache.commons.codec.language.bm.PhoneticEngine.encode(String)",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.expand(String)",2,5,6
"org.apache.commons.codec.language.bm.PhoneticEngine.getLang()",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.getNameType()",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.getRuleType()",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.join(Iterable<String>,String)",1,3,3
"org.apache.commons.codec.language.bm.PhoneticEngine.normalizeLanguageAttributes(String,boolean)",5,5,6
"org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8(String,Set<String>)",8,12,15
"org.apache.commons.codec.language.bm.PhoneticEngine.removeDuplicateAlternates(String)",1,2,3
"org.apache.commons.codec.language.bm.PhoneticEngine.splitOnPipe(String)",3,3,3
"org.apache.commons.codec.language.bm.Rule.Rule(String,String,String,String,Set<String>,String)",1,1,1
"org.apache.commons.codec.language.bm.Rule.getLContext()",1,1,1
"org.apache.commons.codec.language.bm.Rule.getLanguage()",1,1,1
"org.apache.commons.codec.language.bm.Rule.getLogical()",1,1,1
"org.apache.commons.codec.language.bm.Rule.getPattern()",1,1,1
"org.apache.commons.codec.language.bm.Rule.getPhoneme()",1,1,1
"org.apache.commons.codec.language.bm.Rule.getRContext()",1,1,1
"org.apache.commons.codec.language.bm.Rule.instance(NameType,RuleType,Set<String>)",2,2,2
"org.apache.commons.codec.language.bm.Rule.instance(NameType,RuleType,String)",2,2,2
"org.apache.commons.codec.language.bm.Rule.languageMatches(Set<String>)",3,5,5
"org.apache.commons.codec.language.bm.Rule.mkScanner(NameType,RuleType,String)",2,1,2
"org.apache.commons.codec.language.bm.Rule.mkScanner(String)",2,1,2
"org.apache.commons.codec.language.bm.Rule.parseRules(Scanner)",5,8,10
"org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(String,int)",3,1,5
"org.apache.commons.codec.language.bm.Rule.stripQuotes(String)",1,3,3
"org.apache.commons.codec.language.bm.RuleType.RuleType(String)",1,1,1
"org.apache.commons.codec.language.bm.RuleType.getName()",1,1,1
"org.apache.commons.codec.net.BCodec.BCodec()",1,1,1
"org.apache.commons.codec.net.BCodec.BCodec(String)",1,1,1
"org.apache.commons.codec.net.BCodec.decode(Object)",3,3,3
"org.apache.commons.codec.net.BCodec.decode(String)",2,2,3
"org.apache.commons.codec.net.BCodec.doDecoding(byte[])",2,1,2
"org.apache.commons.codec.net.BCodec.doEncoding(byte[])",2,1,2
"org.apache.commons.codec.net.BCodec.encode(Object)",3,3,3
"org.apache.commons.codec.net.BCodec.encode(String)",2,1,2
"org.apache.commons.codec.net.BCodec.encode(String,String)",2,2,3
"org.apache.commons.codec.net.BCodec.getDefaultCharset()",1,1,1
"org.apache.commons.codec.net.BCodec.getEncoding()",1,1,1
"org.apache.commons.codec.net.QCodec.QCodec()",1,1,1
"org.apache.commons.codec.net.QCodec.QCodec(String)",1,1,1
"org.apache.commons.codec.net.QCodec.decode(Object)",3,3,3
"org.apache.commons.codec.net.QCodec.decode(String)",2,2,3
"org.apache.commons.codec.net.QCodec.doDecoding(byte[])",5,2,7
"org.apache.commons.codec.net.QCodec.doEncoding(byte[])",2,1,5
"org.apache.commons.codec.net.QCodec.encode(Object)",3,3,3
"org.apache.commons.codec.net.QCodec.encode(String)",2,1,2
"org.apache.commons.codec.net.QCodec.encode(String,String)",2,2,3
"org.apache.commons.codec.net.QCodec.getDefaultCharset()",1,1,1
"org.apache.commons.codec.net.QCodec.getEncoding()",1,1,1
"org.apache.commons.codec.net.QCodec.isEncodeBlanks()",1,1,1
"org.apache.commons.codec.net.QCodec.setEncodeBlanks(boolean)",1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec()",1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(String)",1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(Object)",4,4,4
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(String)",2,2,3
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,String)",2,1,2
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(byte[])",1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])",4,3,5
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(Object)",4,4,4
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(String)",2,2,3
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,String)",2,1,2
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(byte[])",1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(BitSet,byte[])",2,3,6
"org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int,ByteArrayOutputStream)",1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.getDefaultCharset()",1,1,1
"org.apache.commons.codec.net.RFC1522Codec.decodeText(String)",7,2,8
"org.apache.commons.codec.net.RFC1522Codec.encodeText(String,String)",2,1,2
"org.apache.commons.codec.net.URLCodec.URLCodec()",1,1,1
"org.apache.commons.codec.net.URLCodec.URLCodec(String)",1,1,1
"org.apache.commons.codec.net.URLCodec.decode(Object)",4,4,4
"org.apache.commons.codec.net.URLCodec.decode(String)",2,2,3
"org.apache.commons.codec.net.URLCodec.decode(String,String)",2,1,2
"org.apache.commons.codec.net.URLCodec.decode(byte[])",1,1,1
"org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])",5,4,6
"org.apache.commons.codec.net.URLCodec.encode(Object)",4,4,4
"org.apache.commons.codec.net.URLCodec.encode(String)",2,2,3
"org.apache.commons.codec.net.URLCodec.encode(String,String)",2,1,2
"org.apache.commons.codec.net.URLCodec.encode(byte[])",1,1,1
"org.apache.commons.codec.net.URLCodec.encodeUrl(BitSet,byte[])",2,3,7
"org.apache.commons.codec.net.URLCodec.getDefaultCharset()",1,1,1
"org.apache.commons.codec.net.Utils.digit16(byte)",2,1,2

Class,OCavg,WMC
"org.apache.commons.codec.CharEncoding",n/a,0
"org.apache.commons.codec.DecoderException","1,00",4
"org.apache.commons.codec.EncoderException","1,00",4
"org.apache.commons.codec.StringEncoderComparator","1,00",2
"org.apache.commons.codec.binary.Base32","4,88",39
"org.apache.commons.codec.binary.Base32InputStream","1,00",3
"org.apache.commons.codec.binary.Base32OutputStream","1,00",3
"org.apache.commons.codec.binary.Base64","2,40",60
"org.apache.commons.codec.binary.Base64InputStream","1,00",3
"org.apache.commons.codec.binary.Base64OutputStream","1,00",3
"org.apache.commons.codec.binary.BaseNCodec","2,00",40
"org.apache.commons.codec.binary.BaseNCodecInputStream","3,75",15
"org.apache.commons.codec.binary.BaseNCodecOutputStream","2,50",15
"org.apache.commons.codec.binary.BinaryCodec","3,00",33
"org.apache.commons.codec.binary.Hex","1,50",21
"org.apache.commons.codec.binary.StringUtils","1,13",17
"org.apache.commons.codec.digest.DigestUtils","1,03",39
"org.apache.commons.codec.language.AbstractCaverphone","1,33",4
"org.apache.commons.codec.language.Caverphone1","2,00",2
"org.apache.commons.codec.language.Caverphone2","2,00",2
"org.apache.commons.codec.language.ColognePhonetic","5,67",34
"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer","1,00",4
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer","1,00",6
"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer","1,00",3
"org.apache.commons.codec.language.DoubleMetaphone","4,16",183
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult","1,33",16
"org.apache.commons.codec.language.Metaphone","5,92",71
"org.apache.commons.codec.language.RefinedSoundex","1,88",15
"org.apache.commons.codec.language.Soundex","2,00",20
"org.apache.commons.codec.language.SoundexUtils","3,33",10
"org.apache.commons.codec.language.bm.BeiderMorseEncoder","1,25",10
"org.apache.commons.codec.language.bm.Lang","3,60",18
"org.apache.commons.codec.language.bm.Lang.LangRule","1,00",2
"org.apache.commons.codec.language.bm.Languages","2,40",12
"org.apache.commons.codec.language.bm.NameType","1,00",2
"org.apache.commons.codec.language.bm.PhoneticEngine","4,21",59
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication","2,00",10
"org.apache.commons.codec.language.bm.ResourceConstants",n/a,0
"org.apache.commons.codec.language.bm.Rule","2,53",38
"org.apache.commons.codec.language.bm.RuleType","1,00",2
"org.apache.commons.codec.net.BCodec","1,82",20
"org.apache.commons.codec.net.QCodec","2,54",33
"org.apache.commons.codec.net.QuotedPrintableCodec","2,43",34
"org.apache.commons.codec.net.RFC1522Codec","4,50",9
"org.apache.commons.codec.net.URLCodec","2,77",36
"org.apache.commons.codec.net.Utils","2,00",2

Package,v(G)avg,v(G)tot
"org.apache.commons.codec","1,10",11
"org.apache.commons.codec.binary","2,54",292
"org.apache.commons.codec.digest","1,05",40
"org.apache.commons.codec.language","4,52",511
"org.apache.commons.codec.language.bm","2,69",156
"org.apache.commons.codec.net","2,54",137

Module,v(G)avg,v(G)tot
"commons-codec","2,96",1.147

Project,v(G)avg,v(G)tot
"project","2,96",1.147

