Method,ev(G),iv(G),v(G)
"com.opensymphony.xwork2.ActionChainResult.ActionChainResult()",1,1,1
"com.opensymphony.xwork2.ActionChainResult.ActionChainResult(String,String,String)",1,1,1
"com.opensymphony.xwork2.ActionChainResult.ActionChainResult(String,String,String,String)",1,1,1
"com.opensymphony.xwork2.ActionChainResult.addToHistory(String,String,String)",1,1,1
"com.opensymphony.xwork2.ActionChainResult.equals(Object)",6,5,10
"com.opensymphony.xwork2.ActionChainResult.execute(ActionInvocation)",2,7,7
"com.opensymphony.xwork2.ActionChainResult.getChainHistory()",1,2,2
"com.opensymphony.xwork2.ActionChainResult.getProxy()",1,1,1
"com.opensymphony.xwork2.ActionChainResult.hashCode()",1,4,4
"com.opensymphony.xwork2.ActionChainResult.isInChainHistory(String,String,String)",3,5,5
"com.opensymphony.xwork2.ActionChainResult.makeKey(String,String,String)",2,1,2
"com.opensymphony.xwork2.ActionChainResult.setActionName(String)",1,1,1
"com.opensymphony.xwork2.ActionChainResult.setActionProxyFactory(ActionProxyFactory)",1,1,1
"com.opensymphony.xwork2.ActionChainResult.setMethod(String)",1,1,1
"com.opensymphony.xwork2.ActionChainResult.setNamespace(String)",1,1,1
"com.opensymphony.xwork2.ActionChainResult.setSkipActions(String)",1,1,1
"com.opensymphony.xwork2.ActionContext.ActionContext(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ActionContext.get(String)",1,1,1
"com.opensymphony.xwork2.ActionContext.getActionInvocation()",1,1,1
"com.opensymphony.xwork2.ActionContext.getApplication()",1,1,1
"com.opensymphony.xwork2.ActionContext.getContainer()",1,1,1
"com.opensymphony.xwork2.ActionContext.getContext()",1,1,1
"com.opensymphony.xwork2.ActionContext.getContextMap()",1,1,1
"com.opensymphony.xwork2.ActionContext.getConversionErrors()",1,2,2
"com.opensymphony.xwork2.ActionContext.getInstance(Class<T>)",2,2,2
"com.opensymphony.xwork2.ActionContext.getLocale()",1,2,2
"com.opensymphony.xwork2.ActionContext.getName()",1,1,1
"com.opensymphony.xwork2.ActionContext.getParameters()",1,1,1
"com.opensymphony.xwork2.ActionContext.getSession()",1,1,1
"com.opensymphony.xwork2.ActionContext.getValueStack()",1,1,1
"com.opensymphony.xwork2.ActionContext.put(String,Object)",1,1,1
"com.opensymphony.xwork2.ActionContext.setActionInvocation(ActionInvocation)",1,1,1
"com.opensymphony.xwork2.ActionContext.setApplication(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ActionContext.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.ActionContext.setContext(ActionContext)",1,1,1
"com.opensymphony.xwork2.ActionContext.setContextMap(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ActionContext.setConversionErrors(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ActionContext.setLocale(Locale)",1,1,1
"com.opensymphony.xwork2.ActionContext.setName(String)",1,1,1
"com.opensymphony.xwork2.ActionContext.setParameters(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ActionContext.setSession(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ActionContext.setValueStack(ValueStack)",1,1,1
"com.opensymphony.xwork2.ActionSupport.addActionError(String)",1,1,1
"com.opensymphony.xwork2.ActionSupport.addActionMessage(String)",1,1,1
"com.opensymphony.xwork2.ActionSupport.addFieldError(String,String)",1,1,1
"com.opensymphony.xwork2.ActionSupport.clearActionErrors()",1,1,1
"com.opensymphony.xwork2.ActionSupport.clearErrors()",1,1,1
"com.opensymphony.xwork2.ActionSupport.clearErrorsAndMessages()",1,1,1
"com.opensymphony.xwork2.ActionSupport.clearFieldErrors()",1,1,1
"com.opensymphony.xwork2.ActionSupport.clearMessages()",1,1,1
"com.opensymphony.xwork2.ActionSupport.clone()",1,1,1
"com.opensymphony.xwork2.ActionSupport.doDefault()",1,1,1
"com.opensymphony.xwork2.ActionSupport.execute()",1,1,1
"com.opensymphony.xwork2.ActionSupport.getActionErrors()",1,1,1
"com.opensymphony.xwork2.ActionSupport.getActionMessages()",1,1,1
"com.opensymphony.xwork2.ActionSupport.getFieldErrors()",1,1,1
"com.opensymphony.xwork2.ActionSupport.getFormatted(String,String)",2,2,2
"com.opensymphony.xwork2.ActionSupport.getLocale()",2,2,2
"com.opensymphony.xwork2.ActionSupport.getText(String)",1,1,1
"com.opensymphony.xwork2.ActionSupport.getText(String,List<?>)",1,1,1
"com.opensymphony.xwork2.ActionSupport.getText(String,String)",1,1,1
"com.opensymphony.xwork2.ActionSupport.getText(String,String,List<?>)",1,1,1
"com.opensymphony.xwork2.ActionSupport.getText(String,String,List<?>,ValueStack)",1,1,1
"com.opensymphony.xwork2.ActionSupport.getText(String,String,String)",1,1,1
"com.opensymphony.xwork2.ActionSupport.getText(String,String,String[])",1,1,1
"com.opensymphony.xwork2.ActionSupport.getText(String,String,String[],ValueStack)",1,1,1
"com.opensymphony.xwork2.ActionSupport.getText(String,String[])",1,1,1
"com.opensymphony.xwork2.ActionSupport.getTextProvider()",1,3,3
"com.opensymphony.xwork2.ActionSupport.getTexts()",1,1,1
"com.opensymphony.xwork2.ActionSupport.getTexts(String)",1,1,1
"com.opensymphony.xwork2.ActionSupport.hasActionErrors()",1,1,1
"com.opensymphony.xwork2.ActionSupport.hasActionMessages()",1,1,1
"com.opensymphony.xwork2.ActionSupport.hasErrors()",1,1,1
"com.opensymphony.xwork2.ActionSupport.hasFieldErrors()",1,1,1
"com.opensymphony.xwork2.ActionSupport.hasKey(String)",1,1,1
"com.opensymphony.xwork2.ActionSupport.input()",1,1,1
"com.opensymphony.xwork2.ActionSupport.pause(String)",1,1,1
"com.opensymphony.xwork2.ActionSupport.setActionErrors(Collection<String>)",1,1,1
"com.opensymphony.xwork2.ActionSupport.setActionMessages(Collection<String>)",1,1,1
"com.opensymphony.xwork2.ActionSupport.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.ActionSupport.setFieldErrors(Map<String, List<String>>)",1,1,1
"com.opensymphony.xwork2.ActionSupport.validate()",1,1,1
"com.opensymphony.xwork2.CompositeTextProvider.CompositeTextProvider(List<TextProvider>)",1,1,1
"com.opensymphony.xwork2.CompositeTextProvider.CompositeTextProvider(TextProvider[])",1,1,1
"com.opensymphony.xwork2.CompositeTextProvider.getText(String)",1,1,1
"com.opensymphony.xwork2.CompositeTextProvider.getText(String,List<?>)",1,1,1
"com.opensymphony.xwork2.CompositeTextProvider.getText(String,String)",1,1,1
"com.opensymphony.xwork2.CompositeTextProvider.getText(String,String,List<?>)",3,3,4
"com.opensymphony.xwork2.CompositeTextProvider.getText(String,String,List<?>,ValueStack)",3,3,4
"com.opensymphony.xwork2.CompositeTextProvider.getText(String,String,String)",1,1,1
"com.opensymphony.xwork2.CompositeTextProvider.getText(String,String,String[])",3,3,4
"com.opensymphony.xwork2.CompositeTextProvider.getText(String,String,String[],ValueStack)",3,3,4
"com.opensymphony.xwork2.CompositeTextProvider.getText(String,String[])",1,1,1
"com.opensymphony.xwork2.CompositeTextProvider.getTexts()",3,2,3
"com.opensymphony.xwork2.CompositeTextProvider.getTexts(String)",3,2,3
"com.opensymphony.xwork2.CompositeTextProvider.hasKey(String)",3,2,3
"com.opensymphony.xwork2.DefaultActionInvocation.DefaultActionInvocation(Map<String, Object>,boolean)",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.addPreResultListener(PreResultListener)",1,1,2
"com.opensymphony.xwork2.DefaultActionInvocation.createAction(Map<String, Object>)",1,9,9
"com.opensymphony.xwork2.DefaultActionInvocation.createContextMap()",3,4,5
"com.opensymphony.xwork2.DefaultActionInvocation.createResult()",4,8,9
"com.opensymphony.xwork2.DefaultActionInvocation.deserialize(ActionContext)",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.executeResult()",3,5,5
"com.opensymphony.xwork2.DefaultActionInvocation.getAction()",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.getInvocationContext()",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.getProxy()",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.getResult()",4,4,5
"com.opensymphony.xwork2.DefaultActionInvocation.getResultCode()",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.getStack()",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.init(ActionProxy)",1,3,3
"com.opensymphony.xwork2.DefaultActionInvocation.invoke()",2,6,7
"com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(Object,ActionConfig)",7,7,11
"com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly()",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.isExecuted()",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.saveResult(ActionConfig,Object)",2,2,2
"com.opensymphony.xwork2.DefaultActionInvocation.serialize()",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.setActionEventListener(ActionEventListener)",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.setOgnlUtil(OgnlUtil)",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.setResultCode(String)",2,1,2
"com.opensymphony.xwork2.DefaultActionInvocation.setUnknownHandlerManager(UnknownHandlerManager)",1,1,1
"com.opensymphony.xwork2.DefaultActionInvocation.setValueStackFactory(ValueStackFactory)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.DefaultActionProxy(ActionInvocation,String,String,String,boolean,boolean)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.execute()",1,2,2
"com.opensymphony.xwork2.DefaultActionProxy.getAction()",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.getActionName()",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.getConfig()",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.getErrorMessage()",2,3,3
"com.opensymphony.xwork2.DefaultActionProxy.getExecuteResult()",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.getInvocation()",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.getMethod()",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.getNamespace()",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.isMethodSpecified()",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.prepare()",3,5,5
"com.opensymphony.xwork2.DefaultActionProxy.resolveMethod()",1,2,3
"com.opensymphony.xwork2.DefaultActionProxy.setActionEventListener(ActionEventListener)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.setConfiguration(Configuration)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.setExecuteResult(boolean)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxy.setUnknownHandler(UnknownHandlerManager)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxyFactory.DefaultActionProxyFactory()",1,1,1
"com.opensymphony.xwork2.DefaultActionProxyFactory.createActionProxy(ActionInvocation,String,String,String,boolean,boolean)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxyFactory.createActionProxy(ActionInvocation,String,String,boolean,boolean)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxyFactory.createActionProxy(String,String,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxyFactory.createActionProxy(String,String,Map<String, Object>,boolean,boolean)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxyFactory.createActionProxy(String,String,String,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxyFactory.createActionProxy(String,String,String,Map<String, Object>,boolean,boolean)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxyFactory.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.DefaultActionProxyFactory.toString()",1,1,1
"com.opensymphony.xwork2.DefaultLocaleProvider.getLocale()",2,2,2
"com.opensymphony.xwork2.DefaultTextProvider.DefaultTextProvider()",1,1,1
"com.opensymphony.xwork2.DefaultTextProvider.getText(String)",1,1,1
"com.opensymphony.xwork2.DefaultTextProvider.getText(String,List<?>)",1,2,2
"com.opensymphony.xwork2.DefaultTextProvider.getText(String,String)",2,1,2
"com.opensymphony.xwork2.DefaultTextProvider.getText(String,String,List<?>)",2,3,6
"com.opensymphony.xwork2.DefaultTextProvider.getText(String,String,List<?>,ValueStack)",1,1,1
"com.opensymphony.xwork2.DefaultTextProvider.getText(String,String,String)",1,1,1
"com.opensymphony.xwork2.DefaultTextProvider.getText(String,String,String[])",3,3,3
"com.opensymphony.xwork2.DefaultTextProvider.getText(String,String,String[],ValueStack)",1,1,1
"com.opensymphony.xwork2.DefaultTextProvider.getText(String,String[])",1,1,2
"com.opensymphony.xwork2.DefaultTextProvider.getTexts()",1,1,1
"com.opensymphony.xwork2.DefaultTextProvider.getTexts(String)",1,1,1
"com.opensymphony.xwork2.DefaultTextProvider.hasKey(String)",1,1,1
"com.opensymphony.xwork2.DefaultUnknownHandlerManager.build()",1,6,7
"com.opensymphony.xwork2.DefaultUnknownHandlerManager.getUnknownHandlers()",1,1,1
"com.opensymphony.xwork2.DefaultUnknownHandlerManager.handleUnknownAction(String,String)",3,2,3
"com.opensymphony.xwork2.DefaultUnknownHandlerManager.handleUnknownMethod(Object,String)",4,3,4
"com.opensymphony.xwork2.DefaultUnknownHandlerManager.handleUnknownResult(ActionContext,String,ActionConfig,String)",3,2,3
"com.opensymphony.xwork2.DefaultUnknownHandlerManager.hasUnknownHandlers()",1,2,2
"com.opensymphony.xwork2.DefaultUnknownHandlerManager.setContainer(Container)",1,1,2
"com.opensymphony.xwork2.InvalidMetadataException.InvalidMetadataException(String)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.buildAction(String,String,ActionConfig,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.buildBean(Class,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.buildBean(String,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.buildBean(String,Map<String, Object>,boolean)",1,2,2
"com.opensymphony.xwork2.ObjectFactory.buildConverter(Class<? extends TypeConverter>,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.buildInterceptor(InterceptorConfig,Map<String, String>)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.buildResult(ResultConfig,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.buildUnknownHandler(String,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.buildValidator(String,Map<String, Object>,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.getClassInstance(String)",2,2,2
"com.opensymphony.xwork2.ObjectFactory.injectInternalBeans(Object)",1,2,3
"com.opensymphony.xwork2.ObjectFactory.isNoArgConstructorRequired()",1,1,1
"com.opensymphony.xwork2.ObjectFactory.setActionFactory(ActionFactory)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.setClassLoader(ClassLoader)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.setConverterFactory(ConverterFactory)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.setInterceptorFactory(InterceptorFactory)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.setResultFactory(ResultFactory)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.setUnknownHandlerFactory(UnknownHandlerFactory)",1,1,1
"com.opensymphony.xwork2.ObjectFactory.setValidatorFactory(ValidatorFactory)",1,1,1
"com.opensymphony.xwork2.TestNGXWorkTestCase.loadConfigurationProviders(ConfigurationProvider...)",1,1,1
"com.opensymphony.xwork2.TestNGXWorkTestCase.setUp()",1,1,1
"com.opensymphony.xwork2.TestNGXWorkTestCase.tearDown()",1,1,1
"com.opensymphony.xwork2.TextProviderFactory.createInstance(Class,LocaleProvider)",1,2,2
"com.opensymphony.xwork2.TextProviderFactory.createInstance(ResourceBundle,LocaleProvider)",1,2,2
"com.opensymphony.xwork2.TextProviderFactory.getTextProvider(Class,LocaleProvider)",2,1,2
"com.opensymphony.xwork2.TextProviderFactory.getTextProvider(ResourceBundle,LocaleProvider)",2,1,2
"com.opensymphony.xwork2.TextProviderFactory.setTextProvider(TextProvider)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.TextProviderSupport()",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.TextProviderSupport(Class,LocaleProvider)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.TextProviderSupport(ResourceBundle,LocaleProvider)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.getLocale()",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.getText(String)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.getText(String,List<?>)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.getText(String,String)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.getText(String,String,List<?>)",2,4,4
"com.opensymphony.xwork2.TextProviderSupport.getText(String,String,List<?>,ValueStack)",2,5,5
"com.opensymphony.xwork2.TextProviderSupport.getText(String,String,String)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.getText(String,String,String[])",2,2,2
"com.opensymphony.xwork2.TextProviderSupport.getText(String,String,String[],ValueStack)",2,4,4
"com.opensymphony.xwork2.TextProviderSupport.getText(String,String[])",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.getTexts()",2,2,2
"com.opensymphony.xwork2.TextProviderSupport.getTexts(String)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.hasKey(String)",1,2,2
"com.opensymphony.xwork2.TextProviderSupport.setBundle(ResourceBundle)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.setClazz(Class)",1,1,1
"com.opensymphony.xwork2.TextProviderSupport.setLocaleProvider(LocaleProvider)",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.addActionError(String)",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.addActionMessage(String)",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.addFieldError(String,String)",1,2,2
"com.opensymphony.xwork2.ValidationAwareSupport.clearActionErrors()",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.clearErrors()",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.clearErrorsAndMessages()",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.clearFieldErrors()",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.clearMessages()",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.getActionErrors()",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.getActionMessages()",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.getFieldErrors()",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.hasActionErrors()",1,2,2
"com.opensymphony.xwork2.ValidationAwareSupport.hasActionMessages()",1,2,2
"com.opensymphony.xwork2.ValidationAwareSupport.hasErrors()",1,2,2
"com.opensymphony.xwork2.ValidationAwareSupport.hasFieldErrors()",1,2,2
"com.opensymphony.xwork2.ValidationAwareSupport.internalGetActionErrors()",1,1,2
"com.opensymphony.xwork2.ValidationAwareSupport.internalGetActionMessages()",1,1,2
"com.opensymphony.xwork2.ValidationAwareSupport.internalGetFieldErrors()",1,1,2
"com.opensymphony.xwork2.ValidationAwareSupport.setActionErrors(Collection<String>)",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.setActionMessages(Collection<String>)",1,1,1
"com.opensymphony.xwork2.ValidationAwareSupport.setFieldErrors(Map<String, List<String>>)",1,1,1
"com.opensymphony.xwork2.XWork.XWork()",1,1,1
"com.opensymphony.xwork2.XWork.XWork(ConfigurationManager)",1,1,1
"com.opensymphony.xwork2.XWork.executeAction(String,String,String)",1,1,1
"com.opensymphony.xwork2.XWork.executeAction(String,String,String,Map<String, Object>)",1,1,2
"com.opensymphony.xwork2.XWork.setLoggerFactory(LoggerFactory)",1,1,1
"com.opensymphony.xwork2.XWorkException.XWorkException()",1,1,1
"com.opensymphony.xwork2.XWorkException.XWorkException(String)",1,1,1
"com.opensymphony.xwork2.XWorkException.XWorkException(String,Object)",1,1,1
"com.opensymphony.xwork2.XWorkException.XWorkException(String,Throwable)",1,1,1
"com.opensymphony.xwork2.XWorkException.XWorkException(String,Throwable,Object)",1,2,2
"com.opensymphony.xwork2.XWorkException.XWorkException(Throwable)",1,1,1
"com.opensymphony.xwork2.XWorkException.XWorkException(Throwable,Object)",1,1,1
"com.opensymphony.xwork2.XWorkException.getLocation()",1,1,1
"com.opensymphony.xwork2.XWorkException.toString()",3,5,5
"com.opensymphony.xwork2.XWorkJUnit4TestCase.loadButAdd(Class<?>,Object)",1,1,1
"com.opensymphony.xwork2.XWorkJUnit4TestCase.loadButAdd(Class<?>,String,Object)",1,1,1
"com.opensymphony.xwork2.XWorkJUnit4TestCase.loadConfigurationProviders(ConfigurationProvider...)",1,1,1
"com.opensymphony.xwork2.XWorkJUnit4TestCase.setUp()",1,1,1
"com.opensymphony.xwork2.XWorkJUnit4TestCase.tearDown()",1,1,1
"com.opensymphony.xwork2.XWorkTestCase.XWorkTestCase()",1,1,1
"com.opensymphony.xwork2.XWorkTestCase.loadButAdd(Class<?>,Object)",1,1,1
"com.opensymphony.xwork2.XWorkTestCase.loadButAdd(Class<?>,String,Object)",1,1,1
"com.opensymphony.xwork2.XWorkTestCase.loadConfigurationProviders(ConfigurationProvider...)",1,1,1
"com.opensymphony.xwork2.XWorkTestCase.setUp()",1,1,1
"com.opensymphony.xwork2.XWorkTestCase.tearDown()",1,1,1
"com.opensymphony.xwork2.config.ConfigurationException.ConfigurationException()",1,1,1
"com.opensymphony.xwork2.config.ConfigurationException.ConfigurationException(String)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationException.ConfigurationException(String,Object)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationException.ConfigurationException(String,Throwable)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationException.ConfigurationException(String,Throwable,Object)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationException.ConfigurationException(Throwable)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationException.ConfigurationException(Throwable,Object)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationManager.ConfigurationManager()",1,1,1
"com.opensymphony.xwork2.config.ConfigurationManager.ConfigurationManager(String)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationManager.addContainerProvider(ContainerProvider)",1,2,2
"com.opensymphony.xwork2.config.ConfigurationManager.clearContainerProvider(ContainerProvider)",1,2,2
"com.opensymphony.xwork2.config.ConfigurationManager.clearContainerProviders()",1,2,2
"com.opensymphony.xwork2.config.ConfigurationManager.conditionalReload()",1,4,5
"com.opensymphony.xwork2.config.ConfigurationManager.createConfiguration(String)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationManager.destroyConfiguration()",1,2,2
"com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration()",2,3,3
"com.opensymphony.xwork2.config.ConfigurationManager.getContainerProviders()",1,2,2
"com.opensymphony.xwork2.config.ConfigurationManager.needReloadContainerProviders(List<ContainerProvider>)",3,3,3
"com.opensymphony.xwork2.config.ConfigurationManager.needReloadPackageProviders()",4,4,4
"com.opensymphony.xwork2.config.ConfigurationManager.reload()",1,1,1
"com.opensymphony.xwork2.config.ConfigurationManager.reloadProviders(List<ContainerProvider>)",1,3,3
"com.opensymphony.xwork2.config.ConfigurationManager.setConfiguration(Configuration)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationManager.setContainerProviders(List<ContainerProvider>)",1,1,1
"com.opensymphony.xwork2.config.ConfigurationManager.updateReloadConfigsFlag()",1,2,2
"com.opensymphony.xwork2.config.ConfigurationUtil.ConfigurationUtil()",1,1,1
"com.opensymphony.xwork2.config.ConfigurationUtil.buildParentListFromString(String)",2,4,4
"com.opensymphony.xwork2.config.ConfigurationUtil.buildParentsFromString(Configuration,String)",1,3,3
"com.opensymphony.xwork2.config.FileManagerFactoryProvider.FileManagerFactoryProvider(Class<? extends FileManagerFactory>)",1,1,1
"com.opensymphony.xwork2.config.FileManagerFactoryProvider.destroy()",1,1,1
"com.opensymphony.xwork2.config.FileManagerFactoryProvider.init(Configuration)",1,1,1
"com.opensymphony.xwork2.config.FileManagerFactoryProvider.needsReload()",1,1,1
"com.opensymphony.xwork2.config.FileManagerFactoryProvider.register(ContainerBuilder,LocatableProperties)",1,1,1
"com.opensymphony.xwork2.config.FileManagerProvider.FileManagerProvider(Class<? extends FileManager>,String)",1,1,1
"com.opensymphony.xwork2.config.FileManagerProvider.destroy()",1,1,1
"com.opensymphony.xwork2.config.FileManagerProvider.init(Configuration)",1,1,1
"com.opensymphony.xwork2.config.FileManagerProvider.needsReload()",1,1,1
"com.opensymphony.xwork2.config.FileManagerProvider.register(ContainerBuilder,LocatableProperties)",1,1,1
"com.opensymphony.xwork2.config.ReferenceResolverException.ReferenceResolverException()",1,1,1
"com.opensymphony.xwork2.config.ReferenceResolverException.ReferenceResolverException(String)",1,1,1
"com.opensymphony.xwork2.config.ReferenceResolverException.ReferenceResolverException(String,Throwable)",1,1,1
"com.opensymphony.xwork2.config.ReferenceResolverException.ReferenceResolverException(Throwable)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.ActionConfig(ActionConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.ActionConfig(String,String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.Builder(ActionConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.Builder(String,String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addAllowedMethod(Collection<String>)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addAllowedMethod(String)",1,2,2
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addExceptionMapping(ExceptionMappingConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addExceptionMappings(Collection<? extends ExceptionMappingConfig>)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addInterceptor(InterceptorMapping)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addInterceptors(List<InterceptorMapping>)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addParam(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addParams(Map<String, String>)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addResultConfig(ResultConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addResultConfigs(Collection<ResultConfig>)",1,2,2
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.addResultConfigs(Map<String, ResultConfig>)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.build()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.className(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.defaultClassName(String)",1,1,2
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.exceptionMappings(Collection<? extends ExceptionMappingConfig>)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.interceptors(List<InterceptorMapping>)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.location(Location)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.methodName(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.name(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.Builder.packageName(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.equals(Object)",10,8,17
"com.opensymphony.xwork2.config.entities.ActionConfig.getAllowedMethods()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.getClassName()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.getExceptionMappings()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.getInterceptors()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.getMethodName()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.getPackageName()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.getParams()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.getResults()",1,1,1
"com.opensymphony.xwork2.config.entities.ActionConfig.hashCode()",1,10,10
"com.opensymphony.xwork2.config.entities.ActionConfig.isAllowedMethod(String)",1,2,3
"com.opensymphony.xwork2.config.entities.ActionConfig.toString()",1,2,2
"com.opensymphony.xwork2.config.entities.AllowedMethods.AllowedMethods(Set<AllowedMethod>)",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.LiteralAllowedMethod.LiteralAllowedMethod(String)",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.LiteralAllowedMethod.equals(Object)",3,2,4
"com.opensymphony.xwork2.config.entities.AllowedMethods.LiteralAllowedMethod.hashCode()",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.LiteralAllowedMethod.isAllowed(String)",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.LiteralAllowedMethod.original()",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.LiteralAllowedMethod.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.PatternAllowedMethod.PatternAllowedMethod(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.PatternAllowedMethod.equals(Object)",3,2,4
"com.opensymphony.xwork2.config.entities.AllowedMethods.PatternAllowedMethod.hashCode()",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.PatternAllowedMethod.isAllowed(String)",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.PatternAllowedMethod.original()",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.PatternAllowedMethod.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.build(Set<String>)",1,9,9
"com.opensymphony.xwork2.config.entities.AllowedMethods.equals(Object)",3,2,4
"com.opensymphony.xwork2.config.entities.AllowedMethods.hashCode()",1,1,1
"com.opensymphony.xwork2.config.entities.AllowedMethods.isAllowed(String)",3,2,3
"com.opensymphony.xwork2.config.entities.AllowedMethods.list()",1,2,2
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.Builder(ExceptionMappingConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.Builder(String,String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.addParam(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.addParams(Map<String, String>)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.build()",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.embalmTarget()",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.exceptionClassName(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.location(Location)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.name(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.Builder.result(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.ExceptionMappingConfig(ExceptionMappingConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.ExceptionMappingConfig(String,String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.equals(Object)",7,5,11
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.getExceptionClassName()",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.getParams()",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.getResult()",1,1,1
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.hashCode()",1,5,5
"com.opensymphony.xwork2.config.entities.ExceptionMappingConfig.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.Builder.Builder(InterceptorConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.Builder.Builder(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.Builder.addParam(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.Builder.addParams(Map<String, String>)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.Builder.build()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.Builder.className(String)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.Builder.embalmTarget()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.Builder.location(Location)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.Builder.name(String)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.InterceptorConfig(InterceptorConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.InterceptorConfig(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.equals(Object)",6,4,9
"com.opensymphony.xwork2.config.entities.InterceptorConfig.getClassName()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.getParams()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorConfig.hashCode()",1,4,4
"com.opensymphony.xwork2.config.entities.InterceptorConfig.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorMapping.InterceptorMapping(String,Interceptor)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorMapping.equals(Object)",4,3,6
"com.opensymphony.xwork2.config.entities.InterceptorMapping.getInterceptor()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorMapping.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorMapping.hashCode()",1,2,2
"com.opensymphony.xwork2.config.entities.InterceptorMapping.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.Builder.Builder(String)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.Builder.addInterceptor(InterceptorMapping)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.Builder.addInterceptors(List<InterceptorMapping>)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.Builder.build()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.Builder.embalmTarget()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.Builder.location(Location)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.Builder.name(String)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.InterceptorStackConfig()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.InterceptorStackConfig(InterceptorStackConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.equals(Object)",5,3,7
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.getInterceptors()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.hashCode()",1,3,3
"com.opensymphony.xwork2.config.entities.InterceptorStackConfig.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.Builder(PackageConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.Builder(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addActionConfig(String,ActionConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addExceptionMappingConfig(ExceptionMappingConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addGlobalAllowedMethods(Set<String>)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addGlobalExceptionMappingConfigs(List<ExceptionMappingConfig>)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addGlobalResultConfig(ResultConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addGlobalResultConfigs(Map<String, ResultConfig>)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addInterceptorConfig(InterceptorConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addInterceptorStackConfig(InterceptorStackConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addParent(PackageConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addParents(List<PackageConfig>)",1,2,2
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.addResultTypeConfig(ResultTypeConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.build()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.defaultActionRef(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.defaultClassRef(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.defaultInterceptorRef(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.defaultResultType(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.getDefaultClassRef()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.getFullDefaultResultType()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.getGlobalAllowedMethods()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.getInterceptorConfig(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.getNamespace()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.getParentsAllowedMethods(List<PackageConfig>)",1,2,2
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.getResultType(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.isAbstract(boolean)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.isNeedsRefresh()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.isStrictMethodInvocation()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.location(Location)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.name(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.namespace(String)",1,1,2
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.needsRefresh(boolean)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.strictMethodInvocation(boolean)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.Builder.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.PackageConfig(PackageConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.PackageConfig(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.compareTo(Object)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.equals(Object)",18,14,31
"com.opensymphony.xwork2.config.entities.PackageConfig.getActionConfigs()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getAllActionConfigs()",1,3,3
"com.opensymphony.xwork2.config.entities.PackageConfig.getAllExceptionMappingConfigs()",1,3,3
"com.opensymphony.xwork2.config.entities.PackageConfig.getAllGlobalResults()",1,3,3
"com.opensymphony.xwork2.config.entities.PackageConfig.getAllInterceptorConfigs()",1,3,3
"com.opensymphony.xwork2.config.entities.PackageConfig.getAllResultTypeConfigs()",1,3,3
"com.opensymphony.xwork2.config.entities.PackageConfig.getDefaultActionRef()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getDefaultClassRef()",4,4,5
"com.opensymphony.xwork2.config.entities.PackageConfig.getDefaultInterceptorRef()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getDefaultResultType()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getFullDefaultActionRef()",4,4,5
"com.opensymphony.xwork2.config.entities.PackageConfig.getFullDefaultInterceptorRef()",4,4,5
"com.opensymphony.xwork2.config.entities.PackageConfig.getFullDefaultResultType()",4,4,5
"com.opensymphony.xwork2.config.entities.PackageConfig.getGlobalExceptionMappingConfigs()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getGlobalResultConfigs()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getInterceptorConfig(String)",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getInterceptorConfigs()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getNamespace()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getParents()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.getResultTypeConfigs()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.hashCode()",1,13,16
"com.opensymphony.xwork2.config.entities.PackageConfig.isAbstract()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.isNeedsRefresh()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.isStrictMethodInvocation()",1,1,1
"com.opensymphony.xwork2.config.entities.PackageConfig.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.Builder.Builder(ResultConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.Builder.Builder(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.Builder.addParam(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.Builder.addParams(Map<String, String>)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.Builder.build()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.Builder.className(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.Builder.embalmTarget()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.Builder.location(Location)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.Builder.name(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.ResultConfig(ResultConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.ResultConfig(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.equals(Object)",6,4,9
"com.opensymphony.xwork2.config.entities.ResultConfig.getClassName()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.getParams()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultConfig.hashCode()",1,4,4
"com.opensymphony.xwork2.config.entities.ResultConfig.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.Builder(ResultTypeConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.Builder(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.addParam(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.addParams(Map<String, String>)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.build()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.className(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.defaultResultParam(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.embalmTarget()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.location(Location)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.Builder.name(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.ResultTypeConfig(ResultTypeConfig)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.ResultTypeConfig(String,String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.equals(Object)",6,5,10
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.getClassName()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.getDefaultResultParam()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.getParams()",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.hashCode()",1,4,4
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.setDefaultResultParam(String)",1,1,1
"com.opensymphony.xwork2.config.entities.ResultTypeConfig.toString()",1,1,1
"com.opensymphony.xwork2.config.entities.UnknownHandlerConfig.UnknownHandlerConfig(String,Location)",1,1,1
"com.opensymphony.xwork2.config.entities.UnknownHandlerConfig.getName()",1,1,1
"com.opensymphony.xwork2.config.entities.UnknownHandlerConfig.setName(String)",1,1,1
"com.opensymphony.xwork2.config.entities.UnknownHandlerConfig.toString()",1,1,1
"com.opensymphony.xwork2.config.impl.AbstractMatcher.AbstractMatcher(PatternMatcher<?>)",1,1,1
"com.opensymphony.xwork2.config.impl.AbstractMatcher.Mapping.Mapping(String,Object,E)",1,1,1
"com.opensymphony.xwork2.config.impl.AbstractMatcher.Mapping.getOriginalPattern()",1,1,1
"com.opensymphony.xwork2.config.impl.AbstractMatcher.Mapping.getPattern()",1,1,1
"com.opensymphony.xwork2.config.impl.AbstractMatcher.Mapping.getTarget()",1,1,1
"com.opensymphony.xwork2.config.impl.AbstractMatcher.addPattern(String,E,boolean)",1,9,9
"com.opensymphony.xwork2.config.impl.AbstractMatcher.convertParam(String,Map<String, String>)",2,6,7
"com.opensymphony.xwork2.config.impl.AbstractMatcher.freeze()",1,1,1
"com.opensymphony.xwork2.config.impl.AbstractMatcher.match(String)",4,4,4
"com.opensymphony.xwork2.config.impl.AbstractMatcher.replaceParameters(Map<String, String>,Map<String, String>)",1,4,4
"com.opensymphony.xwork2.config.impl.ActionConfigMatcher.ActionConfigMatcher(PatternMatcher<?>,Map<String, ActionConfig>,boolean)",1,2,2
"com.opensymphony.xwork2.config.impl.ActionConfigMatcher.convert(String,ActionConfig,Map<String, String>)",2,4,5
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.ContainerProperties.setConstants(ContainerBuilder)",1,2,2
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.ContainerProperties.setProperty(String,String)",1,5,5
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.DefaultConfiguration()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.DefaultConfiguration(String)",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.RuntimeConfigurationImpl.RuntimeConfigurationImpl(Map<String, Map<String, ActionConfig>>,Map<String, String>,PatternMatcher<int[]>)",1,2,2
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.RuntimeConfigurationImpl.findActionConfigInNamespace(String,String)",1,5,6
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.RuntimeConfigurationImpl.getActionConfig(String,String)",1,6,6
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.RuntimeConfigurationImpl.getActionConfigs()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.RuntimeConfigurationImpl.toString()",1,3,3
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.addPackageConfig(String,PackageConfig)",3,5,5
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.buildFullActionConfig(PackageConfig,ActionConfig)",1,5,5
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.buildRuntimeConfiguration()",1,5,6
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.createBootstrapContainer(List<ContainerProvider>)",1,5,5
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.destroy()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.getContainer()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.getLoadedFileNames()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.getPackageConfig(String)",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.getPackageConfigNames()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.getPackageConfigs()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.getRuntimeConfiguration()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.getUnknownHandlerStack()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.rebuildRuntimeConfiguration()",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.reloadContainer(List<ContainerProvider>)",1,6,6
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.removePackageConfig(String)",1,1,1
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.setContext(Container)",1,2,2
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.setDefaultResults(Map<String, ResultConfig>,PackageConfig)",1,3,3
"com.opensymphony.xwork2.config.impl.DefaultConfiguration.setUnknownHandlerStack(List<UnknownHandlerConfig>)",1,1,1
"com.opensymphony.xwork2.config.impl.LocatableConstantFactory.LocatableConstantFactory(T,Object)",1,1,1
"com.opensymphony.xwork2.config.impl.LocatableConstantFactory.create(Context)",1,1,1
"com.opensymphony.xwork2.config.impl.LocatableConstantFactory.toString()",1,1,1
"com.opensymphony.xwork2.config.impl.LocatableFactory.LocatableFactory(String,Class,Class,Scope,Object)",1,1,1
"com.opensymphony.xwork2.config.impl.LocatableFactory.create(Context)",1,1,1
"com.opensymphony.xwork2.config.impl.LocatableFactory.toString()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.MockConfiguration()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.addPackageConfig(String,PackageConfig)",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.buildRuntimeConfiguration()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.destroy()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.getContainer()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.getLoadedFileNames()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.getPackageConfig(String)",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.getPackageConfigNames()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.getPackageConfigs()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.getRuntimeConfiguration()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.getUnknownHandlerStack()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.rebuildRuntimeConfiguration()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.reloadContainer(List<ContainerProvider>)",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.removePackageConfig(String)",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.selfRegister()",1,1,1
"com.opensymphony.xwork2.config.impl.MockConfiguration.setUnknownHandlerStack(List<UnknownHandlerConfig>)",1,1,1
"com.opensymphony.xwork2.config.impl.NamespaceMatch.NamespaceMatch(String,Map<String, String>)",1,1,1
"com.opensymphony.xwork2.config.impl.NamespaceMatch.getPattern()",1,1,1
"com.opensymphony.xwork2.config.impl.NamespaceMatch.getVariables()",1,1,1
"com.opensymphony.xwork2.config.impl.NamespaceMatcher.NamespaceMatcher(PatternMatcher<?>,Set<String>)",1,3,3
"com.opensymphony.xwork2.config.impl.NamespaceMatcher.convert(String,NamespaceMatch,Map<String, String>)",1,1,1
"com.opensymphony.xwork2.config.providers.CycleDetector.CycleDetector(DirectedGraph<T>)",1,1,1
"com.opensymphony.xwork2.config.providers.CycleDetector.containsCycle()",1,3,4
"com.opensymphony.xwork2.config.providers.CycleDetector.getVerticesInCycles()",1,1,1
"com.opensymphony.xwork2.config.providers.CycleDetector.mark(T)",1,6,6
"com.opensymphony.xwork2.config.providers.DirectedGraph.addEdge(T,T)",3,2,3
"com.opensymphony.xwork2.config.providers.DirectedGraph.addNode(T)",2,1,2
"com.opensymphony.xwork2.config.providers.DirectedGraph.edgeExists(T,T)",3,2,3
"com.opensymphony.xwork2.config.providers.DirectedGraph.edgesFrom(T)",2,1,2
"com.opensymphony.xwork2.config.providers.DirectedGraph.isEmpty()",1,1,1
"com.opensymphony.xwork2.config.providers.DirectedGraph.iterator()",1,1,1
"com.opensymphony.xwork2.config.providers.DirectedGraph.removeEdge(T,T)",3,2,3
"com.opensymphony.xwork2.config.providers.DirectedGraph.size()",1,1,1
"com.opensymphony.xwork2.config.providers.InterceptorBuilder.constructInterceptorReference(InterceptorLocator,String,Map<String, String>,Location,ObjectFactory)",2,7,7
"com.opensymphony.xwork2.config.providers.InterceptorBuilder.constructParameterizedInterceptorReferences(InterceptorLocator,InterceptorStackConfig,Map<String, String>,ObjectFactory)",1,11,11
"com.opensymphony.xwork2.config.providers.XWorkConfigurationProvider.destroy()",1,1,1
"com.opensymphony.xwork2.config.providers.XWorkConfigurationProvider.init(Configuration)",1,1,1
"com.opensymphony.xwork2.config.providers.XWorkConfigurationProvider.loadPackages()",1,1,1
"com.opensymphony.xwork2.config.providers.XWorkConfigurationProvider.needsReload()",1,1,1
"com.opensymphony.xwork2.config.providers.XWorkConfigurationProvider.register(ContainerBuilder,LocatableProperties)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.XmlConfigurationProvider()",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.XmlConfigurationProvider(String)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.XmlConfigurationProvider(String,boolean)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.addAction(Element,Builder)",3,7,7
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.addPackage(Element)",3,4,4
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.addResultTypes(Builder,Element)",1,6,6
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.buildAllowedMethods(Element,Builder)",1,6,6
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.buildExceptionMappings(Element,Builder)",1,4,5
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.buildInterceptorList(Element,Builder)",1,4,4
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.buildPackageContext(Element)",5,8,8
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.buildResults(Element,Builder)",7,14,17
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.destroy()",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.equals(Object)",4,2,5
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.getConfigurationUrls(String)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.getDocuments()",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.getDtdMappings()",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.guessResultType(String)",4,7,7
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.hashCode()",1,2,2
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.init(Configuration)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadConfigurationFiles(String,Element)",6,14,18
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadDefaultActionRef(Builder,Element)",1,2,2
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadDefaultClassRef(Builder,Element)",1,2,2
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadDefaultInterceptorRef(Builder,Element)",1,2,2
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadDocuments(String)",1,1,3
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadExtraConfiguration(Document)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadGlobalAllowedMethods(Builder,Element)",1,4,4
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadGlobalExceptionMappings(Builder,Element)",1,2,2
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadGlobalResults(Builder,Element)",1,2,2
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadInterceptorStack(Element,Builder)",1,2,2
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadInterceptorStacks(Element,Builder)",1,2,2
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadInterceptors(Builder,Element)",1,2,2
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadPackages()",1,8,8
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.lookupInterceptorReference(Builder,Element)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.needsReload()",3,2,3
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.register(ContainerBuilder,LocatableProperties)",9,18,21
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.reloadRequiredPackages(List<Element>)",3,11,11
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.setDtdMappings(Map<String, String>)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.setFileManagerFactory(FileManagerFactory)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.setThrowExceptionOnDuplicateBeans(boolean)",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.toString()",1,1,1
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.verifyAction(String,String,Location)",4,7,8
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.verifyPackageStructure()",2,8,8
"com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.verifyResultType(String,Location)",1,2,2
"com.opensymphony.xwork2.config.providers.XmlHelper.getContent(Element)",1,5,5
"com.opensymphony.xwork2.config.providers.XmlHelper.getLoadOrder(Document)",2,2,3
"com.opensymphony.xwork2.config.providers.XmlHelper.getParams(Element)",2,5,6
"com.opensymphony.xwork2.conversion.TypeConversionException.TypeConversionException()",1,1,1
"com.opensymphony.xwork2.conversion.TypeConversionException.TypeConversionException(String)",1,1,1
"com.opensymphony.xwork2.conversion.TypeConversionException.TypeConversionException(String,Throwable)",1,1,1
"com.opensymphony.xwork2.conversion.TypeConversionException.TypeConversionException(Throwable)",1,1,1
"com.opensymphony.xwork2.conversion.annotations.ConversionRule.toString()",1,1,1
"com.opensymphony.xwork2.conversion.annotations.ConversionType.toString()",1,1,1
"com.opensymphony.xwork2.conversion.impl.ArrayConverter.convertValue(Map<String, Object>,Object,Member,String,Object,Class)",1,4,4
"com.opensymphony.xwork2.conversion.impl.CollectionConverter.convertValue(Map<String, Object>,Object,Member,String,Object,Class)",1,9,10
"com.opensymphony.xwork2.conversion.impl.CollectionConverter.createCollection(Class,Class,int)",1,1,5
"com.opensymphony.xwork2.conversion.impl.CollectionConverter.setObjectTypeDeterminer(ObjectTypeDeterminer)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DateConverter.convertValue(Map<String, Object>,Object,Member,String,Object,Class)",10,11,18
"com.opensymphony.xwork2.conversion.impl.DateConverter.getDateFormats(Locale)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultConversionAnnotationProcessor.process(Map<String, Object>,TypeConversion,String)",2,10,11
"com.opensymphony.xwork2.conversion.impl.DefaultConversionAnnotationProcessor.setTypeConverterCreator(TypeConverterCreator)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultConversionAnnotationProcessor.setTypeConverterHolder(TypeConverterHolder)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultConversionFileProcessor.process(Map<String, Object>,Class,String)",4,11,12
"com.opensymphony.xwork2.conversion.impl.DefaultConversionFileProcessor.setFileManagerFactory(FileManagerFactory)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultConversionFileProcessor.setTypeConverterCreator(TypeConverterCreator)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultConversionPropertiesProcessor.loadConversionProperties(String,boolean)",2,7,7
"com.opensymphony.xwork2.conversion.impl.DefaultConversionPropertiesProcessor.process(String)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultConversionPropertiesProcessor.processRequired(String)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultConversionPropertiesProcessor.setTypeConverterCreator(TypeConverterCreator)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultConversionPropertiesProcessor.setTypeConverterHolder(TypeConverterHolder)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultObjectTypeDeterminer.DefaultObjectTypeDeterminer(XWorkConverter,ReflectionProvider)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultObjectTypeDeterminer.getAnnotation(Class,String,Class<T>)",1,4,4
"com.opensymphony.xwork2.conversion.impl.DefaultObjectTypeDeterminer.getAnnotationFromGetter(Class,String,Class<T>)",2,2,3
"com.opensymphony.xwork2.conversion.impl.DefaultObjectTypeDeterminer.getAnnotationFromSetter(Class,String,Class<T>)",2,2,3
"com.opensymphony.xwork2.conversion.impl.DefaultObjectTypeDeterminer.getClass(Class,String,boolean)",3,9,14
"com.opensymphony.xwork2.conversion.impl.DefaultObjectTypeDeterminer.getElementClass(Class,String,Object)",3,4,5
"com.opensymphony.xwork2.conversion.impl.DefaultObjectTypeDeterminer.getKeyClass(Class,String)",3,2,3
"com.opensymphony.xwork2.conversion.impl.DefaultObjectTypeDeterminer.getKeyProperty(Class,String)",2,2,2
"com.opensymphony.xwork2.conversion.impl.DefaultObjectTypeDeterminer.shouldCreateIfNew(Class,String,Object,String,boolean)",3,3,4
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.bigDecValue(Object)",7,5,8
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.bigIntValue(Object)",7,6,8
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.booleanValue(Object)",5,2,5
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.convertValue(Map<String, Object>,Object,Class)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.convertValue(Map<String, Object>,Object,Member,String,Object,Class)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.convertValue(Object,Class)",1,18,27
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.doubleValue(Object)",5,3,7
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.enumValue(Class,Object)",1,4,4
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.getLocale(Map<String, Object>)",1,3,3
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.getTypeConverter(Map<String, Object>)",3,1,3
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.longValue(Object)",5,2,6
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.stringValue(Object)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverter.stringValue(Object,boolean)",1,3,3
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterCreator.createTypeConverter(String)",3,3,3
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterCreator.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterHolder.addDefaultMapping(String,TypeConverter)",1,2,2
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterHolder.addMapping(Class,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterHolder.addNoMapping(Class)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterHolder.addUnknownMapping(String)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterHolder.containsDefaultMapping(String)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterHolder.containsNoMapping(Class)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterHolder.containsUnknownMapping(String)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterHolder.getDefaultMapping(String)",1,1,1
"com.opensymphony.xwork2.conversion.impl.DefaultTypeConverterHolder.getMapping(Class)",1,1,1
"com.opensymphony.xwork2.conversion.impl.InstantiatingNullHandler.createObject(Class,Object,String,Map<String, Object>)",5,5,5
"com.opensymphony.xwork2.conversion.impl.InstantiatingNullHandler.nullMethodResult(Map<String, Object>,Object,String,Object[])",1,1,1
"com.opensymphony.xwork2.conversion.impl.InstantiatingNullHandler.nullPropertyValue(Map<String, Object>,Object,Object)",6,3,8
"com.opensymphony.xwork2.conversion.impl.InstantiatingNullHandler.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.conversion.impl.InstantiatingNullHandler.setObjectTypeDeterminer(ObjectTypeDeterminer)",1,1,1
"com.opensymphony.xwork2.conversion.impl.InstantiatingNullHandler.setReflectionProvider(ReflectionProvider)",1,1,1
"com.opensymphony.xwork2.conversion.impl.NumberConverter.convertValue(Map<String, Object>,Object,Member,String,Object,Class)",11,13,14
"com.opensymphony.xwork2.conversion.impl.NumberConverter.isInRange(Number,String,Class)",8,9,17
"com.opensymphony.xwork2.conversion.impl.NumberConverter.isIntegerType(Class)",2,1,7
"com.opensymphony.xwork2.conversion.impl.StringConverter.convertValue(Map<String, Object>,Object,Member,String,Object,Class)",1,13,13
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.convertValue(Map<String, Object>,Object,Member,String,Object,Class)",4,19,22
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.doConvertToArray(Map<String, Object>,Object,Member,String,Object,Class)",2,1,2
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.doConvertToBoolean(Object)",2,2,2
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.doConvertToCalendar(Map<String, Object>,Object)",1,2,2
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.doConvertToCharacter(Object)",2,3,3
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.doConvertToClass(Object)",2,5,5
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.doConvertToCollection(Map<String, Object>,Object,Member,String,Object,Class)",2,1,2
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.doConvertToDate(Map<String, Object>,Object,Class)",2,1,2
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.doConvertToNumber(Map<String, Object>,Object,Class)",2,1,2
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.doConvertToString(Map<String, Object>,Object)",2,1,2
"com.opensymphony.xwork2.conversion.impl.XWorkBasicConverter.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.XWorkConverter()",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.addConverterMapping(Map<String, Object>,Class)",9,10,12
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.buildConverterFilename(Class)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.buildConverterMapping(Class)",1,4,4
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.conditionalReload(Class,Map<String, Object>)",1,3,3
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.convertValue(Map<String, Object>,Object,Class)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.convertValue(Map<String, Object>,Object,Member,String,Object,Class)",4,17,24
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.getClassProperty(Map<String, Object>)",1,1,3
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.getConversionErrorMessage(String,ValueStack)",1,2,2
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.getConverter(Class,String)",2,8,8
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.getIndexValues(String)",1,2,2
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.handleConversionException(Map<String, Object>,String,Object,Object)",1,4,5
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.lookup(Class)",2,2,3
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.lookup(String,boolean)",2,5,7
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.lookupSuper(Class)",5,6,6
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.registerConverter(String,TypeConverter)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.registerConverterNotFound(String)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.removeAllIndexesInPropertyName(String)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.setConversionAnnotationProcessor(ConversionAnnotationProcessor)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.setConversionFileProcessor(ConversionFileProcessor)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.setConversionPropertiesProcessor(ConversionPropertiesProcessor)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.setDefaultTypeConverter(XWorkBasicConverter)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.setFileManagerFactory(FileManagerFactory)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.setReloadingConfigs(String)",1,1,1
"com.opensymphony.xwork2.conversion.impl.XWorkConverter.setTypeConverterHolder(TypeConverterHolder)",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.ConversionDescription()",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.ConversionDescription(String)",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.asProperty()",1,5,5
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.getFullQualifiedClassName()",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.getType()",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.getValue()",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.setFullQualifiedClassName(String)",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.setProperty(String)",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.setRule(String)",1,7,8
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.setType(String)",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.setTypeConverter(String)",1,1,1
"com.opensymphony.xwork2.conversion.metadata.ConversionDescription.setValue(String)",1,1,1
"com.opensymphony.xwork2.factory.DefaultActionFactory.buildAction(String,String,ActionConfig,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.factory.DefaultActionFactory.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.factory.DefaultConverterFactory.buildConverter(Class<? extends TypeConverter>,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.factory.DefaultConverterFactory.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.factory.DefaultInterceptorFactory.buildInterceptor(InterceptorConfig,Map<String, String>)",2,2,8
"com.opensymphony.xwork2.factory.DefaultInterceptorFactory.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.factory.DefaultInterceptorFactory.setReflectionProvider(ReflectionProvider)",1,1,1
"com.opensymphony.xwork2.factory.DefaultResultFactory.buildResult(ResultConfig,Map<String, Object>)",1,6,6
"com.opensymphony.xwork2.factory.DefaultResultFactory.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.factory.DefaultResultFactory.setReflectionProvider(ReflectionProvider)",1,1,1
"com.opensymphony.xwork2.factory.DefaultUnknownHandlerFactory.buildUnknownHandler(String,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.factory.DefaultUnknownHandlerFactory.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.factory.DefaultValidatorFactory.buildValidator(String,Map<String, Object>,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.factory.DefaultValidatorFactory.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.factory.DefaultValidatorFactory.setReflectionProvider(ReflectionProvider)",1,1,1
"com.opensymphony.xwork2.inject.ConstructionContext.DelegatingInvocationHandler.invoke(Object,Method,Object[])",2,2,4
"com.opensymphony.xwork2.inject.ConstructionContext.DelegatingInvocationHandler.setDelegate(T)",1,1,1
"com.opensymphony.xwork2.inject.ConstructionContext.createProxy(Class<? super T>)",2,2,3
"com.opensymphony.xwork2.inject.ConstructionContext.finishConstruction()",1,1,1
"com.opensymphony.xwork2.inject.ConstructionContext.getCurrentReference()",1,1,1
"com.opensymphony.xwork2.inject.ConstructionContext.isConstructing()",1,1,1
"com.opensymphony.xwork2.inject.ConstructionContext.removeCurrentReference()",1,1,1
"com.opensymphony.xwork2.inject.ConstructionContext.setCurrentReference(T)",1,1,1
"com.opensymphony.xwork2.inject.ConstructionContext.setProxyDelegates(T)",1,3,3
"com.opensymphony.xwork2.inject.ConstructionContext.startConstruction()",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.ContainerBuilder()",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.alias(Class<T>,String)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.alias(Class<T>,String,String)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.alias(Key<T>,Key<T>)",2,1,2
"com.opensymphony.xwork2.inject.ContainerBuilder.checkKey(Key<?>)",2,2,3
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(Class<T>,String,T)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,Class)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,E)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,String)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,boolean)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,char)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,double)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,float)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,int)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,long)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.constant(String,short)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.contains(Class<?>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.contains(Class<?>,String)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.create(boolean)",1,3,3
"com.opensymphony.xwork2.inject.ContainerBuilder.ensureNotCreated()",2,1,2
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,Class<? extends T>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,Class<? extends T>,Scope)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,Factory<? extends T>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,Factory<? extends T>,Scope)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,Scope)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,String)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,String,Class<? extends T>)",1,2,2
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,String,Class<? extends T>,Scope)",1,2,2
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,String,Factory<? extends T>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,String,Factory<? extends T>,Scope)",1,1,2
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Class<T>,String,Scope)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.factory(Key<T>,InternalFactory<? extends T>,Scope)",1,2,2
"com.opensymphony.xwork2.inject.ContainerBuilder.injectStatics(Class<?>...)",1,1,1
"com.opensymphony.xwork2.inject.ContainerBuilder.setAllowDuplicates(boolean)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector.ConstructorInjector(ContainerImpl,Class<T>)",4,6,8
"com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector.construct(InternalContext,Class<? super T>)",3,3,5
"com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector.constructParameterInjector(Inject,ContainerImpl,Constructor<T>)",1,2,2
"com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector.findConstructorIn(Class<T>)",5,3,6
"com.opensymphony.xwork2.inject.ContainerImpl.ContainerImpl(Map<Key<?>, InternalFactory<?>>)",1,4,4
"com.opensymphony.xwork2.inject.ContainerImpl.FieldInjector.FieldInjector(ContainerImpl,Field,String)",3,4,5
"com.opensymphony.xwork2.inject.ContainerImpl.FieldInjector.inject(InternalContext,Object)",1,1,2
"com.opensymphony.xwork2.inject.ContainerImpl.MethodInjector.MethodInjector(ContainerImpl,Method,String)",3,4,5
"com.opensymphony.xwork2.inject.ContainerImpl.MethodInjector.inject(InternalContext,Object)",1,1,2
"com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException.MissingDependencyException(String)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector.ParameterInjector(ExternalContext<T>,InternalFactory<? extends T>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector.inject(Member,InternalContext)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.addInjectors(Class,List<Injector>)",2,1,2
"com.opensymphony.xwork2.inject.ContainerImpl.addInjectorsForFields(Field[],boolean,List<Injector>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.addInjectorsForMembers(List<M>,boolean,List<Injector>,InjectorFactory<M>)",5,5,6
"com.opensymphony.xwork2.inject.ContainerImpl.addInjectorsForMethods(Method[],boolean,List<Injector>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.callInContext(ContextualCallable<T>)",2,2,2
"com.opensymphony.xwork2.inject.ContainerImpl.createParameterInjector(Key<T>,Member)",2,1,2
"com.opensymphony.xwork2.inject.ContainerImpl.findInject(Annotation[])",3,3,3
"com.opensymphony.xwork2.inject.ContainerImpl.getConstructor(Class<T>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.getFactory(Key<T>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.getInstance(Class<T>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.getInstance(Class<T>,InternalContext)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.getInstance(Class<T>,String)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.getInstance(Class<T>,String,InternalContext)",2,2,2
"com.opensymphony.xwork2.inject.ContainerImpl.getInstanceNames(Class<?>)",1,2,2
"com.opensymphony.xwork2.inject.ContainerImpl.getParameters(Member,InternalContext,ParameterInjector[])",2,2,3
"com.opensymphony.xwork2.inject.ContainerImpl.getParametersInjectors(M,Annotation[][],Class[],String)",1,3,3
"com.opensymphony.xwork2.inject.ContainerImpl.inject(Class<T>)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.inject(Class<T>,InternalContext)",1,1,2
"com.opensymphony.xwork2.inject.ContainerImpl.inject(Object)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.inject(Object,InternalContext)",1,2,2
"com.opensymphony.xwork2.inject.ContainerImpl.injectStatics(List<Class<?>>)",1,3,3
"com.opensymphony.xwork2.inject.ContainerImpl.isStatic(Member)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.removeScopeStrategy()",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.setScopeStrategy(Strategy)",1,1,1
"com.opensymphony.xwork2.inject.ContainerImpl.toArray(List<ParameterInjector<?>>)",1,1,1
"com.opensymphony.xwork2.inject.DependencyException.DependencyException(String)",1,1,1
"com.opensymphony.xwork2.inject.DependencyException.DependencyException(String,Throwable)",1,1,1
"com.opensymphony.xwork2.inject.DependencyException.DependencyException(Throwable)",1,1,1
"com.opensymphony.xwork2.inject.ExternalContext.ExternalContext(Member,Key<T>,ContainerImpl)",1,1,1
"com.opensymphony.xwork2.inject.ExternalContext.getContainer()",1,1,1
"com.opensymphony.xwork2.inject.ExternalContext.getMember()",1,1,1
"com.opensymphony.xwork2.inject.ExternalContext.getName()",1,1,1
"com.opensymphony.xwork2.inject.ExternalContext.getScopeStrategy()",1,1,1
"com.opensymphony.xwork2.inject.ExternalContext.getType()",1,1,1
"com.opensymphony.xwork2.inject.ExternalContext.newInstance(Member,Key<T>,ContainerImpl)",1,1,1
"com.opensymphony.xwork2.inject.ExternalContext.toString()",1,1,1
"com.opensymphony.xwork2.inject.InternalContext.InternalContext(ContainerImpl)",1,1,1
"com.opensymphony.xwork2.inject.InternalContext.getConstructionContext(Object)",1,2,2
"com.opensymphony.xwork2.inject.InternalContext.getContainer()",1,1,1
"com.opensymphony.xwork2.inject.InternalContext.getContainerImpl()",1,1,1
"com.opensymphony.xwork2.inject.InternalContext.getExternalContext()",1,1,1
"com.opensymphony.xwork2.inject.InternalContext.getScopeStrategy()",3,2,3
"com.opensymphony.xwork2.inject.InternalContext.setExternalContext(ExternalContext<?>)",1,1,1
"com.opensymphony.xwork2.inject.Key.Key(Class<T>,String)",3,1,3
"com.opensymphony.xwork2.inject.Key.equals(Object)",3,2,4
"com.opensymphony.xwork2.inject.Key.getName()",1,1,1
"com.opensymphony.xwork2.inject.Key.getType()",1,1,1
"com.opensymphony.xwork2.inject.Key.hashCode()",1,1,1
"com.opensymphony.xwork2.inject.Key.newInstance(Class<T>,String)",1,1,1
"com.opensymphony.xwork2.inject.Key.toString()",1,1,1
"com.opensymphony.xwork2.inject.Scope.toCallable(InternalContext,InternalFactory<? extends T>)",1,1,1
"com.opensymphony.xwork2.inject.util.FinalizablePhantomReference.FinalizablePhantomReference(T)",1,1,1
"com.opensymphony.xwork2.inject.util.FinalizableReferenceQueue.FinalizableReferenceQueue()",1,1,1
"com.opensymphony.xwork2.inject.util.FinalizableReferenceQueue.cleanUp(Reference)",1,2,2
"com.opensymphony.xwork2.inject.util.FinalizableReferenceQueue.createAndStart()",1,1,1
"com.opensymphony.xwork2.inject.util.FinalizableReferenceQueue.deliverBadNews(Throwable)",1,1,1
"com.opensymphony.xwork2.inject.util.FinalizableReferenceQueue.getInstance()",1,1,1
"com.opensymphony.xwork2.inject.util.FinalizableReferenceQueue.start()",1,2,3
"com.opensymphony.xwork2.inject.util.FinalizableSoftReference.FinalizableSoftReference(T)",1,1,1
"com.opensymphony.xwork2.inject.util.FinalizableWeakReference.FinalizableWeakReference(T)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceCache.CallableCreate.CallableCreate(K)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceCache.CallableCreate.call()",3,1,3
"com.opensymphony.xwork2.inject.util.ReferenceCache.ReferenceCache()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceCache.ReferenceCache(ReferenceType,ReferenceType)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceCache.cancel()",2,1,2
"com.opensymphony.xwork2.inject.util.ReferenceCache.get(Object)",1,2,2
"com.opensymphony.xwork2.inject.util.ReferenceCache.internalCreate(K)",5,3,7
"com.opensymphony.xwork2.inject.util.ReferenceCache.of(ReferenceType,ReferenceType,Function<? super K, ? extends V>)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceCache.readObject(ObjectInputStream)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.Entry.Entry(K,V)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.Entry.equals(Object)",2,2,3
"com.opensymphony.xwork2.inject.util.ReferenceMap.Entry.getKey()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.Entry.getValue()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.Entry.hashCode()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.Entry.setValue(V)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.Entry.toString()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.KeyReferenceAwareWrapper.KeyReferenceAwareWrapper(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.KeyReferenceAwareWrapper.hashCode()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.ReferenceAwareWrapper.ReferenceAwareWrapper(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.ReferenceAwareWrapper.equals(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.ReferenceAwareWrapper.hashCode()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.ReferenceAwareWrapper.unwrap()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.ReferenceMap(ReferenceType,ReferenceType)",2,1,3
"com.opensymphony.xwork2.inject.util.ReferenceMap.SoftKeyReference.SoftKeyReference(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.SoftKeyReference.equals(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.SoftKeyReference.finalizeReferent()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.SoftKeyReference.hashCode()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.SoftValueReference.SoftValueReference(Object,Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.SoftValueReference.equals(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.SoftValueReference.finalizeReferent()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.WeakKeyReference.WeakKeyReference(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.WeakKeyReference.equals(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.WeakKeyReference.finalizeReferent()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.WeakKeyReference.hashCode()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.WeakValueReference.WeakValueReference(Object,Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.WeakValueReference.equals(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.WeakValueReference.finalizeReferent()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.clear()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.containsKey(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.containsValue(Object)",3,2,3
"com.opensymphony.xwork2.inject.util.ReferenceMap.dereference(ReferenceType,Object)",1,2,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.dereferenceCollection(ReferenceType,T,T)",1,2,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.dereferenceEntry(Entry<Object, Object>)",1,1,3
"com.opensymphony.xwork2.inject.util.ReferenceMap.dereferenceKey(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.dereferenceKeySet(Set)",1,2,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.dereferenceValue(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.dereferenceValues(Collection)",1,2,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.ensureNotNull(Object)",2,1,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.ensureNotNull(Object...)",3,1,3
"com.opensymphony.xwork2.inject.util.ReferenceMap.entrySet()",1,3,3
"com.opensymphony.xwork2.inject.util.ReferenceMap.execute(Strategy,K,V)",1,2,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.get(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.getPutStrategy()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.internalGet(K)",1,2,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.isEmpty()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.keyHashCode(Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.keySet()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.makeKeyReferenceAware(Object)",1,1,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.makeValueReferenceAware(Object)",1,1,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.put(K,V)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.putAll(Map<? extends K, ? extends V>)",1,2,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.putIfAbsent(K,V)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.putIfAbsentStrategy()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.putStrategy()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.readObject(ObjectInputStream)",3,2,3
"com.opensymphony.xwork2.inject.util.ReferenceMap.referenceEquals(Reference,Object)",3,3,4
"com.opensymphony.xwork2.inject.util.ReferenceMap.referenceKey(K)",5,2,5
"com.opensymphony.xwork2.inject.util.ReferenceMap.referenceValue(Object,Object)",5,2,5
"com.opensymphony.xwork2.inject.util.ReferenceMap.remove(Object)",1,2,2
"com.opensymphony.xwork2.inject.util.ReferenceMap.remove(Object,Object)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.replace(K,V)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.replace(K,V,V)",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.replaceStrategy()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.size()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.values()",1,1,1
"com.opensymphony.xwork2.inject.util.ReferenceMap.writeObject(ObjectOutputStream)",1,3,4
"com.opensymphony.xwork2.inject.util.Strings.capitalize(String)",2,2,3
"com.opensymphony.xwork2.interceptor.AbstractInterceptor.destroy()",1,1,1
"com.opensymphony.xwork2.interceptor.AbstractInterceptor.init()",1,1,1
"com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(ActionInvocation)",1,14,15
"com.opensymphony.xwork2.interceptor.AliasInterceptor.setAliasesKey(String)",1,1,1
"com.opensymphony.xwork2.interceptor.AliasInterceptor.setDevMode(String)",1,1,1
"com.opensymphony.xwork2.interceptor.AliasInterceptor.setValueStackFactory(ValueStackFactory)",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.copyStack(ActionInvocation,CompoundRoot)",1,3,3
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.getExcludes()",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.getIncludes()",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ActionInvocation)",1,2,2
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.prepareExcludes()",1,6,8
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.prepareList(CompoundRoot)",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.setCopyErrors(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.setCopyFieldErrors(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.setCopyMessages(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.setExcludes(Collection<String>)",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.setIncludes(Collection<String>)",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.setReflectionProvider(ReflectionProvider)",1,1,1
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.shouldCopy(Object)",1,1,2
"com.opensymphony.xwork2.interceptor.ChainingInterceptor.shouldCopyStack(ActionInvocation,CompoundRoot)",1,3,3
"com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.escape(Object)",1,1,1
"com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.getOverrideExpr(ActionInvocation,Object)",1,1,1
"com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ActionInvocation)",1,6,7
"com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.shouldAddError(String,Object)",1,1,1
"com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(ActionInvocation)",3,3,3
"com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.processInputConfig(Object,String,String)",1,3,3
"com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.processValidationErrorAware(Object,String)",1,2,2
"com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.processValidationWorkflowAware(Object,String)",1,2,2
"com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.setInputResultName(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionHolder.ExceptionHolder(Exception)",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionHolder.getException()",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionHolder.getExceptionStack()",1,2,3
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.doLog(Logger,Exception)",8,8,8
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.findMappingFromExceptions(List<ExceptionMappingConfig>,Throwable)",1,3,5
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.getDepth(String,Class,int)",3,1,3
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.getDepth(String,Throwable)",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.getLogCategory()",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.getLogLevel()",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.handleLogging(Exception)",1,3,3
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ActionInvocation)",2,5,5
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.isLogEnabled()",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.publishException(ActionInvocation,ExceptionHolder)",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.setLogCategory(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.setLogEnabled(boolean)",1,1,1
"com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.setLogLevel(String)",1,1,1
"com.opensymphony.xwork2.interceptor.I18nInterceptor.I18nInterceptor()",1,1,1
"com.opensymphony.xwork2.interceptor.I18nInterceptor.LocaleFinder.LocaleFinder(ActionInvocation)",1,1,1
"com.opensymphony.xwork2.interceptor.I18nInterceptor.LocaleFinder.find()",2,2,3
"com.opensymphony.xwork2.interceptor.I18nInterceptor.LocaleFinder.getRequestedLocale()",1,1,1
"com.opensymphony.xwork2.interceptor.I18nInterceptor.LocaleFinder.getStorage()",1,1,1
"com.opensymphony.xwork2.interceptor.I18nInterceptor.findLocaleParameter(Map<String, Object>,String)",1,4,4
"com.opensymphony.xwork2.interceptor.I18nInterceptor.getLocaleFromParam(Object)",1,4,4
"com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(ActionInvocation)",1,4,4
"com.opensymphony.xwork2.interceptor.I18nInterceptor.readStoredLocalFromCurrentInvocation(ActionInvocation)",1,2,2
"com.opensymphony.xwork2.interceptor.I18nInterceptor.readStoredLocalFromSession(ActionInvocation,Map<String, Object>)",2,2,3
"com.opensymphony.xwork2.interceptor.I18nInterceptor.readStoredLocale(ActionInvocation,Map<String, Object>)",2,1,2
"com.opensymphony.xwork2.interceptor.I18nInterceptor.saveLocale(ActionInvocation,Locale)",1,1,1
"com.opensymphony.xwork2.interceptor.I18nInterceptor.setAttributeName(String)",1,1,1
"com.opensymphony.xwork2.interceptor.I18nInterceptor.setParameterName(String)",1,1,1
"com.opensymphony.xwork2.interceptor.I18nInterceptor.setRequestOnlyParameterName(String)",1,1,1
"com.opensymphony.xwork2.interceptor.I18nInterceptor.storeLocale(ActionInvocation,Locale,String)",1,4,4
"com.opensymphony.xwork2.interceptor.LoggingInterceptor.intercept(ActionInvocation)",1,1,1
"com.opensymphony.xwork2.interceptor.LoggingInterceptor.logMessage(ActionInvocation,String)",1,4,4
"com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.applyInterceptor(ActionInvocation)",1,2,2
"com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.getExcludeMethodsSet()",1,1,1
"com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.getIncludeMethodsSet()",1,1,1
"com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(ActionInvocation)",2,2,2
"com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.setExcludeMethods(String)",1,1,1
"com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.setIncludeMethods(String)",1,1,1
"com.opensymphony.xwork2.interceptor.MethodFilterInterceptorUtil.applyMethod(Set<String>,Set<String>,String)",16,16,25
"com.opensymphony.xwork2.interceptor.MethodFilterInterceptorUtil.applyMethod(String,String,String)",1,1,3
"com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.RefreshModelBeforeResult.RefreshModelBeforeResult(ModelDriven,Object)",1,1,1
"com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.RefreshModelBeforeResult.beforeResult(ActionInvocation,String)",3,5,6
"com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ActionInvocation)",1,4,4
"com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.setRefreshModelBeforeResult(boolean)",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.asCollection(String)",2,1,2
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.getAllowedCollection()",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.getBlockedCollection()",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.getIncludesExcludesMap()",1,6,6
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.intercept(ActionInvocation)",1,8,8
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.isDefaultBlock()",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.isPropertySeparator(char)",1,1,3
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.setAllowed(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.setAllowedCollection(Collection<String>)",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.setBlocked(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.setBlockedCollection(Collection<String>)",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor.setDefaultBlock(boolean)",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterRemoverInterceptor.intercept(ActionInvocation)",1,9,9
"com.opensymphony.xwork2.interceptor.ParameterRemoverInterceptor.setParamNames(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ParameterRemoverInterceptor.setParamValues(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.acceptableName(String)",1,4,5
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.addParametersToContext(ActionContext,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.countOGNLCharacters(String)",1,2,4
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ActionInvocation)",1,4,4
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.getOrderedComparator()",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.getParameterLogMap(Map<String, Object>)",2,5,6
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.isAcceptableParameter(String,Object)",1,3,4
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.isAcceptableValue(Object)",2,2,5
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.isAccepted(String)",2,1,2
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.isExcluded(String)",2,2,2
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.isOrdered()",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.isWithinLengthLimit(String)",1,2,2
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.notifyDeveloper(String,String...)",1,2,2
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.notifyDeveloperParameterException(Object,String,String)",1,2,2
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.retrieveParameters(ActionContext)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.setAcceptParamNames(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.setAcceptedPatterns(AcceptedPatternsChecker)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.setDevMode(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.setExcludeParams(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.setExcludedPatterns(ExcludedPatternsChecker)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.setOrdered(boolean)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.setParamNameMaxLength(int)",1,1,1
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.setParameters(Object,ValueStack,Map<String, Object>)",1,13,13
"com.opensymphony.xwork2.interceptor.ParametersInterceptor.setValueStackFactory(ValueStackFactory)",1,1,1
"com.opensymphony.xwork2.interceptor.PrefixMethodInvocationUtil.capitalizeMethodName(String)",1,1,1
"com.opensymphony.xwork2.interceptor.PrefixMethodInvocationUtil.getPrefixedMethod(String[],String,Object)",2,3,3
"com.opensymphony.xwork2.interceptor.PrefixMethodInvocationUtil.invokePrefixMethod(ActionInvocation,String[])",1,2,3
"com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(ActionInvocation)",4,4,7
"com.opensymphony.xwork2.interceptor.PrepareInterceptor.setAlwaysInvokePrepare(String)",1,1,1
"com.opensymphony.xwork2.interceptor.PrepareInterceptor.setFirstCallPrepareDo(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ActionInvocation)",4,5,6
"com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.resolveModel(ObjectFactory,ActionContext,String,String,String)",1,3,3
"com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.setClassName(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.setName(String)",1,1,1
"com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.setScope(String)",1,1,1
"com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.addParametersToContext(ActionContext,Map<String, ?>)",1,4,6
"com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(ActionInvocation)",1,13,14
"com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.retrieveParameters(ActionContext)",2,2,2
"com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.setDevMode(String)",1,1,1
"com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.setMerge(String)",1,1,1
"com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.setOverwrite(String)",1,1,1
"com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.setParse(String)",1,1,1
"com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.setValueStackFactory(ValueStackFactory)",1,1,1
"com.opensymphony.xwork2.interceptor.TimerInterceptor.doLog(Logger,String)",8,8,8
"com.opensymphony.xwork2.interceptor.TimerInterceptor.getLogCategory()",1,1,1
"com.opensymphony.xwork2.interceptor.TimerInterceptor.getLogLevel()",1,1,1
"com.opensymphony.xwork2.interceptor.TimerInterceptor.getLoggerToUse()",2,3,4
"com.opensymphony.xwork2.interceptor.TimerInterceptor.intercept(ActionInvocation)",2,2,2
"com.opensymphony.xwork2.interceptor.TimerInterceptor.invokeUnderTiming(ActionInvocation)",1,2,2
"com.opensymphony.xwork2.interceptor.TimerInterceptor.isLoggerEnabled(Logger,String)",7,7,7
"com.opensymphony.xwork2.interceptor.TimerInterceptor.setLogCategory(String)",1,1,1
"com.opensymphony.xwork2.interceptor.TimerInterceptor.setLogLevel(String)",1,1,1
"com.opensymphony.xwork2.interceptor.TimerInterceptor.shouldLog()",2,2,3
"com.opensymphony.xwork2.interceptor.annotations.AnnotationParameterFilterIntereptor.intercept(ActionInvocation)",5,11,13
"com.opensymphony.xwork2.interceptor.annotations.AnnotationWorkflowInterceptor.beforeResult(ActionInvocation,String)",3,3,4
"com.opensymphony.xwork2.interceptor.annotations.AnnotationWorkflowInterceptor.comparePriorities(int,int)",3,1,3
"com.opensymphony.xwork2.interceptor.annotations.AnnotationWorkflowInterceptor.intercept(ActionInvocation)",4,5,6
"com.opensymphony.xwork2.mock.MockActionInvocation.addPreResultListener(PreResultListener)",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.deserialize(ActionContext)",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.getAction()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.getActionEventListener()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.getInvocationContext()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.getProxy()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.getResult()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.getResultCode()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.getStack()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.init(ActionProxy)",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.invoke()",1,2,2
"com.opensymphony.xwork2.mock.MockActionInvocation.invokeActionOnly()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.isExecuted()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.serialize()",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.setAction(Object)",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.setActionEventListener(ActionEventListener)",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.setInvocationContext(ActionContext)",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.setProxy(ActionProxy)",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.setResult(Result)",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.setResultCode(String)",1,1,1
"com.opensymphony.xwork2.mock.MockActionInvocation.setStack(ValueStack)",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.execute()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.getAction()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.getActionName()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.getConfig()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.getExecuteResult()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.getInvocation()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.getMethod()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.getNamespace()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.isExecutedCalled()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.isMethodSpecified()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.prepare()",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.setAction(Object)",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.setActionName(String)",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.setConfig(ActionConfig)",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.setExecuteResult(boolean)",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.setInvocation(ActionInvocation)",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.setMethod(String)",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.setMethodSpecified(boolean)",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.setNamespace(String)",1,1,1
"com.opensymphony.xwork2.mock.MockActionProxy.setReturnedResult(String)",1,1,1
"com.opensymphony.xwork2.mock.MockContainer.getInstance(Class<T>)",1,1,1
"com.opensymphony.xwork2.mock.MockContainer.getInstance(Class<T>,String)",1,1,1
"com.opensymphony.xwork2.mock.MockContainer.getInstanceNames(Class<?>)",1,1,1
"com.opensymphony.xwork2.mock.MockContainer.inject(Class<T>)",1,1,1
"com.opensymphony.xwork2.mock.MockContainer.inject(Object)",1,1,1
"com.opensymphony.xwork2.mock.MockContainer.removeScopeStrategy()",1,1,1
"com.opensymphony.xwork2.mock.MockContainer.setScopeStrategy(Strategy)",1,1,1
"com.opensymphony.xwork2.mock.MockInterceptor.destroy()",1,1,1
"com.opensymphony.xwork2.mock.MockInterceptor.equals(Object)",6,3,8
"com.opensymphony.xwork2.mock.MockInterceptor.getExpectedFoo()",1,1,1
"com.opensymphony.xwork2.mock.MockInterceptor.getFoo()",1,1,1
"com.opensymphony.xwork2.mock.MockInterceptor.hashCode()",1,3,4
"com.opensymphony.xwork2.mock.MockInterceptor.init()",1,1,1
"com.opensymphony.xwork2.mock.MockInterceptor.intercept(ActionInvocation)",1,1,1
"com.opensymphony.xwork2.mock.MockInterceptor.isExecuted()",1,1,1
"com.opensymphony.xwork2.mock.MockInterceptor.setExpectedFoo(String)",1,1,1
"com.opensymphony.xwork2.mock.MockInterceptor.setFoo(String)",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.MockObjectTypeDeterminer()",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.MockObjectTypeDeterminer(Class,Class,String,boolean)",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.getElementClass()",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.getElementClass(Class,String,Object)",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.getKeyClass()",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.getKeyClass(Class,String)",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.getKeyProperty()",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.getKeyProperty(Class,String)",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.isShouldCreateIfNew()",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.setElementClass(Class)",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.setKeyClass(Class)",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.setKeyProperty(String)",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.setShouldCreateIfNew(boolean)",1,1,1
"com.opensymphony.xwork2.mock.MockObjectTypeDeterminer.shouldCreateIfNew(Class,String,Object,String,boolean)",1,2,2
"com.opensymphony.xwork2.mock.MockResult.equals(Object)",2,1,2
"com.opensymphony.xwork2.mock.MockResult.execute(ActionInvocation)",1,1,1
"com.opensymphony.xwork2.mock.MockResult.hashCode()",1,1,1
"com.opensymphony.xwork2.mock.MockResult.setFoo(String)",1,1,1
"com.opensymphony.xwork2.ognl.ErrorMessageBuilder.ErrorMessageBuilder()",1,1,1
"com.opensymphony.xwork2.ognl.ErrorMessageBuilder.appenExpression(String)",1,1,1
"com.opensymphony.xwork2.ognl.ErrorMessageBuilder.appendValue(Object)",1,1,1
"com.opensymphony.xwork2.ognl.ErrorMessageBuilder.appendValueAsArray(Object[],StringBuilder)",1,3,3
"com.opensymphony.xwork2.ognl.ErrorMessageBuilder.build()",1,1,1
"com.opensymphony.xwork2.ognl.ErrorMessageBuilder.create()",1,1,1
"com.opensymphony.xwork2.ognl.ErrorMessageBuilder.errorSettingExpressionWithValue(String,Object)",1,2,2
"com.opensymphony.xwork2.ognl.ErrorMessageBuilder.hasMoreElements(Object[],int)",1,1,1
"com.opensymphony.xwork2.ognl.ObjectProxy.getLastClassAccessed()",1,1,1
"com.opensymphony.xwork2.ognl.ObjectProxy.getLastPropertyAccessed()",1,1,1
"com.opensymphony.xwork2.ognl.ObjectProxy.getValue()",1,1,1
"com.opensymphony.xwork2.ognl.ObjectProxy.setLastClassAccessed(Class)",1,1,1
"com.opensymphony.xwork2.ognl.ObjectProxy.setLastPropertyAccessed(String)",1,1,1
"com.opensymphony.xwork2.ognl.ObjectProxy.setValue(Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlNullHandlerWrapper.OgnlNullHandlerWrapper(NullHandler)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlNullHandlerWrapper.nullMethodResult(Map,Object,String,Object[])",1,1,1
"com.opensymphony.xwork2.ognl.OgnlNullHandlerWrapper.nullPropertyValue(Map,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionContextFactory.createDefaultContext(Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.copy(Object,Object,Map<String, Object>,Collection<String>,Collection<String>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.getBeanMap(Object)",1,1,2
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.getField(Class,String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.getGetMethod(Class,String)",1,1,2
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.getPropertyDescriptor(Class,String)",1,1,2
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.getPropertyDescriptors(Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.getRealTarget(String,Map<String, Object>,Object)",1,1,2
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.getSetMethod(Class,String)",1,1,2
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.getValue(String,Map<String, Object>,Object)",1,1,2
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.setOgnlUtil(OgnlUtil)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.setProperties(Map<String, ?>,Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.setProperties(Map<String, ?>,Object,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.setProperties(Map<String, ?>,Object,Map<String, Object>,boolean)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.setProperty(String,Object,Object,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.setProperty(String,Object,Object,Map<String, Object>,boolean)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlReflectionProvider.setValue(String,Map<String, Object>,Object,Object)",1,1,2
"com.opensymphony.xwork2.ognl.OgnlTypeConverterWrapper.OgnlTypeConverterWrapper(TypeConverter)",2,1,2
"com.opensymphony.xwork2.ognl.OgnlTypeConverterWrapper.convertValue(Map,Object,Member,String,Object,Class)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlTypeConverterWrapper.getTarget()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.checkEnableEvalExpression(Object,Map<String, Object>)",2,2,3
"com.opensymphony.xwork2.ognl.OgnlUtil.compile(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.compile(String,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.compileAndExecute(String,Map<String, Object>,OgnlTask<T>)",1,4,4
"com.opensymphony.xwork2.ognl.OgnlUtil.copy(Object,Object,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.copy(Object,Object,Map<String, Object>,Collection<String>,Collection<String>)",2,13,15
"com.opensymphony.xwork2.ognl.OgnlUtil.createDefaultContext(Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.createDefaultContext(Object,ClassResolver)",1,2,2
"com.opensymphony.xwork2.ognl.OgnlUtil.getBeanInfo(Class)",1,2,2
"com.opensymphony.xwork2.ognl.OgnlUtil.getBeanInfo(Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.getBeanMap(Object)",1,3,3
"com.opensymphony.xwork2.ognl.OgnlUtil.getExcludedClasses()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.getExcludedPackageNamePatterns()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.getPropertyDescriptors(Class)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.getPropertyDescriptors(Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.getRealTarget(String,Map<String, Object>,Object)",5,5,8
"com.opensymphony.xwork2.ognl.OgnlUtil.getTypeConverterFromContext(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.getValue(String,Map<String, Object>,Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.getValue(String,Map<String, Object>,Object,Class)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.internalSetProperty(String,Object,Object,Map<String, Object>,boolean)",2,4,5
"com.opensymphony.xwork2.ognl.OgnlUtil.isEvalExpression(Object,Map<String, Object>)",2,2,4
"com.opensymphony.xwork2.ognl.OgnlUtil.setAllowStaticMethodAccess(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setDevMode(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setEnableEvalExpression(String)",1,2,2
"com.opensymphony.xwork2.ognl.OgnlUtil.setEnableExpressionCache(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setExcludedClasses(String)",2,2,3
"com.opensymphony.xwork2.ognl.OgnlUtil.setExcludedPackageName(String)",1,2,2
"com.opensymphony.xwork2.ognl.OgnlUtil.setProperties(Map<String, ?>,Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setProperties(Map<String, ?>,Object,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setProperties(Map<String, ?>,Object,Map<String, Object>,boolean)",2,2,3
"com.opensymphony.xwork2.ognl.OgnlUtil.setProperties(Map<String, ?>,Object,boolean)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setProperty(String,Object,Object,Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setProperty(String,Object,Object,Map<String, Object>,boolean)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setValue(String,Map<String, Object>,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlUtil.setValue(String,Map<String, Object>,Object,Object,boolean)",2,2,3
"com.opensymphony.xwork2.ognl.OgnlUtil.setXWorkConverter(XWorkConverter)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.OgnlValueStack(ValueStack,XWorkConverter,CompoundRootAccessor,boolean)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.OgnlValueStack(XWorkConverter,CompoundRootAccessor,TextProvider,boolean)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.cleanUpContext(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.clearContextValues()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.findInContext(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.findString(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.findString(String,boolean)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.findValue(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.findValue(String,Class)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.findValue(String,Class,boolean)",1,3,3
"com.opensymphony.xwork2.ognl.OgnlValueStack.findValue(String,boolean)",1,3,3
"com.opensymphony.xwork2.ognl.OgnlValueStack.getContext()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.getExprOverrides()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.getRoot()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.getValue(String,Class)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.getValueUsingOgnl(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.handleOgnlException(String,Object,boolean,OgnlException)",2,3,5
"com.opensymphony.xwork2.ognl.OgnlValueStack.handleOgnlException(String,boolean,OgnlException)",3,3,4
"com.opensymphony.xwork2.ognl.OgnlValueStack.handleOtherException(String,boolean,Exception)",2,1,2
"com.opensymphony.xwork2.ognl.OgnlValueStack.handleRuntimeException(String,Object,boolean,RuntimeException)",2,2,2
"com.opensymphony.xwork2.ognl.OgnlValueStack.logLookupFailure(String,Exception)",1,3,3
"com.opensymphony.xwork2.ognl.OgnlValueStack.lookupForOverrides(String)",1,3,3
"com.opensymphony.xwork2.ognl.OgnlValueStack.peek()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.pop()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.push(Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.readResolve()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.retrieveSetMap()",1,2,2
"com.opensymphony.xwork2.ognl.OgnlValueStack.set(String,Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setAcceptProperties(Set<Pattern>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setDefaultType(Class)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setDevMode(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setExcludeProperties(Set<Pattern>)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setExprOverrides(Map<Object, Object>)",1,2,2
"com.opensymphony.xwork2.ognl.OgnlValueStack.setLogMissingProperties(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setOgnlUtil(OgnlUtil)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setParameter(String,Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setRoot(XWorkConverter,CompoundRootAccessor,CompoundRoot,boolean)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setValue(String,Object)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setValue(String,Object,boolean)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setValue(String,Object,boolean,boolean)",1,3,3
"com.opensymphony.xwork2.ognl.OgnlValueStack.setXWorkConverter(XWorkConverter)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.setupExceptionOnFailure(boolean)",1,2,2
"com.opensymphony.xwork2.ognl.OgnlValueStack.shouldLogMissingPropertyWarning(OgnlException)",1,1,4
"com.opensymphony.xwork2.ognl.OgnlValueStack.shouldUseOldMap(Object)",1,2,2
"com.opensymphony.xwork2.ognl.OgnlValueStack.size()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStack.tryFindValue(String)",1,3,3
"com.opensymphony.xwork2.ognl.OgnlValueStack.tryFindValue(String,Class)",2,2,2
"com.opensymphony.xwork2.ognl.OgnlValueStack.tryFindValueWhenExpressionIsNotNull(String)",2,1,2
"com.opensymphony.xwork2.ognl.OgnlValueStack.tryFindValueWhenExpressionIsNotNull(String,Class)",2,1,2
"com.opensymphony.xwork2.ognl.OgnlValueStack.trySetValue(String,Object,boolean,Map<String, Object>,boolean)",1,1,2
"com.opensymphony.xwork2.ognl.OgnlValueStackFactory.createValueStack()",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStackFactory.createValueStack(ValueStack)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStackFactory.setAllowStaticMethodAccess(String)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStackFactory.setContainer(Container)",2,10,11
"com.opensymphony.xwork2.ognl.OgnlValueStackFactory.setTextProvider(TextProvider)",1,1,1
"com.opensymphony.xwork2.ognl.OgnlValueStackFactory.setXWorkConverter(XWorkConverter)",1,1,1
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.SecurityMemberAccess(boolean)",1,1,1
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.checkEnumAccess(Object,Member)",3,3,4
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.checkStaticMethodAccess(Member)",2,1,2
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.getAllowStaticMethodAccess()",1,1,1
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.isAcceptableProperty(String)",1,3,3
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.isAccepted(String)",4,3,4
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.isAccessible(Map,Object,Member,String)",6,10,11
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.isClassExcluded(Class<?>)",4,2,4
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.isExcluded(String)",4,3,4
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.isPackageExcluded(Package,Package)",3,6,8
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.setAcceptProperties(Set<Pattern>)",1,1,1
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.setExcludeProperties(Set<Pattern>)",1,1,1
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.setExcludedClasses(Set<Class<?>>)",1,1,1
"com.opensymphony.xwork2.ognl.SecurityMemberAccess.setExcludedPackageNamePatterns(Set<Pattern>)",1,1,1
"com.opensymphony.xwork2.ognl.XWorkTypeConverterWrapper.XWorkTypeConverterWrapper(TypeConverter)",1,1,1
"com.opensymphony.xwork2.ognl.XWorkTypeConverterWrapper.convertValue(Map,Object,Member,String,Object,Class)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.MethodCall.MethodCall(Class,String,Class[])",1,2,2
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.MethodCall.equals(Object)",1,3,3
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.MethodCall.hashCode()",1,1,1
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.callMethod(Map,Object,String,Object[])",9,21,25
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.callStaticMethod(Map,Class,String,Object[])",1,1,1
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.classForName(String,Map)",4,5,5
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.getArgTypes(Object[])",2,3,4
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.getProperty(Map,Object,Object)",10,10,14
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.getSourceAccessor(OgnlContext,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.getSourceSetter(OgnlContext,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.setDevMode(String)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.CompoundRootAccessor.setProperty(Map,Object,Object,Object)",7,6,10
"com.opensymphony.xwork2.ognl.accessor.ObjectAccessor.getProperty(Map,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.ObjectAccessor.setProperty(Map,Object,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.ObjectProxyPropertyAccessor.getProperty(Map,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.ObjectProxyPropertyAccessor.getSourceAccessor(OgnlContext,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.ObjectProxyPropertyAccessor.getSourceSetter(OgnlContext,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.ObjectProxyPropertyAccessor.setProperty(Map,Object,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.ObjectProxyPropertyAccessor.setupContext(Map,ObjectProxy)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.SurrugateList.SurrugateList(Collection)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.SurrugateList.add(Object)",1,2,2
"com.opensymphony.xwork2.ognl.accessor.SurrugateList.add(int,Object)",1,2,2
"com.opensymphony.xwork2.ognl.accessor.SurrugateList.addAll(Collection)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.SurrugateList.addAll(int,Collection)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.SurrugateList.set(int,Object)",1,2,2
"com.opensymphony.xwork2.ognl.accessor.XWorkCollectionPropertyAccessor.getProperty(Map,Object,Object)",7,11,14
"com.opensymphony.xwork2.ognl.accessor.XWorkCollectionPropertyAccessor.getPropertyThroughIteration(Map,Collection,String,Object)",3,2,3
"com.opensymphony.xwork2.ognl.accessor.XWorkCollectionPropertyAccessor.getRealValue(Map,Object,Class)",2,1,3
"com.opensymphony.xwork2.ognl.accessor.XWorkCollectionPropertyAccessor.getSetMap(Map,Collection,String)",1,4,4
"com.opensymphony.xwork2.ognl.accessor.XWorkCollectionPropertyAccessor.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkCollectionPropertyAccessor.setObjectTypeDeterminer(ObjectTypeDeterminer)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkCollectionPropertyAccessor.setOgnlUtil(OgnlUtil)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkCollectionPropertyAccessor.setProperty(Map,Object,Object,Object)",3,4,5
"com.opensymphony.xwork2.ognl.accessor.XWorkCollectionPropertyAccessor.setXWorkConverter(XWorkConverter)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkEnumerationAccessor.setProperty(Map,Object,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkIteratorPropertyAccessor.setProperty(Map,Object,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor.getProperty(Map,Object,Object)",7,11,14
"com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor.getRealValue(Map,Object,Class)",2,1,3
"com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor.setObjectTypeDeterminer(ObjectTypeDeterminer)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor.setOgnlUtil(OgnlUtil)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor.setProperty(Map,Object,Object,Object)",3,7,9
"com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor.setXWorkCollectionPropertyAccessor(PropertyAccessor)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor.setXWorkConverter(XWorkConverter)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessor.contains(String[],String)",3,2,3
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessor.getKey(Map,Object)",2,1,4
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessor.getProperty(Map,Object,Object)",4,7,11
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessor.getValue(Map,Object)",3,1,4
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessor.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessor.setObjectTypeDeterminer(ObjectTypeDeterminer)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessor.setProperty(Map,Object,Object,Object)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessor.setXWorkConverter(XWorkConverter)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessorTest.MapHolder.MapHolder(Map)",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessorTest.MapHolder.getMap()",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessorTest.testCreateNullObjectsIsFalseByDefault()",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessorTest.testMapContentsAreReturned()",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessorTest.testNullIsNotReturnedWhenCreateNullObjectsIsSpecified()",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessorTest.testNullIsReturnedWhenCreateNullObjectsIsSpecifiedAsFalse()",1,1,1
"com.opensymphony.xwork2.ognl.accessor.XWorkMethodAccessor.callMethod(Map,Object,String,Object[])",7,13,14
"com.opensymphony.xwork2.ognl.accessor.XWorkMethodAccessor.callMethodWithDebugInfo(Map,Object,String,Object[])",1,4,4
"com.opensymphony.xwork2.ognl.accessor.XWorkMethodAccessor.callStaticMethod(Map,Class,String,Object[])",2,3,3
"com.opensymphony.xwork2.ognl.accessor.XWorkMethodAccessor.callStaticMethodWithDebugInfo(Map,Class,String,Object[])",1,4,4
"com.opensymphony.xwork2.ognl.accessor.XWorkObjectPropertyAccessor.getProperty(Map,Object,Object)",1,1,1
"com.opensymphony.xwork2.security.AcceptedPatternsChecker.IsAccepted.IsAccepted(boolean,String)",1,1,1
"com.opensymphony.xwork2.security.AcceptedPatternsChecker.IsAccepted.getAcceptedPattern()",1,1,1
"com.opensymphony.xwork2.security.AcceptedPatternsChecker.IsAccepted.isAccepted()",1,1,1
"com.opensymphony.xwork2.security.AcceptedPatternsChecker.IsAccepted.no(String)",1,1,1
"com.opensymphony.xwork2.security.AcceptedPatternsChecker.IsAccepted.toString()",1,1,1
"com.opensymphony.xwork2.security.AcceptedPatternsChecker.IsAccepted.yes(String)",1,1,1
"com.opensymphony.xwork2.security.DefaultAcceptedPatternsChecker.DefaultAcceptedPatternsChecker()",1,1,1
"com.opensymphony.xwork2.security.DefaultAcceptedPatternsChecker.getAcceptedPatterns()",1,1,1
"com.opensymphony.xwork2.security.DefaultAcceptedPatternsChecker.isAccepted(String)",3,3,3
"com.opensymphony.xwork2.security.DefaultAcceptedPatternsChecker.setAcceptedPatterns(Set<String>)",1,2,2
"com.opensymphony.xwork2.security.DefaultAcceptedPatternsChecker.setAcceptedPatterns(String)",1,1,1
"com.opensymphony.xwork2.security.DefaultAcceptedPatternsChecker.setAcceptedPatterns(String[])",1,1,1
"com.opensymphony.xwork2.security.DefaultAcceptedPatternsChecker.setAdditionalAcceptedPatterns(String)",1,2,2
"com.opensymphony.xwork2.security.DefaultAcceptedPatternsChecker.setOverrideAcceptedPatterns(String)",1,2,2
"com.opensymphony.xwork2.security.DefaultExcludedPatternsChecker.DefaultExcludedPatternsChecker()",1,1,1
"com.opensymphony.xwork2.security.DefaultExcludedPatternsChecker.getExcludedPatterns()",1,1,1
"com.opensymphony.xwork2.security.DefaultExcludedPatternsChecker.isExcluded(String)",3,3,3
"com.opensymphony.xwork2.security.DefaultExcludedPatternsChecker.setAdditionalExcludePatterns(String)",1,2,2
"com.opensymphony.xwork2.security.DefaultExcludedPatternsChecker.setExcludedPatterns(Set<String>)",1,2,2
"com.opensymphony.xwork2.security.DefaultExcludedPatternsChecker.setExcludedPatterns(String)",1,1,1
"com.opensymphony.xwork2.security.DefaultExcludedPatternsChecker.setExcludedPatterns(String[])",1,1,1
"com.opensymphony.xwork2.security.DefaultExcludedPatternsChecker.setOverrideExcludePatterns(String)",1,2,2
"com.opensymphony.xwork2.security.ExcludedPatternsChecker.IsExcluded.IsExcluded(boolean,String)",1,1,1
"com.opensymphony.xwork2.security.ExcludedPatternsChecker.IsExcluded.getExcludedPattern()",1,1,1
"com.opensymphony.xwork2.security.ExcludedPatternsChecker.IsExcluded.isExcluded()",1,1,1
"com.opensymphony.xwork2.security.ExcludedPatternsChecker.IsExcluded.no(Set<Pattern>)",1,1,1
"com.opensymphony.xwork2.security.ExcludedPatternsChecker.IsExcluded.toString()",1,1,1
"com.opensymphony.xwork2.security.ExcludedPatternsChecker.IsExcluded.yes(Pattern)",1,1,1
"com.opensymphony.xwork2.spring.SpringObjectFactory.autoWireBean(Object)",1,1,1
"com.opensymphony.xwork2.spring.SpringObjectFactory.autoWireBean(Object,AutowireCapableBeanFactory)",1,2,2
"com.opensymphony.xwork2.spring.SpringObjectFactory.buildBean(Class,Map<String, Object>)",3,4,4
"com.opensymphony.xwork2.spring.SpringObjectFactory.buildBean(String,Map<String, Object>,boolean)",1,3,3
"com.opensymphony.xwork2.spring.SpringObjectFactory.findAutoWiringBeanFactory(ApplicationContext)",4,4,4
"com.opensymphony.xwork2.spring.SpringObjectFactory.getAutowireStrategy()",1,1,1
"com.opensymphony.xwork2.spring.SpringObjectFactory.getClassInstance(String)",1,5,5
"com.opensymphony.xwork2.spring.SpringObjectFactory.injectApplicationContext(Object)",1,2,2
"com.opensymphony.xwork2.spring.SpringObjectFactory.isNoArgConstructorRequired()",1,1,1
"com.opensymphony.xwork2.spring.SpringObjectFactory.setAlwaysRespectAutowireStrategy(boolean)",1,1,1
"com.opensymphony.xwork2.spring.SpringObjectFactory.setApplicationContext(ApplicationContext)",1,1,1
"com.opensymphony.xwork2.spring.SpringObjectFactory.setApplicationContextPath(String)",1,2,2
"com.opensymphony.xwork2.spring.SpringObjectFactory.setAutowireStrategy(int)",2,2,7
"com.opensymphony.xwork2.spring.SpringObjectFactory.setEnableAopSupport(String)",1,1,1
"com.opensymphony.xwork2.spring.SpringObjectFactory.setUseClassCache(boolean)",1,1,1
"com.opensymphony.xwork2.spring.SpringProxyableObjectFactory.buildBean(String,Map<String, Object>)",3,6,6
"com.opensymphony.xwork2.spring.SpringProxyableObjectFactory.getApplicationContext(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor.getApplicationContext()",1,1,1
"com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor.intercept(ActionInvocation)",1,5,5
"com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor.setApplicationContext(ApplicationContext)",1,1,1
"com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor.setAutowireStrategy(Integer)",1,1,1
"com.opensymphony.xwork2.test.StubConfigurationProvider.destroy()",1,1,1
"com.opensymphony.xwork2.test.StubConfigurationProvider.init(Configuration)",1,1,1
"com.opensymphony.xwork2.test.StubConfigurationProvider.loadPackages()",1,1,1
"com.opensymphony.xwork2.test.StubConfigurationProvider.needsReload()",1,1,1
"com.opensymphony.xwork2.test.StubConfigurationProvider.register(ContainerBuilder,LocatableProperties)",1,1,1
"com.opensymphony.xwork2.util.AnnotationUtils.addAllFields(Class<? extends Annotation>,Class,List<Field>)",2,3,4
"com.opensymphony.xwork2.util.AnnotationUtils.addAllInterfaces(Class,List<Class>)",2,1,2
"com.opensymphony.xwork2.util.AnnotationUtils.addAllMethods(Class<? extends Annotation>,Class,List<Method>)",2,3,4
"com.opensymphony.xwork2.util.AnnotationUtils.findAnnotation(Class<?>,Class<T>)",1,5,6
"com.opensymphony.xwork2.util.AnnotationUtils.getAnnotatedMethods(Class,Class<? extends Annotation>...)",1,6,6
"com.opensymphony.xwork2.util.AnnotationUtils.isAnnotatedBy(AnnotatedElement,Class<? extends Annotation>...)",4,2,4
"com.opensymphony.xwork2.util.AnnotationUtils.resolvePropertyName(Method)",3,5,5
"com.opensymphony.xwork2.util.ClassLoaderUtil.AggregateIterator.addEnumeration(Enumeration<E>)",1,3,3
"com.opensymphony.xwork2.util.ClassLoaderUtil.AggregateIterator.determineCurrentEnumeration()",1,4,4
"com.opensymphony.xwork2.util.ClassLoaderUtil.AggregateIterator.hasNext()",1,1,1
"com.opensymphony.xwork2.util.ClassLoaderUtil.AggregateIterator.loadNext()",4,5,6
"com.opensymphony.xwork2.util.ClassLoaderUtil.AggregateIterator.next()",2,2,2
"com.opensymphony.xwork2.util.ClassLoaderUtil.AggregateIterator.remove()",1,1,1
"com.opensymphony.xwork2.util.ClassLoaderUtil.getResource(String,Class)",2,8,8
"com.opensymphony.xwork2.util.ClassLoaderUtil.getResourceAsStream(String,Class)",1,2,3
"com.opensymphony.xwork2.util.ClassLoaderUtil.getResources(String,Class,boolean)",2,10,10
"com.opensymphony.xwork2.util.ClassLoaderUtil.loadClass(String,Class)",1,4,4
"com.opensymphony.xwork2.util.ClassLoaderUtil.printClassLoader()",1,1,1
"com.opensymphony.xwork2.util.ClassLoaderUtil.printClassLoader(ClassLoader)",1,2,2
"com.opensymphony.xwork2.util.ClassPathFinder.checkEntries(String[],File,String)",5,8,11
"com.opensymphony.xwork2.util.ClassPathFinder.findMatches()",4,3,6
"com.opensymphony.xwork2.util.ClassPathFinder.getPattern()",1,1,1
"com.opensymphony.xwork2.util.ClassPathFinder.getURLClassLoader()",1,2,3
"com.opensymphony.xwork2.util.ClassPathFinder.setPattern(String)",1,1,1
"com.opensymphony.xwork2.util.ClassPathFinder.setPatternMatcher(PatternMatcher<int[]>)",1,1,1
"com.opensymphony.xwork2.util.CompoundRoot.CompoundRoot()",1,1,1
"com.opensymphony.xwork2.util.CompoundRoot.CompoundRoot(List)",1,1,1
"com.opensymphony.xwork2.util.CompoundRoot.cutStack(int)",1,1,1
"com.opensymphony.xwork2.util.CompoundRoot.peek()",1,1,1
"com.opensymphony.xwork2.util.CompoundRoot.pop()",1,1,1
"com.opensymphony.xwork2.util.CompoundRoot.push(Object)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.DOMBuilder()",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.DOMBuilder(Node)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.DOMBuilder(SAXTransformerFactory)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.DOMBuilder(SAXTransformerFactory,Node)",1,1,2
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.characters(char[],int,int)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.endDocument()",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.endElement(String,String,String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.endPrefixMapping(String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.getDocument()",3,4,4
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.ignorableWhitespace(char[],int,int)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.processingInstruction(String,String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.setDocumentLocator(Locator)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.setup()",1,1,3
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.skippedEntity(String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.startDocument()",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.startElement(String,String,String,Attributes)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.DOMBuilder.startPrefixMapping(String,String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.StartHandler(ContentHandler,Map<String, String>)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.characters(char[],int,int)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.endDocument()",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.endElement(String,String,String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.endPrefixMapping(String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.error(SAXParseException)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.fatalError(SAXParseException)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.ignorableWhitespace(char[],int,int)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.processingInstruction(String,String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.resolveEntity(String,String)",2,3,3
"com.opensymphony.xwork2.util.DomHelper.StartHandler.setDocumentLocator(Locator)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.skippedEntity(String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.startDocument()",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.startElement(String,String,String,Attributes)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.startPrefixMapping(String,String)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.StartHandler.warning(SAXParseException)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.getLocationObject(Element)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.parse(InputSource)",1,1,1
"com.opensymphony.xwork2.util.DomHelper.parse(InputSource,Map<String, String>)",1,4,6
"com.opensymphony.xwork2.util.LocalizedTextUtil.EmptyResourceBundle.getKeys()",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.EmptyResourceBundle.handleGetObject(String)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.GetDefaultMessageReturnArg.GetDefaultMessageReturnArg(String,boolean)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.MessageFormatKey.MessageFormatKey(String,Locale)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.MessageFormatKey.equals(Object)",5,3,7
"com.opensymphony.xwork2.util.LocalizedTextUtil.MessageFormatKey.hashCode()",1,3,3
"com.opensymphony.xwork2.util.LocalizedTextUtil.addDefaultResourceBundle(String)",1,3,3
"com.opensymphony.xwork2.util.LocalizedTextUtil.buildMessageFormat(String,Locale)",1,2,2
"com.opensymphony.xwork2.util.LocalizedTextUtil.clearBundle(String)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.clearDefaultResourceBundles()",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.clearMap(Class,Object,String)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.clearTomcatCache()",1,6,6
"com.opensymphony.xwork2.util.LocalizedTextUtil.createMissesKey(String,String,Locale)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.findDefaultText(String,Locale)",3,4,5
"com.opensymphony.xwork2.util.LocalizedTextUtil.findDefaultText(String,Locale,Object[])",2,2,2
"com.opensymphony.xwork2.util.LocalizedTextUtil.findMessage(Class,String,String,Locale,Object[],Set<String>,ValueStack)",14,9,15
"com.opensymphony.xwork2.util.LocalizedTextUtil.findResourceBundle(String,Locale)",1,6,6
"com.opensymphony.xwork2.util.LocalizedTextUtil.findText(Class,String,Locale)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.findText(Class,String,Locale,String,Object[])",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.findText(Class,String,Locale,String,Object[],ValueStack)",20,25,34
"com.opensymphony.xwork2.util.LocalizedTextUtil.findText(ResourceBundle,String,Locale)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.findText(ResourceBundle,String,Locale,String,Object[])",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.findText(ResourceBundle,String,Locale,String,Object[],ValueStack)",1,4,5
"com.opensymphony.xwork2.util.LocalizedTextUtil.formatWithNullDetection(MessageFormat,Object[])",2,1,2
"com.opensymphony.xwork2.util.LocalizedTextUtil.getCurrentThreadContextClassLoader()",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.getDefaultMessage(String,Locale,ValueStack,Object[],String)",1,3,4
"com.opensymphony.xwork2.util.LocalizedTextUtil.getMessage(String,Locale,String,ValueStack,Object[])",2,3,4
"com.opensymphony.xwork2.util.LocalizedTextUtil.localeFromString(String,Locale)",7,4,9
"com.opensymphony.xwork2.util.LocalizedTextUtil.reloadBundles()",1,2,2
"com.opensymphony.xwork2.util.LocalizedTextUtil.reloadBundles(Map<String, Object>)",1,7,7
"com.opensymphony.xwork2.util.LocalizedTextUtil.reset()",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.setDelegatedClassLoader(ClassLoader)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.setDevMode(boolean)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.setReloadBundles(boolean)",1,1,1
"com.opensymphony.xwork2.util.LocalizedTextUtil.unableToFindTextForKey(GetDefaultMessageReturnArg)",3,1,4
"com.opensymphony.xwork2.util.NamedVariablePatternMatcher.CompiledPattern.CompiledPattern(Pattern,List<String>)",1,1,1
"com.opensymphony.xwork2.util.NamedVariablePatternMatcher.CompiledPattern.getPattern()",1,1,1
"com.opensymphony.xwork2.util.NamedVariablePatternMatcher.CompiledPattern.getVariableNames()",1,1,1
"com.opensymphony.xwork2.util.NamedVariablePatternMatcher.compilePattern(String)",5,6,9
"com.opensymphony.xwork2.util.NamedVariablePatternMatcher.isLiteral(String)",1,2,2
"com.opensymphony.xwork2.util.NamedVariablePatternMatcher.match(Map<String, String>,String,CompiledPattern)",3,5,5
"com.opensymphony.xwork2.util.OgnlTextParser.evaluate(char[],String,ParsedValueEvaluator,int)",5,13,21
"com.opensymphony.xwork2.util.PropertiesReader.PropertiesReader(Reader)",1,1,1
"com.opensymphony.xwork2.util.PropertiesReader.PropertiesReader(Reader,char)",1,1,1
"com.opensymphony.xwork2.util.PropertiesReader.checkCombineLines(String)",1,2,3
"com.opensymphony.xwork2.util.PropertiesReader.contains(char[],char)",4,1,4
"com.opensymphony.xwork2.util.PropertiesReader.getCommentLines()",1,1,1
"com.opensymphony.xwork2.util.PropertiesReader.getPropertyName()",1,1,1
"com.opensymphony.xwork2.util.PropertiesReader.getPropertyValue()",1,1,1
"com.opensymphony.xwork2.util.PropertiesReader.isCommentLine(String)",1,2,2
"com.opensymphony.xwork2.util.PropertiesReader.nextProperty()",2,1,2
"com.opensymphony.xwork2.util.PropertiesReader.parseProperty(String)",2,10,13
"com.opensymphony.xwork2.util.PropertiesReader.readProperty()",5,4,5
"com.opensymphony.xwork2.util.PropertiesReader.unescapeJava(String)",2,2,3
"com.opensymphony.xwork2.util.PropertiesReader.unescapeJava(String,char)",7,16,19
"com.opensymphony.xwork2.util.PropertiesReader.unescapeJava(Writer,String)",9,7,20
"com.opensymphony.xwork2.util.ResolverUtil.AnnotatedWith.AnnotatedWith(Class<? extends Annotation>)",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.AnnotatedWith.matches(Class)",1,2,2
"com.opensymphony.xwork2.util.ResolverUtil.AnnotatedWith.toString()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.ClassTest.doesMatchClass()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.ClassTest.doesMatchResource()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.ClassTest.matches(URL)",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.IsA.IsA(Class)",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.IsA.matches(Class)",1,2,2
"com.opensymphony.xwork2.util.ResolverUtil.IsA.toString()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.NameEndsWith.NameEndsWith(String)",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.NameEndsWith.matches(Class)",1,2,2
"com.opensymphony.xwork2.util.ResolverUtil.NameEndsWith.toString()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.NameIs.NameIs(String)",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.NameIs.matches(URL)",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.NameIs.toString()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.ResourceTest.doesMatchClass()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.ResourceTest.doesMatchResource()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.ResourceTest.matches(Class)",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.addIfMatching(Test,String)",1,10,10
"com.opensymphony.xwork2.util.ResolverUtil.find(Test,String...)",2,2,3
"com.opensymphony.xwork2.util.ResolverUtil.findAnnotated(Class<? extends Annotation>,String...)",2,2,3
"com.opensymphony.xwork2.util.ResolverUtil.findImplementations(Class,String...)",2,2,3
"com.opensymphony.xwork2.util.ResolverUtil.findInPackage(Test,String)",1,10,10
"com.opensymphony.xwork2.util.ResolverUtil.findNamedResource(String,String...)",2,2,3
"com.opensymphony.xwork2.util.ResolverUtil.findSuffix(String,String...)",2,2,3
"com.opensymphony.xwork2.util.ResolverUtil.getClassLoader()",1,2,2
"com.opensymphony.xwork2.util.ResolverUtil.getClasses()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.getResources()",1,1,1
"com.opensymphony.xwork2.util.ResolverUtil.isTestApplicable(Test,String)",1,3,3
"com.opensymphony.xwork2.util.ResolverUtil.loadImplementationsInDirectory(Test,String,File)",1,5,5
"com.opensymphony.xwork2.util.ResolverUtil.loadImplementationsInJar(Test,String,File)",1,6,6
"com.opensymphony.xwork2.util.ResolverUtil.setClassLoader(ClassLoader)",1,1,1
"com.opensymphony.xwork2.util.TextParseUtil.commaDelimitedStringToSet(String)",1,3,3
"com.opensymphony.xwork2.util.TextParseUtil.shallBeIncluded(String,boolean)",1,3,3
"com.opensymphony.xwork2.util.TextParseUtil.translateVariables(String,ValueStack)",1,1,1
"com.opensymphony.xwork2.util.TextParseUtil.translateVariables(String,ValueStack,ParsedValueEvaluator)",1,1,1
"com.opensymphony.xwork2.util.TextParseUtil.translateVariables(char,String,ValueStack)",1,1,1
"com.opensymphony.xwork2.util.TextParseUtil.translateVariables(char,String,ValueStack,Class)",1,1,1
"com.opensymphony.xwork2.util.TextParseUtil.translateVariables(char,String,ValueStack,Class,ParsedValueEvaluator)",1,1,1
"com.opensymphony.xwork2.util.TextParseUtil.translateVariables(char,String,ValueStack,Class,ParsedValueEvaluator,int)",1,1,1
"com.opensymphony.xwork2.util.TextParseUtil.translateVariables(char[],String,ValueStack,Class,ParsedValueEvaluator)",1,1,1
"com.opensymphony.xwork2.util.TextParseUtil.translateVariables(char[],String,ValueStack,Class,ParsedValueEvaluator,int)",1,2,3
"com.opensymphony.xwork2.util.TextParseUtil.translateVariablesCollection(String,ValueStack,boolean,ParsedValueEvaluator)",1,1,1
"com.opensymphony.xwork2.util.TextParseUtil.translateVariablesCollection(char[],String,ValueStack,boolean,ParsedValueEvaluator,int)",1,6,6
"com.opensymphony.xwork2.util.WildcardHelper.compilePattern(String)",1,1,9
"com.opensymphony.xwork2.util.WildcardHelper.indexOfArray(int[],int,int,char[],int)",10,1,10
"com.opensymphony.xwork2.util.WildcardHelper.isLiteral(String)",1,2,2
"com.opensymphony.xwork2.util.WildcardHelper.lastIndexOfArray(int[],int,int,char[],int)",10,1,10
"com.opensymphony.xwork2.util.WildcardHelper.match(Map<String, String>,String,int[])",16,8,23
"com.opensymphony.xwork2.util.WildcardHelper.matchArray(int[],int,int,char[],int)",4,1,4
"com.opensymphony.xwork2.util.WildcardUtil.compileWildcardPattern(String)",1,7,7
"com.opensymphony.xwork2.util.WildcardUtil.needsBackslashToBeLiteralInRegex(char)",1,1,1
"com.opensymphony.xwork2.util.XWorkList.XWorkList(Class)",1,1,1
"com.opensymphony.xwork2.util.XWorkList.XWorkList(Class,int)",1,1,1
"com.opensymphony.xwork2.util.XWorkList.add(Object)",1,1,1
"com.opensymphony.xwork2.util.XWorkList.add(int,Object)",1,2,2
"com.opensymphony.xwork2.util.XWorkList.addAll(Collection)",2,2,3
"com.opensymphony.xwork2.util.XWorkList.addAll(int,Collection)",2,3,5
"com.opensymphony.xwork2.util.XWorkList.contains(Object)",1,1,1
"com.opensymphony.xwork2.util.XWorkList.convert(Object)",1,3,3
"com.opensymphony.xwork2.util.XWorkList.get(int)",2,2,3
"com.opensymphony.xwork2.util.XWorkList.getObjectFactory()",1,1,1
"com.opensymphony.xwork2.util.XWorkList.getTypeConverter()",1,1,1
"com.opensymphony.xwork2.util.XWorkList.set(int,Object)",1,2,2
"com.opensymphony.xwork2.util.XWorkTestCaseHelper.loadConfigurationProviders(ConfigurationManager,ConfigurationProvider...)",1,3,4
"com.opensymphony.xwork2.util.XWorkTestCaseHelper.setUp()",1,1,1
"com.opensymphony.xwork2.util.XWorkTestCaseHelper.tearDown(ConfigurationManager)",1,2,2
"com.opensymphony.xwork2.util.classloader.AbstractResourceStore.AbstractResourceStore(File)",1,1,1
"com.opensymphony.xwork2.util.classloader.AbstractResourceStore.closeQuietly(InputStream)",1,3,3
"com.opensymphony.xwork2.util.classloader.AbstractResourceStore.toString()",1,1,1
"com.opensymphony.xwork2.util.classloader.AbstractResourceStore.write(String,byte[])",1,1,1
"com.opensymphony.xwork2.util.classloader.FileResourceStore.FileResourceStore(File)",1,1,1
"com.opensymphony.xwork2.util.classloader.FileResourceStore.getFile(String)",1,1,1
"com.opensymphony.xwork2.util.classloader.FileResourceStore.read(String)",1,2,2
"com.opensymphony.xwork2.util.classloader.JarResourceStore.JarResourceStore(File)",1,1,1
"com.opensymphony.xwork2.util.classloader.JarResourceStore.copy(InputStream,OutputStream)",1,2,2
"com.opensymphony.xwork2.util.classloader.JarResourceStore.read(String)",1,2,2
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.ReloadingClassLoader(ClassLoader)",2,4,5
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.addResourceStore(ResourceStore)",1,2,2
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.clearAssertionStatus()",1,1,1
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.getResource(String)",1,1,1
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.getResourceAsStream(String)",1,1,1
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.isAccepted(String)",4,3,4
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.loadClass(String)",1,2,2
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.reload()",1,1,1
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.removeResourceStore(ResourceStore)",2,3,6
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.setAccepClasses(Set<Pattern>)",1,1,1
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.setClassAssertionStatus(String,boolean)",1,1,1
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.setDefaultAssertionStatus(boolean)",1,1,1
"com.opensymphony.xwork2.util.classloader.ReloadingClassLoader.setPackageAssertionStatus(String,boolean)",1,1,1
"com.opensymphony.xwork2.util.classloader.ResourceStoreClassLoader.ResourceStoreClassLoader(ClassLoader,ResourceStore[])",1,1,1
"com.opensymphony.xwork2.util.classloader.ResourceStoreClassLoader.definePackage(String)",3,1,3
"com.opensymphony.xwork2.util.classloader.ResourceStoreClassLoader.fastFindClass(String)",4,4,4
"com.opensymphony.xwork2.util.classloader.ResourceStoreClassLoader.findClass(String)",2,1,2
"com.opensymphony.xwork2.util.classloader.ResourceStoreClassLoader.loadClass(String,boolean)",4,5,5
"com.opensymphony.xwork2.util.finder.ClassFinder.Annotatable.Annotatable()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.Annotatable.Annotatable(AnnotatedElement)",1,2,2
"com.opensymphony.xwork2.util.finder.ClassFinder.Annotatable.getAnnotations()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.AnnotationInfo.AnnotationInfo(Annotation)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.AnnotationInfo.AnnotationInfo(Class<? extends Annotation>)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.AnnotationInfo.AnnotationInfo(String)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.AnnotationInfo.getName()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.AnnotationInfo.toString()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.ClassInfo(Class,ClassFinder)",1,2,2
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.ClassInfo(String,String,ClassFinder)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.get()",3,2,4
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.getConstructors()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.getFields()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.getInterfaces()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.getMethods()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.getName()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.getPackageName()",1,2,2
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.getSuperInterfaces()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.getSuperType()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.ClassInfo.toString()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.FieldInfo.FieldInfo(ClassInfo,Field)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.FieldInfo.FieldInfo(ClassInfo,String,String)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.FieldInfo.getDeclaringClass()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.FieldInfo.getName()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.FieldInfo.getType()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.FieldInfo.toString()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.MethodInfo.MethodInfo(ClassInfo,Constructor)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.MethodInfo.MethodInfo(ClassInfo,Method)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.MethodInfo.MethodInfo(ClassInfo,String,String)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.MethodInfo.getDeclaringClass()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.MethodInfo.getName()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.MethodInfo.getParameterAnnotations()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.MethodInfo.getParameterAnnotations(int)",1,3,3
"com.opensymphony.xwork2.util.finder.ClassFinder.MethodInfo.getReturnType()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.MethodInfo.toString()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.PackageInfo.PackageInfo(Package)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.PackageInfo.PackageInfo(String,ClassFinder)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassFinder.PackageInfo.get()",1,2,2
"com.opensymphony.xwork2.util.finder.ClassFinder.PackageInfo.getName()",1,1,1
"com.opensymphony.xwork2.util.finder.ClassLoaderInterfaceDelegate.ClassLoaderInterfaceDelegate(ClassLoader)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassLoaderInterfaceDelegate.getParent()",1,2,2
"com.opensymphony.xwork2.util.finder.ClassLoaderInterfaceDelegate.getResource(String)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassLoaderInterfaceDelegate.getResourceAsStream(String)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassLoaderInterfaceDelegate.getResources(String)",1,1,1
"com.opensymphony.xwork2.util.finder.ClassLoaderInterfaceDelegate.loadClass(String)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.DefaultClassFinder(Class...)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.DefaultClassFinder(ClassLoaderInterface,Collection<URL>,boolean,Set<String>,Test<String>)",1,9,9
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.DefaultClassFinder(List<Class>)",1,9,9
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.DefaultClassnameFilterImpl.test(String)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.InfoBuildingVisitor.InfoBuildingVisitor(ClassFinder)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.InfoBuildingVisitor.InfoBuildingVisitor(Info,ClassFinder)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.InfoBuildingVisitor.extractSuperInterfaces(ClassInfo)",1,4,4
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.InfoBuildingVisitor.javaName(String)",1,2,2
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.InfoBuildingVisitor.visit(int,int,String,String,String,String[])",1,4,4
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.InfoBuildingVisitor.visitAnnotation(String,boolean)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.InfoBuildingVisitor.visitField(int,String,String,String,Object)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.InfoBuildingVisitor.visitMethod(int,String,String,String,String[])",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.InfoBuildingVisitor.visitParameterAnnotation(int,String,boolean)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.PackageInfo.PackageInfo(Package)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.PackageInfo.PackageInfo(String,ClassFinder)",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.PackageInfo.get()",1,2,2
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.PackageInfo.getName()",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.file(URL)",1,3,3
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.findAnnotatedClasses(Class<? extends Annotation>)",1,5,5
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.findAnnotatedConstructors(Class<? extends Annotation>)",4,7,8
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.findAnnotatedFields(Class<? extends Annotation>)",4,6,7
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.findAnnotatedMethods(Class<? extends Annotation>)",4,7,8
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.findAnnotatedPackages(Class<? extends Annotation>)",1,5,5
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.findClasses()",1,3,3
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.findClasses(Test<ClassInfo>)",1,4,4
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.findClassesInPackage(String,boolean)",1,6,6
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.getAnnotationInfos(String)",1,2,2
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.getClassLoaderInterface()",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.getClassesNotLoaded()",1,1,1
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.getURLs(ClassLoaderInterface,String[])",1,4,4
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.isAnnotationPresent(Class<? extends Annotation>)",1,2,2
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.jar(JarInputStream)",3,3,4
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.jar(URL)",2,2,2
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.readClassDef(String)",2,3,4
"com.opensymphony.xwork2.util.finder.DefaultClassFinder.scanDir(File,List<String>,String)",1,4,4
"com.opensymphony.xwork2.util.finder.ResourceFinder.ResourceFinder(String)",1,1,1
"com.opensymphony.xwork2.util.finder.ResourceFinder.ResourceFinder(String,ClassLoaderInterface)",1,1,1
"com.opensymphony.xwork2.util.finder.ResourceFinder.ResourceFinder(String,ClassLoaderInterface,URL...)",3,5,11
"com.opensymphony.xwork2.util.finder.ResourceFinder.ResourceFinder(String,URL...)",1,1,1
"com.opensymphony.xwork2.util.finder.ResourceFinder.ResourceFinder(URL...)",1,1,1
"com.opensymphony.xwork2.util.finder.ResourceFinder.convertPathsToPackages(Set<String>)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.find(String)",1,1,1
"com.opensymphony.xwork2.util.finder.ResourceFinder.findAll(String)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.findAllClasses(String)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.findAllImplementations(Class)",3,3,3
"com.opensymphony.xwork2.util.finder.ResourceFinder.findAllProperties(String)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.findAllStrings(String)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.findAvailableClasses(String)",1,3,3
"com.opensymphony.xwork2.util.finder.ResourceFinder.findAvailableImplementations(Class)",1,4,4
"com.opensymphony.xwork2.util.finder.ResourceFinder.findAvailableProperties(String)",1,3,3
"com.opensymphony.xwork2.util.finder.ResourceFinder.findAvailableStrings(String)",1,3,3
"com.opensymphony.xwork2.util.finder.ResourceFinder.findClass(String)",1,1,1
"com.opensymphony.xwork2.util.finder.ResourceFinder.findImplementation(Class)",2,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.findPackages(String)",1,5,6
"com.opensymphony.xwork2.util.finder.ResourceFinder.findPackagesMap(String)",1,5,6
"com.opensymphony.xwork2.util.finder.ResourceFinder.findProperties(String)",2,1,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.findResource(String,URL...)",12,14,22
"com.opensymphony.xwork2.util.finder.ResourceFinder.findString(String)",2,1,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.getResource(String)",2,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.getResources(String)",2,4,4
"com.opensymphony.xwork2.util.finder.ResourceFinder.getResourcesMap(String)",1,5,6
"com.opensymphony.xwork2.util.finder.ResourceFinder.getResourcesNotLoaded()",1,1,1
"com.opensymphony.xwork2.util.finder.ResourceFinder.isDirectory(URL)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.loadProperties(URL)",1,1,1
"com.opensymphony.xwork2.util.finder.ResourceFinder.mapAllClasses(String)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.mapAllImplementations(Class)",3,3,3
"com.opensymphony.xwork2.util.finder.ResourceFinder.mapAllProperties(String)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.mapAllStrings(String)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.mapAvailableClasses(String)",1,3,3
"com.opensymphony.xwork2.util.finder.ResourceFinder.mapAvailableImplementations(Class)",1,4,4
"com.opensymphony.xwork2.util.finder.ResourceFinder.mapAvailableProperties(String)",1,3,3
"com.opensymphony.xwork2.util.finder.ResourceFinder.mapAvailableStrings(String)",1,3,3
"com.opensymphony.xwork2.util.finder.ResourceFinder.readContents(URL)",1,2,2
"com.opensymphony.xwork2.util.finder.ResourceFinder.readDirectoryEntries(URL,Map<String, URL>)",1,4,4
"com.opensymphony.xwork2.util.finder.ResourceFinder.readJarDirectoryEntries(URL,String,Set<String>)",1,5,5
"com.opensymphony.xwork2.util.finder.ResourceFinder.readJarEntries(URL,String,Map<String, URL>)",4,5,7
"com.opensymphony.xwork2.util.finder.ResourceFinder.readSubDirectories(File,String,Set<String>)",1,4,4
"com.opensymphony.xwork2.util.finder.ResourceFinder.targetURL(URL,String)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.UrlSet()",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.UrlSet(ClassLoaderInterface)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.UrlSet(ClassLoaderInterface,Set<String>)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.UrlSet(Collection<URL>)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.UrlSet(Map<String, URL>)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.UrlSet(URL...)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.exclude(ClassLoaderInterface)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.exclude(File)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.exclude(String)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.exclude(UrlSet)",1,2,2
"com.opensymphony.xwork2.util.finder.UrlSet.excludeJavaEndorsedDirs()",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.excludeJavaExtDirs()",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.excludeJavaHome()",2,3,3
"com.opensymphony.xwork2.util.finder.UrlSet.excludePaths(String)",1,3,3
"com.opensymphony.xwork2.util.finder.UrlSet.getUrls()",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.getUrls(ClassLoaderInterface)",1,3,3
"com.opensymphony.xwork2.util.finder.UrlSet.getUrls(ClassLoaderInterface,Set<String>)",2,4,4
"com.opensymphony.xwork2.util.finder.UrlSet.include(UrlSet)",1,1,1
"com.opensymphony.xwork2.util.finder.UrlSet.includeClassesUrl(ClassLoaderInterface,FileProtocolNormalizer)",3,5,5
"com.opensymphony.xwork2.util.finder.UrlSet.load(Collection<URL>)",1,3,3
"com.opensymphony.xwork2.util.finder.UrlSet.matching(String)",1,3,3
"com.opensymphony.xwork2.util.finder.UrlSet.relative(File)",1,4,4
"com.opensymphony.xwork2.util.fs.DefaultFileManager.DefaultFileManager()",1,1,1
"com.opensymphony.xwork2.util.fs.DefaultFileManager.fileNeedsReloading(String)",2,1,2
"com.opensymphony.xwork2.util.fs.DefaultFileManager.fileNeedsReloading(URL)",1,2,2
"com.opensymphony.xwork2.util.fs.DefaultFileManager.getAllPhysicalUrls(URL)",1,1,1
"com.opensymphony.xwork2.util.fs.DefaultFileManager.internal()",1,1,1
"com.opensymphony.xwork2.util.fs.DefaultFileManager.isJarURL(URL)",1,1,1
"com.opensymphony.xwork2.util.fs.DefaultFileManager.loadFile(URL)",2,1,2
"com.opensymphony.xwork2.util.fs.DefaultFileManager.monitorFile(URL)",1,3,3
"com.opensymphony.xwork2.util.fs.DefaultFileManager.normalizeToFileProtocol(URL)",3,4,4
"com.opensymphony.xwork2.util.fs.DefaultFileManager.openFile(URL)",2,1,3
"com.opensymphony.xwork2.util.fs.DefaultFileManager.setReloadingConfigs(boolean)",1,1,1
"com.opensymphony.xwork2.util.fs.DefaultFileManager.support()",1,1,1
"com.opensymphony.xwork2.util.fs.DefaultFileManagerFactory.getFileManager()",2,2,2
"com.opensymphony.xwork2.util.fs.DefaultFileManagerFactory.lookupFileManager()",5,6,7
"com.opensymphony.xwork2.util.fs.DefaultFileManagerFactory.setContainer(Container)",1,1,1
"com.opensymphony.xwork2.util.fs.DefaultFileManagerFactory.setFileManager(FileManager)",1,1,1
"com.opensymphony.xwork2.util.fs.DefaultFileManagerFactory.setReloadingConfigs(String)",1,1,1
"com.opensymphony.xwork2.util.fs.FileRevision.FileRevision(File,long)",2,1,2
"com.opensymphony.xwork2.util.fs.FileRevision.build(URL)",3,5,6
"com.opensymphony.xwork2.util.fs.FileRevision.getFile()",1,1,1
"com.opensymphony.xwork2.util.fs.FileRevision.needsReloading()",1,1,1
"com.opensymphony.xwork2.util.fs.JarEntryRevision.JarEntryRevision(String,String,long)",2,1,3
"com.opensymphony.xwork2.util.fs.JarEntryRevision.build(URL,FileManager)",3,5,5
"com.opensymphony.xwork2.util.fs.JarEntryRevision.needsReloading()",1,2,3
"com.opensymphony.xwork2.util.fs.Revision.Revision()",1,1,1
"com.opensymphony.xwork2.util.fs.Revision.build(URL)",1,1,1
"com.opensymphony.xwork2.util.fs.Revision.needsReloading()",1,1,1
"com.opensymphony.xwork2.util.location.LocatableProperties.LocatableProperties()",1,1,1
"com.opensymphony.xwork2.util.location.LocatableProperties.LocatableProperties(Location)",1,1,1
"com.opensymphony.xwork2.util.location.LocatableProperties.convertCommentsToString(List<String>)",1,4,4
"com.opensymphony.xwork2.util.location.LocatableProperties.getLocation()",1,1,1
"com.opensymphony.xwork2.util.location.LocatableProperties.getPropertyLocation(String)",2,1,2
"com.opensymphony.xwork2.util.location.LocatableProperties.load(InputStream)",1,2,2
"com.opensymphony.xwork2.util.location.LocatableProperties.setProperty(String,String,Object)",1,2,2
"com.opensymphony.xwork2.util.location.Located.getLocation()",1,1,1
"com.opensymphony.xwork2.util.location.Located.setLocation(Location)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.LocationAttributes()",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.Pipe()",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.Pipe(ContentHandler)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.characters(char[],int,int)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.endDocument()",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.endElement(String,String,String)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.endPrefixMapping(String)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.ignorableWhitespace(char[],int,int)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.processingInstruction(String,String)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.setDocumentLocator(Locator)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.skippedEntity(String)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.startDocument()",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.startElement(String,String,String,Attributes)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.Pipe.startPrefixMapping(String,String)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.addLocationAttributes(Locator,Attributes)",2,2,4
"com.opensymphony.xwork2.util.location.LocationAttributes.getColumn(Attributes)",1,2,2
"com.opensymphony.xwork2.util.location.LocationAttributes.getColumn(Element)",1,2,2
"com.opensymphony.xwork2.util.location.LocationAttributes.getLine(Attributes)",1,2,2
"com.opensymphony.xwork2.util.location.LocationAttributes.getLine(Element)",1,2,2
"com.opensymphony.xwork2.util.location.LocationAttributes.getLocation(Attributes,String)",2,1,2
"com.opensymphony.xwork2.util.location.LocationAttributes.getLocation(Element)",1,1,1
"com.opensymphony.xwork2.util.location.LocationAttributes.getLocation(Element,String)",2,2,3
"com.opensymphony.xwork2.util.location.LocationAttributes.getLocationString(Attributes)",2,1,2
"com.opensymphony.xwork2.util.location.LocationAttributes.getLocationString(Element)",2,1,2
"com.opensymphony.xwork2.util.location.LocationAttributes.getURI(Attributes)",1,1,2
"com.opensymphony.xwork2.util.location.LocationAttributes.getURI(Element)",1,2,2
"com.opensymphony.xwork2.util.location.LocationAttributes.remove(Element,boolean)",1,4,4
"com.opensymphony.xwork2.util.location.LocationImpl.LocationImpl(Location)",1,1,1
"com.opensymphony.xwork2.util.location.LocationImpl.LocationImpl(String,Location)",1,1,1
"com.opensymphony.xwork2.util.location.LocationImpl.LocationImpl(String,String)",1,1,1
"com.opensymphony.xwork2.util.location.LocationImpl.LocationImpl(String,String,int,int)",1,1,2
"com.opensymphony.xwork2.util.location.LocationImpl.equals(Object)",3,5,6
"com.opensymphony.xwork2.util.location.LocationImpl.get(Location)",3,1,3
"com.opensymphony.xwork2.util.location.LocationImpl.getColumnNumber()",1,1,1
"com.opensymphony.xwork2.util.location.LocationImpl.getDescription()",1,1,1
"com.opensymphony.xwork2.util.location.LocationImpl.getLineNumber()",1,1,1
"com.opensymphony.xwork2.util.location.LocationImpl.getSnippet(int)",1,4,6
"com.opensymphony.xwork2.util.location.LocationImpl.getURI()",1,1,1
"com.opensymphony.xwork2.util.location.LocationImpl.hashCode()",1,3,3
"com.opensymphony.xwork2.util.location.LocationImpl.readResolve()",1,1,2
"com.opensymphony.xwork2.util.location.LocationImpl.testEquals(Object,Object)",3,1,4
"com.opensymphony.xwork2.util.location.LocationImpl.toString()",1,1,1
"com.opensymphony.xwork2.util.location.LocationUtils.LocationUtils()",1,1,1
"com.opensymphony.xwork2.util.location.LocationUtils.addFinder(LocationFinder)",2,1,2
"com.opensymphony.xwork2.util.location.LocationUtils.getLocation(Object)",1,1,1
"com.opensymphony.xwork2.util.location.LocationUtils.getLocation(Object,String)",16,18,21
"com.opensymphony.xwork2.util.location.LocationUtils.isKnown(Location)",1,2,2
"com.opensymphony.xwork2.util.location.LocationUtils.isUnknown(Location)",1,2,2
"com.opensymphony.xwork2.util.location.LocationUtils.parse(String)",5,5,8
"com.opensymphony.xwork2.util.location.LocationUtils.toString(Location)",1,3,3
"com.opensymphony.xwork2.util.logging.LoggerFactory.LoggerClass.LoggerClass(String,Class<T>)",1,1,1
"com.opensymphony.xwork2.util.logging.LoggerFactory.LoggerClass.createInstance()",1,1,2
"com.opensymphony.xwork2.util.logging.LoggerFactory.LoggerClass.isSupported()",1,1,2
"com.opensymphony.xwork2.util.logging.LoggerFactory.createLoggerFactory()",4,4,5
"com.opensymphony.xwork2.util.logging.LoggerFactory.getLogger(Class<?>)",1,1,1
"com.opensymphony.xwork2.util.logging.LoggerFactory.getLogger(String)",1,1,1
"com.opensymphony.xwork2.util.logging.LoggerFactory.getLoggerFactory()",2,2,3
"com.opensymphony.xwork2.util.logging.LoggerFactory.setLoggerFactory(LoggerFactory)",1,1,1
"com.opensymphony.xwork2.util.logging.LoggerUtils.format(String,Object[])",1,3,3
"com.opensymphony.xwork2.util.logging.LoggerUtils.format(String,String...)",7,9,11
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.CommonsLogger(Log)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.debug(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.debug(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.debug(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.error(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.error(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.error(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.fatal(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.fatal(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.info(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.info(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.isDebugEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.isErrorEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.isFatalEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.isInfoEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.isTraceEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.isWarnEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.trace(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.trace(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.trace(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.warn(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.warn(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLogger.warn(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLoggerFactory.getLoggerImpl(Class<?>)",1,1,1
"com.opensymphony.xwork2.util.logging.commons.CommonsLoggerFactory.getLoggerImpl(String)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.JdkLogger(Logger)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.debug(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.debug(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.debug(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.error(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.error(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.error(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.fatal(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.fatal(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.info(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.info(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.isDebugEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.isErrorEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.isFatalEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.isInfoEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.isTraceEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.isWarnEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.trace(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.trace(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.trace(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.warn(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.warn(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLogger.warn(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLoggerFactory.getLoggerImpl(Class<?>)",1,1,1
"com.opensymphony.xwork2.util.logging.jdk.JdkLoggerFactory.getLoggerImpl(String)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.Log4j2Logger(Logger)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.debug(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.debug(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.debug(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.error(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.error(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.error(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.fatal(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.fatal(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.info(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.info(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.isDebugEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.isErrorEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.isFatalEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.isInfoEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.isTraceEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.isWarnEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.trace(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.trace(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.trace(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.warn(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.warn(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2Logger.warn(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2LoggerFactory.getLoggerImpl(Class<?>)",1,1,1
"com.opensymphony.xwork2.util.logging.log4j2.Log4j2LoggerFactory.getLoggerImpl(String)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.Slf4jLogger(Logger)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.debug(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.debug(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.debug(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.error(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.error(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.error(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.fatal(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.fatal(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.info(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.info(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.isDebugEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.isErrorEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.isFatalEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.isInfoEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.isTraceEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.isWarnEnabled()",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.trace(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.trace(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.trace(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.warn(String,Object...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.warn(String,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLogger.warn(String,Throwable,String...)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLoggerFactory.getLoggerImpl(Class<?>)",1,1,1
"com.opensymphony.xwork2.util.logging.slf4j.Slf4jLoggerFactory.getLoggerImpl(String)",1,1,1
"com.opensymphony.xwork2.util.profiling.ObjectProfiler.getProfiledObject(Class,Object)",3,2,3
"com.opensymphony.xwork2.util.profiling.ObjectProfiler.getTrimmedClassName(Method)",1,1,1
"com.opensymphony.xwork2.util.profiling.ObjectProfiler.profiledInvoke(Method,Object,Object[])",3,4,4
"com.opensymphony.xwork2.util.profiling.ProfilingTimerBean.ProfilingTimerBean(String)",1,1,1
"com.opensymphony.xwork2.util.profiling.ProfilingTimerBean.addChild(ProfilingTimerBean)",1,1,1
"com.opensymphony.xwork2.util.profiling.ProfilingTimerBean.addParent(ProfilingTimerBean)",1,1,1
"com.opensymphony.xwork2.util.profiling.ProfilingTimerBean.getParent()",1,1,1
"com.opensymphony.xwork2.util.profiling.ProfilingTimerBean.getPrintable(String,long)",2,3,3
"com.opensymphony.xwork2.util.profiling.ProfilingTimerBean.getPrintable(long)",1,1,1
"com.opensymphony.xwork2.util.profiling.ProfilingTimerBean.getResource()",1,1,1
"com.opensymphony.xwork2.util.profiling.ProfilingTimerBean.setEndTime()",1,1,1
"com.opensymphony.xwork2.util.profiling.ProfilingTimerBean.setStartTime()",1,1,1
"com.opensymphony.xwork2.util.profiling.TimerInvocationHandler.TimerInvocationHandler(Object)",2,1,2
"com.opensymphony.xwork2.util.profiling.TimerInvocationHandler.invoke(Object,Method,Object[])",1,1,1
"com.opensymphony.xwork2.util.profiling.UtilTimerStack.getMinTime()",1,1,2
"com.opensymphony.xwork2.util.profiling.UtilTimerStack.isActive()",1,1,1
"com.opensymphony.xwork2.util.profiling.UtilTimerStack.pop(String)",2,6,7
"com.opensymphony.xwork2.util.profiling.UtilTimerStack.printTimes(ProfilingTimerBean)",1,1,1
"com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(String,ProfilingBlock<T>)",1,1,1
"com.opensymphony.xwork2.util.profiling.UtilTimerStack.push(String)",2,2,3
"com.opensymphony.xwork2.util.profiling.UtilTimerStack.setActive(boolean)",1,2,2
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.clear(Map<String, Object>)",1,2,2
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.clearCurrentPropertyPath(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.getBooleanProperty(String,Map<String, Object>)",1,2,2
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.getCurrentPropertyPath(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.getFullPropertyPath(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.getLastBeanClassAccessed(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.getLastBeanPropertyAccessed(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.getSetMap(Map<String, Object>,String)",2,1,2
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.isCreatingNullObjects(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.isDenyMethodExecution(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.isGettingByKeyProperty(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.isReportingConversionErrors(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.setBooleanValue(String,Map<String, Object>,boolean)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.setCreatingNullObjects(Map<String, Object>,boolean)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.setDenyMethodExecution(Map<String, Object>,boolean)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.setFullPropertyPath(Map<String, Object>,String)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.setGettingByKeyProperty(Map<String, Object>,boolean)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.setLastBeanClassAccessed(Map<String, Object>,Class)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.setLastBeanPropertyAccessed(Map<String, Object>,String)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.setReportingConversionErrors(Map<String, Object>,boolean)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.setSetMap(Map<String, Object>,Map<Object, Object>,String)",1,2,2
"com.opensymphony.xwork2.util.reflection.ReflectionContextState.updateCurrentPropertyPath(Map<String, Object>,Object)",1,3,3
"com.opensymphony.xwork2.util.reflection.ReflectionException.ReflectionException()",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionException.ReflectionException(String)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionException.ReflectionException(String,Object)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionException.ReflectionException(String,Throwable)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionException.ReflectionException(String,Throwable,Object)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionException.ReflectionException(Throwable)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionException.ReflectionException(Throwable,Object)",1,1,1
"com.opensymphony.xwork2.util.reflection.ReflectionProviderFactory.getInstance()",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.buildAliasValidatorConfigs(Class,String,boolean)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.buildClassValidatorConfigs(Class,boolean)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.buildValidatorConfigs(Class,String,boolean,Set<String>)",5,8,10
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.buildValidatorKey(Class,String)",1,3,3
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.getValidators(Class,String)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.getValidators(Class,String,String)",1,6,6
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.loadFile(String,Class,boolean)",1,6,6
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.setFileManagerFactory(FileManagerFactory)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.setReloadingConfigs(String)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.setValidatorFactory(ValidatorFactory)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.setValidatorFileParser(ValidatorFileParser)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.validate(Object,String)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.validate(Object,String,String)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.validate(Object,String,ValidatorContext)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationActionValidatorManager.validate(Object,String,ValidatorContext,String)",8,17,20
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.AnnotationValidationConfigurationBuilder(ValidatorFactory)",1,1,1
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.buildAnnotationClassValidatorConfigs(Class)",1,5,5
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.parseDateString(String,String)",3,2,6
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processAnnotations(Object)",1,41,41
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processConditionalVisitorFieldValidatorAnnotation(ConditionalVisitorFieldValidator,String,String)",1,3,3
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processConversionErrorFieldValidatorAnnotation(ConversionErrorFieldValidator,String,String)",1,3,3
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processCustomValidatorAnnotation(CustomValidator,String,String)",1,6,6
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processDateRangeFieldValidatorAnnotation(DateRangeFieldValidator,String,String)",1,12,12
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processDoubleRangeFieldValidatorAnnotation(DoubleRangeFieldValidator,String,String)",1,16,16
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processEmailValidatorAnnotation(EmailValidator,String,String)",1,3,3
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processExpressionValidatorAnnotation(ExpressionValidator,String,String)",1,2,2
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processFieldExpressionValidatorAnnotation(FieldExpressionValidator,String,String)",1,3,3
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processIntRangeFieldValidatorAnnotation(IntRangeFieldValidator,String,String)",1,9,9
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processRegexFieldValidatorAnnotation(RegexFieldValidator,String,String)",1,3,3
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processRequiredFieldValidatorAnnotation(RequiredFieldValidator,String,String)",1,3,3
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processRequiredStringValidatorAnnotation(RequiredStringValidator,String,String)",1,3,3
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processShortRangeFieldValidatorAnnotation(ShortRangeFieldValidator,String,String)",1,7,7
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processStringLengthFieldValidatorAnnotation(StringLengthFieldValidator,String,String)",1,8,8
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processUrlValidatorAnnotation(UrlValidator,String,String)",1,5,5
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processValidationAnnotation(Annotation,String,String,List<ValidatorConfig>)",1,43,43
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.processVisitorFieldValidatorAnnotation(VisitorFieldValidator,String,String)",1,3,3
"com.opensymphony.xwork2.validator.AnnotationValidationConfigurationBuilder.resolvePropertyName(Method)",3,5,5
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.buildAliasValidatorConfigs(Class,String,boolean)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.buildClassValidatorConfigs(Class,boolean)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.buildValidatorConfigs(Class,String,boolean,Set<String>)",5,8,10
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.buildValidatorKey(Class,String)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.getValidators(Class,String)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.getValidators(Class,String,String)",1,6,6
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.loadFile(String,Class,boolean)",1,6,6
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.setFileManagerFactory(FileManagerFactory)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.setReloadingConfigs(String)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.setValidatorFactory(ValidatorFactory)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.setValidatorFileParser(ValidatorFileParser)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.validate(Object,String)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.validate(Object,String,String)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.validate(Object,String,ValidatorContext)",1,1,1
"com.opensymphony.xwork2.validator.DefaultActionValidatorManager.validate(Object,String,ValidatorContext,String)",8,17,20
"com.opensymphony.xwork2.validator.DefaultValidatorFactory.DefaultValidatorFactory(ObjectFactory,ValidatorFileParser)",1,1,1
"com.opensymphony.xwork2.validator.DefaultValidatorFactory.getValidator(ValidatorConfig)",1,3,3
"com.opensymphony.xwork2.validator.DefaultValidatorFactory.lookupRegisteredValidatorType(String)",2,1,2
"com.opensymphony.xwork2.validator.DefaultValidatorFactory.parseValidators()",1,12,15
"com.opensymphony.xwork2.validator.DefaultValidatorFactory.registerValidator(String,String)",1,1,1
"com.opensymphony.xwork2.validator.DefaultValidatorFactory.retrieveValidatorConfiguration(String)",1,2,2
"com.opensymphony.xwork2.validator.DefaultValidatorFileParser.addValidatorConfigs(ValidatorFactory,NodeList,Map<String, Object>,List<ValidatorConfig>)",2,10,12
"com.opensymphony.xwork2.validator.DefaultValidatorFileParser.getMultiTextvalueSeparator()",1,1,1
"com.opensymphony.xwork2.validator.DefaultValidatorFileParser.getTextValue(Element)",1,5,7
"com.opensymphony.xwork2.validator.DefaultValidatorFileParser.parseActionValidatorConfigs(ValidatorFactory,InputStream,String)",1,3,3
"com.opensymphony.xwork2.validator.DefaultValidatorFileParser.parseValidatorDefinitions(Map<String, String>,InputStream,String)",3,3,4
"com.opensymphony.xwork2.validator.DefaultValidatorFileParser.setMultiTextvalueSeparator(String)",1,1,1
"com.opensymphony.xwork2.validator.DefaultValidatorFileParser.setObjectFactory(ObjectFactory)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.ActionContextLocaleProvider.getLocale()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.DelegatingValidatorContext(Class)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.DelegatingValidatorContext(Object)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.DelegatingValidatorContext(ValidationAware,TextProvider,LocaleProvider)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.LoggingValidationAware(Class)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.LoggingValidationAware(Object)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.addActionError(String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.addActionMessage(String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.addFieldError(String,String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.getActionErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.getActionMessages()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.getFieldErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.hasActionErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.hasActionMessages()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.hasErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.hasFieldErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.setActionErrors(Collection<String>)",1,2,2
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.setActionMessages(Collection<String>)",1,2,2
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.LoggingValidationAware.setFieldErrors(Map<String, List<String>>)",1,2,2
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.addActionError(String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.addActionMessage(String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.addFieldError(String,String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getActionErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getActionMessages()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getFieldErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getFullFieldName(String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getLocale()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getText(String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getText(String,List<?>)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getText(String,String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getText(String,String,List<?>)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getText(String,String,List<?>,ValueStack)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getText(String,String,String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getText(String,String,String[])",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getText(String,String,String[],ValueStack)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getText(String,String[])",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getTextProvider()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getTexts()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getTexts(String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.getValidationAware()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.hasActionErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.hasActionMessages()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.hasErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.hasFieldErrors()",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.hasKey(String)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.makeLocaleProvider(Object)",2,1,2
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.makeTextProvider(Object,LocaleProvider)",7,6,12
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.makeValidationAware(Object)",2,1,2
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.setActionErrors(Collection<String>)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.setActionMessages(Collection<String>)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.setFieldErrors(Map<String, List<String>>)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.setTextProvider(TextProvider)",1,1,1
"com.opensymphony.xwork2.validator.DelegatingValidatorContext.setValidationAware(ValidationAware)",1,1,1
"com.opensymphony.xwork2.validator.ValidationException.ValidationException()",1,1,1
"com.opensymphony.xwork2.validator.ValidationException.ValidationException(String)",1,1,1
"com.opensymphony.xwork2.validator.ValidationException.ValidationException(String,Throwable)",1,1,1
"com.opensymphony.xwork2.validator.ValidationInterceptor.doBeforeInvocation(ActionInvocation)",3,7,9
"com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ActionInvocation)",1,1,1
"com.opensymphony.xwork2.validator.ValidationInterceptor.getValidationContext(ActionProxy)",1,1,1
"com.opensymphony.xwork2.validator.ValidationInterceptor.isValidateAnnotatedMethodOnly()",1,1,1
"com.opensymphony.xwork2.validator.ValidationInterceptor.setActionValidatorManager(ActionValidatorManager)",1,1,1
"com.opensymphony.xwork2.validator.ValidationInterceptor.setAlwaysInvokeValidate(String)",1,1,1
"com.opensymphony.xwork2.validator.ValidationInterceptor.setDeclarative(boolean)",1,1,1
"com.opensymphony.xwork2.validator.ValidationInterceptor.setProgrammatic(boolean)",1,1,1
"com.opensymphony.xwork2.validator.ValidationInterceptor.setValidateAnnotatedMethodOnly(boolean)",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.Builder(String)",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.Builder(ValidatorConfig)",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.addParam(String,Object)",1,2,3
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.addParams(Map<String, Object>)",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.build()",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.defaultMessage(String)",1,2,3
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.location(Location)",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.messageKey(String)",1,2,3
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.messageParams(String[])",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.removeParam(String)",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.Builder.shortCircuit(boolean)",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.ValidatorConfig(String)",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.ValidatorConfig(ValidatorConfig)",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.getDefaultMessage()",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.getMessageKey()",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.getMessageParams()",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.getParams()",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.getType()",1,1,1
"com.opensymphony.xwork2.validator.ValidatorConfig.isShortCircuit()",1,1,1
"com.opensymphony.xwork2.validator.annotations.ValidatorType.toString()",1,1,1
"com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator.getExpression()",1,1,1
"com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator.setExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator.validate(Object)",1,2,2
"com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator.validateExpression(Object)",1,2,5
"com.opensymphony.xwork2.validator.validators.ConversionErrorFieldValidator.doValidate(Object)",1,3,3
"com.opensymphony.xwork2.validator.validators.DateRangeFieldValidator.DateRangeFieldValidator()",1,1,1
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.getMaxExclusive()",3,3,3
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.getMaxInclusive()",3,3,3
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.getMinExclusive()",3,3,3
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.getMinInclusive()",3,3,3
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.setMaxExclusive(Double)",1,1,1
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.setMaxExclusiveExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.setMaxInclusive(Double)",1,1,1
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.setMaxInclusiveExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.setMinExclusive(Double)",1,1,1
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.setMinExclusiveExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.setMinInclusive(Double)",1,1,1
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.setMinInclusiveExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator.validate(Object)",2,9,11
"com.opensymphony.xwork2.validator.validators.EmailValidator.EmailValidator()",1,1,1
"com.opensymphony.xwork2.validator.validators.ExpressionValidator.getExpression()",1,1,1
"com.opensymphony.xwork2.validator.validators.ExpressionValidator.setExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.ExpressionValidator.validate(Object)",1,3,6
"com.opensymphony.xwork2.validator.validators.FieldExpressionValidator.getExpression()",1,1,1
"com.opensymphony.xwork2.validator.validators.FieldExpressionValidator.setExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.FieldExpressionValidator.validate(Object)",1,3,6
"com.opensymphony.xwork2.validator.validators.FieldValidatorSupport.getFieldName()",1,1,1
"com.opensymphony.xwork2.validator.validators.FieldValidatorSupport.getValidatorType()",1,1,1
"com.opensymphony.xwork2.validator.validators.FieldValidatorSupport.setFieldName(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.FieldValidatorSupport.setValidatorType(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.IntRangeFieldValidator.IntRangeFieldValidator()",1,1,1
"com.opensymphony.xwork2.validator.validators.LongRangeFieldValidator.LongRangeFieldValidator()",1,1,1
"com.opensymphony.xwork2.validator.validators.RangeValidatorSupport.RangeValidatorSupport(Class<T>)",1,1,1
"com.opensymphony.xwork2.validator.validators.RangeValidatorSupport.getMax()",3,3,3
"com.opensymphony.xwork2.validator.validators.RangeValidatorSupport.getMin()",3,3,3
"com.opensymphony.xwork2.validator.validators.RangeValidatorSupport.setMax(T)",1,1,1
"com.opensymphony.xwork2.validator.validators.RangeValidatorSupport.setMaxExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.RangeValidatorSupport.setMin(T)",1,1,1
"com.opensymphony.xwork2.validator.validators.RangeValidatorSupport.setMinExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.RangeValidatorSupport.validate(Object)",2,5,6
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.getRegex()",3,3,3
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.isCaseSensitive()",2,2,2
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.isTrimed()",2,2,2
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.setCaseSensitive(Boolean)",1,1,1
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.setCaseSensitiveExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.setRegex(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.setRegexExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.setTrim(Boolean)",1,1,1
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.setTrimExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.RegexFieldValidator.validate(Object)",4,4,8
"com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport.escape(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport.isRepopulateField()",1,1,1
"com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport.repopulateField(Object)",1,6,6
"com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport.setRepopulateField(boolean)",1,1,1
"com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport.validate(Object)",1,2,2
"com.opensymphony.xwork2.validator.validators.RequiredFieldValidator.validate(Object)",1,2,2
"com.opensymphony.xwork2.validator.validators.RequiredStringValidator.isTrim()",1,1,1
"com.opensymphony.xwork2.validator.validators.RequiredStringValidator.setTrim(boolean)",1,1,1
"com.opensymphony.xwork2.validator.validators.RequiredStringValidator.setTrimExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.RequiredStringValidator.validate(Object)",1,4,4
"com.opensymphony.xwork2.validator.validators.ShortRangeFieldValidator.ShortRangeFieldValidator()",1,1,1
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.getMaxLength()",2,2,2
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.getMinLength()",2,2,2
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.isTrim()",2,2,2
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.setMaxLength(int)",1,1,1
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.setMaxLengthExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.setMinLength(int)",1,1,1
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.setMinLengthExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.setTrim(boolean)",1,1,1
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.setTrimExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator.validate(Object)",4,6,8
"com.opensymphony.xwork2.validator.validators.URLValidator.getUrlRegex()",3,2,3
"com.opensymphony.xwork2.validator.validators.URLValidator.setUrlRegex(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.URLValidator.setUrlRegexExpression(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.URLValidator.validate(Object)",2,4,5
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.addActionError(Object)",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.addFieldError(String,Object)",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.getDefaultMessage()",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.getFieldValue(String,Object)",1,3,3
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.getMessage(Object)",1,10,12
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.getMessageKey()",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.getMessageParameters()",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.getValidatorContext()",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.getValidatorType()",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.isShortCircuit()",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.parse(String,Class)",2,1,2
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.setDefaultMessage(String)",1,1,2
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.setMessageKey(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.setMessageParameters(String[])",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.setShortCircuit(boolean)",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.setValidatorContext(ValidatorContext)",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.setValidatorType(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.ValidatorSupport.setValueStack(ValueStack)",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.AppendingValidatorContext.AppendingValidatorContext(ValidatorContext,Object,String,String)",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.AppendingValidatorContext.addActionError(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.AppendingValidatorContext.addFieldError(String,String)",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.AppendingValidatorContext.getFieldNameWithField(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.AppendingValidatorContext.getFullFieldName(String)",2,2,2
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.getContext()",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.isAppendPrefix()",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.setActionValidatorManager(ActionValidatorManager)",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.setAppendPrefix(boolean)",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.setContext(String)",1,1,1
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.validate(Object)",2,5,5
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.validateArrayElements(Object[],String,String)",2,3,4
"com.opensymphony.xwork2.validator.validators.VisitorFieldValidator.validateObject(String,Object,String)",1,2,2
"null.compare(String,String)",1,3,3
"null.create(Class<?>)",1,1,1
"null.create(InternalContext)",1,2,2
"null.create(Object,ObjectWrapper)",1,1,1
"null.execute(ReferenceMap,Object,Object)",1,1,1
"null.getLength()",1,1,1
"null.getNamedItem(String)",1,1,1
"null.getNamedItemNS(String,String)",1,1,1
"null.initialValue()",1,1,1
"null.item(int)",1,1,1
"null.removeNamedItem(String)",1,1,1
"null.removeNamedItemNS(String,String)",1,1,1
"null.scopeFactory(Class<T>,String,InternalFactory<? extends T>)",1,1,2
"null.setNamedItem(Node)",1,1,1
"null.setNamedItemNS(Node)",1,1,1
"org.apache.struts2.RequestUtils.getServletPath(HttpServletRequest)",2,7,9
"org.apache.struts2.RequestUtils.getUri(HttpServletRequest)",3,1,3
"org.apache.struts2.RequestUtils.parseIfModifiedSince(String)",2,4,4
"org.apache.struts2.ServletActionContext.ServletActionContext(Map)",1,1,1
"org.apache.struts2.ServletActionContext.getActionContext(HttpServletRequest)",2,2,2
"org.apache.struts2.ServletActionContext.getActionMapping()",1,1,1
"org.apache.struts2.ServletActionContext.getPageContext()",1,1,1
"org.apache.struts2.ServletActionContext.getRequest()",1,1,1
"org.apache.struts2.ServletActionContext.getResponse()",1,1,1
"org.apache.struts2.ServletActionContext.getServletContext()",1,1,1
"org.apache.struts2.ServletActionContext.getValueStack(HttpServletRequest)",1,1,1
"org.apache.struts2.ServletActionContext.setRequest(HttpServletRequest)",1,1,1
"org.apache.struts2.ServletActionContext.setResponse(HttpServletResponse)",1,1,1
"org.apache.struts2.ServletActionContext.setServletContext(ServletContext)",1,1,1
"org.apache.struts2.StrutsException.StrutsException()",1,1,1
"org.apache.struts2.StrutsException.StrutsException(String)",1,1,1
"org.apache.struts2.StrutsException.StrutsException(String,Object)",1,1,1
"org.apache.struts2.StrutsException.StrutsException(String,Throwable)",1,1,1
"org.apache.struts2.StrutsException.StrutsException(String,Throwable,Object)",1,1,1
"org.apache.struts2.StrutsException.StrutsException(Throwable)",1,1,1
"org.apache.struts2.StrutsException.StrutsException(Throwable,Object)",1,1,1
"org.apache.struts2.components.ActionComponent.ActionComponent(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.ActionComponent.createExtraContext()",1,1,1
"org.apache.struts2.components.ActionComponent.createParametersForContext()",1,6,7
"org.apache.struts2.components.ActionComponent.end(Writer,String)",1,5,5
"org.apache.struts2.components.ActionComponent.executeAction()",3,6,8
"org.apache.struts2.components.ActionComponent.getProxy()",1,1,1
"org.apache.struts2.components.ActionComponent.setActionMapper(ActionMapper)",1,1,1
"org.apache.struts2.components.ActionComponent.setActionProxyFactory(ActionProxyFactory)",1,1,1
"org.apache.struts2.components.ActionComponent.setExecuteResult(boolean)",1,1,1
"org.apache.struts2.components.ActionComponent.setFlush(boolean)",1,1,1
"org.apache.struts2.components.ActionComponent.setIgnoreContextParams(boolean)",1,1,1
"org.apache.struts2.components.ActionComponent.setName(String)",1,1,1
"org.apache.struts2.components.ActionComponent.setNamespace(String)",1,1,1
"org.apache.struts2.components.ActionComponent.setRethrowException(boolean)",1,1,1
"org.apache.struts2.components.ActionComponent.setValueStackFactory(ValueStackFactory)",1,1,1
"org.apache.struts2.components.ActionError.ActionError(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.ActionError.evaluateExtraParams()",4,3,4
"org.apache.struts2.components.ActionError.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.ActionError.setEscape(boolean)",1,1,1
"org.apache.struts2.components.ActionMessage.ActionMessage(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.ActionMessage.evaluateExtraParams()",4,3,4
"org.apache.struts2.components.ActionMessage.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.ActionMessage.setEscape(boolean)",1,1,1
"org.apache.struts2.components.Anchor.Anchor(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Anchor.addAllParameters(Map)",1,2,2
"org.apache.struts2.components.Anchor.addParameter(String,Object)",1,2,2
"org.apache.struts2.components.Anchor.end(Writer,String)",1,2,2
"org.apache.struts2.components.Anchor.evaluateExtraParams()",1,3,3
"org.apache.struts2.components.Anchor.getDefaultOpenTemplate()",1,1,1
"org.apache.struts2.components.Anchor.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Anchor.getUrlProvider()",1,1,1
"org.apache.struts2.components.Anchor.setAction(String)",1,1,1
"org.apache.struts2.components.Anchor.setAnchor(String)",1,1,1
"org.apache.struts2.components.Anchor.setEncode(boolean)",1,1,1
"org.apache.struts2.components.Anchor.setEscapeAmp(boolean)",1,1,1
"org.apache.struts2.components.Anchor.setExtraParameterProvider(ExtraParameterProvider)",1,1,1
"org.apache.struts2.components.Anchor.setForceAddSchemeHostAndPort(boolean)",1,1,1
"org.apache.struts2.components.Anchor.setHref(String)",1,1,1
"org.apache.struts2.components.Anchor.setIncludeContext(boolean)",1,1,1
"org.apache.struts2.components.Anchor.setIncludeParams(String)",1,1,1
"org.apache.struts2.components.Anchor.setMethod(String)",1,1,1
"org.apache.struts2.components.Anchor.setNamespace(String)",1,1,1
"org.apache.struts2.components.Anchor.setPortletMode(String)",1,1,1
"org.apache.struts2.components.Anchor.setPortletUrlType(String)",1,1,1
"org.apache.struts2.components.Anchor.setScheme(String)",1,1,1
"org.apache.struts2.components.Anchor.setUrlIncludeParams(String)",1,1,1
"org.apache.struts2.components.Anchor.setUrlRenderer(UrlRenderer)",1,1,1
"org.apache.struts2.components.Anchor.setValue(String)",1,1,1
"org.apache.struts2.components.Anchor.setWindowState(String)",1,1,1
"org.apache.struts2.components.Anchor.start(Writer)",1,1,1
"org.apache.struts2.components.Anchor.usesBody()",1,1,1
"org.apache.struts2.components.AppendIterator.AppendIterator(ValueStack)",1,1,1
"org.apache.struts2.components.AppendIterator.addParameter(Object)",1,1,1
"org.apache.struts2.components.AppendIterator.end(Writer,String)",3,3,3
"org.apache.struts2.components.AppendIterator.setVar(String)",1,1,1
"org.apache.struts2.components.AppendIterator.start(Writer)",1,1,1
"org.apache.struts2.components.Bean.Bean(ValueStack)",1,1,1
"org.apache.struts2.components.Bean.addParameter(String,Object)",1,1,1
"org.apache.struts2.components.Bean.end(Writer,String)",1,1,1
"org.apache.struts2.components.Bean.setName(String)",1,1,1
"org.apache.struts2.components.Bean.setObjectFactory(ObjectFactory)",1,1,1
"org.apache.struts2.components.Bean.setReflectionProvider(ReflectionProvider)",1,1,1
"org.apache.struts2.components.Bean.start(Writer)",1,2,2
"org.apache.struts2.components.Checkbox.Checkbox(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Checkbox.evaluateExtraParams()",1,2,2
"org.apache.struts2.components.Checkbox.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Checkbox.getValueClassType()",1,1,1
"org.apache.struts2.components.Checkbox.setFieldValue(String)",1,1,1
"org.apache.struts2.components.CheckboxList.CheckboxList(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.CheckboxList.evaluateExtraParams()",1,1,1
"org.apache.struts2.components.CheckboxList.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.ClosingUIBean.ClosingUIBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.ClosingUIBean.setOpenTemplate(String)",1,1,1
"org.apache.struts2.components.ClosingUIBean.start(Writer)",1,2,2
"org.apache.struts2.components.ComboBox.ComboBox(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.ComboBox.evaluateExtraParams()",1,11,11
"org.apache.struts2.components.ComboBox.findListValue()",1,1,1
"org.apache.struts2.components.ComboBox.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.ComboBox.setEmptyOption(String)",1,1,1
"org.apache.struts2.components.ComboBox.setHeaderKey(String)",1,1,1
"org.apache.struts2.components.ComboBox.setHeaderValue(String)",1,1,1
"org.apache.struts2.components.ComboBox.setList(String)",1,1,1
"org.apache.struts2.components.ComboBox.setListKey(String)",1,1,1
"org.apache.struts2.components.ComboBox.setListValue(String)",1,1,1
"org.apache.struts2.components.Component.Component(ValueStack)",1,1,1
"org.apache.struts2.components.Component.addAllParameters(Map)",1,1,1
"org.apache.struts2.components.Component.addParameter(String,Object)",1,3,3
"org.apache.struts2.components.Component.altSyntax()",1,1,1
"org.apache.struts2.components.Component.completeExpressionIfAltSyntax(String)",2,1,2
"org.apache.struts2.components.Component.copyParams(Map)",1,3,3
"org.apache.struts2.components.Component.determineActionURL(String,String,String,HttpServletRequest,HttpServletResponse,Map,String,boolean,boolean,boolean,boolean)",1,2,2
"org.apache.struts2.components.Component.determineNamespace(String,ValueStack,HttpServletRequest)",1,2,3
"org.apache.struts2.components.Component.end(Writer,String)",1,1,1
"org.apache.struts2.components.Component.end(Writer,String,boolean)",1,3,3
"org.apache.struts2.components.Component.fieldError(String,String,Exception)",1,3,3
"org.apache.struts2.components.Component.findAncestor(Class)",4,4,5
"org.apache.struts2.components.Component.findString(String)",1,1,1
"org.apache.struts2.components.Component.findString(String,String,String)",2,2,2
"org.apache.struts2.components.Component.findStringIfAltSyntax(String)",2,2,2
"org.apache.struts2.components.Component.findValue(String)",2,1,2
"org.apache.struts2.components.Component.findValue(String,Class)",2,3,3
"org.apache.struts2.components.Component.findValue(String,String,String)",3,3,4
"org.apache.struts2.components.Component.getComponentName()",1,1,1
"org.apache.struts2.components.Component.getComponentStack()",1,2,2
"org.apache.struts2.components.Component.getParameters()",1,1,1
"org.apache.struts2.components.Component.getStack()",1,1,1
"org.apache.struts2.components.Component.getStandardAttributes()",1,3,3
"org.apache.struts2.components.Component.isValidTagAttribute(String)",1,1,1
"org.apache.struts2.components.Component.popComponentStack()",1,1,1
"org.apache.struts2.components.Component.setActionMapper(ActionMapper)",1,1,1
"org.apache.struts2.components.Component.setDevMode(String)",1,1,1
"org.apache.struts2.components.Component.setThrowExceptionsOnELFailure(String)",1,1,1
"org.apache.struts2.components.Component.setUrlHelper(UrlHelper)",1,1,1
"org.apache.struts2.components.Component.start(Writer)",1,1,1
"org.apache.struts2.components.Component.stripExpressionIfAltSyntax(String)",1,1,1
"org.apache.struts2.components.Component.toString(Throwable)",1,1,1
"org.apache.struts2.components.Component.usesBody()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.ComponentUrlProvider(Component,Map)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.determineActionURL(String,String,String,HttpServletRequest,HttpServletResponse,Map,String,boolean,boolean,boolean,boolean)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.determineNamespace(String,ValueStack,HttpServletRequest)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.findString(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getAction()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getAnchor()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getExtraParameterProvider()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getHttpServletRequest()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getHttpServletResponse()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getIncludeParams()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getMethod()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getNamespace()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getParameters()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getPortletMode()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getPortletUrlType()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getScheme()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getStack()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getUrlIncludeParams()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getUrlRenderer()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getValue()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.getVar()",1,2,2
"org.apache.struts2.components.ComponentUrlProvider.getWindowState()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.isEncode()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.isEscapeAmp()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.isForceAddSchemeHostAndPort()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.isIncludeContext()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.isPutInContext()",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.putInContext(String)",1,2,2
"org.apache.struts2.components.ComponentUrlProvider.setAction(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setAnchor(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setEncode(boolean)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setEscapeAmp(boolean)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setExtraParameterProvider(ExtraParameterProvider)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setForceAddSchemeHostAndPort(boolean)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setHttpServletRequest(HttpServletRequest)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setHttpServletResponse(HttpServletResponse)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setIncludeContext(boolean)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setIncludeParams(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setMethod(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setNamespace(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setPortletMode(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setPortletUrlType(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setScheme(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setUrlIncludeParams(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setUrlRenderer(UrlRenderer)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setValue(String)",1,1,1
"org.apache.struts2.components.ComponentUrlProvider.setWindowState(String)",1,1,1
"org.apache.struts2.components.ContextBean.ContextBean(ValueStack)",1,1,1
"org.apache.struts2.components.ContextBean.getVar()",1,1,1
"org.apache.struts2.components.ContextBean.putInContext(Object)",1,2,2
"org.apache.struts2.components.ContextBean.setId(String)",1,1,1
"org.apache.struts2.components.ContextBean.setVar(String)",1,2,2
"org.apache.struts2.components.Date.Date(ValueStack)",1,1,1
"org.apache.struts2.components.Date.end(Writer,String)",1,17,17
"org.apache.struts2.components.Date.findProviderInStack()",3,1,3
"org.apache.struts2.components.Date.formatTime(TextProvider,Date)",2,6,6
"org.apache.struts2.components.Date.getFormat()",1,1,1
"org.apache.struts2.components.Date.getName()",1,1,1
"org.apache.struts2.components.Date.getTimeZone()",1,2,3
"org.apache.struts2.components.Date.getTimezone()",1,1,1
"org.apache.struts2.components.Date.isNice()",1,1,1
"org.apache.struts2.components.Date.setFormat(String)",1,1,1
"org.apache.struts2.components.Date.setName(String)",1,1,1
"org.apache.struts2.components.Date.setNice(boolean)",1,1,1
"org.apache.struts2.components.Date.setTimezone(String)",1,1,1
"org.apache.struts2.components.DateTextField.DateTextField(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.DateTextField.evaluateExtraParams()",1,2,2
"org.apache.struts2.components.DateTextField.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.DateTextField.getValueClassType()",1,1,1
"org.apache.struts2.components.DateTextField.setFormat(String)",1,1,1
"org.apache.struts2.components.Debug.Debug(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Debug.DebugMapEntry.DebugMapEntry(Object,Object)",1,1,1
"org.apache.struts2.components.Debug.DebugMapEntry.getKey()",1,1,1
"org.apache.struts2.components.Debug.DebugMapEntry.getValue()",1,1,1
"org.apache.struts2.components.Debug.DebugMapEntry.setValue(Object)",1,1,1
"org.apache.struts2.components.Debug.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Debug.setReflectionProvider(ReflectionProvider)",1,1,1
"org.apache.struts2.components.Debug.start(Writer)",2,2,3
"org.apache.struts2.components.Div.Div(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Div.getDefaultOpenTemplate()",1,1,1
"org.apache.struts2.components.Div.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.DoubleListUIBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.evaluateExtraParams()",1,46,48
"org.apache.struts2.components.DoubleListUIBean.getDoubleCssClass()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleCssStyle()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleDisabled()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleEmptyOption()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleHeaderKey()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleHeaderValue()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleId()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleList()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleListKey()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleListValue()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleMultiple()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleName()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnblur()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnchange()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnclick()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOndblclick()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnfocus()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnkeydown()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnkeypress()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnkeyup()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnmousedown()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnmousemove()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnmouseout()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnmouseover()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnmouseup()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleOnselect()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleSize()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getDoubleValue()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.getFormName()",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleAccesskey(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleCssClass(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleCssStyle(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleDisabled(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleEmptyOption(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleHeaderKey(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleHeaderValue(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleId(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleList(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleListCssClass(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleListCssStyle(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleListKey(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleListTitle(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleListValue(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleMultiple(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleName(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnblur(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnchange(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnclick(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOndblclick(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnfocus(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnkeydown(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnkeypress(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnkeyup(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnmousedown(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnmousemove(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnmouseout(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnmouseover(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnmouseup(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleOnselect(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleSize(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setDoubleValue(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setEmptyOption(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setFormName(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setHeaderKey(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setHeaderValue(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setMultiple(String)",1,1,1
"org.apache.struts2.components.DoubleListUIBean.setSize(String)",1,1,1
"org.apache.struts2.components.DoubleSelect.DoubleSelect(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.DoubleSelect.evaluateExtraParams()",1,2,2
"org.apache.struts2.components.DoubleSelect.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Else.Else(ValueStack)",1,1,1
"org.apache.struts2.components.Else.start(Writer)",1,1,2
"org.apache.struts2.components.ElseIf.ElseIf(ValueStack)",1,1,1
"org.apache.struts2.components.ElseIf.end(Writer,String)",1,2,3
"org.apache.struts2.components.ElseIf.setTest(String)",1,1,1
"org.apache.struts2.components.ElseIf.start(Writer)",2,2,5
"org.apache.struts2.components.FieldError.FieldError(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.FieldError.addParameter(Object)",1,2,2
"org.apache.struts2.components.FieldError.evaluateExtraParams()",1,2,2
"org.apache.struts2.components.FieldError.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.FieldError.getFieldErrorFieldNames()",1,1,1
"org.apache.struts2.components.FieldError.setEscape(boolean)",1,1,1
"org.apache.struts2.components.FieldError.setFieldName(String)",1,1,1
"org.apache.struts2.components.File.File(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.File.evaluateParams()",1,6,6
"org.apache.struts2.components.File.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.File.setAccept(String)",1,1,1
"org.apache.struts2.components.File.setSize(String)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.FieldVisitorValidatorWrapper(FieldValidator,String)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.getDefaultMessage()",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.getFieldName()",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.getFieldValidator()",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.getMessage(Object)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.getMessageKey()",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.getMessageParameters()",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.getNamePrefix()",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.getValidatorContext()",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.getValidatorType()",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.setDefaultMessage(String)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.setFieldName(String)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.setFieldValidator(FieldValidator)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.setMessageKey(String)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.setMessageParameters(String[])",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.setNamePrefix(String)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.setValidatorContext(ValidatorContext)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.setValidatorType(String)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.setValueStack(ValueStack)",1,1,1
"org.apache.struts2.components.Form.FieldVisitorValidatorWrapper.validate(Object)",1,1,1
"org.apache.struts2.components.Form.Form(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Form.evaluateClientSideJsEnablement(String,String,String)",5,6,7
"org.apache.struts2.components.Form.evaluateExtraParams()",1,12,12
"org.apache.struts2.components.Form.evaluateNameValue()",1,1,1
"org.apache.struts2.components.Form.findFieldValidators(String,Class,String,List<Validator>,List<Validator>,String)",5,7,8
"org.apache.struts2.components.Form.getDefaultOpenTemplate()",1,1,1
"org.apache.struts2.components.Form.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Form.getSequence()",1,1,1
"org.apache.struts2.components.Form.getValidators(String)",2,1,2
"org.apache.struts2.components.Form.getVisitorReturnType(Class,String)",2,1,3
"org.apache.struts2.components.Form.populateComponentHtmlId(Form)",1,2,2
"org.apache.struts2.components.Form.setAcceptcharset(String)",1,1,1
"org.apache.struts2.components.Form.setAction(String)",1,1,1
"org.apache.struts2.components.Form.setActionValidatorManager(ActionValidatorManager)",1,1,1
"org.apache.struts2.components.Form.setConfiguration(Configuration)",1,1,1
"org.apache.struts2.components.Form.setEnctype(String)",1,1,1
"org.apache.struts2.components.Form.setFocusElement(String)",1,1,1
"org.apache.struts2.components.Form.setIncludeContext(boolean)",1,1,1
"org.apache.struts2.components.Form.setMethod(String)",1,1,1
"org.apache.struts2.components.Form.setNamespace(String)",1,1,1
"org.apache.struts2.components.Form.setObjectFactory(ObjectFactory)",1,1,1
"org.apache.struts2.components.Form.setOnreset(String)",1,1,1
"org.apache.struts2.components.Form.setOnsubmit(String)",1,1,1
"org.apache.struts2.components.Form.setPortletMode(String)",1,1,1
"org.apache.struts2.components.Form.setTarget(String)",1,1,1
"org.apache.struts2.components.Form.setUrlRenderer(UrlRenderer)",1,1,1
"org.apache.struts2.components.Form.setValidate(String)",1,1,1
"org.apache.struts2.components.Form.setWindowState(String)",1,1,1
"org.apache.struts2.components.FormButton.FormButton(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.FormButton.evaluateExtraParams()",1,9,11
"org.apache.struts2.components.FormButton.populateComponentHtmlId(Form)",1,9,10
"org.apache.struts2.components.FormButton.setAction(String)",1,1,1
"org.apache.struts2.components.FormButton.setActionMapper(ActionMapper)",1,1,1
"org.apache.struts2.components.FormButton.setMethod(String)",1,1,1
"org.apache.struts2.components.FormButton.setType(String)",1,1,1
"org.apache.struts2.components.GenericUIBean.GenericUIBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.GenericUIBean.contains(Object,Object)",1,1,1
"org.apache.struts2.components.GenericUIBean.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Head.Head(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Head.evaluateParams()",1,1,1
"org.apache.struts2.components.Head.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Head.setEncoding(String)",1,1,1
"org.apache.struts2.components.Hidden.Hidden(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Hidden.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.I18n.I18n(ValueStack)",1,1,1
"org.apache.struts2.components.I18n.end(Writer,String)",3,6,6
"org.apache.struts2.components.I18n.setContainer(Container)",1,1,1
"org.apache.struts2.components.I18n.setName(String)",1,1,1
"org.apache.struts2.components.I18n.start(Writer)",1,3,4
"org.apache.struts2.components.If.If(ValueStack)",1,1,1
"org.apache.struts2.components.If.end(Writer,String)",1,1,1
"org.apache.struts2.components.If.setTest(String)",1,1,1
"org.apache.struts2.components.If.start(Writer)",1,1,2
"org.apache.struts2.components.Include.Include(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Include.PageOutputStream.PageOutputStream()",1,1,1
"org.apache.struts2.components.Include.PageOutputStream.close()",1,1,1
"org.apache.struts2.components.Include.PageOutputStream.flush()",1,1,1
"org.apache.struts2.components.Include.PageOutputStream.getBuffer()",1,1,1
"org.apache.struts2.components.Include.PageOutputStream.write(byte[])",1,1,1
"org.apache.struts2.components.Include.PageOutputStream.write(byte[],int,int)",1,1,1
"org.apache.struts2.components.Include.PageOutputStream.write(int)",1,1,1
"org.apache.struts2.components.Include.PageResponse.PageResponse(HttpServletResponse)",1,1,1
"org.apache.struts2.components.Include.PageResponse.getContent()",1,2,2
"org.apache.struts2.components.Include.PageResponse.getOutputStream()",1,1,2
"org.apache.struts2.components.Include.PageResponse.getWriter()",1,2,2
"org.apache.struts2.components.Include.addParameter(String,Object)",1,3,3
"org.apache.struts2.components.Include.end(Writer,String)",1,6,6
"org.apache.struts2.components.Include.getContextRelativePath(ServletRequest,String)",1,9,9
"org.apache.struts2.components.Include.include(String,Writer,ServletRequest,HttpServletResponse,String)",2,2,3
"org.apache.struts2.components.Include.setDefaultEncoding(String)",1,1,1
"org.apache.struts2.components.Include.setValue(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.InputTransferSelect(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.InputTransferSelect.evaluateExtraParams()",1,19,21
"org.apache.struts2.components.InputTransferSelect.getAddLabel()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getAllowRemoveAll()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getAllowUpDown()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getButtonCssClass()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getButtonCssStyle()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getDownLabel()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getHeaderKey()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getHeaderValue()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getLeftTitle()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getMultiple()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getRemoveAllLabel()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getRemoveLabel()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getRightTitle()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getSize()",1,1,1
"org.apache.struts2.components.InputTransferSelect.getUpLabel()",1,1,1
"org.apache.struts2.components.InputTransferSelect.setAddLabel(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setAllowRemoveAll(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setAllowUpDown(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setButtonCssClass(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setButtonCssStyle(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setDownLabel(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setHeaderKey(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setHeaderValue(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setLeftTitle(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setMultiple(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setRemoveAllLabel(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setRemoveLabel(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setRightTitle(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setSize(String)",1,1,1
"org.apache.struts2.components.InputTransferSelect.setUpLabel(String)",1,1,1
"org.apache.struts2.components.IteratorComponent.CounterIterator.CounterIterator(Integer,Integer,Integer,List<Object>)",1,1,2
"org.apache.struts2.components.IteratorComponent.CounterIterator.hasNext()",1,1,2
"org.apache.struts2.components.IteratorComponent.CounterIterator.next()",2,3,3
"org.apache.struts2.components.IteratorComponent.CounterIterator.peekNextIndex()",1,1,1
"org.apache.struts2.components.IteratorComponent.CounterIterator.remove()",1,1,1
"org.apache.struts2.components.IteratorComponent.IteratorComponent(ValueStack)",1,1,1
"org.apache.struts2.components.IteratorComponent.end(Writer,String)",2,7,7
"org.apache.struts2.components.IteratorComponent.setBegin(String)",1,1,1
"org.apache.struts2.components.IteratorComponent.setEnd(String)",1,1,1
"org.apache.struts2.components.IteratorComponent.setStatus(String)",1,1,1
"org.apache.struts2.components.IteratorComponent.setStep(String)",1,1,1
"org.apache.struts2.components.IteratorComponent.setValue(String)",1,1,1
"org.apache.struts2.components.IteratorComponent.start(Writer)",2,14,22
"org.apache.struts2.components.Label.Label(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Label.evaluateExtraParams()",1,7,7
"org.apache.struts2.components.Label.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Label.setFor(String)",1,1,1
"org.apache.struts2.components.ListUIBean.ListUIBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.ListUIBean.contains(Object,Object)",1,1,1
"org.apache.struts2.components.ListUIBean.evaluateExtraParams()",1,23,23
"org.apache.struts2.components.ListUIBean.getValueClassType()",1,1,1
"org.apache.struts2.components.ListUIBean.setList(Object)",1,1,1
"org.apache.struts2.components.ListUIBean.setListCssClass(String)",1,1,1
"org.apache.struts2.components.ListUIBean.setListCssStyle(String)",1,1,1
"org.apache.struts2.components.ListUIBean.setListKey(String)",1,1,1
"org.apache.struts2.components.ListUIBean.setListLabelKey(String)",1,1,1
"org.apache.struts2.components.ListUIBean.setListTitle(String)",1,1,1
"org.apache.struts2.components.ListUIBean.setListValue(String)",1,1,1
"org.apache.struts2.components.ListUIBean.setListValueKey(String)",1,1,1
"org.apache.struts2.components.ListUIBean.setThrowExceptionOnNullValueAttribute(boolean)",1,1,1
"org.apache.struts2.components.MergeIterator.MergeIterator(ValueStack)",1,1,1
"org.apache.struts2.components.MergeIterator.addParameter(Object)",1,1,1
"org.apache.struts2.components.MergeIterator.end(Writer,String)",3,3,3
"org.apache.struts2.components.MergeIterator.setVar(String)",1,1,1
"org.apache.struts2.components.MergeIterator.start(Writer)",1,1,1
"org.apache.struts2.components.Number.Number(ValueStack)",1,1,1
"org.apache.struts2.components.Number.end(Writer,String)",1,5,5
"org.apache.struts2.components.Number.findCurrency(NumberFormat)",1,4,4
"org.apache.struts2.components.Number.findNumberName()",1,2,3
"org.apache.struts2.components.Number.getCurrency()",1,1,1
"org.apache.struts2.components.Number.getMaximumFractionDigits()",1,1,1
"org.apache.struts2.components.Number.getMaximumIntegerDigits()",1,1,1
"org.apache.struts2.components.Number.getMinimumFractionDigits()",1,1,1
"org.apache.struts2.components.Number.getMinimumIntegerDigits()",1,1,1
"org.apache.struts2.components.Number.getName()",1,1,1
"org.apache.struts2.components.Number.getNumberFormat()",1,9,9
"org.apache.struts2.components.Number.getRoundingMode()",1,1,1
"org.apache.struts2.components.Number.getType()",1,1,1
"org.apache.struts2.components.Number.isGroupingUsed()",1,1,1
"org.apache.struts2.components.Number.isParseIntegerOnly()",1,1,1
"org.apache.struts2.components.Number.setCurrency(String)",1,1,1
"org.apache.struts2.components.Number.setGroupingUsed(Boolean)",1,1,1
"org.apache.struts2.components.Number.setMaximumFractionDigits(Integer)",1,1,1
"org.apache.struts2.components.Number.setMaximumIntegerDigits(Integer)",1,1,1
"org.apache.struts2.components.Number.setMinimumFractionDigits(Integer)",1,1,1
"org.apache.struts2.components.Number.setMinimumIntegerDigits(Integer)",1,1,1
"org.apache.struts2.components.Number.setName(String)",1,1,1
"org.apache.struts2.components.Number.setNumberFormatParameters(NumberFormat)",1,7,7
"org.apache.struts2.components.Number.setParseIntegerOnly(Boolean)",1,1,1
"org.apache.struts2.components.Number.setRoundingMode(NumberFormat)",1,1,1
"org.apache.struts2.components.Number.setRoundingMode(String)",1,1,1
"org.apache.struts2.components.Number.setType(String)",1,1,1
"org.apache.struts2.components.OptGroup.OptGroup(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.OptGroup.end(Writer,String)",2,2,3
"org.apache.struts2.components.OptGroup.setContainer(Container)",1,1,1
"org.apache.struts2.components.OptGroup.setDisabled(String)",1,1,1
"org.apache.struts2.components.OptGroup.setLabel(String)",1,1,1
"org.apache.struts2.components.OptGroup.setList(String)",1,1,1
"org.apache.struts2.components.OptGroup.setListKey(String)",1,1,1
"org.apache.struts2.components.OptGroup.setListValue(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.OptionTransferSelect(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.evaluateExtraParams()",1,39,41
"org.apache.struts2.components.OptionTransferSelect.getAddAllToLeftLabel()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAddAllToLeftOnclick()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAddAllToRightLabel()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAddAllToRightOnclick()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAddToLeftLabel()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAddToLeftOnclick()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAddToRightLabel()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAddToRightOnclick()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAllowAddAllToLeft()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAllowAddAllToRight()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAllowAddToLeft()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAllowAddToRight()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAllowSelectAll()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAllowUpDownOnLeft()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getAllowUpDownOnRight()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getButtonCssClass()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getButtonCssStyle()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getLeftDownLabel()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getLeftTitle()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getLeftUpLabel()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getRightDownLabel()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getRightTitle()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getRightUpLabel()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getSelectAllLabel()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getSelectAllOnclick()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getUpDownOnLeftOnclick()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.getUpDownOnRightOnclick()",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAddAllToLeftLabel(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAddAllToLeftOnclick(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAddAllToRightLabel(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAddAllToRightOnclick(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAddToLeftLabel(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAddToLeftOnclick(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAddToRightLabel(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAddToRightOnclick(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAllowAddAllToLeft(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAllowAddAllToRight(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAllowAddToLeft(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAllowAddToRight(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAllowSelectAll(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAllowUpDownOnLeft(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setAllowUpDownOnRight(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setButtonCssClass(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setButtonCssStyle(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setLeftDownLabel(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setLeftTitle(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setLeftUpLabel(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setRightDownLabel(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setRightTitle(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setRightUpLabel(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setSelectAllLabel(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setSelectAllOnclick(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setUpDownOnLeftOnclick(String)",1,1,1
"org.apache.struts2.components.OptionTransferSelect.setUpDownOnRightOnclick(String)",1,1,1
"org.apache.struts2.components.Param.Param(ValueStack)",1,1,1
"org.apache.struts2.components.Param.end(Writer,String)",4,7,8
"org.apache.struts2.components.Param.setName(String)",1,1,1
"org.apache.struts2.components.Param.setSuppressEmptyParameters(boolean)",1,1,1
"org.apache.struts2.components.Param.setValue(String)",1,1,1
"org.apache.struts2.components.Param.usesBody()",1,1,1
"org.apache.struts2.components.Password.Password(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Password.evaluateExtraParams()",1,2,2
"org.apache.struts2.components.Password.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Password.setShowPassword(String)",1,1,1
"org.apache.struts2.components.Property.Property(ValueStack)",1,1,1
"org.apache.struts2.components.Property.prepare(String)",1,5,5
"org.apache.struts2.components.Property.setDefault(String)",1,1,1
"org.apache.struts2.components.Property.setDefaultValue(String)",1,1,1
"org.apache.struts2.components.Property.setEscape(boolean)",1,1,1
"org.apache.struts2.components.Property.setEscapeCsv(boolean)",1,1,1
"org.apache.struts2.components.Property.setEscapeHtml(boolean)",1,1,1
"org.apache.struts2.components.Property.setEscapeJavaScript(boolean)",1,1,1
"org.apache.struts2.components.Property.setEscapeXml(boolean)",1,1,1
"org.apache.struts2.components.Property.setValue(String)",1,1,1
"org.apache.struts2.components.Property.start(Writer)",1,5,5
"org.apache.struts2.components.Push.Push(ValueStack)",1,1,1
"org.apache.struts2.components.Push.end(Writer,String)",1,2,3
"org.apache.struts2.components.Push.setValue(String)",1,1,1
"org.apache.struts2.components.Push.start(Writer)",1,2,2
"org.apache.struts2.components.Radio.Radio(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Radio.evaluateExtraParams()",1,1,1
"org.apache.struts2.components.Radio.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Reset.Reset(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Reset.evaluateExtraParams()",1,2,2
"org.apache.struts2.components.Reset.evaluateParams()",1,1,3
"org.apache.struts2.components.Reset.getDefaultOpenTemplate()",1,1,1
"org.apache.struts2.components.Reset.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Reset.setLabel(String)",1,1,1
"org.apache.struts2.components.Reset.setSrc(String)",1,1,1
"org.apache.struts2.components.Reset.supportsImageType()",1,1,1
"org.apache.struts2.components.Select.Select(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Select.evaluateExtraParams()",1,5,6
"org.apache.struts2.components.Select.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Select.setEmptyOption(String)",1,1,1
"org.apache.struts2.components.Select.setHeaderKey(String)",1,1,1
"org.apache.struts2.components.Select.setHeaderValue(String)",1,1,1
"org.apache.struts2.components.Select.setMultiple(String)",1,1,1
"org.apache.struts2.components.Select.setSize(String)",1,1,1
"org.apache.struts2.components.ServletUrlRenderer.beforeRenderUrl(UrlProvider)",1,12,12
"org.apache.struts2.components.ServletUrlRenderer.extractQueryString(UrlProvider)",1,4,4
"org.apache.struts2.components.ServletUrlRenderer.includeExtraParameters(UrlProvider)",1,2,2
"org.apache.struts2.components.ServletUrlRenderer.includeGetParameters(UrlProvider)",1,1,1
"org.apache.struts2.components.ServletUrlRenderer.mergeRequestParameters(String,Map<String, Object>,Map<String, Object>)",1,6,6
"org.apache.struts2.components.ServletUrlRenderer.renderFormUrl(Form)",1,15,16
"org.apache.struts2.components.ServletUrlRenderer.renderUrl(Writer,UrlProvider)",3,17,17
"org.apache.struts2.components.ServletUrlRenderer.setActionMapper(ActionMapper)",1,1,1
"org.apache.struts2.components.ServletUrlRenderer.setUrlHelper(UrlHelper)",1,1,1
"org.apache.struts2.components.Set.Set(ValueStack)",1,1,1
"org.apache.struts2.components.Set.end(Writer,String)",1,8,8
"org.apache.struts2.components.Set.setName(String)",1,1,1
"org.apache.struts2.components.Set.setScope(String)",1,1,1
"org.apache.struts2.components.Set.setValue(String)",1,1,1
"org.apache.struts2.components.Set.setVar(String)",1,1,1
"org.apache.struts2.components.Set.usesBody()",1,1,1
"org.apache.struts2.components.Submit.Submit(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Submit.end(Writer,String)",1,2,2
"org.apache.struts2.components.Submit.evaluateExtraParams()",1,2,2
"org.apache.struts2.components.Submit.evaluateParams()",1,1,5
"org.apache.struts2.components.Submit.getDefaultOpenTemplate()",1,1,1
"org.apache.struts2.components.Submit.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.Submit.setSrc(String)",1,1,1
"org.apache.struts2.components.Submit.supportsImageType()",1,1,1
"org.apache.struts2.components.Submit.usesBody()",1,1,1
"org.apache.struts2.components.Text.Text(ValueStack)",1,1,1
"org.apache.struts2.components.Text.addParameter(Object)",1,1,2
"org.apache.struts2.components.Text.addParameter(String,Object)",1,1,1
"org.apache.struts2.components.Text.end(Writer,String)",1,5,7
"org.apache.struts2.components.Text.setName(String)",1,1,1
"org.apache.struts2.components.Text.setSearchValueStack(String)",1,1,1
"org.apache.struts2.components.Text.usesBody()",1,1,1
"org.apache.struts2.components.TextArea.TextArea(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.TextArea.evaluateExtraParams()",1,5,5
"org.apache.struts2.components.TextArea.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.TextArea.setCols(String)",1,1,1
"org.apache.struts2.components.TextArea.setReadonly(String)",1,1,1
"org.apache.struts2.components.TextArea.setRows(String)",1,1,1
"org.apache.struts2.components.TextArea.setWrap(String)",1,1,1
"org.apache.struts2.components.TextField.TextField(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.TextField.evaluateExtraParams()",1,5,5
"org.apache.struts2.components.TextField.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.TextField.setMaxLength(String)",1,1,1
"org.apache.struts2.components.TextField.setMaxlength(String)",1,1,1
"org.apache.struts2.components.TextField.setReadonly(String)",1,1,1
"org.apache.struts2.components.TextField.setSize(String)",1,1,1
"org.apache.struts2.components.TextField.setType(String)",1,1,1
"org.apache.struts2.components.Token.Token(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.Token.buildToken(String)",1,2,2
"org.apache.struts2.components.Token.evaluateExtraParams()",1,3,4
"org.apache.struts2.components.Token.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.UIBean.UIBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.UIBean.addFormParameter(String,Object)",1,2,2
"org.apache.struts2.components.UIBean.buildTemplateName(String,String)",1,2,2
"org.apache.struts2.components.UIBean.copyParams(Map)",1,4,4
"org.apache.struts2.components.UIBean.enableAncestorFormCustomOnsubmit()",1,3,3
"org.apache.struts2.components.UIBean.end(Writer,String)",1,1,2
"org.apache.struts2.components.UIBean.ensureAttributeSafelyNotEscaped(String)",2,2,2
"org.apache.struts2.components.UIBean.escape(String)",2,2,2
"org.apache.struts2.components.UIBean.evaluateExtraParams()",1,1,1
"org.apache.struts2.components.UIBean.evaluateNameValue()",1,1,1
"org.apache.struts2.components.UIBean.evaluateParams()",1,54,56
"org.apache.struts2.components.UIBean.getId()",1,1,1
"org.apache.struts2.components.UIBean.getTemplate()",1,1,1
"org.apache.struts2.components.UIBean.getTemplateDir()",1,3,5
"org.apache.struts2.components.UIBean.getTheme()",1,5,6
"org.apache.struts2.components.UIBean.getTooltipConfig(UIBean)",1,8,8
"org.apache.struts2.components.UIBean.getValueClassType()",1,1,1
"org.apache.struts2.components.UIBean.mergeTemplate(Writer,Template)",2,1,2
"org.apache.struts2.components.UIBean.populateComponentHtmlId(Form)",1,6,6
"org.apache.struts2.components.UIBean.setAccesskey(String)",1,1,1
"org.apache.struts2.components.UIBean.setClass(String)",1,1,1
"org.apache.struts2.components.UIBean.setCssClass(String)",1,1,1
"org.apache.struts2.components.UIBean.setCssErrorClass(String)",1,1,1
"org.apache.struts2.components.UIBean.setCssErrorStyle(String)",1,1,1
"org.apache.struts2.components.UIBean.setCssStyle(String)",1,1,1
"org.apache.struts2.components.UIBean.setDefaultTemplateDir(String)",1,1,1
"org.apache.struts2.components.UIBean.setDefaultUITheme(String)",1,1,1
"org.apache.struts2.components.UIBean.setDisabled(String)",1,1,1
"org.apache.struts2.components.UIBean.setDynamicAttributes(Map<String, Object>)",1,3,3
"org.apache.struts2.components.UIBean.setErrorPosition(String)",1,1,1
"org.apache.struts2.components.UIBean.setId(String)",1,2,2
"org.apache.struts2.components.UIBean.setJavascriptTooltip(String)",1,1,1
"org.apache.struts2.components.UIBean.setKey(String)",1,1,1
"org.apache.struts2.components.UIBean.setLabel(String)",1,1,1
"org.apache.struts2.components.UIBean.setLabelSeparator(String)",1,1,1
"org.apache.struts2.components.UIBean.setLabelposition(String)",1,1,1
"org.apache.struts2.components.UIBean.setName(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnblur(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnchange(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnclick(String)",1,1,1
"org.apache.struts2.components.UIBean.setOndblclick(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnfocus(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnkeydown(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnkeypress(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnkeyup(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnmousedown(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnmousemove(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnmouseout(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnmouseover(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnmouseup(String)",1,1,1
"org.apache.struts2.components.UIBean.setOnselect(String)",1,1,1
"org.apache.struts2.components.UIBean.setRequiredLabel(String)",1,1,1
"org.apache.struts2.components.UIBean.setRequiredPosition(String)",1,1,1
"org.apache.struts2.components.UIBean.setStyle(String)",1,1,1
"org.apache.struts2.components.UIBean.setTabindex(String)",1,1,1
"org.apache.struts2.components.UIBean.setTemplate(String)",1,1,1
"org.apache.struts2.components.UIBean.setTemplateDir(String)",1,1,1
"org.apache.struts2.components.UIBean.setTemplateEngineManager(TemplateEngineManager)",1,1,1
"org.apache.struts2.components.UIBean.setTheme(String)",1,1,1
"org.apache.struts2.components.UIBean.setTitle(String)",1,1,1
"org.apache.struts2.components.UIBean.setTooltip(String)",1,1,1
"org.apache.struts2.components.UIBean.setTooltipConfig(String)",1,1,1
"org.apache.struts2.components.UIBean.setTooltipCssClass(String)",1,1,1
"org.apache.struts2.components.UIBean.setTooltipDelay(String)",1,1,1
"org.apache.struts2.components.UIBean.setTooltipIconPath(String)",1,1,1
"org.apache.struts2.components.UIBean.setUIThemeExpansionToken(String)",1,1,1
"org.apache.struts2.components.UIBean.setValue(String)",1,1,1
"org.apache.struts2.components.URL.URL(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.URL.end(Writer,String)",1,1,1
"org.apache.struts2.components.URL.findString(String)",1,1,1
"org.apache.struts2.components.URL.getUrlProvider()",1,1,1
"org.apache.struts2.components.URL.setAction(String)",1,1,1
"org.apache.struts2.components.URL.setAnchor(String)",1,1,1
"org.apache.struts2.components.URL.setEncode(boolean)",1,1,1
"org.apache.struts2.components.URL.setEscapeAmp(boolean)",1,1,1
"org.apache.struts2.components.URL.setExtraParameterProvider(ExtraParameterProvider)",1,1,1
"org.apache.struts2.components.URL.setForceAddSchemeHostAndPort(boolean)",1,1,1
"org.apache.struts2.components.URL.setIncludeContext(boolean)",1,1,1
"org.apache.struts2.components.URL.setIncludeParams(String)",1,1,1
"org.apache.struts2.components.URL.setMethod(String)",1,1,1
"org.apache.struts2.components.URL.setNamespace(String)",1,1,1
"org.apache.struts2.components.URL.setPortletMode(String)",1,1,1
"org.apache.struts2.components.URL.setPortletUrlType(String)",1,1,1
"org.apache.struts2.components.URL.setScheme(String)",1,1,1
"org.apache.struts2.components.URL.setUrlIncludeParams(String)",1,1,1
"org.apache.struts2.components.URL.setUrlRenderer(UrlRenderer)",1,1,1
"org.apache.struts2.components.URL.setValue(String)",1,1,1
"org.apache.struts2.components.URL.setWindowState(String)",1,1,1
"org.apache.struts2.components.URL.start(Writer)",1,1,1
"org.apache.struts2.components.UpDownSelect.UpDownSelect(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.components.UpDownSelect.evaluateParams()",1,11,12
"org.apache.struts2.components.UpDownSelect.getAllowMoveDown()",1,1,1
"org.apache.struts2.components.UpDownSelect.getAllowMoveUp()",1,1,1
"org.apache.struts2.components.UpDownSelect.getAllowSelectAll()",1,1,1
"org.apache.struts2.components.UpDownSelect.getDefaultTemplate()",1,1,1
"org.apache.struts2.components.UpDownSelect.getMoveDownLabel()",1,1,1
"org.apache.struts2.components.UpDownSelect.getMoveUpLabel()",1,1,1
"org.apache.struts2.components.UpDownSelect.getSelectAllLabel()",1,1,1
"org.apache.struts2.components.UpDownSelect.setAllowMoveDown(String)",1,1,1
"org.apache.struts2.components.UpDownSelect.setAllowMoveUp(String)",1,1,1
"org.apache.struts2.components.UpDownSelect.setAllowSelectAll(String)",1,1,1
"org.apache.struts2.components.UpDownSelect.setMoveDownLabel(String)",1,1,1
"org.apache.struts2.components.UpDownSelect.setMoveUpLabel(String)",1,1,1
"org.apache.struts2.components.UpDownSelect.setSelectAllLabel(String)",1,1,1
"org.apache.struts2.components.template.BaseTemplateEngine.buildPropertyFilename(Template)",1,1,1
"org.apache.struts2.components.template.BaseTemplateEngine.createFileInputStream(File)",1,1,2
"org.apache.struts2.components.template.BaseTemplateEngine.getFinalTemplateName(Template)",2,2,2
"org.apache.struts2.components.template.BaseTemplateEngine.getThemePropertiesFileName()",1,1,1
"org.apache.struts2.components.template.BaseTemplateEngine.getThemeProps(Template)",1,2,2
"org.apache.struts2.components.template.BaseTemplateEngine.loadProperties(String)",1,2,2
"org.apache.struts2.components.template.BaseTemplateEngine.readNewProperties(Template)",1,1,1
"org.apache.struts2.components.template.BaseTemplateEngine.readProperty(String)",1,3,3
"org.apache.struts2.components.template.BaseTemplateEngine.readPropertyFromClasspath(String)",1,1,1
"org.apache.struts2.components.template.BaseTemplateEngine.readPropertyUsingServletContext(String)",2,2,3
"org.apache.struts2.components.template.BaseTemplateEngine.tryCloseStream(InputStream)",1,2,2
"org.apache.struts2.components.template.BaseTemplateEngine.tryReadingPropertyFileFromFileSystem(String)",1,2,2
"org.apache.struts2.components.template.BaseTemplateEngine.tryToLoadPropertiesFromStream(Properties,String,InputStream)",1,2,2
"org.apache.struts2.components.template.FreemarkerTemplateEngine.getSuffix()",1,1,1
"org.apache.struts2.components.template.FreemarkerTemplateEngine.renderTemplate(TemplateRenderingContext)",4,6,10
"org.apache.struts2.components.template.FreemarkerTemplateEngine.setFreemarkerManager(FreemarkerManager)",1,1,1
"org.apache.struts2.components.template.JspTemplateEngine.getSuffix()",1,1,1
"org.apache.struts2.components.template.JspTemplateEngine.renderTemplate(TemplateRenderingContext)",4,3,6
"org.apache.struts2.components.template.JspTemplateEngine.setEncoding(String)",1,1,1
"org.apache.struts2.components.template.Template.Template(String,String,String)",1,1,1
"org.apache.struts2.components.template.Template.clone()",1,1,1
"org.apache.struts2.components.template.Template.equals(Object)",6,5,10
"org.apache.struts2.components.template.Template.getDir()",1,1,1
"org.apache.struts2.components.template.Template.getName()",1,1,1
"org.apache.struts2.components.template.Template.getPossibleTemplates(TemplateEngine)",1,2,3
"org.apache.struts2.components.template.Template.getTheme()",1,1,1
"org.apache.struts2.components.template.Template.hashCode()",1,4,4
"org.apache.struts2.components.template.Template.toString()",1,1,1
"org.apache.struts2.components.template.TemplateEngineManager.LazyEngineFactory.LazyEngineFactory(String)",1,1,1
"org.apache.struts2.components.template.TemplateEngineManager.LazyEngineFactory.create()",2,1,2
"org.apache.struts2.components.template.TemplateEngineManager.getTemplateEngine(Template,String)",1,2,4
"org.apache.struts2.components.template.TemplateEngineManager.registerTemplateEngine(String,TemplateEngine)",1,1,1
"org.apache.struts2.components.template.TemplateEngineManager.setContainer(Container)",1,2,2
"org.apache.struts2.components.template.TemplateEngineManager.setDefaultTemplateType(String)",1,1,1
"org.apache.struts2.components.template.TemplateRenderingContext.TemplateRenderingContext(Template,Writer,ValueStack,Map,UIBean)",1,1,1
"org.apache.struts2.components.template.TemplateRenderingContext.getParameters()",1,1,1
"org.apache.struts2.components.template.TemplateRenderingContext.getStack()",1,1,1
"org.apache.struts2.components.template.TemplateRenderingContext.getTag()",1,1,1
"org.apache.struts2.components.template.TemplateRenderingContext.getTemplate()",1,1,1
"org.apache.struts2.components.template.TemplateRenderingContext.getWriter()",1,1,1
"org.apache.struts2.components.template.VelocityTemplateEngine.getSuffix()",1,1,1
"org.apache.struts2.components.template.VelocityTemplateEngine.renderTemplate(TemplateRenderingContext)",4,3,6
"org.apache.struts2.components.template.VelocityTemplateEngine.setVelocityManager(VelocityManager)",1,1,1
"org.apache.struts2.config.AbstractBeanSelectionProvider.ObjectFactoryDelegateFactory.ObjectFactoryDelegateFactory(String,Class)",1,1,1
"org.apache.struts2.config.AbstractBeanSelectionProvider.ObjectFactoryDelegateFactory.create(Context)",1,2,2
"org.apache.struts2.config.AbstractBeanSelectionProvider.alias(Class,String,ContainerBuilder,Properties)",1,1,1
"org.apache.struts2.config.AbstractBeanSelectionProvider.alias(Class,String,ContainerBuilder,Properties,Scope)",5,9,9
"org.apache.struts2.config.AbstractBeanSelectionProvider.convertIfExist(LocatableProperties,String,String)",1,2,2
"org.apache.struts2.config.AbstractBeanSelectionProvider.destroy()",1,1,1
"org.apache.struts2.config.AbstractBeanSelectionProvider.init(Configuration)",1,1,1
"org.apache.struts2.config.AbstractBeanSelectionProvider.loadPackages()",1,1,1
"org.apache.struts2.config.AbstractBeanSelectionProvider.needsReload()",1,1,1
"org.apache.struts2.config.DefaultBeanSelectionProvider.loadCustomResourceBundles(LocatableProperties)",1,5,5
"org.apache.struts2.config.DefaultBeanSelectionProvider.register(ContainerBuilder,LocatableProperties)",1,1,1
"org.apache.struts2.config.DefaultBeanSelectionProvider.switchDevMode(LocatableProperties)",1,5,5
"org.apache.struts2.config.DefaultPropertiesProvider.destroy()",1,1,1
"org.apache.struts2.config.DefaultPropertiesProvider.init(Configuration)",1,1,1
"org.apache.struts2.config.DefaultPropertiesProvider.register(ContainerBuilder,LocatableProperties)",1,1,2
"org.apache.struts2.config.DefaultSettings.DefaultSettings()",1,5,5
"org.apache.struts2.config.DefaultSettings.get(String)",1,1,1
"org.apache.struts2.config.DefaultSettings.getLocation(String)",1,1,1
"org.apache.struts2.config.DefaultSettings.list()",1,1,1
"org.apache.struts2.config.DelegatingSettings.DelegatingSettings(List<Settings>)",1,1,1
"org.apache.struts2.config.DelegatingSettings.get(String)",3,2,3
"org.apache.struts2.config.DelegatingSettings.getLocation(String)",3,2,3
"org.apache.struts2.config.DelegatingSettings.list()",2,4,6
"org.apache.struts2.config.NullResult.execute(ActionInvocation)",1,1,1
"org.apache.struts2.config.PropertiesConfigurationProvider.destroy()",1,1,1
"org.apache.struts2.config.PropertiesConfigurationProvider.init(Configuration)",1,1,1
"org.apache.struts2.config.PropertiesConfigurationProvider.loadPackages()",1,1,1
"org.apache.struts2.config.PropertiesConfigurationProvider.loadSettings(LocatableProperties,Settings)",1,2,2
"org.apache.struts2.config.PropertiesConfigurationProvider.needsReload()",1,1,1
"org.apache.struts2.config.PropertiesConfigurationProvider.register(ContainerBuilder,LocatableProperties)",1,1,1
"org.apache.struts2.config.PropertiesSettings.PropertiesSettings(String)",2,2,3
"org.apache.struts2.config.PropertiesSettings.get(String)",1,1,1
"org.apache.struts2.config.PropertiesSettings.getLocation(String)",1,1,1
"org.apache.struts2.config.PropertiesSettings.list()",1,1,1
"org.apache.struts2.config.StrutsXmlConfigurationProvider.StrutsXmlConfigurationProvider(String,boolean,ServletContext)",1,2,2
"org.apache.struts2.config.StrutsXmlConfigurationProvider.StrutsXmlConfigurationProvider(boolean)",1,1,1
"org.apache.struts2.config.StrutsXmlConfigurationProvider.findInFileSystem(String)",2,2,4
"org.apache.struts2.config.StrutsXmlConfigurationProvider.getConfigurationUrls(String)",4,4,4
"org.apache.struts2.config.StrutsXmlConfigurationProvider.loadPackages()",1,1,1
"org.apache.struts2.config.StrutsXmlConfigurationProvider.needsReload()",2,3,3
"org.apache.struts2.config.StrutsXmlConfigurationProvider.register(ContainerBuilder,LocatableProperties)",1,3,3
"org.apache.struts2.config.StrutsXmlConfigurationProvider.toString()",1,1,1
"org.apache.struts2.dispatcher.ApplicationMap.ApplicationMap(ServletContext)",1,1,1
"org.apache.struts2.dispatcher.ApplicationMap.clear()",1,2,2
"org.apache.struts2.dispatcher.ApplicationMap.entrySet()",3,14,16
"org.apache.struts2.dispatcher.ApplicationMap.get(Object)",1,2,2
"org.apache.struts2.dispatcher.ApplicationMap.put(Object,Object)",1,1,1
"org.apache.struts2.dispatcher.ApplicationMap.remove(Object)",1,1,1
"org.apache.struts2.dispatcher.ContainerHolder.clear()",1,1,1
"org.apache.struts2.dispatcher.ContainerHolder.get()",1,1,1
"org.apache.struts2.dispatcher.ContainerHolder.store(Container)",1,1,1
"org.apache.struts2.dispatcher.DefaultActionSupport.DefaultActionSupport()",1,1,1
"org.apache.struts2.dispatcher.DefaultActionSupport.execute()",1,1,2
"org.apache.struts2.dispatcher.DefaultActionSupport.getSuccessResultValue()",1,1,1
"org.apache.struts2.dispatcher.DefaultActionSupport.setSuccessResultValue(String)",1,1,1
"org.apache.struts2.dispatcher.DefaultDispatcherErrorHandler.createReportData(Exception,List<Throwable>)",1,1,1
"org.apache.struts2.dispatcher.DefaultDispatcherErrorHandler.handleError(HttpServletRequest,HttpServletResponse,int,Exception)",1,2,3
"org.apache.struts2.dispatcher.DefaultDispatcherErrorHandler.handleErrorInDevMode(HttpServletResponse,int,Exception)",1,3,4
"org.apache.struts2.dispatcher.DefaultDispatcherErrorHandler.init(ServletContext)",1,1,2
"org.apache.struts2.dispatcher.DefaultDispatcherErrorHandler.sendErrorResponse(HttpServletRequest,HttpServletResponse,int,Exception)",1,2,3
"org.apache.struts2.dispatcher.DefaultDispatcherErrorHandler.setDevMode(String)",1,1,1
"org.apache.struts2.dispatcher.DefaultDispatcherErrorHandler.setFreemarkerManager(FreemarkerManager)",1,1,1
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.buildPath(String,String)",1,3,3
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.canHandle(String)",1,3,3
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.cleanupPath(String)",1,1,1
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.copy(InputStream,OutputStream)",1,2,2
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.findResource(String)",1,1,1
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.findStaticResource(String,HttpServletRequest,HttpServletResponse)",4,5,6
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.getAdditionalPackages()",1,1,1
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.getContentType(String)",8,8,9
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.parse(String)",2,3,4
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.process(InputStream,String,HttpServletRequest,HttpServletResponse)",3,6,7
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.setEncoding(String)",1,1,1
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.setHostConfig(HostConfig)",1,1,2
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.setServeStaticBrowserCache(String)",1,1,1
"org.apache.struts2.dispatcher.DefaultStaticContentLoader.setServeStaticContent(String)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.Dispatcher(ServletContext,Map<String, String>)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.Locator.getLocation(Object)",2,1,2
"org.apache.struts2.dispatcher.Dispatcher.addDispatcherListener(DispatcherListener)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.applyEncoding(HttpServletRequest,String)",1,3,3
"org.apache.struts2.dispatcher.Dispatcher.cleanUpAfterInit()",1,2,2
"org.apache.struts2.dispatcher.Dispatcher.cleanUpRequest(HttpServletRequest)",2,1,2
"org.apache.struts2.dispatcher.Dispatcher.cleanup()",1,11,11
"org.apache.struts2.dispatcher.Dispatcher.createConfigurationManager(String)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.createContextMap(HttpServletRequest,HttpServletResponse,ActionMapping)",1,2,2
"org.apache.struts2.dispatcher.Dispatcher.createContextMap(Map,Map,Map,Map,HttpServletRequest,HttpServletResponse)",1,2,2
"org.apache.struts2.dispatcher.Dispatcher.createStrutsXmlConfigurationProvider(String,boolean,ServletContext)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.createXmlConfigurationProvider(String,boolean)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.getConfigurationManager()",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.getContainer()",4,4,4
"org.apache.struts2.dispatcher.Dispatcher.getInstance()",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.getMultiPartRequest()",1,4,4
"org.apache.struts2.dispatcher.Dispatcher.getSaveDir()",1,7,7
"org.apache.struts2.dispatcher.Dispatcher.init()",1,5,5
"org.apache.struts2.dispatcher.Dispatcher.init_AliasStandardObjects()",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.init_CheckWebLogicWorkaround(Container)",1,3,3
"org.apache.struts2.dispatcher.Dispatcher.init_CustomConfigurationProviders()",3,3,6
"org.apache.struts2.dispatcher.Dispatcher.init_DefaultProperties()",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.init_FileManager()",1,3,3
"org.apache.struts2.dispatcher.Dispatcher.init_FilterInitParameters()",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.init_LegacyStrutsProperties()",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.init_PreloadConfiguration()",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.init_TraditionalXmlConfigurations()",3,4,5
"org.apache.struts2.dispatcher.Dispatcher.logConfigurationException(HttpServletRequest,ConfigurationException)",1,4,4
"org.apache.struts2.dispatcher.Dispatcher.prepare(HttpServletRequest,HttpServletResponse)",1,5,7
"org.apache.struts2.dispatcher.Dispatcher.removeDispatcherListener(DispatcherListener)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.sendError(HttpServletRequest,HttpServletResponse,int,Exception)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.serviceAction(HttpServletRequest,HttpServletResponse,ActionMapping)",2,9,10
"org.apache.struts2.dispatcher.Dispatcher.setDefaultEncoding(String)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.setDefaultLocale(String)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.setDevMode(String)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.setDisableRequestAttributeValueStackLookup(String)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.setDispatcherErrorHandler(DispatcherErrorHandler)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.setHandleException(String)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.setInstance(Dispatcher)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.setMultipartHandler(String)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.setMultipartSaveDir(String)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.setValueStackFactory(ValueStackFactory)",1,1,1
"org.apache.struts2.dispatcher.Dispatcher.wrapRequest(HttpServletRequest)",2,3,4
"org.apache.struts2.dispatcher.ExecuteOperations.ExecuteOperations(Dispatcher)",1,1,1
"org.apache.struts2.dispatcher.ExecuteOperations.executeAction(HttpServletRequest,HttpServletResponse,ActionMapping)",1,1,1
"org.apache.struts2.dispatcher.ExecuteOperations.executeStaticResourceRequest(HttpServletRequest,HttpServletResponse)",2,4,4
"org.apache.struts2.dispatcher.InitOperations.InitOperations()",1,1,1
"org.apache.struts2.dispatcher.InitOperations.buildExcludedPatternsList(Dispatcher)",1,1,1
"org.apache.struts2.dispatcher.InitOperations.buildExcludedPatternsList(String)",2,4,4
"org.apache.struts2.dispatcher.InitOperations.cleanup()",1,1,1
"org.apache.struts2.dispatcher.InitOperations.createDispatcher(HostConfig)",1,2,2
"org.apache.struts2.dispatcher.InitOperations.findDispatcherOnThread()",2,1,2
"org.apache.struts2.dispatcher.InitOperations.initDispatcher(HostConfig)",1,1,1
"org.apache.struts2.dispatcher.InitOperations.initLogging(HostConfig)",1,5,5
"org.apache.struts2.dispatcher.InitOperations.initStaticContentLoader(HostConfig,Dispatcher)",1,1,1
"org.apache.struts2.dispatcher.MockDispatcher.MockDispatcher(ServletContext,Map<String, String>,ConfigurationManager)",1,1,1
"org.apache.struts2.dispatcher.MockDispatcher.init()",1,1,1
"org.apache.struts2.dispatcher.PrepareOperations.PrepareOperations(Dispatcher)",1,1,1
"org.apache.struts2.dispatcher.PrepareOperations.assignDispatcherToThread()",1,1,1
"org.apache.struts2.dispatcher.PrepareOperations.cleanupDispatcher()",2,2,2
"org.apache.struts2.dispatcher.PrepareOperations.cleanupRequest(HttpServletRequest)",3,3,3
"org.apache.struts2.dispatcher.PrepareOperations.createActionContext(HttpServletRequest,HttpServletResponse)",1,2,3
"org.apache.struts2.dispatcher.PrepareOperations.findActionMapping(HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.dispatcher.PrepareOperations.findActionMapping(HttpServletRequest,HttpServletResponse,boolean)",1,4,5
"org.apache.struts2.dispatcher.PrepareOperations.getDevModeOverride()",1,1,1
"org.apache.struts2.dispatcher.PrepareOperations.isUrlExcluded(HttpServletRequest,List<Pattern>)",4,3,4
"org.apache.struts2.dispatcher.PrepareOperations.overrideDevMode(boolean)",1,1,1
"org.apache.struts2.dispatcher.PrepareOperations.setEncodingAndLocale(HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.dispatcher.PrepareOperations.wrapRequest(HttpServletRequest)",1,1,2
"org.apache.struts2.dispatcher.RequestMap.RequestMap(HttpServletRequest)",1,1,1
"org.apache.struts2.dispatcher.RequestMap.clear()",1,2,2
"org.apache.struts2.dispatcher.RequestMap.entrySet()",2,8,9
"org.apache.struts2.dispatcher.RequestMap.get(Object)",1,1,1
"org.apache.struts2.dispatcher.RequestMap.put(Object,Object)",1,1,1
"org.apache.struts2.dispatcher.RequestMap.remove(Object)",1,1,1
"org.apache.struts2.dispatcher.SessionMap.SessionMap(HttpServletRequest)",1,1,1
"org.apache.struts2.dispatcher.SessionMap.clear()",2,2,3
"org.apache.struts2.dispatcher.SessionMap.containsKey(Object)",2,1,2
"org.apache.struts2.dispatcher.SessionMap.entrySet()",3,9,10
"org.apache.struts2.dispatcher.SessionMap.get(Object)",2,1,2
"org.apache.struts2.dispatcher.SessionMap.invalidate()",2,1,2
"org.apache.struts2.dispatcher.SessionMap.put(K,V)",1,2,2
"org.apache.struts2.dispatcher.SessionMap.remove(Object)",2,1,2
"org.apache.struts2.dispatcher.StrutsRequestWrapper.StrutsRequestWrapper(HttpServletRequest)",1,1,1
"org.apache.struts2.dispatcher.StrutsRequestWrapper.StrutsRequestWrapper(HttpServletRequest,boolean)",1,1,1
"org.apache.struts2.dispatcher.StrutsRequestWrapper.getAttribute(String)",3,7,9
"org.apache.struts2.dispatcher.filter.FilterHostConfig.FilterHostConfig(FilterConfig)",1,1,1
"org.apache.struts2.dispatcher.filter.FilterHostConfig.getInitParameter(String)",1,1,1
"org.apache.struts2.dispatcher.filter.FilterHostConfig.getInitParameterNames()",1,1,1
"org.apache.struts2.dispatcher.filter.FilterHostConfig.getServletContext()",1,1,1
"org.apache.struts2.dispatcher.filter.StrutsExecuteFilter.destroy()",1,1,1
"org.apache.struts2.dispatcher.filter.StrutsExecuteFilter.doFilter(ServletRequest,ServletResponse,FilterChain)",2,5,6
"org.apache.struts2.dispatcher.filter.StrutsExecuteFilter.excludeUrl(HttpServletRequest)",1,1,1
"org.apache.struts2.dispatcher.filter.StrutsExecuteFilter.init(FilterConfig)",1,1,1
"org.apache.struts2.dispatcher.filter.StrutsExecuteFilter.lazyInit()",1,2,2
"org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.destroy()",1,1,1
"org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.doFilter(ServletRequest,ServletResponse,FilterChain)",1,5,5
"org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.init(FilterConfig)",1,2,2
"org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.postInit(Dispatcher,FilterConfig)",1,1,1
"org.apache.struts2.dispatcher.filter.StrutsPrepareFilter.destroy()",1,1,1
"org.apache.struts2.dispatcher.filter.StrutsPrepareFilter.doFilter(ServletRequest,ServletResponse,FilterChain)",1,3,3
"org.apache.struts2.dispatcher.filter.StrutsPrepareFilter.init(FilterConfig)",1,2,2
"org.apache.struts2.dispatcher.filter.StrutsPrepareFilter.postInit(Dispatcher,FilterConfig)",1,1,1
"org.apache.struts2.dispatcher.listener.ListenerHostConfig.ListenerHostConfig(ServletContext)",1,1,1
"org.apache.struts2.dispatcher.listener.ListenerHostConfig.getInitParameter(String)",1,1,1
"org.apache.struts2.dispatcher.listener.ListenerHostConfig.getInitParameterNames()",1,1,1
"org.apache.struts2.dispatcher.listener.ListenerHostConfig.getServletContext()",1,1,1
"org.apache.struts2.dispatcher.listener.StrutsListener.contextDestroyed(ServletContextEvent)",1,1,1
"org.apache.struts2.dispatcher.listener.StrutsListener.contextInitialized(ServletContextEvent)",1,2,2
"org.apache.struts2.dispatcher.mapper.ActionMapping.ActionMapping()",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.ActionMapping(Result)",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.ActionMapping(String,String,String,Map<String, Object>)",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.getExtension()",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.getMethod()",2,2,3
"org.apache.struts2.dispatcher.mapper.ActionMapping.getName()",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.getNamespace()",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.getParams()",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.getResult()",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.setExtension(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.setMethod(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.setName(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.setNamespace(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.setParams(Map<String, Object>)",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.setResult(Result)",1,1,1
"org.apache.struts2.dispatcher.mapper.ActionMapping.toString()",1,2,2
"org.apache.struts2.dispatcher.mapper.CompositeActionMapper.CompositeActionMapper(Container,String)",1,3,3
"org.apache.struts2.dispatcher.mapper.CompositeActionMapper.getMapping(HttpServletRequest,ConfigurationManager)",3,3,3
"org.apache.struts2.dispatcher.mapper.CompositeActionMapper.getMappingFromActionName(String)",3,3,3
"org.apache.struts2.dispatcher.mapper.CompositeActionMapper.getUriFromActionMapping(ActionMapping)",3,3,3
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.DefaultActionMapper()",1,9,11
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.addParameterAction(String,ParameterAction)",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.cleanupActionName(String)",2,3,3
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.dropExtension(String,ActionMapping)",6,5,7
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.getDefaultExtension()",2,2,2
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.getMapping(HttpServletRequest,ConfigurationManager)",2,2,3
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.getMappingFromActionName(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.getUriFromActionMapping(ActionMapping)",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.handleDynamicMethod(ActionMapping,StringBuilder)",1,4,4
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.handleExtension(ActionMapping,StringBuilder)",1,6,6
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.handleName(ActionMapping,StringBuilder)",1,2,2
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.handleNamespace(ActionMapping,StringBuilder)",1,3,3
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.handleParams(ActionMapping,StringBuilder)",1,3,3
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.handleSpecialParameters(HttpServletRequest,ActionMapping)",4,6,6
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.isSlashesInActionNames()",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.lookupExtension(String)",1,5,5
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.parseActionName(ActionMapping)",2,3,4
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.parseNameAndNamespace(String,ActionMapping,ConfigurationManager)",1,13,16
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.setAllowActionCrossNamespaceAccess(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.setAllowActionPrefix(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.setAllowDynamicMethodCalls(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.setAllowedActionNames(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.setAlwaysSelectFullNamespace(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.setContainer(Container)",1,1,1
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.setExtensions(String)",1,3,3
"org.apache.struts2.dispatcher.mapper.DefaultActionMapper.setSlashesInActionNames(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.PrefixBasedActionMapper.getMapping(HttpServletRequest,ConfigurationManager)",4,10,10
"org.apache.struts2.dispatcher.mapper.PrefixBasedActionMapper.getUriFromActionMapping(ActionMapping)",4,5,5
"org.apache.struts2.dispatcher.mapper.PrefixBasedActionMapper.setContainer(Container)",1,1,1
"org.apache.struts2.dispatcher.mapper.PrefixBasedActionMapper.setPrefixBasedActionMappers(String)",1,4,4
"org.apache.struts2.dispatcher.mapper.Restful2ActionMapper.Restful2ActionMapper()",1,1,1
"org.apache.struts2.dispatcher.mapper.Restful2ActionMapper.getIdParameterName()",1,1,1
"org.apache.struts2.dispatcher.mapper.Restful2ActionMapper.getMapping(HttpServletRequest,ConfigurationManager)",3,24,29
"org.apache.struts2.dispatcher.mapper.Restful2ActionMapper.isDelete(HttpServletRequest)",2,3,3
"org.apache.struts2.dispatcher.mapper.Restful2ActionMapper.isGet(HttpServletRequest)",1,1,1
"org.apache.struts2.dispatcher.mapper.Restful2ActionMapper.isPost(HttpServletRequest)",1,1,1
"org.apache.struts2.dispatcher.mapper.Restful2ActionMapper.isPut(HttpServletRequest)",2,3,3
"org.apache.struts2.dispatcher.mapper.Restful2ActionMapper.setIdParameterName(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.RestfulActionMapper.getMapping(HttpServletRequest,ConfigurationManager)",2,6,8
"org.apache.struts2.dispatcher.mapper.RestfulActionMapper.getMappingFromActionName(String)",1,1,1
"org.apache.struts2.dispatcher.mapper.RestfulActionMapper.getUriFromActionMapping(ActionMapping)",1,2,2
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.buildErrorMessage(Throwable,Object[])",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.cleanUp()",1,5,5
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.createDiskFileItemFactory(String)",1,2,2
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.createRequestContext(HttpServletRequest)",2,1,2
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.createServletFileUpload(DiskFileItemFactory)",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getCanonicalName(String)",1,3,5
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getContentType(String)",2,2,3
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getErrors()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getFile(String)",2,6,7
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getFileNames(String)",2,2,3
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getFileParameterNames()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getFilesystemName(String)",2,2,3
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getParameter(String)",2,3,3
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getParameterNames()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.getParameterValues(String)",2,3,3
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.parse(HttpServletRequest,String)",1,5,5
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.parseRequest(HttpServletRequest,String)",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.processFileField(FileItem)",2,4,4
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.processNormalFormField(FileItem,String)",1,3,3
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.processUpload(HttpServletRequest,String)",1,3,3
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.setLocale(HttpServletRequest)",1,2,2
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.setLocaleProvider(LocaleProvider)",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest.setMaxSize(String)",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.FileInfo.FileInfo(File,String,String)",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.FileInfo.getContentType()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.FileInfo.getFile()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.FileInfo.getOriginalName()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.addFileSkippedError(String,HttpServletRequest)",1,2,2
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.buildErrorMessage(Throwable,Object[])",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.buildMessage(Throwable,Object[])",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.cleanUp()",1,4,4
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.createFileInfoFromItemStream(FileItemStream,File)",1,2,2
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.createTemporaryFile(String,String)",1,2,2
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getCanonicalName(String)",1,2,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getContentType(String)",2,2,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getErrors()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getFile(String)",2,2,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getFileNames(String)",2,2,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getFileParameterNames()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getFilesystemName(String)",2,2,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getMesssages()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getParameter(String)",2,3,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getParameterNames()",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getParameterValues(String)",2,3,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.getRequestSize(HttpServletRequest)",1,2,2
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.isRequestSizePermitted(HttpServletRequest)",2,1,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.parse(HttpServletRequest,String)",1,3,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.processFileItemStreamAsFileField(FileItemStream,String)",1,5,5
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.processFileItemStreamAsFormField(FileItemStream)",1,3,3
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.processUpload(HttpServletRequest,String)",5,6,6
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.setBufferSize(String)",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.setLocale(HttpServletRequest)",1,2,2
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.setLocaleProvider(LocaleProvider)",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.setMaxSize(String)",1,1,1
"org.apache.struts2.dispatcher.multipart.JakartaStreamMultiPartRequest.streamFileToDisk(FileItemStream,File)",1,2,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.MultiPartRequestWrapper(MultiPartRequest,HttpServletRequest,String,LocaleProvider)",1,1,1
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.MultiPartRequestWrapper(MultiPartRequest,HttpServletRequest,String,LocaleProvider,boolean)",1,3,3
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.addError(String)",1,2,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.buildErrorMessage(Throwable,Object[])",1,1,1
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.cleanUp()",1,2,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getContentTypes(String)",2,1,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getErrors()",1,1,1
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getFileNames(String)",2,1,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getFileParameterNames()",2,1,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getFileSystemNames(String)",2,1,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getFiles(String)",2,1,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getParameter(String)",1,3,3
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getParameterMap()",1,2,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getParameterNames()",2,2,2
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.getParameterValues(String)",1,3,3
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.hasErrors()",1,1,1
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.mergeParams(Enumeration,Enumeration)",1,3,3
"org.apache.struts2.dispatcher.multipart.MultiPartRequestWrapper.setLocale(HttpServletRequest)",1,2,2
"org.apache.struts2.dispatcher.servlet.ServletHostConfig.ServletHostConfig(ServletConfig)",1,1,1
"org.apache.struts2.dispatcher.servlet.ServletHostConfig.getInitParameter(String)",1,1,1
"org.apache.struts2.dispatcher.servlet.ServletHostConfig.getInitParameterNames()",1,1,1
"org.apache.struts2.dispatcher.servlet.ServletHostConfig.getServletContext()",1,1,1
"org.apache.struts2.dispatcher.servlet.StrutsServlet.destroy()",1,1,1
"org.apache.struts2.dispatcher.servlet.StrutsServlet.init(ServletConfig)",1,2,2
"org.apache.struts2.dispatcher.servlet.StrutsServlet.service(HttpServletRequest,HttpServletResponse)",3,2,3
"org.apache.struts2.factory.PrefixBasedActionProxyFactory.createActionProxy(String,String,String,Map<String, Object>,boolean,boolean)",3,3,4
"org.apache.struts2.factory.PrefixBasedActionProxyFactory.setActionProxyFactory(ActionProxyFactory)",1,1,1
"org.apache.struts2.factory.PrefixBasedActionProxyFactory.setContainer(Container)",1,1,1
"org.apache.struts2.factory.PrefixBasedActionProxyFactory.setPrefixBasedActionProxyFactories(String)",1,5,5
"org.apache.struts2.factory.StrutsActionProxy.StrutsActionProxy(ActionInvocation,String,String,String,boolean,boolean)",1,1,1
"org.apache.struts2.factory.StrutsActionProxy.execute()",1,2,2
"org.apache.struts2.factory.StrutsActionProxy.getErrorMessage()",2,3,3
"org.apache.struts2.factory.StrutsActionProxy.prepare()",1,1,1
"org.apache.struts2.factory.StrutsActionProxyFactory.createActionProxy(ActionInvocation,String,String,String,boolean,boolean)",1,1,1
"org.apache.struts2.factory.StrutsResultFactory.buildResult(ResultConfig,Map<String, Object>)",1,3,3
"org.apache.struts2.factory.StrutsResultFactory.setObjectFactory(ObjectFactory)",1,1,1
"org.apache.struts2.factory.StrutsResultFactory.setParameter(Result,String,String,Map<String, Object>)",1,3,3
"org.apache.struts2.factory.StrutsResultFactory.setParameters(Map<String, Object>,Result,Map<String, String>)",1,4,4
"org.apache.struts2.factory.StrutsResultFactory.setReflectionProvider(ReflectionProvider)",1,1,1
"org.apache.struts2.interceptor.ActionMappingParametersInteceptor.addParametersToContext(ActionContext,Map)",1,1,2
"org.apache.struts2.interceptor.ActionMappingParametersInteceptor.retrieveParameters(ActionContext)",2,2,2
"org.apache.struts2.interceptor.BackgroundProcess.BackgroundProcess(String,ActionInvocation,int)",1,1,3
"org.apache.struts2.interceptor.BackgroundProcess.afterInvocation()",1,1,1
"org.apache.struts2.interceptor.BackgroundProcess.beforeInvocation()",1,1,1
"org.apache.struts2.interceptor.BackgroundProcess.getAction()",1,1,1
"org.apache.struts2.interceptor.BackgroundProcess.getException()",1,1,1
"org.apache.struts2.interceptor.BackgroundProcess.getInvocation()",1,1,1
"org.apache.struts2.interceptor.BackgroundProcess.getResult()",1,1,1
"org.apache.struts2.interceptor.BackgroundProcess.isDone()",1,1,1
"org.apache.struts2.interceptor.CheckboxInterceptor.intercept(ActionInvocation)",4,5,7
"org.apache.struts2.interceptor.CheckboxInterceptor.setUncheckedValue(String)",1,1,1
"org.apache.struts2.interceptor.ClearSessionInterceptor.intercept(ActionInvocation)",1,2,2
"org.apache.struts2.interceptor.CookieInterceptor.injectIntoCookiesAwareAction(Object,Map<String, String>)",1,2,2
"org.apache.struts2.interceptor.CookieInterceptor.intercept(ActionInvocation)",1,7,7
"org.apache.struts2.interceptor.CookieInterceptor.isAcceptableName(String)",1,2,2
"org.apache.struts2.interceptor.CookieInterceptor.isAcceptableValue(String)",1,2,2
"org.apache.struts2.interceptor.CookieInterceptor.isAccepted(String)",2,4,4
"org.apache.struts2.interceptor.CookieInterceptor.isExcluded(String)",2,4,4
"org.apache.struts2.interceptor.CookieInterceptor.populateCookieValueIntoStack(String,String,Map<String, String>,ValueStack)",1,7,7
"org.apache.struts2.interceptor.CookieInterceptor.setAcceptCookieNames(String)",1,1,1
"org.apache.struts2.interceptor.CookieInterceptor.setAcceptedPatternsChecker(AcceptedPatternsChecker)",1,1,1
"org.apache.struts2.interceptor.CookieInterceptor.setCookiesName(String)",1,2,2
"org.apache.struts2.interceptor.CookieInterceptor.setCookiesValue(String)",1,2,2
"org.apache.struts2.interceptor.CookieInterceptor.setExcludedPatternsChecker(ExcludedPatternsChecker)",1,1,1
"org.apache.struts2.interceptor.CookieProviderInterceptor.addCookiesToResponse(CookieProvider,HttpServletResponse)",1,5,5
"org.apache.struts2.interceptor.CookieProviderInterceptor.beforeResult(ActionInvocation,String)",1,3,3
"org.apache.struts2.interceptor.CookieProviderInterceptor.intercept(ActionInvocation)",1,1,1
"org.apache.struts2.interceptor.CreateSessionInterceptor.intercept(ActionInvocation)",1,2,2
"org.apache.struts2.interceptor.DateTextFieldInterceptor.DateWord.DateWord(String,Integer,String)",1,1,1
"org.apache.struts2.interceptor.DateTextFieldInterceptor.DateWord.get(Character)",1,1,1
"org.apache.struts2.interceptor.DateTextFieldInterceptor.DateWord.getAll()",1,1,1
"org.apache.struts2.interceptor.DateTextFieldInterceptor.DateWord.getDateType()",1,1,1
"org.apache.struts2.interceptor.DateTextFieldInterceptor.DateWord.getDescription()",1,1,1
"org.apache.struts2.interceptor.DateTextFieldInterceptor.DateWord.getLength()",1,1,1
"org.apache.struts2.interceptor.DateTextFieldInterceptor.destroy()",1,1,1
"org.apache.struts2.interceptor.DateTextFieldInterceptor.init()",1,1,1
"org.apache.struts2.interceptor.DateTextFieldInterceptor.intercept(ActionInvocation)",4,11,11
"org.apache.struts2.interceptor.DeprecationInterceptor.intercept(ActionInvocation)",1,3,3
"org.apache.struts2.interceptor.DeprecationInterceptor.prepareMessage(Set<String>)",1,2,2
"org.apache.struts2.interceptor.DeprecationInterceptor.readConstants(Set<String>,Class)",1,3,3
"org.apache.struts2.interceptor.DeprecationInterceptor.setContainer(Container)",1,1,1
"org.apache.struts2.interceptor.DeprecationInterceptor.setDevMode(String)",1,1,1
"org.apache.struts2.interceptor.DeprecationInterceptor.validate()",1,2,2
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.destroy()",1,1,1
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.doIntercept(ActionInvocation)",5,13,17
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.getBackgroundProcessName(ActionProxy)",1,1,1
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.getNewBackgroundProcess(String,ActionInvocation,int)",1,1,1
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.init()",1,1,1
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.performInitialDelay(BackgroundProcess)",2,3,6
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.setContainer(Container)",1,1,1
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.setDelay(int)",1,1,1
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.setDelaySleepInterval(int)",1,1,1
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.setExecuteAfterValidationPass(boolean)",1,1,1
"org.apache.struts2.interceptor.ExecuteAndWaitInterceptor.setThreadPriority(int)",1,1,1
"org.apache.struts2.interceptor.FileUploadInterceptor.acceptFile(Object,File,String,String,String,ValidationAware)",1,16,16
"org.apache.struts2.interceptor.FileUploadInterceptor.containsItem(Collection<String>,String)",3,2,3
"org.apache.struts2.interceptor.FileUploadInterceptor.getLocaleProvider(Object)",1,2,2
"org.apache.struts2.interceptor.FileUploadInterceptor.getMaximumSizeStr(Object)",1,1,1
"org.apache.struts2.interceptor.FileUploadInterceptor.getTextMessage(Object,String,String[])",2,2,2
"org.apache.struts2.interceptor.FileUploadInterceptor.getTextMessage(String,String[])",1,1,1
"org.apache.struts2.interceptor.FileUploadInterceptor.getTextProvider(Object)",1,2,2
"org.apache.struts2.interceptor.FileUploadInterceptor.hasAllowedExtension(Collection<String>,String)",4,2,4
"org.apache.struts2.interceptor.FileUploadInterceptor.intercept(ActionInvocation)",2,16,18
"org.apache.struts2.interceptor.FileUploadInterceptor.isNonEmpty(Object[])",1,1,4
"org.apache.struts2.interceptor.FileUploadInterceptor.matchesWildcard(String,String)",1,1,1
"org.apache.struts2.interceptor.FileUploadInterceptor.setAllowedExtensions(String)",1,1,1
"org.apache.struts2.interceptor.FileUploadInterceptor.setAllowedTypes(String)",1,1,1
"org.apache.struts2.interceptor.FileUploadInterceptor.setContainer(Container)",1,1,1
"org.apache.struts2.interceptor.FileUploadInterceptor.setMatcher(ContentTypeMatcher)",1,1,1
"org.apache.struts2.interceptor.FileUploadInterceptor.setMaximumSize(Long)",1,1,1
"org.apache.struts2.interceptor.I18nInterceptor.CookieLocaleFinder.CookieLocaleFinder(ActionInvocation)",1,1,1
"org.apache.struts2.interceptor.I18nInterceptor.CookieLocaleFinder.find()",3,2,4
"org.apache.struts2.interceptor.I18nInterceptor.intercept(ActionInvocation)",1,4,4
"org.apache.struts2.interceptor.I18nInterceptor.readStoredLocale(ActionInvocation,Map<String, Object>)",5,4,5
"org.apache.struts2.interceptor.I18nInterceptor.setRequestCookieParameterName(String)",1,1,1
"org.apache.struts2.interceptor.I18nInterceptor.storeLocale(ActionInvocation,Locale,String)",1,2,2
"org.apache.struts2.interceptor.MessageStoreInterceptor.after(ActionInvocation,String)",4,7,7
"org.apache.struts2.interceptor.MessageStoreInterceptor.before(ActionInvocation)",4,12,12
"org.apache.struts2.interceptor.MessageStoreInterceptor.getAllowRequestParameterSwitch()",1,1,1
"org.apache.struts2.interceptor.MessageStoreInterceptor.getOperationModel()",1,1,1
"org.apache.struts2.interceptor.MessageStoreInterceptor.getRequestOperationMode(ActionInvocation)",1,3,5
"org.apache.struts2.interceptor.MessageStoreInterceptor.getRequestParameterSwitch()",1,1,1
"org.apache.struts2.interceptor.MessageStoreInterceptor.intercept(ActionInvocation)",1,1,1
"org.apache.struts2.interceptor.MessageStoreInterceptor.mergeCollection(Collection,Collection)",1,1,3
"org.apache.struts2.interceptor.MessageStoreInterceptor.mergeMap(Map,Map)",1,1,3
"org.apache.struts2.interceptor.MessageStoreInterceptor.setAllowRequestParameterSwitch(boolean)",1,1,1
"org.apache.struts2.interceptor.MessageStoreInterceptor.setOperationMode(String)",1,1,1
"org.apache.struts2.interceptor.MessageStoreInterceptor.setRequestParameterSwitch(String)",1,1,1
"org.apache.struts2.interceptor.MultiselectInterceptor.intercept(ActionInvocation)",1,4,4
"org.apache.struts2.interceptor.ProfilingActivationInterceptor.getProfilingKey()",1,1,1
"org.apache.struts2.interceptor.ProfilingActivationInterceptor.intercept(ActionInvocation)",1,3,4
"org.apache.struts2.interceptor.ProfilingActivationInterceptor.setDevMode(String)",1,1,1
"org.apache.struts2.interceptor.ProfilingActivationInterceptor.setProfilingKey(String)",1,1,1
"org.apache.struts2.interceptor.RolesInterceptor.areRolesValid(List<String>)",1,1,1
"org.apache.struts2.interceptor.RolesInterceptor.checkRoles(List<String>)",2,2,2
"org.apache.struts2.interceptor.RolesInterceptor.handleRejection(ActionInvocation,HttpServletResponse)",1,1,1
"org.apache.struts2.interceptor.RolesInterceptor.intercept(ActionInvocation)",3,2,3
"org.apache.struts2.interceptor.RolesInterceptor.isAllowed(HttpServletRequest,Object)",6,6,6
"org.apache.struts2.interceptor.RolesInterceptor.setAllowedRoles(String)",1,1,1
"org.apache.struts2.interceptor.RolesInterceptor.setDisallowedRoles(String)",1,1,1
"org.apache.struts2.interceptor.RolesInterceptor.stringToList(String)",2,2,2
"org.apache.struts2.interceptor.ScopeInterceptor.NULLClass.equals(Object)",1,1,2
"org.apache.struts2.interceptor.ScopeInterceptor.NULLClass.hashCode()",1,1,1
"org.apache.struts2.interceptor.ScopeInterceptor.NULLClass.toString()",1,1,1
"org.apache.struts2.interceptor.ScopeInterceptor.ScopeInterceptor()",1,1,1
"org.apache.struts2.interceptor.ScopeInterceptor.after(ActionInvocation,String)",1,2,2
"org.apache.struts2.interceptor.ScopeInterceptor.before(ActionInvocation)",4,11,14
"org.apache.struts2.interceptor.ScopeInterceptor.beforeResult(ActionInvocation,String)",1,7,7
"org.apache.struts2.interceptor.ScopeInterceptor.getKey(ActionInvocation)",3,4,4
"org.apache.struts2.interceptor.ScopeInterceptor.getSessionReset()",1,1,1
"org.apache.struts2.interceptor.ScopeInterceptor.getType()",1,1,1
"org.apache.struts2.interceptor.ScopeInterceptor.intercept(ActionInvocation)",1,2,2
"org.apache.struts2.interceptor.ScopeInterceptor.isReset()",1,1,1
"org.apache.struts2.interceptor.ScopeInterceptor.lock(Object,ActionInvocation)",4,3,4
"org.apache.struts2.interceptor.ScopeInterceptor.nullConvert(Object)",3,2,4
"org.apache.struts2.interceptor.ScopeInterceptor.setApplication(String)",1,2,2
"org.apache.struts2.interceptor.ScopeInterceptor.setAutoCreateSession(String)",1,2,2
"org.apache.struts2.interceptor.ScopeInterceptor.setKey(String)",1,1,1
"org.apache.struts2.interceptor.ScopeInterceptor.setReset(boolean)",1,1,1
"org.apache.struts2.interceptor.ScopeInterceptor.setSession(String)",1,2,2
"org.apache.struts2.interceptor.ScopeInterceptor.setSessionReset(String)",1,1,1
"org.apache.struts2.interceptor.ScopeInterceptor.setType(String)",2,2,3
"org.apache.struts2.interceptor.ScopeInterceptor.unlock(Object)",1,1,1
"org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ActionInvocation)",1,10,10
"org.apache.struts2.interceptor.StrutsConversionErrorInterceptor.getOverrideExpr(ActionInvocation,Object)",1,1,1
"org.apache.struts2.interceptor.StrutsConversionErrorInterceptor.shouldAddError(String,Object)",7,2,7
"org.apache.struts2.interceptor.TokenInterceptor.doIntercept(ActionInvocation)",1,1,1
"org.apache.struts2.interceptor.TokenInterceptor.getErrorMessage(ActionInvocation)",2,2,2
"org.apache.struts2.interceptor.TokenInterceptor.handleInvalidToken(ActionInvocation)",1,2,2
"org.apache.struts2.interceptor.TokenInterceptor.handleToken(ActionInvocation)",2,2,2
"org.apache.struts2.interceptor.TokenInterceptor.handleValidToken(ActionInvocation)",1,1,1
"org.apache.struts2.interceptor.TokenInterceptor.setTextProvider(TextProvider)",1,1,1
"org.apache.struts2.interceptor.TokenSessionStoreInterceptor.handleInvalidToken(ActionInvocation)",3,5,6
"org.apache.struts2.interceptor.TokenSessionStoreInterceptor.handleToken(ActionInvocation)",2,2,2
"org.apache.struts2.interceptor.TokenSessionStoreInterceptor.handleValidToken(ActionInvocation)",1,1,1
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.filterValueStack(Map)",1,2,2
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.getParameter(String)",2,1,3
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(ActionInvocation)",3,15,18
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.printContext()",1,2,2
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.printContext(PrettyPrintWriter)",4,4,5
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.serializeIt(Object,String,PrettyPrintWriter,List<Object>)",3,14,15
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.setDevMode(String)",1,1,1
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.setEnableXmlWithConsole(boolean)",1,1,1
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.setFreemarkerManager(FreemarkerManager)",1,1,1
"org.apache.struts2.interceptor.debugging.DebuggingInterceptor.setReflectionProvider(ReflectionProvider)",1,1,1
"org.apache.struts2.interceptor.debugging.ObjectToHTMLWriter.ObjectToHTMLWriter(Writer)",1,1,1
"org.apache.struts2.interceptor.debugging.ObjectToHTMLWriter.isEmptyCollection(Object)",1,2,3
"org.apache.struts2.interceptor.debugging.ObjectToHTMLWriter.isEmptyMap(Object)",1,2,3
"org.apache.struts2.interceptor.debugging.ObjectToHTMLWriter.write(ReflectionProvider,Object,String)",7,10,11
"org.apache.struts2.interceptor.debugging.ObjectToHTMLWriter.writeProperty(String,Object,String)",1,7,7
"org.apache.struts2.interceptor.debugging.ObjectToHTMLWriter.writeValue(String,Object,String)",1,5,5
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.PrettyPrintWriter(Writer)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.PrettyPrintWriter(Writer,String)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.PrettyPrintWriter(Writer,String,String)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.PrettyPrintWriter(Writer,char[])",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.PrettyPrintWriter(Writer,char[],String)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.addAttribute(String,String)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.close()",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.endNode()",1,3,3
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.endOfLine()",1,2,2
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.finishTag()",1,3,3
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.flush()",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.isEscape()",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.setEscape(boolean)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.setValue(String)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.startNode(String)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.writeAttributeValue(PrintWriter,String)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.writeText(PrintWriter,String)",1,1,1
"org.apache.struts2.interceptor.debugging.PrettyPrintWriter.writeText(String)",2,4,11
"org.apache.struts2.interceptor.servlet.ServletPrincipalProxy.ServletPrincipalProxy(HttpServletRequest)",1,1,1
"org.apache.struts2.interceptor.servlet.ServletPrincipalProxy.getRemoteUser()",1,1,1
"org.apache.struts2.interceptor.servlet.ServletPrincipalProxy.getUserPrincipal()",1,1,1
"org.apache.struts2.interceptor.servlet.ServletPrincipalProxy.isRequestSecure()",1,1,1
"org.apache.struts2.interceptor.servlet.ServletPrincipalProxy.isUserInRole(String)",1,1,1
"org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(ActionInvocation)",7,9,9
"org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.getActionMethod(Class<?>,String)",1,1,1
"org.apache.struts2.result.HttpHeaderResult.HttpHeaderResult()",1,1,1
"org.apache.struts2.result.HttpHeaderResult.HttpHeaderResult(int)",1,1,1
"org.apache.struts2.result.HttpHeaderResult.addHeader(String,String)",1,1,1
"org.apache.struts2.result.HttpHeaderResult.execute(ActionInvocation)",1,11,12
"org.apache.struts2.result.HttpHeaderResult.getHeaders()",1,1,1
"org.apache.struts2.result.HttpHeaderResult.getStatus()",1,1,1
"org.apache.struts2.result.HttpHeaderResult.setError(String)",1,1,1
"org.apache.struts2.result.HttpHeaderResult.setErrorMessage(String)",1,1,1
"org.apache.struts2.result.HttpHeaderResult.setParse(boolean)",1,1,1
"org.apache.struts2.result.HttpHeaderResult.setStatus(int)",1,1,1
"org.apache.struts2.result.PlainTextResult.PlainTextResult()",1,1,1
"org.apache.struts2.result.PlainTextResult.PlainTextResult(String)",1,1,1
"org.apache.struts2.result.PlainTextResult.adjustLocation(String)",2,1,2
"org.apache.struts2.result.PlainTextResult.applyAdditionalHeaders(HttpServletResponse)",1,1,1
"org.apache.struts2.result.PlainTextResult.applyCharset(Charset,HttpServletResponse)",1,2,2
"org.apache.struts2.result.PlainTextResult.doExecute(String,ActionInvocation)",1,2,2
"org.apache.struts2.result.PlainTextResult.getCharSet()",1,1,1
"org.apache.struts2.result.PlainTextResult.logWrongStream(String,InputStream)",1,2,2
"org.apache.struts2.result.PlainTextResult.readCharset()",1,3,3
"org.apache.struts2.result.PlainTextResult.readStream(ActionInvocation,String)",1,1,1
"org.apache.struts2.result.PlainTextResult.sendStream(PrintWriter,InputStreamReader)",1,2,2
"org.apache.struts2.result.PlainTextResult.setCharSet(String)",1,1,1
"org.apache.struts2.result.PostbackResult.doExecute(String,ActionInvocation)",1,2,2
"org.apache.struts2.result.PostbackResult.execute(ActionInvocation)",1,1,1
"org.apache.struts2.result.PostbackResult.isElementIncluded(String,String[])",1,1,1
"org.apache.struts2.result.PostbackResult.makePostbackUri(ActionInvocation)",1,8,8
"org.apache.struts2.result.PostbackResult.setActionMapper(ActionMapper)",1,1,1
"org.apache.struts2.result.PostbackResult.setActionName(String)",1,1,1
"org.apache.struts2.result.PostbackResult.setCache(boolean)",1,1,1
"org.apache.struts2.result.PostbackResult.setMethod(String)",1,1,1
"org.apache.struts2.result.PostbackResult.setNamespace(String)",1,1,1
"org.apache.struts2.result.PostbackResult.setPrependServletContext(boolean)",1,1,1
"org.apache.struts2.result.PostbackResult.writeFormElement(PrintWriter,String,String[])",1,2,2
"org.apache.struts2.result.PostbackResult.writeFormElements(HttpServletRequest,PrintWriter)",1,3,3
"org.apache.struts2.result.PostbackResult.writePrologueScript(PrintWriter)",1,1,1
"org.apache.struts2.result.ServletActionRedirectResult.ServletActionRedirectResult()",1,1,1
"org.apache.struts2.result.ServletActionRedirectResult.ServletActionRedirectResult(String)",1,1,1
"org.apache.struts2.result.ServletActionRedirectResult.ServletActionRedirectResult(String,String)",1,1,1
"org.apache.struts2.result.ServletActionRedirectResult.ServletActionRedirectResult(String,String,String)",1,1,1
"org.apache.struts2.result.ServletActionRedirectResult.ServletActionRedirectResult(String,String,String,String)",1,1,1
"org.apache.struts2.result.ServletActionRedirectResult.execute(ActionInvocation)",1,3,3
"org.apache.struts2.result.ServletActionRedirectResult.getProhibitedResultParams()",1,1,1
"org.apache.struts2.result.ServletActionRedirectResult.setActionName(String)",1,1,1
"org.apache.struts2.result.ServletActionRedirectResult.setMethod(String)",1,1,1
"org.apache.struts2.result.ServletActionRedirectResult.setNamespace(String)",1,1,1
"org.apache.struts2.result.ServletDispatcherResult.ServletDispatcherResult()",1,1,1
"org.apache.struts2.result.ServletDispatcherResult.ServletDispatcherResult(String)",1,1,1
"org.apache.struts2.result.ServletDispatcherResult.doExecute(String,ActionInvocation)",3,10,10
"org.apache.struts2.result.ServletDispatcherResult.getParameters(ActionInvocation)",1,1,1
"org.apache.struts2.result.ServletDispatcherResult.setUrlHelper(UrlHelper)",1,1,1
"org.apache.struts2.result.ServletRedirectResult.ServletRedirectResult()",1,1,1
"org.apache.struts2.result.ServletRedirectResult.ServletRedirectResult(String)",1,1,1
"org.apache.struts2.result.ServletRedirectResult.ServletRedirectResult(String,String)",1,1,1
"org.apache.struts2.result.ServletRedirectResult.addParameter(String,Object)",1,1,1
"org.apache.struts2.result.ServletRedirectResult.doExecute(String,ActionInvocation)",1,15,16
"org.apache.struts2.result.ServletRedirectResult.execute(ActionInvocation)",1,2,2
"org.apache.struts2.result.ServletRedirectResult.getProhibitedResultParams()",1,1,1
"org.apache.struts2.result.ServletRedirectResult.handle(ReflectionException)",1,2,2
"org.apache.struts2.result.ServletRedirectResult.isPathUrl(String)",2,5,5
"org.apache.struts2.result.ServletRedirectResult.sendRedirect(HttpServletResponse,String)",1,2,2
"org.apache.struts2.result.ServletRedirectResult.setActionMapper(ActionMapper)",1,1,1
"org.apache.struts2.result.ServletRedirectResult.setAnchor(String)",1,1,1
"org.apache.struts2.result.ServletRedirectResult.setPrependServletContext(boolean)",1,1,1
"org.apache.struts2.result.ServletRedirectResult.setStatusCode(int)",1,1,1
"org.apache.struts2.result.ServletRedirectResult.setSuppressEmptyParameters(boolean)",1,1,1
"org.apache.struts2.result.ServletRedirectResult.setUrlHelper(UrlHelper)",1,1,1
"org.apache.struts2.result.StreamResult.StreamResult()",1,1,1
"org.apache.struts2.result.StreamResult.StreamResult(InputStream)",1,1,1
"org.apache.struts2.result.StreamResult.doExecute(String,ActionInvocation)",2,11,11
"org.apache.struts2.result.StreamResult.getAllowCaching()",1,1,1
"org.apache.struts2.result.StreamResult.getBufferSize()",1,1,1
"org.apache.struts2.result.StreamResult.getContentCharSet()",1,1,1
"org.apache.struts2.result.StreamResult.getContentDisposition()",1,1,1
"org.apache.struts2.result.StreamResult.getContentLength()",1,1,1
"org.apache.struts2.result.StreamResult.getContentType()",1,1,1
"org.apache.struts2.result.StreamResult.getInputName()",1,1,1
"org.apache.struts2.result.StreamResult.resolveParamsFromStack(ValueStack,ActionInvocation)",1,7,7
"org.apache.struts2.result.StreamResult.setAllowCaching(boolean)",1,1,1
"org.apache.struts2.result.StreamResult.setBufferSize(int)",1,1,1
"org.apache.struts2.result.StreamResult.setContentCharSet(String)",1,1,1
"org.apache.struts2.result.StreamResult.setContentDisposition(String)",1,1,1
"org.apache.struts2.result.StreamResult.setContentLength(String)",1,1,1
"org.apache.struts2.result.StreamResult.setContentType(String)",1,1,1
"org.apache.struts2.result.StreamResult.setInputName(String)",1,1,1
"org.apache.struts2.result.StrutsResultSupport.EncodingParsedValueEvaluator.evaluate(String)",3,4,4
"org.apache.struts2.result.StrutsResultSupport.StrutsResultSupport()",1,1,1
"org.apache.struts2.result.StrutsResultSupport.StrutsResultSupport(String)",1,1,1
"org.apache.struts2.result.StrutsResultSupport.StrutsResultSupport(String,boolean,boolean)",1,1,1
"org.apache.struts2.result.StrutsResultSupport.conditionalParse(String,ActionInvocation)",2,2,4
"org.apache.struts2.result.StrutsResultSupport.conditionalParseCollection(String,ActionInvocation,boolean)",2,2,4
"org.apache.struts2.result.StrutsResultSupport.execute(ActionInvocation)",1,1,1
"org.apache.struts2.result.StrutsResultSupport.getLastFinalLocation()",1,1,1
"org.apache.struts2.result.StrutsResultSupport.getLocation()",1,1,1
"org.apache.struts2.result.StrutsResultSupport.setEncode(boolean)",1,1,1
"org.apache.struts2.result.StrutsResultSupport.setLocation(String)",1,1,1
"org.apache.struts2.result.StrutsResultSupport.setParse(boolean)",1,1,1
"org.apache.struts2.result.VelocityResult.VelocityResult()",1,1,1
"org.apache.struts2.result.VelocityResult.VelocityResult(String)",1,1,1
"org.apache.struts2.result.VelocityResult.createContext(VelocityManager,ValueStack,HttpServletRequest,HttpServletResponse,String)",1,1,1
"org.apache.struts2.result.VelocityResult.doExecute(String,ActionInvocation)",1,4,6
"org.apache.struts2.result.VelocityResult.getContentType(String)",1,1,1
"org.apache.struts2.result.VelocityResult.getEncoding(String)",1,2,3
"org.apache.struts2.result.VelocityResult.getTemplate(ValueStack,VelocityEngine,ActionInvocation,String,String)",1,2,2
"org.apache.struts2.result.VelocityResult.setDefaultEncoding(String)",1,1,1
"org.apache.struts2.result.VelocityResult.setVelocityManager(VelocityManager)",1,1,1
"org.apache.struts2.util.AppendIteratorFilter.execute()",1,2,2
"org.apache.struts2.util.AppendIteratorFilter.hasNext()",2,2,2
"org.apache.struts2.util.AppendIteratorFilter.next()",1,3,3
"org.apache.struts2.util.AppendIteratorFilter.remove()",1,1,1
"org.apache.struts2.util.AppendIteratorFilter.setSource(Object)",1,1,1
"org.apache.struts2.util.AttributeMap.AttributeMap(Map)",1,1,1
"org.apache.struts2.util.AttributeMap.clear()",1,1,1
"org.apache.struts2.util.AttributeMap.containsKey(Object)",1,1,1
"org.apache.struts2.util.AttributeMap.containsValue(Object)",1,1,1
"org.apache.struts2.util.AttributeMap.entrySet()",1,1,1
"org.apache.struts2.util.AttributeMap.get(Object)",5,8,9
"org.apache.struts2.util.AttributeMap.getPageContext()",1,1,1
"org.apache.struts2.util.AttributeMap.isEmpty()",1,1,1
"org.apache.struts2.util.AttributeMap.keySet()",1,1,1
"org.apache.struts2.util.AttributeMap.put(Object,Object)",1,2,2
"org.apache.struts2.util.AttributeMap.putAll(Map)",1,1,1
"org.apache.struts2.util.AttributeMap.remove(Object)",1,1,1
"org.apache.struts2.util.AttributeMap.size()",1,1,1
"org.apache.struts2.util.AttributeMap.toString()",1,1,1
"org.apache.struts2.util.AttributeMap.toStringSafe(Object)",2,2,3
"org.apache.struts2.util.AttributeMap.values()",1,1,1
"org.apache.struts2.util.ComponentUtils.altSyntax(ValueStack)",1,1,1
"org.apache.struts2.util.ComponentUtils.isExpression(Object)",1,2,2
"org.apache.struts2.util.ComponentUtils.stripExpressionIfAltSyntax(ValueStack,String)",3,3,3
"org.apache.struts2.util.ContainUtil.contains(Object,Object)",12,11,17
"org.apache.struts2.util.Counter.getCurrent()",1,1,1
"org.apache.struts2.util.Counter.getFirst()",1,1,1
"org.apache.struts2.util.Counter.getInterval()",1,1,1
"org.apache.struts2.util.Counter.getLast()",1,1,1
"org.apache.struts2.util.Counter.getNext()",1,1,3
"org.apache.struts2.util.Counter.getPrevious()",1,1,3
"org.apache.struts2.util.Counter.hasNext()",1,1,3
"org.apache.struts2.util.Counter.isWrap()",1,1,1
"org.apache.struts2.util.Counter.next()",1,1,1
"org.apache.struts2.util.Counter.remove()",1,1,1
"org.apache.struts2.util.Counter.setAdd(long)",1,1,1
"org.apache.struts2.util.Counter.setCurrent(long)",1,1,1
"org.apache.struts2.util.Counter.setFirst(long)",1,1,1
"org.apache.struts2.util.Counter.setInterval(long)",1,1,1
"org.apache.struts2.util.Counter.setLast(long)",1,1,1
"org.apache.struts2.util.Counter.setWrap(boolean)",1,1,1
"org.apache.struts2.util.DateFormatter.DateFormatter()",1,1,1
"org.apache.struts2.util.DateFormatter.getDate()",1,1,1
"org.apache.struts2.util.DateFormatter.getFormattedDate()",1,1,1
"org.apache.struts2.util.DateFormatter.setDate(Date)",1,2,2
"org.apache.struts2.util.DateFormatter.setDate(String)",1,2,2
"org.apache.struts2.util.DateFormatter.setDate(int)",1,1,1
"org.apache.struts2.util.DateFormatter.setFormat(DateFormat)",1,1,1
"org.apache.struts2.util.DateFormatter.setFormat(String)",1,1,1
"org.apache.struts2.util.DateFormatter.setParseFormat(String)",1,1,1
"org.apache.struts2.util.DateFormatter.setParser(DateFormat)",1,1,1
"org.apache.struts2.util.DateFormatter.setTime(long)",1,1,1
"org.apache.struts2.util.DefaultContentTypeMatcher.compilePattern(String)",1,1,1
"org.apache.struts2.util.DefaultContentTypeMatcher.match(Map<String, String>,String,int[])",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.FastByteArrayOutputStream()",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.FastByteArrayOutputStream(int)",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.addBuffer()",1,1,2
"org.apache.struts2.util.FastByteArrayOutputStream.close()",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.decodeAndWrite(Writer,ByteBuffer,CharBuffer,CharsetDecoder,boolean)",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.decodeAndWriteBuffered(Writer,ByteBuffer,CharBuffer,CharsetDecoder,boolean)",1,9,9
"org.apache.struts2.util.FastByteArrayOutputStream.decodeAndWriteOut(Writer,byte[],int,ByteBuffer,CharBuffer,CharsetDecoder,boolean)",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.getDecoder(String)",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.getSize()",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.toByteArray()",1,3,3
"org.apache.struts2.util.FastByteArrayOutputStream.toString()",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.write(byte[],int,int)",4,4,10
"org.apache.struts2.util.FastByteArrayOutputStream.write(int)",2,2,3
"org.apache.struts2.util.FastByteArrayOutputStream.writeOut(Writer,byte[],int)",1,1,1
"org.apache.struts2.util.FastByteArrayOutputStream.writeTo(JspWriter,String)",1,3,3
"org.apache.struts2.util.FastByteArrayOutputStream.writeTo(OutputStream)",1,3,3
"org.apache.struts2.util.FastByteArrayOutputStream.writeTo(RandomAccessFile)",1,3,3
"org.apache.struts2.util.FastByteArrayOutputStream.writeTo(Writer,String)",1,6,6
"org.apache.struts2.util.FastByteArrayOutputStream.writeToFile()",1,1,2
"org.apache.struts2.util.InvocationSessionStore.InvocationContext.InvocationContext(ActionInvocation,String)",1,1,1
"org.apache.struts2.util.InvocationSessionStore.InvocationSessionStore()",1,1,1
"org.apache.struts2.util.InvocationSessionStore.getInvocationMap()",2,2,3
"org.apache.struts2.util.InvocationSessionStore.loadInvocation(String,String)",2,2,3
"org.apache.struts2.util.InvocationSessionStore.setInvocationMap(Map)",2,1,2
"org.apache.struts2.util.InvocationSessionStore.storeInvocation(String,String,ActionInvocation)",1,1,1
"org.apache.struts2.util.IteratorFilterSupport.EnumerationIterator.EnumerationIterator(Enumeration)",1,1,1
"org.apache.struts2.util.IteratorFilterSupport.EnumerationIterator.hasNext()",1,1,1
"org.apache.struts2.util.IteratorFilterSupport.EnumerationIterator.next()",1,1,1
"org.apache.struts2.util.IteratorFilterSupport.EnumerationIterator.remove()",1,1,1
"org.apache.struts2.util.IteratorFilterSupport.getIterator(Object)",1,1,1
"org.apache.struts2.util.IteratorGenerator.execute()",2,7,7
"org.apache.struts2.util.IteratorGenerator.getHasNext()",1,1,1
"org.apache.struts2.util.IteratorGenerator.getNext()",1,1,1
"org.apache.struts2.util.IteratorGenerator.hasNext()",1,1,3
"org.apache.struts2.util.IteratorGenerator.next()",1,1,1
"org.apache.struts2.util.IteratorGenerator.remove()",1,1,1
"org.apache.struts2.util.IteratorGenerator.setConverter(Converter)",1,1,1
"org.apache.struts2.util.IteratorGenerator.setCount(int)",1,1,1
"org.apache.struts2.util.IteratorGenerator.setSeparator(String)",1,1,1
"org.apache.struts2.util.IteratorGenerator.setValues(Object)",1,1,1
"org.apache.struts2.util.ListEntry.ListEntry(Object,Object,boolean)",1,1,1
"org.apache.struts2.util.ListEntry.getIsSelected()",1,1,1
"org.apache.struts2.util.ListEntry.getKey()",1,1,1
"org.apache.struts2.util.ListEntry.getValue()",1,1,1
"org.apache.struts2.util.MakeIterator.convert(Object)",3,6,8
"org.apache.struts2.util.MakeIterator.isIterable(Object)",7,3,7
"org.apache.struts2.util.MergeIteratorFilter.execute()",1,2,2
"org.apache.struts2.util.MergeIteratorFilter.hasNext()",3,4,4
"org.apache.struts2.util.MergeIteratorFilter.next()",1,1,1
"org.apache.struts2.util.MergeIteratorFilter.remove()",1,1,1
"org.apache.struts2.util.MergeIteratorFilter.setSource(Object)",1,1,1
"org.apache.struts2.util.PrefixTrie.get(String)",5,2,5
"org.apache.struts2.util.PrefixTrie.put(String,Object)",3,2,4
"org.apache.struts2.util.RegexPatternMatcher.compilePattern(String)",4,3,4
"org.apache.struts2.util.RegexPatternMatcher.isLiteral(String)",1,2,2
"org.apache.struts2.util.RegexPatternMatcher.match(Map<String, String>,String,RegexPatternMatcherExpression)",2,3,3
"org.apache.struts2.util.RegexPatternMatcherExpression.RegexPatternMatcherExpression(Pattern,Map<Integer, String>)",1,1,1
"org.apache.struts2.util.RegexPatternMatcherExpression.getParams()",1,1,1
"org.apache.struts2.util.RegexPatternMatcherExpression.getPattern()",1,1,1
"org.apache.struts2.util.SortIteratorFilter.execute()",3,5,5
"org.apache.struts2.util.SortIteratorFilter.getList()",1,1,1
"org.apache.struts2.util.SortIteratorFilter.hasNext()",1,2,2
"org.apache.struts2.util.SortIteratorFilter.next()",1,1,1
"org.apache.struts2.util.SortIteratorFilter.remove()",1,1,1
"org.apache.struts2.util.SortIteratorFilter.setComparator(Comparator)",1,1,1
"org.apache.struts2.util.SortIteratorFilter.setSource(Object)",1,1,1
"org.apache.struts2.util.StrutsTestCaseHelper.DispatcherWrapper.DispatcherWrapper(ServletContext,Map<String, String>)",1,1,1
"org.apache.struts2.util.StrutsTestCaseHelper.DispatcherWrapper.setDispatcherErrorHandler(DispatcherErrorHandler)",1,1,1
"org.apache.struts2.util.StrutsTestCaseHelper.MockErrorHandler.handleError(HttpServletRequest,HttpServletResponse,int,Exception)",1,1,1
"org.apache.struts2.util.StrutsTestCaseHelper.MockErrorHandler.init(ServletContext)",1,1,1
"org.apache.struts2.util.StrutsTestCaseHelper.initDispatcher(ServletContext,Map<String, String>)",1,1,2
"org.apache.struts2.util.StrutsTestCaseHelper.setUp()",1,1,1
"org.apache.struts2.util.StrutsTestCaseHelper.tearDown()",1,1,1
"org.apache.struts2.util.StrutsTypeConverter.convertValue(Map,Object,Class)",4,4,4
"org.apache.struts2.util.StrutsTypeConverter.performFallbackConversion(Map,Object,Class)",1,1,1
"org.apache.struts2.util.StrutsUtil.ResponseWrapper.ResponseWrapper(HttpServletResponse)",1,1,1
"org.apache.struts2.util.StrutsUtil.ResponseWrapper.getData()",1,1,1
"org.apache.struts2.util.StrutsUtil.ResponseWrapper.getOutputStream()",1,1,1
"org.apache.struts2.util.StrutsUtil.ResponseWrapper.getWriter()",1,1,1
"org.apache.struts2.util.StrutsUtil.ServletOutputStreamWrapper.ServletOutputStreamWrapper(StringWriter)",1,1,1
"org.apache.struts2.util.StrutsUtil.ServletOutputStreamWrapper.write(int)",1,1,1
"org.apache.struts2.util.StrutsUtil.StrutsUtil(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.util.StrutsUtil.bean(Object)",1,2,2
"org.apache.struts2.util.StrutsUtil.buildUrl(String)",1,1,1
"org.apache.struts2.util.StrutsUtil.findString(String)",1,1,1
"org.apache.struts2.util.StrutsUtil.findValue(String,String)",1,1,1
"org.apache.struts2.util.StrutsUtil.getContext()",1,2,2
"org.apache.struts2.util.StrutsUtil.getText(String)",1,1,1
"org.apache.struts2.util.StrutsUtil.include(Object)",2,2,3
"org.apache.struts2.util.StrutsUtil.isTrue(String)",1,1,2
"org.apache.struts2.util.StrutsUtil.makeSelectList(String,String,String,String)",1,12,13
"org.apache.struts2.util.StrutsUtil.toInt(long)",1,1,1
"org.apache.struts2.util.StrutsUtil.toLong(String)",2,1,2
"org.apache.struts2.util.StrutsUtil.toLong(int)",1,1,1
"org.apache.struts2.util.StrutsUtil.toString(int)",1,1,1
"org.apache.struts2.util.StrutsUtil.toString(long)",1,1,1
"org.apache.struts2.util.StrutsUtil.toStringSafe(Object)",2,2,3
"org.apache.struts2.util.StrutsUtil.translateVariables(String)",1,1,1
"org.apache.struts2.util.StrutsUtil.urlEncode(String)",1,2,2
"org.apache.struts2.util.SubsetIteratorFilter.decide(Object)",2,3,3
"org.apache.struts2.util.SubsetIteratorFilter.execute()",3,11,14
"org.apache.struts2.util.SubsetIteratorFilter.hasNext()",1,3,4
"org.apache.struts2.util.SubsetIteratorFilter.next()",1,1,1
"org.apache.struts2.util.SubsetIteratorFilter.remove()",1,1,1
"org.apache.struts2.util.SubsetIteratorFilter.setCount(int)",1,1,1
"org.apache.struts2.util.SubsetIteratorFilter.setDecider(Decider)",1,1,1
"org.apache.struts2.util.SubsetIteratorFilter.setSource(Object)",1,1,1
"org.apache.struts2.util.SubsetIteratorFilter.setStart(int)",1,1,1
"org.apache.struts2.util.TabbedPane.TabbedPane(int)",1,1,1
"org.apache.struts2.util.TabbedPane.getContent()",1,1,1
"org.apache.struts2.util.TabbedPane.getSelectedIndex()",1,1,1
"org.apache.struts2.util.TabbedPane.getTabAlign()",1,1,1
"org.apache.struts2.util.TabbedPane.setContent(Vector)",1,1,1
"org.apache.struts2.util.TabbedPane.setSelectedIndex(int)",1,1,1
"org.apache.struts2.util.TabbedPane.setTabAlign(String)",1,1,1
"org.apache.struts2.util.TextProviderHelper.getText(String,String,List<Object>,ValueStack)",1,1,1
"org.apache.struts2.util.TextProviderHelper.getText(String,String,List<Object>,ValueStack,boolean)",3,8,9
"org.apache.struts2.util.TextProviderHelper.getText(String,String,ValueStack)",1,1,1
"org.apache.struts2.util.Timer.getTime()",1,1,1
"org.apache.struts2.util.Timer.getTotal()",1,1,1
"org.apache.struts2.util.TokenHelper.buildTokenSessionAttributeName(String)",1,1,1
"org.apache.struts2.util.TokenHelper.generateGUID()",1,1,1
"org.apache.struts2.util.TokenHelper.getToken()",1,1,1
"org.apache.struts2.util.TokenHelper.getToken(String)",3,2,4
"org.apache.struts2.util.TokenHelper.getTokenName()",3,3,4
"org.apache.struts2.util.TokenHelper.setSessionToken(String,String)",1,2,2
"org.apache.struts2.util.TokenHelper.setToken()",1,1,1
"org.apache.struts2.util.TokenHelper.setToken(String)",1,1,1
"org.apache.struts2.util.TokenHelper.validToken()",4,5,5
"org.apache.struts2.util.URLBean.addParameter(String,Object)",1,2,3
"org.apache.struts2.util.URLBean.getURL()",1,4,5
"org.apache.struts2.util.URLBean.setPage(String)",1,1,1
"org.apache.struts2.util.URLBean.setRequest(HttpServletRequest)",1,1,1
"org.apache.struts2.util.URLBean.setResponse(HttpServletResponse)",1,1,1
"org.apache.struts2.util.URLBean.toString()",1,1,1
"org.apache.struts2.util.VelocityStrutsUtil.VelocityStrutsUtil(VelocityEngine,Context,ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.util.VelocityStrutsUtil.evaluate(String)",1,1,1
"org.apache.struts2.util.fs.JBossFileManager.addIfAbsent(List<URL>,URL)",1,2,2
"org.apache.struts2.util.fs.JBossFileManager.getAllJBossPhysicalUrls(URL)",1,5,5
"org.apache.struts2.util.fs.JBossFileManager.getAllPhysicalUrls(URL)",2,2,2
"org.apache.struts2.util.fs.JBossFileManager.getJBossPhysicalUrl(URL)",3,3,3
"org.apache.struts2.util.fs.JBossFileManager.isJBoss5()",1,2,2
"org.apache.struts2.util.fs.JBossFileManager.isJBoss7()",1,2,2
"org.apache.struts2.util.fs.JBossFileManager.isJBossUrl(URL)",1,5,5
"org.apache.struts2.util.fs.JBossFileManager.monitorFile(URL)",1,4,4
"org.apache.struts2.util.fs.JBossFileManager.normalizeToFileProtocol(URL)",2,4,4
"org.apache.struts2.util.fs.JBossFileManager.readFile(List<URL>,File)",1,6,6
"org.apache.struts2.util.fs.JBossFileManager.readJBoss5Url(Object)",1,4,4
"org.apache.struts2.util.fs.JBossFileManager.readJBossPhysicalFile(Object)",1,4,4
"org.apache.struts2.util.fs.JBossFileManager.support()",1,3,3
"org.apache.struts2.views.DefaultTagLibrary.getDirectiveClasses()",1,1,1
"org.apache.struts2.views.DefaultTagLibrary.getFreemarkerModels(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.DefaultTagLibrary.getModels(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.DefaultTagLibrary.getVelocityDirectiveClasses()",1,1,1
"org.apache.struts2.views.JspSupportServlet.init(ServletConfig)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.addSetting(String,String)",5,7,11
"org.apache.struts2.views.freemarker.FreemarkerManager.buildScopesHashModel(ServletContext,HttpServletRequest,HttpServletResponse,ObjectWrapper,ValueStack)",1,8,8
"org.apache.struts2.views.freemarker.FreemarkerManager.buildTemplateModel(ValueStack,Object,ServletContext,HttpServletRequest,HttpServletResponse,ObjectWrapper)",1,3,3
"org.apache.struts2.views.freemarker.FreemarkerManager.configureTemplateLoader(TemplateLoader)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.createConfiguration(ServletContext)",1,4,4
"org.apache.struts2.views.freemarker.FreemarkerManager.createObjectWrapper(ServletContext)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.createTemplateLoader(ServletContext,String)",1,5,6
"org.apache.struts2.views.freemarker.FreemarkerManager.getConfig()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.getConfiguration(ServletContext)",1,3,3
"org.apache.struts2.views.freemarker.FreemarkerManager.getContentType()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.getDebug()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.getNoCharsetInContentType()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.getNocache()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.getTemplatePath()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.getWrapper()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.init(ServletContext)",1,2,2
"org.apache.struts2.views.freemarker.FreemarkerManager.loadSettings(ServletContext)",5,5,7
"org.apache.struts2.views.freemarker.FreemarkerManager.populateContext(ScopesHashModel,ValueStack,Object,HttpServletRequest,HttpServletResponse)",1,3,3
"org.apache.struts2.views.freemarker.FreemarkerManager.setCacheBeanWrapper(String)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.setContainer(Container)",1,2,2
"org.apache.struts2.views.freemarker.FreemarkerManager.setEncoding(String)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.setFileManagerFactory(FileManagerFactory)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.setMruMaxStrongSize(String)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.setTemplateUpdateDelay(String)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.setThemeTemplateLoader(FreemarkerThemeTemplateLoader)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerManager.setWrapperAltMap(String)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.FreemarkerResult()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.FreemarkerResult(String)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.createModel()",1,2,2
"org.apache.struts2.views.freemarker.FreemarkerResult.deduceLocale()",2,2,2
"org.apache.struts2.views.freemarker.FreemarkerResult.doExecute(String,ActionInvocation)",3,15,17
"org.apache.struts2.views.freemarker.FreemarkerResult.getConfiguration()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.getContentType()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.getObjectWrapper()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.getWriter()",2,1,2
"org.apache.struts2.views.freemarker.FreemarkerResult.isInsideActionTag()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.isWriteIfCompleted()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.postTemplateProcess(Template,TemplateModel)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.preTemplateProcess(Template,TemplateModel)",1,4,6
"org.apache.struts2.views.freemarker.FreemarkerResult.setContentType(String)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.setFreemarkerManager(FreemarkerManager)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.setWriteIfCompleted(boolean)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerResult.setWriter(Writer)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerThemeTemplateLoader.closeTemplateSource(Object)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerThemeTemplateLoader.findTemplateSource(String)",6,5,7
"org.apache.struts2.views.freemarker.FreemarkerThemeTemplateLoader.getLastModified(Object)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerThemeTemplateLoader.getParentTemplateLoader()",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerThemeTemplateLoader.getReader(Object,String)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerThemeTemplateLoader.init(TemplateLoader)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerThemeTemplateLoader.setTemplateEngine(TemplateEngine)",1,1,1
"org.apache.struts2.views.freemarker.FreemarkerThemeTemplateLoader.setUIThemeExpansionToken(String)",1,1,1
"org.apache.struts2.views.freemarker.ScopesHashModel.ScopesHashModel(ObjectWrapper,ServletContext,HttpServletRequest)",1,1,1
"org.apache.struts2.views.freemarker.ScopesHashModel.ScopesHashModel(ObjectWrapper,ServletContext,HttpServletRequest,ValueStack)",1,1,1
"org.apache.struts2.views.freemarker.ScopesHashModel.findValueOnStack(String)",3,2,3
"org.apache.struts2.views.freemarker.ScopesHashModel.get(String)",12,11,12
"org.apache.struts2.views.freemarker.ScopesHashModel.put(String,Object)",1,1,1
"org.apache.struts2.views.freemarker.ScopesHashModel.put(String,boolean)",1,1,1
"org.apache.struts2.views.freemarker.ScopesHashModel.putUnlistedModel(String,TemplateModel)",1,1,1
"org.apache.struts2.views.freemarker.StrutsBeanWrapper.FriendlyMapModel.FriendlyMapModel(Map,BeansWrapper)",1,1,1
"org.apache.struts2.views.freemarker.StrutsBeanWrapper.FriendlyMapModel.isEmpty()",1,1,1
"org.apache.struts2.views.freemarker.StrutsBeanWrapper.FriendlyMapModel.keySet()",1,1,1
"org.apache.struts2.views.freemarker.StrutsBeanWrapper.FriendlyMapModel.values()",1,1,1
"org.apache.struts2.views.freemarker.StrutsBeanWrapper.StrutsBeanWrapper(boolean)",1,1,1
"org.apache.struts2.views.freemarker.StrutsBeanWrapper.getModelFactory(Class)",2,2,3
"org.apache.struts2.views.freemarker.StrutsClassTemplateLoader.getURL(String)",1,1,1
"org.apache.struts2.views.freemarker.tags.ActionErrorModel.ActionErrorModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.ActionErrorModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.ActionMessageModel.ActionMessageModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.ActionMessageModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.ActionModel.ActionModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.ActionModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.AnchorModel.AnchorModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.AnchorModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.BeanModel.BeanModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.BeanModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.CallbackWriter.CallbackWriter(Component,Writer)",1,1,2
"org.apache.struts2.views.freemarker.tags.CallbackWriter.afterBody()",2,2,3
"org.apache.struts2.views.freemarker.tags.CallbackWriter.close()",1,2,2
"org.apache.struts2.views.freemarker.tags.CallbackWriter.flush()",1,2,2
"org.apache.struts2.views.freemarker.tags.CallbackWriter.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.CallbackWriter.onError(Throwable)",1,1,1
"org.apache.struts2.views.freemarker.tags.CallbackWriter.onStart()",2,1,2
"org.apache.struts2.views.freemarker.tags.CallbackWriter.write(char[],int,int)",1,3,3
"org.apache.struts2.views.freemarker.tags.CheckboxListModel.CheckboxListModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.CheckboxListModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.CheckboxModel.CheckboxModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.CheckboxModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.ComboBoxModel.ComboBoxModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.ComboBoxModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.ComponentModel.ComponentModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.ComponentModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.DateModel.DateModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.DateModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.DivModel.DivModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.DivModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.DoubleSelectModel.DoubleSelectModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.DoubleSelectModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.ElseIfModel.ElseIfModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.ElseIfModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.ElseModel.ElseModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.ElseModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.FieldErrorModel.FieldErrorModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.FieldErrorModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.FileModel.FileModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.FileModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.FormModel.FormModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.FormModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.HeadModel.HeadModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.HeadModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.HiddenModel.HiddenModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.HiddenModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.I18nModel.I18nModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.I18nModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.IfModel.IfModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.IfModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.IncludeModel.IncludeModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.IncludeModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.InputTransferSelectModel.InputTransferSelectModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.InputTransferSelectModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.IteratorModel.IteratorModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.IteratorModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.LabelModel.LabelModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.LabelModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.OptGroupModel.OptGroupModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.OptGroupModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.OptionTransferSelectModel.OptionTransferSelectModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.OptionTransferSelectModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.ParamModel.ParamModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.ParamModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.PasswordModel.PasswordModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.PasswordModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.PropertyModel.PropertyModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.PropertyModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.PushModel.PushModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.PushModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.RadioModel.RadioModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.RadioModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.ResetModel.ResetModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.ResetModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.SelectModel.SelectModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.SelectModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.SetModel.SetModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.SetModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.StrutsModels.StrutsModels(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.StrutsModels.getA()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getAction()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getActionerror()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getActionmessage()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getBean()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getCheckbox()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getCheckboxlist()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getCombobox()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getComponent()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getDate()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getDiv()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getDoubleselect()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getElse()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getElseif()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getFielderror()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getFile()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getForm()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getHead()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getHidden()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getHref()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getI18n()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getIf()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getInclude()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getInputtransferselect()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getIterator()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getLabel()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getOptgroup()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getOptiontransferselect()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getParam()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getPassword()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getProperty()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getPush()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getRadio()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getReset()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getSelect()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getSet()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getSubmit()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getText()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getTextarea()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getTextfield()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getToken()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getUpdownselect()",1,1,2
"org.apache.struts2.views.freemarker.tags.StrutsModels.getUrl()",1,1,2
"org.apache.struts2.views.freemarker.tags.SubmitModel.SubmitModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.SubmitModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.TagModel.TagModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.TagModel.complexType(Object)",1,1,3
"org.apache.struts2.views.freemarker.tags.TagModel.convertParams(Map)",1,4,4
"org.apache.struts2.views.freemarker.tags.TagModel.getComplexParams(Map)",1,9,9
"org.apache.struts2.views.freemarker.tags.TagModel.getWriter(Writer,Map)",1,1,1
"org.apache.struts2.views.freemarker.tags.TagModel.unwrapParameters(Map)",1,5,5
"org.apache.struts2.views.freemarker.tags.TextAreaModel.TextAreaModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.TextAreaModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.TextFieldModel.TextFieldModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.TextFieldModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.TextModel.TextModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.TextModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.TokenModel.TokenModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.TokenModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.URLModel.URLModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.URLModel.getBean()",1,1,1
"org.apache.struts2.views.freemarker.tags.UpDownSelectModel.UpDownSelectModel(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.freemarker.tags.UpDownSelectModel.getBean()",1,1,1
"org.apache.struts2.views.jsp.ActionTag.addParameter(String,Object)",1,1,1
"org.apache.struts2.views.jsp.ActionTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ActionTag.getFlush()",1,1,1
"org.apache.struts2.views.jsp.ActionTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ActionTag.setExecuteResult(boolean)",1,1,1
"org.apache.struts2.views.jsp.ActionTag.setFlush(boolean)",1,1,1
"org.apache.struts2.views.jsp.ActionTag.setIgnoreContextParams(boolean)",1,1,1
"org.apache.struts2.views.jsp.ActionTag.setName(String)",1,1,1
"org.apache.struts2.views.jsp.ActionTag.setNamespace(String)",1,1,1
"org.apache.struts2.views.jsp.ActionTag.setRethrowException(boolean)",1,1,1
"org.apache.struts2.views.jsp.BeanTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.BeanTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.BeanTag.setName(String)",1,1,1
"org.apache.struts2.views.jsp.ComponentTagSupport.doEndTag()",1,1,1
"org.apache.struts2.views.jsp.ComponentTagSupport.doStartTag()",2,2,3
"org.apache.struts2.views.jsp.ComponentTagSupport.getComponent()",1,1,1
"org.apache.struts2.views.jsp.ComponentTagSupport.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ContextBeanTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ContextBeanTag.setId(String)",1,1,1
"org.apache.struts2.views.jsp.ContextBeanTag.setVar(String)",1,1,1
"org.apache.struts2.views.jsp.DateTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.DateTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.DateTag.setFormat(String)",1,1,1
"org.apache.struts2.views.jsp.DateTag.setName(String)",1,1,1
"org.apache.struts2.views.jsp.DateTag.setNice(boolean)",1,1,1
"org.apache.struts2.views.jsp.DateTag.setTimezone(String)",1,1,1
"org.apache.struts2.views.jsp.ElseIfTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ElseIfTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ElseIfTag.setTest(String)",1,1,1
"org.apache.struts2.views.jsp.ElseTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.I18nTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.I18nTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.I18nTag.setName(String)",1,1,1
"org.apache.struts2.views.jsp.IfTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.IfTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.IfTag.setTest(String)",1,1,1
"org.apache.struts2.views.jsp.IncludeTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.IncludeTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.IncludeTag.setValue(String)",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.IteratorStatus(StatusState)",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.StatusState.next()",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.StatusState.setLast(boolean)",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.getCount()",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.getIndex()",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.isEven()",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.isFirst()",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.isLast()",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.isOdd()",1,1,1
"org.apache.struts2.views.jsp.IteratorStatus.modulus(int)",1,1,1
"org.apache.struts2.views.jsp.IteratorTag.doAfterBody()",3,3,4
"org.apache.struts2.views.jsp.IteratorTag.doEndTag()",1,1,1
"org.apache.struts2.views.jsp.IteratorTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.IteratorTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.IteratorTag.setBegin(String)",1,1,1
"org.apache.struts2.views.jsp.IteratorTag.setEnd(String)",1,1,1
"org.apache.struts2.views.jsp.IteratorTag.setStatus(String)",1,1,1
"org.apache.struts2.views.jsp.IteratorTag.setStep(String)",1,1,1
"org.apache.struts2.views.jsp.IteratorTag.setValue(String)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setCurrency(String)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setGroupingUsed(Boolean)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setMaximumFractionDigits(Integer)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setMaximumIntegerDigits(Integer)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setMinimumFractionDigits(Integer)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setMinimumIntegerDigits(Integer)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setName(String)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setParseIntegerOnly(Boolean)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setRoundingMode(String)",1,1,1
"org.apache.struts2.views.jsp.NumberTag.setType(String)",1,1,1
"org.apache.struts2.views.jsp.ParamTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ParamTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ParamTag.setName(String)",1,1,1
"org.apache.struts2.views.jsp.ParamTag.setSuppressEmptyParameters(boolean)",1,1,1
"org.apache.struts2.views.jsp.ParamTag.setValue(String)",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.setDefault(String)",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.setDefaultValue(String)",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.setEscape(boolean)",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.setEscapeCsv(boolean)",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.setEscapeHtml(boolean)",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.setEscapeJavaScript(boolean)",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.setEscapeXml(boolean)",1,1,1
"org.apache.struts2.views.jsp.PropertyTag.setValue(String)",1,1,1
"org.apache.struts2.views.jsp.PushTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.PushTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.PushTag.setValue(String)",1,1,1
"org.apache.struts2.views.jsp.SetTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.SetTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.SetTag.setName(String)",1,1,1
"org.apache.struts2.views.jsp.SetTag.setScope(String)",1,1,1
"org.apache.struts2.views.jsp.SetTag.setValue(String)",1,1,1
"org.apache.struts2.views.jsp.StrutsBodyTagSupport.findString(String)",1,1,1
"org.apache.struts2.views.jsp.StrutsBodyTagSupport.findValue(String)",1,1,1
"org.apache.struts2.views.jsp.StrutsBodyTagSupport.findValue(String,Class)",2,3,3
"org.apache.struts2.views.jsp.StrutsBodyTagSupport.getBody()",2,2,2
"org.apache.struts2.views.jsp.StrutsBodyTagSupport.getStack()",1,1,1
"org.apache.struts2.views.jsp.StrutsBodyTagSupport.toString(Throwable)",1,1,1
"org.apache.struts2.views.jsp.TagUtils.buildNamespace(ActionMapper,ValueStack,HttpServletRequest)",3,3,3
"org.apache.struts2.views.jsp.TagUtils.getStack(PageContext)",3,2,3
"org.apache.struts2.views.jsp.TextTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.TextTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.TextTag.setName(String)",1,1,1
"org.apache.struts2.views.jsp.TextTag.setSearchValueStack(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.URLTag.populateParams()",1,5,5
"org.apache.struts2.views.jsp.URLTag.setAction(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setAnchor(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setEncode(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setEscapeAmp(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setForceAddSchemeHostAndPort(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setIncludeContext(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setIncludeParams(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setMethod(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setNamespace(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setPortletMode(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setPortletUrlType(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setScheme(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setValue(String)",1,1,1
"org.apache.struts2.views.jsp.URLTag.setWindowState(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.AppendIteratorTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.iterator.IteratorGeneratorTag.doEndTag()",1,1,1
"org.apache.struts2.views.jsp.iterator.IteratorGeneratorTag.doStartTag()",1,12,12
"org.apache.struts2.views.jsp.iterator.IteratorGeneratorTag.setConverter(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.IteratorGeneratorTag.setCount(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.IteratorGeneratorTag.setId(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.IteratorGeneratorTag.setSeparator(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.IteratorGeneratorTag.setVal(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.IteratorGeneratorTag.setVar(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.MergeIteratorTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.iterator.SortIteratorTag.doEndTag()",1,1,1
"org.apache.struts2.views.jsp.iterator.SortIteratorTag.doStartTag()",3,4,6
"org.apache.struts2.views.jsp.iterator.SortIteratorTag.setComparator(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.SortIteratorTag.setId(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.SortIteratorTag.setSource(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.SortIteratorTag.setVar(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.SubsetIteratorTag.doEndTag()",1,1,1
"org.apache.struts2.views.jsp.iterator.SubsetIteratorTag.doStartTag()",3,20,21
"org.apache.struts2.views.jsp.iterator.SubsetIteratorTag.setCount(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.SubsetIteratorTag.setDecider(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.SubsetIteratorTag.setId(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.SubsetIteratorTag.setSource(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.SubsetIteratorTag.setStart(String)",1,1,1
"org.apache.struts2.views.jsp.iterator.SubsetIteratorTag.setVar(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractClosingTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractClosingTag.setOpenTemplate(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleCssClass()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleCssStyle()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleDisabled()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleEmptyOption()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleHeaderKey()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleHeaderValue()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleId()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleList()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleListKey()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleListValue()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleMultiple()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleName()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnblur()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnchange()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnclick()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOndblclick()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnfocus()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnkeydown()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnkeypress()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnkeyup()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnmousedown()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnmousemove()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnmouseout()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnmouseover()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnmouseup()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleOnselect()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleSize()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getDoubleValue()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.getFormName()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleAccesskey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleCssClass(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleCssStyle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleDisabled(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleEmptyOption(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleHeaderKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleHeaderValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleId(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleList(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleListCssClass(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleListCssStyle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleListKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleListTitle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleListValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleMultiple(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleName(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnblur(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnchange(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOndblclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnfocus(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnkeydown(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnkeypress(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnkeyup(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnmousedown(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnmousemove(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnmouseout(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnmouseover(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnmouseup(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleOnselect(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleSize(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setDoubleValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setEmptyOption(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setFormName(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setHeaderKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setHeaderValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setMultiple(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractDoubleListTag.setSize(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractListTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractListTag.setList(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractListTag.setListCssClass(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractListTag.setListCssStyle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractListTag.setListKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractListTag.setListLabelKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractListTag.setListTitle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractListTag.setListValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractListTag.setListValueKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractRequiredListTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setAccesskey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setClass(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setCssClass(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setCssErrorClass(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setCssErrorStyle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setCssStyle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setDisabled(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setDynamicAttribute(String,String,Object)",1,3,3
"org.apache.struts2.views.jsp.ui.AbstractUITag.setErrorPosition(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setId(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setJavascriptTooltip(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setLabelSeparator(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setLabelposition(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setName(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnblur(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnchange(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOndblclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnfocus(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnkeydown(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnkeypress(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnkeyup(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnmousedown(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnmousemove(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnmouseout(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnmouseover(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnmouseup(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setOnselect(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setRequiredLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setRequiredPosition(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setStyle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTabindex(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTemplate(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTemplateDir(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTheme(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTitle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTooltip(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTooltipConfig(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTooltipCssClass(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTooltipDelay(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setTooltipIconPath(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITag.setValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AbstractUITagBeanInfo.getPropertyDescriptors()",1,4,4
"org.apache.struts2.views.jsp.ui.ActionErrorTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.ActionErrorTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.ActionErrorTag.setEscape(boolean)",1,1,1
"org.apache.struts2.views.jsp.ui.ActionMessageTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.ActionMessageTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.ActionMessageTag.setEscape(boolean)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.populateParams()",1,5,5
"org.apache.struts2.views.jsp.ui.AnchorTag.setAction(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setAnchor(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setEncode(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setEscapeAmp(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setForceAddSchemeHostAndPort(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setHref(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setIncludeContext(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setIncludeParams(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setMethod(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setNamespace(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setPortletMode(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setPortletUrlType(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setScheme(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.AnchorTag.setWindowState(String)",1,1,1
"org.apache.struts2.views.jsp.ui.CheckboxListTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.CheckboxTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.CheckboxTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.CheckboxTag.setFieldValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ComboBoxTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.ComboBoxTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.ComboBoxTag.setEmptyOption(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ComboBoxTag.setHeaderKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ComboBoxTag.setHeaderValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ComboBoxTag.setList(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ComboBoxTag.setListKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ComboBoxTag.setListValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ComponentTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.DateTextFieldTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.DateTextFieldTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.DateTextFieldTag.setFormat(String)",1,1,1
"org.apache.struts2.views.jsp.ui.DebugTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.DivTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.DoubleSelectTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.DoubleSelectTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.FieldErrorTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.FieldErrorTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.FieldErrorTag.setEscape(boolean)",1,1,1
"org.apache.struts2.views.jsp.ui.FieldErrorTag.setFieldName(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FileTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.FileTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.FileTag.setAccept(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FileTag.setSize(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setAcceptcharset(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setAction(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setEnctype(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setFocusElement(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setIncludeContext(boolean)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setMethod(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setNamespace(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setOnreset(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setOnsubmit(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setPortletMode(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setTarget(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setValidate(String)",1,1,1
"org.apache.struts2.views.jsp.ui.FormTag.setWindowState(String)",1,1,1
"org.apache.struts2.views.jsp.ui.HeadTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.HiddenTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getAddLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getAllowRemoveAll()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getAllowUpDown()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getButtonCssClass()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getButtonCssStyle()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getDownLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getHeaderKey()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getHeaderValue()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getLeftTitle()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getMultiple()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getRemoveAllLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getRemoveLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getRightTitle()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getSize()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.getUpLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setAddLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setAllowRemoveAll(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setAllowUpDown(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setButtonCssClass(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setButtonCssStyle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setDownLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setHeaderKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setHeaderValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setLeftTitle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setMultiple(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setRemoveAllLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setRemoveLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setRightTitle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setSize(String)",1,1,1
"org.apache.struts2.views.jsp.ui.InputTransferSelectTag.setUpLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.LabelTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.LabelTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.LabelTag.setFor(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OgnlTool.OgnlTool()",1,1,1
"org.apache.struts2.views.jsp.ui.OgnlTool.findValue(String,Object)",1,1,2
"org.apache.struts2.views.jsp.ui.OgnlTool.setOgnlUtil(OgnlUtil)",1,1,1
"org.apache.struts2.views.jsp.ui.OptGroupTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.OptGroupTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.OptGroupTag.setDisabled(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptGroupTag.setLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptGroupTag.setList(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptGroupTag.setListKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptGroupTag.setListValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAddAllToLeftLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAddAllToLeftOnclick()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAddAllToRightLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAddAllToRightOnclick()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAddToLeftLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAddToLeftOnclick()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAddToRightLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAddToRightOnclick()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAllowAddAllToLeft()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAllowAddAllToRight()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAllowAddToLeft()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAllowAddToRight()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAllowSelectAll()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAllowUpDownOnLeft()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getAllowUpDownOnRight()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getButtonCssClass()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getButtonCssStyle()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getLeftDownLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getLeftTitle()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getLeftUpLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getRightDownLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getRightTitle()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getRightUpLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getSelectAllLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getSelectAllOnclick()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getUpDownOnLeftOnclick()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.getUpDownOnRightOnclick()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAddAllToLeftLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAddAllToLeftOnclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAddAllToRightLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAddAllToRightOnclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAddToLeftLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAddToLeftOnclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAddToRightLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAddToRightOnclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAllowAddAllToLeft(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAllowAddAllToRight(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAllowAddToLeft(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAllowAddToRight(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAllowSelectAll(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAllowUpDownOnLeft(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setAllowUpDownOnRight(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setButtonCssClass(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setButtonCssStyle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setLeftDownLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setLeftTitle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setLeftUpLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setRightDownLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setRightTitle(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setRightUpLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setSelectAllLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setSelectAllOnclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setUpDownOnLeftOnclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.OptionTransferSelectTag.setUpDownOnRightOnclick(String)",1,1,1
"org.apache.struts2.views.jsp.ui.PasswordTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.PasswordTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.PasswordTag.setShow(String)",1,1,1
"org.apache.struts2.views.jsp.ui.PasswordTag.setShowPassword(String)",1,1,1
"org.apache.struts2.views.jsp.ui.RadioTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.ResetTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.ResetTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.ResetTag.setAction(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ResetTag.setMethod(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ResetTag.setSrc(String)",1,1,1
"org.apache.struts2.views.jsp.ui.ResetTag.setType(String)",1,1,1
"org.apache.struts2.views.jsp.ui.SelectTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.SelectTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.SelectTag.setEmptyOption(String)",1,1,1
"org.apache.struts2.views.jsp.ui.SelectTag.setHeaderKey(String)",1,1,1
"org.apache.struts2.views.jsp.ui.SelectTag.setHeaderValue(String)",1,1,1
"org.apache.struts2.views.jsp.ui.SelectTag.setMultiple(String)",1,1,1
"org.apache.struts2.views.jsp.ui.SelectTag.setSize(String)",1,1,1
"org.apache.struts2.views.jsp.ui.SubmitTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.SubmitTag.getType()",1,1,1
"org.apache.struts2.views.jsp.ui.SubmitTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.SubmitTag.setAction(String)",1,1,1
"org.apache.struts2.views.jsp.ui.SubmitTag.setMethod(String)",1,1,1
"org.apache.struts2.views.jsp.ui.SubmitTag.setSrc(String)",1,1,1
"org.apache.struts2.views.jsp.ui.SubmitTag.setType(String)",1,1,1
"org.apache.struts2.views.jsp.ui.TextFieldTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.TextFieldTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.TextFieldTag.setMaxlength(String)",1,1,1
"org.apache.struts2.views.jsp.ui.TextFieldTag.setReadonly(String)",1,1,1
"org.apache.struts2.views.jsp.ui.TextFieldTag.setSize(String)",1,1,1
"org.apache.struts2.views.jsp.ui.TextFieldTag.setType(String)",1,1,1
"org.apache.struts2.views.jsp.ui.TextareaTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.TextareaTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.TextareaTag.setCols(String)",1,1,1
"org.apache.struts2.views.jsp.ui.TextareaTag.setReadonly(String)",1,1,1
"org.apache.struts2.views.jsp.ui.TextareaTag.setRows(String)",1,1,1
"org.apache.struts2.views.jsp.ui.TextareaTag.setWrap(String)",1,1,1
"org.apache.struts2.views.jsp.ui.TokenTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.getAllowMoveDown()",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.getAllowMoveUp()",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.getAllowSelectAll()",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.getMoveDownLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.getMoveUpLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.getSelectAllLabel()",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.populateParams()",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.setAllowMoveDown(String)",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.setAllowMoveUp(String)",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.setAllowSelectAll(String)",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.setMoveDownLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.setMoveUpLabel(String)",1,1,1
"org.apache.struts2.views.jsp.ui.UpDownSelectTag.setSelectAllLabel(String)",1,1,1
"org.apache.struts2.views.util.ContextUtil.getStandardContext(ValueStack,HttpServletRequest,HttpServletResponse)",1,2,2
"org.apache.struts2.views.util.ContextUtil.getTemplateSuffix(Map)",1,2,2
"org.apache.struts2.views.util.ContextUtil.isUseAltSyntax(Map)",1,4,4
"org.apache.struts2.views.util.DefaultUrlHelper.buildParameterSubstring(String,String)",1,1,1
"org.apache.struts2.views.util.DefaultUrlHelper.buildParametersString(Map<String, Object>,StringBuilder,String)",1,15,15
"org.apache.struts2.views.util.DefaultUrlHelper.buildUrl(String,HttpServletRequest,HttpServletResponse,Map<String, Object>)",1,1,1
"org.apache.struts2.views.util.DefaultUrlHelper.buildUrl(String,HttpServletRequest,HttpServletResponse,Map<String, Object>,String,boolean,boolean)",1,1,1
"org.apache.struts2.views.util.DefaultUrlHelper.buildUrl(String,HttpServletRequest,HttpServletResponse,Map<String, Object>,String,boolean,boolean,boolean)",1,1,1
"org.apache.struts2.views.util.DefaultUrlHelper.buildUrl(String,HttpServletRequest,HttpServletResponse,Map<String, Object>,String,boolean,boolean,boolean,boolean)",1,30,33
"org.apache.struts2.views.util.DefaultUrlHelper.decode(String)",1,2,2
"org.apache.struts2.views.util.DefaultUrlHelper.encode(String)",1,2,2
"org.apache.struts2.views.util.DefaultUrlHelper.parseQueryString(String,boolean)",1,9,11
"org.apache.struts2.views.util.DefaultUrlHelper.setEncoding(String)",1,1,2
"org.apache.struts2.views.util.DefaultUrlHelper.setHttpPort(String)",1,1,1
"org.apache.struts2.views.util.DefaultUrlHelper.setHttpsPort(String)",1,1,1
"org.apache.struts2.views.util.ResourceUtil.getResourceBase(HttpServletRequest)",2,2,3
"org.apache.struts2.views.velocity.StrutsResourceLoader.getResourceStream(String)",2,3,5
"org.apache.struts2.views.velocity.StrutsVelocityContext.StrutsVelocityContext(ValueStack)",1,1,1
"org.apache.struts2.views.velocity.StrutsVelocityContext.StrutsVelocityContext(VelocityContext[],ValueStack)",1,1,1
"org.apache.struts2.views.velocity.StrutsVelocityContext.internalContainsKey(Object)",8,4,8
"org.apache.struts2.views.velocity.StrutsVelocityContext.internalGet(String)",8,6,8
"org.apache.struts2.views.velocity.VelocityManager.addDirective(StringBuilder,Class)",1,1,1
"org.apache.struts2.views.velocity.VelocityManager.applyDefaultConfiguration(ServletContext,Properties)",1,10,10
"org.apache.struts2.views.velocity.VelocityManager.createContext(ValueStack,HttpServletRequest,HttpServletResponse)",1,4,5
"org.apache.struts2.views.velocity.VelocityManager.getToolboxManager()",1,1,1
"org.apache.struts2.views.velocity.VelocityManager.getVelocityEngine()",1,1,1
"org.apache.struts2.views.velocity.VelocityManager.getVelocityProperties()",1,1,1
"org.apache.struts2.views.velocity.VelocityManager.init(ServletContext)",1,2,2
"org.apache.struts2.views.velocity.VelocityManager.initToolbox(ServletContext)",1,2,2
"org.apache.struts2.views.velocity.VelocityManager.loadConfiguration(ServletContext)",2,17,20
"org.apache.struts2.views.velocity.VelocityManager.newVelocityEngine(ServletContext)",2,2,3
"org.apache.struts2.views.velocity.VelocityManager.prepareChainedContexts(HttpServletRequest,HttpServletResponse,Map)",3,4,5
"org.apache.struts2.views.velocity.VelocityManager.replace(String,String,String)",4,3,5
"org.apache.struts2.views.velocity.VelocityManager.setChainedContexts(String)",1,3,3
"org.apache.struts2.views.velocity.VelocityManager.setContainer(Container)",1,2,2
"org.apache.struts2.views.velocity.VelocityManager.setCustomConfigFile(String)",1,1,1
"org.apache.struts2.views.velocity.VelocityManager.setObjectFactory(ObjectFactory)",1,1,1
"org.apache.struts2.views.velocity.VelocityManager.setToolBoxLocation(String)",1,1,1
"org.apache.struts2.views.velocity.VelocityManager.setVelocityProperties(Properties)",1,1,1
"org.apache.struts2.views.velocity.components.AbstractDirective.createPropertyMap(InternalContextAdapter,Node)",1,6,7
"org.apache.struts2.views.velocity.components.AbstractDirective.getName()",1,1,1
"org.apache.struts2.views.velocity.components.AbstractDirective.getType()",1,1,1
"org.apache.struts2.views.velocity.components.AbstractDirective.putProperty(Map,InternalContextAdapter,Node)",2,2,2
"org.apache.struts2.views.velocity.components.AbstractDirective.render(InternalContextAdapter,Writer,Node)",1,2,2
"org.apache.struts2.views.velocity.components.ActionDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.ActionDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.ActionErrorDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.ActionErrorDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.ActionMessageDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.ActionMessageDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.AnchorDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.AnchorDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.AnchorDirective.getType()",1,1,1
"org.apache.struts2.views.velocity.components.BeanDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.BeanDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.CheckBoxDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.CheckBoxDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.CheckBoxListDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.CheckBoxListDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.ComboBoxDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.ComboBoxDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.ComponentDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.ComponentDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.ComponentDirective.getType()",1,1,1
"org.apache.struts2.views.velocity.components.DateDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.DateDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.DivDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.DivDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.DivDirective.getType()",1,1,1
"org.apache.struts2.views.velocity.components.DoubleSelectDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.DoubleSelectDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.FieldErrorDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.FieldErrorDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.FileDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.FileDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.FormDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.FormDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.FormDirective.getType()",1,1,1
"org.apache.struts2.views.velocity.components.HeadDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.HeadDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.HiddenDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.HiddenDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.I18nDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.I18nDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.IncludeDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.IncludeDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.InputTransferSelectDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.InputTransferSelectDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.LabelDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.LabelDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.OptGroupDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.OptGroupDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.OptionTransferSelectDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.OptionTransferSelectDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.ParamDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.ParamDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.PasswordDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.PasswordDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.PropertyDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.PropertyDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.PushDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.PushDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.RadioDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.RadioDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.ResetDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.ResetDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.SelectDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.SelectDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.SetDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.SetDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.SubmitDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.SubmitDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.TextAreaDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.TextAreaDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.TextDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.TextDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.TextFieldDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.TextFieldDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.TokenDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.TokenDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.URLDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.URLDirective.getBeanName()",1,1,1
"org.apache.struts2.views.velocity.components.UpDownSelectDirective.getBean(ValueStack,HttpServletRequest,HttpServletResponse)",1,1,1
"org.apache.struts2.views.velocity.components.UpDownSelectDirective.getBeanName()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.AbstractAdapterElement()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.buildAttributeAdapters()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.getAttribute(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.getAttributeAdapters()",1,2,2
"org.apache.struts2.views.xslt.AbstractAdapterElement.getAttributeNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.getAttributeNode(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.getAttributeNodeNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.getNodeName()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.getNodeType()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.getSchemaTypeInfo()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.getTagName()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.hasAttribute(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.hasAttributeNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.hasChildNodes()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.removeAttribute(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.removeAttributeNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.removeAttributeNode(Attr)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.setAttribute(String,String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.setAttributeNS(String,String,String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.setAttributeNode(Attr)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.setAttributeNodeNS(Attr)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.setIdAttribute(String,boolean)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.setIdAttributeNS(String,String,boolean)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterElement.setIdAttributeNode(Attr,boolean)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.AbstractAdapterNode()",1,2,2
"org.apache.struts2.views.xslt.AbstractAdapterNode.appendChild(Node)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.buildChildAdapters()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.cloneNode(boolean)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.compareDocumentPosition(Node)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getAdapterFactory()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getAttributes()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getBaseURI()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getChildAdapters()",1,2,2
"org.apache.struts2.views.xslt.AbstractAdapterNode.getChildAfter(Node)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getChildBefore(Node)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getChildBeforeOrAfter(Node,boolean)",2,4,6
"org.apache.struts2.views.xslt.AbstractAdapterNode.getChildNodes()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getElementsByTagName(String)",2,4,4
"org.apache.struts2.views.xslt.AbstractAdapterNode.getElementsByTagNameNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getFeature(String,String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getFirstChild()",1,2,2
"org.apache.struts2.views.xslt.AbstractAdapterNode.getLastChild()",1,2,2
"org.apache.struts2.views.xslt.AbstractAdapterNode.getLocalName()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getNamespaceURI()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getNextSibling()",1,3,3
"org.apache.struts2.views.xslt.AbstractAdapterNode.getNodeName()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getNodeType()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getNodeValue()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getOwnerDocument()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getParent()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getParentNode()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getPrefix()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getPreviousSibling()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getPropertyName()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getPropertyValue()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getTextContent()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.getUserData(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.hasAttributes()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.hasChildNodes()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.insertBefore(Node,Node)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.isDefaultNamespace(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.isEqualNode(Node)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.isSameNode(Node)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.isSupported(String,String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.lookupNamespaceURI(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.lookupPrefix(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.normalize()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.operationNotSupported()",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.removeChild(Node)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.replaceChild(Node,Node)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.setAdapterFactory(AdapterFactory)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.setContext(AdapterFactory,AdapterNode,String,Object)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.setNodeValue(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.setParent(AdapterNode)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.setPrefix(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.setPropertyName(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.setPropertyValue(Object)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.setTextContent(String)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.setUserData(String,Object,UserDataHandler)",1,1,1
"org.apache.struts2.views.xslt.AbstractAdapterNode.toString()",1,1,1
"org.apache.struts2.views.xslt.AdapterFactory.adaptDocument(String,Object)",1,1,1
"org.apache.struts2.views.xslt.AdapterFactory.adaptNode(AdapterNode,String,Object)",3,8,11
"org.apache.struts2.views.xslt.AdapterFactory.adaptNullValue(AdapterNode,String)",1,1,1
"org.apache.struts2.views.xslt.AdapterFactory.constructAdapterInstance(Class,AdapterNode,String,Object)",1,2,3
"org.apache.struts2.views.xslt.AdapterFactory.getAdapterForValue(Object)",1,1,1
"org.apache.struts2.views.xslt.AdapterFactory.proxyNamedNodeMap(AdapterNode,NamedNodeMap)",1,1,1
"org.apache.struts2.views.xslt.AdapterFactory.proxyNode(AdapterNode,Node)",5,2,6
"org.apache.struts2.views.xslt.AdapterFactory.registerAdapterType(Class,Class)",1,1,1
"org.apache.struts2.views.xslt.ArrayAdapter.ArrayAdapter()",1,1,1
"org.apache.struts2.views.xslt.ArrayAdapter.ArrayAdapter(AdapterFactory,AdapterNode,String,Object)",1,1,1
"org.apache.struts2.views.xslt.ArrayAdapter.buildChildAdapters()",1,3,3
"org.apache.struts2.views.xslt.BeanAdapter.BeanAdapter()",1,1,1
"org.apache.struts2.views.xslt.BeanAdapter.BeanAdapter(AdapterFactory,AdapterNode,String,Object)",1,1,1
"org.apache.struts2.views.xslt.BeanAdapter.buildChildAdapters()",4,7,8
"org.apache.struts2.views.xslt.BeanAdapter.getChildNodes()",1,3,3
"org.apache.struts2.views.xslt.BeanAdapter.getPropertyDescriptors(Object)",1,3,4
"org.apache.struts2.views.xslt.BeanAdapter.getTagName()",1,1,1
"org.apache.struts2.views.xslt.CollectionAdapter.CollectionAdapter()",1,1,1
"org.apache.struts2.views.xslt.CollectionAdapter.CollectionAdapter(AdapterFactory,AdapterNode,String,Object)",1,1,1
"org.apache.struts2.views.xslt.CollectionAdapter.buildChildAdapters()",1,4,4
"org.apache.struts2.views.xslt.MapAdapter.EntryElement.EntryElement(AdapterFactory,AdapterNode,String,Object,Object)",1,1,1
"org.apache.struts2.views.xslt.MapAdapter.EntryElement.buildChildAdapters()",1,1,1
"org.apache.struts2.views.xslt.MapAdapter.MapAdapter()",1,1,1
"org.apache.struts2.views.xslt.MapAdapter.MapAdapter(AdapterFactory,AdapterNode,String,Map)",1,1,1
"org.apache.struts2.views.xslt.MapAdapter.buildChildAdapters()",1,2,2
"org.apache.struts2.views.xslt.MapAdapter.map()",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.ProxyAttrAdapter(AdapterFactory,AdapterNode,Attr)",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.attr()",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.getName()",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.getOwnerElement()",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.getSchemaTypeInfo()",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.getSpecified()",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.getValue()",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.isId()",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.setValue(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyAttrAdapter.toString()",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.ProxyElementAdapter(AdapterFactory,AdapterNode,Element)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.buildChildAdapters()",1,3,3
"org.apache.struts2.views.xslt.ProxyElementAdapter.element()",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.getAttribute(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.getAttributeNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.getAttributeNode(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.getAttributeNodeNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.getElementsByTagName(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.getElementsByTagNameNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.getSchemaTypeInfo()",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.getTagName()",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.hasAttribute(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.hasAttributeNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.removeAttribute(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.removeAttributeNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.removeAttributeNode(Attr)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.setAttribute(String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.setAttributeNS(String,String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.setAttributeNode(Attr)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.setAttributeNodeNS(Attr)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.setIdAttribute(String,boolean)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.setIdAttributeNS(String,String,boolean)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.setIdAttributeNode(Attr,boolean)",1,1,1
"org.apache.struts2.views.xslt.ProxyElementAdapter.toString()",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.ProxyNamedNodeMap(AdapterFactory,AdapterNode,NamedNodeMap)",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.getLength()",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.getNamedItem(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.getNamedItemNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.item(int)",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.removeNamedItem(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.removeNamedItemNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.setNamedItem(Node)",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.setNamedItemNS(Node)",1,1,1
"org.apache.struts2.views.xslt.ProxyNamedNodeMap.wrap(Node)",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.ProxyNodeAdapter(AdapterFactory,AdapterNode,Node)",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.getAttributes()",1,2,2
"org.apache.struts2.views.xslt.ProxyNodeAdapter.getLocalName()",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.getNamespaceURI()",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.getNodeName()",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.getNodeType()",1,2,2
"org.apache.struts2.views.xslt.ProxyNodeAdapter.getNodeValue()",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.getPrefix()",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.hasAttributes()",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.hasChildNodes()",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.isSupported(String,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.node()",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.toString()",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.wrap(NamedNodeMap)",1,1,1
"org.apache.struts2.views.xslt.ProxyNodeAdapter.wrap(Node)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.ProxyTextNodeAdapter(AdapterFactory,AdapterNode,Text)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.appendData(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.deleteData(int,int)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.getData()",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.getLength()",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.getWholeText()",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.insertData(int,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.isElementContentWhitespace()",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.replaceData(int,int,String)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.replaceWholeText(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.setData(String)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.splitText(int)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.substringData(int,int)",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.text()",1,1,1
"org.apache.struts2.views.xslt.ProxyTextNodeAdapter.toString()",1,1,1
"org.apache.struts2.views.xslt.ServletURIResolver.ServletURIResolver(ServletContext)",1,1,1
"org.apache.struts2.views.xslt.ServletURIResolver.resolve(String,String)",3,2,3
"org.apache.struts2.views.xslt.SimpleAdapterDocument.SimpleAdapterDocument(AdapterFactory,AdapterNode,String,Object)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.adoptNode(Node)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createAttribute(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createAttributeNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createCDATASection(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createComment(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createDocumentFragment()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createElement(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createElementNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createEntityReference(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createProcessingInstruction(String,String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.createTextNode(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getChildAdapters()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getChildAfter(Node)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getChildBefore(Node)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getChildNodes()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getDoctype()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getDocumentElement()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getDocumentURI()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getDomConfig()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getElementById(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getElementsByTagName(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getElementsByTagNameNS(String,String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getFirstChild()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getImplementation()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getInputEncoding()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getLastChild()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getNodeName()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getNodeType()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getRootElement()",3,1,3
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getStrictErrorChecking()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getXmlEncoding()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getXmlStandalone()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.getXmlVersion()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.hasChildNodes()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.importNode(Node,boolean)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.normalizeDocument()",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.renameNode(Node,String,String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.setDocumentURI(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.setPropertyValue(Object)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.setStrictErrorChecking(boolean)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.setXmlStandalone(boolean)",1,1,1
"org.apache.struts2.views.xslt.SimpleAdapterDocument.setXmlVersion(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleNodeList.SimpleNodeList(List<Node>)",1,1,1
"org.apache.struts2.views.xslt.SimpleNodeList.getLength()",1,2,2
"org.apache.struts2.views.xslt.SimpleNodeList.item(int)",1,1,1
"org.apache.struts2.views.xslt.SimpleNodeList.toString()",1,2,2
"org.apache.struts2.views.xslt.SimpleTextNode.SimpleTextNode(AdapterFactory,AdapterNode,String,Object)",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.appendData(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.deleteData(int,int)",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.getData()",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.getLength()",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.getNodeName()",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.getNodeType()",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.getNodeValue()",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.getStringValue()",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.getWholeText()",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.insertData(int,String)",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.isElementContentWhitespace()",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.replaceData(int,int,String)",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.replaceWholeText(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.setData(String)",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.splitText(int)",1,1,1
"org.apache.struts2.views.xslt.SimpleTextNode.substringData(int,int)",1,1,1
"org.apache.struts2.views.xslt.StringAdapter.StringAdapter()",1,1,1
"org.apache.struts2.views.xslt.StringAdapter.StringAdapter(AdapterFactory,AdapterNode,String,String)",1,1,1
"org.apache.struts2.views.xslt.StringAdapter.buildChildAdapters()",1,2,2
"org.apache.struts2.views.xslt.StringAdapter.getParseStringAsXML()",1,1,1
"org.apache.struts2.views.xslt.StringAdapter.getStringValue()",1,1,1
"org.apache.struts2.views.xslt.StringAdapter.setParseStringAsXML(boolean)",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.XSLTResult()",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.XSLTResult(String)",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.execute(ActionInvocation)",1,7,8
"org.apache.struts2.views.xslt.XSLTResult.getAdapterFactory()",1,1,2
"org.apache.struts2.views.xslt.XSLTResult.getDOMSourceForStack(Object)",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.getEncoding()",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.getExposedValue()",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.getStatus()",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.getStylesheetLocation()",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.getTemplates(String)",4,2,6
"org.apache.struts2.views.xslt.XSLTResult.getURIResolver()",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.setAdapterFactory(AdapterFactory)",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.setEncoding(String)",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.setExposedValue(String)",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.setNoCache(String)",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.setParse(boolean)",1,1,1
"org.apache.struts2.views.xslt.XSLTResult.setStatus(String)",1,2,2
"org.apache.struts2.views.xslt.XSLTResult.setStylesheetLocation(String)",2,1,2

