Method,ev(G),iv(G),v(G)
"net.n3.nanoxml.CDATAReader.CDATAReader(IXMLReader)",1,1,1
"net.n3.nanoxml.CDATAReader.close()",5,5,6
"net.n3.nanoxml.CDATAReader.finalize()",1,1,1
"net.n3.nanoxml.CDATAReader.read(char[],int,int)",6,5,9
"net.n3.nanoxml.ContentReader.ContentReader(IXMLReader,IXMLEntityResolver,String)",1,1,1
"net.n3.nanoxml.ContentReader.close()",4,8,8
"net.n3.nanoxml.ContentReader.finalize()",1,1,1
"net.n3.nanoxml.ContentReader.read(char[],int,int)",6,8,10
"net.n3.nanoxml.NonValidator.NonValidator()",1,1,1
"net.n3.nanoxml.NonValidator.PCDataAdded(String,int)",1,1,1
"net.n3.nanoxml.NonValidator.attributeAdded(String,String,String,int)",1,2,2
"net.n3.nanoxml.NonValidator.elementAttributesProcessed(String,Properties,String,int)",1,2,2
"net.n3.nanoxml.NonValidator.elementEnded(String,String,int)",1,1,1
"net.n3.nanoxml.NonValidator.elementStarted(String,String,int)",1,2,2
"net.n3.nanoxml.NonValidator.finalize()",1,1,1
"net.n3.nanoxml.NonValidator.getParameterEntityResolver()",1,1,1
"net.n3.nanoxml.NonValidator.parseDTD(String,IXMLReader,IXMLEntityResolver,boolean)",7,8,11
"net.n3.nanoxml.NonValidator.processAttList(IXMLReader,IXMLEntityResolver)",5,15,15
"net.n3.nanoxml.NonValidator.processConditionalSection(IXMLReader,IXMLEntityResolver)",7,6,9
"net.n3.nanoxml.NonValidator.processElement(IXMLReader,IXMLEntityResolver)",3,3,7
"net.n3.nanoxml.NonValidator.processEntity(IXMLReader,IXMLEntityResolver)",5,7,10
"net.n3.nanoxml.NonValidator.processIgnoreSection(IXMLReader,IXMLEntityResolver)",3,3,3
"net.n3.nanoxml.NonValidator.setParameterEntityResolver(IXMLEntityResolver)",1,1,1
"net.n3.nanoxml.PIReader.PIReader(IXMLReader)",1,1,1
"net.n3.nanoxml.PIReader.close()",1,3,4
"net.n3.nanoxml.PIReader.finalize()",1,1,1
"net.n3.nanoxml.PIReader.read(char[],int,int)",5,3,7
"net.n3.nanoxml.StdXMLBuilder.StdXMLBuilder()",1,1,1
"net.n3.nanoxml.StdXMLBuilder.StdXMLBuilder(IXMLElement)",1,1,1
"net.n3.nanoxml.StdXMLBuilder.addAttribute(String,String,String,String,String)",2,3,4
"net.n3.nanoxml.StdXMLBuilder.addPCData(Reader,String,int)",3,4,6
"net.n3.nanoxml.StdXMLBuilder.elementAttributesProcessed(String,String,String)",1,1,1
"net.n3.nanoxml.StdXMLBuilder.endElement(String,String,String)",1,3,3
"net.n3.nanoxml.StdXMLBuilder.finalize()",1,1,1
"net.n3.nanoxml.StdXMLBuilder.getResult()",1,1,1
"net.n3.nanoxml.StdXMLBuilder.newProcessingInstruction(String,Reader)",1,1,1
"net.n3.nanoxml.StdXMLBuilder.startBuilding(String,int)",1,1,1
"net.n3.nanoxml.StdXMLBuilder.startElement(String,String,String,String,int)",1,2,3
"net.n3.nanoxml.StdXMLParser.StdXMLParser()",1,1,1
"net.n3.nanoxml.StdXMLParser.finalize()",1,1,1
"net.n3.nanoxml.StdXMLParser.getBuilder()",1,1,1
"net.n3.nanoxml.StdXMLParser.getReader()",1,1,1
"net.n3.nanoxml.StdXMLParser.getResolver()",1,1,1
"net.n3.nanoxml.StdXMLParser.getValidator()",1,1,1
"net.n3.nanoxml.StdXMLParser.parse()",1,2,3
"net.n3.nanoxml.StdXMLParser.processAttribute(ArrayList<String>,ArrayList<String>,ArrayList<String>)",1,2,2
"net.n3.nanoxml.StdXMLParser.processCDATA()",1,2,2
"net.n3.nanoxml.StdXMLParser.processDocType()",2,8,8
"net.n3.nanoxml.StdXMLParser.processElement(String,Properties)",11,24,27
"net.n3.nanoxml.StdXMLParser.processPI()",1,2,2
"net.n3.nanoxml.StdXMLParser.processSpecialTag(boolean)",2,4,6
"net.n3.nanoxml.StdXMLParser.scanData()",4,5,7
"net.n3.nanoxml.StdXMLParser.scanSomeTag(boolean,String,Properties)",2,3,5
"net.n3.nanoxml.StdXMLParser.setBuilder(IXMLBuilder)",1,1,1
"net.n3.nanoxml.StdXMLParser.setReader(IXMLReader)",1,1,1
"net.n3.nanoxml.StdXMLParser.setResolver(IXMLEntityResolver)",1,1,1
"net.n3.nanoxml.StdXMLParser.setValidator(IXMLValidator)",1,1,1
"net.n3.nanoxml.StdXMLReader.StdXMLReader(InputStream)",1,1,2
"net.n3.nanoxml.StdXMLReader.StdXMLReader(Reader)",1,1,2
"net.n3.nanoxml.StdXMLReader.StdXMLReader(String,String)",1,1,3
"net.n3.nanoxml.StdXMLReader.atEOF()",3,2,3
"net.n3.nanoxml.StdXMLReader.atEOFOfCurrentStream()",2,2,2
"net.n3.nanoxml.StdXMLReader.fileReader(String)",1,1,2
"net.n3.nanoxml.StdXMLReader.finalize()",1,1,1
"net.n3.nanoxml.StdXMLReader.getEncoding(String)",7,11,18
"net.n3.nanoxml.StdXMLReader.getLineNr()",3,3,3
"net.n3.nanoxml.StdXMLReader.getPublicID()",1,1,1
"net.n3.nanoxml.StdXMLReader.getStreamLevel()",1,1,1
"net.n3.nanoxml.StdXMLReader.getSystemID()",1,1,1
"net.n3.nanoxml.StdXMLReader.openStream(String,String)",2,4,5
"net.n3.nanoxml.StdXMLReader.read()",3,2,3
"net.n3.nanoxml.StdXMLReader.setPublicID(String)",1,1,1
"net.n3.nanoxml.StdXMLReader.setSystemID(String)",1,1,1
"net.n3.nanoxml.StdXMLReader.startNewStream(Reader)",1,1,1
"net.n3.nanoxml.StdXMLReader.startNewStream(Reader,boolean)",1,1,2
"net.n3.nanoxml.StdXMLReader.stream2reader(InputStream,StringBuffer)",3,5,11
"net.n3.nanoxml.StdXMLReader.stringReader(String)",1,1,1
"net.n3.nanoxml.StdXMLReader.unread(char)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.PCDataAdded(String,int)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.ValidatorPlugin()",1,1,1
"net.n3.nanoxml.ValidatorPlugin.attributeAdded(String,String,String,int)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.elementAttributesProcessed(String,Properties,String,int)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.elementEnded(String,String,int)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.elementStarted(String,String,int)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.finalize()",1,1,1
"net.n3.nanoxml.ValidatorPlugin.getDelegate()",1,1,1
"net.n3.nanoxml.ValidatorPlugin.getParameterEntityResolver()",1,1,1
"net.n3.nanoxml.ValidatorPlugin.invalidAttributeValue(String,int,String,String,String)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.missingAttribute(String,int,String,String)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.missingElement(String,int,String,String)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.missingPCData(String,int,String)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.parseDTD(String,IXMLReader,IXMLEntityResolver,boolean)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.setDelegate(IXMLValidator)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.setParameterEntityResolver(IXMLEntityResolver)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.unexpectedAttribute(String,int,String,String)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.unexpectedElement(String,int,String,String)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.unexpectedPCData(String,int,String)",1,1,1
"net.n3.nanoxml.ValidatorPlugin.validationError(String,int,String,String,String,String)",1,1,1
"net.n3.nanoxml.XMLAttribute.XMLAttribute(String,String,String,String,String)",1,1,1
"net.n3.nanoxml.XMLAttribute.getFullName()",1,1,1
"net.n3.nanoxml.XMLAttribute.getName()",1,1,1
"net.n3.nanoxml.XMLAttribute.getNamespace()",1,1,1
"net.n3.nanoxml.XMLAttribute.getType()",1,1,1
"net.n3.nanoxml.XMLAttribute.getValue()",1,1,1
"net.n3.nanoxml.XMLAttribute.setValue(String)",1,1,1
"net.n3.nanoxml.XMLElement.XMLElement()",1,1,1
"net.n3.nanoxml.XMLElement.XMLElement(String)",1,1,1
"net.n3.nanoxml.XMLElement.XMLElement(String,String)",1,1,1
"net.n3.nanoxml.XMLElement.XMLElement(String,String,String,int)",1,3,3
"net.n3.nanoxml.XMLElement.XMLElement(String,String,int)",1,1,1
"net.n3.nanoxml.XMLElement.addChild(IXMLElement)",4,4,5
"net.n3.nanoxml.XMLElement.createElement(String)",1,1,1
"net.n3.nanoxml.XMLElement.createElement(String,String)",1,1,1
"net.n3.nanoxml.XMLElement.createElement(String,String,String,int)",1,1,1
"net.n3.nanoxml.XMLElement.createElement(String,String,int)",1,1,1
"net.n3.nanoxml.XMLElement.createPCDataElement()",1,1,1
"net.n3.nanoxml.XMLElement.dispose()",1,3,3
"net.n3.nanoxml.XMLElement.equals(Object)",1,1,2
"net.n3.nanoxml.XMLElement.equalsXMLElement(IXMLElement)",10,3,10
"net.n3.nanoxml.XMLElement.findAttribute(String)",3,2,3
"net.n3.nanoxml.XMLElement.findAttribute(String,String)",3,3,4
"net.n3.nanoxml.XMLElement.getAttribute(String)",1,1,1
"net.n3.nanoxml.XMLElement.getAttribute(String,String)",2,2,2
"net.n3.nanoxml.XMLElement.getAttribute(String,String,Map<String, T>,String)",2,3,3
"net.n3.nanoxml.XMLElement.getAttribute(String,String,String)",2,2,2
"net.n3.nanoxml.XMLElement.getAttribute(String,String,int)",1,1,1
"net.n3.nanoxml.XMLElement.getAttribute(String,int)",1,1,1
"net.n3.nanoxml.XMLElement.getAttributeCount()",1,1,1
"net.n3.nanoxml.XMLElement.getAttributeNamespace(String)",2,2,2
"net.n3.nanoxml.XMLElement.getAttributeType(String)",2,2,2
"net.n3.nanoxml.XMLElement.getAttributeType(String,String)",2,2,2
"net.n3.nanoxml.XMLElement.getAttributes()",1,2,2
"net.n3.nanoxml.XMLElement.getAttributesInNamespace(String)",1,5,5
"net.n3.nanoxml.XMLElement.getChildAtIndex(int)",1,1,1
"net.n3.nanoxml.XMLElement.getChildren()",1,1,1
"net.n3.nanoxml.XMLElement.getChildrenCount()",1,1,1
"net.n3.nanoxml.XMLElement.getChildrenNamed(String)",1,4,4
"net.n3.nanoxml.XMLElement.getChildrenNamed(String,String)",1,5,5
"net.n3.nanoxml.XMLElement.getContent()",1,1,1
"net.n3.nanoxml.XMLElement.getDoubleAttribute(String,String,double)",2,2,3
"net.n3.nanoxml.XMLElement.getFirstChildNamed(String)",3,3,4
"net.n3.nanoxml.XMLElement.getFirstChildNamed(String,String)",3,4,5
"net.n3.nanoxml.XMLElement.getFullName()",1,1,1
"net.n3.nanoxml.XMLElement.getLineNr()",1,1,1
"net.n3.nanoxml.XMLElement.getName()",1,1,1
"net.n3.nanoxml.XMLElement.getNamespace()",1,1,1
"net.n3.nanoxml.XMLElement.getParent()",1,1,1
"net.n3.nanoxml.XMLElement.getSystemID()",1,1,1
"net.n3.nanoxml.XMLElement.hasAttribute(String)",1,1,1
"net.n3.nanoxml.XMLElement.hasAttribute(String,String)",1,1,1
"net.n3.nanoxml.XMLElement.hasChildren()",1,1,1
"net.n3.nanoxml.XMLElement.hashCode()",1,4,4
"net.n3.nanoxml.XMLElement.insertChild(IXMLElement,int)",4,4,5
"net.n3.nanoxml.XMLElement.isLeaf()",1,1,1
"net.n3.nanoxml.XMLElement.iterableAttributeNames()",1,2,2
"net.n3.nanoxml.XMLElement.iterableChildren()",1,1,1
"net.n3.nanoxml.XMLElement.removeAttribute(String)",3,3,3
"net.n3.nanoxml.XMLElement.removeAttribute(String,String)",3,4,4
"net.n3.nanoxml.XMLElement.removeChild(IXMLElement)",2,1,2
"net.n3.nanoxml.XMLElement.removeChildAtIndex(int)",1,1,1
"net.n3.nanoxml.XMLElement.setAttribute(String,String)",1,2,2
"net.n3.nanoxml.XMLElement.setAttribute(String,String,String)",1,2,2
"net.n3.nanoxml.XMLElement.setContent(String)",1,1,1
"net.n3.nanoxml.XMLElement.setName(String)",1,1,1
"net.n3.nanoxml.XMLElement.setName(String,String)",1,2,3
"net.n3.nanoxml.XMLElement.toString()",1,2,2
"net.n3.nanoxml.XMLEntityResolver.XMLEntityResolver()",1,1,1
"net.n3.nanoxml.XMLEntityResolver.addExternalEntity(String,String,String)",1,2,2
"net.n3.nanoxml.XMLEntityResolver.addInternalEntity(String,String)",1,2,2
"net.n3.nanoxml.XMLEntityResolver.finalize()",1,1,1
"net.n3.nanoxml.XMLEntityResolver.getEntity(IXMLReader,String)",3,3,3
"net.n3.nanoxml.XMLEntityResolver.isExternalEntity(String)",1,1,1
"net.n3.nanoxml.XMLEntityResolver.openExternalEntity(IXMLReader,String,String)",1,2,2
"net.n3.nanoxml.XMLException.XMLException(Exception)",1,1,1
"net.n3.nanoxml.XMLException.XMLException(String)",1,1,1
"net.n3.nanoxml.XMLException.XMLException(String,int,Exception)",1,1,1
"net.n3.nanoxml.XMLException.XMLException(String,int,Exception,String,boolean)",1,1,1
"net.n3.nanoxml.XMLException.XMLException(String,int,String)",1,1,1
"net.n3.nanoxml.XMLException.buildMessage(String,int,Exception,String,boolean)",1,1,5
"net.n3.nanoxml.XMLException.finalize()",1,1,1
"net.n3.nanoxml.XMLException.getException()",1,1,1
"net.n3.nanoxml.XMLException.getLineNr()",1,1,1
"net.n3.nanoxml.XMLException.getSystemID()",1,1,1
"net.n3.nanoxml.XMLException.printStackTrace()",1,2,2
"net.n3.nanoxml.XMLException.printStackTrace(PrintStream)",1,2,2
"net.n3.nanoxml.XMLException.printStackTrace(PrintWriter)",1,2,2
"net.n3.nanoxml.XMLException.toString()",1,1,1
"net.n3.nanoxml.XMLParseException.XMLParseException(String)",1,1,1
"net.n3.nanoxml.XMLParseException.XMLParseException(String,int,String)",1,1,1
"net.n3.nanoxml.XMLParserFactory.createDefaultXMLParser()",1,1,2
"net.n3.nanoxml.XMLParserFactory.createDefaultXMLParser(IXMLBuilder)",1,1,2
"net.n3.nanoxml.XMLParserFactory.createXMLParser(String,IXMLBuilder)",1,1,1
"net.n3.nanoxml.XMLUtil.checkLiteral(IXMLReader,String)",3,2,3
"net.n3.nanoxml.XMLUtil.errorClosingTagNotEmpty(String,int)",1,1,1
"net.n3.nanoxml.XMLUtil.errorExpectedInput(String,int,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorInvalidAttributeValue(String,int,String,String,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorInvalidEntity(String,int,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorInvalidInput(String,int,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorMissingAttribute(String,int,String,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorMissingElement(String,int,String,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorMissingPCData(String,int,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorUnexpectedAttribute(String,int,String,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorUnexpectedCDATA(String,int)",1,1,1
"net.n3.nanoxml.XMLUtil.errorUnexpectedElement(String,int,String,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorUnexpectedEntity(String,int,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorUnexpectedPCData(String,int,String)",1,1,1
"net.n3.nanoxml.XMLUtil.errorWrongClosingTag(String,int,String,String)",1,1,1
"net.n3.nanoxml.XMLUtil.processCharLiteral(String)",2,2,2
"net.n3.nanoxml.XMLUtil.processEntity(String,IXMLReader,IXMLEntityResolver)",1,2,2
"net.n3.nanoxml.XMLUtil.read(IXMLReader,char)",1,3,3
"net.n3.nanoxml.XMLUtil.readChar(IXMLReader,char)",1,2,2
"net.n3.nanoxml.XMLUtil.scanIdentifier(IXMLReader)",3,3,13
"net.n3.nanoxml.XMLUtil.scanPublicID(StringBuffer,IXMLReader)",2,1,2
"net.n3.nanoxml.XMLUtil.scanString(IXMLReader,char,IXMLEntityResolver)",6,10,13
"net.n3.nanoxml.XMLUtil.scanSystemID(IXMLReader)",2,1,2
"net.n3.nanoxml.XMLUtil.skipComment(IXMLReader)",4,4,7
"net.n3.nanoxml.XMLUtil.skipTag(IXMLReader)",2,3,4
"net.n3.nanoxml.XMLUtil.skipWhitespace(IXMLReader,StringBuffer)",4,5,10
"net.n3.nanoxml.XMLUtil.validationError(String,int,String,String,String,String)",1,1,1
"net.n3.nanoxml.XMLValidationException.XMLValidationException(int,String,int,String,String,String,String)",1,1,4
"net.n3.nanoxml.XMLValidationException.finalize()",1,1,1
"net.n3.nanoxml.XMLValidationException.getAttributeName()",1,1,1
"net.n3.nanoxml.XMLValidationException.getAttributeValue()",1,1,1
"net.n3.nanoxml.XMLValidationException.getElementName()",1,1,1
"net.n3.nanoxml.XMLWriter.XMLWriter(OutputStream)",1,1,1
"net.n3.nanoxml.XMLWriter.XMLWriter(Writer)",1,1,2
"net.n3.nanoxml.XMLWriter.finalize()",1,1,1
"net.n3.nanoxml.XMLWriter.write(IXMLElement)",1,1,1
"net.n3.nanoxml.XMLWriter.write(IXMLElement,boolean)",1,1,1
"net.n3.nanoxml.XMLWriter.write(IXMLElement,boolean,int)",1,1,1
"net.n3.nanoxml.XMLWriter.write(IXMLElement,boolean,int,boolean)",1,24,24
"net.n3.nanoxml.XMLWriter.writeEncoded(String)",2,4,11
"null.attributeChanged(FigureEvent)",1,1,1
"null.canRedo()",1,1,1
"null.canUndo()",1,1,1
"null.figureHandlesChanged(FigureEvent)",1,1,1
"null.focusGained(FocusEvent)",1,1,1
"null.focusLost(FocusEvent)",1,1,1
"null.propertyChange(PropertyChangeEvent)",1,3,3
"null.treeNodesChanged(TreeModelEvent)",1,1,1
"null.treeNodesInserted(TreeModelEvent)",1,1,1
"null.treeNodesRemoved(TreeModelEvent)",1,1,1
"null.treeStructureChanged(TreeModelEvent)",1,1,1
"null.windowGainedFocus(WindowEvent)",1,2,2
"null.windowLostFocus(WindowEvent)",1,1,1
"org.jhotdraw.app.AbstractApplication.AbstractApplication()",1,1,1
"org.jhotdraw.app.AbstractApplication.OpenRecentMenuHandler.OpenRecentMenuHandler(JMenu,View)",1,2,2
"org.jhotdraw.app.AbstractApplication.OpenRecentMenuHandler.dispose()",1,3,3
"org.jhotdraw.app.AbstractApplication.OpenRecentMenuHandler.propertyChange(PropertyChangeEvent)",1,2,2
"org.jhotdraw.app.AbstractApplication.OpenRecentMenuHandler.updateOpenRecentMenu()",1,9,9
"org.jhotdraw.app.AbstractApplication.add(View)",1,2,2
"org.jhotdraw.app.AbstractApplication.addAction(JMenu,Action)",1,3,3
"org.jhotdraw.app.AbstractApplication.addAction(JMenu,View,String)",1,1,1
"org.jhotdraw.app.AbstractApplication.addMenuItem(JMenu,JMenuItem)",1,3,3
"org.jhotdraw.app.AbstractApplication.addPalette(Window)",1,1,1
"org.jhotdraw.app.AbstractApplication.addRecentURI(URI)",1,4,4
"org.jhotdraw.app.AbstractApplication.addWindow(Window,View)",1,1,1
"org.jhotdraw.app.AbstractApplication.basicCreateView()",1,1,1
"org.jhotdraw.app.AbstractApplication.clearRecentURIs()",1,1,1
"org.jhotdraw.app.AbstractApplication.configure(String[])",1,1,1
"org.jhotdraw.app.AbstractApplication.createContainer()",1,1,1
"org.jhotdraw.app.AbstractApplication.createOpenRecentFileMenu(View)",1,2,3
"org.jhotdraw.app.AbstractApplication.createView()",1,1,1
"org.jhotdraw.app.AbstractApplication.destroy()",1,1,1
"org.jhotdraw.app.AbstractApplication.dispose(View)",1,1,1
"org.jhotdraw.app.AbstractApplication.getAction(View,String)",1,1,1
"org.jhotdraw.app.AbstractApplication.getActionMap(View)",1,2,2
"org.jhotdraw.app.AbstractApplication.getActiveView()",1,1,1
"org.jhotdraw.app.AbstractApplication.getCopyright()",1,1,1
"org.jhotdraw.app.AbstractApplication.getExportChooser(View)",2,4,4
"org.jhotdraw.app.AbstractApplication.getImportChooser(View)",2,4,4
"org.jhotdraw.app.AbstractApplication.getModel()",1,1,1
"org.jhotdraw.app.AbstractApplication.getName()",1,1,1
"org.jhotdraw.app.AbstractApplication.getOpenChooser(View)",2,6,8
"org.jhotdraw.app.AbstractApplication.getOpenURIsFromMainArgs(String[])",5,4,5
"org.jhotdraw.app.AbstractApplication.getRecentURIs()",1,1,1
"org.jhotdraw.app.AbstractApplication.getSaveChooser(View)",2,4,5
"org.jhotdraw.app.AbstractApplication.getVersion()",1,1,1
"org.jhotdraw.app.AbstractApplication.getViews()",1,1,1
"org.jhotdraw.app.AbstractApplication.init()",1,4,5
"org.jhotdraw.app.AbstractApplication.initLabels()",1,1,1
"org.jhotdraw.app.AbstractApplication.isEnabled()",1,1,1
"org.jhotdraw.app.AbstractApplication.launch(String[])",1,4,4
"org.jhotdraw.app.AbstractApplication.maybeAddSeparator(JMenu)",1,3,3
"org.jhotdraw.app.AbstractApplication.remove(View)",1,2,2
"org.jhotdraw.app.AbstractApplication.removePalette(Window)",1,1,1
"org.jhotdraw.app.AbstractApplication.removeTrailingSeparators(JMenu)",1,3,3
"org.jhotdraw.app.AbstractApplication.removeWindow(Window)",1,1,1
"org.jhotdraw.app.AbstractApplication.setActionMap(ActionMap)",1,1,1
"org.jhotdraw.app.AbstractApplication.setActiveView(View)",1,3,3
"org.jhotdraw.app.AbstractApplication.setEnabled(boolean)",1,1,1
"org.jhotdraw.app.AbstractApplication.setModel(ApplicationModel)",1,1,1
"org.jhotdraw.app.AbstractApplication.start(List<URI>)",1,3,3
"org.jhotdraw.app.AbstractApplication.stop()",1,2,2
"org.jhotdraw.app.AbstractApplication.views()",1,2,2
"org.jhotdraw.app.AbstractApplicationModel.AbstractApplicationModel()",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.createExportChooser(Application,View)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.createImportChooser(Application,View)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.createOpenChooser(Application,View)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.createOpenDirectoryChooser(Application,View)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.createSaveChooser(Application,View)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.createView()",1,2,2
"org.jhotdraw.app.AbstractApplicationModel.destroyApplication(Application)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.destroyView(Application,View)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.getCopyright()",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.getName()",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.getVersion()",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.getViewClass()",3,4,4
"org.jhotdraw.app.AbstractApplicationModel.initApplication(Application)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.initView(Application,View)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.isAllowMultipleViewsPerURI()",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.isOpenLastURIOnLaunch()",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.setAllowMultipleViewsForURI(boolean)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.setCopyright(String)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.setName(String)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.setOpenLastURIOnLaunch(boolean)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.setVersion(String)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.setViewClass(Class<?>)",1,1,1
"org.jhotdraw.app.AbstractApplicationModel.setViewClassName(String)",1,1,1
"org.jhotdraw.app.AbstractView.AbstractView()",1,1,1
"org.jhotdraw.app.AbstractView.activate()",1,1,1
"org.jhotdraw.app.AbstractView.addDisposable(Disposable)",1,1,2
"org.jhotdraw.app.AbstractView.canSaveTo(URI)",1,1,1
"org.jhotdraw.app.AbstractView.deactivate()",1,1,1
"org.jhotdraw.app.AbstractView.dispose()",1,4,4
"org.jhotdraw.app.AbstractView.execute(Runnable)",1,2,2
"org.jhotdraw.app.AbstractView.getApplication()",1,1,1
"org.jhotdraw.app.AbstractView.getComponent()",1,1,1
"org.jhotdraw.app.AbstractView.getMultipleOpenId()",1,1,1
"org.jhotdraw.app.AbstractView.getTitle()",1,1,1
"org.jhotdraw.app.AbstractView.getURI()",1,1,1
"org.jhotdraw.app.AbstractView.hasUnsavedChanges()",1,1,1
"org.jhotdraw.app.AbstractView.init()",1,1,1
"org.jhotdraw.app.AbstractView.initComponents()",1,1,1
"org.jhotdraw.app.AbstractView.isEmpty()",1,2,2
"org.jhotdraw.app.AbstractView.isShowing()",1,1,1
"org.jhotdraw.app.AbstractView.markChangesAsSaved()",1,1,1
"org.jhotdraw.app.AbstractView.removeDisposable(Disposable)",1,2,3
"org.jhotdraw.app.AbstractView.setApplication(Application)",1,1,1
"org.jhotdraw.app.AbstractView.setHasUnsavedChanges(boolean)",1,1,1
"org.jhotdraw.app.AbstractView.setMultipleOpenId(int)",1,1,1
"org.jhotdraw.app.AbstractView.setShowing(boolean)",1,1,1
"org.jhotdraw.app.AbstractView.setTitle(String)",1,1,1
"org.jhotdraw.app.AbstractView.setURI(URI)",1,2,3
"org.jhotdraw.app.AbstractView.start()",1,1,1
"org.jhotdraw.app.AbstractView.stop()",1,1,1
"org.jhotdraw.app.AppletApplication.AppletApplication(JApplet)",1,1,1
"org.jhotdraw.app.AppletApplication.createEditMenu(View)",1,1,1
"org.jhotdraw.app.AppletApplication.createFileMenu(View)",1,1,1
"org.jhotdraw.app.AppletApplication.createHelpMenu(View)",1,1,1
"org.jhotdraw.app.AppletApplication.createViewActionMap(View)",1,1,1
"org.jhotdraw.app.AppletApplication.createViewMenu(View)",1,1,1
"org.jhotdraw.app.AppletApplication.createWindowMenu(View)",1,1,1
"org.jhotdraw.app.AppletApplication.getActiveView()",1,1,1
"org.jhotdraw.app.AppletApplication.getComponent()",1,1,1
"org.jhotdraw.app.AppletApplication.hide(View)",1,1,1
"org.jhotdraw.app.AppletApplication.init()",1,1,1
"org.jhotdraw.app.AppletApplication.isSharingToolsAmongViews()",1,1,1
"org.jhotdraw.app.AppletApplication.show(View)",1,1,1
"org.jhotdraw.app.CrossPlatformApplication.init()",1,1,1
"org.jhotdraw.app.CrossPlatformApplication.initLookAndFeel()",1,3,3
"org.jhotdraw.app.DefaultApplicationModel.createActionMap(Application,View)",1,1,1
"org.jhotdraw.app.DefaultApplicationModel.createMenuBuilder()",1,1,1
"org.jhotdraw.app.DefaultApplicationModel.createToolBars(Application,View)",1,1,1
"org.jhotdraw.app.DefaultApplicationModel.getMenuBuilder()",1,2,2
"org.jhotdraw.app.DefaultApplicationModel.initView(Application,View)",1,1,1
"org.jhotdraw.app.DefaultApplicationModel.setMenuBuilder(MenuBuilder)",1,1,1
"org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addAboutItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addClearFileItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addClipboardItems(JMenu,Application,View)",1,6,6
"org.jhotdraw.app.DefaultMenuBuilder.addCloseFileItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addExitItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addExportFileItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addFindItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addHelpItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.DefaultMenuBuilder.addLoadFileItems(JMenu,Application,View)",1,3,3
"org.jhotdraw.app.DefaultMenuBuilder.addNewFileItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addNewWindowItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addOpenFileItems(JMenu,Application,View)",1,3,3
"org.jhotdraw.app.DefaultMenuBuilder.addOtherEditItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.DefaultMenuBuilder.addOtherFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.DefaultMenuBuilder.addOtherMenus(List<JMenu>,Application,View)",1,1,1
"org.jhotdraw.app.DefaultMenuBuilder.addOtherViewItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.DefaultMenuBuilder.addOtherWindowItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.DefaultMenuBuilder.addPreferencesItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addPrintFileItems(JMenu,Application,View)",1,2,2
"org.jhotdraw.app.DefaultMenuBuilder.addSaveFileItems(JMenu,Application,View)",1,3,3
"org.jhotdraw.app.DefaultMenuBuilder.addSelectionItems(JMenu,Application,View)",1,3,3
"org.jhotdraw.app.DefaultMenuBuilder.addUndoItems(JMenu,Application,View)",1,3,3
"org.jhotdraw.app.DefaultMenuBuilder.isSuppressIcons()",1,1,1
"org.jhotdraw.app.DefaultMenuBuilder.setSuppressIcons(boolean)",1,1,1
"org.jhotdraw.app.EmptyApplicationModel.createActionMap(Application,View)",1,1,1
"org.jhotdraw.app.EmptyApplicationModel.createToolBars(Application,View)",1,1,1
"org.jhotdraw.app.EmptyApplicationModel.getMenuBuilder()",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addAboutItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addClearFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addClipboardItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addCloseFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addExitItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addExportFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addFindItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addHelpItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addLoadFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addNewFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addNewWindowItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addOpenFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addOtherEditItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addOtherFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addOtherMenus(List<JMenu>,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addOtherViewItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addOtherWindowItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addPreferencesItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addPrintFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addSaveFileItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addSelectionItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.EmptyMenuBuilder.addUndoItems(JMenu,Application,View)",1,1,1
"org.jhotdraw.app.MDIApplication.DropFileTransferHandler.canImport(JComponent,DataFlavor[])",4,2,4
"org.jhotdraw.app.MDIApplication.DropFileTransferHandler.importData(JComponent,Transferable)",2,2,5
"org.jhotdraw.app.MDIApplication.MDIApplication()",1,1,1
"org.jhotdraw.app.MDIApplication.WindowMenuHandler.WindowMenuHandler(JMenu,View)",1,1,1
"org.jhotdraw.app.MDIApplication.WindowMenuHandler.propertyChange(PropertyChangeEvent)",1,2,3
"org.jhotdraw.app.MDIApplication.WindowMenuHandler.updateWindowMenu()",1,5,5
"org.jhotdraw.app.MDIApplication.configure(String[])",1,1,1
"org.jhotdraw.app.MDIApplication.createEditMenu(View)",1,1,2
"org.jhotdraw.app.MDIApplication.createFileMenu(View)",1,5,6
"org.jhotdraw.app.MDIApplication.createHelpMenu(View)",1,1,2
"org.jhotdraw.app.MDIApplication.createMenuBar(View)",8,17,18
"org.jhotdraw.app.MDIApplication.createModelActionMap(ApplicationModel)",1,1,1
"org.jhotdraw.app.MDIApplication.createViewActionMap(View)",1,1,1
"org.jhotdraw.app.MDIApplication.createViewMenu(View)",1,1,2
"org.jhotdraw.app.MDIApplication.createWindowMenu(View)",1,4,5
"org.jhotdraw.app.MDIApplication.getComponent()",1,1,1
"org.jhotdraw.app.MDIApplication.hide(View)",1,3,3
"org.jhotdraw.app.MDIApplication.init()",1,2,2
"org.jhotdraw.app.MDIApplication.initLookAndFeel()",1,3,3
"org.jhotdraw.app.MDIApplication.isSharingToolsAmongViews()",1,1,1
"org.jhotdraw.app.MDIApplication.launch(String[])",1,1,1
"org.jhotdraw.app.MDIApplication.show(View)",5,12,15
"org.jhotdraw.app.MDIApplication.updateViewTitle(View,JInternalFrame)",1,2,3
"org.jhotdraw.app.MDIApplication.wrapDesktopPane(Component,LinkedList<Action>)",1,3,3
"org.jhotdraw.app.OSXApplication.FrameHandler.FrameHandler(JFrame,View)",1,1,1
"org.jhotdraw.app.OSXApplication.FrameHandler.dispose()",1,1,1
"org.jhotdraw.app.OSXApplication.FrameHandler.propertyChange(PropertyChangeEvent)",1,4,4
"org.jhotdraw.app.OSXApplication.FrameHandler.windowClosed(WindowEvent)",1,1,1
"org.jhotdraw.app.OSXApplication.FrameHandler.windowClosing(WindowEvent)",1,1,1
"org.jhotdraw.app.OSXApplication.FrameHandler.windowDeiconified(WindowEvent)",1,1,1
"org.jhotdraw.app.OSXApplication.FrameHandler.windowGainedFocus(WindowEvent)",1,1,1
"org.jhotdraw.app.OSXApplication.FrameHandler.windowIconified(WindowEvent)",1,2,2
"org.jhotdraw.app.OSXApplication.OSXApplication()",1,1,1
"org.jhotdraw.app.OSXApplication.QuitHandler.handleQuit()",1,1,1
"org.jhotdraw.app.OSXApplication.WindowMenuHandler.WindowMenuHandler(JMenu,View)",1,2,2
"org.jhotdraw.app.OSXApplication.WindowMenuHandler.dispose()",1,1,1
"org.jhotdraw.app.OSXApplication.WindowMenuHandler.propertyChange(PropertyChangeEvent)",1,2,3
"org.jhotdraw.app.OSXApplication.WindowMenuHandler.updateWindowMenu()",1,5,5
"org.jhotdraw.app.OSXApplication.addPalette(Window)",1,1,1
"org.jhotdraw.app.OSXApplication.addWindow(Window,View)",1,2,3
"org.jhotdraw.app.OSXApplication.configure(String[])",1,1,1
"org.jhotdraw.app.OSXApplication.createEditMenu(View)",1,1,2
"org.jhotdraw.app.OSXApplication.createFileMenu(View)",1,5,6
"org.jhotdraw.app.OSXApplication.createHelpMenu(View)",1,1,2
"org.jhotdraw.app.OSXApplication.createMenuBar(View)",8,17,18
"org.jhotdraw.app.OSXApplication.createModelActionMap(ApplicationModel)",1,1,1
"org.jhotdraw.app.OSXApplication.createViewActionMap(View)",1,1,1
"org.jhotdraw.app.OSXApplication.createViewMenu(View)",1,1,2
"org.jhotdraw.app.OSXApplication.createWindowMenu(View)",1,1,2
"org.jhotdraw.app.OSXApplication.dispose(View)",1,2,2
"org.jhotdraw.app.OSXApplication.getComponent()",1,2,2
"org.jhotdraw.app.OSXApplication.hide(View)",1,3,3
"org.jhotdraw.app.OSXApplication.init()",1,2,2
"org.jhotdraw.app.OSXApplication.initLookAndFeel()",1,3,3
"org.jhotdraw.app.OSXApplication.initPalettes(LinkedList<Action>)",1,4,4
"org.jhotdraw.app.OSXApplication.initScreenMenuBar()",1,8,8
"org.jhotdraw.app.OSXApplication.isSharingToolsAmongViews()",1,1,1
"org.jhotdraw.app.OSXApplication.launch(String[])",1,1,1
"org.jhotdraw.app.OSXApplication.removePalette(Window)",1,1,1
"org.jhotdraw.app.OSXApplication.removeWindow(Window)",1,8,8
"org.jhotdraw.app.OSXApplication.setScreenMenuBar(JMenuBar)",1,1,1
"org.jhotdraw.app.OSXApplication.show(View)",5,6,7
"org.jhotdraw.app.OSXApplication.updateViewTitle(View,JFrame)",1,5,5
"org.jhotdraw.app.SDIApplication.SDIApplication()",1,1,1
"org.jhotdraw.app.SDIApplication.configure(String[])",1,1,1
"org.jhotdraw.app.SDIApplication.createEditMenu(View)",1,1,2
"org.jhotdraw.app.SDIApplication.createFileMenu(View)",1,5,6
"org.jhotdraw.app.SDIApplication.createHelpMenu(View)",1,1,1
"org.jhotdraw.app.SDIApplication.createMenuBar(View)",8,17,18
"org.jhotdraw.app.SDIApplication.createModelActionMap(ApplicationModel)",1,1,1
"org.jhotdraw.app.SDIApplication.createViewActionMap(View)",1,1,1
"org.jhotdraw.app.SDIApplication.createViewMenu(View)",1,6,7
"org.jhotdraw.app.SDIApplication.createWindowMenu(View)",1,1,2
"org.jhotdraw.app.SDIApplication.dispose(View)",1,2,2
"org.jhotdraw.app.SDIApplication.getComponent()",1,2,2
"org.jhotdraw.app.SDIApplication.hide(View)",1,3,3
"org.jhotdraw.app.SDIApplication.init()",1,2,2
"org.jhotdraw.app.SDIApplication.initLookAndFeel()",1,3,3
"org.jhotdraw.app.SDIApplication.isSharingToolsAmongViews()",1,1,1
"org.jhotdraw.app.SDIApplication.launch(String[])",1,1,1
"org.jhotdraw.app.SDIApplication.remove(View)",1,2,2
"org.jhotdraw.app.SDIApplication.show(View)",5,10,11
"org.jhotdraw.app.SDIApplication.updateViewTitle(View,JFrame)",1,2,3
"org.jhotdraw.app.SDIApplication.wrapViewComponent(View)",1,3,3
"org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)",1,1,1
"org.jhotdraw.app.action.AbstractApplicationAction.createApplicationListener()",1,2,2
"org.jhotdraw.app.action.AbstractApplicationAction.dispose()",1,2,2
"org.jhotdraw.app.action.AbstractApplicationAction.getApplication()",1,1,1
"org.jhotdraw.app.action.AbstractApplicationAction.installApplicationListeners(Application)",1,2,2
"org.jhotdraw.app.action.AbstractApplicationAction.isEnabled()",1,3,3
"org.jhotdraw.app.action.AbstractApplicationAction.setEnabled(boolean)",1,3,3
"org.jhotdraw.app.action.AbstractApplicationAction.uninstallApplicationListeners(Application)",1,1,1
"org.jhotdraw.app.action.AbstractApplicationAction.updateApplicationEnabled()",1,1,1
"org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.AbstractSaveUnsavedChangesAction(Application,View)",1,1,1
"org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.actionPerformed(ActionEvent)",3,12,12
"org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.getChooser(View)",1,2,2
"org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.saveView(View)",1,6,6
"org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.saveViewToURI(View,URI,URIChooser)",1,3,4
"org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)",1,2,2
"org.jhotdraw.app.action.AbstractViewAction.getActiveView()",1,2,2
"org.jhotdraw.app.action.AbstractViewAction.getApplication()",1,1,1
"org.jhotdraw.app.action.AbstractViewAction.getPropertyName()",1,1,1
"org.jhotdraw.app.action.AbstractViewAction.installViewListeners(View)",1,1,1
"org.jhotdraw.app.action.AbstractViewAction.isEnabled()",1,1,1
"org.jhotdraw.app.action.AbstractViewAction.isMayCreateView()",1,1,1
"org.jhotdraw.app.action.AbstractViewAction.setEnabled(boolean)",1,5,5
"org.jhotdraw.app.action.AbstractViewAction.setMayCreateView(boolean)",1,1,1
"org.jhotdraw.app.action.AbstractViewAction.setPropertyName(String)",1,2,2
"org.jhotdraw.app.action.AbstractViewAction.uninstallViewListeners(View)",1,1,1
"org.jhotdraw.app.action.AbstractViewAction.updateEnabled()",1,1,1
"org.jhotdraw.app.action.AbstractViewAction.updateView()",1,1,1
"org.jhotdraw.app.action.AbstractViewAction.updateView(View,View)",1,4,4
"org.jhotdraw.app.action.ActionUtil.ActionUtil()",1,1,1
"org.jhotdraw.app.action.ActionUtil.configureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)",1,1,1
"org.jhotdraw.app.action.ActionUtil.unconfigureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)",1,1,1
"org.jhotdraw.app.action.app.AboutAction.AboutAction(Application)",1,1,1
"org.jhotdraw.app.action.app.AboutAction.actionPerformed(ActionEvent)",1,3,4
"org.jhotdraw.app.action.app.AbstractPreferencesAction.AbstractPreferencesAction(Application)",1,1,1
"org.jhotdraw.app.action.app.ExitAction.ExitAction(Application)",1,1,1
"org.jhotdraw.app.action.app.ExitAction.actionPerformed(ActionEvent)",4,19,21
"org.jhotdraw.app.action.app.ExitAction.doExit()",1,1,1
"org.jhotdraw.app.action.app.ExitAction.getChooser(View)",1,2,2
"org.jhotdraw.app.action.app.ExitAction.reviewChanges()",1,7,7
"org.jhotdraw.app.action.app.ExitAction.reviewNext()",1,5,6
"org.jhotdraw.app.action.app.ExitAction.saveChanges()",1,4,4
"org.jhotdraw.app.action.app.ExitAction.saveChangesAndReviewNext()",1,4,4
"org.jhotdraw.app.action.app.ExitAction.saveToFile(URI,URIChooser)",1,2,2
"org.jhotdraw.app.action.app.ExitAction.saveToFileAndReviewNext(URI,URIChooser)",1,2,2
"org.jhotdraw.app.action.app.OpenApplicationAction.OpenApplicationAction(Application)",1,1,1
"org.jhotdraw.app.action.app.OpenApplicationAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.app.action.app.OpenApplicationFileAction.OpenApplicationFileAction(Application)",1,1,1
"org.jhotdraw.app.action.app.OpenApplicationFileAction.actionPerformed(ActionEvent)",5,9,10
"org.jhotdraw.app.action.app.OpenApplicationFileAction.openView(View,URI)",2,8,10
"org.jhotdraw.app.action.app.PrintApplicationFileAction.PrintApplicationFileAction(Application)",1,1,1
"org.jhotdraw.app.action.app.PrintApplicationFileAction.actionPerformed(ActionEvent)",2,2,3
"org.jhotdraw.app.action.app.ReOpenApplicationAction.ReOpenApplicationAction(Application)",1,1,1
"org.jhotdraw.app.action.app.ReOpenApplicationAction.actionPerformed(ActionEvent)",1,5,5
"org.jhotdraw.app.action.edit.AbstractFindAction.AbstractFindAction(Application,View)",1,1,1
"org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)",1,4,4
"org.jhotdraw.app.action.edit.AbstractSelectionAction.updateEnabled()",1,4,4
"org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction()",1,1,1
"org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction(JComponent)",1,1,1
"org.jhotdraw.app.action.edit.ClearSelectionAction.actionPerformed(ActionEvent)",1,7,7
"org.jhotdraw.app.action.edit.ClearSelectionAction.updateEnabled()",1,2,2
"org.jhotdraw.app.action.edit.CopyAction.CopyAction()",1,1,1
"org.jhotdraw.app.action.edit.CopyAction.CopyAction(JComponent)",1,1,1
"org.jhotdraw.app.action.edit.CopyAction.actionPerformed(ActionEvent)",1,4,4
"org.jhotdraw.app.action.edit.CutAction.CutAction()",1,1,1
"org.jhotdraw.app.action.edit.CutAction.CutAction(JComponent)",1,1,1
"org.jhotdraw.app.action.edit.CutAction.actionPerformed(ActionEvent)",1,5,5
"org.jhotdraw.app.action.edit.DeleteAction.DeleteAction()",1,1,1
"org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent)",1,1,1
"org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent,String)",1,3,3
"org.jhotdraw.app.action.edit.DeleteAction.actionPerformed(ActionEvent)",1,6,6
"org.jhotdraw.app.action.edit.DeleteAction.deleteNextChar(ActionEvent)",1,6,7
"org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()",1,1,1
"org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction(JComponent)",1,1,1
"org.jhotdraw.app.action.edit.DuplicateAction.actionPerformed(ActionEvent)",1,6,6
"org.jhotdraw.app.action.edit.PasteAction.PasteAction()",1,1,1
"org.jhotdraw.app.action.edit.PasteAction.PasteAction(JComponent)",1,1,1
"org.jhotdraw.app.action.edit.PasteAction.actionPerformed(ActionEvent)",1,7,7
"org.jhotdraw.app.action.edit.PasteAction.updateEnabled()",1,2,2
"org.jhotdraw.app.action.edit.RedoAction.RedoAction(Application,View)",1,1,1
"org.jhotdraw.app.action.edit.RedoAction.actionPerformed(ActionEvent)",1,2,3
"org.jhotdraw.app.action.edit.RedoAction.getRealRedoAction()",1,2,2
"org.jhotdraw.app.action.edit.RedoAction.installViewListeners(View)",1,2,3
"org.jhotdraw.app.action.edit.RedoAction.uninstallViewListeners(View)",1,2,3
"org.jhotdraw.app.action.edit.RedoAction.updateEnabledState()",1,2,3
"org.jhotdraw.app.action.edit.RedoAction.updateView(View,View)",1,4,4
"org.jhotdraw.app.action.edit.RemoveAction.RemoveAction()",1,1,1
"org.jhotdraw.app.action.edit.RemoveAction.RemoveAction(JComponent)",1,1,1
"org.jhotdraw.app.action.edit.RemoveAction.RemoveAction(JComponent,String)",1,1,1
"org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()",1,1,1
"org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction(JComponent)",1,1,1
"org.jhotdraw.app.action.edit.SelectAllAction.actionPerformed(ActionEvent)",1,7,7
"org.jhotdraw.app.action.edit.SelectAllAction.updateEnabled()",1,2,2
"org.jhotdraw.app.action.edit.UndoAction.UndoAction(Application,View)",1,1,1
"org.jhotdraw.app.action.edit.UndoAction.actionPerformed(ActionEvent)",1,2,3
"org.jhotdraw.app.action.edit.UndoAction.getRealUndoAction()",1,2,2
"org.jhotdraw.app.action.edit.UndoAction.installViewListeners(View)",1,2,3
"org.jhotdraw.app.action.edit.UndoAction.uninstallViewListeners(View)",1,2,3
"org.jhotdraw.app.action.edit.UndoAction.updateEnabledState()",1,2,3
"org.jhotdraw.app.action.edit.UndoAction.updateView(View,View)",1,4,4
"org.jhotdraw.app.action.file.ClearFileAction.ClearFileAction(Application,View)",1,1,1
"org.jhotdraw.app.action.file.ClearFileAction.doIt(View)",1,1,1
"org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.ClearRecentFilesMenuAction(Application)",1,1,1
"org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.createApplicationListener()",1,2,2
"org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.installApplicationListeners(Application)",1,2,2
"org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.uninstallApplicationListeners(Application)",1,1,1
"org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.updateEnabled()",1,1,1
"org.jhotdraw.app.action.file.CloseFileAction.CloseFileAction(Application,View)",1,1,1
"org.jhotdraw.app.action.file.CloseFileAction.doIt(View)",1,3,3
"org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View)",1,1,1
"org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View,boolean)",1,1,1
"org.jhotdraw.app.action.file.ExportFileAction.actionPerformed(ActionEvent)",2,14,15
"org.jhotdraw.app.action.file.ExportFileAction.exportView(View,URI,URIChooser)",1,2,2
"org.jhotdraw.app.action.file.ExportFileAction.isProposeFileName()",1,1,1
"org.jhotdraw.app.action.file.ExportFileAction.setProposeFileName(boolean)",1,1,1
"org.jhotdraw.app.action.file.LoadDirectoryAction.LoadDirectoryAction(Application,View)",1,1,1
"org.jhotdraw.app.action.file.LoadDirectoryAction.getChooser(View)",1,1,1
"org.jhotdraw.app.action.file.LoadFileAction.LoadFileAction(Application,View)",1,1,1
"org.jhotdraw.app.action.file.LoadFileAction.doIt(View)",5,11,11
"org.jhotdraw.app.action.file.LoadFileAction.getChooser(View)",1,2,2
"org.jhotdraw.app.action.file.LoadFileAction.loadViewFromURI(View,URI,URIChooser)",1,1,2
"org.jhotdraw.app.action.file.LoadRecentFileAction.LoadRecentFileAction(Application,View,URI)",1,1,1
"org.jhotdraw.app.action.file.LoadRecentFileAction.doIt(View)",5,15,17
"org.jhotdraw.app.action.file.NewFileAction.NewFileAction(Application)",1,1,1
"org.jhotdraw.app.action.file.NewFileAction.NewFileAction(Application,String)",1,1,1
"org.jhotdraw.app.action.file.NewFileAction.actionPerformed(ActionEvent)",1,3,3
"org.jhotdraw.app.action.file.NewWindowAction.NewWindowAction(Application)",1,1,1
"org.jhotdraw.app.action.file.OpenDirectoryAction.OpenDirectoryAction(Application)",1,1,1
"org.jhotdraw.app.action.file.OpenDirectoryAction.getChooser(View)",1,1,1
"org.jhotdraw.app.action.file.OpenFileAction.OpenFileAction(Application)",1,1,1
"org.jhotdraw.app.action.file.OpenFileAction.actionPerformed(ActionEvent)",6,13,14
"org.jhotdraw.app.action.file.OpenFileAction.createDialog(URIChooser,Component)",1,5,6
"org.jhotdraw.app.action.file.OpenFileAction.getChooser(View)",1,1,1
"org.jhotdraw.app.action.file.OpenFileAction.openViewFromURI(View,URI,URIChooser)",2,7,9
"org.jhotdraw.app.action.file.OpenFileAction.showDialog(URIChooser,Component)",1,3,3
"org.jhotdraw.app.action.file.OpenRecentFileAction.OpenRecentFileAction(Application,URI)",1,1,1
"org.jhotdraw.app.action.file.OpenRecentFileAction.actionPerformed(ActionEvent)",5,9,10
"org.jhotdraw.app.action.file.OpenRecentFileAction.openView(View)",2,7,9
"org.jhotdraw.app.action.file.PrintFileAction.PrintFileAction(Application,View)",1,1,1
"org.jhotdraw.app.action.file.PrintFileAction.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.app.action.file.PrintFileAction.isEnabled()",1,2,2
"org.jhotdraw.app.action.file.PrintFileAction.printJava2D(PrintableView)",2,5,7
"org.jhotdraw.app.action.file.PrintFileAction.printJava2DAlternative(PrintableView)",2,4,5
"org.jhotdraw.app.action.file.PrintFileAction.printQuartz(PrintableView)",1,3,3
"org.jhotdraw.app.action.file.SaveFileAction.SaveFileAction(Application,View)",1,1,1
"org.jhotdraw.app.action.file.SaveFileAction.SaveFileAction(Application,View,boolean)",1,1,1
"org.jhotdraw.app.action.file.SaveFileAction.actionPerformed(ActionEvent)",6,14,15
"org.jhotdraw.app.action.file.SaveFileAction.getChooser(View)",1,2,2
"org.jhotdraw.app.action.file.SaveFileAction.saveViewToURI(View,URI,URIChooser)",1,7,8
"org.jhotdraw.app.action.file.SaveFileAsAction.SaveFileAsAction(Application,View)",1,1,1
"org.jhotdraw.app.action.view.ToggleViewPropertyAction.ToggleViewPropertyAction(Application,View,String)",1,1,1
"org.jhotdraw.app.action.view.ToggleViewPropertyAction.ToggleViewPropertyAction(Application,View,String,Class<?>,Object,Object)",2,1,4
"org.jhotdraw.app.action.view.ToggleViewPropertyAction.actionPerformed(ActionEvent)",1,5,6
"org.jhotdraw.app.action.view.ToggleViewPropertyAction.getCurrentValue()",2,3,3
"org.jhotdraw.app.action.view.ToggleViewPropertyAction.installViewListeners(View)",1,1,1
"org.jhotdraw.app.action.view.ToggleViewPropertyAction.uninstallViewListeners(View)",1,1,1
"org.jhotdraw.app.action.view.ToggleViewPropertyAction.updateView()",3,6,7
"org.jhotdraw.app.action.view.ViewPropertyAction.ViewPropertyAction(Application,View,String,Class<?>,Object)",1,1,3
"org.jhotdraw.app.action.view.ViewPropertyAction.ViewPropertyAction(Application,View,String,Object)",1,1,1
"org.jhotdraw.app.action.view.ViewPropertyAction.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.app.action.view.ViewPropertyAction.installViewListeners(View)",1,1,1
"org.jhotdraw.app.action.view.ViewPropertyAction.uninstallViewListeners(View)",1,1,1
"org.jhotdraw.app.action.view.ViewPropertyAction.updateSelectedState()",2,6,6
"org.jhotdraw.app.action.window.ArrangeWindowsAction.ArrangeWindowsAction(Arrangeable,Arrangement)",2,2,4
"org.jhotdraw.app.action.window.ArrangeWindowsAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.app.action.window.FocusWindowAction.FocusWindowAction(View)",1,3,3
"org.jhotdraw.app.action.window.FocusWindowAction.actionPerformed(ActionEvent)",1,3,4
"org.jhotdraw.app.action.window.FocusWindowAction.dispose()",1,1,1
"org.jhotdraw.app.action.window.FocusWindowAction.getFrame()",1,1,1
"org.jhotdraw.app.action.window.FocusWindowAction.getRootPaneContainer()",1,1,1
"org.jhotdraw.app.action.window.FocusWindowAction.getTitle()",1,4,5
"org.jhotdraw.app.action.window.FocusWindowAction.getValue(String)",2,3,3
"org.jhotdraw.app.action.window.FocusWindowAction.setView(View)",1,3,3
"org.jhotdraw.app.action.window.MaximizeWindowAction.MaximizeWindowAction(Application,View)",1,1,1
"org.jhotdraw.app.action.window.MaximizeWindowAction.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.app.action.window.MaximizeWindowAction.getFrame()",1,1,1
"org.jhotdraw.app.action.window.MinimizeWindowAction.MinimizeWindowAction(Application,View)",1,1,1
"org.jhotdraw.app.action.window.MinimizeWindowAction.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.app.action.window.MinimizeWindowAction.getFrame()",1,1,1
"org.jhotdraw.app.action.window.TogglePaletteAction.TogglePaletteAction(OSXApplication,Window,String)",1,1,1
"org.jhotdraw.app.action.window.TogglePaletteAction.actionPerformed(ActionEvent)",1,3,3
"org.jhotdraw.app.action.window.TogglePaletteAction.putValue(String,Object)",1,1,1
"org.jhotdraw.app.action.window.TogglePaletteAction.setPalette(Window)",1,4,4
"org.jhotdraw.app.action.window.ToggleToolBarAction.ToggleToolBarAction(JToolBar,String)",1,2,2
"org.jhotdraw.app.action.window.ToggleToolBarAction.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.app.action.window.ToggleToolBarAction.putValue(String,Object)",1,3,3
"org.jhotdraw.app.action.window.ToggleToolBarAction.setToolBar(JToolBar)",1,3,3
"org.jhotdraw.app.action.window.ToggleVisibleAction.ToggleVisibleAction(Component,String)",1,1,1
"org.jhotdraw.app.action.window.ToggleVisibleAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.app.osx.OSXAdapter.OSXAdapter(String,ActionListener)",1,1,1
"org.jhotdraw.app.osx.OSXAdapter.OSXAdapter(String,Object,Method)",1,1,1
"org.jhotdraw.app.osx.OSXAdapter.callTarget(Object)",3,2,3
"org.jhotdraw.app.osx.OSXAdapter.invoke(Object,Method,Object[])",1,2,2
"org.jhotdraw.app.osx.OSXAdapter.isCorrectMethod(Method,Object[])",1,2,2
"org.jhotdraw.app.osx.OSXAdapter.setAboutHandler(ActionListener)",1,3,3
"org.jhotdraw.app.osx.OSXAdapter.setApplicationEventHandled(Object,boolean)",1,3,3
"org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)",1,4,4
"org.jhotdraw.app.osx.OSXAdapter.setOpenApplicationHandler(ActionListener)",1,1,1
"org.jhotdraw.app.osx.OSXAdapter.setOpenFileHandler(ActionListener)",1,2,3
"org.jhotdraw.app.osx.OSXAdapter.setPreferencesHandler(ActionListener)",1,3,3
"org.jhotdraw.app.osx.OSXAdapter.setPrintFileHandler(ActionListener)",1,2,3
"org.jhotdraw.app.osx.OSXAdapter.setQuitHandler(ActionListener)",1,1,1
"org.jhotdraw.app.osx.OSXAdapter.setReOpenApplicationHandler(ActionListener)",1,1,1
"org.jhotdraw.app.osx.OSXPaletteHandler.OSXPaletteHandler(OSXApplication)",1,1,1
"org.jhotdraw.app.osx.OSXPaletteHandler.add(Window,View)",1,1,1
"org.jhotdraw.app.osx.OSXPaletteHandler.addPalette(Window)",1,1,1
"org.jhotdraw.app.osx.OSXPaletteHandler.addWindow(Window)",1,1,1
"org.jhotdraw.app.osx.OSXPaletteHandler.getPalettes()",1,1,1
"org.jhotdraw.app.osx.OSXPaletteHandler.isFocused(Window)",4,2,4
"org.jhotdraw.app.osx.OSXPaletteHandler.maybeHidePalettes()",6,7,9
"org.jhotdraw.app.osx.OSXPaletteHandler.remove(Window)",1,1,1
"org.jhotdraw.app.osx.OSXPaletteHandler.removePalette(Window)",1,1,1
"org.jhotdraw.app.osx.OSXPaletteHandler.removeWindow(Window)",1,1,1
"org.jhotdraw.app.osx.OSXPaletteHandler.showPalettes()",1,3,3
"org.jhotdraw.beans.AbstractBean.addPropertyChangeListener(PropertyChangeListener)",1,1,1
"org.jhotdraw.beans.AbstractBean.addPropertyChangeListener(String,PropertyChangeListener)",1,1,1
"org.jhotdraw.beans.AbstractBean.clone()",1,2,2
"org.jhotdraw.beans.AbstractBean.firePropertyChange(String,Object,Object)",1,1,1
"org.jhotdraw.beans.AbstractBean.firePropertyChange(String,boolean,boolean)",1,1,1
"org.jhotdraw.beans.AbstractBean.firePropertyChange(String,int,int)",1,1,1
"org.jhotdraw.beans.AbstractBean.getPropertyChangeListeners()",1,1,1
"org.jhotdraw.beans.AbstractBean.removePropertyChangeListener(PropertyChangeListener)",5,5,5
"org.jhotdraw.beans.AbstractBean.removePropertyChangeListener(String,PropertyChangeListener)",5,5,5
"org.jhotdraw.beans.BeansBinding.Handler.propertyChange(PropertyChangeEvent)",7,10,10
"org.jhotdraw.beans.BeansBinding.addPropertyChangeListener(Object,PropertyChangeListener)",1,2,2
"org.jhotdraw.beans.BeansBinding.bind(Object,String,Object,String)",1,1,1
"org.jhotdraw.beans.BeansBinding.getSourceReadMethod()",2,3,3
"org.jhotdraw.beans.BeansBinding.getSourceWriteMethod()",2,3,3
"org.jhotdraw.beans.BeansBinding.getTargetWriteMethod()",2,3,3
"org.jhotdraw.beans.BeansBinding.removePropertyChangeListener(Object,PropertyChangeListener)",1,2,2
"org.jhotdraw.beans.BeansBinding.setSource(Object,String)",1,3,3
"org.jhotdraw.beans.BeansBinding.setTarget(Object,String)",1,3,3
"org.jhotdraw.beans.BeansBinding.unbind()",1,1,1
"org.jhotdraw.beans.BeansBinding.updateTarget()",1,2,2
"org.jhotdraw.beans.WeakPropertyChangeListener.WeakPropertyChangeListener(PropertyChangeListener)",1,1,1
"org.jhotdraw.beans.WeakPropertyChangeListener.getTarget()",1,1,1
"org.jhotdraw.beans.WeakPropertyChangeListener.propertyChange(PropertyChangeEvent)",2,2,2
"org.jhotdraw.beans.WeakPropertyChangeListener.removeFromSource(PropertyChangeEvent)",1,2,2
"org.jhotdraw.beans.WeakPropertyChangeListener.toString()",1,1,1
"org.jhotdraw.color.AbstractColorSlidersModel.addChangeListener(ChangeListener)",1,1,2
"org.jhotdraw.color.AbstractColorSlidersModel.fireStateChanged()",1,3,3
"org.jhotdraw.color.AbstractColorSlidersModel.removeChangeListener(ChangeListener)",1,1,1
"org.jhotdraw.color.AbstractColorWheelImageProducer.AbstractColorWheelImageProducer(ColorSpace,int,int)",1,1,1
"org.jhotdraw.color.AbstractColorWheelImageProducer.getCenter()",1,1,1
"org.jhotdraw.color.AbstractColorWheelImageProducer.getColorLocation(Color)",1,1,1
"org.jhotdraw.color.AbstractColorWheelImageProducer.getRadius()",1,1,1
"org.jhotdraw.color.AbstractColorWheelImageProducer.needsGeneration()",1,1,1
"org.jhotdraw.color.AbstractColorWheelImageProducer.regenerateColorWheel()",1,2,2
"org.jhotdraw.color.AbstractColorWheelImageProducer.setAngularComponentIndex(int)",1,1,1
"org.jhotdraw.color.AbstractColorWheelImageProducer.setRadialComponentIndex(int)",1,1,1
"org.jhotdraw.color.AbstractColorWheelImageProducer.setVerticalComponentIndex(int)",1,1,1
"org.jhotdraw.color.AbstractColorWheelImageProducer.setVerticalValue(float)",1,1,2
"org.jhotdraw.color.AbstractHarmonicRule.getBaseIndex()",1,1,1
"org.jhotdraw.color.AbstractHarmonicRule.getDerivedIndices()",1,1,1
"org.jhotdraw.color.AbstractHarmonicRule.setBaseIndex()",1,1,1
"org.jhotdraw.color.AbstractHarmonicRule.setDerivedIndices(int...)",1,1,1
"org.jhotdraw.color.AbstractNamedColorSpace.AbstractNamedColorSpace(int,int)",1,1,1
"org.jhotdraw.color.AbstractNamedColorSpace.fromCIEXYZ(float[])",1,1,1
"org.jhotdraw.color.AbstractNamedColorSpace.fromCIEXYZ(float[],float[])",1,1,1
"org.jhotdraw.color.AbstractNamedColorSpace.fromRGB(float[])",1,1,1
"org.jhotdraw.color.AbstractNamedColorSpace.toCIEXYZ(float[])",1,1,1
"org.jhotdraw.color.AbstractNamedColorSpace.toCIEXYZ(float[],float[])",1,1,1
"org.jhotdraw.color.AbstractNamedColorSpace.toRGB(float[])",1,1,1
"org.jhotdraw.color.CIELABColorSpace.CIELABColorSpace()",1,1,1
"org.jhotdraw.color.CIELABColorSpace.fromCIEXYZ(float[],float[])",1,4,4
"org.jhotdraw.color.CIELABColorSpace.fromRGB(float[],float[])",1,1,1
"org.jhotdraw.color.CIELABColorSpace.getMaxValue(int)",3,2,3
"org.jhotdraw.color.CIELABColorSpace.getMinValue(int)",3,2,3
"org.jhotdraw.color.CIELABColorSpace.getName()",1,1,1
"org.jhotdraw.color.CIELABColorSpace.getName(int)",4,2,4
"org.jhotdraw.color.CIELABColorSpace.getOutsideGamutHandling()",1,1,1
"org.jhotdraw.color.CIELABColorSpace.main(String[])",1,1,1
"org.jhotdraw.color.CIELABColorSpace.setOutsideGamutHandling(OutsideGamutHandling)",1,1,1
"org.jhotdraw.color.CIELABColorSpace.toCIEXYZ(float[],float[])",1,1,4
"org.jhotdraw.color.CIELABColorSpace.toRGB(float[],float[])",2,5,5
"org.jhotdraw.color.CIELCHabColorSpace.CIELCHabColorSpace()",1,1,1
"org.jhotdraw.color.CIELCHabColorSpace.fromCIEXYZ(float[],float[])",1,4,4
"org.jhotdraw.color.CIELCHabColorSpace.fromRGB(float[],float[])",1,1,1
"org.jhotdraw.color.CIELCHabColorSpace.getMaxValue(int)",4,2,4
"org.jhotdraw.color.CIELCHabColorSpace.getMinValue(int)",4,2,4
"org.jhotdraw.color.CIELCHabColorSpace.getName()",1,1,1
"org.jhotdraw.color.CIELCHabColorSpace.getName(int)",4,2,4
"org.jhotdraw.color.CIELCHabColorSpace.isClampRGBValues()",1,1,1
"org.jhotdraw.color.CIELCHabColorSpace.main(String[])",1,1,1
"org.jhotdraw.color.CIELCHabColorSpace.setClampRGBValues(boolean)",1,1,1
"org.jhotdraw.color.CIELCHabColorSpace.toCIEXYZ(float[],float[])",1,1,4
"org.jhotdraw.color.CIELCHabColorSpace.toRGB(float[],float[])",1,5,5
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.CIEXYChromaticityDiagramImageProducer(int,int)",1,1,1
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.generateImage()",5,5,20
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.getColorAt(int,int)",1,1,1
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.getColorLocation(Color)",1,1,1
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.getColorLocation(float[])",1,1,1
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.getHeight()",1,1,1
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.getWidth()",1,1,1
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.needsGeneration()",1,1,1
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.regenerateDiagram()",1,2,2
"org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.toRGB(float[],float[])",2,5,5
"org.jhotdraw.color.CMYKGenericColorSpace.CMYKGenericColorSpace()",1,1,1
"org.jhotdraw.color.CMYKGenericColorSpace.getInstance()",2,3,3
"org.jhotdraw.color.CMYKNominalColorSpace.CMYKNominalColorSpace()",1,1,1
"org.jhotdraw.color.CMYKNominalColorSpace.equals(Object)",1,1,1
"org.jhotdraw.color.CMYKNominalColorSpace.fromRGB(float[],float[])",1,2,3
"org.jhotdraw.color.CMYKNominalColorSpace.getInstance()",1,1,2
"org.jhotdraw.color.CMYKNominalColorSpace.getMaxValue(int)",1,1,1
"org.jhotdraw.color.CMYKNominalColorSpace.getMinValue(int)",1,1,1
"org.jhotdraw.color.CMYKNominalColorSpace.getName()",1,1,1
"org.jhotdraw.color.CMYKNominalColorSpace.getName(int)",6,2,6
"org.jhotdraw.color.CMYKNominalColorSpace.hashCode()",1,1,1
"org.jhotdraw.color.CMYKNominalColorSpace.toRGB(float[],float[])",1,1,1
"org.jhotdraw.color.ColorListCellRenderer.ColorIcon.getIconHeight()",1,1,1
"org.jhotdraw.color.ColorListCellRenderer.ColorIcon.getIconWidth()",1,1,1
"org.jhotdraw.color.ColorListCellRenderer.ColorIcon.paintIcon(Component,Graphics,int,int)",1,2,2
"org.jhotdraw.color.ColorListCellRenderer.ColorIcon.setColor(Color)",1,1,1
"org.jhotdraw.color.ColorListCellRenderer.ColorListCellRenderer()",1,1,1
"org.jhotdraw.color.ColorListCellRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)",1,2,2
"org.jhotdraw.color.ColorSliderUI.CSUIPropertyChangeHandler.propertyChange(PropertyChangeEvent)",1,19,21
"org.jhotdraw.color.ColorSliderUI.ColorSliderUI(JSlider)",1,1,1
"org.jhotdraw.color.ColorSliderUI.TrackListener.mousePressed(MouseEvent)",3,4,6
"org.jhotdraw.color.ColorSliderUI.calculateThumbLocation()",1,1,2
"org.jhotdraw.color.ColorSliderUI.calculateTickRect()",1,2,4
"org.jhotdraw.color.ColorSliderUI.calculateTrackRect()",1,4,4
"org.jhotdraw.color.ColorSliderUI.createPropertyChangeListener(JSlider)",1,1,1
"org.jhotdraw.color.ColorSliderUI.createTrackListener(JSlider)",1,1,1
"org.jhotdraw.color.ColorSliderUI.createUI(JComponent)",1,3,3
"org.jhotdraw.color.ColorSliderUI.getMinimumHorizontalSize()",1,1,1
"org.jhotdraw.color.ColorSliderUI.getMinimumVerticalSize()",1,1,1
"org.jhotdraw.color.ColorSliderUI.getPreferredHorizontalSize()",1,1,1
"org.jhotdraw.color.ColorSliderUI.getPreferredSize(JComponent)",1,2,2
"org.jhotdraw.color.ColorSliderUI.getPreferredVerticalSize()",1,1,1
"org.jhotdraw.color.ColorSliderUI.getThumbIcon()",2,2,2
"org.jhotdraw.color.ColorSliderUI.getThumbSize()",1,1,1
"org.jhotdraw.color.ColorSliderUI.getTickLength()",1,1,1
"org.jhotdraw.color.ColorSliderUI.installDefaults(JSlider)",1,2,2
"org.jhotdraw.color.ColorSliderUI.paintColorTrack(Graphics,int,int,int,int,int)",1,9,9
"org.jhotdraw.color.ColorSliderUI.paintFocus(Graphics)",1,1,1
"org.jhotdraw.color.ColorSliderUI.paintMajorTickForHorizSlider(Graphics,Rectangle,int)",1,1,1
"org.jhotdraw.color.ColorSliderUI.paintMajorTickForVertSlider(Graphics,Rectangle,int)",1,1,1
"org.jhotdraw.color.ColorSliderUI.paintMinorTickForHorizSlider(Graphics,Rectangle,int)",1,1,1
"org.jhotdraw.color.ColorSliderUI.paintMinorTickForVertSlider(Graphics,Rectangle,int)",1,1,1
"org.jhotdraw.color.ColorSliderUI.paintThumb(Graphics)",1,1,1
"org.jhotdraw.color.ColorSliderUI.paintTicks(Graphics)",1,14,14
"org.jhotdraw.color.ColorSliderUI.paintTrack(Graphics)",1,1,2
"org.jhotdraw.color.ColorSquareImageProducer.ColorSquareImageProducer(ColorSpace,int,int)",1,1,1
"org.jhotdraw.color.ColorSquareImageProducer.ColorSquareImageProducer(ColorSpace,int,int,boolean,boolean)",1,1,1
"org.jhotdraw.color.ColorSquareImageProducer.generateColorWheel()",1,4,4
"org.jhotdraw.color.ColorSquareImageProducer.generateLookupTables()",1,1,5
"org.jhotdraw.color.ColorSquareImageProducer.getColorAt(int,int)",1,1,3
"org.jhotdraw.color.ColorSquareImageProducer.getColorLocation(float[])",1,1,3
"org.jhotdraw.color.ColorSquareImageProducer.needsGeneration()",1,1,1
"org.jhotdraw.color.ColorSquareImageProducer.regenerateColorWheel()",1,2,2
"org.jhotdraw.color.ColorTrackImageProducer.ColorTrackImageProducer(int,int,int,boolean)",1,1,2
"org.jhotdraw.color.ColorTrackImageProducer.componentChanged(int)",1,1,1
"org.jhotdraw.color.ColorTrackImageProducer.generateColorTrack()",1,2,2
"org.jhotdraw.color.ColorTrackImageProducer.generateHorizontalColorTrack()",1,3,4
"org.jhotdraw.color.ColorTrackImageProducer.generateVerticalColorTrack()",1,2,5
"org.jhotdraw.color.ColorTrackImageProducer.getHeight()",1,1,1
"org.jhotdraw.color.ColorTrackImageProducer.getWidth()",1,1,1
"org.jhotdraw.color.ColorTrackImageProducer.markAsDirty()",1,1,1
"org.jhotdraw.color.ColorTrackImageProducer.needsGeneration()",1,1,1
"org.jhotdraw.color.ColorTrackImageProducer.regenerateColorTrack()",1,2,2
"org.jhotdraw.color.ColorTrackImageProducer.setColorComponentIndex(int)",1,1,1
"org.jhotdraw.color.ColorTrackImageProducer.setColorSliderModel(ColorSliderModel)",1,1,1
"org.jhotdraw.color.ColorUtil.CIEXYZtoRGB(float[],float[])",1,1,1
"org.jhotdraw.color.ColorUtil.CSfromCIEXYZ(ColorSpace,float[],float[])",1,2,2
"org.jhotdraw.color.ColorUtil.CSfromCIEXYZ(NamedColorSpace,float[],float[])",1,1,1
"org.jhotdraw.color.ColorUtil.CSfromRGB(ColorSpace,float[],float[])",1,2,2
"org.jhotdraw.color.ColorUtil.CSfromRGB(NamedColorSpace,float[],float[])",1,1,1
"org.jhotdraw.color.ColorUtil.CStoCIEXYZ(ColorSpace,float[],float[])",1,2,2
"org.jhotdraw.color.ColorUtil.CStoCIEXYZ(NamedColorSpace,float[],float[])",1,1,1
"org.jhotdraw.color.ColorUtil.CStoRGB(ColorSpace,float[],float[])",1,3,3
"org.jhotdraw.color.ColorUtil.CStoRGB(NamedColorSpace,float[],float[])",1,1,1
"org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])",2,1,7
"org.jhotdraw.color.ColorUtil.ColorUtil()",1,1,1
"org.jhotdraw.color.ColorUtil.RGBtoCIEXYZ(float[],float[])",1,1,1
"org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)",2,2,2
"org.jhotdraw.color.ColorUtil.fromRGB(ColorSpace,int)",1,1,1
"org.jhotdraw.color.ColorUtil.fromRGB(ColorSpace,int,int,int)",1,1,1
"org.jhotdraw.color.ColorUtil.getName(ColorSpace)",7,11,11
"org.jhotdraw.color.ColorUtil.isEqual(ColorSpace,ColorSpace)",2,2,3
"org.jhotdraw.color.ColorUtil.shadow(Color,int)",1,1,1
"org.jhotdraw.color.ColorUtil.toColor(ColorSpace,float...)",1,1,1
"org.jhotdraw.color.ColorUtil.toRGB24(ColorSpace,float...)",1,1,1
"org.jhotdraw.color.ColorUtil.toToolTipText(Color)",1,2,3
"org.jhotdraw.color.ColorWheelChooser.ColorWheelChooser()",1,2,2
"org.jhotdraw.color.ColorWheelChooser.buildChooser()",1,1,1
"org.jhotdraw.color.ColorWheelChooser.getDisplayName()",1,1,1
"org.jhotdraw.color.ColorWheelChooser.getLargeDisplayIcon()",1,1,1
"org.jhotdraw.color.ColorWheelChooser.getSmallDisplayIcon()",1,1,1
"org.jhotdraw.color.ColorWheelChooser.initComponents()",1,1,1
"org.jhotdraw.color.ColorWheelChooser.setColorToModel(Color)",1,2,2
"org.jhotdraw.color.ColorWheelChooser.updateChooser()",1,1,1
"org.jhotdraw.color.ComplexColorWheelImageProducer.ComplexColorWheelImageProducer(ColorSpace,int,int)",1,1,1
"org.jhotdraw.color.ComplexColorWheelImageProducer.ComplexColorWheelImageProducer(ColorSpace,int,int,boolean,boolean)",1,1,1
"org.jhotdraw.color.ComplexColorWheelImageProducer.generateColorWheel()",1,4,4
"org.jhotdraw.color.ComplexColorWheelImageProducer.generateLookupTables()",1,4,7
"org.jhotdraw.color.ComplexColorWheelImageProducer.getColorAt(int,int)",1,1,3
"org.jhotdraw.color.ComplexColorWheelImageProducer.getColorAtOld(int,int)",1,1,3
"org.jhotdraw.color.ComplexColorWheelImageProducer.getColorLocation(float[])",1,3,8
"org.jhotdraw.color.ComplexColorWheelImageProducer.needsGeneration()",1,1,1
"org.jhotdraw.color.ComplexColorWheelImageProducer.regenerateColorWheel()",1,2,2
"org.jhotdraw.color.CompositeColor.CompositeColor(ColorSpace,float[],float)",2,5,7
"org.jhotdraw.color.CompositeColor.getColorComponents(ColorSpace,float[])",2,3,5
"org.jhotdraw.color.CompositeColor.getColorComponents(float[])",2,2,4
"org.jhotdraw.color.CompositeColor.getColorSpace()",1,2,2
"org.jhotdraw.color.CompositeColor.getComponents(ColorSpace,float[])",1,4,6
"org.jhotdraw.color.CompositeColor.getComponents(float[])",2,2,4
"org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel()",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel(ColorSpace)",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.addColorSlider(JSlider)",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.configureSlider(int,JSlider)",1,3,3
"org.jhotdraw.color.DefaultColorSliderModel.fireColorChanged(int)",1,2,2
"org.jhotdraw.color.DefaultColorSliderModel.getBoundedRangeModel(int)",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.getColor()",1,4,4
"org.jhotdraw.color.DefaultColorSliderModel.getColorSpace()",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.getComponent(int)",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.getComponentCount()",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.getComponents()",1,2,2
"org.jhotdraw.color.DefaultColorSliderModel.getInterpolatedRGB(int,float)",1,2,2
"org.jhotdraw.color.DefaultColorSliderModel.getSliderValue(int)",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.removeColorSlider(JSlider)",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.setColor(Color)",1,2,2
"org.jhotdraw.color.DefaultColorSliderModel.setColorSpace(ColorSpace)",1,3,3
"org.jhotdraw.color.DefaultColorSliderModel.setComponent(int,float)",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.setSliderValue(int,int)",1,1,1
"org.jhotdraw.color.DefaultColorSliderModel.unconfigureSlider(JSlider)",1,2,2
"org.jhotdraw.color.DefaultHarmonicColorModel.DefaultHarmonicColorModel()",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.RGBtoComponent(int,float[])",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.add(Color)",1,2,2
"org.jhotdraw.color.DefaultHarmonicColorModel.addPropertyChangeListener(PropertyChangeListener)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.addPropertyChangeListener(String,PropertyChangeListener)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.addRule(HarmonicRule)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.applyRules()",1,3,3
"org.jhotdraw.color.DefaultHarmonicColorModel.clone()",1,2,2
"org.jhotdraw.color.DefaultHarmonicColorModel.componentToRGB(float,float,float)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.firePropertyChange(String,Object,Object)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.firePropertyChange(String,boolean,boolean)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.firePropertyChange(String,int,int)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.get(int)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.getBase()",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.getColorSpace()",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.getElementAt(int)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.getSize()",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.isAdjusting()",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.removeAllRules()",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.removePropertyChangeListener(PropertyChangeListener)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.removePropertyChangeListener(String,PropertyChangeListener)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.set(int,Color)",1,4,4
"org.jhotdraw.color.DefaultHarmonicColorModel.setBase(int)",1,1,1
"org.jhotdraw.color.DefaultHarmonicColorModel.setColorSpace(ColorSpace)",1,3,3
"org.jhotdraw.color.DefaultHarmonicColorModel.setSize(int)",1,5,5
"org.jhotdraw.color.DefaultHarmonicColorModel.size()",1,1,1
"org.jhotdraw.color.DiskColorWheelImageProducer.DiskColorWheelImageProducer(ColorSpace,int,int)",1,1,1
"org.jhotdraw.color.DiskColorWheelImageProducer.DiskColorWheelImageProducer(ColorSpace,int,int,boolean,boolean)",1,1,1
"org.jhotdraw.color.DiskColorWheelImageProducer.generateColorWheel()",1,4,4
"org.jhotdraw.color.DiskColorWheelImageProducer.generateLookupTables()",1,4,7
"org.jhotdraw.color.DiskColorWheelImageProducer.generateLookupTablesOLD()",1,4,7
"org.jhotdraw.color.DiskColorWheelImageProducer.getColorAt(int,int)",1,1,4
"org.jhotdraw.color.DiskColorWheelImageProducer.getColorLocation(float[])",1,1,4
"org.jhotdraw.color.DiskColorWheelImageProducer.needsGeneration()",1,1,1
"org.jhotdraw.color.DiskColorWheelImageProducer.regenerateColorWheel()",1,2,2
"org.jhotdraw.color.HSBColorSpace.HSBColorSpace()",1,1,1
"org.jhotdraw.color.HSBColorSpace.equals(Object)",1,1,1
"org.jhotdraw.color.HSBColorSpace.fromRGB(float[],float[])",1,1,1
"org.jhotdraw.color.HSBColorSpace.getInstance()",1,1,2
"org.jhotdraw.color.HSBColorSpace.getMaxValue(int)",1,1,1
"org.jhotdraw.color.HSBColorSpace.getMinValue(int)",1,1,1
"org.jhotdraw.color.HSBColorSpace.getName()",1,1,1
"org.jhotdraw.color.HSBColorSpace.getName(int)",5,2,5
"org.jhotdraw.color.HSBColorSpace.hashCode()",1,1,1
"org.jhotdraw.color.HSBColorSpace.toRGB(float[],float[])",1,1,1
"org.jhotdraw.color.HSLColorSpace.HSLColorSpace()",1,1,1
"org.jhotdraw.color.HSLColorSpace.clamp(float,float,float)",1,1,1
"org.jhotdraw.color.HSLColorSpace.equals(Object)",1,1,1
"org.jhotdraw.color.HSLColorSpace.fromRGB(float[],float[])",1,1,9
"org.jhotdraw.color.HSLColorSpace.getInstance()",1,1,2
"org.jhotdraw.color.HSLColorSpace.getMaxValue(int)",1,1,1
"org.jhotdraw.color.HSLColorSpace.getMinValue(int)",1,1,1
"org.jhotdraw.color.HSLColorSpace.getName()",1,1,1
"org.jhotdraw.color.HSLColorSpace.getName(int)",5,2,5
"org.jhotdraw.color.HSLColorSpace.hashCode()",1,1,1
"org.jhotdraw.color.HSLColorSpace.toRGB(float[],float[])",1,1,17
"org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.HSLHarmonicColorWheelImageProducer(ColorSpace,int,int)",1,1,1
"org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.HSLHarmonicColorWheelImageProducer(int,int)",1,1,1
"org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateColorWheel()",1,3,3
"org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateContiguousLookupTables()",1,5,5
"org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateDiscreteLookupTables()",1,5,5
"org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateLookupTables()",1,2,2
"org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.getColorAt(int,int)",1,1,2
"org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.getColorLocation(Color)",1,1,1
"org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.getColorLocation(float[])",1,1,1
"org.jhotdraw.color.HSLPhysiologicColorSpace.HSLPhysiologicColorSpace()",1,1,1
"org.jhotdraw.color.HSLPhysiologicColorSpace.equals(Object)",1,1,1
"org.jhotdraw.color.HSLPhysiologicColorSpace.fromRGB(float[],float[])",1,1,11
"org.jhotdraw.color.HSLPhysiologicColorSpace.getInstance()",1,1,2
"org.jhotdraw.color.HSLPhysiologicColorSpace.getMaxValue(int)",1,1,1
"org.jhotdraw.color.HSLPhysiologicColorSpace.getMinValue(int)",1,1,1
"org.jhotdraw.color.HSLPhysiologicColorSpace.getName()",1,1,1
"org.jhotdraw.color.HSLPhysiologicColorSpace.getName(int)",5,2,5
"org.jhotdraw.color.HSLPhysiologicColorSpace.hashCode()",1,1,1
"org.jhotdraw.color.HSLPhysiologicColorSpace.toRGB(float[],float[])",1,1,28
"org.jhotdraw.color.HSVColorSpace.HSVColorSpace()",1,1,1
"org.jhotdraw.color.HSVColorSpace.equals(Object)",1,1,1
"org.jhotdraw.color.HSVColorSpace.fromRGB(float[],float[])",1,1,8
"org.jhotdraw.color.HSVColorSpace.getInstance()",1,1,2
"org.jhotdraw.color.HSVColorSpace.getMaxValue(int)",1,1,1
"org.jhotdraw.color.HSVColorSpace.getMinValue(int)",1,1,1
"org.jhotdraw.color.HSVColorSpace.getName()",1,1,1
"org.jhotdraw.color.HSVColorSpace.getName(int)",5,2,5
"org.jhotdraw.color.HSVColorSpace.hashCode()",1,1,1
"org.jhotdraw.color.HSVColorSpace.toRGB(float[],float[])",2,2,8
"org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.HSVHarmonicColorWheelImageProducer(int,int)",1,1,1
"org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateColorWheel()",1,3,3
"org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateContiguousLookupTables()",1,5,5
"org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateDiscreteLookupTables()",1,5,5
"org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateLookupTables()",1,2,2
"org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.getColorAt(int,int)",1,1,2
"org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.getColorLocation(Color)",1,1,1
"org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.getColorLocation(float[])",1,2,2
"org.jhotdraw.color.HSVPhysiologicColorSpace.HSVPhysiologicColorSpace()",1,1,1
"org.jhotdraw.color.HSVPhysiologicColorSpace.equals(Object)",1,1,1
"org.jhotdraw.color.HSVPhysiologicColorSpace.fromRGB(float[],float[])",1,1,10
"org.jhotdraw.color.HSVPhysiologicColorSpace.getInstance()",1,1,2
"org.jhotdraw.color.HSVPhysiologicColorSpace.getMaxValue(int)",1,1,1
"org.jhotdraw.color.HSVPhysiologicColorSpace.getMinValue(int)",1,1,1
"org.jhotdraw.color.HSVPhysiologicColorSpace.getName()",1,1,1
"org.jhotdraw.color.HSVPhysiologicColorSpace.getName(int)",5,2,5
"org.jhotdraw.color.HSVPhysiologicColorSpace.hashCode()",1,1,1
"org.jhotdraw.color.HSVPhysiologicColorSpace.toRGB(float[],float[])",2,2,18
"org.jhotdraw.color.JColorWheel.JColorWheel()",1,1,1
"org.jhotdraw.color.JColorWheel.JColorWheel(ColorSpace)",1,1,1
"org.jhotdraw.color.JColorWheel.ModelHandler.stateChanged(ChangeEvent)",1,1,1
"org.jhotdraw.color.JColorWheel.MouseHandler.mouseDragged(MouseEvent)",1,1,1
"org.jhotdraw.color.JColorWheel.MouseHandler.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.color.JColorWheel.MouseHandler.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.color.JColorWheel.MouseHandler.update(MouseEvent)",1,1,1
"org.jhotdraw.color.JColorWheel.createWheelProducer(int,int)",2,2,5
"org.jhotdraw.color.JColorWheel.getCenter()",1,1,1
"org.jhotdraw.color.JColorWheel.getColorAt(int,int)",1,1,1
"org.jhotdraw.color.JColorWheel.getColorLocation(Color)",1,1,1
"org.jhotdraw.color.JColorWheel.getColorLocation(float[])",1,1,1
"org.jhotdraw.color.JColorWheel.getModel()",1,1,1
"org.jhotdraw.color.JColorWheel.getPreferredSize()",1,1,1
"org.jhotdraw.color.JColorWheel.getRadius()",1,1,1
"org.jhotdraw.color.JColorWheel.getThumbLocation()",1,1,1
"org.jhotdraw.color.JColorWheel.getWheelInsets()",1,1,1
"org.jhotdraw.color.JColorWheel.initComponents()",1,1,1
"org.jhotdraw.color.JColorWheel.installMouseListeners()",1,1,1
"org.jhotdraw.color.JColorWheel.isFlipX()",1,1,1
"org.jhotdraw.color.JColorWheel.isFlipY()",1,1,1
"org.jhotdraw.color.JColorWheel.paintComponent(Graphics)",1,1,1
"org.jhotdraw.color.JColorWheel.paintThumb(Graphics2D)",1,1,1
"org.jhotdraw.color.JColorWheel.paintWheel(Graphics2D)",1,7,7
"org.jhotdraw.color.JColorWheel.setAngularComponentIndex(int)",1,1,1
"org.jhotdraw.color.JColorWheel.setFlipX(boolean)",1,1,1
"org.jhotdraw.color.JColorWheel.setFlipY(boolean)",1,1,1
"org.jhotdraw.color.JColorWheel.setModel(ColorSliderModel)",1,3,3
"org.jhotdraw.color.JColorWheel.setRadialComponentIndex(int)",1,1,1
"org.jhotdraw.color.JColorWheel.setType(Type)",1,1,1
"org.jhotdraw.color.JColorWheel.setVerticalComponentIndex(int)",1,1,1
"org.jhotdraw.color.JColorWheel.setWheelInsets(Insets)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.JHarmonicColorWheel()",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.ModelHandler.contentsChanged(ListDataEvent)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.ModelHandler.intervalAdded(ListDataEvent)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.ModelHandler.intervalRemoved(ListDataEvent)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.ModelHandler.propertyChange(PropertyChangeEvent)",1,2,2
"org.jhotdraw.color.JHarmonicColorWheel.MouseHandler.mouseClicked(MouseEvent)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.MouseHandler.mouseDragged(MouseEvent)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.MouseHandler.mouseEntered(MouseEvent)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.MouseHandler.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.MouseHandler.mouseMoved(MouseEvent)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.MouseHandler.mousePressed(MouseEvent)",1,5,8
"org.jhotdraw.color.JHarmonicColorWheel.MouseHandler.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.MouseHandler.update(MouseEvent)",1,2,2
"org.jhotdraw.color.JHarmonicColorWheel.getColorLocation(Color)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.getHarmonicColorModel()",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.getSelectedIndex()",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.getToolTipText(MouseEvent)",3,2,3
"org.jhotdraw.color.JHarmonicColorWheel.initComponents()",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.installMouseListeners()",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.paintComponent(Graphics)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.paintThumb(Graphics2D)",1,8,8
"org.jhotdraw.color.JHarmonicColorWheel.paintTicks(Graphics2D)",2,7,8
"org.jhotdraw.color.JHarmonicColorWheel.setColorSpace(ColorSpace)",1,1,1
"org.jhotdraw.color.JHarmonicColorWheel.setHarmonicColorModel(HarmonicColorModel)",1,3,3
"org.jhotdraw.color.JHarmonicColorWheel.setSelectedIndex(int)",1,1,1
"org.jhotdraw.color.PolarColorWheelImageProducer.PolarColorWheelImageProducer(ColorSpace,int,int)",1,1,1
"org.jhotdraw.color.PolarColorWheelImageProducer.generateColorWheel()",1,4,4
"org.jhotdraw.color.PolarColorWheelImageProducer.generateLookupTables()",1,5,5
"org.jhotdraw.color.PolarColorWheelImageProducer.getColorAt(int,int)",1,1,1
"org.jhotdraw.color.PolarColorWheelImageProducer.getColorLocation(Color)",1,1,1
"org.jhotdraw.color.PolarColorWheelImageProducer.getColorLocation(float[])",1,1,1
"org.jhotdraw.color.QuantizingColorWheelImageProducer.QuantizingColorWheelImageProducer(ColorSpace,int,int)",1,1,1
"org.jhotdraw.color.QuantizingColorWheelImageProducer.generateColorWheel()",1,4,4
"org.jhotdraw.color.QuantizingColorWheelImageProducer.generateLookupTables()",1,5,5
"org.jhotdraw.color.QuantizingColorWheelImageProducer.getColorAt(int,int)",1,1,1
"org.jhotdraw.color.QuantizingColorWheelImageProducer.getColorLocation(float[])",1,1,1
"org.jhotdraw.color.QuantizingColorWheelImageProducer.needsGeneration()",1,1,1
"org.jhotdraw.color.QuantizingColorWheelImageProducer.regenerateColorWheel()",1,2,2
"org.jhotdraw.color.SimpleHarmonicRule.SimpleHarmonicRule(int,float,int,int...)",1,1,1
"org.jhotdraw.color.SimpleHarmonicRule.apply(HarmonicColorModel)",1,4,4
"org.jhotdraw.color.SimpleHarmonicRule.colorChanged(HarmonicColorModel,int,Color,Color)",1,1,1
"org.jhotdraw.color.SimpleHarmonicRule.getComponentIndex()",1,1,1
"org.jhotdraw.color.SimpleHarmonicRule.getConstraint(float)",1,1,1
"org.jhotdraw.color.SimpleHarmonicRule.setComponentIndex(int)",1,1,1
"org.jhotdraw.color.SimpleHarmonicRule.setConstraint(float)",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.AbstractAttributedCompositeFigure()",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.applyAttributesTo(Figure)",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.clone()",1,1,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawChildren(Graphics2D)",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawFigure(Graphics2D)",1,7,7
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawText(Graphics2D)",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.get(AttributeKey<T>)",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.getAttributeKey(String)",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.getAttributes()",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.getAttributesRestoreData()",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.getFigureDrawBounds()",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.getStroke()",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.getStrokeMiterLimitFactor()",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.hasAttribute(AttributeKey<T>)",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.isAttributeEnabled(AttributeKey<?>)",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.read(DOMInput)",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.readAttributes(DOMInput)",1,7,7
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.removeAttribute(AttributeKey<T>)",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.restoreAttributesTo(Object)",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.set(AttributeKey<T>,T)",1,3,3
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.setAttributeEnabled(AttributeKey<?>,boolean)",1,2,3
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.setAttributeOnChildren(AttributeKey<T>,T)",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.setAttributes(Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.AbstractAttributedCompositeFigure.writeAttributes(DOMOutput)",1,10,10
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.clone()",1,2,2
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.contains(Double)",3,2,3
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.draw(Graphics2D)",1,2,2
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.drawDecorator(Graphics2D)",1,1,1
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.drawFigure(Graphics2D)",1,1,1
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.getDecorator()",1,1,1
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.getDrawingArea()",1,2,2
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.getFigureDrawingArea()",1,1,1
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.read(DOMInput)",1,1,1
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.readDecorator(DOMInput)",1,2,2
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.setDecorator(Figure)",1,2,2
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.updateDecoratorBounds()",1,2,2
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.AbstractAttributedDecoratedFigure.writeDecorator(DOMOutput)",1,2,2
"org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.applyAttributesTo(Figure)",1,2,2
"org.jhotdraw.draw.AbstractAttributedFigure.clone()",1,1,2
"org.jhotdraw.draw.AbstractAttributedFigure.draw(Graphics2D)",1,7,7
"org.jhotdraw.draw.AbstractAttributedFigure.drawText(Graphics2D)",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.get(AttributeKey<T>)",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.getAttributeKey(String)",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.getAttributes()",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.getAttributesRestoreData()",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.getDrawingArea()",1,2,3
"org.jhotdraw.draw.AbstractAttributedFigure.getStroke()",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.getStrokeMiterLimitFactor()",1,2,2
"org.jhotdraw.draw.AbstractAttributedFigure.hasAttribute(AttributeKey<?>)",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.isAttributeEnabled(AttributeKey<?>)",1,2,2
"org.jhotdraw.draw.AbstractAttributedFigure.read(DOMInput)",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.readAttributes(DOMInput)",1,7,7
"org.jhotdraw.draw.AbstractAttributedFigure.removeAttribute(AttributeKey<T>)",1,2,2
"org.jhotdraw.draw.AbstractAttributedFigure.restoreAttributesTo(Object)",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.set(AttributeKey<T>,T)",1,3,3
"org.jhotdraw.draw.AbstractAttributedFigure.setAttributeEnabled(AttributeKey<?>,boolean)",1,2,3
"org.jhotdraw.draw.AbstractAttributedFigure.setAttributes(Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.draw.AbstractAttributedFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.AbstractAttributedFigure.writeAttributes(DOMOutput)",1,10,10
"org.jhotdraw.draw.AbstractCompositeFigure.AbstractCompositeFigure()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.EventHandler.areaInvalidated(FigureEvent)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.EventHandler.attributeChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.EventHandler.figureAdded(FigureEvent)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.EventHandler.figureChanged(FigureEvent)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.EventHandler.figureRemoved(FigureEvent)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.EventHandler.figureRequestRemove(FigureEvent)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.EventHandler.undoableEditHappened(UndoableEditEvent)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.add(Figure)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.add(int,Figure)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.addAll(Collection<? extends Figure>)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.addAll(int,Collection<? extends Figure>)",1,3,3
"org.jhotdraw.draw.AbstractCompositeFigure.addCompositeFigureListener(CompositeFigureListener)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.addNotify(Drawing)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.basicAdd(Figure)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.basicAdd(int,Figure)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.basicAddAll(int,Collection<? extends Figure>)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.basicRemove(Figure)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.basicRemoveAll(Collection<? extends Figure>)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.basicRemoveAllChildren()",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.basicRemoveChild(int)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.bringToFront(Figure)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.changed()",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.clone()",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.contains(Double)",5,6,7
"org.jhotdraw.draw.AbstractCompositeFigure.contains(Figure)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.createEventHandler()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.createHandles(int)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.draw(Graphics2D)",1,7,7
"org.jhotdraw.draw.AbstractCompositeFigure.findChild(Double)",4,4,5
"org.jhotdraw.draw.AbstractCompositeFigure.findChildIndex(Double)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.findFigureInside(Double)",5,4,5
"org.jhotdraw.draw.AbstractCompositeFigure.fireFigureAdded(Figure,int)",1,4,4
"org.jhotdraw.draw.AbstractCompositeFigure.fireFigureRemoved(Figure,int)",1,4,4
"org.jhotdraw.draw.AbstractCompositeFigure.get(AttributeKey<T>)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.getAttributes()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.getAttributesRestoreData()",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.getBounds()",1,5,5
"org.jhotdraw.draw.AbstractCompositeFigure.getChild(int)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.getChildCount()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.getChildren()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.getChildrenFrontToBack()",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.getDecomposition()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.getDrawingArea()",1,5,5
"org.jhotdraw.draw.AbstractCompositeFigure.getLayouter()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.getPreferredSize()",2,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.getTransformRestoreData()",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.indexOf(Figure)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.invalidate()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.layout()",1,4,4
"org.jhotdraw.draw.AbstractCompositeFigure.read(DOMInput)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.remove(Figure)",2,3,3
"org.jhotdraw.draw.AbstractCompositeFigure.removeAll(Collection<? extends Figure>)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.removeAllChildren()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.removeChild(int)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.removeCompositeFigureListener(CompositeFigureListener)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.removeNotify(Drawing)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.restoreAttributesTo(Object)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.restoreTransformTo(Object)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.sendToBack(Figure)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.set(AttributeKey<T>,T)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.setBounds(Double,Double)",1,8,9
"org.jhotdraw.draw.AbstractCompositeFigure.setLayouter(Layouter)",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.transform(AffineTransform)",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.validate()",1,1,1
"org.jhotdraw.draw.AbstractCompositeFigure.willChange()",1,2,2
"org.jhotdraw.draw.AbstractCompositeFigure.write(DOMOutput)",1,2,2
"org.jhotdraw.draw.AbstractConstrainer.AbstractConstrainer()",1,1,1
"org.jhotdraw.draw.AbstractConstrainer.addChangeListener(ChangeListener)",1,1,1
"org.jhotdraw.draw.AbstractConstrainer.clone()",1,1,1
"org.jhotdraw.draw.AbstractConstrainer.fireStateChanged()",1,3,4
"org.jhotdraw.draw.AbstractConstrainer.removeChangeListener(ChangeListener)",1,1,1
"org.jhotdraw.draw.AbstractDrawing.AbstractDrawing()",1,1,1
"org.jhotdraw.draw.AbstractDrawing.addInputFormat(InputFormat)",1,1,1
"org.jhotdraw.draw.AbstractDrawing.addOutputFormat(OutputFormat)",1,2,2
"org.jhotdraw.draw.AbstractDrawing.addUndoableEditListener(UndoableEditListener)",1,1,1
"org.jhotdraw.draw.AbstractDrawing.clone()",1,3,3
"org.jhotdraw.draw.AbstractDrawing.fireUndoableEditHappened(UndoableEdit)",1,4,5
"org.jhotdraw.draw.AbstractDrawing.getDrawing()",1,1,1
"org.jhotdraw.draw.AbstractDrawing.getFontRenderContext()",1,1,1
"org.jhotdraw.draw.AbstractDrawing.getInputFormats()",1,1,1
"org.jhotdraw.draw.AbstractDrawing.getLock()",1,1,1
"org.jhotdraw.draw.AbstractDrawing.getOutputFormats()",1,2,2
"org.jhotdraw.draw.AbstractDrawing.read(DOMInput)",1,2,2
"org.jhotdraw.draw.AbstractDrawing.removeUndoableEditListener(UndoableEditListener)",1,1,1
"org.jhotdraw.draw.AbstractDrawing.setFontRenderContext(FontRenderContext)",1,1,1
"org.jhotdraw.draw.AbstractDrawing.setInputFormats(List<InputFormat>)",1,1,1
"org.jhotdraw.draw.AbstractDrawing.setOutputFormats(List<OutputFormat>)",1,1,1
"org.jhotdraw.draw.AbstractDrawing.write(DOMOutput)",1,2,2
"org.jhotdraw.draw.AbstractFigure.AbstractFigure()",1,1,1
"org.jhotdraw.draw.AbstractFigure.addFigureListener(FigureListener)",1,1,1
"org.jhotdraw.draw.AbstractFigure.addNotify(Drawing)",1,1,1
"org.jhotdraw.draw.AbstractFigure.changed()",3,2,3
"org.jhotdraw.draw.AbstractFigure.clone()",1,1,1
"org.jhotdraw.draw.AbstractFigure.createHandles(int)",2,2,3
"org.jhotdraw.draw.AbstractFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.draw.AbstractFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.draw.AbstractFigure.findFigureInside(Double)",1,1,2
"org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated()",1,1,1
"org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated(Double)",1,4,5
"org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated(FigureEvent)",1,3,3
"org.jhotdraw.draw.AbstractFigure.fireAttributeChanged(AttributeKey<T>,T,T)",1,7,8
"org.jhotdraw.draw.AbstractFigure.fireFigureAdded()",1,5,5
"org.jhotdraw.draw.AbstractFigure.fireFigureChanged()",1,1,1
"org.jhotdraw.draw.AbstractFigure.fireFigureChanged(Double)",1,4,5
"org.jhotdraw.draw.AbstractFigure.fireFigureChanged(FigureEvent)",1,4,4
"org.jhotdraw.draw.AbstractFigure.fireFigureHandlesChanged()",1,4,5
"org.jhotdraw.draw.AbstractFigure.fireFigureRemoved()",1,5,5
"org.jhotdraw.draw.AbstractFigure.fireFigureRequestRemove()",1,5,5
"org.jhotdraw.draw.AbstractFigure.fireUndoableEditHappened(UndoableEdit)",1,2,2
"org.jhotdraw.draw.AbstractFigure.getActions(Double)",1,1,1
"org.jhotdraw.draw.AbstractFigure.getChangingDepth()",1,1,1
"org.jhotdraw.draw.AbstractFigure.getConnectors(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.AbstractFigure.getCursor(Double)",2,2,2
"org.jhotdraw.draw.AbstractFigure.getDecomposition()",1,1,1
"org.jhotdraw.draw.AbstractFigure.getDrawing()",1,1,1
"org.jhotdraw.draw.AbstractFigure.getEndPoint()",1,1,1
"org.jhotdraw.draw.AbstractFigure.getFontRenderContext()",1,1,2
"org.jhotdraw.draw.AbstractFigure.getLayer()",1,1,1
"org.jhotdraw.draw.AbstractFigure.getLock()",1,2,2
"org.jhotdraw.draw.AbstractFigure.getPreferredSize()",1,1,1
"org.jhotdraw.draw.AbstractFigure.getStartPoint()",1,1,1
"org.jhotdraw.draw.AbstractFigure.getTool(Double)",1,1,1
"org.jhotdraw.draw.AbstractFigure.getToolTipText(Double)",1,1,1
"org.jhotdraw.draw.AbstractFigure.handleDrop(Double,Collection<Figure>,DrawingView)",1,1,1
"org.jhotdraw.draw.AbstractFigure.handleMouseClick(Double,MouseEvent,DrawingView)",1,1,1
"org.jhotdraw.draw.AbstractFigure.includes(Figure)",1,1,1
"org.jhotdraw.draw.AbstractFigure.invalidate()",1,1,1
"org.jhotdraw.draw.AbstractFigure.isChanging()",1,1,1
"org.jhotdraw.draw.AbstractFigure.isConnectable()",1,1,1
"org.jhotdraw.draw.AbstractFigure.isRemovable()",1,1,1
"org.jhotdraw.draw.AbstractFigure.isSelectable()",1,1,1
"org.jhotdraw.draw.AbstractFigure.isTransformable()",1,1,1
"org.jhotdraw.draw.AbstractFigure.isVisible()",1,1,1
"org.jhotdraw.draw.AbstractFigure.remap(Map<Figure, Figure>,boolean)",1,1,1
"org.jhotdraw.draw.AbstractFigure.removeFigureListener(FigureListener)",1,1,1
"org.jhotdraw.draw.AbstractFigure.removeNotify(Drawing)",1,1,1
"org.jhotdraw.draw.AbstractFigure.requestRemove()",1,1,1
"org.jhotdraw.draw.AbstractFigure.setBounds(Double)",1,1,1
"org.jhotdraw.draw.AbstractFigure.setBounds(Double,Double)",1,3,3
"org.jhotdraw.draw.AbstractFigure.setConnectable(boolean)",1,1,1
"org.jhotdraw.draw.AbstractFigure.setRemovable(boolean)",1,1,1
"org.jhotdraw.draw.AbstractFigure.setSelectable(boolean)",1,1,1
"org.jhotdraw.draw.AbstractFigure.setTransformable(boolean)",1,1,1
"org.jhotdraw.draw.AbstractFigure.setVisible(boolean)",1,2,2
"org.jhotdraw.draw.AbstractFigure.toString()",1,1,1
"org.jhotdraw.draw.AbstractFigure.validate()",1,1,1
"org.jhotdraw.draw.AbstractFigure.willChange()",1,2,2
"org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class<T>)",1,1,1
"org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class<T>,T)",1,1,1
"org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class<T>,T,boolean)",1,1,1
"org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class<T>,T,boolean,ResourceBundleUtil)",1,2,2
"org.jhotdraw.draw.AttributeKey.equals(Object)",2,2,2
"org.jhotdraw.draw.AttributeKey.get(Figure)",1,1,1
"org.jhotdraw.draw.AttributeKey.get(Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.draw.AttributeKey.getClone(Figure)",1,3,3
"org.jhotdraw.draw.AttributeKey.getDefaultValue()",1,1,1
"org.jhotdraw.draw.AttributeKey.getKey()",1,1,1
"org.jhotdraw.draw.AttributeKey.getPresentationName()",1,2,2
"org.jhotdraw.draw.AttributeKey.hashCode()",1,1,1
"org.jhotdraw.draw.AttributeKey.isAssignable(Object)",2,2,2
"org.jhotdraw.draw.AttributeKey.isNullValueAllowed()",1,1,1
"org.jhotdraw.draw.AttributeKey.put(Map<AttributeKey<?>, Object>,T)",2,1,3
"org.jhotdraw.draw.AttributeKey.putClone(Map<AttributeKey<?>, Object>,T)",1,3,3
"org.jhotdraw.draw.AttributeKey.set(Figure,T)",2,1,3
"org.jhotdraw.draw.AttributeKey.setClone(Figure,T)",1,3,3
"org.jhotdraw.draw.AttributeKey.setUndoable(Figure,T)",2,1,3
"org.jhotdraw.draw.AttributeKey.toString()",1,1,1
"org.jhotdraw.draw.AttributeKeys.getFont(Figure)",3,2,3
"org.jhotdraw.draw.AttributeKeys.getFontStyle(Figure)",1,1,3
"org.jhotdraw.draw.AttributeKeys.getHitStroke(Figure)",3,3,4
"org.jhotdraw.draw.AttributeKeys.getPerpendicularDrawGrowth(Figure)",2,2,4
"org.jhotdraw.draw.AttributeKeys.getPerpendicularFillGrowth(Figure)",5,5,13
"org.jhotdraw.draw.AttributeKeys.getPerpendicularHitGrowth(Figure)",1,2,2
"org.jhotdraw.draw.AttributeKeys.getStroke(Figure)",3,5,11
"org.jhotdraw.draw.AttributeKeys.getStrokeTotalMiterLimit(Figure)",2,2,2
"org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)",3,3,3
"org.jhotdraw.draw.BezierFigure.BezierFigure()",1,1,1
"org.jhotdraw.draw.BezierFigure.BezierFigure(boolean)",1,1,1
"org.jhotdraw.draw.BezierFigure.addNode(Node)",1,1,1
"org.jhotdraw.draw.BezierFigure.addNode(int,Node)",1,1,1
"org.jhotdraw.draw.BezierFigure.chop(Double)",3,3,3
"org.jhotdraw.draw.BezierFigure.clone()",1,1,1
"org.jhotdraw.draw.BezierFigure.contains(Double)",11,8,13
"org.jhotdraw.draw.BezierFigure.createHandles(int)",2,3,5
"org.jhotdraw.draw.BezierFigure.drawCaps(Graphics2D)",1,6,6
"org.jhotdraw.draw.BezierFigure.drawFill(Graphics2D)",1,4,4
"org.jhotdraw.draw.BezierFigure.drawStroke(Graphics2D)",1,3,3
"org.jhotdraw.draw.BezierFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.draw.BezierFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.draw.BezierFigure.findNode(Double)",3,2,4
"org.jhotdraw.draw.BezierFigure.findSegment(Double,double)",1,1,1
"org.jhotdraw.draw.BezierFigure.getBezierPath()",1,1,1
"org.jhotdraw.draw.BezierFigure.getBounds()",1,1,1
"org.jhotdraw.draw.BezierFigure.getCappedPath()",1,10,10
"org.jhotdraw.draw.BezierFigure.getCenter()",1,1,1
"org.jhotdraw.draw.BezierFigure.getDrawingArea()",1,4,4
"org.jhotdraw.draw.BezierFigure.getEndPoint()",1,1,1
"org.jhotdraw.draw.BezierFigure.getNode(int)",1,1,1
"org.jhotdraw.draw.BezierFigure.getNodeCount()",1,1,1
"org.jhotdraw.draw.BezierFigure.getOutermostPoint()",1,1,1
"org.jhotdraw.draw.BezierFigure.getPoint(int)",1,1,1
"org.jhotdraw.draw.BezierFigure.getPoint(int,int)",1,1,1
"org.jhotdraw.draw.BezierFigure.getPointOnPath(float,double)",1,1,1
"org.jhotdraw.draw.BezierFigure.getStartPoint()",1,1,1
"org.jhotdraw.draw.BezierFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.draw.BezierFigure.handleMouseClick(Double,MouseEvent,DrawingView)",3,4,4
"org.jhotdraw.draw.BezierFigure.invalidate()",1,1,1
"org.jhotdraw.draw.BezierFigure.isClosed()",1,1,1
"org.jhotdraw.draw.BezierFigure.joinSegments(Double,double)",2,2,3
"org.jhotdraw.draw.BezierFigure.joinSegments(Double,float)",1,1,1
"org.jhotdraw.draw.BezierFigure.layout()",1,1,1
"org.jhotdraw.draw.BezierFigure.read(DOMInput)",1,1,1
"org.jhotdraw.draw.BezierFigure.readPoints(DOMInput)",1,2,2
"org.jhotdraw.draw.BezierFigure.removeAllNodes()",1,1,1
"org.jhotdraw.draw.BezierFigure.removeNode(int)",1,1,1
"org.jhotdraw.draw.BezierFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.draw.BezierFigure.set(AttributeKey<T>,T)",1,3,4
"org.jhotdraw.draw.BezierFigure.setBezierPath(BezierPath)",1,1,1
"org.jhotdraw.draw.BezierFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.BezierFigure.setClosed(boolean)",1,1,1
"org.jhotdraw.draw.BezierFigure.setEndPoint(Double)",1,2,2
"org.jhotdraw.draw.BezierFigure.setNode(int,Node)",1,1,1
"org.jhotdraw.draw.BezierFigure.setPoint(int,Double)",1,1,2
"org.jhotdraw.draw.BezierFigure.setPoint(int,int,Double)",1,1,1
"org.jhotdraw.draw.BezierFigure.setStartPoint(Double)",1,2,2
"org.jhotdraw.draw.BezierFigure.splitSegment(Double,double)",1,2,2
"org.jhotdraw.draw.BezierFigure.splitSegment(Double,float)",1,1,1
"org.jhotdraw.draw.BezierFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.BezierFigure.validate()",1,1,1
"org.jhotdraw.draw.BezierFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.BezierFigure.writePoints(DOMOutput)",1,3,3
"org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()",1,1,1
"org.jhotdraw.draw.DefaultDrawing.basicAdd(int,Figure)",1,1,1
"org.jhotdraw.draw.DefaultDrawing.draw(Graphics2D)",1,3,3
"org.jhotdraw.draw.DefaultDrawing.draw(Graphics2D,Collection<Figure>)",1,7,7
"org.jhotdraw.draw.DefaultDrawing.drawCanvas(Graphics2D)",1,4,5
"org.jhotdraw.draw.DefaultDrawing.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.draw.DefaultDrawing.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.draw.DefaultDrawing.ensureSorted()",1,2,2
"org.jhotdraw.draw.DefaultDrawing.findFigure(Double)",3,3,4
"org.jhotdraw.draw.DefaultDrawing.findFigureBehind(Double,Collection<? extends Figure>)",4,4,6
"org.jhotdraw.draw.DefaultDrawing.findFigureBehind(Double,Figure)",4,4,5
"org.jhotdraw.draw.DefaultDrawing.findFigureExcept(Double,Collection<? extends Figure>)",3,4,5
"org.jhotdraw.draw.DefaultDrawing.findFigureExcept(Double,Figure)",3,4,5
"org.jhotdraw.draw.DefaultDrawing.findFigureInside(Double)",1,2,2
"org.jhotdraw.draw.DefaultDrawing.findFigures(Double)",1,4,4
"org.jhotdraw.draw.DefaultDrawing.findFiguresWithin(Double)",1,6,6
"org.jhotdraw.draw.DefaultDrawing.getFiguresFrontToBack()",1,1,1
"org.jhotdraw.draw.DefaultDrawing.indexOf(Figure)",1,1,1
"org.jhotdraw.draw.DefaultDrawing.invalidateSortOrder()",1,1,1
"org.jhotdraw.draw.DefaultDrawing.setAttributeOnChildren(AttributeKey<T>,T)",1,1,1
"org.jhotdraw.draw.DefaultDrawing.sort(Collection<? extends Figure>)",1,5,5
"org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.ToolHandler.areaInvalidated(ToolEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.ToolHandler.boundsInvalidated(ToolEvent)",1,3,3
"org.jhotdraw.draw.DefaultDrawingEditor.ToolHandler.toolStarted(ToolEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.add(DrawingView)",1,2,2
"org.jhotdraw.draw.DefaultDrawingEditor.applyDefaultAttributesTo(Figure)",1,2,2
"org.jhotdraw.draw.DefaultDrawingEditor.createActionMap()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.createInputMap()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.findView(Container)",3,2,3
"org.jhotdraw.draw.DefaultDrawingEditor.getActionMap()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.getActiveView()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.getDefaultAttribute(AttributeKey<T>)",2,2,2
"org.jhotdraw.draw.DefaultDrawingEditor.getDefaultAttributes()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.getDrawingViews()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.getHandleAttribute(AttributeKey<T>)",2,2,2
"org.jhotdraw.draw.DefaultDrawingEditor.getInputMap()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.getTool()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.isEnabled()",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.remove(DrawingView)",1,4,4
"org.jhotdraw.draw.DefaultDrawingEditor.setActionMap(ActionMap)",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.setActiveView(DrawingView)",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.setCursor(Cursor)",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.setDefaultAttribute(AttributeKey<T>,T)",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.setEnabled(boolean)",1,2,2
"org.jhotdraw.draw.DefaultDrawingEditor.setHandleAttribute(AttributeKey<T>,T)",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.setInputMap(InputMap)",1,1,1
"org.jhotdraw.draw.DefaultDrawingEditor.setTool(Tool)",2,5,6
"org.jhotdraw.draw.DefaultDrawingEditor.updateActiveView()",3,3,3
"org.jhotdraw.draw.DefaultDrawingView.DefaultDrawingView()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.areaInvalidated(FigureEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.areaInvalidated(HandleEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.attributeChanged(FigureEvent)",1,6,6
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.figureAdded(CompositeFigureEvent)",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.figureAdded(FigureEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.figureChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.figureHandlesChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.figureRemoved(CompositeFigureEvent)",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.figureRemoved(FigureEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.figureRequestRemove(FigureEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.focusGained(FocusEvent)",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.focusLost(FocusEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.handleRequestRemove(HandleEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.EventHandler.handleRequestSecondaryHandles(HandleEvent)",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.addFigureSelectionListener(FigureSelectionListener)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.addNotify(DrawingEditor)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.addToSelection(Collection<Figure>)",1,9,9
"org.jhotdraw.draw.DefaultDrawingView.addToSelection(Figure)",1,8,8
"org.jhotdraw.draw.DefaultDrawingView.clearSelection()",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.createEventHandler()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.delete()",3,6,6
"org.jhotdraw.draw.DefaultDrawingView.drawBackground(Graphics2D)",1,6,6
"org.jhotdraw.draw.DefaultDrawingView.drawCanvas(Graphics2D)",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.drawConstrainer(Graphics2D)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.drawDrawing(Graphics2D)",1,4,4
"org.jhotdraw.draw.DefaultDrawingView.drawDrawingNonvolatileBuffered(Graphics2D)",3,14,18
"org.jhotdraw.draw.DefaultDrawingView.drawDrawingVolatileBuffered(Graphics2D)",5,18,22
"org.jhotdraw.draw.DefaultDrawingView.drawHandles(Graphics2D)",1,5,5
"org.jhotdraw.draw.DefaultDrawingView.drawTool(Graphics2D)",1,4,4
"org.jhotdraw.draw.DefaultDrawingView.drawingToView(Double)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.duplicate()",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.findFigure(Point)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.findFigures(Rectangle)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.findFiguresWithin(Rectangle)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.findHandle(Point)",5,3,5
"org.jhotdraw.draw.DefaultDrawingView.fireSelectionChanged(Set<Figure>,Set<Figure>)",1,4,5
"org.jhotdraw.draw.DefaultDrawingView.fireViewTransformChanged()",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.getActiveHandle()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getBackgroundPaint(int,int)",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.getCanvasViewBounds()",1,3,4
"org.jhotdraw.draw.DefaultDrawingView.getCompatibleHandles(Handle)",1,4,4
"org.jhotdraw.draw.DefaultDrawingView.getComponent()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getConstrainer()",1,1,2
"org.jhotdraw.draw.DefaultDrawingView.getDrawing()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getDrawingArea()",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.getDrawingToViewTransform()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getEditor()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getEmptyDrawingMessage()",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.getHandleDetailLevel()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getInvisibleConstrainer()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getPreferredSize()",1,5,6
"org.jhotdraw.draw.DefaultDrawingView.getScaleFactor()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getSecondaryHandles()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getSelectedFigures()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getSelectionCount()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getSelectionHandles()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.getToolTipText(MouseEvent)",2,3,3
"org.jhotdraw.draw.DefaultDrawingView.getVisibleConstrainer()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.initComponents()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.invalidate()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.invalidateDimension()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.invalidateHandles()",1,7,7
"org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.isFigureSelected(Figure)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.isSelectionEmpty()",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.paint(Graphics)",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.paintComponent(Graphics)",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.printComponent(Graphics)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.removeFigureSelectionListener(FigureSelectionListener)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.removeFromSelection(Figure)",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.removeNotify()",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.removeNotify(DrawingEditor)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.repaintDrawingArea(Double)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.repaintHandles()",1,6,6
"org.jhotdraw.draw.DefaultDrawingView.selectAll()",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.setActiveHandle(Handle)",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.setBounds(int,int,int,int)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.setConstrainerVisible(boolean)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.setDrawingDoubleBuffered(boolean)",1,3,5
"org.jhotdraw.draw.DefaultDrawingView.setEmptyDrawingMessage(String)",1,3,3
"org.jhotdraw.draw.DefaultDrawingView.setEnabled(boolean)",1,1,2
"org.jhotdraw.draw.DefaultDrawingView.setHandleDetailLevel(int)",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.setInvisibleConstrainer(Constrainer)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.setScaleFactor(double)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.setViewRenderingHints(Graphics2D)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.setVisibleConstrainer(Constrainer)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.toggleSelection(Figure)",1,2,2
"org.jhotdraw.draw.DefaultDrawingView.validateHandles()",4,9,10
"org.jhotdraw.draw.DefaultDrawingView.validateViewTranslation()",2,4,11
"org.jhotdraw.draw.DefaultDrawingView.viewToDrawing(Point)",1,1,1
"org.jhotdraw.draw.DefaultDrawingView.viewToDrawing(Rectangle)",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DefaultDrawingViewTransferHandler()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DragHandler.DragHandler(Transferable,Point)",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DragHandler.dragDropEnd(DragSourceDropEvent)",1,2,2
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DragHandler.dragEnter(DragSourceDragEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DragHandler.dragExit(DragSourceEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DragHandler.dragGestureRecognized(DragGestureEvent)",2,4,4
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DragHandler.dragOver(DragSourceDragEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DragHandler.dropActionChanged(DragSourceDragEvent)",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.SwingDragGestureRecognizer.SwingDragGestureRecognizer(DragGestureListener)",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.SwingDragGestureRecognizer.gestured(JComponent,MouseEvent,int,int)",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.SwingDragGestureRecognizer.registerListeners()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.SwingDragGestureRecognizer.unregisterListeners()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.canImport(JComponent,DataFlavor[])",4,6,7
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.createTransferable(DrawingView,Set<Figure>)",1,9,9
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.createTransferable(JComponent)",1,3,3
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.exportAsDrag(JComponent,InputEvent,int)",1,6,6
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.exportDone(JComponent,Transferable,int)",5,8,9
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.getDrawing()",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.getSourceActions(JComponent)",1,5,6
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.getVisualRepresentation(Transferable)",1,6,7
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.importData(JComponent,Transferable)",1,1,1
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.importData(JComponent,Transferable,HashSet<Figure>,Point)",7,34,34
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.importData(TransferSupport)",1,2,2
"org.jhotdraw.draw.DefaultDrawingViewTransferHandler.moveToDropPoint(JComponent,HashSet<Figure>,Point)",1,7,7
"org.jhotdraw.draw.DiamondFigure.DiamondFigure()",1,1,1
"org.jhotdraw.draw.DiamondFigure.DiamondFigure(double,double,double,double)",1,1,1
"org.jhotdraw.draw.DiamondFigure.clone()",1,1,1
"org.jhotdraw.draw.DiamondFigure.contains(Double)",1,3,3
"org.jhotdraw.draw.DiamondFigure.drawFill(Graphics2D)",1,3,3
"org.jhotdraw.draw.DiamondFigure.drawStroke(Graphics2D)",1,3,3
"org.jhotdraw.draw.DiamondFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.draw.DiamondFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.draw.DiamondFigure.getBounds()",1,1,1
"org.jhotdraw.draw.DiamondFigure.getDrawingArea()",1,3,3
"org.jhotdraw.draw.DiamondFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.draw.DiamondFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.draw.DiamondFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.DiamondFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.DrawingEditorProxy()",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.Forwarder.propertyChange(PropertyChangeEvent)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.add(DrawingView)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.applyDefaultAttributesTo(Figure)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.findView(Container)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.getActionMap()",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.getActiveView()",1,2,2
"org.jhotdraw.draw.DrawingEditorProxy.getDefaultAttribute(AttributeKey<T>)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.getDefaultAttributes()",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.getDrawingViews()",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.getFocusedView()",1,2,2
"org.jhotdraw.draw.DrawingEditorProxy.getHandleAttribute(AttributeKey<T>)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.getInputMap()",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.getTarget()",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.getTool()",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.isEnabled()",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.remove(DrawingView)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.setActionMap(ActionMap)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.setActiveView(DrawingView)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.setCursor(Cursor)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.setDefaultAttribute(AttributeKey<T>,T)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.setEnabled(boolean)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.setHandleAttribute(AttributeKey<T>,T)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.setInputMap(InputMap)",1,1,1
"org.jhotdraw.draw.DrawingEditorProxy.setTarget(DrawingEditor)",1,3,3
"org.jhotdraw.draw.DrawingEditorProxy.setTool(Tool)",1,1,1
"org.jhotdraw.draw.EllipseFigure.EllipseFigure()",1,1,1
"org.jhotdraw.draw.EllipseFigure.EllipseFigure(double,double,double,double)",1,1,1
"org.jhotdraw.draw.EllipseFigure.clone()",1,1,1
"org.jhotdraw.draw.EllipseFigure.contains(Double)",1,1,1
"org.jhotdraw.draw.EllipseFigure.drawFill(Graphics2D)",1,2,3
"org.jhotdraw.draw.EllipseFigure.drawStroke(Graphics2D)",1,2,3
"org.jhotdraw.draw.EllipseFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.draw.EllipseFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.draw.EllipseFigure.getBounds()",1,1,1
"org.jhotdraw.draw.EllipseFigure.getDrawingArea()",1,1,1
"org.jhotdraw.draw.EllipseFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.draw.EllipseFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.draw.EllipseFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.EllipseFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.FigureLayerComparator.FigureLayerComparator()",1,1,1
"org.jhotdraw.draw.FigureLayerComparator.compare(Figure,Figure)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.GraphicalCompositeFigure()",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.GraphicalCompositeFigure(Figure)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.PresentationFigureHandler.PresentationFigureHandler(GraphicalCompositeFigure)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.PresentationFigureHandler.areaInvalidated(FigureEvent)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.PresentationFigureHandler.figureChanged(FigureEvent)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.PresentationFigureHandler.figureRequestRemove(FigureEvent)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.PresentationFigureHandler.undoableEditHappened(UndoableEditEvent)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.addNotify(Drawing)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.applyAttributesTo(Figure)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.basicSetPresentationFigureBounds(Double,Double)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.chop(Double)",2,3,5
"org.jhotdraw.draw.GraphicalCompositeFigure.clone()",1,4,4
"org.jhotdraw.draw.GraphicalCompositeFigure.contains(Double)",1,3,3
"org.jhotdraw.draw.GraphicalCompositeFigure.createHandles(int)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.drawPresentationFigure(Graphics2D)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.get(AttributeKey<T>)",2,3,3
"org.jhotdraw.draw.GraphicalCompositeFigure.getAttributeKey(String)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.getAttributes()",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.getBounds()",2,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.getDrawingArea()",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.getPresentationFigure()",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.read(DOMInput)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.readAttributes(DOMInput)",1,7,7
"org.jhotdraw.draw.GraphicalCompositeFigure.remap(HashMap<Figure, Figure>,boolean)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.removeNotify(Drawing)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.set(AttributeKey<T>,T)",1,4,4
"org.jhotdraw.draw.GraphicalCompositeFigure.setAttributeEnabled(AttributeKey<?>,boolean)",1,2,3
"org.jhotdraw.draw.GraphicalCompositeFigure.setBounds(Double,Double)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.setPresentationFigure(Figure)",1,5,5
"org.jhotdraw.draw.GraphicalCompositeFigure.superBasicSetBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.transform(AffineTransform)",1,2,2
"org.jhotdraw.draw.GraphicalCompositeFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.GraphicalCompositeFigure.writeAttributes(DOMOutput)",1,10,10
"org.jhotdraw.draw.GridConstrainer.GridConstrainer()",1,1,1
"org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)",1,1,1
"org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,boolean)",1,1,1
"org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,double,boolean)",2,1,3
"org.jhotdraw.draw.GridConstrainer.constrainAngle(double)",2,1,2
"org.jhotdraw.draw.GridConstrainer.constrainPoint(Double)",1,1,1
"org.jhotdraw.draw.GridConstrainer.constrainPoint(Double,TranslationDirection)",3,3,13
"org.jhotdraw.draw.GridConstrainer.constrainRectangle(Double)",1,1,3
"org.jhotdraw.draw.GridConstrainer.constrainRectangle(Double,TranslationDirection)",2,2,5
"org.jhotdraw.draw.GridConstrainer.draw(Graphics2D,DrawingView)",1,12,14
"org.jhotdraw.draw.GridConstrainer.getHeight()",1,1,1
"org.jhotdraw.draw.GridConstrainer.getMajorGridSpacing()",1,1,1
"org.jhotdraw.draw.GridConstrainer.getTheta()",1,1,1
"org.jhotdraw.draw.GridConstrainer.getWidth()",1,1,1
"org.jhotdraw.draw.GridConstrainer.isVisible()",1,1,1
"org.jhotdraw.draw.GridConstrainer.rotateAngle(double,RotationDirection)",3,2,4
"org.jhotdraw.draw.GridConstrainer.setHeight(double)",1,1,1
"org.jhotdraw.draw.GridConstrainer.setMajorGridSpacing(int)",1,1,1
"org.jhotdraw.draw.GridConstrainer.setTheta(double)",1,1,1
"org.jhotdraw.draw.GridConstrainer.setVisible(boolean)",1,1,1
"org.jhotdraw.draw.GridConstrainer.setWidth(double)",1,1,1
"org.jhotdraw.draw.GridConstrainer.toString()",1,1,1
"org.jhotdraw.draw.GridConstrainer.translatePoint(Double,TranslationDirection)",3,3,5
"org.jhotdraw.draw.GridConstrainer.translateRectangle(Double,TranslationDirection)",3,3,9
"org.jhotdraw.draw.GroupFigure.GroupFigure()",1,1,1
"org.jhotdraw.draw.GroupFigure.chop(Double)",1,1,1
"org.jhotdraw.draw.GroupFigure.isTransformable()",3,2,3
"org.jhotdraw.draw.ImageFigure.ImageFigure()",1,1,1
"org.jhotdraw.draw.ImageFigure.ImageFigure(double,double,double,double)",1,1,1
"org.jhotdraw.draw.ImageFigure.clone()",1,1,1
"org.jhotdraw.draw.ImageFigure.drawFigure(Graphics2D)",1,7,7
"org.jhotdraw.draw.ImageFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.draw.ImageFigure.drawImage(Graphics2D)",1,2,2
"org.jhotdraw.draw.ImageFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.draw.ImageFigure.figureContains(Double)",1,1,1
"org.jhotdraw.draw.ImageFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.draw.ImageFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.draw.ImageFigure.getActions(Double)",1,1,1
"org.jhotdraw.draw.ImageFigure.getBounds()",1,1,1
"org.jhotdraw.draw.ImageFigure.getBufferedImage()",1,3,4
"org.jhotdraw.draw.ImageFigure.getFigureDrawingArea()",1,1,1
"org.jhotdraw.draw.ImageFigure.getImageData()",1,3,4
"org.jhotdraw.draw.ImageFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.draw.ImageFigure.loadImage(File)",1,2,2
"org.jhotdraw.draw.ImageFigure.loadImage(InputStream)",2,3,3
"org.jhotdraw.draw.ImageFigure.read(DOMInput)",1,3,3
"org.jhotdraw.draw.ImageFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.draw.ImageFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.ImageFigure.setBufferedImage(BufferedImage)",1,1,1
"org.jhotdraw.draw.ImageFigure.setImage(byte[],BufferedImage)",1,1,1
"org.jhotdraw.draw.ImageFigure.setImageData(byte[])",1,1,1
"org.jhotdraw.draw.ImageFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.ImageFigure.write(DOMOutput)",1,2,2
"org.jhotdraw.draw.ImageFigure.writeObject(ObjectOutputStream)",1,1,1
"org.jhotdraw.draw.LabelFigure.LabelFigure()",1,1,1
"org.jhotdraw.draw.LabelFigure.LabelFigure(String)",1,1,1
"org.jhotdraw.draw.LabelFigure.areaInvalidated(FigureEvent)",1,1,1
"org.jhotdraw.draw.LabelFigure.attributeChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.LabelFigure.figureAdded(FigureEvent)",1,1,1
"org.jhotdraw.draw.LabelFigure.figureChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.LabelFigure.figureHandlesChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.LabelFigure.figureRemoved(FigureEvent)",1,2,2
"org.jhotdraw.draw.LabelFigure.figureRequestRemove(FigureEvent)",1,1,1
"org.jhotdraw.draw.LabelFigure.getLabelFor()",1,1,2
"org.jhotdraw.draw.LabelFigure.getTool(Double)",1,2,3
"org.jhotdraw.draw.LabelFigure.remap(Map<Figure, Figure>,boolean)",1,3,3
"org.jhotdraw.draw.LabelFigure.setLabelFor(TextHolderFigure)",1,3,3
"org.jhotdraw.draw.LabeledLineConnectionFigure.ChildHandler.ChildHandler(LabeledLineConnectionFigure)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.ChildHandler.areaInvalidated(FigureEvent)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.ChildHandler.figureChanged(FigureEvent)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.ChildHandler.figureRequestRemove(FigureEvent)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.ChildHandler.undoableEditHappened(UndoableEditEvent)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.LabeledLineConnectionFigure()",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.add(Figure)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.add(int,Figure)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.addCompositeFigureListener(CompositeFigureListener)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.addNotify(Drawing)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.basicAdd(Figure)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.basicAdd(int,Figure)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.basicRemove(Figure)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.basicRemoveAllChildren()",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.basicRemoveChild(int)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.clone()",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.contains(Double)",4,4,5
"org.jhotdraw.draw.LabeledLineConnectionFigure.contains(Figure)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.draw(Graphics2D)",1,3,3
"org.jhotdraw.draw.LabeledLineConnectionFigure.findFigureInside(Double)",5,4,5
"org.jhotdraw.draw.LabeledLineConnectionFigure.fireFigureAdded(Figure,int)",1,4,4
"org.jhotdraw.draw.LabeledLineConnectionFigure.fireFigureRemoved(Figure,int)",1,4,4
"org.jhotdraw.draw.LabeledLineConnectionFigure.getChild(int)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.getChildCount()",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.getChildren()",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.getChildrenFrontToBack()",1,1,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.getDrawingArea()",1,5,5
"org.jhotdraw.draw.LabeledLineConnectionFigure.getLayouter()",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.indexOf(Figure)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.invalidate()",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.layout()",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.remap(Map<Figure, Figure>,boolean)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.remove(Figure)",2,3,3
"org.jhotdraw.draw.LabeledLineConnectionFigure.removeAllChildren()",1,3,3
"org.jhotdraw.draw.LabeledLineConnectionFigure.removeChild(int)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.removeCompositeFigureListener(CompositeFigureListener)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.removeNotify(Drawing)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.set(AttributeKey<T>,T)",1,4,4
"org.jhotdraw.draw.LabeledLineConnectionFigure.setLayouter(Layouter)",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.transform(AffineTransform)",1,2,2
"org.jhotdraw.draw.LabeledLineConnectionFigure.updateConnection()",1,1,1
"org.jhotdraw.draw.LabeledLineConnectionFigure.validate()",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.ConnectionHandler.ConnectionHandler(LineConnectionFigure)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.ConnectionHandler.figureChanged(FigureEvent)",1,4,4
"org.jhotdraw.draw.LineConnectionFigure.ConnectionHandler.figureRemoved(FigureEvent)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.LineConnectionFigure()",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.addNotify(Drawing)",1,3,3
"org.jhotdraw.draw.LineConnectionFigure.canConnect(Connector)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.canConnect(Connector,Connector)",1,2,2
"org.jhotdraw.draw.LineConnectionFigure.clone()",1,5,6
"org.jhotdraw.draw.LineConnectionFigure.createHandles(int)",2,4,5
"org.jhotdraw.draw.LineConnectionFigure.getBezierPath()",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.getEndConnector()",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.getEndFigure()",1,2,2
"org.jhotdraw.draw.LineConnectionFigure.getLiner()",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.getStartConnector()",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.getStartFigure()",1,2,2
"org.jhotdraw.draw.LineConnectionFigure.handleConnect(Connector,Connector)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.handleDisconnect(Connector,Connector)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.handleMouseClick(Double,MouseEvent,DrawingView)",3,4,4
"org.jhotdraw.draw.LineConnectionFigure.lineout()",1,2,2
"org.jhotdraw.draw.LineConnectionFigure.read(DOMInput)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.readLiner(DOMInput)",1,2,2
"org.jhotdraw.draw.LineConnectionFigure.readPoints(DOMInput)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.remap(Map<Figure, Figure>,boolean)",1,9,11
"org.jhotdraw.draw.LineConnectionFigure.removeNotify(Drawing)",1,3,3
"org.jhotdraw.draw.LineConnectionFigure.reverseConnection()",1,2,3
"org.jhotdraw.draw.LineConnectionFigure.setConnectable(boolean)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.setEndConnector(Connector)",1,9,9
"org.jhotdraw.draw.LineConnectionFigure.setEndPoint(Double)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.setLiner(Liner)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.setNode(int,Node)",1,7,7
"org.jhotdraw.draw.LineConnectionFigure.setPoint(int,Double)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.setStartConnector(Connector)",1,7,7
"org.jhotdraw.draw.LineConnectionFigure.setStartPoint(Double)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.updateConnection()",1,5,5
"org.jhotdraw.draw.LineConnectionFigure.validate()",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.LineConnectionFigure.writeLiner(DOMOutput)",1,2,2
"org.jhotdraw.draw.LineConnectionFigure.writePoints(DOMOutput)",1,1,1
"org.jhotdraw.draw.LineFigure.LineFigure()",1,1,1
"org.jhotdraw.draw.LineFigure.createHandles(int)",2,3,4
"org.jhotdraw.draw.LineFigure.handleMouseClick(Double,MouseEvent,DrawingView)",3,4,4
"org.jhotdraw.draw.ListFigure.ListFigure()",1,1,1
"org.jhotdraw.draw.ListFigure.ListFigure(Figure)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.FigureHandler.areaInvalidated(FigureEvent)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.FigureHandler.figureChanged(FigureEvent)",1,2,2
"org.jhotdraw.draw.QuadTreeCompositeFigure.FigureHandler.figureRequestRemove(FigureEvent)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.FigureHandler.undoableEditHappened(UndoableEditEvent)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.QuadTreeCompositeFigure()",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.basicAdd(int,Figure)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.basicRemoveChild(int)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.bringToFront(Figure)",1,2,2
"org.jhotdraw.draw.QuadTreeCompositeFigure.contains(Figure)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.createFigureHandler()",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.draw(Graphics2D)",1,2,2
"org.jhotdraw.draw.QuadTreeCompositeFigure.draw(Graphics2D,Collection<Figure>)",1,2,2
"org.jhotdraw.draw.QuadTreeCompositeFigure.ensureSorted()",1,2,2
"org.jhotdraw.draw.QuadTreeCompositeFigure.findFigure(Double)",6,5,8
"org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureBehind(Double,Collection<Figure>)",4,4,6
"org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureBehind(Double,Figure)",4,4,5
"org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureExcept(Double,Collection<Figure>)",6,6,9
"org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureExcept(Double,Figure)",6,6,9
"org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureInside(Double)",3,4,4
"org.jhotdraw.draw.QuadTreeCompositeFigure.findFigures(Double)",3,2,3
"org.jhotdraw.draw.QuadTreeCompositeFigure.findFiguresWithin(Double)",1,5,5
"org.jhotdraw.draw.QuadTreeCompositeFigure.getCanvasSize()",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.getChildren()",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.getFigures(Double)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.getFiguresFrontToBack()",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.indexOf(Figure)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.sendToBack(Figure)",1,2,2
"org.jhotdraw.draw.QuadTreeCompositeFigure.setCanvasSize(Dimension2DDouble)",1,1,1
"org.jhotdraw.draw.QuadTreeCompositeFigure.sort(Collection<Figure>)",1,3,3
"org.jhotdraw.draw.QuadTreeDrawing.QuadTreeEventHandler.figureChanged(FigureEvent)",1,2,2
"org.jhotdraw.draw.QuadTreeDrawing.basicAdd(int,Figure)",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.basicRemoveChild(int)",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.bringToFront(Figure)",1,2,2
"org.jhotdraw.draw.QuadTreeDrawing.clone()",1,2,2
"org.jhotdraw.draw.QuadTreeDrawing.contains(Figure)",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.createEventHandler()",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.draw(Graphics2D)",1,2,2
"org.jhotdraw.draw.QuadTreeDrawing.draw(Graphics2D,Collection<Figure>)",1,3,3
"org.jhotdraw.draw.QuadTreeDrawing.drawCanvas(Graphics2D)",1,4,5
"org.jhotdraw.draw.QuadTreeDrawing.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.ensureSorted()",1,2,2
"org.jhotdraw.draw.QuadTreeDrawing.findFigure(Double)",6,5,8
"org.jhotdraw.draw.QuadTreeDrawing.findFigureBehind(Double,Collection<? extends Figure>)",4,4,6
"org.jhotdraw.draw.QuadTreeDrawing.findFigureBehind(Double,Figure)",4,4,5
"org.jhotdraw.draw.QuadTreeDrawing.findFigureExcept(Double,Collection<? extends Figure>)",6,6,9
"org.jhotdraw.draw.QuadTreeDrawing.findFigureExcept(Double,Figure)",6,6,9
"org.jhotdraw.draw.QuadTreeDrawing.findFigureInside(Double)",3,4,4
"org.jhotdraw.draw.QuadTreeDrawing.findFigures(Double)",3,2,3
"org.jhotdraw.draw.QuadTreeDrawing.findFiguresWithin(Double)",1,6,6
"org.jhotdraw.draw.QuadTreeDrawing.getChildren()",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.getChildren(Double)",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.getFiguresFrontToBack()",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.indexOf(Figure)",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.sendToBack(Figure)",1,2,2
"org.jhotdraw.draw.QuadTreeDrawing.setAttributeOnChildren(AttributeKey<T>,T)",1,1,1
"org.jhotdraw.draw.QuadTreeDrawing.sort(Collection<? extends Figure>)",1,3,3
"org.jhotdraw.draw.RectangleFigure.RectangleFigure()",1,1,1
"org.jhotdraw.draw.RectangleFigure.RectangleFigure(double,double,double,double)",1,1,1
"org.jhotdraw.draw.RectangleFigure.clone()",1,1,1
"org.jhotdraw.draw.RectangleFigure.contains(Double)",1,1,1
"org.jhotdraw.draw.RectangleFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.draw.RectangleFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.draw.RectangleFigure.getBounds()",1,1,1
"org.jhotdraw.draw.RectangleFigure.getDrawingArea()",1,1,1
"org.jhotdraw.draw.RectangleFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.draw.RectangleFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.draw.RectangleFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.RectangleFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.RoundRectangleFigure()",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.RoundRectangleFigure(double,double,double,double)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.clone()",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.contains(Double)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.createHandles(int)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.drawFill(Graphics2D)",1,2,3
"org.jhotdraw.draw.RoundRectangleFigure.drawStroke(Graphics2D)",1,2,3
"org.jhotdraw.draw.RoundRectangleFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.getArcHeight()",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.getArcWidth()",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.getBounds()",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.getDrawingArea()",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.read(DOMInput)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.setArc(double,double)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.setArcHeight(double)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.setArcWidth(double)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.RoundRectangleFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.TextAreaFigure(String)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.clone()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.createHandles(int)",1,2,2
"org.jhotdraw.draw.TextAreaFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.drawParagraph(Graphics2D,AttributedCharacterIterator,float,float,float,float,float[],int)",2,12,22
"org.jhotdraw.draw.TextAreaFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.drawText(Graphics2D)",6,7,10
"org.jhotdraw.draw.TextAreaFigure.figureContains(Double)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getBaseline()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getBounds()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getFillColor()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getFont()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getFontSize()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getInsets()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getLabelFor()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getPreferredTextSize(double)",1,5,7
"org.jhotdraw.draw.TextAreaFigure.getTabSize()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getText()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getTextColor()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.getTextColumns()",1,2,2
"org.jhotdraw.draw.TextAreaFigure.getTool(Double)",2,2,3
"org.jhotdraw.draw.TextAreaFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.invalidate()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.isEditable()",1,1,1
"org.jhotdraw.draw.TextAreaFigure.isTextOverflow()",1,2,2
"org.jhotdraw.draw.TextAreaFigure.read(DOMInput)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.readBounds(DOMInput)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.setEditable(boolean)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.setFontSize(float)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.setText(String)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.TextAreaFigure.writeBounds(DOMOutput)",1,1,1
"org.jhotdraw.draw.TextFigure.TextFigure()",1,1,1
"org.jhotdraw.draw.TextFigure.TextFigure(String)",1,1,1
"org.jhotdraw.draw.TextFigure.clone()",1,1,1
"org.jhotdraw.draw.TextFigure.createHandles(int)",2,2,3
"org.jhotdraw.draw.TextFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.draw.TextFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.draw.TextFigure.drawText(Graphics2D)",1,3,3
"org.jhotdraw.draw.TextFigure.figureContains(Double)",2,1,2
"org.jhotdraw.draw.TextFigure.getBaseline()",1,1,1
"org.jhotdraw.draw.TextFigure.getBounds()",1,1,1
"org.jhotdraw.draw.TextFigure.getFigureDrawingArea()",2,4,4
"org.jhotdraw.draw.TextFigure.getFillColor()",1,1,1
"org.jhotdraw.draw.TextFigure.getFont()",1,1,1
"org.jhotdraw.draw.TextFigure.getFontSize()",1,1,1
"org.jhotdraw.draw.TextFigure.getInsets()",1,1,1
"org.jhotdraw.draw.TextFigure.getLabelFor()",1,1,1
"org.jhotdraw.draw.TextFigure.getPreferredSize()",1,1,1
"org.jhotdraw.draw.TextFigure.getTabSize()",1,1,1
"org.jhotdraw.draw.TextFigure.getText()",1,1,1
"org.jhotdraw.draw.TextFigure.getTextColor()",1,1,1
"org.jhotdraw.draw.TextFigure.getTextColumns()",1,1,1
"org.jhotdraw.draw.TextFigure.getTextLayout()",1,4,5
"org.jhotdraw.draw.TextFigure.getTool(Double)",2,2,3
"org.jhotdraw.draw.TextFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.draw.TextFigure.invalidate()",1,1,1
"org.jhotdraw.draw.TextFigure.isEditable()",1,1,1
"org.jhotdraw.draw.TextFigure.isTextOverflow()",1,1,1
"org.jhotdraw.draw.TextFigure.read(DOMInput)",1,1,1
"org.jhotdraw.draw.TextFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.draw.TextFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.TextFigure.setEditable(boolean)",1,1,1
"org.jhotdraw.draw.TextFigure.setFontSize(float)",1,1,1
"org.jhotdraw.draw.TextFigure.setText(String)",1,1,1
"org.jhotdraw.draw.TextFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.TextFigure.validate()",1,1,1
"org.jhotdraw.draw.TextFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.TranslationDirection.getDirection(Double,Double)",9,1,9
"org.jhotdraw.draw.TranslationDirection.getDirection(Point,Point)",9,1,9
"org.jhotdraw.draw.TriangleFigure.TriangleFigure()",1,1,1
"org.jhotdraw.draw.TriangleFigure.TriangleFigure(Orientation)",1,1,1
"org.jhotdraw.draw.TriangleFigure.TriangleFigure(double,double,double,double)",1,1,1
"org.jhotdraw.draw.TriangleFigure.TriangleFigure(double,double,double,double,Orientation)",1,1,1
"org.jhotdraw.draw.TriangleFigure.chop(Double)",1,2,2
"org.jhotdraw.draw.TriangleFigure.clone()",1,1,1
"org.jhotdraw.draw.TriangleFigure.contains(Double)",1,2,2
"org.jhotdraw.draw.TriangleFigure.createHandles(int)",1,2,2
"org.jhotdraw.draw.TriangleFigure.drawFill(Graphics2D)",1,2,2
"org.jhotdraw.draw.TriangleFigure.drawStroke(Graphics2D)",1,2,2
"org.jhotdraw.draw.TriangleFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.draw.TriangleFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.draw.TriangleFigure.getBezierPath()",2,2,9
"org.jhotdraw.draw.TriangleFigure.getBounds()",1,1,1
"org.jhotdraw.draw.TriangleFigure.getDrawingArea()",2,5,7
"org.jhotdraw.draw.TriangleFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.draw.TriangleFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.draw.TriangleFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.TriangleFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.AbstractDrawingEditorAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.EventHandler.propertyChange(PropertyChangeEvent)",1,2,2
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.fireUndoableEditHappened(UndoableEdit)",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.getDrawing()",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.getEditor()",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.getView()",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.isUpdatEnabledState()",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.registerEventHandler()",1,2,2
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.setEditor(DrawingEditor)",1,3,3
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.setUpdateEnabledState(boolean)",1,4,4
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.unregisterEventHandler()",1,2,2
"org.jhotdraw.draw.action.AbstractDrawingEditorAction.updateEnabledState()",1,2,2
"org.jhotdraw.draw.action.AbstractDrawingViewAction.AbstractDrawingViewAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingViewAction.AbstractDrawingViewAction(DrawingView)",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingViewAction.EventHandler.propertyChange(PropertyChangeEvent)",1,5,5
"org.jhotdraw.draw.action.AbstractDrawingViewAction.EventHandler.toString()",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingViewAction.dispose()",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingViewAction.fireUndoableEditHappened(UndoableEdit)",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingViewAction.getDrawing()",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingViewAction.getEditor()",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingViewAction.getView()",1,2,3
"org.jhotdraw.draw.action.AbstractDrawingViewAction.isUpdatEnabledState()",1,1,1
"org.jhotdraw.draw.action.AbstractDrawingViewAction.registerEventHandler()",1,5,5
"org.jhotdraw.draw.action.AbstractDrawingViewAction.setEditor(DrawingEditor)",1,3,3
"org.jhotdraw.draw.action.AbstractDrawingViewAction.setUpdateEnabledState(boolean)",1,4,4
"org.jhotdraw.draw.action.AbstractDrawingViewAction.unregisterEventHandler()",1,4,4
"org.jhotdraw.draw.action.AbstractDrawingViewAction.updateEnabledState()",1,2,2
"org.jhotdraw.draw.action.AbstractDrawingViewAction.updateViewState()",1,1,1
"org.jhotdraw.draw.action.AbstractSelectedAction.AbstractSelectedAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AbstractSelectedAction.EventHandler.propertyChange(PropertyChangeEvent)",1,5,5
"org.jhotdraw.draw.action.AbstractSelectedAction.EventHandler.selectionChanged(FigureSelectionEvent)",1,1,1
"org.jhotdraw.draw.action.AbstractSelectedAction.EventHandler.toString()",1,1,1
"org.jhotdraw.draw.action.AbstractSelectedAction.dispose()",1,1,1
"org.jhotdraw.draw.action.AbstractSelectedAction.fireUndoableEditHappened(UndoableEdit)",1,1,1
"org.jhotdraw.draw.action.AbstractSelectedAction.getDrawing()",1,2,2
"org.jhotdraw.draw.action.AbstractSelectedAction.getEditor()",1,1,1
"org.jhotdraw.draw.action.AbstractSelectedAction.getView()",1,2,2
"org.jhotdraw.draw.action.AbstractSelectedAction.isUpdatEnabledState()",1,1,1
"org.jhotdraw.draw.action.AbstractSelectedAction.registerEventHandler()",1,4,4
"org.jhotdraw.draw.action.AbstractSelectedAction.setEditor(DrawingEditor)",1,3,4
"org.jhotdraw.draw.action.AbstractSelectedAction.setUpdateEnabledState(boolean)",1,4,4
"org.jhotdraw.draw.action.AbstractSelectedAction.unregisterEventHandler()",1,3,3
"org.jhotdraw.draw.action.AbstractSelectedAction.updateEnabledState()",1,3,3
"org.jhotdraw.draw.action.AlignAction.AlignAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AlignAction.East.East(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AlignAction.East.East(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.AlignAction.East.alignFigures(Collection<Figure>,Double)",1,3,3
"org.jhotdraw.draw.action.AlignAction.Horizontal.Horizontal(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AlignAction.Horizontal.Horizontal(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.AlignAction.Horizontal.alignFigures(Collection<Figure>,Double)",1,3,3
"org.jhotdraw.draw.action.AlignAction.North.North(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AlignAction.North.North(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.AlignAction.North.alignFigures(Collection<Figure>,Double)",1,3,3
"org.jhotdraw.draw.action.AlignAction.South.South(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AlignAction.South.South(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.AlignAction.South.alignFigures(Collection<Figure>,Double)",1,3,3
"org.jhotdraw.draw.action.AlignAction.Vertical.Vertical(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AlignAction.Vertical.Vertical(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.AlignAction.Vertical.alignFigures(Collection<Figure>,Double)",1,3,3
"org.jhotdraw.draw.action.AlignAction.West.West(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.AlignAction.West.West(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.AlignAction.West.alignFigures(Collection<Figure>,Double)",1,3,3
"org.jhotdraw.draw.action.AlignAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.AlignAction.getSelectionBounds()",1,3,3
"org.jhotdraw.draw.action.AlignAction.updateEnabledState()",1,3,3
"org.jhotdraw.draw.action.ApplyAttributesAction.ApplyAttributesAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ApplyAttributesAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.ApplyAttributesAction.applyAttributes()",1,4,4
"org.jhotdraw.draw.action.ApplyAttributesAction.selectionChanged(FigureSelectionEvent)",1,1,1
"org.jhotdraw.draw.action.ApplyAttributesAction.setExcludedAttributes(Set<AttributeKey<?>>)",1,1,1
"org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey<T>,T)",1,1,1
"org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey<T>,T,Icon)",1,1,1
"org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey<T>,T,String)",1,1,1
"org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey<T>,T,String,Icon)",1,1,1
"org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey<T>,T,String,Icon,Action)",1,1,1
"org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,Map<AttributeKey<?>, Object>,String,Icon)",1,1,2
"org.jhotdraw.draw.action.AttributeAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.AttributeAction.applyAttributesTo(Map<AttributeKey<?>, Object>,Set<Figure>)",1,9,9
"org.jhotdraw.draw.action.AttributeAction.updateEnabledState()",1,2,2
"org.jhotdraw.draw.action.AttributeToggler.AttributeToggler(DrawingEditor,AttributeKey<T>,T,T)",1,1,1
"org.jhotdraw.draw.action.AttributeToggler.AttributeToggler(DrawingEditor,AttributeKey<T>,T,T,Action)",1,1,1
"org.jhotdraw.draw.action.AttributeToggler.actionPerformed(ActionEvent)",3,12,15
"org.jhotdraw.draw.action.AttributeToggler.getEditor()",1,1,1
"org.jhotdraw.draw.action.AttributeToggler.getView()",1,1,1
"org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.BringToFrontAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.BringToFrontAction.bringToFront(DrawingView,Collection<Figure>)",1,2,2
"org.jhotdraw.draw.action.ButtonFactory.ButtonFactory()",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.ToolButtonListener.ToolButtonListener(Tool,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.ToolButtonListener.itemStateChanged(ItemEvent)",1,2,2
"org.jhotdraw.draw.action.ButtonFactory.addAlignmentButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addAlignmentButtonsTo(JToolBar,DrawingEditor,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addAttributesButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addColorButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addColorButtonsTo(JToolBar,DrawingEditor,List<ColorIcon>,int)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addFontButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addSelectionToolTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addSelectionToolTo(JToolBar,DrawingEditor,Collection<Action>,Collection<Action>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addSelectionToolTo(JToolBar,DrawingEditor,Tool)",1,3,3
"org.jhotdraw.draw.action.ButtonFactory.addStrokeButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addToolTo(JToolBar,DrawingEditor,Tool,String,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.addZoomButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createApplyAttributesButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createApplyAttributesButton(DrawingEditor,List<Disposable>)",1,2,2
"org.jhotdraw.draw.action.ButtonFactory.createDrawingActions(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createDrawingActions(DrawingEditor,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>,Shape)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>,Shape,List<Disposable>)",1,6,8
"org.jhotdraw.draw.action.ButtonFactory.createDrawingColorChooserButton(DrawingEditor,AttributeKey<Color>,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>,Shape,Class<?>,List<Disposable>)",1,6,7
"org.jhotdraw.draw.action.ButtonFactory.createDrawingColorChooserButton(DrawingEditor,AttributeKey<Color>,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>,Shape,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createEditorColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createEditorColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createEditorColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>,Shape)",1,4,6
"org.jhotdraw.draw.action.ButtonFactory.createFontButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontButton(DrawingEditor,AttributeKey<Font>,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontButton(DrawingEditor,AttributeKey<Font>,ResourceBundleUtil,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontButton(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontStyleBoldButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontStyleBoldButton(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontStyleBoldButton(DrawingEditor,ResourceBundleUtil,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontStyleItalicButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontStyleItalicButton(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontStyleItalicButton(DrawingEditor,ResourceBundleUtil,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontStyleUnderlineButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontStyleUnderlineButton(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createFontStyleUnderlineButton(DrawingEditor,ResourceBundleUtil,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createPickAttributesButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createPickAttributesButton(DrawingEditor,List<Disposable>)",1,2,2
"org.jhotdraw.draw.action.ButtonFactory.createSelectionActions(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>,Shape)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey<Color>,List<ColorIcon>,int,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>,Shape,List<Disposable>)",1,5,7
"org.jhotdraw.draw.action.ButtonFactory.createSelectionColorChooserButton(DrawingEditor,AttributeKey<Color>,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>,Shape,Class<?>,List<Disposable>)",1,7,8
"org.jhotdraw.draw.action.ButtonFactory.createSelectionColorChooserButton(DrawingEditor,AttributeKey<Color>,String,ResourceBundleUtil,Map<AttributeKey<?>, Object>,Shape,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeCapButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeCapButton(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeCapButton(DrawingEditor,ResourceBundleUtil,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor,double[][])",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor,double[][],ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor,double[][],ResourceBundleUtil,List<Disposable>)",1,2,4
"org.jhotdraw.draw.action.ButtonFactory.createStrokeDecorationButton(DrawingEditor)",1,2,2
"org.jhotdraw.draw.action.ButtonFactory.createStrokeJoinButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeJoinButton(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeJoinButton(DrawingEditor,ResourceBundleUtil,List<Disposable>)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokePlacementButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeTypeButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor,ResourceBundleUtil)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor,double[])",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor,double[],ResourceBundleUtil)",1,3,3
"org.jhotdraw.draw.action.ButtonFactory.createToggleGridButton(DrawingView)",1,2,2
"org.jhotdraw.draw.action.ButtonFactory.createZoomButton(DrawingEditor)",1,5,5
"org.jhotdraw.draw.action.ButtonFactory.createZoomButton(DrawingView)",1,1,1
"org.jhotdraw.draw.action.ButtonFactory.createZoomButton(DrawingView,double[])",1,3,3
"org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color)",1,2,2
"org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String)",1,1,1
"org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String,int,int)",1,2,2
"org.jhotdraw.draw.action.ColorIcon.ColorIcon(int)",1,1,1
"org.jhotdraw.draw.action.ColorIcon.ColorIcon(int,String)",1,1,1
"org.jhotdraw.draw.action.ColorIcon.getColor()",1,1,1
"org.jhotdraw.draw.action.ColorIcon.getIconHeight()",1,1,1
"org.jhotdraw.draw.action.ColorIcon.getIconWidth()",1,1,1
"org.jhotdraw.draw.action.ColorIcon.getName()",1,1,1
"org.jhotdraw.draw.action.ColorIcon.paintIcon(Component,Graphics,int,int)",1,5,5
"org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey<?>)",1,1,1
"org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey<?>,Icon)",1,1,1
"org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey<?>,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey<?>,String)",1,1,1
"org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey<?>,String,Icon)",1,1,1
"org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey<?>[])",1,1,1
"org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey<?>[],String,Icon)",1,1,1
"org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey<?>[],String,Icon,Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.draw.action.DefaultAttributeAction.actionPerformed(ActionEvent)",1,3,3
"org.jhotdraw.draw.action.DefaultAttributeAction.changeAttribute()",1,4,4
"org.jhotdraw.draw.action.DefaultAttributeAction.selectionChanged(FigureSelectionEvent)",1,1,1
"org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey<T>,T)",1,1,1
"org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey<T>,T,Icon)",1,1,1
"org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey<T>,T,String)",1,1,1
"org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey<T>,T,String,Icon)",1,1,1
"org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey<T>,T,String,Icon,Action)",1,1,1
"org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,Map<AttributeKey<?>, Object>,String,Icon)",1,1,1
"org.jhotdraw.draw.action.DrawingAttributeAction.actionPerformed(ActionEvent)",1,5,5
"org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey<Color>)",1,1,1
"org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey<Color>,Icon)",1,1,1
"org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey<Color>,String)",1,1,1
"org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey<Color>,String,Icon)",1,1,1
"org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey<Color>,String,Icon,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.action.DrawingColorChooserAction.actionPerformed(ActionEvent)",1,2,3
"org.jhotdraw.draw.action.DrawingColorChooserAction.getInitialColor()",1,3,3
"org.jhotdraw.draw.action.DrawingColorChooserAction.updateEnabledState()",1,2,2
"org.jhotdraw.draw.action.DrawingColorChooserHandler.DrawingColorChooserHandler(DrawingEditor,AttributeKey<Color>,JColorChooser,JPopupMenu)",1,1,1
"org.jhotdraw.draw.action.DrawingColorChooserHandler.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.DrawingColorChooserHandler.applySelectedColorToFigures()",1,2,3
"org.jhotdraw.draw.action.DrawingColorChooserHandler.stateChanged(ChangeEvent)",1,2,2
"org.jhotdraw.draw.action.DrawingColorChooserHandler.updateEnabledState()",1,5,6
"org.jhotdraw.draw.action.DrawingColorIcon.DrawingColorIcon(DrawingEditor,AttributeKey<Color>,Image,Shape)",1,1,1
"org.jhotdraw.draw.action.DrawingColorIcon.DrawingColorIcon(DrawingEditor,AttributeKey<Color>,URL,Shape)",1,1,1
"org.jhotdraw.draw.action.DrawingColorIcon.paintIcon(Component,Graphics,int,int)",1,4,4
"org.jhotdraw.draw.action.EditCanvasAction.EditCanvasAction(Application,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.EditCanvasAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.EditCanvasAction.getApplication()",1,1,1
"org.jhotdraw.draw.action.EditCanvasAction.getFrame()",1,2,2
"org.jhotdraw.draw.action.EditCanvasAction.updateViewState()",1,3,3
"org.jhotdraw.draw.action.EditCanvasPanel.EditCanvasPanel()",1,1,1
"org.jhotdraw.draw.action.EditCanvasPanel.colorButtonPerformed(ActionEvent)",1,2,2
"org.jhotdraw.draw.action.EditCanvasPanel.getColorChooser()",1,1,2
"org.jhotdraw.draw.action.EditCanvasPanel.getDrawing()",1,1,1
"org.jhotdraw.draw.action.EditCanvasPanel.initComponents()",1,1,1
"org.jhotdraw.draw.action.EditCanvasPanel.main(String[])",1,2,2
"org.jhotdraw.draw.action.EditCanvasPanel.setDrawing(Drawing)",1,1,1
"org.jhotdraw.draw.action.EditCanvasPanel.updateDrawing()",1,2,2
"org.jhotdraw.draw.action.EditCanvasPanel.updatePanel()",1,2,2
"org.jhotdraw.draw.action.EditGridAction.EditGridAction(Application,DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.EditGridAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.EditGridAction.getApplication()",1,1,1
"org.jhotdraw.draw.action.EditGridAction.getDialog()",1,2,2
"org.jhotdraw.draw.action.EditGridAction.updateViewState()",1,3,3
"org.jhotdraw.draw.action.EditGridPanel.EditGridPanel()",1,7,7
"org.jhotdraw.draw.action.EditGridPanel.getConstrainer()",1,1,1
"org.jhotdraw.draw.action.EditGridPanel.initComponents()",1,1,1
"org.jhotdraw.draw.action.EditGridPanel.setConstrainer(GridConstrainer)",1,1,1
"org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey<Color>)",1,1,1
"org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey<Color>,Icon)",1,1,1
"org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey<Color>,String)",1,1,1
"org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey<Color>,String,Icon)",1,1,1
"org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey<Color>,String,Icon,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.action.EditorColorChooserAction.actionPerformed(ActionEvent)",1,2,3
"org.jhotdraw.draw.action.EditorColorChooserAction.getInitialColor()",1,1,2
"org.jhotdraw.draw.action.EditorColorChooserAction.selectionChanged(FigureSelectionEvent)",1,1,1
"org.jhotdraw.draw.action.EditorColorIcon.EditorColorIcon(DrawingEditor,AttributeKey<Color>,Image,Shape)",1,1,1
"org.jhotdraw.draw.action.EditorColorIcon.EditorColorIcon(DrawingEditor,AttributeKey<Color>,URL,Shape)",1,1,1
"org.jhotdraw.draw.action.EditorColorIcon.paintIcon(Component,Graphics,int,int)",1,2,2
"org.jhotdraw.draw.action.FontChooserHandler.FontChooserHandler(DrawingEditor,AttributeKey<Font>,JFontChooser,JPopupMenu)",1,1,1
"org.jhotdraw.draw.action.FontChooserHandler.actionPerformed(ActionEvent)",1,2,3
"org.jhotdraw.draw.action.FontChooserHandler.applySelectedFontToFigures()",1,4,4
"org.jhotdraw.draw.action.FontChooserHandler.propertyChange(PropertyChangeEvent)",1,3,3
"org.jhotdraw.draw.action.FontChooserHandler.updateEnabledState()",5,7,7
"org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure)",1,1,1
"org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure,boolean)",1,1,1
"org.jhotdraw.draw.action.GroupAction.actionPerformed(ActionEvent)",1,4,4
"org.jhotdraw.draw.action.GroupAction.canGroup()",1,2,2
"org.jhotdraw.draw.action.GroupAction.canUngroup()",1,4,4
"org.jhotdraw.draw.action.GroupAction.groupFigures(DrawingView,CompositeFigure,Collection<Figure>)",1,2,2
"org.jhotdraw.draw.action.GroupAction.ungroupFigures(DrawingView,CompositeFigure)",1,1,1
"org.jhotdraw.draw.action.GroupAction.updateEnabledState()",1,3,3
"org.jhotdraw.draw.action.ImageBevelBorder.ImageBevelBorder(Image,Insets)",1,1,1
"org.jhotdraw.draw.action.ImageBevelBorder.ImageBevelBorder(Image,Insets,Insets)",1,1,1
"org.jhotdraw.draw.action.ImageBevelBorder.ImageBevelBorder(Image,Insets,Insets,boolean)",1,2,3
"org.jhotdraw.draw.action.ImageBevelBorder.getBorderInsets(Component)",1,1,1
"org.jhotdraw.draw.action.ImageBevelBorder.isBorderOpaque()",1,1,1
"org.jhotdraw.draw.action.ImageBevelBorder.paintBorder(Component,Graphics,int,int,int,int)",4,15,28
"org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.IncreaseHandleDetailLevelAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.increaseHandleDetaiLevel()",1,2,2
"org.jhotdraw.draw.action.LineDecorationIcon.LineDecorationIcon(LineDecoration,boolean)",1,2,2
"org.jhotdraw.draw.action.LineDecorationIcon.getIconHeight()",1,1,1
"org.jhotdraw.draw.action.LineDecorationIcon.getIconWidth()",1,1,1
"org.jhotdraw.draw.action.LineDecorationIcon.paintIcon(Component,Graphics,int,int)",1,1,1
"org.jhotdraw.draw.action.MoveAction.East.East(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.MoveAction.MoveAction(DrawingEditor,int,int)",1,1,1
"org.jhotdraw.draw.action.MoveAction.North.North(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.MoveAction.South.South(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.MoveAction.West.West(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.MoveAction.actionPerformed(ActionEvent)",1,3,3
"org.jhotdraw.draw.action.MoveConstrainedAction.East.East(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.MoveConstrainedAction.MoveConstrainedAction(DrawingEditor,TranslationDirection)",1,1,1
"org.jhotdraw.draw.action.MoveConstrainedAction.North.North(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.MoveConstrainedAction.South.South(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.MoveConstrainedAction.West.West(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.MoveConstrainedAction.actionPerformed(ActionEvent)",4,8,12
"org.jhotdraw.draw.action.PickAttributesAction.PickAttributesAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.PickAttributesAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.PickAttributesAction.pickAttributes()",1,4,4
"org.jhotdraw.draw.action.PickAttributesAction.selectionChanged(FigureSelectionEvent)",1,1,1
"org.jhotdraw.draw.action.PickAttributesAction.setExcludedAttributes(Set<AttributeKey<?>>)",1,1,1
"org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.SelectSameAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.SelectSameAction.selectSame()",1,4,4
"org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey<Color>)",1,1,1
"org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey<Color>,Icon)",1,1,1
"org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey<Color>,String)",1,1,1
"org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey<Color>,String,Icon)",1,1,1
"org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey<Color>,String,Icon,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.action.SelectionColorChooserAction.getInitialColor()",1,4,4
"org.jhotdraw.draw.action.SelectionColorChooserHandler.SelectionColorChooserHandler(DrawingEditor,AttributeKey<Color>,JColorChooser,JPopupMenu)",1,1,1
"org.jhotdraw.draw.action.SelectionColorChooserHandler.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.SelectionColorChooserHandler.applySelectedColorToFigures()",1,5,6
"org.jhotdraw.draw.action.SelectionColorChooserHandler.stateChanged(ChangeEvent)",1,2,2
"org.jhotdraw.draw.action.SelectionColorChooserHandler.updateEnabledState()",4,6,7
"org.jhotdraw.draw.action.SelectionColorIcon.SelectionColorIcon(DrawingEditor,AttributeKey<Color>,Image,Shape)",1,1,1
"org.jhotdraw.draw.action.SelectionColorIcon.SelectionColorIcon(DrawingEditor,AttributeKey<Color>,URL,Shape)",1,1,1
"org.jhotdraw.draw.action.SelectionColorIcon.paintIcon(Component,Graphics,int,int)",1,4,4
"org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.SendToBackAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.action.SendToBackAction.sendToBack(DrawingView,Collection<Figure>)",1,2,2
"org.jhotdraw.draw.action.StrokeIcon.StrokeIcon(Stroke)",1,1,1
"org.jhotdraw.draw.action.StrokeIcon.getIconHeight()",1,1,1
"org.jhotdraw.draw.action.StrokeIcon.getIconWidth()",1,1,1
"org.jhotdraw.draw.action.StrokeIcon.paintIcon(Component,Graphics,int,int)",1,1,2
"org.jhotdraw.draw.action.ToggleGridAction.ToggleGridAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.ToggleGridAction.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.draw.action.ToggleGridAction.updateViewState()",1,2,2
"org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor)",1,1,1
"org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor,CompositeFigure)",1,1,1
"org.jhotdraw.draw.action.ZoomAction.ZoomAction(DrawingEditor,double,AbstractButton)",1,1,1
"org.jhotdraw.draw.action.ZoomAction.ZoomAction(DrawingView,double,AbstractButton)",1,1,1
"org.jhotdraw.draw.action.ZoomAction.actionPerformed(ActionEvent)",1,3,3
"org.jhotdraw.draw.action.ZoomEditorAction.ZoomEditorAction(DrawingEditor,double,AbstractButton)",1,1,1
"org.jhotdraw.draw.action.ZoomEditorAction.ZoomEditorAction(DrawingEditor,double,AbstractButton,boolean)",1,1,1
"org.jhotdraw.draw.action.ZoomEditorAction.actionPerformed(ActionEvent)",1,4,4
"org.jhotdraw.draw.connector.AbstractConnector.AbstractConnector()",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.AbstractConnector(Figure)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.clone()",1,2,2
"org.jhotdraw.draw.connector.AbstractConnector.contains(Double)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.findEnd(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.findPoint(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.findStart(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.getAnchor()",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.getBounds()",1,2,2
"org.jhotdraw.draw.connector.AbstractConnector.getConnectorTarget(Figure)",1,3,3
"org.jhotdraw.draw.connector.AbstractConnector.getDrawingArea()",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.getOwner()",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.isConnectToDecorator()",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.read(DOMInput)",1,3,3
"org.jhotdraw.draw.connector.AbstractConnector.setConnectToDecorator(boolean)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.setOwner(Figure)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.updateAnchor(Double)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.updateEndLocation(Double)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.updateStartLocation(Double)",1,1,1
"org.jhotdraw.draw.connector.AbstractConnector.write(DOMOutput)",1,3,3
"org.jhotdraw.draw.connector.ChopBezierConnector.ChopBezierConnector()",1,1,1
"org.jhotdraw.draw.connector.ChopBezierConnector.ChopBezierConnector(BezierFigure)",1,1,1
"org.jhotdraw.draw.connector.ChopBezierConnector.chop(Figure,Double)",1,1,1
"org.jhotdraw.draw.connector.ChopDiamondConnector.ChopDiamondConnector()",1,1,1
"org.jhotdraw.draw.connector.ChopDiamondConnector.ChopDiamondConnector(Figure)",1,1,1
"org.jhotdraw.draw.connector.ChopDiamondConnector.chop(Figure,Double)",4,9,17
"org.jhotdraw.draw.connector.ChopEllipseConnector.ChopEllipseConnector()",1,1,1
"org.jhotdraw.draw.connector.ChopEllipseConnector.ChopEllipseConnector(Figure)",1,1,1
"org.jhotdraw.draw.connector.ChopEllipseConnector.chop(Figure,Double)",2,3,5
"org.jhotdraw.draw.connector.ChopEllipseConnector.getStrokeColor(Figure)",1,1,1
"org.jhotdraw.draw.connector.ChopEllipseConnector.getStrokeWidth(Figure)",1,2,2
"org.jhotdraw.draw.connector.ChopRectangleConnector.ChopRectangleConnector()",1,1,1
"org.jhotdraw.draw.connector.ChopRectangleConnector.ChopRectangleConnector(Figure)",1,1,1
"org.jhotdraw.draw.connector.ChopRectangleConnector.chop(Figure,Double)",2,3,5
"org.jhotdraw.draw.connector.ChopRectangleConnector.findEnd(ConnectionFigure)",1,7,7
"org.jhotdraw.draw.connector.ChopRectangleConnector.findStart(ConnectionFigure)",1,4,4
"org.jhotdraw.draw.connector.ChopRoundRectangleConnector.ChopRoundRectangleConnector()",1,1,1
"org.jhotdraw.draw.connector.ChopRoundRectangleConnector.ChopRoundRectangleConnector(Figure)",1,1,1
"org.jhotdraw.draw.connector.ChopRoundRectangleConnector.chop(Figure,Double)",2,3,6
"org.jhotdraw.draw.connector.ChopTriangleConnector.ChopTriangleConnector()",1,1,1
"org.jhotdraw.draw.connector.ChopTriangleConnector.ChopTriangleConnector(TriangleFigure)",1,1,1
"org.jhotdraw.draw.connector.ChopTriangleConnector.chop(Figure,Double)",1,1,1
"org.jhotdraw.draw.connector.LocatorConnector.LocatorConnector()",1,1,1
"org.jhotdraw.draw.connector.LocatorConnector.LocatorConnector(Figure,Locator)",1,1,1
"org.jhotdraw.draw.connector.LocatorConnector.contains(Double)",1,1,1
"org.jhotdraw.draw.connector.LocatorConnector.getBounds()",1,1,1
"org.jhotdraw.draw.connector.LocatorConnector.getLocator()",1,1,1
"org.jhotdraw.draw.connector.LocatorConnector.locate(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.connector.LocatorConnector.read(DOMInput)",1,1,1
"org.jhotdraw.draw.connector.LocatorConnector.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.StickyRectangleConnector()",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.StickyRectangleConnector(Figure)",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.StickyRectangleConnector(Figure,Double)",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.chop(Figure,Double)",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.getAnchor()",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.getAngle()",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.getParameters()",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.read(DOMInput)",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.setAngle(float)",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.updateAnchor(Double)",1,1,1
"org.jhotdraw.draw.connector.StickyRectangleConnector.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.decoration.AbstractLineDecoration.AbstractLineDecoration(boolean,boolean,boolean)",1,1,1
"org.jhotdraw.draw.decoration.AbstractLineDecoration.draw(Graphics2D,Figure,Double,Double)",1,6,6
"org.jhotdraw.draw.decoration.AbstractLineDecoration.getDecorationRadius(Figure)",1,1,2
"org.jhotdraw.draw.decoration.AbstractLineDecoration.getDrawingArea(Figure,Double,Double)",1,2,3
"org.jhotdraw.draw.decoration.AbstractLineDecoration.getTransformedDecoratorPath(Figure,Double,Double)",1,2,2
"org.jhotdraw.draw.decoration.AbstractLineDecoration.isFilled()",1,1,1
"org.jhotdraw.draw.decoration.AbstractLineDecoration.isSolid()",1,1,1
"org.jhotdraw.draw.decoration.AbstractLineDecoration.isStroked()",1,1,1
"org.jhotdraw.draw.decoration.AbstractLineDecoration.setFilled(boolean)",1,1,1
"org.jhotdraw.draw.decoration.AbstractLineDecoration.setSolid(boolean)",1,1,1
"org.jhotdraw.draw.decoration.AbstractLineDecoration.setStroked(boolean)",1,1,1
"org.jhotdraw.draw.decoration.ArrowTip.ArrowTip()",1,1,1
"org.jhotdraw.draw.decoration.ArrowTip.ArrowTip(double,double,double)",1,1,1
"org.jhotdraw.draw.decoration.ArrowTip.ArrowTip(double,double,double,boolean,boolean,boolean)",1,1,1
"org.jhotdraw.draw.decoration.ArrowTip.getAngle()",1,1,1
"org.jhotdraw.draw.decoration.ArrowTip.getDecoratorPath(Figure)",1,2,3
"org.jhotdraw.draw.decoration.ArrowTip.getDecoratorPathRadius(Figure)",1,1,2
"org.jhotdraw.draw.decoration.ArrowTip.getInnerRadius()",1,1,1
"org.jhotdraw.draw.decoration.ArrowTip.getOuterRadius()",1,1,1
"org.jhotdraw.draw.decoration.ArrowTip.read(DOMInput)",1,1,1
"org.jhotdraw.draw.decoration.ArrowTip.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.decoration.CompositeLineDecoration.CompositeLineDecoration()",1,1,1
"org.jhotdraw.draw.decoration.CompositeLineDecoration.CompositeLineDecoration(LineDecoration,LineDecoration)",1,1,1
"org.jhotdraw.draw.decoration.CompositeLineDecoration.addDecoration(LineDecoration)",1,2,2
"org.jhotdraw.draw.decoration.CompositeLineDecoration.draw(Graphics2D,Figure,Double,Double)",1,2,2
"org.jhotdraw.draw.decoration.CompositeLineDecoration.getDecorationRadius(Figure)",1,2,2
"org.jhotdraw.draw.decoration.CompositeLineDecoration.getDrawingArea(Figure,Double,Double)",1,3,3
"org.jhotdraw.draw.decoration.CompositeLineDecoration.read(DOMInput)",1,3,3
"org.jhotdraw.draw.decoration.CompositeLineDecoration.write(DOMOutput)",1,2,2
"org.jhotdraw.draw.decoration.GeneralPathTip.GeneralPathTip(Double,double)",1,1,1
"org.jhotdraw.draw.decoration.GeneralPathTip.GeneralPathTip(Double,double,boolean,boolean,boolean)",1,1,1
"org.jhotdraw.draw.decoration.GeneralPathTip.getDecoratorPath(Figure)",1,1,1
"org.jhotdraw.draw.decoration.GeneralPathTip.getDecoratorPathRadius(Figure)",1,1,1
"org.jhotdraw.draw.decoration.PerpendicularBar.PerpendicularBar()",1,1,1
"org.jhotdraw.draw.decoration.PerpendicularBar.PerpendicularBar(double)",1,1,1
"org.jhotdraw.draw.decoration.PerpendicularBar.getDecoratorPath(Figure)",1,1,1
"org.jhotdraw.draw.decoration.PerpendicularBar.getDecoratorPathRadius(Figure)",1,1,1
"org.jhotdraw.draw.decoration.PerpendicularBar.read(DOMInput)",1,1,1
"org.jhotdraw.draw.decoration.PerpendicularBar.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.AbstractAttributeEditorHandler(AttributeKey<T>,AttributeEditor<T>,DrawingEditor)",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.AbstractAttributeEditorHandler(AttributeKey<T>,AttributeEditor<T>,DrawingEditor,boolean)",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.AbstractAttributeEditorHandler(AttributeKey<T>,Map<AttributeKey<?>, Object>,AttributeEditor<T>,DrawingEditor,boolean)",1,2,2
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.EventHandler.attributeChanged(FigureEvent)",1,2,2
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.EventHandler.propertyChange(PropertyChangeEvent)",1,8,11
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.EventHandler.selectionChanged(FigureSelectionEvent)",1,4,4
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.UndoableAttributeEdit.UndoableAttributeEdit(Set<Figure>,AttributeKey<T>,T,LinkedList<Object>)",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.UndoableAttributeEdit.getPresentationName()",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.UndoableAttributeEdit.redo()",1,2,2
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.UndoableAttributeEdit.replaceEdit(UndoableEdit)",2,1,2
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.UndoableAttributeEdit.undo()",1,2,2
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.dispose()",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.getActiveView()",2,2,2
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.getAttributeEditor()",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.getAttributeKey()",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.getEditor()",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.getView()",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.isUpdateDrawingEditorDefaults()",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.setAttributeEditor(AttributeEditor<T>)",1,3,3
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.setAttributeKey(AttributeKey<T>)",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.setEditor(DrawingEditor)",1,3,3
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.setUpdateDrawingEditorDefaults(boolean)",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.setView(DrawingView)",1,1,1
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.updateActiveView()",1,9,9
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.updateAttributeEditor()",6,9,12
"org.jhotdraw.draw.event.AbstractAttributeEditorHandler.updateFigures()",1,9,11
"org.jhotdraw.draw.event.AttributeChangeEdit.AttributeChangeEdit(Figure,AttributeKey<T>,T,T)",1,1,1
"org.jhotdraw.draw.event.AttributeChangeEdit.getPresentationName()",1,1,1
"org.jhotdraw.draw.event.AttributeChangeEdit.redo()",1,1,1
"org.jhotdraw.draw.event.AttributeChangeEdit.undo()",1,1,1
"org.jhotdraw.draw.event.BezierNodeEdit.BezierNodeEdit(BezierFigure,int,Node,Node)",1,1,1
"org.jhotdraw.draw.event.BezierNodeEdit.addEdit(UndoableEdit)",3,1,4
"org.jhotdraw.draw.event.BezierNodeEdit.getPresentationName()",2,2,2
"org.jhotdraw.draw.event.BezierNodeEdit.redo()",1,1,2
"org.jhotdraw.draw.event.BezierNodeEdit.undo()",1,1,1
"org.jhotdraw.draw.event.CompositeFigureEdit.CompositeFigureEdit(Figure)",1,1,1
"org.jhotdraw.draw.event.CompositeFigureEdit.CompositeFigureEdit(Figure,String)",1,1,1
"org.jhotdraw.draw.event.CompositeFigureEdit.CompositeFigureEdit(Figure,String,boolean)",1,1,1
"org.jhotdraw.draw.event.CompositeFigureEdit.CompositeFigureEdit(Figure,boolean)",1,1,1
"org.jhotdraw.draw.event.CompositeFigureEdit.redo()",2,1,2
"org.jhotdraw.draw.event.CompositeFigureEdit.undo()",2,1,2
"org.jhotdraw.draw.event.CompositeFigureEvent.CompositeFigureEvent(CompositeFigure,Figure,Double,int)",1,1,1
"org.jhotdraw.draw.event.CompositeFigureEvent.getChildFigure()",1,1,1
"org.jhotdraw.draw.event.CompositeFigureEvent.getCompositeFigure()",1,1,1
"org.jhotdraw.draw.event.CompositeFigureEvent.getIndex()",1,1,1
"org.jhotdraw.draw.event.CompositeFigureEvent.getInvalidatedArea()",1,1,1
"org.jhotdraw.draw.event.DrawingAttributeEditorHandler.DrawingAttributeEditorHandler(AttributeKey<T>,AttributeEditor<T>,DrawingEditor)",1,1,1
"org.jhotdraw.draw.event.DrawingAttributeEditorHandler.getDrawing()",1,1,1
"org.jhotdraw.draw.event.DrawingAttributeEditorHandler.getEditedFigures()",1,3,3
"org.jhotdraw.draw.event.DrawingAttributeEditorHandler.setDrawing(Drawing)",1,1,1
"org.jhotdraw.draw.event.DrawingComponentRepainter.DrawingComponentRepainter(DrawingEditor,JComponent)",1,4,4
"org.jhotdraw.draw.event.DrawingComponentRepainter.attributeChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.event.DrawingComponentRepainter.dispose()",1,4,4
"org.jhotdraw.draw.event.DrawingComponentRepainter.propertyChange(PropertyChangeEvent)",1,9,9
"org.jhotdraw.draw.event.FigureAdapter.areaInvalidated(FigureEvent)",1,1,1
"org.jhotdraw.draw.event.FigureAdapter.attributeChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.event.FigureAdapter.figureAdded(FigureEvent)",1,1,1
"org.jhotdraw.draw.event.FigureAdapter.figureChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.event.FigureAdapter.figureHandlesChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.event.FigureAdapter.figureRemoved(FigureEvent)",1,1,1
"org.jhotdraw.draw.event.FigureAdapter.figureRequestRemove(FigureEvent)",1,1,1
"org.jhotdraw.draw.event.FigureAttributeEditorHandler.FigureAttributeEditorHandler(AttributeKey<T>,AttributeEditor<T>,DrawingEditor)",1,1,1
"org.jhotdraw.draw.event.FigureAttributeEditorHandler.FigureAttributeEditorHandler(AttributeKey<T>,AttributeEditor<T>,DrawingEditor,boolean)",1,1,1
"org.jhotdraw.draw.event.FigureAttributeEditorHandler.FigureAttributeEditorHandler(AttributeKey<T>,Map<AttributeKey<?>, Object>,AttributeEditor<T>,DrawingEditor,boolean)",1,1,1
"org.jhotdraw.draw.event.FigureAttributeEditorHandler.getEditedFigures()",1,2,2
"org.jhotdraw.draw.event.FigureEvent.FigureEvent(Figure,AttributeKey<?>,Object,Object)",1,1,1
"org.jhotdraw.draw.event.FigureEvent.FigureEvent(Figure,Double)",1,1,1
"org.jhotdraw.draw.event.FigureEvent.getAttribute()",1,1,1
"org.jhotdraw.draw.event.FigureEvent.getFigure()",1,1,1
"org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()",1,1,1
"org.jhotdraw.draw.event.FigureEvent.getNewValue()",1,1,1
"org.jhotdraw.draw.event.FigureEvent.getOldValue()",1,1,1
"org.jhotdraw.draw.event.FigureSelectionEvent.FigureSelectionEvent(DrawingView,Set<Figure>,Set<Figure>)",1,1,1
"org.jhotdraw.draw.event.FigureSelectionEvent.getNewSelection()",1,1,1
"org.jhotdraw.draw.event.FigureSelectionEvent.getOldSelection()",1,1,1
"org.jhotdraw.draw.event.FigureSelectionEvent.getView()",1,1,1
"org.jhotdraw.draw.event.HandleEvent.HandleEvent(Handle,Rectangle)",1,1,1
"org.jhotdraw.draw.event.HandleEvent.getHandle()",1,1,1
"org.jhotdraw.draw.event.HandleEvent.getInvalidatedArea()",1,1,1
"org.jhotdraw.draw.event.HandleMulticaster.HandleMulticaster(Collection<Handle>)",1,1,1
"org.jhotdraw.draw.event.HandleMulticaster.HandleMulticaster(Handle)",1,1,1
"org.jhotdraw.draw.event.HandleMulticaster.draw(Graphics2D)",1,2,2
"org.jhotdraw.draw.event.HandleMulticaster.keyPressed(KeyEvent)",3,2,3
"org.jhotdraw.draw.event.HandleMulticaster.keyReleased(KeyEvent)",1,2,2
"org.jhotdraw.draw.event.HandleMulticaster.keyTyped(KeyEvent)",1,2,2
"org.jhotdraw.draw.event.HandleMulticaster.trackDoubleClick(Point,int,DrawingView)",1,2,2
"org.jhotdraw.draw.event.HandleMulticaster.trackEnd(Point,Point,int,DrawingView)",1,2,2
"org.jhotdraw.draw.event.HandleMulticaster.trackStart(Point,int,DrawingView)",1,2,2
"org.jhotdraw.draw.event.HandleMulticaster.trackStep(Point,Point,int,DrawingView)",1,2,2
"org.jhotdraw.draw.event.SelectionComponentDisplayer.SelectionComponentDisplayer(DrawingEditor,JComponent)",1,2,2
"org.jhotdraw.draw.event.SelectionComponentDisplayer.dispose()",1,3,3
"org.jhotdraw.draw.event.SelectionComponentDisplayer.getComponent()",1,1,1
"org.jhotdraw.draw.event.SelectionComponentDisplayer.propertyChange(PropertyChangeEvent)",1,5,5
"org.jhotdraw.draw.event.SelectionComponentDisplayer.selectionChanged(FigureSelectionEvent)",1,1,1
"org.jhotdraw.draw.event.SelectionComponentDisplayer.setMinSelectionCount(int)",1,1,1
"org.jhotdraw.draw.event.SelectionComponentDisplayer.setVisibleIfCreationTool(boolean)",1,1,1
"org.jhotdraw.draw.event.SelectionComponentDisplayer.updateVisibility()",2,9,9
"org.jhotdraw.draw.event.SelectionComponentRepainter.SelectionComponentRepainter(DrawingEditor,JComponent)",1,4,4
"org.jhotdraw.draw.event.SelectionComponentRepainter.attributeChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.event.SelectionComponentRepainter.dispose()",1,4,4
"org.jhotdraw.draw.event.SelectionComponentRepainter.propertyChange(PropertyChangeEvent)",1,9,9
"org.jhotdraw.draw.event.SelectionComponentRepainter.selectionChanged(FigureSelectionEvent)",1,1,1
"org.jhotdraw.draw.event.SetBoundsEdit.SetBoundsEdit(AbstractFigure,Double,Double,Double,Double)",1,1,1
"org.jhotdraw.draw.event.SetBoundsEdit.addEdit(UndoableEdit)",3,3,3
"org.jhotdraw.draw.event.SetBoundsEdit.getPresentationName()",1,1,1
"org.jhotdraw.draw.event.SetBoundsEdit.redo()",1,1,1
"org.jhotdraw.draw.event.SetBoundsEdit.replaceEdit(UndoableEdit)",3,3,3
"org.jhotdraw.draw.event.SetBoundsEdit.undo()",1,1,1
"org.jhotdraw.draw.event.ToolAdapter.areaInvalidated(ToolEvent)",1,1,1
"org.jhotdraw.draw.event.ToolAdapter.boundsInvalidated(ToolEvent)",1,1,1
"org.jhotdraw.draw.event.ToolAdapter.toolDone(ToolEvent)",1,1,1
"org.jhotdraw.draw.event.ToolAdapter.toolStarted(ToolEvent)",1,1,1
"org.jhotdraw.draw.event.ToolEvent.ToolEvent(Tool,DrawingView,Rectangle)",1,1,1
"org.jhotdraw.draw.event.ToolEvent.getInvalidatedArea()",1,1,1
"org.jhotdraw.draw.event.ToolEvent.getTool()",1,1,1
"org.jhotdraw.draw.event.ToolEvent.getView()",1,1,1
"org.jhotdraw.draw.event.TransformEdit.TransformEdit(Collection<Figure>,AffineTransform)",1,1,1
"org.jhotdraw.draw.event.TransformEdit.TransformEdit(Figure,AffineTransform)",1,1,1
"org.jhotdraw.draw.event.TransformEdit.addEdit(UndoableEdit)",3,3,3
"org.jhotdraw.draw.event.TransformEdit.getPresentationName()",1,1,1
"org.jhotdraw.draw.event.TransformEdit.redo()",1,2,2
"org.jhotdraw.draw.event.TransformEdit.replaceEdit(UndoableEdit)",3,3,3
"org.jhotdraw.draw.event.TransformEdit.toString()",1,1,1
"org.jhotdraw.draw.event.TransformEdit.undo()",1,3,3
"org.jhotdraw.draw.event.TransformRestoreEdit.TransformRestoreEdit(Figure,Object,Object)",1,1,1
"org.jhotdraw.draw.event.TransformRestoreEdit.getPresentationName()",1,1,1
"org.jhotdraw.draw.event.TransformRestoreEdit.redo()",1,1,1
"org.jhotdraw.draw.event.TransformRestoreEdit.undo()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.JAttributeSlider()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.JAttributeSlider(int,int,int,int)",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.fireStateChanged()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.getAttributeValue()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.getComponent()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.getScaleFactor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.initComponents()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.isMultipleValues()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.setAttributeValue(Double)",1,1,2
"org.jhotdraw.draw.gui.JAttributeSlider.setMultipleValues(boolean)",1,1,1
"org.jhotdraw.draw.gui.JAttributeSlider.setScaleFactor(double)",1,1,1
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeSliderBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextArea.JAttributeTextArea()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextArea.firePropertyChange(String,Object,Object)",1,2,2
"org.jhotdraw.draw.gui.JAttributeTextArea.getAttributeValue()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextArea.getComponent()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextArea.getValueIsAdjusting()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextArea.initComponents()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextArea.isMultipleValues()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextArea.paintComponent(Graphics)",1,3,3
"org.jhotdraw.draw.gui.JAttributeTextArea.setAttributeValue(T)",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextArea.setMultipleValues(boolean)",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextAreaBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextField.JAttributeTextField()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextField.firePropertyChange(String,Object,Object)",1,2,2
"org.jhotdraw.draw.gui.JAttributeTextField.getAttributeValue()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextField.getComponent()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextField.getValueIsAdjusting()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextField.initComponents()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextField.isMultipleValues()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextField.paintComponent(Graphics)",1,3,3
"org.jhotdraw.draw.gui.JAttributeTextField.setAttributeValue(T)",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextField.setMultipleValues(boolean)",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.draw.gui.JAttributeTextFieldBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.draw.handle.AbstractConnectionHandle.AbstractConnectionHandle(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.handle.AbstractConnectionHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.AbstractConnectionHandle.createSecondaryHandles()",1,16,17
"org.jhotdraw.draw.handle.AbstractConnectionHandle.draw(Graphics2D)",1,3,3
"org.jhotdraw.draw.handle.AbstractConnectionHandle.findConnectableFigure(Double,Drawing)",3,4,5
"org.jhotdraw.draw.handle.AbstractConnectionHandle.findConnectionTarget(Double,Drawing)",4,7,8
"org.jhotdraw.draw.handle.AbstractConnectionHandle.findConnector(Double,Figure,ConnectionFigure)",1,1,1
"org.jhotdraw.draw.handle.AbstractConnectionHandle.getBezierFigure()",1,1,1
"org.jhotdraw.draw.handle.AbstractConnectionHandle.getBezierNode()",1,2,2
"org.jhotdraw.draw.handle.AbstractConnectionHandle.getOwner()",1,1,1
"org.jhotdraw.draw.handle.AbstractConnectionHandle.getSource()",2,2,2
"org.jhotdraw.draw.handle.AbstractConnectionHandle.getToolTipText(Point)",2,5,6
"org.jhotdraw.draw.handle.AbstractConnectionHandle.isCombinableWith(Handle)",1,1,1
"org.jhotdraw.draw.handle.AbstractConnectionHandle.repaintConnectors()",1,7,7
"org.jhotdraw.draw.handle.AbstractConnectionHandle.setPotentialTarget(Connector)",1,1,1
"org.jhotdraw.draw.handle.AbstractConnectionHandle.trackEnd(Point,Point,int)",1,4,10
"org.jhotdraw.draw.handle.AbstractConnectionHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.AbstractConnectionHandle.trackStep(Point,Point,int)",1,3,3
"org.jhotdraw.draw.handle.AbstractHandle.AbstractHandle(Figure)",2,1,2
"org.jhotdraw.draw.handle.AbstractHandle.addHandleListener(HandleListener)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.areaInvalidated(FigureEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.attributeChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.contains(Point)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.createSecondaryHandles()",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.dispose()",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.drawCircle(Graphics2D,Color,Color)",1,4,4
"org.jhotdraw.draw.handle.AbstractHandle.drawDiamond(Graphics2D,Color,Color)",1,5,5
"org.jhotdraw.draw.handle.AbstractHandle.drawRectangle(Graphics2D,Color,Color)",1,4,4
"org.jhotdraw.draw.handle.AbstractHandle.figureAdded(FigureEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.figureChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.figureHandlesChanged(FigureEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.figureRemoved(FigureEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.figureRequestRemove(FigureEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.fireAreaInvalidated(Rectangle)",1,3,4
"org.jhotdraw.draw.handle.AbstractHandle.fireHandleRequestRemove(Rectangle)",1,3,4
"org.jhotdraw.draw.handle.AbstractHandle.fireHandleRequestSecondaryHandles()",1,3,4
"org.jhotdraw.draw.handle.AbstractHandle.fireUndoableEditHappened(UndoableEdit)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.getBounds()",1,2,2
"org.jhotdraw.draw.handle.AbstractHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.getDrawingArea()",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.getEditor()",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.getHandlesize()",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.getOwner()",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.getToolTipText(Point)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.getView()",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.invalidate()",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.isCombinableWith(Handle)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.keyPressed(KeyEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.keyReleased(KeyEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.keyTyped(KeyEvent)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.removeHandleListener(HandleListener)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.setToolTipText(String)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.setView(DrawingView)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.trackDoubleClick(Point,int)",1,1,1
"org.jhotdraw.draw.handle.AbstractHandle.updateBounds()",1,4,4
"org.jhotdraw.draw.handle.AbstractHandle.viewTransformChanged()",1,1,1
"org.jhotdraw.draw.handle.AbstractRotateHandle.AbstractRotateHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.AbstractRotateHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.AbstractRotateHandle.draw(Graphics2D)",1,2,2
"org.jhotdraw.draw.handle.AbstractRotateHandle.getLocation()",2,2,2
"org.jhotdraw.draw.handle.AbstractRotateHandle.getRestoreData()",1,1,1
"org.jhotdraw.draw.handle.AbstractRotateHandle.getStartTheta()",1,1,1
"org.jhotdraw.draw.handle.AbstractRotateHandle.getToolTipText(Point)",1,1,1
"org.jhotdraw.draw.handle.AbstractRotateHandle.getTransformedBounds()",1,2,2
"org.jhotdraw.draw.handle.AbstractRotateHandle.isCombinableWith(Handle)",1,1,1
"org.jhotdraw.draw.handle.AbstractRotateHandle.keyPressed(KeyEvent)",2,3,4
"org.jhotdraw.draw.handle.AbstractRotateHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.AbstractRotateHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.AbstractRotateHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.BezierControlPointHandle.BezierControlPointHandle(BezierFigure,int,int)",1,1,1
"org.jhotdraw.draw.handle.BezierControlPointHandle.BezierControlPointHandle(BezierFigure,int,int,Figure)",1,1,1
"org.jhotdraw.draw.handle.BezierControlPointHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.BezierControlPointHandle.dispose()",1,1,1
"org.jhotdraw.draw.handle.BezierControlPointHandle.draw(Graphics2D)",1,11,13
"org.jhotdraw.draw.handle.BezierControlPointHandle.fireAreaInvalidated(Node)",1,2,2
"org.jhotdraw.draw.handle.BezierControlPointHandle.getBezierFigure()",1,1,1
"org.jhotdraw.draw.handle.BezierControlPointHandle.getBezierNode()",1,2,2
"org.jhotdraw.draw.handle.BezierControlPointHandle.getLocation()",2,3,3
"org.jhotdraw.draw.handle.BezierControlPointHandle.getOwner()",1,1,1
"org.jhotdraw.draw.handle.BezierControlPointHandle.getToolTipText(Point)",3,2,4
"org.jhotdraw.draw.handle.BezierControlPointHandle.getTransformOwner()",1,1,1
"org.jhotdraw.draw.handle.BezierControlPointHandle.isCombinableWith(Handle)",2,4,4
"org.jhotdraw.draw.handle.BezierControlPointHandle.keyPressed(KeyEvent)",2,2,6
"org.jhotdraw.draw.handle.BezierControlPointHandle.trackEnd(Point,Point,int)",1,3,4
"org.jhotdraw.draw.handle.BezierControlPointHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.BezierControlPointHandle.trackStep(Point,Point,int)",1,4,5
"org.jhotdraw.draw.handle.BezierNodeHandle.BezierNodeHandle(BezierFigure,int)",1,1,1
"org.jhotdraw.draw.handle.BezierNodeHandle.BezierNodeHandle(BezierFigure,int,Figure)",1,1,1
"org.jhotdraw.draw.handle.BezierNodeHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.BezierNodeHandle.createSecondaryHandles()",1,14,15
"org.jhotdraw.draw.handle.BezierNodeHandle.dispose()",1,2,2
"org.jhotdraw.draw.handle.BezierNodeHandle.draw(Graphics2D)",1,5,16
"org.jhotdraw.draw.handle.BezierNodeHandle.fireAreaInvalidated(Node)",1,2,2
"org.jhotdraw.draw.handle.BezierNodeHandle.getBezierNode()",1,2,2
"org.jhotdraw.draw.handle.BezierNodeHandle.getLocation()",2,3,3
"org.jhotdraw.draw.handle.BezierNodeHandle.getOwner()",1,1,1
"org.jhotdraw.draw.handle.BezierNodeHandle.getToolTipText(Point)",1,3,4
"org.jhotdraw.draw.handle.BezierNodeHandle.getTransformOwner()",1,1,1
"org.jhotdraw.draw.handle.BezierNodeHandle.isCombinableWith(Handle)",1,1,1
"org.jhotdraw.draw.handle.BezierNodeHandle.keyPressed(KeyEvent)",2,2,6
"org.jhotdraw.draw.handle.BezierNodeHandle.trackDoubleClick(Point,int)",1,3,3
"org.jhotdraw.draw.handle.BezierNodeHandle.trackEnd(Point,Point,int)",1,4,9
"org.jhotdraw.draw.handle.BezierNodeHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.BezierNodeHandle.trackStep(Point,Point,int)",1,3,3
"org.jhotdraw.draw.handle.BezierOutlineHandle.BezierOutlineHandle(BezierFigure)",1,1,1
"org.jhotdraw.draw.handle.BezierOutlineHandle.BezierOutlineHandle(BezierFigure,boolean)",1,1,1
"org.jhotdraw.draw.handle.BezierOutlineHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.BezierOutlineHandle.contains(Point)",1,1,1
"org.jhotdraw.draw.handle.BezierOutlineHandle.draw(Graphics2D)",1,6,8
"org.jhotdraw.draw.handle.BezierOutlineHandle.getOwner()",1,1,1
"org.jhotdraw.draw.handle.BezierOutlineHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.BezierOutlineHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.BezierOutlineHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.BezierScaleHandle.BezierScaleHandle(BezierFigure)",1,1,1
"org.jhotdraw.draw.handle.BezierScaleHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.BezierScaleHandle.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.handle.BezierScaleHandle.getBezierFigure()",1,1,1
"org.jhotdraw.draw.handle.BezierScaleHandle.getLocation()",2,2,2
"org.jhotdraw.draw.handle.BezierScaleHandle.getOrigin()",3,1,3
"org.jhotdraw.draw.handle.BezierScaleHandle.isCombinableWith(Handle)",1,1,1
"org.jhotdraw.draw.handle.BezierScaleHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.BezierScaleHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.BezierScaleHandle.trackStep(Point,Point,int)",1,1,2
"org.jhotdraw.draw.handle.BoundsOutlineHandle.BoundsOutlineHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.BoundsOutlineHandle.BoundsOutlineHandle(Figure,AttributeKey<Stroke>,AttributeKey<Color>,AttributeKey<Stroke>,AttributeKey<Color>,AttributeKey<Stroke>,AttributeKey<Color>,AttributeKey<Stroke>,AttributeKey<Color>)",1,1,1
"org.jhotdraw.draw.handle.BoundsOutlineHandle.BoundsOutlineHandle(Figure,boolean,boolean)",1,1,4
"org.jhotdraw.draw.handle.BoundsOutlineHandle.basicGetBounds()",1,2,2
"org.jhotdraw.draw.handle.BoundsOutlineHandle.contains(Point)",1,1,1
"org.jhotdraw.draw.handle.BoundsOutlineHandle.draw(Graphics2D)",1,5,7
"org.jhotdraw.draw.handle.BoundsOutlineHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.BoundsOutlineHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.BoundsOutlineHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.CloseHandle.CloseHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.CloseHandle.CloseHandle(Figure,Locator)",1,1,1
"org.jhotdraw.draw.handle.CloseHandle.draw(Graphics2D)",1,1,2
"org.jhotdraw.draw.handle.CloseHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.CloseHandle.getHandlesize()",1,1,1
"org.jhotdraw.draw.handle.CloseHandle.trackEnd(Point,Point,int)",1,2,2
"org.jhotdraw.draw.handle.CloseHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.CloseHandle.trackStep(Point,Point,int)",1,2,2
"org.jhotdraw.draw.handle.ConnectionEndHandle.ConnectionEndHandle(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.handle.ConnectionEndHandle.canConnect(Connector,Connector)",1,1,1
"org.jhotdraw.draw.handle.ConnectionEndHandle.connect(Connector)",1,1,1
"org.jhotdraw.draw.handle.ConnectionEndHandle.disconnect()",1,1,1
"org.jhotdraw.draw.handle.ConnectionEndHandle.getBezierNodeIndex()",1,1,1
"org.jhotdraw.draw.handle.ConnectionEndHandle.getLocation()",1,1,1
"org.jhotdraw.draw.handle.ConnectionEndHandle.getTarget()",1,1,1
"org.jhotdraw.draw.handle.ConnectionEndHandle.setLocation(Double)",1,1,1
"org.jhotdraw.draw.handle.ConnectionStartHandle.ConnectionStartHandle(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.handle.ConnectionStartHandle.canConnect(Connector,Connector)",1,1,1
"org.jhotdraw.draw.handle.ConnectionStartHandle.connect(Connector)",1,1,1
"org.jhotdraw.draw.handle.ConnectionStartHandle.disconnect()",1,1,1
"org.jhotdraw.draw.handle.ConnectionStartHandle.getBezierNodeIndex()",1,1,1
"org.jhotdraw.draw.handle.ConnectionStartHandle.getLocation()",1,1,1
"org.jhotdraw.draw.handle.ConnectionStartHandle.getTarget()",1,1,1
"org.jhotdraw.draw.handle.ConnectionStartHandle.setLocation(Double)",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.ConnectorHandle(Connector,ConnectionFigure)",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.createConnection()",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.draw(Graphics2D)",1,3,3
"org.jhotdraw.draw.handle.ConnectorHandle.findConnectableConnector(Figure,Double)",2,5,6
"org.jhotdraw.draw.handle.ConnectorHandle.findConnectableFigure(Double,Drawing)",3,4,5
"org.jhotdraw.draw.handle.ConnectorHandle.getConnection()",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.getDrawingArea()",2,2,2
"org.jhotdraw.draw.handle.ConnectorHandle.getLocation()",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.getLocationOnDrawing()",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.getTargetFigure()",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.isCombinableWith(Handle)",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.repaintConnectors()",1,7,7
"org.jhotdraw.draw.handle.ConnectorHandle.setConnection(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.setTargetFigure(Figure)",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.trackEnd(Point,Point,int)",1,2,2
"org.jhotdraw.draw.handle.ConnectorHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.ConnectorHandle.trackStep(Point,Point,int)",1,3,3
"org.jhotdraw.draw.handle.DragHandle.DragHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.DragHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.DragHandle.contains(Point)",1,1,1
"org.jhotdraw.draw.handle.DragHandle.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.handle.DragHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.DragHandle.trackEnd(Point,Point,int)",1,4,4
"org.jhotdraw.draw.handle.DragHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.DragHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.FontSizeHandle.FontSizeHandle(TextHolderFigure)",1,1,1
"org.jhotdraw.draw.handle.FontSizeHandle.FontSizeHandle(TextHolderFigure,Locator)",1,1,1
"org.jhotdraw.draw.handle.FontSizeHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.FontSizeHandle.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.handle.FontSizeHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.FontSizeHandle.getToolTipText(Point)",1,1,1
"org.jhotdraw.draw.handle.FontSizeHandle.keyPressed(KeyEvent)",2,3,7
"org.jhotdraw.draw.handle.FontSizeHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.FontSizeHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.FontSizeHandle.trackStep(Point,Point,int)",1,3,3
"org.jhotdraw.draw.handle.LocatorHandle.LocatorHandle(Figure,Locator)",1,1,1
"org.jhotdraw.draw.handle.LocatorHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.LocatorHandle.getLocation()",1,1,1
"org.jhotdraw.draw.handle.LocatorHandle.getLocationOnDrawing()",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.MoveHandle(Figure,Locator)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.addMoveHandles(Figure,Collection<Handle>)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.draw(Graphics2D)",1,2,2
"org.jhotdraw.draw.handle.MoveHandle.east(Figure)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.getCursor()",1,1,2
"org.jhotdraw.draw.handle.MoveHandle.keyPressed(KeyEvent)",2,3,6
"org.jhotdraw.draw.handle.MoveHandle.north(Figure)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.northEast(Figure)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.northWest(Figure)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.south(Figure)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.southEast(Figure)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.southWest(Figure)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.trackEnd(Point,Point,int)",1,2,2
"org.jhotdraw.draw.handle.MoveHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.MoveHandle.trackStep(Point,Point,int)",1,2,2
"org.jhotdraw.draw.handle.MoveHandle.west(Figure)",1,1,1
"org.jhotdraw.draw.handle.NullHandle.NullHandle(Figure,Locator)",1,1,1
"org.jhotdraw.draw.handle.NullHandle.addLeadHandles(Figure,Collection<Handle>)",1,1,1
"org.jhotdraw.draw.handle.NullHandle.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.handle.NullHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.NullHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.NullHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.NullHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.OrientationHandle.OrientationHandle(TriangleFigure)",1,1,1
"org.jhotdraw.draw.handle.OrientationHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.OrientationHandle.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.handle.OrientationHandle.getLocation()",2,2,9
"org.jhotdraw.draw.handle.OrientationHandle.isCombinableWith(Handle)",1,1,1
"org.jhotdraw.draw.handle.OrientationHandle.trackEnd(Point,Point,int)",1,2,2
"org.jhotdraw.draw.handle.OrientationHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.OrientationHandle.trackStep(Point,Point,int)",2,2,9
"org.jhotdraw.draw.handle.ResizeHandleKit.EastHandle.EastHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.EastHandle.getCursor()",1,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.EastHandle.keyPressed(KeyEvent)",3,4,6
"org.jhotdraw.draw.handle.ResizeHandleKit.EastHandle.trackStepNormalized(Double,boolean)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthEastHandle.NorthEastHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthEastHandle.getCursor()",1,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthEastHandle.keyPressed(KeyEvent)",3,5,8
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthEastHandle.trackStepNormalized(Double,boolean)",1,3,3
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthHandle.NorthHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthHandle.getCursor()",1,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthHandle.keyPressed(KeyEvent)",3,4,6
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthHandle.trackStepNormalized(Double,boolean)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthWestHandle.NorthWestHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthWestHandle.getCursor()",1,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthWestHandle.keyPressed(KeyEvent)",3,5,8
"org.jhotdraw.draw.handle.ResizeHandleKit.NorthWestHandle.trackStepNormalized(Double,boolean)",1,3,3
"org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandle.ResizeHandle(Figure,Locator)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandle.draw(Graphics2D)",1,3,3
"org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandle.getToolTipText(Point)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandle.setBounds(Double,Double)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandle.trackEnd(Point,Point,int)",2,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandle.trackStart(Point,int)",2,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandle.trackStep(Point,Point,int)",2,4,5
"org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandle.trackStepNormalized(Double,boolean)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandleKit()",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthEastHandle.SouthEastHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthEastHandle.getCursor()",1,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthEastHandle.keyPressed(KeyEvent)",3,5,8
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthEastHandle.trackStepNormalized(Double,boolean)",1,3,3
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthHandle.SouthHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthHandle.getCursor()",1,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthHandle.keyPressed(KeyEvent)",3,4,7
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthHandle.trackStepNormalized(Double,boolean)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthWestHandle.SouthWestHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthWestHandle.getCursor()",1,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthWestHandle.keyPressed(KeyEvent)",3,5,8
"org.jhotdraw.draw.handle.ResizeHandleKit.SouthWestHandle.trackStepNormalized(Double,boolean)",1,3,3
"org.jhotdraw.draw.handle.ResizeHandleKit.WestHandle.WestHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.WestHandle.getCursor()",1,1,2
"org.jhotdraw.draw.handle.ResizeHandleKit.WestHandle.keyPressed(KeyEvent)",3,4,6
"org.jhotdraw.draw.handle.ResizeHandleKit.WestHandle.trackStepNormalized(Double,boolean)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.addCornerResizeHandles(Figure,Collection<Handle>)",1,2,2
"org.jhotdraw.draw.handle.ResizeHandleKit.addEdgeResizeHandles(Figure,Collection<Handle>)",1,2,2
"org.jhotdraw.draw.handle.ResizeHandleKit.addResizeHandles(Figure,Collection<Handle>)",1,2,2
"org.jhotdraw.draw.handle.ResizeHandleKit.east(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.north(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.northEast(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.northWest(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.south(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.southEast(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.southWest(Figure)",1,1,1
"org.jhotdraw.draw.handle.ResizeHandleKit.west(Figure)",1,1,1
"org.jhotdraw.draw.handle.RotateHandle.RotateHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.RotateHandle.getCenter()",1,1,1
"org.jhotdraw.draw.handle.RotateHandle.getOrigin()",1,1,1
"org.jhotdraw.draw.handle.RoundRectangleRadiusHandle.RoundRectangleRadiusHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.RoundRectangleRadiusHandle.basicGetBounds()",1,1,1
"org.jhotdraw.draw.handle.RoundRectangleRadiusHandle.draw(Graphics2D)",1,2,2
"org.jhotdraw.draw.handle.RoundRectangleRadiusHandle.getToolTipText(Point)",1,1,1
"org.jhotdraw.draw.handle.RoundRectangleRadiusHandle.keyPressed(KeyEvent)",2,5,8
"org.jhotdraw.draw.handle.RoundRectangleRadiusHandle.locate()",1,1,1
"org.jhotdraw.draw.handle.RoundRectangleRadiusHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.RoundRectangleRadiusHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.RoundRectangleRadiusHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.TextOverflowHandle.TextOverflowHandle(TextHolderFigure)",1,1,1
"org.jhotdraw.draw.handle.TextOverflowHandle.basicGetBounds()",1,2,2
"org.jhotdraw.draw.handle.TextOverflowHandle.contains(Point)",1,1,1
"org.jhotdraw.draw.handle.TextOverflowHandle.draw(Graphics2D)",1,2,2
"org.jhotdraw.draw.handle.TextOverflowHandle.getOwner()",1,1,1
"org.jhotdraw.draw.handle.TextOverflowHandle.getToolTipText(Point)",1,2,2
"org.jhotdraw.draw.handle.TextOverflowHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.TextOverflowHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.draw.handle.TextOverflowHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.EastHandle.EastHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.EastHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.EastHandle.keyPressed(KeyEvent)",3,4,7
"org.jhotdraw.draw.handle.TransformHandleKit.EastHandle.trackStepNormalized(Double)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.NorthEastHandle.NorthEastHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.NorthEastHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.NorthEastHandle.keyPressed(KeyEvent)",3,5,8
"org.jhotdraw.draw.handle.TransformHandleKit.NorthEastHandle.trackStepNormalized(Double)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.NorthHandle.NorthHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.NorthHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.NorthHandle.keyPressed(KeyEvent)",3,4,7
"org.jhotdraw.draw.handle.TransformHandleKit.NorthHandle.trackStepNormalized(Double)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.NorthWestHandle.NorthWestHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.NorthWestHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.NorthWestHandle.keyPressed(KeyEvent)",3,5,8
"org.jhotdraw.draw.handle.TransformHandleKit.NorthWestHandle.trackStepNormalized(Double)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.SouthEastHandle.SouthEastHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.SouthEastHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.SouthEastHandle.keyPressed(KeyEvent)",3,5,8
"org.jhotdraw.draw.handle.TransformHandleKit.SouthEastHandle.trackStepNormalized(Double)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.SouthHandle.SouthHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.SouthHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.SouthHandle.keyPressed(KeyEvent)",3,4,7
"org.jhotdraw.draw.handle.TransformHandleKit.SouthHandle.trackStepNormalized(Double)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.SouthWestHandle.SouthWestHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.SouthWestHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.SouthWestHandle.keyPressed(KeyEvent)",3,5,8
"org.jhotdraw.draw.handle.TransformHandleKit.SouthWestHandle.trackStepNormalized(Double)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.TransformHandle(Figure,Locator)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.draw(Graphics2D)",1,2,2
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.drawArc(Graphics2D)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.getToolTipText(Point)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.getTransformedBounds()",1,2,2
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.trackEnd(Point,Point,int)",2,1,2
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.trackStart(Point,int)",2,1,2
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.trackStep(Point,Point,int)",2,1,2
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.trackStepNormalized(Double)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandle.transform(Double,Double)",1,6,7
"org.jhotdraw.draw.handle.TransformHandleKit.TransformHandleKit()",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.WestHandle.WestHandle(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.WestHandle.getCursor()",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.WestHandle.keyPressed(KeyEvent)",3,4,7
"org.jhotdraw.draw.handle.TransformHandleKit.WestHandle.trackStepNormalized(Double)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.addCornerTransformHandles(Figure,Collection<Handle>)",1,2,2
"org.jhotdraw.draw.handle.TransformHandleKit.addEdgeTransformHandles(Figure,Collection<Handle>)",1,2,2
"org.jhotdraw.draw.handle.TransformHandleKit.addGroupHoverHandles(Figure,Collection<Handle>)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.addGroupTransformHandles(Figure,Collection<Handle>)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.addScaleMoveTransformHandles(Figure,Collection<Handle>)",1,2,2
"org.jhotdraw.draw.handle.TransformHandleKit.addTransformHandles(Figure,Collection<Handle>)",1,2,2
"org.jhotdraw.draw.handle.TransformHandleKit.east(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.north(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.northEast(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.northWest(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.south(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.southEast(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.southWest(Figure)",1,1,1
"org.jhotdraw.draw.handle.TransformHandleKit.west(Figure)",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory)",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory,String,String,String)",1,2,2
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.createTransferable(Drawing,List<Figure>,double)",1,2,2
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getFileExtension()",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getFileFilter()",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getInputFormatAccessory()",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getOutputFormatAccessory()",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.isDataFlavorSupported(DataFlavor)",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing)",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing,boolean)",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(InputStream,Drawing,boolean)",1,2,2
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(Transferable,Drawing,boolean)",1,3,3
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(URI,Drawing)",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(URI,Drawing,boolean)",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(URL,InputStream,Drawing,LinkedList<Figure>)",1,2,2
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(File,Drawing)",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(OutputStream,Drawing)",1,1,1
"org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(URI,Drawing)",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure)",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure,String,String,String,String)",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure,String,String,String[],String[])",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.createImageHolder(InputStream)",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.getFileExtensions()",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.getFileFilter()",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.getInputFormatAccessory()",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.isDataFlavorSupported(DataFlavor)",4,2,4
"org.jhotdraw.draw.io.ImageInputFormat.read(File,Drawing)",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.read(File,Drawing,boolean)",1,2,2
"org.jhotdraw.draw.io.ImageInputFormat.read(InputStream,Drawing,boolean)",1,2,2
"org.jhotdraw.draw.io.ImageInputFormat.read(Transferable,Drawing,boolean)",6,6,9
"org.jhotdraw.draw.io.ImageInputFormat.read(URI,Drawing)",1,1,1
"org.jhotdraw.draw.io.ImageInputFormat.read(URI,Drawing,boolean)",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat(String,String,String,int)",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.createTransferable(Drawing,List<Figure>,double)",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.getFileExtension()",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.getFileFilter()",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.getOutputFormatAccessory()",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.setRenderingHints(Graphics2D)",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.toImage(Drawing,List<Figure>,AffineTransform,Dimension)",1,4,5
"org.jhotdraw.draw.io.ImageOutputFormat.toImage(Drawing,List<Figure>,double,boolean)",3,6,7
"org.jhotdraw.draw.io.ImageOutputFormat.write(File,Drawing)",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing)",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing,AffineTransform,Dimension)",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing,List<Figure>)",1,1,1
"org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing,List<Figure>,AffineTransform,Dimension)",1,2,3
"org.jhotdraw.draw.io.ImageOutputFormat.write(URI,Drawing)",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.SerializationInputOutputFormat()",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.SerializationInputOutputFormat(String,String,Drawing)",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.createTransferable(Drawing,List<Figure>,double)",2,3,4
"org.jhotdraw.draw.io.SerializationInputOutputFormat.getFileExtension()",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.getFileFilter()",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.getInputFormatAccessory()",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.getOutputFormatAccessory()",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.isDataFlavorSupported(DataFlavor)",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.read(File,Drawing)",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.read(File,Drawing,boolean)",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.read(InputStream,Drawing,boolean)",1,5,5
"org.jhotdraw.draw.io.SerializationInputOutputFormat.read(Transferable,Drawing,boolean)",1,5,5
"org.jhotdraw.draw.io.SerializationInputOutputFormat.read(URI,Drawing)",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.read(URI,Drawing,boolean)",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.write(File,Drawing)",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.write(OutputStream,Drawing)",1,1,1
"org.jhotdraw.draw.io.SerializationInputOutputFormat.write(URI,Drawing)",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.TextInputFormat(TextHolderFigure)",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.TextInputFormat(TextHolderFigure,String,String,String,boolean)",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.createTextHolderFigures(InputStream)",2,5,6
"org.jhotdraw.draw.io.TextInputFormat.getFileExtension()",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.getFileFilter()",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.getInputFormatAccessory()",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.isDataFlavorSupported(DataFlavor)",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.read(File,Drawing)",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.read(File,Drawing,boolean)",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.read(InputStream,Drawing,boolean)",1,2,2
"org.jhotdraw.draw.io.TextInputFormat.read(Transferable,Drawing,boolean)",1,4,4
"org.jhotdraw.draw.io.TextInputFormat.read(URI,Drawing)",1,1,1
"org.jhotdraw.draw.io.TextInputFormat.read(URI,Drawing,boolean)",1,1,1
"org.jhotdraw.draw.layouter.AbstractLayouter.getInsets(Figure)",1,2,2
"org.jhotdraw.draw.layouter.HorizontalLayouter.calculateLayout(CompositeFigure,Double,Double)",1,3,3
"org.jhotdraw.draw.layouter.HorizontalLayouter.layout(CompositeFigure,Double,Double)",2,4,7
"org.jhotdraw.draw.layouter.LocatorLayouter.LocatorLayouter()",1,1,1
"org.jhotdraw.draw.layouter.LocatorLayouter.calculateLayout(CompositeFigure,Double,Double)",1,5,6
"org.jhotdraw.draw.layouter.LocatorLayouter.getLocator(Figure)",1,1,1
"org.jhotdraw.draw.layouter.LocatorLayouter.layout(CompositeFigure,Double,Double)",1,5,6
"org.jhotdraw.draw.layouter.VerticalLayouter.calculateLayout(CompositeFigure,Double,Double)",1,3,4
"org.jhotdraw.draw.layouter.VerticalLayouter.layout(CompositeFigure,Double,Double)",2,4,8
"org.jhotdraw.draw.liner.CurvedLiner.CurvedLiner()",1,1,1
"org.jhotdraw.draw.liner.CurvedLiner.CurvedLiner(double)",1,1,1
"org.jhotdraw.draw.liner.CurvedLiner.clone()",1,2,2
"org.jhotdraw.draw.liner.CurvedLiner.createHandles(BezierPath)",1,1,1
"org.jhotdraw.draw.liner.CurvedLiner.lineout(ConnectionFigure)",3,19,30
"org.jhotdraw.draw.liner.CurvedLiner.read(DOMInput)",1,1,1
"org.jhotdraw.draw.liner.CurvedLiner.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.liner.ElbowLiner.ElbowLiner()",1,1,1
"org.jhotdraw.draw.liner.ElbowLiner.ElbowLiner(double)",1,1,1
"org.jhotdraw.draw.liner.ElbowLiner.clone()",1,2,2
"org.jhotdraw.draw.liner.ElbowLiner.createHandles(BezierPath)",1,1,1
"org.jhotdraw.draw.liner.ElbowLiner.lineout(ConnectionFigure)",4,21,35
"org.jhotdraw.draw.liner.ElbowLiner.read(DOMInput)",1,1,1
"org.jhotdraw.draw.liner.ElbowLiner.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.liner.SlantedLiner.SlantedLiner()",1,1,1
"org.jhotdraw.draw.liner.SlantedLiner.SlantedLiner(double)",1,1,1
"org.jhotdraw.draw.liner.SlantedLiner.clone()",1,2,2
"org.jhotdraw.draw.liner.SlantedLiner.createHandles(BezierPath)",1,1,1
"org.jhotdraw.draw.liner.SlantedLiner.lineout(ConnectionFigure)",4,33,43
"org.jhotdraw.draw.liner.SlantedLiner.read(DOMInput)",1,1,1
"org.jhotdraw.draw.liner.SlantedLiner.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.locator.AbstractLocator.AbstractLocator()",1,1,1
"org.jhotdraw.draw.locator.AbstractLocator.locate(Figure,Figure)",1,1,1
"org.jhotdraw.draw.locator.BezierLabelLocator.BezierLabelLocator()",1,1,1
"org.jhotdraw.draw.locator.BezierLabelLocator.BezierLabelLocator(double,double,double)",1,1,1
"org.jhotdraw.draw.locator.BezierLabelLocator.getRelativeLabelPoint(BezierFigure,Figure)",7,1,12
"org.jhotdraw.draw.locator.BezierLabelLocator.getRelativePoint(BezierFigure)",1,1,4
"org.jhotdraw.draw.locator.BezierLabelLocator.locate(Figure)",1,1,1
"org.jhotdraw.draw.locator.BezierLabelLocator.locate(Figure,Figure)",1,1,1
"org.jhotdraw.draw.locator.BezierLabelLocator.read(DOMInput)",1,1,1
"org.jhotdraw.draw.locator.BezierLabelLocator.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.locator.BezierPointLocator.BezierPointLocator(int)",1,1,1
"org.jhotdraw.draw.locator.BezierPointLocator.BezierPointLocator(int,int)",1,1,1
"org.jhotdraw.draw.locator.BezierPointLocator.locate(Figure)",2,2,2
"org.jhotdraw.draw.locator.BezierPointLocator.read(DOMInput)",1,1,1
"org.jhotdraw.draw.locator.BezierPointLocator.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.locator.FontSizeLocator.FontSizeLocator()",1,1,1
"org.jhotdraw.draw.locator.FontSizeLocator.locate(Figure)",1,3,3
"org.jhotdraw.draw.locator.FontSizeLocator.locate(Figure,Figure)",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.RelativeDecoratorLocator()",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.RelativeDecoratorLocator(double,double)",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.RelativeDecoratorLocator(double,double,boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.center()",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.east()",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.locate(Figure)",1,4,4
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.north()",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.northEast()",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.northWest()",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.south()",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.southEast()",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.southWest()",1,1,1
"org.jhotdraw.draw.locator.RelativeDecoratorLocator.west()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.RelativeLocator()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.RelativeLocator(double,double)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.RelativeLocator(double,double,boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.center()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.center(boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.east()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.east(boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.equals(Object)",5,1,5
"org.jhotdraw.draw.locator.RelativeLocator.hashCode()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.locate(Figure)",1,7,7
"org.jhotdraw.draw.locator.RelativeLocator.north()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.north(boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.northEast()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.northEast(boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.northWest()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.northWest(boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.read(DOMInput)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.south()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.south(boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.southEast()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.southEast(boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.southWest()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.southWest(boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.west()",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.west(boolean)",1,1,1
"org.jhotdraw.draw.locator.RelativeLocator.write(DOMOutput)",1,1,1
"org.jhotdraw.draw.print.DrawingPageable.DrawingPageable(Drawing)",1,1,1
"org.jhotdraw.draw.print.DrawingPageable.getNumberOfPages()",1,1,1
"org.jhotdraw.draw.print.DrawingPageable.getPageFormat(int)",1,1,1
"org.jhotdraw.draw.print.DrawingPageable.getPrintable(int)",2,2,3
"org.jhotdraw.draw.print.DrawingPageable.printPage(Graphics,PageFormat,int)",2,8,9
"org.jhotdraw.draw.print.DrawingPageable.setRenderingHints(Graphics2D)",1,1,1
"org.jhotdraw.draw.text.FloatingTextArea.FloatingTextArea()",1,1,1
"org.jhotdraw.draw.text.FloatingTextArea.createOverlay(DrawingView)",1,1,1
"org.jhotdraw.draw.text.FloatingTextArea.createOverlay(DrawingView,TextHolderFigure)",1,2,2
"org.jhotdraw.draw.text.FloatingTextArea.endOverlay()",1,3,3
"org.jhotdraw.draw.text.FloatingTextArea.getPreferredSize(int)",1,1,1
"org.jhotdraw.draw.text.FloatingTextArea.getText()",1,1,1
"org.jhotdraw.draw.text.FloatingTextArea.requestFocus()",1,1,1
"org.jhotdraw.draw.text.FloatingTextArea.setBounds(Double,String)",1,1,1
"org.jhotdraw.draw.text.FloatingTextArea.updateWidget()",1,1,1
"org.jhotdraw.draw.text.FloatingTextField.FloatingTextField()",1,1,1
"org.jhotdraw.draw.text.FloatingTextField.addActionListener(ActionListener)",1,1,1
"org.jhotdraw.draw.text.FloatingTextField.createOverlay(DrawingView,TextHolderFigure)",1,1,1
"org.jhotdraw.draw.text.FloatingTextField.endOverlay()",1,3,3
"org.jhotdraw.draw.text.FloatingTextField.getInsets()",1,1,1
"org.jhotdraw.draw.text.FloatingTextField.getPreferredSize(int)",1,1,1
"org.jhotdraw.draw.text.FloatingTextField.getText()",1,1,1
"org.jhotdraw.draw.text.FloatingTextField.removeActionListener(ActionListener)",1,1,1
"org.jhotdraw.draw.text.FloatingTextField.requestFocus()",1,1,1
"org.jhotdraw.draw.text.FloatingTextField.updateWidget()",1,2,2
"org.jhotdraw.draw.tool.AbstractTool.AbstractTool()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.activate(DrawingEditor)",1,2,2
"org.jhotdraw.draw.tool.AbstractTool.addToolListener(ToolListener)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.addUndoableEditListener(UndoableEditListener)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.constrainPoint(Double)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.constrainPoint(Point)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.createActionMap()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.createInputMap()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.deactivate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.editCopy()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.editCut()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.editDelete()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.editDuplicate()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.editPaste()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.fireAreaInvalidated(Double)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.fireAreaInvalidated(Rectangle)",1,4,4
"org.jhotdraw.draw.tool.AbstractTool.fireBoundsInvalidated(Rectangle)",1,4,4
"org.jhotdraw.draw.tool.AbstractTool.fireToolDone()",1,4,4
"org.jhotdraw.draw.tool.AbstractTool.fireToolStarted(DrawingView)",1,3,4
"org.jhotdraw.draw.tool.AbstractTool.getActionMap()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.getDrawing()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.getEditor()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.getInputMap()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.getToolTipText(DrawingView,MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.getView()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.isActive()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.keyPressed(KeyEvent)",1,11,11
"org.jhotdraw.draw.tool.AbstractTool.keyReleased(KeyEvent)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.keyTyped(KeyEvent)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.maybeFireBoundsInvalidated(Rectangle)",1,4,4
"org.jhotdraw.draw.tool.AbstractTool.mouseClicked(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.mouseEntered(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.mouseMoved(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.removeToolListener(ToolListener)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.removeUndoableEditListener(UndoableEditListener)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.setActionMap(ActionMap)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.setInputMap(InputMap)",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.supportsHandleInteraction()",1,1,1
"org.jhotdraw.draw.tool.AbstractTool.updateCursor(DrawingView,Point)",1,6,6
"org.jhotdraw.draw.tool.AbstractTool.viewToDrawing(Point)",1,1,1
"org.jhotdraw.draw.tool.BezierTool.BezierTool(BezierFigure)",1,1,1
"org.jhotdraw.draw.tool.BezierTool.BezierTool(BezierFigure,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.tool.BezierTool.BezierTool(BezierFigure,Map<AttributeKey<?>, Object>,String)",1,2,2
"org.jhotdraw.draw.tool.BezierTool.activate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.BezierTool.addPointToFigure(Double)",1,6,6
"org.jhotdraw.draw.tool.BezierTool.calculateFittedCurve(BezierPath)",1,1,1
"org.jhotdraw.draw.tool.BezierTool.createFigure()",1,3,3
"org.jhotdraw.draw.tool.BezierTool.deactivate(DrawingEditor)",1,5,6
"org.jhotdraw.draw.tool.BezierTool.draw(Graphics2D)",1,8,8
"org.jhotdraw.draw.tool.BezierTool.finishCreation(BezierFigure,DrawingView)",1,2,2
"org.jhotdraw.draw.tool.BezierTool.fireUndoEvent(Figure,DrawingView)",1,1,1
"org.jhotdraw.draw.tool.BezierTool.getAddedFigure()",1,1,1
"org.jhotdraw.draw.tool.BezierTool.getCreatedFigure()",1,1,1
"org.jhotdraw.draw.tool.BezierTool.getPresentationName()",1,1,1
"org.jhotdraw.draw.tool.BezierTool.isToolDoneAfterCreation()",1,1,1
"org.jhotdraw.draw.tool.BezierTool.mouseClicked(MouseEvent)",2,6,7
"org.jhotdraw.draw.tool.BezierTool.mouseDragged(MouseEvent)",1,1,2
"org.jhotdraw.draw.tool.BezierTool.mouseMoved(MouseEvent)",1,5,7
"org.jhotdraw.draw.tool.BezierTool.mousePressed(MouseEvent)",1,7,7
"org.jhotdraw.draw.tool.BezierTool.mouseReleased(MouseEvent)",3,6,7
"org.jhotdraw.draw.tool.BezierTool.setToolDoneAfterCreation(boolean)",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.ConnectionTool(ConnectionFigure)",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.ConnectionTool(ConnectionFigure,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.ConnectionTool(ConnectionFigure,Map<AttributeKey<?>, Object>,String)",1,2,2
"org.jhotdraw.draw.tool.ConnectionTool.ConnectionTool(String)",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.ConnectionTool(String,Map<AttributeKey<?>, Object>,String)",1,3,3
"org.jhotdraw.draw.tool.ConnectionTool.activate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.canConnect(ConnectionFigure,Connector)",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.canConnect(ConnectionFigure,Connector,Connector)",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.createFigure()",1,3,3
"org.jhotdraw.draw.tool.ConnectionTool.creationFinished(Figure)",1,2,2
"org.jhotdraw.draw.tool.ConnectionTool.deactivate(DrawingEditor)",1,2,2
"org.jhotdraw.draw.tool.ConnectionTool.draw(Graphics2D)",1,4,4
"org.jhotdraw.draw.tool.ConnectionTool.getAnchorWidth()",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.getPrototype()",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.isToolDoneAfterCreation()",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.mouseDragged(MouseEvent)",1,5,5
"org.jhotdraw.draw.tool.ConnectionTool.mouseMoved(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.ConnectionTool.mousePressed(MouseEvent)",1,4,4
"org.jhotdraw.draw.tool.ConnectionTool.mouseReleased(MouseEvent)",1,6,6
"org.jhotdraw.draw.tool.ConnectionTool.repaintConnectors(MouseEvent)",1,9,10
"org.jhotdraw.draw.tool.ConnectionTool.setToolDoneAfterCreation(boolean)",1,1,1
"org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure)",1,1,1
"org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure,Map<AttributeKey<?>, Object>,String)",1,2,2
"org.jhotdraw.draw.tool.CreationTool.CreationTool(String)",1,1,1
"org.jhotdraw.draw.tool.CreationTool.CreationTool(String,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.tool.CreationTool.CreationTool(String,Map<AttributeKey<?>, Object>,String)",1,3,3
"org.jhotdraw.draw.tool.CreationTool.activate(DrawingEditor)",1,2,2
"org.jhotdraw.draw.tool.CreationTool.createFigure()",1,3,3
"org.jhotdraw.draw.tool.CreationTool.creationFinished(Figure)",1,3,3
"org.jhotdraw.draw.tool.CreationTool.deactivate(DrawingEditor)",1,4,4
"org.jhotdraw.draw.tool.CreationTool.getAddedFigure()",1,1,1
"org.jhotdraw.draw.tool.CreationTool.getCreatedFigure()",1,1,1
"org.jhotdraw.draw.tool.CreationTool.getPrototype()",1,1,1
"org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation()",1,1,1
"org.jhotdraw.draw.tool.CreationTool.mouseDragged(MouseEvent)",1,2,2
"org.jhotdraw.draw.tool.CreationTool.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.CreationTool.mouseReleased(MouseEvent)",1,8,9
"org.jhotdraw.draw.tool.CreationTool.setToolDoneAfterCreation(boolean)",1,1,1
"org.jhotdraw.draw.tool.CreationTool.updateCursor(DrawingView,Point)",1,2,2
"org.jhotdraw.draw.tool.DefaultDragTracker.DefaultDragTracker()",1,1,1
"org.jhotdraw.draw.tool.DefaultDragTracker.DefaultDragTracker(Figure)",1,1,1
"org.jhotdraw.draw.tool.DefaultDragTracker.mouseDragged(MouseEvent)",1,5,5
"org.jhotdraw.draw.tool.DefaultDragTracker.mouseMoved(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultDragTracker.mousePressed(MouseEvent)",1,8,9
"org.jhotdraw.draw.tool.DefaultDragTracker.mouseReleased(MouseEvent)",4,7,7
"org.jhotdraw.draw.tool.DefaultDragTracker.setDraggedFigure(Figure)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.DefaultHandleTracker()",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.DefaultHandleTracker(Handle)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.DefaultHandleTracker(Handle,Collection<Handle>)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.EventHandler.areaInvalidated(HandleEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.EventHandler.handleRequestRemove(HandleEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.EventHandler.handleRequestSecondaryHandles(HandleEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.activate(DrawingEditor)",1,2,2
"org.jhotdraw.draw.tool.DefaultHandleTracker.clearHoverHandles()",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.deactivate(DrawingEditor)",1,2,2
"org.jhotdraw.draw.tool.DefaultHandleTracker.draw(Graphics2D)",1,4,4
"org.jhotdraw.draw.tool.DefaultHandleTracker.keyPressed(KeyEvent)",1,3,3
"org.jhotdraw.draw.tool.DefaultHandleTracker.keyReleased(KeyEvent)",1,2,2
"org.jhotdraw.draw.tool.DefaultHandleTracker.keyTyped(KeyEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.mouseClicked(MouseEvent)",1,2,2
"org.jhotdraw.draw.tool.DefaultHandleTracker.mouseDragged(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.mouseEntered(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.mouseMoved(MouseEvent)",1,7,8
"org.jhotdraw.draw.tool.DefaultHandleTracker.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.setHandles(Handle,Collection<Handle>)",1,1,1
"org.jhotdraw.draw.tool.DefaultHandleTracker.updateHoverHandles(DrawingView,Figure)",1,10,10
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.DefaultSelectAreaTracker()",1,1,1
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.activate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.clearHoverHandles()",1,1,1
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.clearRubberBand()",1,2,2
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.deactivate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.draw(Graphics2D)",1,4,4
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.mouseDragged(MouseEvent)",1,2,2
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.mouseMoved(MouseEvent)",1,7,8
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.selectGroup(boolean)",1,3,3
"org.jhotdraw.draw.tool.DefaultSelectAreaTracker.updateHoverHandles(DrawingView,Figure)",1,10,10
"org.jhotdraw.draw.tool.DelegationSelectionTool.DelegationSelectionTool()",1,1,1
"org.jhotdraw.draw.tool.DelegationSelectionTool.DelegationSelectionTool(Collection<Action>,Collection<Action>)",1,1,1
"org.jhotdraw.draw.tool.DelegationSelectionTool.getToolTipText(DrawingView,MouseEvent)",3,3,3
"org.jhotdraw.draw.tool.DelegationSelectionTool.handleDoubleClick(MouseEvent)",5,14,15
"org.jhotdraw.draw.tool.DelegationSelectionTool.handleMultiClick(MouseEvent)",1,3,3
"org.jhotdraw.draw.tool.DelegationSelectionTool.handlePopupMenu(MouseEvent)",1,3,3
"org.jhotdraw.draw.tool.DelegationSelectionTool.mouseClicked(MouseEvent)",1,12,12
"org.jhotdraw.draw.tool.DelegationSelectionTool.mouseDragged(MouseEvent)",1,4,4
"org.jhotdraw.draw.tool.DelegationSelectionTool.mousePressed(MouseEvent)",1,3,3
"org.jhotdraw.draw.tool.DelegationSelectionTool.mouseReleased(MouseEvent)",1,4,4
"org.jhotdraw.draw.tool.DelegationSelectionTool.setDrawingActions(Collection<Action>)",1,1,1
"org.jhotdraw.draw.tool.DelegationSelectionTool.setFigureActions(Collection<Action>)",1,1,1
"org.jhotdraw.draw.tool.DelegationSelectionTool.showPopupMenu(Figure,Point,Component)",1,20,20
"org.jhotdraw.draw.tool.DnDTracker.DnDTracker()",1,1,1
"org.jhotdraw.draw.tool.DnDTracker.DnDTracker(Figure)",1,1,1
"org.jhotdraw.draw.tool.DnDTracker.mouseDragged(MouseEvent)",1,3,3
"org.jhotdraw.draw.tool.DnDTracker.mouseMoved(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DnDTracker.mousePressed(MouseEvent)",1,6,7
"org.jhotdraw.draw.tool.DnDTracker.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.DnDTracker.setDraggedFigure(Figure)",1,1,1
"org.jhotdraw.draw.tool.ImageTool.ImageTool(ImageHolderFigure)",1,1,1
"org.jhotdraw.draw.tool.ImageTool.ImageTool(ImageHolderFigure,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.tool.ImageTool.activate(DrawingEditor)",2,9,11
"org.jhotdraw.draw.tool.ImageTool.getFileChooser()",1,1,2
"org.jhotdraw.draw.tool.ImageTool.getFileDialog()",1,1,2
"org.jhotdraw.draw.tool.ImageTool.isUseFileDialog()",1,1,1
"org.jhotdraw.draw.tool.ImageTool.setUseFileDialog(boolean)",1,1,2
"org.jhotdraw.draw.tool.SelectionTool.SelectionTool()",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.TrackerHandler.areaInvalidated(ToolEvent)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.TrackerHandler.boundsInvalidated(ToolEvent)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.TrackerHandler.toolDone(ToolEvent)",1,3,3
"org.jhotdraw.draw.tool.SelectionTool.activate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.deactivate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.getDragTracker(Figure)",1,1,2
"org.jhotdraw.draw.tool.SelectionTool.getHandleTracker(Handle)",1,1,2
"org.jhotdraw.draw.tool.SelectionTool.getSelectAreaTracker()",1,1,2
"org.jhotdraw.draw.tool.SelectionTool.isSelectBehindEnabled()",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.keyPressed(KeyEvent)",1,3,3
"org.jhotdraw.draw.tool.SelectionTool.keyReleased(KeyEvent)",1,3,3
"org.jhotdraw.draw.tool.SelectionTool.keyTyped(KeyEvent)",1,3,3
"org.jhotdraw.draw.tool.SelectionTool.mouseClicked(MouseEvent)",1,3,3
"org.jhotdraw.draw.tool.SelectionTool.mouseDragged(MouseEvent)",1,3,3
"org.jhotdraw.draw.tool.SelectionTool.mouseEntered(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.mouseMoved(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.mousePressed(MouseEvent)",7,17,19
"org.jhotdraw.draw.tool.SelectionTool.mouseReleased(MouseEvent)",1,3,3
"org.jhotdraw.draw.tool.SelectionTool.setDragTracker(DragTracker)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.setHandleTracker(HandleTracker)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.setSelectAreaTracker(SelectAreaTracker)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.setSelectBehindEnabled(boolean)",1,1,1
"org.jhotdraw.draw.tool.SelectionTool.setTracker(Tool)",1,3,3
"org.jhotdraw.draw.tool.SelectionTool.supportsHandleInteraction()",1,1,1
"org.jhotdraw.draw.tool.TextAreaCreationTool.TextAreaCreationTool(TextHolderFigure)",1,1,1
"org.jhotdraw.draw.tool.TextAreaCreationTool.TextAreaCreationTool(TextHolderFigure,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.tool.TextAreaCreationTool.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.draw.tool.TextAreaCreationTool.beginEdit(TextHolderFigure)",1,2,4
"org.jhotdraw.draw.tool.TextAreaCreationTool.creationFinished(Figure)",1,1,1
"org.jhotdraw.draw.tool.TextAreaCreationTool.deactivate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.TextAreaCreationTool.draw(Graphics2D)",1,2,3
"org.jhotdraw.draw.tool.TextAreaCreationTool.endEdit()",1,4,4
"org.jhotdraw.draw.tool.TextAreaCreationTool.getFieldBounds(TextHolderFigure)",1,1,1
"org.jhotdraw.draw.tool.TextAreaCreationTool.mousePressed(MouseEvent)",1,3,3
"org.jhotdraw.draw.tool.TextAreaCreationTool.setRubberbandColor(Color)",1,1,1
"org.jhotdraw.draw.tool.TextAreaEditingTool.TextAreaEditingTool(TextHolderFigure)",1,1,1
"org.jhotdraw.draw.tool.TextAreaEditingTool.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.tool.TextAreaEditingTool.beginEdit(TextHolderFigure)",1,2,4
"org.jhotdraw.draw.tool.TextAreaEditingTool.deactivate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.TextAreaEditingTool.draw(Graphics2D)",1,1,1
"org.jhotdraw.draw.tool.TextAreaEditingTool.endEdit()",1,3,3
"org.jhotdraw.draw.tool.TextAreaEditingTool.getFieldBounds(TextHolderFigure)",1,1,1
"org.jhotdraw.draw.tool.TextAreaEditingTool.mouseDragged(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.TextAreaEditingTool.mousePressed(MouseEvent)",1,2,2
"org.jhotdraw.draw.tool.TextCreationTool.TextCreationTool(TextHolderFigure)",1,1,1
"org.jhotdraw.draw.tool.TextCreationTool.TextCreationTool(TextHolderFigure,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.draw.tool.TextCreationTool.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.draw.tool.TextCreationTool.beginEdit(TextHolderFigure)",1,3,4
"org.jhotdraw.draw.tool.TextCreationTool.creationFinished(Figure)",1,1,1
"org.jhotdraw.draw.tool.TextCreationTool.deactivate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.TextCreationTool.endEdit()",1,4,4
"org.jhotdraw.draw.tool.TextCreationTool.isEditing()",1,1,1
"org.jhotdraw.draw.tool.TextCreationTool.keyReleased(KeyEvent)",1,3,3
"org.jhotdraw.draw.tool.TextCreationTool.mouseDragged(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.TextCreationTool.mousePressed(MouseEvent)",1,3,3
"org.jhotdraw.draw.tool.TextCreationTool.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.TextCreationTool.updateCursor(DrawingView,Point)",1,2,3
"org.jhotdraw.draw.tool.TextEditingTool.TextEditingTool(TextHolderFigure)",1,1,1
"org.jhotdraw.draw.tool.TextEditingTool.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.draw.tool.TextEditingTool.beginEdit(TextHolderFigure)",1,3,4
"org.jhotdraw.draw.tool.TextEditingTool.deactivate(DrawingEditor)",1,1,1
"org.jhotdraw.draw.tool.TextEditingTool.endEdit()",1,3,3
"org.jhotdraw.draw.tool.TextEditingTool.isEditing()",1,1,1
"org.jhotdraw.draw.tool.TextEditingTool.keyReleased(KeyEvent)",1,2,2
"org.jhotdraw.draw.tool.TextEditingTool.mouseDragged(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.TextEditingTool.mousePressed(MouseEvent)",1,2,2
"org.jhotdraw.draw.tool.TextEditingTool.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.draw.tool.TextEditingTool.updateCursor(DrawingView,Point)",1,2,3
"org.jhotdraw.geom.Bezier.Bezier()",1,1,1
"org.jhotdraw.geom.Bezier.addCurveTo(Double[],BezierPath,double,boolean)",1,4,4
"org.jhotdraw.geom.Bezier.b0(double)",1,1,1
"org.jhotdraw.geom.Bezier.b1(double)",1,1,1
"org.jhotdraw.geom.Bezier.b2(double)",1,1,1
"org.jhotdraw.geom.Bezier.b3(double)",1,1,1
"org.jhotdraw.geom.Bezier.bezierII(int,Double[],double)",1,2,4
"org.jhotdraw.geom.Bezier.chordLengthParameterize(ArrayList<Double>,int,int)",1,2,3
"org.jhotdraw.geom.Bezier.computeCenterTangent(ArrayList<Double>,int)",1,1,1
"org.jhotdraw.geom.Bezier.computeLeftTangent(ArrayList<Double>,int)",1,1,1
"org.jhotdraw.geom.Bezier.computeMaxError(ArrayList<Double>,int,int,Double[],double[],int[])",1,2,3
"org.jhotdraw.geom.Bezier.computeRightTangent(ArrayList<Double>,int)",1,1,1
"org.jhotdraw.geom.Bezier.findCorners(List<Double>,double,double)",8,9,12
"org.jhotdraw.geom.Bezier.fitBezierPath(BezierPath,double)",1,2,2
"org.jhotdraw.geom.Bezier.fitBezierPath(Double[],double)",1,1,1
"org.jhotdraw.geom.Bezier.fitBezierPath(List<Double>,double)",4,8,12
"org.jhotdraw.geom.Bezier.fitCubic(ArrayList<Double>,int,int,Double,Double,double,BezierPath)",6,10,11
"org.jhotdraw.geom.Bezier.generateBezier(ArrayList<Double>,int,int,double[],Double,Double)",1,1,2
"org.jhotdraw.geom.Bezier.main(String[])",1,3,3
"org.jhotdraw.geom.Bezier.newtonRaphsonRootFind(Double[],Double,double)",1,1,3
"org.jhotdraw.geom.Bezier.reduceNoise(List<Double>,double)",1,4,4
"org.jhotdraw.geom.Bezier.removeClosePoints(List<Double>,double)",2,6,6
"org.jhotdraw.geom.Bezier.removeCoincidentPoints(List<Double>)",1,4,4
"org.jhotdraw.geom.Bezier.reparameterize(ArrayList<Double>,int,int,double[],Double[])",1,2,2
"org.jhotdraw.geom.Bezier.splitAtCorners(List<Double>,double,double)",1,3,3
"org.jhotdraw.geom.Bezier.v2Add(Double,Double,Double)",1,1,1
"org.jhotdraw.geom.Bezier.v2AddII(Double,Double)",1,1,1
"org.jhotdraw.geom.Bezier.v2DistanceBetween2Points(Double,Double)",1,1,1
"org.jhotdraw.geom.Bezier.v2Dot(Double,Double)",1,1,1
"org.jhotdraw.geom.Bezier.v2Length(Double)",1,1,1
"org.jhotdraw.geom.Bezier.v2Negate(Double)",1,1,1
"org.jhotdraw.geom.Bezier.v2Normalize(Double)",1,1,2
"org.jhotdraw.geom.Bezier.v2Scale(Double,double)",1,1,2
"org.jhotdraw.geom.Bezier.v2ScaleIII(Double,double)",1,1,1
"org.jhotdraw.geom.Bezier.v2SquaredDistanceBetween2Points(Double,Double)",1,1,1
"org.jhotdraw.geom.Bezier.v2SquaredLength(Double)",1,1,1
"org.jhotdraw.geom.Bezier.v2SubII(Double,Double)",1,1,1
"org.jhotdraw.geom.BezierPath.BezierPath()",1,1,1
"org.jhotdraw.geom.BezierPath.Node.Node()",1,1,1
"org.jhotdraw.geom.BezierPath.Node.Node(Double)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.Node(Node)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.Node(double,double)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.Node(int,Double,Double,Double)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.Node(int,double,double,double,double,double,double)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.clone()",1,2,2
"org.jhotdraw.geom.BezierPath.Node.equals(Object)",2,4,4
"org.jhotdraw.geom.BezierPath.Node.getControlPoint(int)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.getMask()",1,1,1
"org.jhotdraw.geom.BezierPath.Node.hashCode()",1,1,1
"org.jhotdraw.geom.BezierPath.Node.moveBy(double,double)",1,1,2
"org.jhotdraw.geom.BezierPath.Node.moveTo(Double)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.moveTo(double,double)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.setControlPoint(int,Double)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.setMask(int)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.setTo(Node)",1,1,1
"org.jhotdraw.geom.BezierPath.Node.toString()",4,4,4
"org.jhotdraw.geom.BezierPath.add(Double)",1,1,1
"org.jhotdraw.geom.BezierPath.add(double,double)",1,1,1
"org.jhotdraw.geom.BezierPath.add(int,Double,Double,Double)",1,1,1
"org.jhotdraw.geom.BezierPath.addPolyline(Collection<Double>)",1,2,2
"org.jhotdraw.geom.BezierPath.arcTo(double,double,double,boolean,boolean,double,double)",4,5,22
"org.jhotdraw.geom.BezierPath.chop(Double)",1,1,1
"org.jhotdraw.geom.BezierPath.clone()",1,2,2
"org.jhotdraw.geom.BezierPath.contains(Point2D)",1,1,1
"org.jhotdraw.geom.BezierPath.contains(Rectangle2D)",1,1,1
"org.jhotdraw.geom.BezierPath.contains(double,double)",1,1,1
"org.jhotdraw.geom.BezierPath.contains(double,double,double,double)",1,1,1
"org.jhotdraw.geom.BezierPath.curveTo(double,double,double,double,double,double)",2,2,3
"org.jhotdraw.geom.BezierPath.findSegment(Double,double)",9,8,12
"org.jhotdraw.geom.BezierPath.get(int,int)",1,1,1
"org.jhotdraw.geom.BezierPath.getBounds()",1,1,1
"org.jhotdraw.geom.BezierPath.getBounds2D()",1,4,44
"org.jhotdraw.geom.BezierPath.getCenter()",1,1,2
"org.jhotdraw.geom.BezierPath.getLengthOfPath(double)",1,2,2
"org.jhotdraw.geom.BezierPath.getPathIterator(AffineTransform)",1,1,1
"org.jhotdraw.geom.BezierPath.getPathIterator(AffineTransform,double)",1,1,1
"org.jhotdraw.geom.BezierPath.getPointOnPath(double,double)",7,6,7
"org.jhotdraw.geom.BezierPath.getRelativePositionOnPath(Double,double)",9,10,12
"org.jhotdraw.geom.BezierPath.getWindingRule()",1,1,1
"org.jhotdraw.geom.BezierPath.indexOfOutermostNode()",1,3,4
"org.jhotdraw.geom.BezierPath.intersects(Rectangle2D)",1,1,1
"org.jhotdraw.geom.BezierPath.intersects(double,double,double,double)",1,1,1
"org.jhotdraw.geom.BezierPath.invalidatePath()",1,1,1
"org.jhotdraw.geom.BezierPath.isClosed()",1,1,1
"org.jhotdraw.geom.BezierPath.joinSegments(Double,double)",3,3,3
"org.jhotdraw.geom.BezierPath.lineTo(double,double)",2,1,2
"org.jhotdraw.geom.BezierPath.moveTo(double,double)",2,1,2
"org.jhotdraw.geom.BezierPath.outlineContains(Double,double)",1,1,1
"org.jhotdraw.geom.BezierPath.quadTo(double,double,double,double)",2,1,2
"org.jhotdraw.geom.BezierPath.set(int,int,Double)",1,1,1
"org.jhotdraw.geom.BezierPath.setClosed(boolean)",1,2,2
"org.jhotdraw.geom.BezierPath.setTo(BezierPath)",1,4,4
"org.jhotdraw.geom.BezierPath.setWindingRule(int)",1,2,2
"org.jhotdraw.geom.BezierPath.splitSegment(Double,double)",1,8,8
"org.jhotdraw.geom.BezierPath.toGeneralPath()",1,12,12
"org.jhotdraw.geom.BezierPath.toPolygonArray()",1,2,2
"org.jhotdraw.geom.BezierPath.transform(AffineTransform)",1,3,3
"org.jhotdraw.geom.BezierPath.validatePath()",1,2,2
"org.jhotdraw.geom.BezierPathIterator.BezierPathIterator(BezierPath)",1,1,1
"org.jhotdraw.geom.BezierPathIterator.BezierPathIterator(BezierPath,AffineTransform)",1,1,1
"org.jhotdraw.geom.BezierPathIterator.currentSegment(double[])",3,7,13
"org.jhotdraw.geom.BezierPathIterator.currentSegment(float[])",3,7,13
"org.jhotdraw.geom.BezierPathIterator.getWindingRule()",1,1,1
"org.jhotdraw.geom.BezierPathIterator.isDone()",1,1,2
"org.jhotdraw.geom.BezierPathIterator.next()",1,1,2
"org.jhotdraw.geom.ConvexHull.getConvexHull(List<Point>)",1,1,1
"org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])",2,6,9
"org.jhotdraw.geom.ConvexHull.getConvexHull2D(Double[])",2,6,11
"org.jhotdraw.geom.ConvexHull.getConvexHull2D(List<Double>)",1,1,1
"org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(List<Double>)",1,3,3
"org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(Shape)",2,5,8
"org.jhotdraw.geom.ConvexHull.getConvexHullPolygon(List<Point>)",1,2,2
"org.jhotdraw.geom.ConvexHull.isRightTurn(Point,Point,Point)",2,2,3
"org.jhotdraw.geom.ConvexHull.isRightTurn2D(Double,Double,Double)",2,2,3
"org.jhotdraw.geom.Dimension2DDouble.Dimension2DDouble()",1,1,1
"org.jhotdraw.geom.Dimension2DDouble.Dimension2DDouble(Dimension2DDouble)",1,1,1
"org.jhotdraw.geom.Dimension2DDouble.Dimension2DDouble(double,double)",1,1,1
"org.jhotdraw.geom.Dimension2DDouble.equals(Object)",2,1,3
"org.jhotdraw.geom.Dimension2DDouble.getHeight()",1,1,1
"org.jhotdraw.geom.Dimension2DDouble.getSize()",1,1,1
"org.jhotdraw.geom.Dimension2DDouble.getWidth()",1,1,1
"org.jhotdraw.geom.Dimension2DDouble.hashCode()",1,1,1
"org.jhotdraw.geom.Dimension2DDouble.setSize(Dimension2DDouble)",1,1,1
"org.jhotdraw.geom.Dimension2DDouble.setSize(double,double)",1,1,1
"org.jhotdraw.geom.Dimension2DDouble.toString()",1,1,1
"org.jhotdraw.geom.DoubleStroke.DoubleStroke(double,double)",1,1,1
"org.jhotdraw.geom.DoubleStroke.DoubleStroke(double,double,int,int,double,float[],float)",1,1,1
"org.jhotdraw.geom.DoubleStroke.computeThickLine(double,double,double,double,double,double[])",1,1,1
"org.jhotdraw.geom.DoubleStroke.computeThickLine(double[],int,double[])",1,1,1
"org.jhotdraw.geom.DoubleStroke.createStrokedShape(Shape)",2,7,11
"org.jhotdraw.geom.DoubleStroke.traceStroke(BezierPath,Double,Double)",1,19,21
"org.jhotdraw.geom.Geom.Geom()",1,1,1
"org.jhotdraw.geom.Geom.angle(double,double,double,double)",1,1,1
"org.jhotdraw.geom.Geom.angleToPoint(Double,double)",1,3,5
"org.jhotdraw.geom.Geom.angleToPoint(Rectangle,double)",1,3,5
"org.jhotdraw.geom.Geom.cap(Double,Double,double)",1,1,1
"org.jhotdraw.geom.Geom.center(Double)",1,1,1
"org.jhotdraw.geom.Geom.center(Rectangle)",1,1,1
"org.jhotdraw.geom.Geom.chop(Shape,Double)",2,6,9
"org.jhotdraw.geom.Geom.contains(Double,Double)",1,4,4
"org.jhotdraw.geom.Geom.contains(Rectangle2D,Rectangle2D)",1,4,4
"org.jhotdraw.geom.Geom.direction(double,double,double,double)",1,1,7
"org.jhotdraw.geom.Geom.direction(int,int,int,int)",1,1,7
"org.jhotdraw.geom.Geom.distanceFromLine(int,int,int,int,int,int)",3,2,4
"org.jhotdraw.geom.Geom.east(Double)",1,1,1
"org.jhotdraw.geom.Geom.east(Rectangle)",1,1,1
"org.jhotdraw.geom.Geom.grow(Double,double,double)",1,1,1
"org.jhotdraw.geom.Geom.intersect(double,double,double,double,double,double,double,double)",5,1,13
"org.jhotdraw.geom.Geom.intersect(double,double,double,double,double,double,double,double,double)",6,5,17
"org.jhotdraw.geom.Geom.intersect(int,int,int,int,int,int,int,int)",5,1,13
"org.jhotdraw.geom.Geom.length(Double,Double)",1,1,1
"org.jhotdraw.geom.Geom.length(double,double,double,double)",1,1,1
"org.jhotdraw.geom.Geom.length(int,int,int,int)",1,1,1
"org.jhotdraw.geom.Geom.length2(double,double,double,double)",1,1,1
"org.jhotdraw.geom.Geom.length2(int,int,int,int)",1,1,1
"org.jhotdraw.geom.Geom.lineContainsPoint(double,double,double,double,double,double,double)",4,3,4
"org.jhotdraw.geom.Geom.lineContainsPoint(int,int,int,int,int,int)",1,1,1
"org.jhotdraw.geom.Geom.lineContainsPoint(int,int,int,int,int,int,double)",4,3,4
"org.jhotdraw.geom.Geom.north(Double)",1,1,1
"org.jhotdraw.geom.Geom.north(Rectangle)",1,1,1
"org.jhotdraw.geom.Geom.outcode(Double,Double)",1,1,5
"org.jhotdraw.geom.Geom.outcode(Rectangle,Rectangle)",1,1,5
"org.jhotdraw.geom.Geom.ovalAngleToPoint(Double,double)",1,1,1
"org.jhotdraw.geom.Geom.ovalAngleToPoint(Rectangle,double)",1,1,1
"org.jhotdraw.geom.Geom.pointToAngle(Double,Double)",1,1,1
"org.jhotdraw.geom.Geom.pointToAngle(Rectangle,Point)",1,1,1
"org.jhotdraw.geom.Geom.polarToPoint(double,double,double)",1,1,1
"org.jhotdraw.geom.Geom.polarToPoint2D(double,double,double)",1,1,1
"org.jhotdraw.geom.Geom.range(double,double,double)",1,1,3
"org.jhotdraw.geom.Geom.range(int,int,int)",1,1,3
"org.jhotdraw.geom.Geom.south(Double)",1,1,1
"org.jhotdraw.geom.Geom.south(Rectangle)",1,1,1
"org.jhotdraw.geom.Geom.west(Double)",1,1,1
"org.jhotdraw.geom.Geom.west(Rectangle)",1,1,1
"org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)",1,1,1
"org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)",3,9,16
"org.jhotdraw.geom.Insets2D.Double.Double()",1,1,1
"org.jhotdraw.geom.Insets2D.Double.Double(double,double,double,double)",1,1,1
"org.jhotdraw.geom.Insets2D.Double.getBottom()",1,1,1
"org.jhotdraw.geom.Insets2D.Double.getLeft()",1,1,1
"org.jhotdraw.geom.Insets2D.Double.getRight()",1,1,1
"org.jhotdraw.geom.Insets2D.Double.getTop()",1,1,1
"org.jhotdraw.geom.Insets2D.Double.set(double,double,double,double)",1,1,1
"org.jhotdraw.geom.Insets2D.Float.Float()",1,1,1
"org.jhotdraw.geom.Insets2D.Float.Float(float,float,float,float)",1,1,1
"org.jhotdraw.geom.Insets2D.Float.getBottom()",1,1,1
"org.jhotdraw.geom.Insets2D.Float.getLeft()",1,1,1
"org.jhotdraw.geom.Insets2D.Float.getRight()",1,1,1
"org.jhotdraw.geom.Insets2D.Float.getTop()",1,1,1
"org.jhotdraw.geom.Insets2D.Float.set(double,double,double,double)",1,1,1
"org.jhotdraw.geom.Insets2D.Float.set(float,float,float,float)",1,1,1
"org.jhotdraw.geom.Insets2D.Insets2D()",1,1,1
"org.jhotdraw.geom.Insets2D.add(Insets2D)",1,1,1
"org.jhotdraw.geom.Insets2D.add(double,double,double,double)",1,1,1
"org.jhotdraw.geom.Insets2D.addTo(Rectangle2D)",1,1,1
"org.jhotdraw.geom.Insets2D.clone()",1,1,2
"org.jhotdraw.geom.Insets2D.equals(Object)",2,5,5
"org.jhotdraw.geom.Insets2D.hashCode()",1,1,1
"org.jhotdraw.geom.Insets2D.set(Insets2D)",1,1,1
"org.jhotdraw.geom.Insets2D.subtract(Insets2D)",1,1,1
"org.jhotdraw.geom.Insets2D.subtract(double,double,double,double)",1,1,1
"org.jhotdraw.geom.Insets2D.subtractTo(Rectangle2D)",1,1,1
"org.jhotdraw.geom.Insets2D.toString()",1,1,1
"org.jhotdraw.geom.QuadTree.QuadNode.QuadNode(Double)",1,1,1
"org.jhotdraw.geom.QuadTree.QuadNode.add(T,Double)",1,11,11
"org.jhotdraw.geom.QuadTree.QuadNode.findContains(Double,HashSet<T>)",1,5,5
"org.jhotdraw.geom.QuadTree.QuadNode.findInside(Double,HashSet<T>)",1,5,5
"org.jhotdraw.geom.QuadTree.QuadNode.findIntersects(Double,HashSet<T>)",1,5,5
"org.jhotdraw.geom.QuadTree.QuadNode.isLeaf()",1,1,1
"org.jhotdraw.geom.QuadTree.QuadNode.join()",1,2,2
"org.jhotdraw.geom.QuadTree.QuadNode.remove(T)",1,3,3
"org.jhotdraw.geom.QuadTree.QuadNode.split()",1,3,3
"org.jhotdraw.geom.QuadTree.QuadTree()",1,1,1
"org.jhotdraw.geom.QuadTree.QuadTree(Double)",1,1,1
"org.jhotdraw.geom.QuadTree.add(T,Double)",1,3,3
"org.jhotdraw.geom.QuadTree.findContains(Double)",1,3,3
"org.jhotdraw.geom.QuadTree.findInside(Double)",1,3,3
"org.jhotdraw.geom.QuadTree.findIntersects(Double)",1,3,3
"org.jhotdraw.geom.QuadTree.findIntersects(Rectangle2D)",1,1,1
"org.jhotdraw.geom.QuadTree.remove(T)",1,1,1
"org.jhotdraw.geom.QuadTree.reorganize()",1,3,3
"org.jhotdraw.geom.Shapes.Shapes()",1,1,1
"org.jhotdraw.geom.Shapes.outlineContains(Shape,Double,double)",5,3,10
"org.jhotdraw.gui.ActivityManager.add(ActivityModel)",1,3,3
"org.jhotdraw.gui.ActivityManager.addActivityManagerListener(ActivityManagerListener)",1,1,1
"org.jhotdraw.gui.ActivityManager.getActivityModels()",1,1,1
"org.jhotdraw.gui.ActivityManager.getInstance()",1,1,2
"org.jhotdraw.gui.ActivityManager.invokeAndWait(Runnable)",1,4,4
"org.jhotdraw.gui.ActivityManager.remove(ActivityModel)",1,3,3
"org.jhotdraw.gui.ActivityManager.removeActivityManagerListener(ActivityManagerListener)",1,1,1
"org.jhotdraw.gui.BackgroundTask.done()",1,1,1
"org.jhotdraw.gui.BackgroundTask.failed(Throwable)",1,2,2
"org.jhotdraw.gui.BackgroundTask.finished()",1,1,1
"org.jhotdraw.gui.BackgroundTask.getError()",1,1,1
"org.jhotdraw.gui.BackgroundTask.run()",1,2,2
"org.jhotdraw.gui.BackgroundTask.setError(Throwable)",1,1,1
"org.jhotdraw.gui.BackgroundTask.start()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,boolean)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int,boolean)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.addPropertyChangeListener(PropertyChangeListener)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.addPropertyChangeListener(String,PropertyChangeListener)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.cancel()",1,3,4
"org.jhotdraw.gui.DefaultActivityModel.close()",1,2,2
"org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,Object,Object)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,boolean,boolean)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,int,int)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.getError()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.getNote()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.getOwner()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.getTitle()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.getWarning()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.isCancelable()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.isCanceled()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.isClosed()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.isIndeterminate()",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.printf(String,Object...)",1,2,3
"org.jhotdraw.gui.DefaultActivityModel.removePropertyChangeListener(PropertyChangeListener)",5,5,5
"org.jhotdraw.gui.DefaultActivityModel.setCancelable(boolean)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.setDoCancel(Runnable)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.setError(String)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.setIndeterminate(boolean)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.setNote(String)",1,1,1
"org.jhotdraw.gui.DefaultActivityModel.setWarning(String)",1,1,1
"org.jhotdraw.gui.Dialogs.ColorTracker.ColorTracker(JColorChooser)",1,1,1
"org.jhotdraw.gui.Dialogs.ColorTracker.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.gui.Dialogs.ColorTracker.getColor()",1,1,1
"org.jhotdraw.gui.Dialogs.Dialogs()",1,1,1
"org.jhotdraw.gui.Dialogs.showColorChooserDialog(JColorChooser,Component,String,Color)",1,1,1
"org.jhotdraw.gui.DisclosureIcon.getIconHeight()",1,1,1
"org.jhotdraw.gui.DisclosureIcon.getIconWidth()",1,1,1
"org.jhotdraw.gui.DisclosureIcon.paintIcon(Component,Graphics,int,int)",1,3,3
"org.jhotdraw.gui.EmptyIcon.EmptyIcon(int,int)",1,1,1
"org.jhotdraw.gui.EmptyIcon.getIconHeight()",1,1,1
"org.jhotdraw.gui.EmptyIcon.getIconWidth()",1,1,1
"org.jhotdraw.gui.EmptyIcon.paintIcon(Component,Graphics,int,int)",1,1,1
"org.jhotdraw.gui.JActivityIndicator.Handler.activityModelAdded(ActivityManagerEvent)",1,3,3
"org.jhotdraw.gui.JActivityIndicator.Handler.activityModelRemoved(ActivityManagerEvent)",1,1,1
"org.jhotdraw.gui.JActivityIndicator.Handler.propertyChange(PropertyChangeEvent)",1,3,3
"org.jhotdraw.gui.JActivityIndicator.JActivityIndicator()",1,1,1
"org.jhotdraw.gui.JActivityIndicator.addActivityModel(ActivityModel)",1,3,3
"org.jhotdraw.gui.JActivityIndicator.getActivityManager()",1,1,1
"org.jhotdraw.gui.JActivityIndicator.getActivityOwner()",1,1,1
"org.jhotdraw.gui.JActivityIndicator.getPreferredSize()",1,1,1
"org.jhotdraw.gui.JActivityIndicator.initComponents()",1,1,1
"org.jhotdraw.gui.JActivityIndicator.removeActivityModel(ActivityModel)",1,2,2
"org.jhotdraw.gui.JActivityIndicator.setActivityManager(ActivityManager)",1,3,3
"org.jhotdraw.gui.JActivityIndicator.setActivityOwner(Object)",1,1,1
"org.jhotdraw.gui.JActivityIndicator.updateActivityModels()",1,6,6
"org.jhotdraw.gui.JActivityIndicator.updateIndeterminate()",1,3,3
"org.jhotdraw.gui.JActivityIndicator.updateProgressBar()",1,3,3
"org.jhotdraw.gui.JActivityIndicator.updateToolTip()",1,3,3
"org.jhotdraw.gui.JActivityView.Handler.propertyChange(PropertyChangeEvent)",1,1,1
"org.jhotdraw.gui.JActivityView.Handler.stateChanged(ChangeEvent)",1,1,1
"org.jhotdraw.gui.JActivityView.JActivityView()",1,1,1
"org.jhotdraw.gui.JActivityView.JActivityView(ActivityModel)",1,1,1
"org.jhotdraw.gui.JActivityView.cancel(ActionEvent)",1,1,1
"org.jhotdraw.gui.JActivityView.close(ActionEvent)",1,1,1
"org.jhotdraw.gui.JActivityView.getModel()",1,1,1
"org.jhotdraw.gui.JActivityView.initComponents()",1,1,1
"org.jhotdraw.gui.JActivityView.setModel(ActivityModel)",1,3,3
"org.jhotdraw.gui.JActivityView.updateCancelable()",1,3,3
"org.jhotdraw.gui.JActivityView.updateCanceled()",1,4,4
"org.jhotdraw.gui.JActivityView.updateClosed()",1,2,2
"org.jhotdraw.gui.JActivityView.updateError()",1,1,1
"org.jhotdraw.gui.JActivityView.updateIndeterminate()",1,1,1
"org.jhotdraw.gui.JActivityView.updateLabelVisibility()",1,1,3
"org.jhotdraw.gui.JActivityView.updateNote()",1,1,1
"org.jhotdraw.gui.JActivityView.updateProperties(PropertyChangeEvent)",2,10,10
"org.jhotdraw.gui.JActivityView.updateTitle()",1,1,1
"org.jhotdraw.gui.JActivityView.updateWarning()",1,1,1
"org.jhotdraw.gui.JActivityWindow.FormListener.FormListener()",1,1,1
"org.jhotdraw.gui.JActivityWindow.FormListener.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.gui.JActivityWindow.FormListener.itemStateChanged(ItemEvent)",1,2,2
"org.jhotdraw.gui.JActivityWindow.Handler.activityModelAdded(ActivityManagerEvent)",1,3,3
"org.jhotdraw.gui.JActivityWindow.Handler.activityModelRemoved(ActivityManagerEvent)",2,4,6
"org.jhotdraw.gui.JActivityWindow.Handler.propertyChange(PropertyChangeEvent)",1,2,2
"org.jhotdraw.gui.JActivityWindow.JActivityWindow()",1,1,1
"org.jhotdraw.gui.JActivityWindow.JActivityWindow(ActivityManager)",1,1,1
"org.jhotdraw.gui.JActivityWindow.addActivityModel(ActivityModel)",1,2,3
"org.jhotdraw.gui.JActivityWindow.cancelAll(ActionEvent)",1,3,3
"org.jhotdraw.gui.JActivityWindow.disclosureStateChanged(ItemEvent)",1,1,1
"org.jhotdraw.gui.JActivityWindow.dispose()",1,1,1
"org.jhotdraw.gui.JActivityWindow.getActivityManager()",1,1,1
"org.jhotdraw.gui.JActivityWindow.getActivityOwner()",1,1,1
"org.jhotdraw.gui.JActivityWindow.getInstance()",1,1,2
"org.jhotdraw.gui.JActivityWindow.getPreferredSize()",1,1,1
"org.jhotdraw.gui.JActivityWindow.initComponents()",1,1,1
"org.jhotdraw.gui.JActivityWindow.invokeAndWait(Runnable)",1,4,4
"org.jhotdraw.gui.JActivityWindow.removeActivityModel(ActivityModel)",1,2,2
"org.jhotdraw.gui.JActivityWindow.setActivityManager(ActivityManager)",1,3,3
"org.jhotdraw.gui.JActivityWindow.setActivityOwner(Object)",1,2,2
"org.jhotdraw.gui.JActivityWindow.updateActivityModels()",1,5,6
"org.jhotdraw.gui.JActivityWindow.updateInfoPanel()",2,2,4
"org.jhotdraw.gui.JComponentPopup.Handler.eventDispatched(AWTEvent)",2,10,11
"org.jhotdraw.gui.JComponentPopup.JComponentPopup()",1,1,1
"org.jhotdraw.gui.JComponentPopup.menuSelectionChanged(boolean)",2,8,8
"org.jhotdraw.gui.JComponentPopup.setVisible(boolean)",1,4,5
"org.jhotdraw.gui.JDisclosureToolBar.JDisclosureToolBar()",1,1,1
"org.jhotdraw.gui.JDisclosureToolBar.getDisclosedComponent(int)",1,1,1
"org.jhotdraw.gui.JDisclosureToolBar.getDisclosureState()",1,1,2
"org.jhotdraw.gui.JDisclosureToolBar.getDisclosureStateCount()",1,1,2
"org.jhotdraw.gui.JDisclosureToolBar.initComponents()",1,2,2
"org.jhotdraw.gui.JDisclosureToolBar.setDisclosureState(int)",1,4,4
"org.jhotdraw.gui.JDisclosureToolBar.setDisclosureStateCount(int)",1,1,1
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.gui.JFileURIChooser.getComponent()",1,1,1
"org.jhotdraw.gui.JFileURIChooser.getSelectedURI()",1,2,2
"org.jhotdraw.gui.JFileURIChooser.setSelectedURI(URI)",1,1,2
"org.jhotdraw.gui.JFontChooser.JFontChooser()",1,4,4
"org.jhotdraw.gui.JFontChooser.addActionListener(ActionListener)",1,1,1
"org.jhotdraw.gui.JFontChooser.approveSelection()",1,2,2
"org.jhotdraw.gui.JFontChooser.cancelSelection()",1,2,2
"org.jhotdraw.gui.JFontChooser.fireActionPerformed(String)",1,5,6
"org.jhotdraw.gui.JFontChooser.getAllFonts()",1,1,3
"org.jhotdraw.gui.JFontChooser.getModel()",1,1,1
"org.jhotdraw.gui.JFontChooser.getSelectedFont()",1,1,1
"org.jhotdraw.gui.JFontChooser.getSelectionPath()",1,1,1
"org.jhotdraw.gui.JFontChooser.getUI()",1,1,1
"org.jhotdraw.gui.JFontChooser.getUIClassID()",1,1,1
"org.jhotdraw.gui.JFontChooser.loadAllFonts()",1,5,5
"org.jhotdraw.gui.JFontChooser.removeActionListener(ActionListener)",1,1,1
"org.jhotdraw.gui.JFontChooser.setModel(FontChooserModel)",1,3,3
"org.jhotdraw.gui.JFontChooser.setSelectedFont(Font)",1,1,1
"org.jhotdraw.gui.JFontChooser.setSelectionPath(TreePath)",1,3,3
"org.jhotdraw.gui.JFontChooser.setUI(FontChooserUI)",1,1,1
"org.jhotdraw.gui.JFontChooser.updateSelectionPath(Font)",14,22,27
"org.jhotdraw.gui.JFontChooser.updateUI()",1,2,2
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTexAreaBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextArea.JLifeFormattedTextArea()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextArea.getFormatterFactory()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextArea.getValue()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextArea.initComponents()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextArea.setDocument(Document)",1,4,4
"org.jhotdraw.gui.JLifeFormattedTextArea.setFormatterFactory(AbstractFormatterFactory)",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextArea.setValue(Object)",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextField.DocumentHandler.changedUpdate(DocumentEvent)",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextField.DocumentHandler.insertUpdate(DocumentEvent)",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextField.DocumentHandler.removeUpdate(DocumentEvent)",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextField.JLifeFormattedTextField()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextField.getDefaultFormatterFactory(Object)",6,2,6
"org.jhotdraw.gui.JLifeFormattedTextField.getValue()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextField.initComponents()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextField.setDocument(Document)",1,3,4
"org.jhotdraw.gui.JLifeFormattedTextField.setValue(Object)",2,5,6
"org.jhotdraw.gui.JLifeFormattedTextField.updateText()",1,4,5
"org.jhotdraw.gui.JLifeFormattedTextField.updateValue()",1,3,4
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.gui.JLifeFormattedTextFieldBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.gui.JMDIDesktopPane.JMDIDesktopPane()",1,1,1
"org.jhotdraw.gui.JMDIDesktopPane.arrangeFramesCascading()",2,4,5
"org.jhotdraw.gui.JMDIDesktopPane.arrangeFramesHorizontally()",2,6,7
"org.jhotdraw.gui.JMDIDesktopPane.arrangeFramesVertically()",2,6,7
"org.jhotdraw.gui.JMDIDesktopPane.checkDesktopSize()",1,3,3
"org.jhotdraw.gui.JMDIDesktopPane.getArrangement()",1,1,1
"org.jhotdraw.gui.JMDIDesktopPane.setAllSize(Dimension)",1,1,1
"org.jhotdraw.gui.JMDIDesktopPane.setAllSize(int,int)",1,1,1
"org.jhotdraw.gui.JMDIDesktopPane.setArrangement(Arrangement)",2,2,4
"org.jhotdraw.gui.JMDIDesktopPane.tileFramesHorizontally()",2,3,4
"org.jhotdraw.gui.JMDIDesktopPane.tileFramesVertically()",2,3,4
"org.jhotdraw.gui.JPopupButton.Handler.eventDispatched(AWTEvent)",2,6,7
"org.jhotdraw.gui.JPopupButton.Handler.popupMenuCanceled(PopupMenuEvent)",1,1,1
"org.jhotdraw.gui.JPopupButton.Handler.popupMenuWillBecomeInvisible(PopupMenuEvent)",1,1,1
"org.jhotdraw.gui.JPopupButton.Handler.popupMenuWillBecomeVisible(PopupMenuEvent)",1,1,1
"org.jhotdraw.gui.JPopupButton.Handler.propertyChange(PropertyChangeEvent)",1,2,2
"org.jhotdraw.gui.JPopupButton.JPopupButton()",1,1,1
"org.jhotdraw.gui.JPopupButton.add(Action)",1,2,2
"org.jhotdraw.gui.JPopupButton.add(JComponent)",1,1,1
"org.jhotdraw.gui.JPopupButton.add(JMenu)",1,1,1
"org.jhotdraw.gui.JPopupButton.add(JMenuItem)",1,1,1
"org.jhotdraw.gui.JPopupButton.addSeparator()",1,1,1
"org.jhotdraw.gui.JPopupButton.getColumnCount()",1,1,1
"org.jhotdraw.gui.JPopupButton.getPopupAlpha()",1,2,2
"org.jhotdraw.gui.JPopupButton.getPopupAnchor()",1,1,1
"org.jhotdraw.gui.JPopupButton.getPopupMenu()",1,2,2
"org.jhotdraw.gui.JPopupButton.handleMousePressed(MouseEvent)",1,1,1
"org.jhotdraw.gui.JPopupButton.initComponents()",1,1,1
"org.jhotdraw.gui.JPopupButton.performAction(MouseEvent)",1,3,3
"org.jhotdraw.gui.JPopupButton.removeAll()",1,1,1
"org.jhotdraw.gui.JPopupButton.setAction(Action,Rectangle)",1,3,3
"org.jhotdraw.gui.JPopupButton.setColumnCount(int,boolean)",1,1,1
"org.jhotdraw.gui.JPopupButton.setItemFont(Font)",1,2,2
"org.jhotdraw.gui.JPopupButton.setPopupAlpha(float)",1,1,1
"org.jhotdraw.gui.JPopupButton.setPopupAnchor(int)",1,1,1
"org.jhotdraw.gui.JPopupButton.setPopupMenu(JPopupMenu)",1,3,3
"org.jhotdraw.gui.JPopupButton.showPopup(MouseEvent)",2,9,10
"org.jhotdraw.gui.JPopupButton.togglePopup(MouseEvent)",1,4,4
"org.jhotdraw.gui.JPopupButton.updateItemFont(MenuElement)",1,2,2
"org.jhotdraw.gui.JPopupButtonBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.gui.JPopupButtonBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.gui.JPopupButtonBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.gui.JPopupButtonBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.gui.JPopupButtonBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.gui.JPopupButtonBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.gui.JPopupButtonBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.gui.JPopupButtonBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.gui.JPopupButtonBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.gui.JPopupButtonBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.gui.JPopupButtonBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.gui.JSheet.JSheet(Dialog)",1,1,1
"org.jhotdraw.gui.JSheet.JSheet(Frame)",1,1,1
"org.jhotdraw.gui.JSheet.addNotify()",1,1,2
"org.jhotdraw.gui.JSheet.addSheetListener(SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.createSheet(JOptionPane,Component,int)",1,14,14
"org.jhotdraw.gui.JSheet.dispose()",1,1,1
"org.jhotdraw.gui.JSheet.fireOptionSelected(JFileChooser,int)",1,3,4
"org.jhotdraw.gui.JSheet.fireOptionSelected(JOptionPane)",5,5,7
"org.jhotdraw.gui.JSheet.fireOptionSelected(JOptionPane,int,Object,Object)",1,3,4
"org.jhotdraw.gui.JSheet.fireOptionSelected(URIChooser,int)",1,3,4
"org.jhotdraw.gui.JSheet.getWindowForComponent(Component)",3,2,4
"org.jhotdraw.gui.JSheet.hide()",1,5,7
"org.jhotdraw.gui.JSheet.hide0()",1,6,6
"org.jhotdraw.gui.JSheet.init()",1,6,6
"org.jhotdraw.gui.JSheet.installSheet()",1,9,9
"org.jhotdraw.gui.JSheet.isAnimated()",1,1,1
"org.jhotdraw.gui.JSheet.isDocumentModalitySupported()",1,1,1
"org.jhotdraw.gui.JSheet.isNativeSheetSupported()",1,1,1
"org.jhotdraw.gui.JSheet.isShowAsSheet()",1,2,2
"org.jhotdraw.gui.JSheet.removeSheetListener(SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.requestUserAttention(boolean)",1,1,1
"org.jhotdraw.gui.JSheet.setAnimated(boolean)",1,1,1
"org.jhotdraw.gui.JSheet.show()",1,7,9
"org.jhotdraw.gui.JSheet.show0()",1,5,5
"org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,int,Icon,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,int,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,Object,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,Icon,Object[],Object,SheetListener)",1,2,2
"org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object)",1,1,1
"org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int)",1,1,1
"org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int,Icon,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showOpenSheet(JFileChooser,Component,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showOpenSheet(URIChooser,Component,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showOptionSheet(Component,Object,int,int,Icon,Object[],Object,SheetListener)",1,2,2
"org.jhotdraw.gui.JSheet.showSaveSheet(JFileChooser,Component,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showSaveSheet(URIChooser,Component,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showSheet(JFileChooser,Component,String,SheetListener)",1,5,6
"org.jhotdraw.gui.JSheet.showSheet(JOptionPane,Component,SheetListener)",1,1,1
"org.jhotdraw.gui.JSheet.showSheet(URIChooser,Component,String,SheetListener)",1,6,7
"org.jhotdraw.gui.JSheet.styleFromMessageType(int)",6,2,6
"org.jhotdraw.gui.JSheet.uninstallSheet()",1,5,5
"org.jhotdraw.gui.MDIDesktopManager.MDIDesktopManager(JMDIDesktopPane)",1,1,1
"org.jhotdraw.gui.MDIDesktopManager.endDraggingFrame(JComponent)",1,1,1
"org.jhotdraw.gui.MDIDesktopManager.endResizingFrame(JComponent)",1,1,1
"org.jhotdraw.gui.MDIDesktopManager.getScrollPane()",3,3,3
"org.jhotdraw.gui.MDIDesktopManager.getScrollPaneInsets()",2,3,3
"org.jhotdraw.gui.MDIDesktopManager.resizeDesktop()",1,8,8
"org.jhotdraw.gui.MDIDesktopManager.setNormalSize()",1,3,3
"org.jhotdraw.gui.PlacardScrollPaneLayout.PlacardScrollPaneLayout()",1,1,1
"org.jhotdraw.gui.PlacardScrollPaneLayout.layoutContainer(Container)",1,2,3
"org.jhotdraw.gui.ToolBarLayout.ToolBarLayout()",1,1,1
"org.jhotdraw.gui.ToolBarLayout.ToolBarLayout(int)",1,1,1
"org.jhotdraw.gui.ToolBarLayout.addLayoutComponent(Component,Object)",1,1,1
"org.jhotdraw.gui.ToolBarLayout.addLayoutComponent(String,Component)",1,1,1
"org.jhotdraw.gui.ToolBarLayout.getLayoutAlignmentX(Container)",3,2,3
"org.jhotdraw.gui.ToolBarLayout.getLayoutAlignmentY(Container)",3,2,3
"org.jhotdraw.gui.ToolBarLayout.invalidateLayout(Container)",1,1,1
"org.jhotdraw.gui.ToolBarLayout.layoutContainer(Container)",2,4,5
"org.jhotdraw.gui.ToolBarLayout.maximumLayoutSize(Container)",1,1,1
"org.jhotdraw.gui.ToolBarLayout.minimumLayoutSize(Container)",1,1,1
"org.jhotdraw.gui.ToolBarLayout.preferredLayoutSize(Container)",2,4,5
"org.jhotdraw.gui.ToolBarLayout.removeLayoutComponent(Component)",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout()",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int)",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,boolean)",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,int,int)",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,int,int,boolean)",2,1,3
"org.jhotdraw.gui.VerticalGridLayout.addLayoutComponent(String,Component)",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.getColumns()",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.getHgap()",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.getRows()",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.getVgap()",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.isVertical()",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.layoutContainer(Container)",2,8,12
"org.jhotdraw.gui.VerticalGridLayout.minimumLayoutSize(Container)",1,2,5
"org.jhotdraw.gui.VerticalGridLayout.preferredLayoutSize(Container)",1,2,5
"org.jhotdraw.gui.VerticalGridLayout.removeLayoutComponent(Component)",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.setColumns(int)",2,1,3
"org.jhotdraw.gui.VerticalGridLayout.setHgap(int)",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.setRows(int)",2,1,3
"org.jhotdraw.gui.VerticalGridLayout.setVertical(boolean)",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.setVgap(int)",1,1,1
"org.jhotdraw.gui.VerticalGridLayout.toString()",1,1,1
"org.jhotdraw.gui.Worker.done(T)",1,1,1
"org.jhotdraw.gui.Worker.failed(Throwable)",1,2,2
"org.jhotdraw.gui.Worker.finished()",1,1,1
"org.jhotdraw.gui.Worker.getError()",1,1,1
"org.jhotdraw.gui.Worker.getValue()",1,1,1
"org.jhotdraw.gui.Worker.run()",1,2,2
"org.jhotdraw.gui.Worker.setError(Throwable)",1,1,1
"org.jhotdraw.gui.Worker.setValue(T)",1,1,1
"org.jhotdraw.gui.Worker.start()",1,1,1
"org.jhotdraw.gui.datatransfer.AWTClipboard.AWTClipboard(Clipboard)",1,1,1
"org.jhotdraw.gui.datatransfer.AWTClipboard.getContents(Object)",1,1,1
"org.jhotdraw.gui.datatransfer.AWTClipboard.getTarget()",1,1,1
"org.jhotdraw.gui.datatransfer.AWTClipboard.setContents(Transferable,ClipboardOwner)",1,1,1
"org.jhotdraw.gui.datatransfer.AbstractClipboard.AbstractClipboard()",1,1,1
"org.jhotdraw.gui.datatransfer.AbstractTransferable.AbstractTransferable(DataFlavor)",1,1,1
"org.jhotdraw.gui.datatransfer.AbstractTransferable.AbstractTransferable(DataFlavor[])",1,1,1
"org.jhotdraw.gui.datatransfer.AbstractTransferable.getTransferDataFlavors()",1,1,1
"org.jhotdraw.gui.datatransfer.AbstractTransferable.isDataFlavorSupported(DataFlavor)",3,2,3
"org.jhotdraw.gui.datatransfer.ClipboardUtil.getClipboard()",2,2,4
"org.jhotdraw.gui.datatransfer.ClipboardUtil.setClipboard(Clipboard)",1,1,1
"org.jhotdraw.gui.datatransfer.CompositeTransferable.CompositeTransferable()",1,1,1
"org.jhotdraw.gui.datatransfer.CompositeTransferable.add(Transferable)",1,3,3
"org.jhotdraw.gui.datatransfer.CompositeTransferable.getTransferData(DataFlavor)",2,1,2
"org.jhotdraw.gui.datatransfer.CompositeTransferable.getTransferDataFlavors()",1,1,1
"org.jhotdraw.gui.datatransfer.CompositeTransferable.isDataFlavorSupported(DataFlavor)",1,1,1
"org.jhotdraw.gui.datatransfer.CompositeTransferable.lostOwnership(Clipboard,Transferable)",1,1,1
"org.jhotdraw.gui.datatransfer.ImageTransferable.ImageTransferable(Image)",1,1,1
"org.jhotdraw.gui.datatransfer.ImageTransferable.getTransferData(DataFlavor)",3,3,3
"org.jhotdraw.gui.datatransfer.ImageTransferable.getTransferDataFlavors()",1,1,1
"org.jhotdraw.gui.datatransfer.ImageTransferable.isDataFlavorSupported(DataFlavor)",1,2,2
"org.jhotdraw.gui.datatransfer.InputStreamTransferable.InputStreamTransferable(DataFlavor,byte[])",1,1,1
"org.jhotdraw.gui.datatransfer.InputStreamTransferable.InputStreamTransferable(DataFlavor[],byte[])",1,1,1
"org.jhotdraw.gui.datatransfer.InputStreamTransferable.getTransferData(DataFlavor)",2,1,2
"org.jhotdraw.gui.datatransfer.JNLPClipboard.JNLPClipboard(Object)",1,1,1
"org.jhotdraw.gui.datatransfer.JNLPClipboard.getContents(Object)",1,2,2
"org.jhotdraw.gui.datatransfer.JNLPClipboard.getTarget()",1,1,1
"org.jhotdraw.gui.datatransfer.JNLPClipboard.setContents(Transferable,ClipboardOwner)",1,2,2
"org.jhotdraw.gui.datatransfer.OSXClipboard.OSXClipboard(Clipboard)",1,1,1
"org.jhotdraw.gui.datatransfer.OSXClipboard.getContents(Object)",1,2,3
"org.jhotdraw.gui.event.ActivityManagerEvent.ActivityManagerEvent(Object,ActivityModel)",1,1,1
"org.jhotdraw.gui.event.ActivityManagerEvent.getActivityModel()",1,1,1
"org.jhotdraw.gui.event.GenericListener.DefaultInvoker.invoke(Object,Method,Object[])",5,5,5
"org.jhotdraw.gui.event.GenericListener.DefaultInvoker.nullValueOf(Class<?>)",5,1,5
"org.jhotdraw.gui.event.GenericListener.DefaultInvoker.proxyEquals(Object,Object)",1,1,2
"org.jhotdraw.gui.event.GenericListener.DefaultInvoker.proxyHashCode(Object)",1,1,1
"org.jhotdraw.gui.event.GenericListener.DefaultInvoker.proxyToString(Object)",1,1,1
"org.jhotdraw.gui.event.GenericListener.GenericListener()",1,1,1
"org.jhotdraw.gui.event.GenericListener.create(Class<?>,String,Object,String)",2,3,3
"org.jhotdraw.gui.event.GenericListener.create(Method,Object,Method)",3,3,3
"org.jhotdraw.gui.event.GenericListener.getListenerMethod(Class<?>,String)",5,2,5
"org.jhotdraw.gui.event.GenericListener.getTargetMethod(Object,String,Class<?>[])",8,3,9
"org.jhotdraw.gui.event.GenericListener.raiseToPublicClass(Method)",6,4,7
"org.jhotdraw.gui.event.GenericListener.raiseToPublicClass(Method,Class<?>)",1,1,2
"org.jhotdraw.gui.event.SheetEvent.SheetEvent(JSheet)",1,1,1
"org.jhotdraw.gui.event.SheetEvent.SheetEvent(JSheet,JFileChooser,int,Object)",1,1,1
"org.jhotdraw.gui.event.SheetEvent.SheetEvent(JSheet,JOptionPane,int,Object,Object)",1,1,1
"org.jhotdraw.gui.event.SheetEvent.SheetEvent(JSheet,URIChooser,int,Object)",1,1,1
"org.jhotdraw.gui.event.SheetEvent.getChooser()",1,1,1
"org.jhotdraw.gui.event.SheetEvent.getFileChooser()",1,1,1
"org.jhotdraw.gui.event.SheetEvent.getInputValue()",1,1,1
"org.jhotdraw.gui.event.SheetEvent.getOption()",1,1,1
"org.jhotdraw.gui.event.SheetEvent.getOptionPane()",1,1,1
"org.jhotdraw.gui.event.SheetEvent.getPane()",1,1,1
"org.jhotdraw.gui.event.SheetEvent.getValue()",1,1,1
"org.jhotdraw.gui.filechooser.ExtensionFileFilter.ExtensionFileFilter(String,String)",1,1,1
"org.jhotdraw.gui.filechooser.ExtensionFileFilter.ExtensionFileFilter(String,String[])",1,2,2
"org.jhotdraw.gui.filechooser.ExtensionFileFilter.accept(File)",3,4,4
"org.jhotdraw.gui.filechooser.ExtensionFileFilter.getDescription()",1,1,1
"org.jhotdraw.gui.filechooser.ExtensionFileFilter.getExtensions()",1,1,1
"org.jhotdraw.gui.filechooser.ExtensionFileFilter.makeAcceptable(File)",2,2,2
"org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.addTreeModelListener(TreeModelListener)",1,1,1
"org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeNodesChanged(Object,Object[],int[],Object[])",1,3,4
"org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeNodesInserted(Object,Object[],int[],Object[])",1,3,4
"org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeNodesRemoved(Object,Object[],int[],Object[])",1,3,4
"org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeStructureChanged(Object,Object[],int[],Object[])",1,3,4
"org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeStructureChanged(Object,TreePath)",1,3,4
"org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.getListeners(Class<T>)",1,1,1
"org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.getTreeModelListeners()",1,1,1
"org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.removeTreeModelListener(TreeModelListener)",1,1,1
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.DefaultFontChooserModel()",1,1,1
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.DefaultFontChooserModel(Font[])",1,1,1
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.collectFamiliesNamed(ArrayList<FontFamilyNode>,String...)",1,3,3
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.getChild(Object,int)",1,1,1
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.getChildCount(Object)",1,1,1
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.getIndexOfChild(Object,Object)",1,1,1
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.getRoot()",1,1,1
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.isEditable(MutableTreeNode)",1,4,6
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.isLeaf(Object)",1,1,1
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.setFonts(Font[])",1,6,6
"org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.valueForPathChanged(TreePath,Object)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.FontCollectionNode(String)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.FontCollectionNode(String,ArrayList<FontFamilyNode>)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.add(FontFamilyNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.addAll(Collection<FontFamilyNode>)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.children()",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.clone()",1,3,3
"org.jhotdraw.gui.fontchooser.FontCollectionNode.compareTo(FontCollectionNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.families()",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.getAllowsChildren()",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.getChildAt(int)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.getChildCount()",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.getIndex(TreeNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.getName()",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.getParent()",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.insert(MutableTreeNode,int)",1,2,2
"org.jhotdraw.gui.fontchooser.FontCollectionNode.isEditable()",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.isLeaf()",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.isNodeChild(TreeNode)",1,3,3
"org.jhotdraw.gui.fontchooser.FontCollectionNode.remove(MutableTreeNode)",3,1,3
"org.jhotdraw.gui.fontchooser.FontCollectionNode.remove(int)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.removeFromParent()",1,2,2
"org.jhotdraw.gui.fontchooser.FontCollectionNode.setEditable(boolean)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.setParent(MutableTreeNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.setUserObject(Object)",1,1,1
"org.jhotdraw.gui.fontchooser.FontCollectionNode.toString()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.FontFaceNode(Font)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.beautifyName(String)",1,25,27
"org.jhotdraw.gui.fontchooser.FontFaceNode.children()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.clone()",1,2,2
"org.jhotdraw.gui.fontchooser.FontFaceNode.compareTo(FontFaceNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.getAllowsChildren()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.getChildAt(int)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.getChildCount()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.getFont()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.getIndex(TreeNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.getName()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.getParent()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.insert(MutableTreeNode,int)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.isEditable()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.isLeaf()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.remove(MutableTreeNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.remove(int)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.removeFromParent()",1,2,2
"org.jhotdraw.gui.fontchooser.FontFaceNode.setName(String)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.setParent(MutableTreeNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.setUserObject(Object)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFaceNode.toString()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.FontFamilyNode(String)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.add(FontFaceNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.children()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.clone()",1,3,3
"org.jhotdraw.gui.fontchooser.FontFamilyNode.compareTo(FontFamilyNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.equals(Object)",2,2,2
"org.jhotdraw.gui.fontchooser.FontFamilyNode.faces()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.getAllowsChildren()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.getChildAt(int)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.getChildCount()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.getIndex(TreeNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.getName()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.getParent()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.hashCode()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.insert(MutableTreeNode,int)",1,2,2
"org.jhotdraw.gui.fontchooser.FontFamilyNode.isEditable()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.isLeaf()",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.isNodeChild(TreeNode)",1,3,3
"org.jhotdraw.gui.fontchooser.FontFamilyNode.remove(MutableTreeNode)",3,1,3
"org.jhotdraw.gui.fontchooser.FontFamilyNode.remove(int)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.removeFromParent()",1,2,2
"org.jhotdraw.gui.fontchooser.FontFamilyNode.setParent(MutableTreeNode)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.setUserObject(Object)",1,1,1
"org.jhotdraw.gui.fontchooser.FontFamilyNode.toString()",1,1,1
"org.jhotdraw.gui.plaf.palette.BackdropBorder.BackdropBorder(Border)",1,1,1
"org.jhotdraw.gui.plaf.palette.BackdropBorder.BackdropBorder(Border,Border)",1,1,1
"org.jhotdraw.gui.plaf.palette.BackdropBorder.UIResource.UIResource(Border)",1,1,1
"org.jhotdraw.gui.plaf.palette.BackdropBorder.UIResource.UIResource(Border,Border)",1,1,1
"org.jhotdraw.gui.plaf.palette.BackdropBorder.getBackdropBorder()",1,1,1
"org.jhotdraw.gui.plaf.palette.BackdropBorder.getBorderInsets(Component)",2,2,2
"org.jhotdraw.gui.plaf.palette.BackdropBorder.isBorderOpaque()",1,1,1
"org.jhotdraw.gui.plaf.palette.BackdropBorder.paintBorder(Component,Graphics,int,int,int,int)",1,2,2
"org.jhotdraw.gui.plaf.palette.MultiIcon.MultiIcon(Icon[])",1,1,1
"org.jhotdraw.gui.plaf.palette.MultiIcon.MultiIcon(Image,int,boolean)",1,1,1
"org.jhotdraw.gui.plaf.palette.MultiIcon.MultiIcon(Image[])",1,1,3
"org.jhotdraw.gui.plaf.palette.MultiIcon.generateIconsFromTiledImage()",1,2,4
"org.jhotdraw.gui.plaf.palette.MultiIcon.getIconHeight()",1,1,1
"org.jhotdraw.gui.plaf.palette.MultiIcon.getIconWidth()",1,1,1
"org.jhotdraw.gui.plaf.palette.MultiIcon.paintIcon(Component,Graphics,int,int)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.getBorderInsets(Component)",1,1,3
"org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.getSegmentPosition(Component)",1,2,3
"org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.isBorderOpaque()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.paintBorder(AbstractButton,Graphics,int,int,int,int)",1,4,7
"org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.paintBorder(Component,Graphics,int,int,int,int)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteButtonUI.installDefaults(AbstractButton)",1,4,4
"org.jhotdraw.gui.plaf.palette.PaletteButtonUI.paint(Graphics,JComponent)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.ColorTransferHandler.ColorTransferHandler()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.PreviewListener.stateChanged(ChangeEvent)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.PropertyHandler.propertyChange(PropertyChangeEvent)",1,14,14
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.createDefaultChoosers()",1,6,6
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.createPropertyChangeListener()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.installDefaults()",1,2,3
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.installListeners()",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.installPreviewPanel()",2,7,8
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.installUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.uninstallDefaultChoosers()",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.uninstallDefaults()",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.uninstallListeners()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.uninstallUI(JComponent)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.updateColorChooserPanels(AbstractColorChooserPanel[],AbstractColorChooserPanel[])",1,8,8
"org.jhotdraw.gui.plaf.palette.PaletteColorSliderUI.PaletteColorSliderUI(JSlider)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteColorSliderUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteColorSliderUI.getThumbIcon()",2,1,3
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserPreviewPanel.PaletteFontChooserPreviewPanel()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserPreviewPanel.beautifyName(String)",1,8,8
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserPreviewPanel.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserPreviewPanel.setSelectedFont(Font)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.PaletteFontChooserSelectionPanel()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.getCollectionList()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.getFaceList()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.getFamilyList()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.FontChooserHandler.propertyChange(PropertyChangeEvent)",1,6,6
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.FontChooserHandler.treeNodesChanged(TreeModelEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.FontChooserHandler.treeNodesInserted(TreeModelEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.FontChooserHandler.treeNodesRemoved(TreeModelEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.FontChooserHandler.treeStructureChanged(TreeModelEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.PaletteFontChooserUI(JFontChooser)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.SelectionPanelHandler.keyPressed(KeyEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.SelectionPanelHandler.keyReleased(KeyEvent)",2,7,11
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.SelectionPanelHandler.keyTyped(KeyEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.SelectionPanelHandler.mouseClicked(MouseEvent)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.SelectionPanelHandler.mouseEntered(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.SelectionPanelHandler.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.SelectionPanelHandler.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.SelectionPanelHandler.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.SelectionPanelHandler.valueChanged(ListSelectionEvent)",1,5,5
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.doCollectionChanged()",10,23,30
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.doFaceChanged()",1,7,7
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.doFamilyChanged()",4,15,17
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.installComponents(JFontChooser)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.installListeners(JFontChooser)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.installUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.setNewSelectionPath(FontCollectionNode,FontFamilyNode,FontFaceNode)",1,4,4
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.uninstallComponents(JFontChooser)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.uninstallListeners(JFontChooser)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.uninstallUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.updateCollectionList()",1,4,4
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.updateFaceList()",1,8,8
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.updateFamilyList()",1,8,8
"org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.updatePreview()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.create(Element)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.installDefaults()",1,10,19
"org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.paintBackground(Graphics)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.paintSafely(Graphics)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLabelUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLabelUI.installDefaults(JLabel)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteLabelUI.layoutCL(JLabel,FontMetrics,String,Icon,Rectangle,Rectangle,Rectangle)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLabelUI.paint(Graphics,JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLabelUI.paintDisabledText(JLabel,Graphics,String,int,int)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteLabelUI.paintEnabledText(JLabel,Graphics,String,int,int)",1,6,6
"org.jhotdraw.gui.plaf.palette.PaletteLabelUI.propertyChange(PropertyChangeEvent)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.PaletteLazyActionMap(Class<?>)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.allKeys()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.clear()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.get(Object)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.getActionMap(Class<?>,String)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.installLazyActionMap(JComponent,Class<?>,String)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.keys()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()",1,2,6
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.put(Action)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.put(Object,Action)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.remove(Object)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.setParent(ActionMap)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.size()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteListCellRenderer.PaletteListCellRenderer()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteListCellRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)",1,12,12
"org.jhotdraw.gui.plaf.palette.PaletteListCellRenderer.getNoFocusBorder()",4,1,6
"org.jhotdraw.gui.plaf.palette.PaletteListUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteListUI.installDefaults()",1,4,6
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)",2,1,3
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBoolean(String)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBorder(String)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getCachedDefaults()",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getColor(String)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getDescription()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getID()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getIcon(String)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInsets(String)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()",1,1,2
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInt(String)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getName()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getUIOfType(ComponentUI,Class<?>)",2,1,2
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.initComponentDefaults(UIDefaults)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installBorder(JComponent,String)",1,2,3
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColors(JComponent,String,String)",1,3,5
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColorsAndFont(JComponent,String,String,String)",1,2,3
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.isNativeLookAndFeel()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.isSupportedLookAndFeel()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteMenuItemUI.PaletteMenuItemUI()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteMenuItemUI.getPreferredMenuItemSize(JComponent,Icon,Icon,int)",2,1,2
"org.jhotdraw.gui.plaf.palette.PaletteMenuItemUI.installDefaults()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteMenuItemUI.paint(Graphics,JComponent)",1,2,2
"org.jhotdraw.gui.plaf.palette.PalettePanelUI.createUI(JComponent)",1,1,2
"org.jhotdraw.gui.plaf.palette.PalettePanelUI.installDefaults(JPanel)",1,1,1
"org.jhotdraw.gui.plaf.palette.PalettePanelUI.isInTabbedPane(Component)",7,2,7
"org.jhotdraw.gui.plaf.palette.PalettePanelUI.paint(Graphics,JComponent)",1,2,2
"org.jhotdraw.gui.plaf.palette.PalettePanelUI.uninstallDefaults(JPanel)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.PaletteRootLayout(JRootPane)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.addLayoutComponent(Component,Object)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.addLayoutComponent(String,Component)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.getLayoutAlignmentX(Container)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.getLayoutAlignmentY(Container)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.invalidateLayout(Container)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.layoutContainer(Container)",1,6,6
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.maximumLayoutSize(Container)",1,5,5
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.minimumLayoutSize(Container)",1,6,6
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.preferredLayoutSize(Container)",1,4,4
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.PaletteRootLayout.removeLayoutComponent(Component)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.installUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(Icon,Icon,Icon,Icon,Icon)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(Icon[])",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(Image,int,boolean)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(Image[])",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(String,int,boolean)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.generateMissingIcons()",1,2,6
"org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.getIcon(Component)",1,5,9
"org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.paintIcon(Component,Graphics,int,int)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.PaletteSliderUI(JSlider)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.getPreferredHorizontalSize()",1,1,2
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.getPreferredVerticalSize()",1,1,2
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.getThumbSize()",1,1,2
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.installDefaults(JSlider)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paint(Graphics,JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paintFocus(Graphics)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paintThumb(Graphics)",1,7,8
"org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paintTrack(Graphics)",1,2,3
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.TabbedPaneLayout.TabbedPaneLayout()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.TabbedPaneLayout.normalizeTabRuns(int,int,int,int)",1,2,3
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.TabbedPaneLayout.padSelectedTab(int,int)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.TabbedPaneLayout.rotateTabRuns(int,int)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.createLayoutManager()",2,2,2
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.getFontMetrics()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.getTabLabelShiftX(int,int,boolean)",2,2,6
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.getTabLabelShiftY(int,int,boolean)",2,2,5
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.installDefaults()",1,1,6
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.paintContentBorder(Graphics,int,int)",2,11,23
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.paintContentBorderBottomEdge(Graphics,int,int,int,int,int,int)",1,4,8
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.paintContentBorderLeftEdge(Graphics,int,int,int,int,int,int)",1,4,8
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.paintContentBorderRightEdge(Graphics,int,int,int,int,int,int)",1,4,8
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.paintContentBorderTopEdge(Graphics,int,int,int,int,int,int)",1,4,8
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.paintTab(Graphics,int,Rectangle[],int,Rectangle,Rectangle)",1,5,5
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.paintTabBackground(Graphics,int,int,int,int,int,int,boolean)",2,4,8
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.paintTabBorder(Graphics,int,int,int,int,int,int,boolean)",2,2,6
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.paintText(Graphics,int,Font,FontMetrics,int,String,Rectangle,boolean)",1,5,7
"org.jhotdraw.gui.plaf.palette.PaletteTabbedPaneUI.scrollableTabLayoutEnabled()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.getBorderInsets(Component)",1,1,3
"org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.getSegmentPosition(Component)",1,2,3
"org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.isBorderOpaque()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.paintBorder(Component,Graphics,int,int,int,int)",1,1,4
"org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.installDefaults()",1,10,19
"org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.paintBackground(Graphics)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.paintSafely(Graphics)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarBorder.clippedText(String,FontMetrics,int)",5,4,6
"org.jhotdraw.gui.plaf.palette.PaletteToolBarBorder.getBorderInsets(Component)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarBorder.getBorderInsets(Component,Insets)",2,2,3
"org.jhotdraw.gui.plaf.palette.PaletteToolBarBorder.getDragInsets(Component)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarBorder.paintBorder(Component,Graphics,int,int,int,int)",1,10,10
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Actions.Actions(String)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Actions.actionPerformed(ActionEvent)",1,5,5
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Actions.getName()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DockingListener.DockingListener(JToolBar)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DockingListener.mouseClicked(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DockingListener.mouseDragged(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DockingListener.mouseEntered(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DockingListener.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DockingListener.mouseMoved(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DockingListener.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DockingListener.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DragWindow.DragWindow(Window)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DragWindow.getBorderColor()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DragWindow.getInsets()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DragWindow.getOffset()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DragWindow.setBorderColor(Color)",2,1,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DragWindow.setOffset(Point)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.DragWindow.setOrientation(int)",3,5,6
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.FrameListener.windowClosing(WindowEvent)",1,8,8
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.componentAdded(ContainerEvent)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.componentRemoved(ContainerEvent)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.focusGained(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.focusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.mouseClicked(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.mouseDragged(MouseEvent)",3,2,4
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.mouseEntered(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.mouseMoved(MouseEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.mousePressed(MouseEvent)",2,6,7
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.mouseReleased(MouseEvent)",2,3,4
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.Handler.propertyChange(PropertyChangeEvent)",1,8,9
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.PropertyListener.propertyChange(PropertyChangeEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.ToolBarContListener.componentAdded(ContainerEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.ToolBarContListener.componentRemoved(ContainerEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.ToolBarFocusListener.focusGained(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.ToolBarFocusListener.focusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.calculateConstraint()",4,3,5
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.canDock(Component,Point)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createDockingListener()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createDragWindow(JToolBar)",1,3,6
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createFloatingFrame(JToolBar)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createFloatingWindow(JToolBar)",1,4,4
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createFrameListener()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createNonRolloverBorder()",2,1,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createNonRolloverToggleBorder()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createPropertyListener()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createRolloverBorder()",2,1,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createToolBarContListener()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createToolBarFocusListener()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createUI(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dragTo(Point,Point)",1,7,8
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatAt(Point,Point)",1,5,6
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getDockingColor()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getDockingConstraint(Component,Point)",6,5,8
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getFloatingColor()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getHandler()",1,1,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getInputMap(int)",2,2,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getRolloverBorder(AbstractButton)",2,1,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installDefaults()",1,10,14
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installKeyboardActions()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installListeners()",1,6,6
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installNonRolloverBorders(JComponent)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installNormalBorders(JComponent)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installRolloverBorders(JComponent)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installUI(JComponent)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.isBlocked(Component,Object)",3,3,4
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.isFloating()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.isRolloverBorders()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.loadActionMap(PaletteLazyActionMap)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.mapConstraintToOrientation(Object)",1,5,6
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.navigateFocusedComp(int)",6,10,18
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.paintDragWindow(Graphics)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToNonRollover(Component)",2,5,8
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToNormal(Component)",2,3,4
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToRollover(Component)",2,4,6
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setDockingColor(Color)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setFloating(boolean,Point)",1,15,17
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setFloatingColor(Color)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setFloatingLocation(int,int)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setOrientation(int)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setRolloverBorders(boolean)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallDefaults()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallKeyboardActions()",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallListeners()",1,6,6
"org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallUI(JComponent)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteUtilities.beginGraphics(Graphics2D)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteUtilities.drawStringUnderlineCharAt(JComponent,Graphics,String,int,int,int)",1,3,3
"org.jhotdraw.gui.plaf.palette.PaletteUtilities.endGraphics(Graphics2D,Object)",1,2,2
"org.jhotdraw.gui.plaf.palette.PaletteUtilities.getFontMetrics(JComponent,Graphics)",1,1,1
"org.jhotdraw.gui.plaf.palette.PaletteUtilities.getFontMetrics(JComponent,Graphics,Font)",2,2,2
"org.jhotdraw.gui.plaf.palette.PaletteUtilities.isLeftToRight(Component)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.ColorIcon(Color)",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.ColorIcon(Color,String)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.ColorIcon(Color,String,int,int)",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.ColorIcon(int)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.ColorIcon(int,String)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.getColor()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.getIconHeight()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.getIconWidth()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.getName()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorIcon.paintIcon(Component,Graphics,int,int)",1,5,5
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorSliderTextFieldHandler.ColorSliderTextFieldHandler(JTextField,ColorSliderModel,int)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorSliderTextFieldHandler.changedUpdate(DocumentEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorSliderTextFieldHandler.docChanged()",1,4,5
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorSliderTextFieldHandler.insertUpdate(DocumentEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorSliderTextFieldHandler.removeUpdate(DocumentEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.ColorSliderTextFieldHandler.stateChanged(ChangeEvent)",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.PaletteCMYKChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.buildChooser()",1,5,5
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.fieldFocusGained(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.getDisplayName()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.getLargeDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.getSmallDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.setColorToModel(Color)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.updateChooser()",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel.PaletteColorChooserMainPanel()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel.addColorChooserPanel(AbstractColorChooserPanel)",2,1,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel.removeAllColorChooserPanels()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel.setPreviewPanel(JComponent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserPreviewPanel.PaletteColorChooserPreviewPanel()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserPreviewPanel.getToolTipText(MouseEvent)",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserPreviewPanel.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserPreviewPanel.paintComponent(Graphics)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.PaletteColorSliderModel(ColorSpace)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.configureSlider(int,JSlider)",1,3,3
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.PaletteColorSlidersChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.buildChooser()",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.getDisplayName()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.getLargeDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.getSmallDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.installChooserPanel(JColorChooser)",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.uninstallChooserPanel(JColorChooser)",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.updateChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorWheelChooser.PaletteColorWheelChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorWheelChooser.buildChooser()",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorWheelChooser.getDisplayName()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorWheelChooser.getLargeDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorWheelChooser.getSmallDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorWheelChooser.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorWheelChooser.setColorToModel(Color)",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorWheelChooser.updateChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.PaletteHSBChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.buildChooser()",1,3,3
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.fieldFocusGained(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.getDisplayName()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.getLargeDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.getSmallDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.setColorToModel(Color)",1,2,2
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.updateChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.PaletteRGBChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.buildChooser()",1,3,3
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.fieldFocusGained(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.getDisplayName()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.getLargeDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.getSmallDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redFieldFocusLost(FocusEvent)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.setColorToModel(Color)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.updateChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.PaletteSwatchesChooser()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.buildChooser()",1,3,6
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.getDisplayName()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.getLargeDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.getSmallDisplayIcon()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.initComponents()",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.setColorToModel(Color)",1,1,1
"org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.updateChooser()",6,8,10
"org.jhotdraw.io.Base64.Base64()",1,1,1
"org.jhotdraw.io.Base64.InputStream.InputStream(InputStream)",1,1,1
"org.jhotdraw.io.Base64.InputStream.InputStream(InputStream,int)",1,1,2
"org.jhotdraw.io.Base64.InputStream.read()",13,8,20
"org.jhotdraw.io.Base64.InputStream.read(byte[],int,int)",4,2,4
"org.jhotdraw.io.Base64.OutputStream.OutputStream(OutputStream)",1,1,1
"org.jhotdraw.io.Base64.OutputStream.OutputStream(OutputStream,int)",1,1,2
"org.jhotdraw.io.Base64.OutputStream.close()",1,1,1
"org.jhotdraw.io.Base64.OutputStream.flushBase64()",3,3,3
"org.jhotdraw.io.Base64.OutputStream.resumeEncoding()",1,1,1
"org.jhotdraw.io.Base64.OutputStream.suspendEncoding()",1,1,1
"org.jhotdraw.io.Base64.OutputStream.write(byte[],int,int)",2,3,3
"org.jhotdraw.io.Base64.OutputStream.write(int)",5,7,9
"org.jhotdraw.io.Base64.decode(String)",1,5,10
"org.jhotdraw.io.Base64.decode(byte[],int,int)",6,5,6
"org.jhotdraw.io.Base64.decode4to3(byte[],int,byte[],int)",3,4,4
"org.jhotdraw.io.Base64.decodeFromFile(String)",2,5,6
"org.jhotdraw.io.Base64.decodeToFile(String,String)",1,1,3
"org.jhotdraw.io.Base64.decodeToObject(String)",1,3,5
"org.jhotdraw.io.Base64.encode3to4(byte[],byte[],int)",1,1,1
"org.jhotdraw.io.Base64.encode3to4(byte[],int,int,byte[],int)",2,2,8
"org.jhotdraw.io.Base64.encodeBytes(byte[])",1,1,1
"org.jhotdraw.io.Base64.encodeBytes(byte[],int)",1,1,1
"org.jhotdraw.io.Base64.encodeBytes(byte[],int,int)",1,1,1
"org.jhotdraw.io.Base64.encodeBytes(byte[],int,int,int)",2,6,14
"org.jhotdraw.io.Base64.encodeFromFile(String)",1,2,4
"org.jhotdraw.io.Base64.encodeObject(Serializable)",1,1,1
"org.jhotdraw.io.Base64.encodeObject(Serializable,int)",1,3,8
"org.jhotdraw.io.Base64.encodeToFile(byte[],String)",1,1,3
"org.jhotdraw.io.BoundedRangeInputStream.BoundedRangeInputStream(InputStream)",1,1,2
"org.jhotdraw.io.BoundedRangeInputStream.addChangeListener(ChangeListener)",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.fireStateChanged()",1,3,4
"org.jhotdraw.io.BoundedRangeInputStream.getExtent()",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.getMaximum()",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.getMinimum()",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.getValue()",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.getValueIsAdjusting()",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.incrementValue(int)",1,2,3
"org.jhotdraw.io.BoundedRangeInputStream.read()",1,2,2
"org.jhotdraw.io.BoundedRangeInputStream.read(byte[])",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.read(byte[],int,int)",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.removeChangeListener(ChangeListener)",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.reset()",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.setExtent(int)",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.setMaximum(int)",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.setMinimum(int)",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.setRangeProperties(int,int,int,int,boolean)",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.setValue(int)",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.setValueIsAdjusting(boolean)",1,1,1
"org.jhotdraw.io.BoundedRangeInputStream.skip(long)",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer()",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer(Reader)",2,1,2
"org.jhotdraw.io.StreamPosTokenizer.commentChar(int)",1,1,3
"org.jhotdraw.io.StreamPosTokenizer.consumeGreedy(String)",1,2,2
"org.jhotdraw.io.StreamPosTokenizer.eolIsSignificant(boolean)",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.getEndPosition()",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.getStartPosition()",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.lineno()",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.lowerCaseMode(boolean)",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.nextChar()",3,2,3
"org.jhotdraw.io.StreamPosTokenizer.nextToken()",51,64,128
"org.jhotdraw.io.StreamPosTokenizer.ordinaryChar(int)",1,1,3
"org.jhotdraw.io.StreamPosTokenizer.ordinaryChars(int,int)",1,1,4
"org.jhotdraw.io.StreamPosTokenizer.parseExponents()",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.parseHexNumbers()",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.parseNumbers()",1,1,2
"org.jhotdraw.io.StreamPosTokenizer.parsePlusAsNumber()",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.pushBack()",1,1,2
"org.jhotdraw.io.StreamPosTokenizer.pushCharBack(int)",2,2,3
"org.jhotdraw.io.StreamPosTokenizer.quoteChar(int)",1,1,3
"org.jhotdraw.io.StreamPosTokenizer.read()",1,2,3
"org.jhotdraw.io.StreamPosTokenizer.resetSyntax()",1,1,2
"org.jhotdraw.io.StreamPosTokenizer.setReader(Reader)",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.setSlashSlashToken(String)",2,2,3
"org.jhotdraw.io.StreamPosTokenizer.setSlashStarTokens(String,String)",3,2,4
"org.jhotdraw.io.StreamPosTokenizer.setStartPosition(int)",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.slashSlashComments(boolean)",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.slashStarComments(boolean)",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.toString()",2,2,7
"org.jhotdraw.io.StreamPosTokenizer.unread(int)",1,1,1
"org.jhotdraw.io.StreamPosTokenizer.whitespaceChars(int,int)",1,1,4
"org.jhotdraw.io.StreamPosTokenizer.wordChars(int,int)",1,1,4
"org.jhotdraw.net.ClientHttpRequest.ClientHttpRequest(String)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.ClientHttpRequest(URL)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.ClientHttpRequest(URLConnection)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.boundary()",1,1,1
"org.jhotdraw.net.ClientHttpRequest.connect()",1,2,2
"org.jhotdraw.net.ClientHttpRequest.doPost()",1,1,1
"org.jhotdraw.net.ClientHttpRequest.newline()",1,1,1
"org.jhotdraw.net.ClientHttpRequest.pipe(InputStream,OutputStream)",1,2,2
"org.jhotdraw.net.ClientHttpRequest.post()",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(Map<String, Object>)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(Map<String, String>,Map<String, Object>)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(Object[])",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(String,Map<String, Object>)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(String,Object)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(String,Object,String,Object)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(String,Object,String,Object,String,Object)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(String,Object,String,Object,String,Object,String,Object)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(String[],Object[])",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(URL,Map<String, Object>)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(URL,Map<String, String>,Map<String, Object>)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(URL,Object[])",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(URL,String,Object)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(URL,String,Object,String,Object)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(URL,String,Object,String,Object,String,Object)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(URL,String,Object,String,Object,String,Object,String,Object)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.post(URL,String[],Object[])",1,1,1
"org.jhotdraw.net.ClientHttpRequest.postCookies()",1,4,4
"org.jhotdraw.net.ClientHttpRequest.randomString()",1,1,1
"org.jhotdraw.net.ClientHttpRequest.setCookie(String,String)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.setCookies(Map<String, String>)",2,1,2
"org.jhotdraw.net.ClientHttpRequest.setCookies(String)",1,1,2
"org.jhotdraw.net.ClientHttpRequest.setCookies(String[])",2,2,3
"org.jhotdraw.net.ClientHttpRequest.setParameter(String,File)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.setParameter(String,Object)",1,2,2
"org.jhotdraw.net.ClientHttpRequest.setParameter(String,String)",3,1,3
"org.jhotdraw.net.ClientHttpRequest.setParameter(String,String,InputStream)",1,1,2
"org.jhotdraw.net.ClientHttpRequest.setParameters(Map<String, Object>)",1,3,3
"org.jhotdraw.net.ClientHttpRequest.setParameters(Object[])",1,3,3
"org.jhotdraw.net.ClientHttpRequest.write(String)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.write(char)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.writeName(String)",1,1,1
"org.jhotdraw.net.ClientHttpRequest.writeln(String)",1,1,1
"org.jhotdraw.net.URIUtil.URIUtil()",1,1,1
"org.jhotdraw.net.URIUtil.getName(URI)",2,3,3
"org.jhotdraw.samples.color.CIEXYChromaticityDiagram.CIEXYChromaticityDiagram()",1,1,1
"org.jhotdraw.samples.color.CIEXYChromaticityDiagram.initComponents()",1,1,1
"org.jhotdraw.samples.color.CIEXYChromaticityDiagram.main(String[])",1,1,1
"org.jhotdraw.samples.color.CIEXYChromaticityDiagram.paintComponent(Graphics)",1,4,4
"org.jhotdraw.samples.color.JMixer.JMixer()",1,8,8
"org.jhotdraw.samples.color.JMixer.Preset.Preset(String,int)",1,1,1
"org.jhotdraw.samples.color.JMixer.Preset.getColor()",1,1,1
"org.jhotdraw.samples.color.JMixer.Preset.toString()",1,1,1
"org.jhotdraw.samples.color.JMixer.initComponents()",1,1,1
"org.jhotdraw.samples.color.JMixer.main(String[])",1,1,1
"org.jhotdraw.samples.color.JMixer.mixerDisclosurePerformed(ActionEvent)",1,1,1
"org.jhotdraw.samples.color.JMixer.presetPerformed(ActionEvent)",1,2,2
"org.jhotdraw.samples.color.JMixer.ruleChangePerformed(ActionEvent)",1,1,1
"org.jhotdraw.samples.color.JMixer.systemChangePerformed(ActionEvent)",1,3,3
"org.jhotdraw.samples.color.JMixer.updateRules()",1,10,10
"org.jhotdraw.samples.color.WheelsAndSlidersMain.Handler.stateChanged(ChangeEvent)",1,6,6
"org.jhotdraw.samples.color.WheelsAndSlidersMain.WheelsAndSlidersMain()",1,1,1
"org.jhotdraw.samples.color.WheelsAndSlidersMain.createColorWheelChooser(ColorSpace)",1,1,1
"org.jhotdraw.samples.color.WheelsAndSlidersMain.createColorWheelChooser(ColorSpace,int,int,int)",1,1,1
"org.jhotdraw.samples.color.WheelsAndSlidersMain.createColorWheelChooser(ColorSpace,int,int,int,Type)",1,1,1
"org.jhotdraw.samples.color.WheelsAndSlidersMain.createColorWheelChooser(ColorSpace,int,int,int,Type,boolean,boolean)",1,2,2
"org.jhotdraw.samples.color.WheelsAndSlidersMain.createSliderChooser(ColorSpace)",1,1,1
"org.jhotdraw.samples.color.WheelsAndSlidersMain.createSliderChooser(ColorSpace,boolean)",1,3,6
"org.jhotdraw.samples.color.WheelsAndSlidersMain.initComponents()",1,1,1
"org.jhotdraw.samples.color.WheelsAndSlidersMain.main(String[])",1,1,1
"org.jhotdraw.samples.draw.DrawApplet.getAppletInfo()",1,1,1
"org.jhotdraw.samples.draw.DrawApplet.getData()",1,2,2
"org.jhotdraw.samples.draw.DrawApplet.getDrawing()",1,1,1
"org.jhotdraw.samples.draw.DrawApplet.getParameter(String)",1,1,2
"org.jhotdraw.samples.draw.DrawApplet.getParameterInfo()",1,1,1
"org.jhotdraw.samples.draw.DrawApplet.getVersion()",1,1,1
"org.jhotdraw.samples.draw.DrawApplet.init()",1,5,8
"org.jhotdraw.samples.draw.DrawApplet.initComponents()",1,1,1
"org.jhotdraw.samples.draw.DrawApplet.initDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.draw.DrawApplet.main(String[])",1,1,1
"org.jhotdraw.samples.draw.DrawApplet.setData(String)",1,4,4
"org.jhotdraw.samples.draw.DrawApplet.setDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.draw.DrawApplicationModel.DrawApplicationModel()",1,1,1
"org.jhotdraw.samples.draw.DrawApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.draw.DrawApplicationModel.addDefaultCreationButtonsTo(JToolBar,DrawingEditor,Collection<Action>,Collection<Action>)",1,1,1
"org.jhotdraw.samples.draw.DrawApplicationModel.createOpenChooser(Application,View)",1,1,1
"org.jhotdraw.samples.draw.DrawApplicationModel.createSaveChooser(Application,View)",1,1,1
"org.jhotdraw.samples.draw.DrawApplicationModel.createToolBars(Application,View)",1,2,2
"org.jhotdraw.samples.draw.DrawApplicationModel.getSharedEditor()",1,1,2
"org.jhotdraw.samples.draw.DrawApplicationModel.initView(Application,View)",1,2,2
"org.jhotdraw.samples.draw.DrawFigureFactory.DrawFigureFactory()",1,3,3
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.FormListener.actionPerformed(ActionEvent)",1,3,3
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.getAppletInfo()",1,1,1
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.getData()",1,2,2
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.getDrawing()",1,1,1
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.getParameterInfo()",1,1,1
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.init()",1,12,14
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.initComponents()",1,1,1
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.load(ActionEvent)",1,4,4
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.save(ActionEvent)",1,3,3
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.setData(String)",1,4,4
"org.jhotdraw.samples.draw.DrawLiveConnectApplet.setDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.draw.DrawView.DrawView()",1,1,1
"org.jhotdraw.samples.draw.DrawView.canSaveTo(URI)",1,1,1
"org.jhotdraw.samples.draw.DrawView.clear()",1,3,3
"org.jhotdraw.samples.draw.DrawView.createDrawing()",1,1,1
"org.jhotdraw.samples.draw.DrawView.createPageable()",1,1,1
"org.jhotdraw.samples.draw.DrawView.getEditor()",1,1,1
"org.jhotdraw.samples.draw.DrawView.initActions()",1,1,1
"org.jhotdraw.samples.draw.DrawView.initComponents()",1,1,1
"org.jhotdraw.samples.draw.DrawView.read(URI,URIChooser)",3,5,6
"org.jhotdraw.samples.draw.DrawView.setEditor(DrawingEditor)",1,3,3
"org.jhotdraw.samples.draw.DrawView.setHasUnsavedChanges(boolean)",1,1,1
"org.jhotdraw.samples.draw.DrawView.write(URI,URIChooser)",1,1,1
"org.jhotdraw.samples.draw.DrawingPanel.DrawingPanel()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.draw.DrawingPanel.addDefaultCreationButtonsTo(JToolBar,DrawingEditor,Collection<Action>,Collection<Action>)",1,1,1
"org.jhotdraw.samples.draw.DrawingPanel.getDrawing()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanel.getEditor()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanel.getView()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanel.initComponents()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanel.setDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.draw.DrawingPanelBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.draw.Main.main(String[])",1,2,3
"org.jhotdraw.samples.font.FontChooserMain.FontChooserMain()",1,1,1
"org.jhotdraw.samples.font.FontChooserMain.initComponents()",1,1,1
"org.jhotdraw.samples.font.FontChooserMain.main(String[])",1,1,2
"org.jhotdraw.samples.mini.ActivityMonitorSample.ActivityMonitorSample()",1,1,1
"org.jhotdraw.samples.mini.ActivityMonitorSample.FormListener.FormListener()",1,1,1
"org.jhotdraw.samples.mini.ActivityMonitorSample.FormListener.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.samples.mini.ActivityMonitorSample.FormListener.mouseClicked(MouseEvent)",1,5,5
"org.jhotdraw.samples.mini.ActivityMonitorSample.FormListener.mouseEntered(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.ActivityMonitorSample.FormListener.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.ActivityMonitorSample.FormListener.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.ActivityMonitorSample.FormListener.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.ActivityMonitorSample.indicatorClicked(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.ActivityMonitorSample.initComponents()",1,1,1
"org.jhotdraw.samples.mini.ActivityMonitorSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.ActivityMonitorSample.startPerformed(ActionEvent)",3,6,10
"org.jhotdraw.samples.mini.AnimationSample.AnimationSample()",1,1,1
"org.jhotdraw.samples.mini.AnimationSample.initComponents()",1,1,1
"org.jhotdraw.samples.mini.AnimationSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.BezierDemo()",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.Canvas.paintComponent(Graphics)",1,30,35
"org.jhotdraw.samples.mini.BezierDemo.Example.invalidate()",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.MouseHandler.mouseClicked(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.MouseHandler.mouseDragged(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.MouseHandler.mouseEntered(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.MouseHandler.mouseExited(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.MouseHandler.mouseMoved(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.MouseHandler.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.MouseHandler.mouseReleased(MouseEvent)",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.checkboxPerformed(ActionEvent)",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.dumpButtonActionPerformed(ActionEvent)",1,4,4
"org.jhotdraw.samples.mini.BezierDemo.eraseButtonActionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.getError()",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.getSquaredError()",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.getZoomFactor()",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.initComponents()",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.main(String[])",1,1,1
"org.jhotdraw.samples.mini.BezierDemo.zoomChanged(ChangeEvent)",1,1,1
"org.jhotdraw.samples.mini.BorderRectangleFigure.BorderRectangleFigure(Border)",1,1,1
"org.jhotdraw.samples.mini.BorderRectangleFigure.drawFigure(Graphics2D)",1,1,1
"org.jhotdraw.samples.mini.ConnectingFiguresSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.CreationToolSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.DefaultDOMStorableSample.MyObject.MyObject()",1,1,1
"org.jhotdraw.samples.mini.DefaultDOMStorableSample.MyObject.MyObject(String)",1,1,1
"org.jhotdraw.samples.mini.DefaultDOMStorableSample.MyObject.getName()",1,1,1
"org.jhotdraw.samples.mini.DefaultDOMStorableSample.MyObject.read(DOMInput)",1,1,1
"org.jhotdraw.samples.mini.DefaultDOMStorableSample.MyObject.setName(String)",1,1,1
"org.jhotdraw.samples.mini.DefaultDOMStorableSample.MyObject.write(DOMOutput)",1,1,1
"org.jhotdraw.samples.mini.DefaultDOMStorableSample.main(String[])",1,2,2
"org.jhotdraw.samples.mini.DnDMultiEditorSample.createDrawing()",1,1,1
"org.jhotdraw.samples.mini.DnDMultiEditorSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.EditorSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.FileIconsSample.main(String[])",1,3,4
"org.jhotdraw.samples.mini.LabeledLineConnectionFigureSample.LabeledLineConnectionFigureSample()",1,1,1
"org.jhotdraw.samples.mini.LabeledLineConnectionFigureSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.LayouterSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.MovableChildFiguresSample.LabeledEllipseFigure.LabeledEllipseFigure()",1,1,1
"org.jhotdraw.samples.mini.MovableChildFiguresSample.LabeledEllipseFigure.createHandles(int)",2,3,5
"org.jhotdraw.samples.mini.MovableChildFiguresSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.MultiEditorSample.createDrawing()",1,1,1
"org.jhotdraw.samples.mini.MultiEditorSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.SVGDrawingPanelSample.FormListener.FormListener()",1,1,1
"org.jhotdraw.samples.mini.SVGDrawingPanelSample.FormListener.actionPerformed(ActionEvent)",1,3,3
"org.jhotdraw.samples.mini.SVGDrawingPanelSample.SVGDrawingPanelSample()",1,1,1
"org.jhotdraw.samples.mini.SVGDrawingPanelSample.getOpenChooser()",1,5,6
"org.jhotdraw.samples.mini.SVGDrawingPanelSample.getSaveChooser()",1,5,6
"org.jhotdraw.samples.mini.SVGDrawingPanelSample.initComponents()",1,1,1
"org.jhotdraw.samples.mini.SVGDrawingPanelSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.SVGDrawingPanelSample.open(ActionEvent)",1,3,3
"org.jhotdraw.samples.mini.SVGDrawingPanelSample.saveAs(ActionEvent)",1,4,4
"org.jhotdraw.samples.mini.SelectionToolSample.SelectionToolSample()",1,1,1
"org.jhotdraw.samples.mini.SelectionToolSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.SmartConnectionFigureSample.SmartConnectionFigure.SmartConnectionFigure()",1,1,1
"org.jhotdraw.samples.mini.SmartConnectionFigureSample.SmartConnectionFigure.handleConnect(Connector,Connector)",1,1,2
"org.jhotdraw.samples.mini.SmartConnectionFigureSample.SmartConnectionFigure.handleDisconnect(Connector,Connector)",1,1,1
"org.jhotdraw.samples.mini.SmartConnectionFigureSample.main(String[])",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.StraightLineFigure()",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.clone()",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.contains(Double)",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.getBounds()",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.samples.mini.StraightLineFigure.transform(AffineTransform)",1,1,1
"org.jhotdraw.samples.net.Main.main(String[])",1,2,3
"org.jhotdraw.samples.net.NetApplet.getAppletInfo()",1,1,1
"org.jhotdraw.samples.net.NetApplet.getData()",1,2,2
"org.jhotdraw.samples.net.NetApplet.getDrawing()",1,1,1
"org.jhotdraw.samples.net.NetApplet.getParameter(String)",1,1,2
"org.jhotdraw.samples.net.NetApplet.getParameterInfo()",1,1,1
"org.jhotdraw.samples.net.NetApplet.getVersion()",1,1,1
"org.jhotdraw.samples.net.NetApplet.init()",1,5,8
"org.jhotdraw.samples.net.NetApplet.initComponents()",1,1,1
"org.jhotdraw.samples.net.NetApplet.initDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.net.NetApplet.main(String[])",1,1,1
"org.jhotdraw.samples.net.NetApplet.setData(String)",1,4,4
"org.jhotdraw.samples.net.NetApplet.setDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.net.NetApplicationModel.NetApplicationModel()",1,1,1
"org.jhotdraw.samples.net.NetApplicationModel.ToolButtonListener.ToolButtonListener(Tool,DrawingEditor)",1,1,1
"org.jhotdraw.samples.net.NetApplicationModel.ToolButtonListener.itemStateChanged(ItemEvent)",1,2,2
"org.jhotdraw.samples.net.NetApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.net.NetApplicationModel.createActionMap(Application,View)",1,2,2
"org.jhotdraw.samples.net.NetApplicationModel.createMenuBuilder()",1,2,2
"org.jhotdraw.samples.net.NetApplicationModel.createOpenChooser(Application,View)",1,1,1
"org.jhotdraw.samples.net.NetApplicationModel.createSaveChooser(Application,View)",1,1,1
"org.jhotdraw.samples.net.NetApplicationModel.createToolBars(Application,View)",1,2,2
"org.jhotdraw.samples.net.NetApplicationModel.getSharedEditor()",1,1,2
"org.jhotdraw.samples.net.NetApplicationModel.initView(Application,View)",1,2,2
"org.jhotdraw.samples.net.NetFactory.NetFactory()",1,3,3
"org.jhotdraw.samples.net.NetPanel.NetPanel()",1,1,1
"org.jhotdraw.samples.net.NetPanel.addCreationButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.net.NetPanel.getDrawing()",1,1,1
"org.jhotdraw.samples.net.NetPanel.getEditor()",1,1,1
"org.jhotdraw.samples.net.NetPanel.getView()",1,1,1
"org.jhotdraw.samples.net.NetPanel.initComponents()",1,1,1
"org.jhotdraw.samples.net.NetPanel.setDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.net.NetView.NetView()",1,2,2
"org.jhotdraw.samples.net.NetView.canSaveTo(URI)",1,1,1
"org.jhotdraw.samples.net.NetView.clear()",1,3,3
"org.jhotdraw.samples.net.NetView.createDrawing()",1,1,1
"org.jhotdraw.samples.net.NetView.createPageable()",1,1,1
"org.jhotdraw.samples.net.NetView.getEditor()",1,1,1
"org.jhotdraw.samples.net.NetView.getScaleFactor()",1,1,1
"org.jhotdraw.samples.net.NetView.initActions()",1,1,1
"org.jhotdraw.samples.net.NetView.initComponents()",1,1,1
"org.jhotdraw.samples.net.NetView.isGridVisible()",1,1,1
"org.jhotdraw.samples.net.NetView.read(URI,URIChooser)",1,3,3
"org.jhotdraw.samples.net.NetView.setEditor(DrawingEditor)",1,3,3
"org.jhotdraw.samples.net.NetView.setGridVisible(boolean)",1,1,1
"org.jhotdraw.samples.net.NetView.setHasUnsavedChanges(boolean)",1,1,1
"org.jhotdraw.samples.net.NetView.setScaleFactor(double)",1,1,1
"org.jhotdraw.samples.net.NetView.write(URI,URIChooser)",1,1,1
"org.jhotdraw.samples.net.figures.NodeFigure.NodeFigure()",1,1,1
"org.jhotdraw.samples.net.figures.NodeFigure.clone()",1,1,1
"org.jhotdraw.samples.net.figures.NodeFigure.createConnectors()",1,1,1
"org.jhotdraw.samples.net.figures.NodeFigure.createHandles(int)",2,3,4
"org.jhotdraw.samples.net.figures.NodeFigure.findCompatibleConnector(Connector,boolean)",4,3,4
"org.jhotdraw.samples.net.figures.NodeFigure.findConnector(Double,ConnectionFigure)",1,2,3
"org.jhotdraw.samples.net.figures.NodeFigure.getConnectors(ConnectionFigure)",1,1,1
"org.jhotdraw.samples.net.figures.NodeFigure.getFigureDrawingArea()",1,1,1
"org.jhotdraw.samples.net.figures.NodeFigure.getLayer()",1,1,1
"org.jhotdraw.samples.net.figures.NodeFigure.readDecorator(DOMInput)",1,1,1
"org.jhotdraw.samples.net.figures.NodeFigure.set(AttributeKey<T>,T)",1,2,2
"org.jhotdraw.samples.net.figures.NodeFigure.writeDecorator(DOMOutput)",1,1,1
"org.jhotdraw.samples.odg.Main.Main()",1,1,1
"org.jhotdraw.samples.odg.Main.main(String[])",1,1,1
"org.jhotdraw.samples.odg.ODGApplicationModel.ODGApplicationModel()",1,1,1
"org.jhotdraw.samples.odg.ODGApplicationModel.addAttributesButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.ODGApplicationModel.addColorButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.ODGApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.ODGApplicationModel.addStrokeButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.ODGApplicationModel.createActionMap(Application,View)",1,2,2
"org.jhotdraw.samples.odg.ODGApplicationModel.createDrawingActions(DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.ODGApplicationModel.createExportChooser(Application,View)",2,2,3
"org.jhotdraw.samples.odg.ODGApplicationModel.createOpenChooser(Application,View)",1,4,6
"org.jhotdraw.samples.odg.ODGApplicationModel.createSaveChooser(Application,View)",2,2,3
"org.jhotdraw.samples.odg.ODGApplicationModel.createSelectionActions(DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.ODGApplicationModel.createToolBars(Application,View)",1,2,2
"org.jhotdraw.samples.odg.ODGApplicationModel.getSharedEditor()",1,1,2
"org.jhotdraw.samples.odg.ODGApplicationModel.initView(Application,View)",1,2,2
"org.jhotdraw.samples.odg.ODGAttributeKeys.ODGAttributeKeys()",1,1,1
"org.jhotdraw.samples.odg.ODGAttributeKeys.getFillPaint(Figure)",2,4,4
"org.jhotdraw.samples.odg.ODGAttributeKeys.getStroke(Figure)",1,1,2
"org.jhotdraw.samples.odg.ODGAttributeKeys.getStrokePaint(Figure)",2,4,4
"org.jhotdraw.samples.odg.ODGAttributeKeys.setDefaults(Figure)",1,1,1
"org.jhotdraw.samples.odg.ODGConstants.ODGConstants()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawing.ODGDrawing()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawing.getDescription()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawing.getTitle()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawing.setDescription(String)",1,1,1
"org.jhotdraw.samples.odg.ODGDrawing.setTitle(String)",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanel.ODGDrawingPanel()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanel.createSelectionActions(DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanel.getDrawing()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanel.getEditor()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanel.getView()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanel.initComponents()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanel.setDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.odg.ODGDrawingPanelBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanel.ODGPropertiesPanel()",1,2,2
"org.jhotdraw.samples.odg.ODGPropertiesPanel.initComponents()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanel.setEditor(DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanel.setView(DrawingView)",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.odg.ODGPropertiesPanelBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.odg.ODGView.ODGView()",1,1,1
"org.jhotdraw.samples.odg.ODGView.canSaveTo(URI)",1,1,1
"org.jhotdraw.samples.odg.ODGView.clear()",1,3,3
"org.jhotdraw.samples.odg.ODGView.createDrawing()",1,1,1
"org.jhotdraw.samples.odg.ODGView.createPageable()",1,1,1
"org.jhotdraw.samples.odg.ODGView.getDrawing()",1,1,1
"org.jhotdraw.samples.odg.ODGView.getEditor()",1,1,1
"org.jhotdraw.samples.odg.ODGView.getScaleFactor()",1,1,1
"org.jhotdraw.samples.odg.ODGView.initActions()",1,1,1
"org.jhotdraw.samples.odg.ODGView.initComponents()",1,1,1
"org.jhotdraw.samples.odg.ODGView.isGridVisible()",1,1,1
"org.jhotdraw.samples.odg.ODGView.isPropertiesPanelVisible()",1,1,1
"org.jhotdraw.samples.odg.ODGView.read(URI,URIChooser)",1,4,4
"org.jhotdraw.samples.odg.ODGView.setEditor(DrawingEditor)",1,3,3
"org.jhotdraw.samples.odg.ODGView.setEnabled(boolean)",1,1,1
"org.jhotdraw.samples.odg.ODGView.setGridVisible(boolean)",1,1,1
"org.jhotdraw.samples.odg.ODGView.setHasUnsavedChanges(boolean)",1,1,1
"org.jhotdraw.samples.odg.ODGView.setPropertiesPanelVisible(boolean)",1,1,1
"org.jhotdraw.samples.odg.ODGView.setScaleFactor(double)",1,1,1
"org.jhotdraw.samples.odg.ODGView.write(URI,URIChooser)",1,1,1
"org.jhotdraw.samples.odg.PathTool.PathTool(SVGPathFigure,SVGBezierFigure)",1,1,1
"org.jhotdraw.samples.odg.PathTool.PathTool(SVGPathFigure,SVGBezierFigure,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.odg.PathTool.createPath()",1,3,3
"org.jhotdraw.samples.odg.PathTool.finishCreation(BezierFigure,DrawingView)",1,2,2
"org.jhotdraw.samples.odg.action.CombineAction.CombineAction(DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.action.CombineAction.canGroup()",4,2,4
"org.jhotdraw.samples.odg.action.CombineAction.groupFigures(DrawingView,CompositeFigure,Collection<Figure>)",1,4,4
"org.jhotdraw.samples.odg.action.CombineAction.ungroupFigures(DrawingView,CompositeFigure)",1,3,3
"org.jhotdraw.samples.odg.action.SplitAction.SplitAction(DrawingEditor)",1,1,1
"org.jhotdraw.samples.odg.action.SplitAction.canUngroup()",2,2,2
"org.jhotdraw.samples.odg.action.SplitAction.groupFigures(DrawingView,CompositeFigure,Collection<Figure>)",1,4,4
"org.jhotdraw.samples.odg.action.SplitAction.ungroupFigures(DrawingView,CompositeFigure)",1,3,3
"org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.TogglePropertiesPanelAction(Application,View)",1,1,1
"org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.getActiveView()",1,1,1
"org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.updateView()",1,2,2
"org.jhotdraw.samples.odg.figures.ODGAttributedFigure.ODGAttributedFigure()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGAttributedFigure.draw(Graphics2D)",1,5,5
"org.jhotdraw.samples.odg.figures.ODGAttributedFigure.drawFigure(Graphics2D)",1,7,7
"org.jhotdraw.samples.odg.figures.ODGAttributedFigure.getActions(Double)",1,2,2
"org.jhotdraw.samples.odg.figures.ODGAttributedFigure.set(AttributeKey<T>,T)",1,2,2
"org.jhotdraw.samples.odg.figures.ODGBezierFigure.ODGBezierFigure()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGBezierFigure.ODGBezierFigure(boolean)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGBezierFigure.createHandles(ODGPathFigure,int)",2,3,5
"org.jhotdraw.samples.odg.figures.ODGBezierFigure.flattenTransform()",1,2,2
"org.jhotdraw.samples.odg.figures.ODGBezierFigure.getDrawingArea()",1,3,3
"org.jhotdraw.samples.odg.figures.ODGBezierFigure.handleMouseClick(Double,MouseEvent,DrawingView)",3,3,3
"org.jhotdraw.samples.odg.figures.ODGBezierFigure.invalidate()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGBezierFigure.transform(AffineTransform)",1,4,4
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ODGEllipseFigure()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ODGEllipseFigure(double,double,double,double)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.clone()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.contains(Double)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.createHandles(int)",2,2,4
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getBounds()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getDrawingArea()",1,3,3
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getHeight()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getTransformedShape()",1,3,3
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getWidth()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getX()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getY()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.invalidate()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.isEmpty()",1,1,2
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGEllipseFigure.transform(AffineTransform)",1,8,8
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.ODGGroupFigure()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.clone()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.createHandles(int)",1,2,2
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.draw(Graphics2D)",1,5,5
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.get(AttributeKey<T>)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.getAttributes()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.getBounds()",1,7,7
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.isEmpty()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.set(AttributeKey<T>,T)",1,2,2
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.setAttributes(Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.odg.figures.ODGGroupFigure.toString()",1,4,4
"org.jhotdraw.samples.odg.figures.ODGPathFigure.ODGPathFigure()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.add(int,Figure)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.clone()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.contains(Double)",7,5,9
"org.jhotdraw.samples.odg.figures.ODGPathFigure.createHandles(int)",2,3,5
"org.jhotdraw.samples.odg.figures.ODGPathFigure.draw(Graphics2D)",1,5,5
"org.jhotdraw.samples.odg.figures.ODGPathFigure.drawFigure(Graphics2D)",1,7,7
"org.jhotdraw.samples.odg.figures.ODGPathFigure.drawFill(Graphics2D)",1,2,2
"org.jhotdraw.samples.odg.figures.ODGPathFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.flattenTransform()",1,3,3
"org.jhotdraw.samples.odg.figures.ODGPathFigure.getActions(Double)",1,4,4
"org.jhotdraw.samples.odg.figures.ODGPathFigure.getChild(int)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.getDrawingArea()",1,5,6
"org.jhotdraw.samples.odg.figures.ODGPathFigure.getPath()",1,3,4
"org.jhotdraw.samples.odg.figures.ODGPathFigure.getTransformRestoreData()",1,2,2
"org.jhotdraw.samples.odg.figures.ODGPathFigure.handleMouseClick(Double,MouseEvent,DrawingView)",4,5,5
"org.jhotdraw.samples.odg.figures.ODGPathFigure.invalidate()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.isEmpty()",3,2,3
"org.jhotdraw.samples.odg.figures.ODGPathFigure.restoreTransformTo(Object)",1,2,2
"org.jhotdraw.samples.odg.figures.ODGPathFigure.set(AttributeKey<T>,T)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.setAttributeOnChildren(AttributeKey<T>,T)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathFigure.setBounds(Double,Double)",1,3,3
"org.jhotdraw.samples.odg.figures.ODGPathFigure.transform(AffineTransform)",1,9,9
"org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.ODGPathOutlineHandle(ODGPathFigure)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.basicGetBounds()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.contains(Point)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.draw(Graphics2D)",1,2,2
"org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.getOwner()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.ODGRectFigure()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.ODGRectFigure(double,double,double,double)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.ODGRectFigure(double,double,double,double,double,double)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.clone()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.contains(Double)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.createHandles(int)",2,2,4
"org.jhotdraw.samples.odg.figures.ODGRectFigure.drawFill(Graphics2D)",1,3,3
"org.jhotdraw.samples.odg.figures.ODGRectFigure.drawStroke(Graphics2D)",1,3,3
"org.jhotdraw.samples.odg.figures.ODGRectFigure.findCompatibleConnector(Connector,boolean)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.findConnector(Double,ConnectionFigure)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getArc()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcHeight()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcWidth()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getBounds()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getDrawingArea()",1,4,5
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getHeight()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getHitShape()",1,2,2
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getTransformedShape()",1,5,5
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getWidth()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getX()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.getY()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.invalidate()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.invalidateTransformedShape()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.isEmpty()",1,1,2
"org.jhotdraw.samples.odg.figures.ODGRectFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.setArc(Dimension2DDouble)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.setArc(double,double)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectFigure.transform(AffineTransform)",1,8,8
"org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.ODGRectRadiusHandle(Figure)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.basicGetBounds()",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.draw(Graphics2D)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.getToolTipText(Point)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.locate()",1,2,2
"org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.trackStep(Point,Point,int)",1,4,4
"org.jhotdraw.samples.odg.geom.EnhancedPath.SegType.SegType(int)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.SegType.getLen()",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.Segment.Segment()",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.Segment.Segment(SegType,Object...)",1,1,3
"org.jhotdraw.samples.odg.geom.EnhancedPath.Segment.Segment(Segment)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.Segment.clone()",1,2,2
"org.jhotdraw.samples.odg.geom.EnhancedPath.Segment.equals(Object)",2,4,4
"org.jhotdraw.samples.odg.geom.EnhancedPath.Segment.hashCode()",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.Segment.setTo(Segment)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.arcTo(Object,Object,Object,Object,Object,Object,Object,Object)",2,1,2
"org.jhotdraw.samples.odg.geom.EnhancedPath.clockwiseArcTo(Object,Object,Object,Object,Object,Object,Object,Object)",2,1,2
"org.jhotdraw.samples.odg.geom.EnhancedPath.close()",2,2,3
"org.jhotdraw.samples.odg.geom.EnhancedPath.contains(Point2D)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.contains(Rectangle2D)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.contains(double,double)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.contains(double,double,double,double)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.curveTo(Object,Object,Object,Object,Object,Object)",2,2,3
"org.jhotdraw.samples.odg.geom.EnhancedPath.ellipseTo(Object,Object,Object,Object,Object,Object)",2,2,3
"org.jhotdraw.samples.odg.geom.EnhancedPath.getBounds()",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.getBounds2D()",1,1,2
"org.jhotdraw.samples.odg.geom.EnhancedPath.getPathIterator(AffineTransform)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.getPathIterator(AffineTransform,double)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.getWindingRule()",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.intersects(Rectangle2D)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.intersects(double,double,double,double)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.invalidatePath()",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.lineTo(Object,Object)",2,2,3
"org.jhotdraw.samples.odg.geom.EnhancedPath.moveTo(Object,Object)",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.quadTo(Object,Object,Object,Object)",2,2,3
"org.jhotdraw.samples.odg.geom.EnhancedPath.quadrantXTo(Object,Object)",2,2,3
"org.jhotdraw.samples.odg.geom.EnhancedPath.quadrantYTo(Object,Object)",2,2,3
"org.jhotdraw.samples.odg.geom.EnhancedPath.setWindingRule(int)",1,2,2
"org.jhotdraw.samples.odg.geom.EnhancedPath.toGeneralPath()",1,1,1
"org.jhotdraw.samples.odg.geom.EnhancedPath.validatePath()",1,2,2
"org.jhotdraw.samples.odg.io.DefaultODGFigureFactory.DefaultODGFigureFactory()",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.ODGInputFormat()",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.createEnhancedGeometryEllipseFigure(Double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.createEnhancedGeometryRectangleFigure(Double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.createGroupFigure()",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.createLineFigure(Double,Double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.createPathFigure(BezierPath[],Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.odg.io.ODGInputFormat.createPolygonFigure(Double[],Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.odg.io.ODGInputFormat.createPolylineFigure(Double[],Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.odg.io.ODGInputFormat.getFileFilter()",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.getInputFormatAccessory()",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.isDataFlavorSupported(DataFlavor)",1,2,2
"org.jhotdraw.samples.odg.io.ODGInputFormat.nextEnhancedCoordinate(StreamPosTokenizer,String)",5,6,13
"org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing,boolean)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.read(InputStream,Drawing,boolean)",1,4,7
"org.jhotdraw.samples.odg.io.ODGInputFormat.read(Transferable,Drawing,boolean)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.read(URI,Drawing)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.read(URI,Drawing,boolean)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readAllBytes(InputStream)",1,2,2
"org.jhotdraw.samples.odg.io.ODGInputFormat.readCaptionElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readCircleElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readCommonDrawingShapeAttributes(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readCustomShapeElement(IXMLElement)",1,2,2
"org.jhotdraw.samples.odg.io.ODGInputFormat.readDrawingElement(IXMLElement)",1,5,5
"org.jhotdraw.samples.odg.io.ODGInputFormat.readElement(IXMLElement)",3,22,22
"org.jhotdraw.samples.odg.io.ODGInputFormat.readEllipseElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readEnhancedGeometryElement(IXMLElement,Map<AttributeKey<?>, Object>,Double)",1,5,5
"org.jhotdraw.samples.odg.io.ODGInputFormat.readFiguresFromDocumentContent(InputStream,Drawing,boolean)",4,15,17
"org.jhotdraw.samples.odg.io.ODGInputFormat.readFrameElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readGElement(IXMLElement)",1,3,3
"org.jhotdraw.samples.odg.io.ODGInputFormat.readLineElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readMeasureElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readPageElement(IXMLElement)",1,3,3
"org.jhotdraw.samples.odg.io.ODGInputFormat.readPathElement(IXMLElement)",1,2,2
"org.jhotdraw.samples.odg.io.ODGInputFormat.readPolygonElement(IXMLElement)",1,2,2
"org.jhotdraw.samples.odg.io.ODGInputFormat.readPolylineElement(IXMLElement)",1,2,2
"org.jhotdraw.samples.odg.io.ODGInputFormat.readRectElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readRegularPolygonElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.readViewBoxTransform(IXMLElement)",1,4,4
"org.jhotdraw.samples.odg.io.ODGInputFormat.toEnhancedPath(String)",3,6,23
"org.jhotdraw.samples.odg.io.ODGInputFormat.toLength(String,double)",2,9,10
"org.jhotdraw.samples.odg.io.ODGInputFormat.toNumber(String)",1,1,1
"org.jhotdraw.samples.odg.io.ODGInputFormat.toPath(String)",63,70,89
"org.jhotdraw.samples.odg.io.ODGInputFormat.toTransform(String)",19,14,23
"org.jhotdraw.samples.odg.io.ODGInputFormat.toUnitFactor(String)",1,6,7
"org.jhotdraw.samples.odg.io.ODGInputFormat.toWSOrCommaSeparatedArray(String)",2,2,3
"org.jhotdraw.samples.odg.io.ODGStylesReader.ODGStylesReader()",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.getAttributes(String,String)",2,5,5
"org.jhotdraw.samples.odg.io.ODGStylesReader.read(File)",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.read(IXMLElement)",1,8,8
"org.jhotdraw.samples.odg.io.ODGStylesReader.read(InputStream)",1,3,3
"org.jhotdraw.samples.odg.io.ODGStylesReader.readAutomaticStylesElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.readDefaultStyleElement(IXMLElement,HashMap<String, Style>)",1,18,18
"org.jhotdraw.samples.odg.io.ODGStylesReader.readDocumentContentElement(IXMLElement)",1,13,13
"org.jhotdraw.samples.odg.io.ODGStylesReader.readDocumentStylesElement(IXMLElement)",1,14,14
"org.jhotdraw.samples.odg.io.ODGStylesReader.readDrawingPagePropertiesElement(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.odg.io.ODGStylesReader.readGraphicPropertiesElement(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,7,7
"org.jhotdraw.samples.odg.io.ODGStylesReader.readLayerSetElement(IXMLElement,HashMap<String, Style>)",1,2,2
"org.jhotdraw.samples.odg.io.ODGStylesReader.readListStyleElement(IXMLElement,HashMap<String, Style>)",1,2,2
"org.jhotdraw.samples.odg.io.ODGStylesReader.readMarkerElement(IXMLElement,HashMap<String, Style>)",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.readMasterPageElement(IXMLElement,HashMap<String, Style>)",1,2,2
"org.jhotdraw.samples.odg.io.ODGStylesReader.readMasterStylesElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.readPageLayoutElement(IXMLElement,HashMap<String, Style>)",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.readParagraphPropertiesElement(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.readStyleElement(IXMLElement,HashMap<String, Style>)",1,18,18
"org.jhotdraw.samples.odg.io.ODGStylesReader.readStylesChildren(IXMLElement,HashMap<String, Style>)",1,24,24
"org.jhotdraw.samples.odg.io.ODGStylesReader.readStylesElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.readTextPropertiesElement(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.reset()",1,1,1
"org.jhotdraw.samples.odg.io.ODGStylesReader.toColor(String)",3,3,4
"org.jhotdraw.samples.odg.io.ODGStylesReader.toLength(String)",2,8,9
"org.jhotdraw.samples.pert.Main.main(String[])",1,2,3
"org.jhotdraw.samples.pert.PertApplet.getAppletInfo()",1,1,1
"org.jhotdraw.samples.pert.PertApplet.getData()",1,2,2
"org.jhotdraw.samples.pert.PertApplet.getDrawing()",1,1,1
"org.jhotdraw.samples.pert.PertApplet.getParameter(String)",1,1,2
"org.jhotdraw.samples.pert.PertApplet.getParameterInfo()",1,1,1
"org.jhotdraw.samples.pert.PertApplet.getVersion()",1,1,1
"org.jhotdraw.samples.pert.PertApplet.init()",1,5,8
"org.jhotdraw.samples.pert.PertApplet.initComponents()",1,1,1
"org.jhotdraw.samples.pert.PertApplet.initDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.pert.PertApplet.main(String[])",1,1,1
"org.jhotdraw.samples.pert.PertApplet.setData(String)",1,4,4
"org.jhotdraw.samples.pert.PertApplet.setDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.pert.PertApplicationModel.PertApplicationModel()",1,1,1
"org.jhotdraw.samples.pert.PertApplicationModel.ToolButtonListener.ToolButtonListener(Tool,DrawingEditor)",1,1,1
"org.jhotdraw.samples.pert.PertApplicationModel.ToolButtonListener.itemStateChanged(ItemEvent)",1,2,2
"org.jhotdraw.samples.pert.PertApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.pert.PertApplicationModel.createActionMap(Application,View)",1,2,2
"org.jhotdraw.samples.pert.PertApplicationModel.createMenuBuilder()",1,2,2
"org.jhotdraw.samples.pert.PertApplicationModel.createOpenChooser(Application,View)",1,1,1
"org.jhotdraw.samples.pert.PertApplicationModel.createSaveChooser(Application,View)",1,1,1
"org.jhotdraw.samples.pert.PertApplicationModel.createToolBars(Application,View)",1,2,2
"org.jhotdraw.samples.pert.PertApplicationModel.getSharedEditor()",1,1,2
"org.jhotdraw.samples.pert.PertApplicationModel.initView(Application,View)",1,2,2
"org.jhotdraw.samples.pert.PertFactory.PertFactory()",1,2,2
"org.jhotdraw.samples.pert.PertPanel.PertPanel()",1,1,1
"org.jhotdraw.samples.pert.PertPanel.addCreationButtonsTo(JToolBar,DrawingEditor)",1,1,1
"org.jhotdraw.samples.pert.PertPanel.getDrawing()",1,1,1
"org.jhotdraw.samples.pert.PertPanel.getEditor()",1,1,1
"org.jhotdraw.samples.pert.PertPanel.getView()",1,1,1
"org.jhotdraw.samples.pert.PertPanel.initComponents()",1,1,1
"org.jhotdraw.samples.pert.PertPanel.setDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.pert.PertView.PertView()",1,1,1
"org.jhotdraw.samples.pert.PertView.canSaveTo(URI)",1,1,1
"org.jhotdraw.samples.pert.PertView.clear()",1,3,3
"org.jhotdraw.samples.pert.PertView.createDrawing()",1,1,1
"org.jhotdraw.samples.pert.PertView.createPageable()",1,1,1
"org.jhotdraw.samples.pert.PertView.getEditor()",1,1,1
"org.jhotdraw.samples.pert.PertView.getScaleFactor()",1,1,1
"org.jhotdraw.samples.pert.PertView.initActions()",1,1,1
"org.jhotdraw.samples.pert.PertView.initComponents()",1,1,1
"org.jhotdraw.samples.pert.PertView.isGridVisible()",1,1,1
"org.jhotdraw.samples.pert.PertView.read(URI,URIChooser)",1,3,3
"org.jhotdraw.samples.pert.PertView.setEditor(DrawingEditor)",1,3,3
"org.jhotdraw.samples.pert.PertView.setGridVisible(boolean)",1,1,1
"org.jhotdraw.samples.pert.PertView.setHasUnsavedChanges(boolean)",1,1,1
"org.jhotdraw.samples.pert.PertView.setScaleFactor(double)",1,1,1
"org.jhotdraw.samples.pert.PertView.write(URI,URIChooser)",1,1,1
"org.jhotdraw.samples.pert.figures.DependencyFigure.DependencyFigure()",1,1,1
"org.jhotdraw.samples.pert.figures.DependencyFigure.canConnect(Connector)",1,1,1
"org.jhotdraw.samples.pert.figures.DependencyFigure.canConnect(Connector,Connector)",3,3,4
"org.jhotdraw.samples.pert.figures.DependencyFigure.clone()",1,1,1
"org.jhotdraw.samples.pert.figures.DependencyFigure.getLayer()",1,1,1
"org.jhotdraw.samples.pert.figures.DependencyFigure.handleConnect(Connector,Connector)",1,1,1
"org.jhotdraw.samples.pert.figures.DependencyFigure.handleDisconnect(Connector,Connector)",1,1,1
"org.jhotdraw.samples.pert.figures.DependencyFigure.removeNotify(Drawing)",1,3,3
"org.jhotdraw.samples.pert.figures.SeparatorLineFigure.SeparatorLineFigure()",1,1,1
"org.jhotdraw.samples.pert.figures.SeparatorLineFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.samples.pert.figures.SeparatorLineFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.samples.pert.figures.SeparatorLineFigure.getPreferredSize()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.DurationAdapter.DurationAdapter(TaskFigure)",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.DurationAdapter.attributeChanged(FigureEvent)",1,2,2
"org.jhotdraw.samples.pert.figures.TaskFigure.NameAdapter.NameAdapter(TaskFigure)",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.NameAdapter.attributeChanged(FigureEvent)",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.TaskFigure()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.addDependency(DependencyFigure)",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.clone()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.createHandles(int)",2,2,3
"org.jhotdraw.samples.pert.figures.TaskFigure.getDependencies()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.getDuration()",1,1,2
"org.jhotdraw.samples.pert.figures.TaskFigure.getDurationFigure()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.getLayer()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.getName()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.getNameFigure()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.getPredecessors()",1,3,3
"org.jhotdraw.samples.pert.figures.TaskFigure.getStartTime()",1,1,2
"org.jhotdraw.samples.pert.figures.TaskFigure.getStartTimeFigure()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.getSuccessors()",1,3,3
"org.jhotdraw.samples.pert.figures.TaskFigure.isDependentOf(TaskFigure)",4,2,4
"org.jhotdraw.samples.pert.figures.TaskFigure.read(DOMInput)",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.removeDependency(DependencyFigure)",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.setDuration(int)",1,3,3
"org.jhotdraw.samples.pert.figures.TaskFigure.setName(String)",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.toString()",1,1,1
"org.jhotdraw.samples.pert.figures.TaskFigure.updateStartTime()",1,5,5
"org.jhotdraw.samples.pert.figures.TaskFigure.write(DOMOutput)",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.LinearGradient()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.LinearGradient(double,double,double,double,double[],Color[],double[],boolean,AffineTransform)",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.clone()",1,2,2
"org.jhotdraw.samples.svg.LinearGradient.equals(LinearGradient)",1,9,9
"org.jhotdraw.samples.svg.LinearGradient.equals(Object)",2,2,2
"org.jhotdraw.samples.svg.LinearGradient.getPaint(Figure,double)",3,4,6
"org.jhotdraw.samples.svg.LinearGradient.getStopColors()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.getStopOffsets()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.getStopOpacities()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.getTransform()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.getX1()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.getX2()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.getY1()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.getY2()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.hashCode()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds()",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.makeRelativeToFigureBounds(Figure)",1,2,2
"org.jhotdraw.samples.svg.LinearGradient.setGradientVector(double,double,double,double)",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.setRelativeToFigureBounds(boolean)",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.setStops(double[],Color[],double[])",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.setTransform(AffineTransform)",1,1,1
"org.jhotdraw.samples.svg.LinearGradient.toString()",1,3,3
"org.jhotdraw.samples.svg.LinearGradient.transform(AffineTransform)",1,2,2
"org.jhotdraw.samples.svg.Main.main(String[])",1,2,3
"org.jhotdraw.samples.svg.PathTool.PathTool(SVGPathFigure,SVGBezierFigure)",1,1,1
"org.jhotdraw.samples.svg.PathTool.PathTool(SVGPathFigure,SVGBezierFigure,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.PathTool.createPath()",1,3,3
"org.jhotdraw.samples.svg.PathTool.finishCreation(BezierFigure,DrawingView)",1,3,3
"org.jhotdraw.samples.svg.RadialGradient.RadialGradient()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.RadialGradient(double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.clone()",1,2,2
"org.jhotdraw.samples.svg.RadialGradient.equals(Object)",2,2,2
"org.jhotdraw.samples.svg.RadialGradient.equals(RadialGradient)",1,10,10
"org.jhotdraw.samples.svg.RadialGradient.getCX()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.getCY()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.getFX()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.getFY()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.getPaint(Figure,double)",3,5,8
"org.jhotdraw.samples.svg.RadialGradient.getR()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.getStopColors()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.getStopOffsets()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.getStopOpacities()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.getTransform()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.hashCode()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds()",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.makeRelativeToFigureBounds(Figure)",1,2,2
"org.jhotdraw.samples.svg.RadialGradient.setGradientCircle(double,double,double)",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.setRelativeToFigureBounds(boolean)",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.setStops(double[],Color[],double[])",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.setTransform(AffineTransform)",1,1,1
"org.jhotdraw.samples.svg.RadialGradient.transform(AffineTransform)",1,2,2
"org.jhotdraw.samples.svg.SVGApplet.SVGApplet()",1,1,1
"org.jhotdraw.samples.svg.SVGApplet.close()",1,3,4
"org.jhotdraw.samples.svg.SVGApplet.createDrawing()",1,1,1
"org.jhotdraw.samples.svg.SVGApplet.createDrawingComponent()",1,1,1
"org.jhotdraw.samples.svg.SVGApplet.getAppletInfo()",1,1,1
"org.jhotdraw.samples.svg.SVGApplet.getDrawing()",1,1,1
"org.jhotdraw.samples.svg.SVGApplet.getDrawingComponent()",1,1,1
"org.jhotdraw.samples.svg.SVGApplet.getParameter(String)",1,1,2
"org.jhotdraw.samples.svg.SVGApplet.getParameter(String,String)",1,1,3
"org.jhotdraw.samples.svg.SVGApplet.getParameterInfo()",1,1,1
"org.jhotdraw.samples.svg.SVGApplet.getVersion()",1,3,6
"org.jhotdraw.samples.svg.SVGApplet.htmlencode(String)",3,4,7
"org.jhotdraw.samples.svg.SVGApplet.init()",1,5,7
"org.jhotdraw.samples.svg.SVGApplet.initComponents()",1,1,1
"org.jhotdraw.samples.svg.SVGApplet.loadDrawing(ProgressIndicator)",4,6,8
"org.jhotdraw.samples.svg.SVGApplet.main(String[])",1,1,1
"org.jhotdraw.samples.svg.SVGApplet.setDrawing(Drawing)",1,1,1
"org.jhotdraw.samples.svg.SVGApplicationModel.SVGApplicationModel()",1,1,1
"org.jhotdraw.samples.svg.SVGApplicationModel.createActionMap(Application,View)",1,4,4
"org.jhotdraw.samples.svg.SVGApplicationModel.createExportChooser(Application,View)",1,3,4
"org.jhotdraw.samples.svg.SVGApplicationModel.createMenuBuilder()",1,1,1
"org.jhotdraw.samples.svg.SVGApplicationModel.createOpenChooser(Application,View)",1,5,7
"org.jhotdraw.samples.svg.SVGApplicationModel.createSaveChooser(Application,View)",2,2,3
"org.jhotdraw.samples.svg.SVGApplicationModel.createToolBars(Application,View)",1,1,1
"org.jhotdraw.samples.svg.SVGApplicationModel.getSharedEditor()",1,1,2
"org.jhotdraw.samples.svg.SVGApplicationModel.initView(Application,View)",1,2,2
"org.jhotdraw.samples.svg.SVGAttributeKeys.getFillPaint(Figure)",2,4,4
"org.jhotdraw.samples.svg.SVGAttributeKeys.getPerpendicularHitGrowth(Figure)",1,3,3
"org.jhotdraw.samples.svg.SVGAttributeKeys.getStrokePaint(Figure)",2,4,4
"org.jhotdraw.samples.svg.SVGAttributeKeys.setDefaults(Figure)",1,1,1
"org.jhotdraw.samples.svg.SVGConstants.SVGConstants()",1,1,1
"org.jhotdraw.samples.svg.SVGCreateFromFileTool.SVGCreateFromFileTool(ImageHolderFigure,CompositeFigure)",1,1,1
"org.jhotdraw.samples.svg.SVGCreateFromFileTool.SVGCreateFromFileTool(ImageHolderFigure,CompositeFigure,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.SVGCreateFromFileTool.activate(DrawingEditor)",2,14,17
"org.jhotdraw.samples.svg.SVGCreateFromFileTool.createFigure()",2,2,2
"org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileChooser()",1,1,2
"org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileDialog()",1,1,2
"org.jhotdraw.samples.svg.SVGCreateFromFileTool.isUseFileDialog()",1,1,1
"org.jhotdraw.samples.svg.SVGCreateFromFileTool.setUseFileDialog(boolean)",1,1,2
"org.jhotdraw.samples.svg.SVGDrawingPanel.ItemChangeHandler.ItemChangeHandler(JToolBar,String)",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.ItemChangeHandler.itemStateChanged(ItemEvent)",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.SVGDrawingPanel()",1,6,8
"org.jhotdraw.samples.svg.SVGDrawingPanel.createDrawing()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.dispose()",1,2,2
"org.jhotdraw.samples.svg.SVGDrawingPanel.getComponent()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.getDrawing()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.getEditor()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.getPopupActions()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.getUndoRedoManager()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.getView()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.initComponents()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.read(URI)",4,4,8
"org.jhotdraw.samples.svg.SVGDrawingPanel.read(URI,InputFormat)",4,4,6
"org.jhotdraw.samples.svg.SVGDrawingPanel.setDrawing(Drawing)",1,2,2
"org.jhotdraw.samples.svg.SVGDrawingPanel.setEditor(DrawingEditor)",1,6,6
"org.jhotdraw.samples.svg.SVGDrawingPanel.setPopupActions(List<Action>)",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanel.setUndoRedoManager(UndoRedoManager)",1,5,5
"org.jhotdraw.samples.svg.SVGDrawingPanel.write(URI)",5,5,7
"org.jhotdraw.samples.svg.SVGDrawingPanel.write(URI,OutputFormat)",3,4,5
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.SVGDrawingPanelBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.SVGView.SVGView()",1,1,1
"org.jhotdraw.samples.svg.SVGView.canSaveTo(URI)",1,2,2
"org.jhotdraw.samples.svg.SVGView.clear()",1,5,5
"org.jhotdraw.samples.svg.SVGView.createDrawing()",1,1,1
"org.jhotdraw.samples.svg.SVGView.createPageable()",1,1,1
"org.jhotdraw.samples.svg.SVGView.dispose()",1,1,1
"org.jhotdraw.samples.svg.SVGView.getDrawing()",1,1,1
"org.jhotdraw.samples.svg.SVGView.getEditor()",1,1,1
"org.jhotdraw.samples.svg.SVGView.getUndoManager()",1,1,1
"org.jhotdraw.samples.svg.SVGView.initActions()",1,1,1
"org.jhotdraw.samples.svg.SVGView.initComponents()",1,1,1
"org.jhotdraw.samples.svg.SVGView.read(URI,URIChooser)",5,11,12
"org.jhotdraw.samples.svg.SVGView.setEditor(DrawingEditor)",1,1,1
"org.jhotdraw.samples.svg.SVGView.setEnabled(boolean)",1,1,1
"org.jhotdraw.samples.svg.SVGView.setHasUnsavedChanges(boolean)",1,1,1
"org.jhotdraw.samples.svg.SVGView.write(URI,URIChooser)",1,1,1
"org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor)",1,1,1
"org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure)",1,1,1
"org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)",1,1,1
"org.jhotdraw.samples.svg.action.CombineAction.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.samples.svg.action.CombineAction.canGroup()",4,2,4
"org.jhotdraw.samples.svg.action.CombineAction.canUngroup()",1,5,5
"org.jhotdraw.samples.svg.action.CombineAction.combineActionPerformed(ActionEvent)",1,3,3
"org.jhotdraw.samples.svg.action.CombineAction.combinePaths(DrawingView,CompositeFigure,Collection<Figure>,int)",3,9,10
"org.jhotdraw.samples.svg.action.CombineAction.splitActionPerformed(ActionEvent)",1,4,4
"org.jhotdraw.samples.svg.action.CombineAction.splitPath(DrawingView,CompositeFigure,List<Figure>,int[],int[])",1,3,3
"org.jhotdraw.samples.svg.action.CombineAction.updateEnabledState()",1,3,3
"org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)",1,1,1
"org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor,SVGPathFigure)",1,1,1
"org.jhotdraw.samples.svg.action.ViewSourceAction.ViewSourceAction(Application,View)",1,1,1
"org.jhotdraw.samples.svg.action.ViewSourceAction.actionPerformed(ActionEvent)",1,8,8
"org.jhotdraw.samples.svg.action.ViewSourceAction.updateSource(Drawing,JTextArea)",1,2,2
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure)",1,1,1
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure,AttributeKey<Stroke>,AttributeKey<Color>,AttributeKey<Stroke>,AttributeKey<Color>,AttributeKey<Stroke>,AttributeKey<Color>,AttributeKey<Stroke>,AttributeKey<Color>)",1,1,1
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure,boolean,boolean)",1,1,4
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.basicGetBounds()",1,2,2
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.contains(Point)",1,1,1
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.draw(Graphics2D)",1,6,8
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.getOwner()",1,1,1
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.updateBounds()",1,1,1
"org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)",1,1,1
"org.jhotdraw.samples.svg.figures.LinkHandle.basicGetBounds()",1,2,2
"org.jhotdraw.samples.svg.figures.LinkHandle.contains(Point)",1,1,1
"org.jhotdraw.samples.svg.figures.LinkHandle.draw(Graphics2D)",1,3,3
"org.jhotdraw.samples.svg.figures.LinkHandle.getToolTipText(Point)",1,2,2
"org.jhotdraw.samples.svg.figures.LinkHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.LinkHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.LinkHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGAttributedFigure.SVGAttributedFigure()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGAttributedFigure.draw(Graphics2D)",1,5,5
"org.jhotdraw.samples.svg.figures.SVGAttributedFigure.drawFigure(Graphics2D)",1,6,6
"org.jhotdraw.samples.svg.figures.SVGAttributedFigure.getActions(Double)",1,2,2
"org.jhotdraw.samples.svg.figures.SVGAttributedFigure.set(AttributeKey<T>,T)",1,2,2
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure(boolean)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.createHandles(SVGPathFigure,int)",2,3,5
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.findSegment(Double,double)",1,3,3
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.flattenTransform()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.getDrawingArea()",1,4,5
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.handleMouseClick(Double,MouseEvent,DrawingView)",3,5,5
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.invalidate()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.joinSegments(Double,double)",2,4,5
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.splitSegment(Double,double)",1,4,4
"org.jhotdraw.samples.svg.figures.SVGBezierFigure.transform(AffineTransform)",1,4,4
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.SVGEllipseFigure()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.SVGEllipseFigure(double,double,double,double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.clone()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.contains(Double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.createHandles(int)",2,2,5
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.drawFill(Graphics2D)",1,2,3
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.drawStroke(Graphics2D)",1,2,3
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getBounds()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getDrawingArea()",1,3,3
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getHeight()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getHitShape()",1,4,4
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getTransformedShape()",1,3,3
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getWidth()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getX()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getY()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.invalidate()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.isEmpty()",1,1,2
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGEllipseFigure.transform(AffineTransform)",1,8,8
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.SVGGroupFigure()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.clone()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.createHandles(int)",2,2,3
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.draw(Graphics2D)",1,5,5
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.get(AttributeKey<T>)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.getAttributes()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.getBounds()",1,6,6
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.isEmpty()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.set(AttributeKey<T>,T)",1,3,4
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.setAttributes(Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.svg.figures.SVGGroupFigure.toString()",1,4,4
"org.jhotdraw.samples.svg.figures.SVGImageFigure.SVGImageFigure()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.SVGImageFigure(double,double,double,double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.clone()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.contains(Double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.createHandles(int)",2,2,5
"org.jhotdraw.samples.svg.figures.SVGImageFigure.draw(Graphics2D)",1,6,6
"org.jhotdraw.samples.svg.figures.SVGImageFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getActions(Double)",1,6,6
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getBounds()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getBufferedImage()",1,3,4
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getDrawingArea()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getHeight()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getHitShape()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getImageData()",1,3,4
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getTransformedShape()",1,3,3
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getWidth()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getX()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.getY()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.invalidate()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.invalidateTransformedShape()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.isEmpty()",1,1,4
"org.jhotdraw.samples.svg.figures.SVGImageFigure.loadImage(File)",1,2,2
"org.jhotdraw.samples.svg.figures.SVGImageFigure.loadImage(InputStream)",2,3,4
"org.jhotdraw.samples.svg.figures.SVGImageFigure.restoreTransformTo(Object)",1,2,2
"org.jhotdraw.samples.svg.figures.SVGImageFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.setBufferedImage(BufferedImage)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.setImage(byte[],BufferedImage)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.setImageData(byte[])",1,1,1
"org.jhotdraw.samples.svg.figures.SVGImageFigure.transform(AffineTransform)",1,4,4
"org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure(boolean)",1,2,2
"org.jhotdraw.samples.svg.figures.SVGPathFigure.add(int,Figure)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathFigure.clone()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathFigure.contains(Double)",8,10,14
"org.jhotdraw.samples.svg.figures.SVGPathFigure.createHandles(int)",2,3,6
"org.jhotdraw.samples.svg.figures.SVGPathFigure.draw(Graphics2D)",1,5,5
"org.jhotdraw.samples.svg.figures.SVGPathFigure.drawChildren(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathFigure.drawFigure(Graphics2D)",1,5,5
"org.jhotdraw.samples.svg.figures.SVGPathFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathFigure.flattenTransform()",1,5,5
"org.jhotdraw.samples.svg.figures.SVGPathFigure.getActions(Double)",1,6,6
"org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathFigure.getDrawingArea()",1,5,6
"org.jhotdraw.samples.svg.figures.SVGPathFigure.getHitShape()",1,4,4
"org.jhotdraw.samples.svg.figures.SVGPathFigure.getPath()",1,3,4
"org.jhotdraw.samples.svg.figures.SVGPathFigure.getTransformRestoreData()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGPathFigure.handleMouseClick(Double,MouseEvent,DrawingView)",4,5,5
"org.jhotdraw.samples.svg.figures.SVGPathFigure.invalidate()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathFigure.isEmpty()",3,2,3
"org.jhotdraw.samples.svg.figures.SVGPathFigure.restoreTransformTo(Object)",1,2,2
"org.jhotdraw.samples.svg.figures.SVGPathFigure.set(AttributeKey<T>,T)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathFigure.setBounds(Double,Double)",1,3,3
"org.jhotdraw.samples.svg.figures.SVGPathFigure.transform(AffineTransform)",1,9,9
"org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.SVGPathOutlineHandle(SVGPathFigure)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.SVGPathOutlineHandle(SVGPathFigure,boolean)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.basicGetBounds()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.contains(Point)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.draw(Graphics2D)",1,6,8
"org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.getOwner()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.trackStep(Point,Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure(double,double,double,double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure(double,double,double,double,double,double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.clone()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.contains(Double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.createHandles(int)",2,2,5
"org.jhotdraw.samples.svg.figures.SVGRectFigure.drawFill(Graphics2D)",1,3,3
"org.jhotdraw.samples.svg.figures.SVGRectFigure.drawStroke(Graphics2D)",1,2,3
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getBounds()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getDrawingArea()",1,4,5
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getHeight()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getHitShape()",1,4,4
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getTransformedShape()",1,5,5
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getWidth()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getX()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.getY()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.invalidate()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.invalidateTransformedShape()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.isEmpty()",1,1,2
"org.jhotdraw.samples.svg.figures.SVGRectFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcHeight(double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcWidth(double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectFigure.transform(AffineTransform)",1,8,8
"org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.SVGRectRadiusHandle(Figure)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.basicGetBounds()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.draw(Graphics2D)",1,2,2
"org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.getToolTipText(Point)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.keyPressed(KeyEvent)",2,5,8
"org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.locate()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.trackEnd(Point,Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.trackStart(Point,int)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.trackStep(Point,Point,int)",1,4,4
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.SVGTextAreaFigure()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.SVGTextAreaFigure(String)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.appendParagraph(Double,AttributedCharacterIterator,float,float,float,float,float[],int)",3,8,15
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.clone()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.contains(Double)",1,4,4
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.createHandles(int)",2,2,5
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.drawText(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getBaseline()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getBounds()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getDrawingArea()",1,3,3
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFillColor()",1,1,2
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFont()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFontSize()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getInsets()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getLabelFor()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getPreferredTextSize(double)",1,6,8
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTabSize()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getText()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextColor()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextColumns()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextShape()",7,8,11
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTool(Double)",2,2,3
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTransformRestoreData()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.invalidate()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isEditable()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isEmpty()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isTextOverflow()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.restoreTransformTo(Object)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.set(AttributeKey<T>,T)",1,9,9
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setEditable(boolean)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setFontSize(float)",1,3,3
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setText(String)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.transform(AffineTransform)",1,8,8
"org.jhotdraw.samples.svg.figures.SVGTextFigure.SVGTextFigure()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.SVGTextFigure(String)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.clone()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextFigure.contains(Double)",1,3,3
"org.jhotdraw.samples.svg.figures.SVGTextFigure.createHandles(int)",2,2,4
"org.jhotdraw.samples.svg.figures.SVGTextFigure.drawFill(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.drawStroke(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.drawText(Graphics2D)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getBaseline()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getBounds()",2,5,8
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getCoordinates()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getDrawingArea()",1,4,4
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getFillColor()",1,2,3
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getFont()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getFontSize()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getInsets()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getLabelFor()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getPreferredSize()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getRotates()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getTabSize()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getText()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextColor()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextColumns()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextShape()",2,5,8
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getTool(Double)",2,2,3
"org.jhotdraw.samples.svg.figures.SVGTextFigure.getTransformRestoreData()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextFigure.invalidate()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.isEditable()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.isEmpty()",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextFigure.isTextOverflow()",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.restoreTransformTo(Object)",1,2,2
"org.jhotdraw.samples.svg.figures.SVGTextFigure.set(AttributeKey<T>,T)",1,6,6
"org.jhotdraw.samples.svg.figures.SVGTextFigure.setBounds(Double,Double)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.setCoordinates(Double[])",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.setEditable(boolean)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.setFontSize(float)",1,3,3
"org.jhotdraw.samples.svg.figures.SVGTextFigure.setRotates(double[])",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.setText(String)",1,1,1
"org.jhotdraw.samples.svg.figures.SVGTextFigure.transform(AffineTransform)",1,9,9
"org.jhotdraw.samples.svg.gui.AbstractToolBar.AbstractToolBar()",1,1,2
"org.jhotdraw.samples.svg.gui.AbstractToolBar.ProxyPanel.ProxyPanel()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBar.ProxyPanel.paint(Graphics)",1,6,6
"org.jhotdraw.samples.svg.gui.AbstractToolBar.clearDisclosedComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBar.createDisclosedComponent(int)",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBar.dispose()",1,2,2
"org.jhotdraw.samples.svg.gui.AbstractToolBar.getDefaultDisclosureState()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBar.getDisclosedComponent(int)",1,2,3
"org.jhotdraw.samples.svg.gui.AbstractToolBar.getEditor()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBar.getEventHandler()",1,4,4
"org.jhotdraw.samples.svg.gui.AbstractToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBar.init()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBar.setEditor(DrawingEditor)",1,4,4
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.AbstractToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBar.ActionsToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBar.createDisclosedComponent(int)",2,2,3
"org.jhotdraw.samples.svg.gui.ActionsToolBar.getDefaultDisclosureState()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBar.getPopupActions()",1,1,2
"org.jhotdraw.samples.svg.gui.ActionsToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBar.setEditor(DrawingEditor)",1,3,5
"org.jhotdraw.samples.svg.gui.ActionsToolBar.setPopupActions(List<Action>)",1,2,2
"org.jhotdraw.samples.svg.gui.ActionsToolBar.setUndoManager(UndoRedoManager)",1,3,5
"org.jhotdraw.samples.svg.gui.ActionsToolBar.updatePopupMenu()",1,5,5
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ActionsToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBar.AlignToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBar.createDisclosedComponent(int)",2,2,3
"org.jhotdraw.samples.svg.gui.AlignToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBar.setEditor(DrawingEditor)",1,3,3
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.AlignToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBar.ArrangeToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBar.createDisclosedComponent(int)",2,2,3
"org.jhotdraw.samples.svg.gui.ArrangeToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBar.setEditor(DrawingEditor)",1,3,3
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ArrangeToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBar.CanvasToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBar.createDisclosedComponent(int)",2,2,5
"org.jhotdraw.samples.svg.gui.CanvasToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.CanvasToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.DrawingOpacityIcon(DrawingEditor,AttributeKey<Double>,AttributeKey<Color>,AttributeKey<Color>,Image,Shape,Shape)",1,1,1
"org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.DrawingOpacityIcon(DrawingEditor,AttributeKey<Double>,AttributeKey<Color>,AttributeKey<Color>,URL,Shape,Shape)",1,1,1
"org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.paintIcon(Component,Graphics,int,int)",1,12,16
"org.jhotdraw.samples.svg.gui.FigureToolBar.FigureToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBar.createDisclosedComponent(int)",2,2,5
"org.jhotdraw.samples.svg.gui.FigureToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBar.setEditor(DrawingEditor)",1,2,3
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBar.FillToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBar.createDisclosedComponent(int)",2,2,5
"org.jhotdraw.samples.svg.gui.FillToolBar.getDefaultDisclosureState()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBar.setEditor(DrawingEditor)",1,2,3
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FillToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBar.FontToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBar.createDisclosedComponent(int)",2,2,5
"org.jhotdraw.samples.svg.gui.FontToolBar.getDefaultDisclosureState()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBar.setEditor(DrawingEditor)",6,13,14
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.FontToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBar.LinkToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBar.createDisclosedComponent(int)",2,2,5
"org.jhotdraw.samples.svg.gui.LinkToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBar.setEditor(DrawingEditor)",1,2,3
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.LinkToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.MessagePanel.MessagePanel()",1,1,1
"org.jhotdraw.samples.svg.gui.MessagePanel.MessagePanel(Icon,String)",1,1,1
"org.jhotdraw.samples.svg.gui.MessagePanel.addActionListener(ActionListener)",1,2,2
"org.jhotdraw.samples.svg.gui.MessagePanel.closePerformed(ActionEvent)",1,2,2
"org.jhotdraw.samples.svg.gui.MessagePanel.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.MessagePanel.removeActionListener(ActionListener)",1,2,3
"org.jhotdraw.samples.svg.gui.MessagePanel.setIcon(Icon)",1,1,1
"org.jhotdraw.samples.svg.gui.MessagePanel.setMessage(String)",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.ProgressIndicator()",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.ProgressIndicator(String,String)",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.ProgressIndicator(String,String,int,int,boolean)",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.getMaximum()",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.getMessage()",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.getMinimum()",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.getNote()",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.isIndeterminate()",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.setIndeterminate(boolean)",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.setMaximum(int)",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.setMessage(String)",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.setMinimum(int)",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.setNote(String)",1,2,4
"org.jhotdraw.samples.svg.gui.ProgressIndicator.setProgress(int)",1,1,1
"org.jhotdraw.samples.svg.gui.ProgressIndicator.setProgressModel(BoundedRangeModel)",1,1,1
"org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.SelectionOpacityIcon(DrawingEditor,AttributeKey<Double>,AttributeKey<Color>,AttributeKey<Color>,Image,Shape,Shape)",1,1,1
"org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.SelectionOpacityIcon(DrawingEditor,AttributeKey<Double>,AttributeKey<Color>,AttributeKey<Color>,URL,Shape,Shape)",1,1,1
"org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.paintIcon(Component,Graphics,int,int)",1,15,19
"org.jhotdraw.samples.svg.gui.ServerAuthenticationException.ServerAuthenticationException()",1,1,1
"org.jhotdraw.samples.svg.gui.ServerAuthenticationException.ServerAuthenticationException(String)",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBar.StrokeToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBar.createDisclosedComponent(int)",2,2,5
"org.jhotdraw.samples.svg.gui.StrokeToolBar.getDefaultDisclosureState()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBar.setEditor(DrawingEditor)",1,2,3
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.StrokeToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBar.SummaryToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBar.getSummary()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.SummaryToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBar.SelectionToolButtonHandler.SelectionToolButtonHandler(DrawingEditor)",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBar.SelectionToolButtonHandler.mouseClicked(MouseEvent)",1,3,3
"org.jhotdraw.samples.svg.gui.ToolsToolBar.SelectionToolButtonHandler.mousePressed(MouseEvent)",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBar.ToolsToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBar.createDisclosedComponent(int)",2,2,3
"org.jhotdraw.samples.svg.gui.ToolsToolBar.createSelectionActions(DrawingEditor)",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBar.getDefaultDisclosureState()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ToolsToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBar.ViewToolBar()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBar.createDisclosedComponent(int)",2,8,12
"org.jhotdraw.samples.svg.gui.ViewToolBar.getID()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBar.initComponents()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBar.setView(DrawingView)",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getBdescriptor()",1,1,2
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getBeanDescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getDefaultEventIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getDefaultPropertyIndex()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getEdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getEventSetDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getIcon(int)",10,14,14
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getMdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getMethodDescriptors()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getPdescriptor()",1,1,1
"org.jhotdraw.samples.svg.gui.ViewToolBarBeanInfo.getPropertyDescriptors()",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.DefaultSVGFigureFactory()",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createCircle(double,double,double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createEllipse(double,double,double,double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createG(Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createImage(double,double,double,double,byte[],BufferedImage,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createLine(double,double,double,double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createLinearGradient(double,double,double,double,double[],Color[],double[],boolean,AffineTransform)",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createPath(BezierPath[],Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createPolygon(Double[],Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createPolyline(Double[],Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createRadialGradient(double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createRect(double,double,double,double,double,double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createText(Double[],double[],StyledDocument,Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createTextArea(double,double,double,double,StyledDocument,Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.ImageMapOutputFormat()",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.createTransferable(Drawing,List<Figure>,double)",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.getFileExtension()",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.getFileFilter()",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.getOutputFormatAccessory()",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(File,Drawing)",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,Drawing)",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,Drawing,AffineTransform,Dimension)",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,List<Figure>)",1,3,3
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,List<Figure>,AffineTransform,Dimension)",1,6,8
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(URI,Drawing)",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeCircleAttributes(IXMLElement,SVGFigure,Double)",2,4,4
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeElement(IXMLElement,Figure)",8,13,14
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeEllipseElement(IXMLElement,SVGEllipseFigure)",1,2,2
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeGElement(IXMLElement,SVGGroupFigure)",1,2,2
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeHrefAttribute(IXMLElement,SVGFigure)",1,5,5
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeImageElement(IXMLElement,SVGImageFigure)",1,1,1
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeLineElement(IXMLElement,SVGPathFigure)",1,2,2
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePathElement(IXMLElement,SVGPathFigure)",1,3,3
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)",4,6,10
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolygonElement(IXMLElement,SVGPathFigure)",1,2,2
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolylineElement(IXMLElement,SVGPathFigure)",1,2,2
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeRectAttributes(IXMLElement,SVGFigure,Double)",2,3,3
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeRectElement(IXMLElement,SVGRectFigure)",1,4,4
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeTextAreaElement(IXMLElement,SVGTextAreaFigure)",1,2,2
"org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeTextElement(IXMLElement,SVGTextFigure)",1,2,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.SVGInputFormat()",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.SVGInputFormat(SVGFigureFactory)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.Viewport.toString()",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.flattenStyles(IXMLElement)",1,12,12
"org.jhotdraw.samples.svg.io.SVGInputFormat.getFileFilter()",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.getInputFormatAccessory()",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.identifyElements(IXMLElement)",1,2,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.initStorageContext(IXMLElement)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.isDataFlavorSupported(DataFlavor)",1,2,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.read(File,Drawing)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.read(File,Drawing,boolean)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.read(InputStream,Drawing,boolean)",4,23,24
"org.jhotdraw.samples.svg.io.SVGInputFormat.read(Transferable,Drawing,boolean)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.read(URI,Drawing)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.read(URI,Drawing,boolean)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.read(URL,Drawing,boolean)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.readAElement(IXMLElement)",1,10,10
"org.jhotdraw.samples.svg.io.SVGInputFormat.readAttribute(IXMLElement,String,String)",5,5,5
"org.jhotdraw.samples.svg.io.SVGInputFormat.readCircleElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.readCoreAttributes(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.readDefsElement(IXMLElement)",1,2,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.readElement(IXMLElement)",3,31,32
"org.jhotdraw.samples.svg.io.SVGInputFormat.readEllipseElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.readFontAttributes(IXMLElement,Map<AttributeKey<?>, Object>)",2,11,14
"org.jhotdraw.samples.svg.io.SVGInputFormat.readGElement(IXMLElement)",1,6,6
"org.jhotdraw.samples.svg.io.SVGInputFormat.readGraphicsAttributes(IXMLElement,Figure)",1,8,8
"org.jhotdraw.samples.svg.io.SVGInputFormat.readImageElement(IXMLElement)",6,11,13
"org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritAttribute(IXMLElement,String,String)",6,8,8
"org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritColorAttribute(IXMLElement,String,String)",5,11,11
"org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritFontSizeAttribute(IXMLElement,String,String)",8,10,10
"org.jhotdraw.samples.svg.io.SVGInputFormat.readLineAttributes(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,11,11
"org.jhotdraw.samples.svg.io.SVGInputFormat.readLineElement(IXMLElement)",1,5,5
"org.jhotdraw.samples.svg.io.SVGInputFormat.readLinearGradientElement(IXMLElement)",1,10,11
"org.jhotdraw.samples.svg.io.SVGInputFormat.readOpacityAttribute(IXMLElement,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.readPathElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.readPolygonElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.readPolylineElement(IXMLElement)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.readRadialGradientElement(IXMLElement)",1,8,9
"org.jhotdraw.samples.svg.io.SVGInputFormat.readRectElement(IXMLElement)",1,1,5
"org.jhotdraw.samples.svg.io.SVGInputFormat.readSVGElement(IXMLElement)",1,8,10
"org.jhotdraw.samples.svg.io.SVGInputFormat.readShapeAttributes(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,11,11
"org.jhotdraw.samples.svg.io.SVGInputFormat.readSolidColorElement(IXMLElement)",1,2,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.readSwitchElement(IXMLElement)",9,11,15
"org.jhotdraw.samples.svg.io.SVGInputFormat.readTSpanElement(IXMLElement,DefaultStyledDocument)",1,7,7
"org.jhotdraw.samples.svg.io.SVGInputFormat.readTextAreaElement(IXMLElement)",1,8,8
"org.jhotdraw.samples.svg.io.SVGInputFormat.readTextAttributes(IXMLElement,Map<AttributeKey<?>, Object>)",1,6,6
"org.jhotdraw.samples.svg.io.SVGInputFormat.readTextElement(IXMLElement)",1,11,14
"org.jhotdraw.samples.svg.io.SVGInputFormat.readTextFlowAttributes(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.readTransformAttribute(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.readUseElement(IXMLElement)",4,8,8
"org.jhotdraw.samples.svg.io.SVGInputFormat.readUseShapeAttributes(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,20,20
"org.jhotdraw.samples.svg.io.SVGInputFormat.readViewportAttributes(IXMLElement,HashMap<AttributeKey<?>, Object>)",1,5,6
"org.jhotdraw.samples.svg.io.SVGInputFormat.toColor(IXMLElement,String)",9,17,18
"org.jhotdraw.samples.svg.io.SVGInputFormat.toCommaSeparatedArray(String)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.toDouble(IXMLElement,String)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.toDouble(IXMLElement,String,double,double,double)",1,1,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.toHeight(IXMLElement,String)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.toLength(IXMLElement,String,double)",2,11,12
"org.jhotdraw.samples.svg.io.SVGInputFormat.toNumber(IXMLElement,String)",1,1,1
"org.jhotdraw.samples.svg.io.SVGInputFormat.toPaint(IXMLElement,String)",11,19,20
"org.jhotdraw.samples.svg.io.SVGInputFormat.toPath(IXMLElement,String)",63,71,90
"org.jhotdraw.samples.svg.io.SVGInputFormat.toPoints(IXMLElement,String)",1,2,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.toQuotedAndCommaSeparatedArray(String)",2,3,3
"org.jhotdraw.samples.svg.io.SVGInputFormat.toText(IXMLElement,String)",2,2,2
"org.jhotdraw.samples.svg.io.SVGInputFormat.toTransform(IXMLElement,String)",22,16,27
"org.jhotdraw.samples.svg.io.SVGInputFormat.toWSOrCommaSeparatedArray(String)",2,2,3
"org.jhotdraw.samples.svg.io.SVGInputFormat.toWidth(IXMLElement,String)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.SVGOutputFormat()",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createCircle(IXMLElement,double,double,double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createEllipse(IXMLElement,double,double,double,double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createG(IXMLElement,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createImage(IXMLElement,double,double,double,double,byte[],Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createLine(IXMLElement,double,double,double,double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createLinearGradient(IXMLElement,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)",1,2,3
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createPath(IXMLElement,BezierPath[],Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createPolygon(IXMLElement,Double[],Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createPolyline(IXMLElement,Double[],Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createRadialGradient(IXMLElement,double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)",1,2,3
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createRect(IXMLElement,double,double,double,double,double,double,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createText(IXMLElement,Double[],double[],StyledDocument,Map<AttributeKey<?>, Object>)",1,7,7
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createTextArea(IXMLElement,double,double,double,double,StyledDocument,Map<AttributeKey<?>, Object>)",1,4,4
"org.jhotdraw.samples.svg.io.SVGOutputFormat.createTransferable(Drawing,List<Figure>,double)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.getFileExtension()",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.getFileFilter()",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.getId(IXMLElement)",2,2,2
"org.jhotdraw.samples.svg.io.SVGOutputFormat.getOutputFormatAccessory()",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.initStorageContext(IXMLElement)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint()",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.setPrettyPrint(boolean)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.toColor(Color)",2,4,5
"org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)",1,3,3
"org.jhotdraw.samples.svg.io.SVGOutputFormat.toPath(BezierPath[])",1,21,21
"org.jhotdraw.samples.svg.io.SVGOutputFormat.toPoints(Double[])",1,3,3
"org.jhotdraw.samples.svg.io.SVGOutputFormat.toTransform(AffineTransform)",2,5,9
"org.jhotdraw.samples.svg.io.SVGOutputFormat.write(File,Drawing)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.write(OutputStream,Drawing)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.write(OutputStream,Drawing,List<Figure>)",1,2,2
"org.jhotdraw.samples.svg.io.SVGOutputFormat.write(URI,Drawing)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String,String)",1,2,2
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,double,double)",1,2,2
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeCircleElement(IXMLElement,SVGEllipseFigure)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeElement(IXMLElement,Figure)",8,18,19
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeEllipseElement(IXMLElement,SVGEllipseFigure)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeFontAttributes(IXMLElement,Map<AttributeKey<?>, Object>)",1,1,4
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeGElement(IXMLElement,SVGGroupFigure)",1,2,2
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeImageElement(IXMLElement,SVGImageFigure)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeLineElement(IXMLElement,SVGPathFigure)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeOpacityAttribute(IXMLElement,Map<AttributeKey<?>, Object>)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writePathElement(IXMLElement,SVGPathFigure)",1,2,2
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writePolygonElement(IXMLElement,SVGPathFigure)",1,3,3
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writePolylineElement(IXMLElement,SVGPathFigure)",1,3,3
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeRectElement(IXMLElement,SVGRectFigure)",1,1,1
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeShapeAttributes(IXMLElement,Map<AttributeKey<?>, Object>)",1,11,11
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeTextAreaElement(IXMLElement,SVGTextAreaFigure)",1,2,2
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeTextElement(IXMLElement,SVGTextFigure)",1,2,2
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeTransformAttribute(IXMLElement,Map<AttributeKey<?>, Object>)",1,2,2
"org.jhotdraw.samples.svg.io.SVGOutputFormat.writeViewportAttributes(IXMLElement,Map<AttributeKey<?>, Object>)",1,3,3
"org.jhotdraw.samples.svg.io.SVGZInputFormat.SVGZInputFormat()",1,1,1
"org.jhotdraw.samples.svg.io.SVGZInputFormat.getFileFilter()",1,1,1
"org.jhotdraw.samples.svg.io.SVGZInputFormat.read(InputStream,Drawing,boolean)",1,2,3
"org.jhotdraw.samples.svg.io.SVGZOutputFormat.SVGZOutputFormat()",1,1,1
"org.jhotdraw.samples.svg.io.SVGZOutputFormat.getFileExtension()",1,1,1
"org.jhotdraw.samples.svg.io.SVGZOutputFormat.getFileFilter()",1,1,1
"org.jhotdraw.samples.svg.io.SVGZOutputFormat.write(OutputStream,Drawing)",1,1,1
"org.jhotdraw.samples.teddy.CharacterSetAccessory.CharacterSetAccessory()",1,5,5
"org.jhotdraw.samples.teddy.CharacterSetAccessory.fetchAvailableCharSets()",1,4,4
"org.jhotdraw.samples.teddy.CharacterSetAccessory.getCharacterSet()",1,1,1
"org.jhotdraw.samples.teddy.CharacterSetAccessory.getLineSeparator()",2,2,4
"org.jhotdraw.samples.teddy.CharacterSetAccessory.initComponents()",1,1,1
"org.jhotdraw.samples.teddy.CharacterSetAccessory.initComponentsWin()",1,1,1
"org.jhotdraw.samples.teddy.FindDialog.FindDialog(Application)",1,2,2
"org.jhotdraw.samples.teddy.FindDialog.FindDialog(Frame,boolean)",1,1,1
"org.jhotdraw.samples.teddy.FindDialog.ignoreCasePerformed(ActionEvent)",1,2,2
"org.jhotdraw.samples.teddy.FindDialog.initComponents()",1,1,1
"org.jhotdraw.samples.teddy.FindDialog.modeChanged(ItemEvent)",1,2,2
"org.jhotdraw.samples.teddy.FindDialog.next(ActionEvent)",1,6,6
"org.jhotdraw.samples.teddy.FindDialog.previous(ActionEvent)",1,6,6
"org.jhotdraw.samples.teddy.FindDialog.replace(ActionEvent)",1,2,2
"org.jhotdraw.samples.teddy.FindDialog.replaceAll(ActionEvent)",1,6,6
"org.jhotdraw.samples.teddy.FindDialog.replaceAndFind(ActionEvent)",1,2,2
"org.jhotdraw.samples.teddy.FindDialog.updateMatcher()",2,3,5
"org.jhotdraw.samples.teddy.FindDialog.wrapAroundPerformed(ActionEvent)",1,2,2
"org.jhotdraw.samples.teddy.JEditorArea.JEditorArea()",1,1,1
"org.jhotdraw.samples.teddy.JEditorArea.getLineOfOffset(int)",3,3,3
"org.jhotdraw.samples.teddy.JEditorArea.getLineStartOffset(int)",3,3,3
"org.jhotdraw.samples.teddy.JEditorArea.getLineWrap()",1,1,1
"org.jhotdraw.samples.teddy.JEditorArea.getScrollableTracksViewportWidth()",1,1,1
"org.jhotdraw.samples.teddy.JEditorArea.getStyledEditorKit()",1,1,1
"org.jhotdraw.samples.teddy.JEditorArea.initComponents()",1,1,1
"org.jhotdraw.samples.teddy.JEditorArea.rebuildView()",1,1,1
"org.jhotdraw.samples.teddy.JEditorArea.replaceRange(String,int,int)",3,4,5
"org.jhotdraw.samples.teddy.JEditorArea.setLineWrap(boolean)",1,2,2
"org.jhotdraw.samples.teddy.Main.main(String[])",4,4,6
"org.jhotdraw.samples.teddy.TeddyApplicationModel.TeddyApplicationModel()",1,1,1
"org.jhotdraw.samples.teddy.TeddyApplicationModel.createActionMap(Application,View)",1,1,1
"org.jhotdraw.samples.teddy.TeddyApplicationModel.createMenuBuilder()",1,1,1
"org.jhotdraw.samples.teddy.TeddyApplicationModel.createOpenChooser(Application,View)",1,1,1
"org.jhotdraw.samples.teddy.TeddyApplicationModel.createSaveChooser(Application,View)",1,1,1
"org.jhotdraw.samples.teddy.TeddyApplicationModel.createToolBars(Application,View)",1,1,1
"org.jhotdraw.samples.teddy.TeddyApplicationModel.initView(Application,View)",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.EditorPanel.getLineWrap()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.EditorPanel.getPreferredScrollableViewportSize()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.EditorPanel.getScrollableBlockIncrement(Rectangle,int,int)",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.EditorPanel.getScrollableTracksViewportHeight()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.EditorPanel.getScrollableTracksViewportWidth()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.EditorPanel.getScrollableUnitIncrement(Rectangle,int,int)",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.EditorPanel.setEditor(JTextComponent)",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.EditorPanel.setLineWrap(boolean)",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.TeddyView()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.caretUpdate(CaretEvent)",1,2,2
"org.jhotdraw.samples.teddy.TeddyView.clear()",1,3,3
"org.jhotdraw.samples.teddy.TeddyView.createDocument()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.createEditor()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.fireEdit(UndoableEdit)",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.getDocument()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.getLineCount()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.getLineOfOffset(int)",3,3,3
"org.jhotdraw.samples.teddy.TeddyView.getLineStartOffset(int)",3,3,3
"org.jhotdraw.samples.teddy.TeddyView.getSelectionEnd()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.getSelectionStart()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.init()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.initActions()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.initComponents()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.isLineNumbersVisible()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.isLineWrap()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.isStatusBarVisible()",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.read(URI,String)",1,2,3
"org.jhotdraw.samples.teddy.TeddyView.read(URI,URIChooser)",1,4,4
"org.jhotdraw.samples.teddy.TeddyView.readDocument(File,String)",1,5,5
"org.jhotdraw.samples.teddy.TeddyView.replaceRange(String,int,int)",3,4,5
"org.jhotdraw.samples.teddy.TeddyView.select(int,int)",1,2,2
"org.jhotdraw.samples.teddy.TeddyView.setEnabled(boolean)",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.setLineNumbersVisible(boolean)",1,2,2
"org.jhotdraw.samples.teddy.TeddyView.setLineWrap(boolean)",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.setStatusBarVisible(boolean)",1,1,1
"org.jhotdraw.samples.teddy.TeddyView.write(URI,String,String)",1,2,3
"org.jhotdraw.samples.teddy.TeddyView.write(URI,URIChooser)",1,4,4
"org.jhotdraw.samples.teddy.TeddyView.writeDocument(Document,File,String,String)",1,3,3
"org.jhotdraw.samples.teddy.action.FindAction.FindAction(Application,View)",1,1,1
"org.jhotdraw.samples.teddy.action.FindAction.actionPerformed(ActionEvent)",1,5,5
"org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.ToggleLineNumbersAction(Application,View)",1,1,1
"org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.getActiveView()",1,1,1
"org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.updateView()",1,2,2
"org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.ToggleLineWrapAction(Application,View)",1,1,1
"org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.getActiveView()",1,1,1
"org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.updateView()",1,2,2
"org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.ToggleStatusBarAction(Application,View)",1,1,1
"org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.actionPerformed(ActionEvent)",1,1,1
"org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.getActiveView()",1,1,1
"org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.updateView()",1,2,2
"org.jhotdraw.samples.teddy.io.LFWriter.LFWriter(Writer)",1,1,1
"org.jhotdraw.samples.teddy.io.LFWriter.getLineSeparator()",1,1,1
"org.jhotdraw.samples.teddy.io.LFWriter.setLineSeparator(String)",1,1,1
"org.jhotdraw.samples.teddy.io.LFWriter.write(String,int,int)",1,1,1
"org.jhotdraw.samples.teddy.io.LFWriter.write(char[],int,int)",2,5,7
"org.jhotdraw.samples.teddy.io.LFWriter.write(int)",2,3,5
"org.jhotdraw.samples.teddy.regex.Matcher.Matcher(Document,String)",1,1,1
"org.jhotdraw.samples.teddy.regex.Matcher.Matcher(Document,String,boolean,MatchType)",1,2,2
"org.jhotdraw.samples.teddy.regex.Matcher.findNext()",10,8,15
"org.jhotdraw.samples.teddy.regex.Matcher.findNext(int)",1,1,1
"org.jhotdraw.samples.teddy.regex.Matcher.findPrevious()",10,9,14
"org.jhotdraw.samples.teddy.regex.Matcher.findPrevious(int)",1,1,1
"org.jhotdraw.samples.teddy.regex.Matcher.getFindString()",1,1,1
"org.jhotdraw.samples.teddy.regex.Matcher.getMatchType()",1,1,1
"org.jhotdraw.samples.teddy.regex.Matcher.isMatchCase()",1,1,1
"org.jhotdraw.samples.teddy.regex.Matcher.isWordChar(int)",1,1,2
"org.jhotdraw.samples.teddy.regex.Matcher.reset()",1,1,1
"org.jhotdraw.samples.teddy.regex.Matcher.setStartIndex(int)",1,1,1
"org.jhotdraw.samples.teddy.text.NumberedEditorKit.getViewFactory()",1,1,2
"org.jhotdraw.samples.teddy.text.NumberedParagraphView.NumberedParagraphView(Element,NumberedViewFactory)",1,1,1
"org.jhotdraw.samples.teddy.text.NumberedParagraphView.getLeftInset()",1,1,2
"org.jhotdraw.samples.teddy.text.NumberedParagraphView.paintChild(Graphics,Rectangle,int)",1,3,3
"org.jhotdraw.samples.teddy.text.NumberedViewFactory.create(Element)",7,6,7
"org.jhotdraw.samples.teddy.text.NumberedViewFactory.isLineNumbersVisible()",1,1,1
"org.jhotdraw.samples.teddy.text.NumberedViewFactory.setLineNumbersVisible(boolean)",1,1,1
"org.jhotdraw.text.ColorFormatter.ColorFormatter()",1,1,1
"org.jhotdraw.text.ColorFormatter.ColorFormatter(Format,boolean,boolean)",1,1,4
"org.jhotdraw.text.ColorFormatter.createFormatterFactory()",1,1,1
"org.jhotdraw.text.ColorFormatter.createFormatterFactory(Format,boolean,boolean)",1,1,1
"org.jhotdraw.text.ColorFormatter.getAllowsNullValue()",1,1,1
"org.jhotdraw.text.ColorFormatter.getLastUsedInputFormat()",1,1,1
"org.jhotdraw.text.ColorFormatter.getOutputFormat()",1,1,1
"org.jhotdraw.text.ColorFormatter.isAdaptive()",1,1,1
"org.jhotdraw.text.ColorFormatter.setAdaptive(boolean)",1,1,3
"org.jhotdraw.text.ColorFormatter.setAllowsNullValue(boolean)",1,1,1
"org.jhotdraw.text.ColorFormatter.setLastUsedInputFormat(Format)",1,1,2
"org.jhotdraw.text.ColorFormatter.setOutputFormat(Format)",2,1,2
"org.jhotdraw.text.ColorFormatter.stringToValue(String)",10,24,26
"org.jhotdraw.text.ColorFormatter.valueToString(Object)",6,8,16
"org.jhotdraw.text.ColorToolTipTextFormatter.ColorToolTipTextFormatter()",1,1,1
"org.jhotdraw.text.ColorToolTipTextFormatter.valueToString(Object)",5,8,14
"org.jhotdraw.text.FontFormatter.FontFormatter()",1,1,1
"org.jhotdraw.text.FontFormatter.FontFormatter(boolean)",1,1,1
"org.jhotdraw.text.FontFormatter.clearGenericFontFamilies()",1,1,1
"org.jhotdraw.text.FontFormatter.createFormatterFactory()",1,1,1
"org.jhotdraw.text.FontFormatter.createFormatterFactory(boolean)",1,1,1
"org.jhotdraw.text.FontFormatter.getAllowsNullValue()",1,1,1
"org.jhotdraw.text.FontFormatter.getAllowsUnknownFont()",1,1,1
"org.jhotdraw.text.FontFormatter.putGenericFontFamily(String,Font)",1,1,1
"org.jhotdraw.text.FontFormatter.setAllowsNullValue(boolean)",1,1,1
"org.jhotdraw.text.FontFormatter.setAllowsUnknownFont(boolean)",1,1,1
"org.jhotdraw.text.FontFormatter.stringToValue(String)",7,6,10
"org.jhotdraw.text.FontFormatter.valueToString(Object)",4,2,4
"org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double,boolean)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double,boolean,String)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getAllowsNullValue()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getMaximum()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getMaximumFractionDigits()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getMaximumIntegerDigits()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getMinimum()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getMinimumFractionDigits()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getMinimumIntegerDigits()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getMinimumNegativeExponent()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getMinimumPositiveExponent()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getMultiplier()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.getUnit()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.initFormats()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.isUsesScientificNotation()",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.isValidValue(Object,boolean)",5,3,9
"org.jhotdraw.text.JavaNumberFormatter.setAllowsNullValue(boolean)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.setMaximum(Comparable)",1,3,3
"org.jhotdraw.text.JavaNumberFormatter.setMaximumFractionDigits(int)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.setMaximumIntegerDigits(int)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.setMinimum(Comparable)",1,3,3
"org.jhotdraw.text.JavaNumberFormatter.setMinimumFractionDigits(int)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.setMinimumIntegerDigits(int)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.setMinimumNegativeExponent(int)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.setMinimumPositiveExponent(int)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.setMultiplier(double)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.setUnit(String)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.setUsesScientificNotation(boolean)",1,1,1
"org.jhotdraw.text.JavaNumberFormatter.stringToValue(String)",10,13,16
"org.jhotdraw.text.JavaNumberFormatter.valueToString(Object)",3,13,19
"org.jhotdraw.undo.CompositeEdit.CompositeEdit()",1,1,1
"org.jhotdraw.undo.CompositeEdit.CompositeEdit(String)",1,1,1
"org.jhotdraw.undo.CompositeEdit.CompositeEdit(String,boolean)",1,1,1
"org.jhotdraw.undo.CompositeEdit.CompositeEdit(boolean)",1,1,1
"org.jhotdraw.undo.CompositeEdit.addEdit(UndoableEdit)",3,4,4
"org.jhotdraw.undo.CompositeEdit.getPresentationName()",1,2,2
"org.jhotdraw.undo.CompositeEdit.getRedoPresentationName()",1,2,2
"org.jhotdraw.undo.CompositeEdit.getUndoPresentationName()",1,2,2
"org.jhotdraw.undo.CompositeEdit.isSignificant()",1,2,2
"org.jhotdraw.undo.CompositeEdit.setSignificant(boolean)",1,1,1
"org.jhotdraw.undo.CompositeEdit.setVerbose(boolean)",1,1,1
"org.jhotdraw.undo.NonUndoableEdit.NonUndoableEdit()",1,1,1
"org.jhotdraw.undo.NonUndoableEdit.canRedo()",1,1,1
"org.jhotdraw.undo.NonUndoableEdit.canUndo()",1,1,1
"org.jhotdraw.undo.PropertyChangeEdit.PropertyChangeEdit(Object,String,Object,Object)",1,1,1
"org.jhotdraw.undo.PropertyChangeEdit.PropertyChangeEdit(Object,String,String,Object,Object)",1,1,1
"org.jhotdraw.undo.PropertyChangeEdit.addEdit(UndoableEdit)",3,3,4
"org.jhotdraw.undo.PropertyChangeEdit.getPresentationName()",1,1,1
"org.jhotdraw.undo.PropertyChangeEdit.getSetter()",1,2,2
"org.jhotdraw.undo.PropertyChangeEdit.propertyNameToPresentationName(String)",1,5,5
"org.jhotdraw.undo.PropertyChangeEdit.redo()",1,2,2
"org.jhotdraw.undo.PropertyChangeEdit.setPresentationName(String)",1,1,1
"org.jhotdraw.undo.PropertyChangeEdit.toString()",1,1,1
"org.jhotdraw.undo.PropertyChangeEdit.undo()",1,2,2
"org.jhotdraw.undo.UndoRedoManager.RedoAction.RedoAction()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.RedoAction.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.undo.UndoRedoManager.UndoAction.UndoAction()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.UndoAction.actionPerformed(ActionEvent)",1,2,2
"org.jhotdraw.undo.UndoRedoManager.UndoRedoManager()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.addEdit(UndoableEdit)",2,6,6
"org.jhotdraw.undo.UndoRedoManager.addPropertyChangeListener(PropertyChangeListener)",1,1,1
"org.jhotdraw.undo.UndoRedoManager.addPropertyChangeListener(String,PropertyChangeListener)",1,1,1
"org.jhotdraw.undo.UndoRedoManager.discardAllEdits()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.firePropertyChange(String,Object,Object)",1,1,1
"org.jhotdraw.undo.UndoRedoManager.firePropertyChange(String,boolean,boolean)",1,1,1
"org.jhotdraw.undo.UndoRedoManager.firePropertyChange(String,int,int)",1,1,1
"org.jhotdraw.undo.UndoRedoManager.getLabels()",1,2,2
"org.jhotdraw.undo.UndoRedoManager.getRedoAction()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.getUndoAction()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.hasSignificantEdits()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.redo()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.removePropertyChangeListener(PropertyChangeListener)",1,1,1
"org.jhotdraw.undo.UndoRedoManager.removePropertyChangeListener(String,PropertyChangeListener)",1,1,1
"org.jhotdraw.undo.UndoRedoManager.setHasSignificantEdits(boolean)",1,1,1
"org.jhotdraw.undo.UndoRedoManager.setLocale(Locale)",1,1,1
"org.jhotdraw.undo.UndoRedoManager.undo()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.undoOrRedo()",1,1,1
"org.jhotdraw.undo.UndoRedoManager.updateActions()",1,4,4
"org.jhotdraw.util.Images.Images()",1,1,1
"org.jhotdraw.util.Images.createImage(Class<?>,String)",2,1,2
"org.jhotdraw.util.Images.createImage(URL)",2,1,2
"org.jhotdraw.util.Images.getScaledInstance(Image,int,int)",1,4,5
"org.jhotdraw.util.Images.hasAlpha(Image)",2,2,3
"org.jhotdraw.util.Images.split(Image,int,boolean)",2,3,4
"org.jhotdraw.util.Images.toBufferedImage(Image)",2,3,8
"org.jhotdraw.util.Images.toBufferedImage(RenderedImage)",1,2,2
"org.jhotdraw.util.LocaleUtil.LocaleUtil()",1,1,1
"org.jhotdraw.util.LocaleUtil.getDefault()",1,2,2
"org.jhotdraw.util.LocaleUtil.setDefault(Locale)",1,1,1
"org.jhotdraw.util.Methods.Methods()",1,1,1
"org.jhotdraw.util.Methods.invoke(Object,String)",1,2,3
"org.jhotdraw.util.Methods.invoke(Object,String,Class<?>,Object)",1,2,3
"org.jhotdraw.util.Methods.invoke(Object,String,Class<?>[],Object...)",1,3,4
"org.jhotdraw.util.Methods.invoke(Object,String,String)",1,2,3
"org.jhotdraw.util.Methods.invoke(Object,String,boolean)",1,2,3
"org.jhotdraw.util.Methods.invoke(Object,String,float)",1,2,3
"org.jhotdraw.util.Methods.invoke(Object,String,int)",1,2,3
"org.jhotdraw.util.Methods.invokeGetter(Object,String,Object)",1,1,4
"org.jhotdraw.util.Methods.invokeGetter(Object,String,boolean)",1,1,4
"org.jhotdraw.util.Methods.invokeGetter(Object,String,int)",1,1,4
"org.jhotdraw.util.Methods.invokeGetter(Object,String,long)",1,1,4
"org.jhotdraw.util.Methods.invokeIfExists(Object,String)",1,1,2
"org.jhotdraw.util.Methods.invokeIfExists(Object,String,Class<?>,Object)",1,1,2
"org.jhotdraw.util.Methods.invokeIfExists(Object,String,boolean)",1,1,2
"org.jhotdraw.util.Methods.invokeIfExists(Object,String,float)",1,1,2
"org.jhotdraw.util.Methods.invokeIfExistsWithEnum(Object,String,String,String)",1,3,3
"org.jhotdraw.util.Methods.invokeStatic(Class<?>,String)",1,2,3
"org.jhotdraw.util.Methods.invokeStatic(Class<?>,String,Class<?>,Object)",1,1,1
"org.jhotdraw.util.Methods.invokeStatic(Class<?>,String,Class<?>[],Object[])",1,2,3
"org.jhotdraw.util.Methods.invokeStatic(String,String)",1,1,2
"org.jhotdraw.util.Methods.invokeStatic(String,String,Class<?>[],Object[])",1,1,2
"org.jhotdraw.util.Methods.invokeStatic(String,String,Class<?>[],Object[],Object)",1,1,3
"org.jhotdraw.util.Methods.invokeStaticGetter(Class<?>,String,boolean)",1,1,4
"org.jhotdraw.util.ResourceBundleUtil.ResourceBundleUtil(String,Locale)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String,Class<?>)",1,3,3
"org.jhotdraw.util.ResourceBundleUtil.configureButton(AbstractButton,String)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.configureButton(AbstractButton,String,Class<?>)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)",1,2,2
"org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String,Class<?>)",1,2,2
"org.jhotdraw.util.ResourceBundleUtil.createMenuItem(Action,String)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.format(String,Object...)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.generateFallbackKeys(String,ArrayList<String>)",3,3,5
"org.jhotdraw.util.ResourceBundleUtil.getAcceleratorProperty(String)",1,4,5
"org.jhotdraw.util.ResourceBundleUtil.getBaseClass()",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.getBundle(String)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.getBundle(String,Locale)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object...)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.getIconProperty(String,String,Class<?>)",2,4,7
"org.jhotdraw.util.ResourceBundleUtil.getInteger(String)",1,3,3
"org.jhotdraw.util.ResourceBundleUtil.getKeyStroke(String)",1,2,3
"org.jhotdraw.util.ResourceBundleUtil.getLargeIconProperty(String,Class<?>)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.getMnemonic(String)",1,3,3
"org.jhotdraw.util.ResourceBundleUtil.getMnemonicProperty(String)",1,5,5
"org.jhotdraw.util.ResourceBundleUtil.getSmallIconProperty(String,Class<?>)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.getString(String)",1,3,3
"org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)",5,7,10
"org.jhotdraw.util.ResourceBundleUtil.getTextProperty(String)",1,3,3
"org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)",1,3,3
"org.jhotdraw.util.ResourceBundleUtil.getWrappedBundle()",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.isVerbose()",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.putPropertyNameModifier(String,String...)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.readObject(ObjectInputStream)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.removePropertyNameModifier(String)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.setBaseClass(Class<?>)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.setVerbose(boolean)",1,1,1
"org.jhotdraw.util.ResourceBundleUtil.toString()",1,1,1
"org.jhotdraw.util.ReversedList.ReversedList(List<T>)",1,1,1
"org.jhotdraw.util.ReversedList.get(int)",1,1,1
"org.jhotdraw.util.ReversedList.size()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.PreferencesUtil()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.PreferencesUtil(boolean)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.absolutePath()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.addNodeChangeListener(NodeChangeListener)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.addPreferenceChangeListener(PreferenceChangeListener)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.childrenNames()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.clear()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.exportNode(OutputStream)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.exportSubtree(OutputStream)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.flush()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.get(String,String)",1,2,2
"org.jhotdraw.util.prefs.PreferencesUtil.getBoolean(String,boolean)",1,2,2
"org.jhotdraw.util.prefs.PreferencesUtil.getByteArray(String,byte[])",1,2,2
"org.jhotdraw.util.prefs.PreferencesUtil.getDouble(String,double)",1,2,2
"org.jhotdraw.util.prefs.PreferencesUtil.getFloat(String,float)",1,2,2
"org.jhotdraw.util.prefs.PreferencesUtil.getInt(String,int)",1,2,2
"org.jhotdraw.util.prefs.PreferencesUtil.getLong(String,long)",1,2,2
"org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window,Dimension)",1,5,5
"org.jhotdraw.util.prefs.PreferencesUtil.installInternalFramePrefsHandler(Preferences,String,JInternalFrame,JDesktopPane)",1,2,2
"org.jhotdraw.util.prefs.PreferencesUtil.installPalettePrefsHandler(Preferences,String,Window)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.installPalettePrefsHandler(Preferences,String,Window,int)",1,1,2
"org.jhotdraw.util.prefs.PreferencesUtil.installPrefsHandler(Preferences,String,JTabbedPane)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.installTabbedPanePrefsHandler(Preferences,String,JTabbedPane)",1,1,2
"org.jhotdraw.util.prefs.PreferencesUtil.installToolBarPrefsHandler(Preferences,String,JToolBar)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.isUserNode()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.keys()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.name()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.node(String)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.nodeExists(String)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.parent()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.put(String,String)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.putBoolean(String,boolean)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.putByteArray(String,byte[])",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.putDouble(String,double)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.putFloat(String,float)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.putInt(String,int)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.putLong(String,long)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.remove(String)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.removeNode()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.removeNodeChangeListener(NodeChangeListener)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.removePreferenceChangeListener(PreferenceChangeListener)",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.sync()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.systemNodeForPackage(Class<?>)",2,4,5
"org.jhotdraw.util.prefs.PreferencesUtil.toString()",1,1,1
"org.jhotdraw.util.prefs.PreferencesUtil.userNodeForPackage(Class<?>)",2,4,5
"org.jhotdraw.util.prefs.ToolBarPrefsHandler.ToolBarPrefsHandler(JToolBar,String,Preferences)",1,2,3
"org.jhotdraw.util.prefs.ToolBarPrefsHandler.ancestorAdded(AncestorEvent)",1,1,1
"org.jhotdraw.util.prefs.ToolBarPrefsHandler.ancestorMoved(AncestorEvent)",1,3,3
"org.jhotdraw.util.prefs.ToolBarPrefsHandler.ancestorRemoved(AncestorEvent)",1,3,3
"org.jhotdraw.util.prefs.ToolBarPrefsHandler.componentHidden(ComponentEvent)",1,1,1
"org.jhotdraw.util.prefs.ToolBarPrefsHandler.componentMoved(ComponentEvent)",1,1,1
"org.jhotdraw.util.prefs.ToolBarPrefsHandler.componentResized(ComponentEvent)",1,1,1
"org.jhotdraw.util.prefs.ToolBarPrefsHandler.componentShown(ComponentEvent)",1,1,1
"org.jhotdraw.util.prefs.ToolBarPrefsHandler.locationChanged()",1,7,13
"org.jhotdraw.xml.DefaultDOMFactory.DefaultDOMFactory()",1,1,1
"org.jhotdraw.xml.DefaultDOMFactory.addEnum(String,Enum<T>)",1,2,2
"org.jhotdraw.xml.DefaultDOMFactory.addEnumClass(String,Class<?>)",1,1,1
"org.jhotdraw.xml.DefaultDOMFactory.addStorable(String,DOMStorable)",1,1,1
"org.jhotdraw.xml.DefaultDOMFactory.addStorableClass(String,Class<?>)",1,1,1
"org.jhotdraw.xml.DefaultDOMFactory.create(String)",3,4,5
"org.jhotdraw.xml.DefaultDOMFactory.createEnum(String,String)",5,3,5
"org.jhotdraw.xml.DefaultDOMFactory.getEnumName(Enum)",2,2,2
"org.jhotdraw.xml.DefaultDOMFactory.getEnumValue(Enum)",1,2,2
"org.jhotdraw.xml.DefaultDOMFactory.getName(Object)",2,4,4
"org.jhotdraw.xml.JavaPrimitivesDOMFactory.create(String)",1,4,4
"org.jhotdraw.xml.JavaPrimitivesDOMFactory.createEnum(String,String)",2,1,3
"org.jhotdraw.xml.JavaPrimitivesDOMFactory.escape(String)",1,1,1
"org.jhotdraw.xml.JavaPrimitivesDOMFactory.getEnumName(Enum<?>)",1,1,1
"org.jhotdraw.xml.JavaPrimitivesDOMFactory.getEnumValue(Enum<?>)",1,1,1
"org.jhotdraw.xml.JavaPrimitivesDOMFactory.getName(Object)",23,1,23
"org.jhotdraw.xml.JavaPrimitivesDOMFactory.read(DOMInput)",1,25,25
"org.jhotdraw.xml.JavaPrimitivesDOMFactory.unescape(String)",1,1,1
"org.jhotdraw.xml.JavaPrimitivesDOMFactory.write(DOMOutput,Object)",20,28,28
"org.jhotdraw.xml.JavaxDOMInput.JavaxDOMInput(DOMFactory,InputStream)",1,2,2
"org.jhotdraw.xml.JavaxDOMInput.JavaxDOMInput(DOMFactory,Reader)",1,2,2
"org.jhotdraw.xml.JavaxDOMInput.closeElement()",1,1,1
"org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,String)",1,1,2
"org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,boolean)",1,2,2
"org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,double)",1,2,2
"org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,int)",1,2,2
"org.jhotdraw.xml.JavaxDOMInput.getBuilder()",2,3,3
"org.jhotdraw.xml.JavaxDOMInput.getElementCount()",1,2,3
"org.jhotdraw.xml.JavaxDOMInput.getElementCount(String)",1,3,4
"org.jhotdraw.xml.JavaxDOMInput.getInheritedAttribute(String)",1,2,2
"org.jhotdraw.xml.JavaxDOMInput.getTagName()",1,1,1
"org.jhotdraw.xml.JavaxDOMInput.getText()",1,1,1
"org.jhotdraw.xml.JavaxDOMInput.getText(Node,StringBuilder)",1,3,3
"org.jhotdraw.xml.JavaxDOMInput.getText(String)",2,1,2
"org.jhotdraw.xml.JavaxDOMInput.openElement(String)",3,3,4
"org.jhotdraw.xml.JavaxDOMInput.openElement(String,int)",4,3,5
"org.jhotdraw.xml.JavaxDOMInput.openElement(int)",4,2,4
"org.jhotdraw.xml.JavaxDOMInput.readObject()",1,1,1
"org.jhotdraw.xml.JavaxDOMInput.readObject(int)",4,9,10
"org.jhotdraw.xml.JavaxDOMOutput.JavaxDOMOutput(DOMFactory)",1,1,1
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,String)",1,2,2
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,String,String)",1,2,2
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,boolean)",1,1,1
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,boolean,boolean)",1,2,2
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,double)",1,2,2
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,double,double)",1,2,2
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,float)",1,2,2
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,float,float)",1,2,2
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,int)",1,1,1
"org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,int,int)",1,2,2
"org.jhotdraw.xml.JavaxDOMOutput.addComment(String)",1,1,1
"org.jhotdraw.xml.JavaxDOMOutput.addText(String)",1,1,1
"org.jhotdraw.xml.JavaxDOMOutput.closeElement()",1,1,1
"org.jhotdraw.xml.JavaxDOMOutput.getPrototype()",1,2,3
"org.jhotdraw.xml.JavaxDOMOutput.openElement(String)",1,1,1
"org.jhotdraw.xml.JavaxDOMOutput.reset()",1,2,2
"org.jhotdraw.xml.JavaxDOMOutput.save(OutputStream)",1,3,3
"org.jhotdraw.xml.JavaxDOMOutput.save(Writer)",1,3,3
"org.jhotdraw.xml.JavaxDOMOutput.setDoctype(String)",1,1,1
"org.jhotdraw.xml.JavaxDOMOutput.writeObject(Object)",2,2,3
"org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,InputStream)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,Reader)",1,3,3
"org.jhotdraw.xml.NanoXMLDOMInput.closeElement()",1,1,1
"org.jhotdraw.xml.NanoXMLDOMInput.dispose()",1,2,2
"org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,String)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,boolean)",1,3,3
"org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,double)",1,3,3
"org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,int)",1,3,3
"org.jhotdraw.xml.NanoXMLDOMInput.getElementCount()",1,1,1
"org.jhotdraw.xml.NanoXMLDOMInput.getElementCount(String)",1,2,3
"org.jhotdraw.xml.NanoXMLDOMInput.getInheritedAttribute(String)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMInput.getTagName()",1,1,1
"org.jhotdraw.xml.NanoXMLDOMInput.getText()",1,1,1
"org.jhotdraw.xml.NanoXMLDOMInput.getText(String)",1,1,2
"org.jhotdraw.xml.NanoXMLDOMInput.openElement(String)",3,3,3
"org.jhotdraw.xml.NanoXMLDOMInput.openElement(String,int)",4,4,4
"org.jhotdraw.xml.NanoXMLDOMInput.openElement(int)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMInput.readObject()",1,1,1
"org.jhotdraw.xml.NanoXMLDOMInput.readObject(int)",4,9,10
"org.jhotdraw.xml.NanoXMLDOMOutput.NanoXMLDOMOutput(DOMFactory)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,String)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,String,String)",1,3,3
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,boolean)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,boolean,boolean)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,double)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,double,double)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,float)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,float,float)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,int)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,int,int)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.addComment(String)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMOutput.addText(String)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.closeElement()",1,1,1
"org.jhotdraw.xml.NanoXMLDOMOutput.dispose()",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.getPrototype()",1,2,3
"org.jhotdraw.xml.NanoXMLDOMOutput.openElement(String)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMOutput.print(PrintWriter)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.save(OutputStream)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMOutput.save(Writer)",1,2,2
"org.jhotdraw.xml.NanoXMLDOMOutput.setDoctype(String)",1,1,1
"org.jhotdraw.xml.NanoXMLDOMOutput.writeObject(Object)",2,2,3
"org.jhotdraw.xml.XMLTransferable.XMLTransferable(byte[],String,String)",1,1,1
"org.jhotdraw.xml.XMLTransferable.getTransferData(DataFlavor)",2,1,2
"org.jhotdraw.xml.XMLTransferable.getTransferDataFlavors()",1,1,1
"org.jhotdraw.xml.XMLTransferable.isDataFlavorSupported(DataFlavor)",1,1,1
"org.jhotdraw.xml.XMLTransferable.lostOwnership(Clipboard,Transferable)",1,1,1
"org.jhotdraw.xml.css.CSSParser.parse(Reader,StyleManager)",1,1,1
"org.jhotdraw.xml.css.CSSParser.parse(String,StyleManager)",1,1,1
"org.jhotdraw.xml.css.CSSParser.parseDeclarationMap(StreamTokenizer)",6,13,18
"org.jhotdraw.xml.css.CSSParser.parseRuleset(StreamTokenizer,StyleManager)",3,2,4
"org.jhotdraw.xml.css.CSSParser.parseSelectorList(StreamTokenizer)",2,7,9
"org.jhotdraw.xml.css.CSSParser.parseStylesheet(StreamTokenizer,StyleManager)",1,2,2
"org.jhotdraw.xml.css.CSSRule.CSSRule(String,Map<String, String>)",1,1,1
"org.jhotdraw.xml.css.CSSRule.CSSRule(String,String)",1,1,1
"org.jhotdraw.xml.css.CSSRule.CSSRule(String,String,String)",1,1,1
"org.jhotdraw.xml.css.CSSRule.apply(Element)",1,3,3
"org.jhotdraw.xml.css.CSSRule.apply(IXMLElement)",1,3,3
"org.jhotdraw.xml.css.CSSRule.matches(Element)",6,7,9
"org.jhotdraw.xml.css.CSSRule.matches(IXMLElement)",6,8,10
"org.jhotdraw.xml.css.CSSRule.setSelector(String)",2,3,6
"org.jhotdraw.xml.css.CSSRule.toString()",1,1,1
"org.jhotdraw.xml.css.StyleManager.StyleManager()",1,1,1
"org.jhotdraw.xml.css.StyleManager.add(CSSRule)",1,1,1
"org.jhotdraw.xml.css.StyleManager.applyStylesTo(Element)",1,3,3
"org.jhotdraw.xml.css.StyleManager.applyStylesTo(IXMLElement)",1,3,3
"org.jhotdraw.xml.css.StyleManager.clear()",1,1,1

