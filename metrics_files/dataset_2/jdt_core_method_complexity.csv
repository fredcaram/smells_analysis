Method,ev(G),iv(G),v(G)
"null.accept(CompletionProposal)",2,11,15
"null.acceptPotentiallyCompatibleMethods(MethodBinding[])",1,1,1
"null.added(NodeChangeEvent)",1,1,1
"null.checkingPotentialCompatibility()",1,1,1
"null.compare(FieldBinding,FieldBinding)",1,1,1
"null.compare(MethodBinding,MethodBinding)",1,1,2
"null.compare(Object,Object)",1,1,1
"null.createBuffer(IOpenable)",1,1,1
"null.createContainerComparator(JavaProject)",1,1,1
"null.createImportAdder(Comparator<ImportName>)",1,1,1
"null.definesTargetType()",1,1,1
"null.determineImplicitImportContainers(ICompilationUnit)",1,1,1
"null.freshInferenceContext(Scope)",1,1,1
"null.genericTypeArguments()",1,1,1
"null.get(Binding)",1,1,1
"null.getAnnotationsAtCursor(int)",1,1,1
"null.getClasspathEntries()",1,1,1
"null.getDescription()",1,1,1
"null.getExpressionContext()",1,1,1
"null.getKind()",1,1,1
"null.getPath()",1,1,1
"null.hasTypeBit(int)",1,1,1
"null.invocationTargetType()",1,1,1
"null.isQualifiedSuper()",1,1,1
"null.isSuperAccess()",1,1,1
"null.isTypeAccess()",1,1,1
"null.kind()",1,1,1
"null.receiverIsImplicitThis()",1,1,1
"null.reduce(InferenceContext18)",1,1,1
"null.removed(NodeChangeEvent)",1,2,2
"null.setActualReceiverType(ReferenceBinding)",1,1,1
"null.setDepth(int)",1,1,1
"null.setFieldIndex(int)",1,1,1
"null.shouldFixAllLineDelimiters()",1,1,1
"null.shouldRemoveOriginalImports()",1,1,1
"null.sourceEnd()",1,1,1
"null.sourceStart()",1,1,1
"null.toField()",1,1,1
"null.toMethodParameter(short)",1,1,1
"null.toMethodReturn()",1,1,1
"null.toNextArrayDimension()",1,1,1
"null.toNextNestedType()",1,1,1
"null.toReceiver()",1,1,1
"null.toString()",1,1,1
"null.toSupertype(short,char[])",1,1,1
"null.toThrows(int)",1,1,1
"null.toTypeArgument(int)",1,1,1
"null.toTypeBound(short)",1,1,1
"null.toTypeParameter(boolean,int)",1,1,1
"null.toTypeParameterBounds(boolean,int)",1,1,1
"null.toWildcardBound()",1,1,1
"null.token(Token,int)",2,4,8
"org.eclipse.jdt.core.BindingKey.BindingKey(String)",1,1,1
"org.eclipse.jdt.core.BindingKey.createArrayTypeBindingKey(String,int)",1,2,2
"org.eclipse.jdt.core.BindingKey.createParameterizedTypeBindingKey(String,String[])",1,2,2
"org.eclipse.jdt.core.BindingKey.createTypeBindingKey(String)",1,1,1
"org.eclipse.jdt.core.BindingKey.createTypeVariableBindingKey(String,String)",1,1,1
"org.eclipse.jdt.core.BindingKey.createWilcardTypeBindingKey(String,char)",4,2,4
"org.eclipse.jdt.core.BindingKey.createWildcardTypeBindingKey(String,char,String,int)",2,2,5
"org.eclipse.jdt.core.BindingKey.getDeclaringType()",4,2,5
"org.eclipse.jdt.core.BindingKey.getThrownExceptions()",1,1,1
"org.eclipse.jdt.core.BindingKey.getTypeArguments()",1,1,1
"org.eclipse.jdt.core.BindingKey.isParameterizedMethod()",1,1,1
"org.eclipse.jdt.core.BindingKey.isParameterizedType()",1,1,1
"org.eclipse.jdt.core.BindingKey.isRawType()",1,1,1
"org.eclipse.jdt.core.BindingKey.toSignature()",1,1,1
"org.eclipse.jdt.core.BindingKey.toString()",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.BufferChangedEvent(IBuffer,int,int,String)",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getBuffer()",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getLength()",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getOffset()",1,1,1
"org.eclipse.jdt.core.BufferChangedEvent.getText()",1,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.ClasspathContainerInitializer()",1,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.canUpdateClasspathContainer(IPath,IJavaProject)",1,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.getAccessRulesStatus(IPath,IJavaProject)",2,1,2
"org.eclipse.jdt.core.ClasspathContainerInitializer.getAttributeStatus(IPath,IJavaProject,String)",2,1,2
"org.eclipse.jdt.core.ClasspathContainerInitializer.getComparisonID(IPath,IJavaProject)",2,2,2
"org.eclipse.jdt.core.ClasspathContainerInitializer.getDescription(IPath,IJavaProject)",1,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.getFailureContainer(IPath,IJavaProject)",1,1,1
"org.eclipse.jdt.core.ClasspathContainerInitializer.getSourceAttachmentStatus(IPath,IJavaProject)",2,1,2
"org.eclipse.jdt.core.ClasspathContainerInitializer.requestClasspathContainerUpdate(IPath,IJavaProject,IClasspathContainer)",1,1,1
"org.eclipse.jdt.core.ClasspathVariableInitializer.ClasspathVariableInitializer()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getEnclosingElement()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getExpectedTypesKeys()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getExpectedTypesSignatures()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getOffset()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getToken()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getTokenEnd()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getTokenKind()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getTokenLocation()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getTokenStart()",1,1,1
"org.eclipse.jdt.core.CompletionContext.getVisibleElements(String)",1,1,1
"org.eclipse.jdt.core.CompletionContext.isExtended()",1,1,1
"org.eclipse.jdt.core.CompletionContext.isInJavadoc()",1,1,1
"org.eclipse.jdt.core.CompletionContext.isInJavadocFormalReference()",1,1,1
"org.eclipse.jdt.core.CompletionContext.isInJavadocText()",1,1,1
"org.eclipse.jdt.core.CompletionFlags.CompletionFlags()",1,1,1
"org.eclipse.jdt.core.CompletionFlags.isStaticImport(int)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.canUseDiamond(CompletionContext)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.create(int,int)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.findParameterNames(IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getAccessibility()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getAdditionalFlags()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getCompletion()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getCompletionLocation()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getDeclarationKey()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getDeclarationSignature()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getFlags()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getKey()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getKind()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getName()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getReceiverEnd()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getReceiverSignature()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getReceiverStart()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getRelevance()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getReplaceEnd()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getReplaceStart()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getRequiredProposals()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getSignature()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getTokenEnd()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.getTokenStart()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.isConstructor()",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setAdditionalFlags(int)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setCompletion(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setDeclarationKey(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setDeclarationSignature(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setFlags(int)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setKey(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setName(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setParameterNames(char[][])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setReceiverRange(int,int)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setReceiverSignature(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setRelevance(int)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setReplaceRange(int,int)",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setRequiredProposals(CompletionProposal[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setSignature(char[])",1,1,1
"org.eclipse.jdt.core.CompletionProposal.setTokenRange(int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.CompletionRequestor()",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.CompletionRequestor(boolean)",1,1,2
"org.eclipse.jdt.core.CompletionRequestor.acceptContext(CompletionContext)",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.beginReporting()",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.completionFailure(IProblem)",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.endReporting()",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.getFavoriteReferences()",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.isAllowingRequiredProposals(int,int)",4,1,6
"org.eclipse.jdt.core.CompletionRequestor.isExtendedContextRequired()",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.isIgnored(int)",2,1,3
"org.eclipse.jdt.core.CompletionRequestor.setAllowsRequiredProposals(int,int,boolean)",3,1,7
"org.eclipse.jdt.core.CompletionRequestor.setFavoriteReferences(String[])",1,1,1
"org.eclipse.jdt.core.CompletionRequestor.setIgnored(int,boolean)",2,1,4
"org.eclipse.jdt.core.CompletionRequestor.setRequireExtendedContext(boolean)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptAnonymousType(char[],char[],char[][],char[][],char[][],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptClass(char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptError(IProblem)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptField(char[],char[],char[],char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptInterface(char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptKeyword(char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptLabel(char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptLocalVariable(char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptMethod(char[],char[],char[],char[][],char[][],char[][],char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptMethodDeclaration(char[],char[],char[],char[][],char[][],char[][],char[],char[],char[],int,int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptModifier(char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptPackage(char[],char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptType(char[],char[],char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CompletionRequestorAdapter.acceptVariableName(char[],char[],char[],char[],int,int,int)",1,1,1
"org.eclipse.jdt.core.CorrectionEngine.CorrectionEngine(Map)",1,1,1
"org.eclipse.jdt.core.CorrectionEngine.computeCorrections(ICompilationUnit,int,int,int,String[],ICorrectionRequestor)",4,3,13
"org.eclipse.jdt.core.CorrectionEngine.computeCorrections(IMarker,ICompilationUnit,int,ICorrectionRequestor)",2,2,3
"org.eclipse.jdt.core.CorrectionEngine.computeCorrections(IProblem,ICompilationUnit,ICorrectionRequestor)",2,1,2
"org.eclipse.jdt.core.CorrectionEngine.correct(char[])",7,4,9
"org.eclipse.jdt.core.CorrectionEngine.getAllWarningTokens()",1,1,1
"org.eclipse.jdt.core.CorrectionEngine.getProblemArguments(IMarker)",1,1,1
"org.eclipse.jdt.core.CorrectionEngine.getWarningToken(int)",2,2,2
"org.eclipse.jdt.core.ElementChangedEvent.ElementChangedEvent(IJavaElementDelta,int)",1,1,1
"org.eclipse.jdt.core.ElementChangedEvent.getDelta()",1,1,1
"org.eclipse.jdt.core.ElementChangedEvent.getType()",1,1,1
"org.eclipse.jdt.core.Flags.Flags()",1,1,1
"org.eclipse.jdt.core.Flags.isAbstract(int)",1,1,1
"org.eclipse.jdt.core.Flags.isAnnnotationDefault(int)",1,1,1
"org.eclipse.jdt.core.Flags.isAnnotation(int)",1,1,1
"org.eclipse.jdt.core.Flags.isBridge(int)",1,1,1
"org.eclipse.jdt.core.Flags.isDefaultMethod(int)",1,1,1
"org.eclipse.jdt.core.Flags.isDeprecated(int)",1,1,1
"org.eclipse.jdt.core.Flags.isEnum(int)",1,1,1
"org.eclipse.jdt.core.Flags.isFinal(int)",1,1,1
"org.eclipse.jdt.core.Flags.isInterface(int)",1,1,1
"org.eclipse.jdt.core.Flags.isNative(int)",1,1,1
"org.eclipse.jdt.core.Flags.isPackageDefault(int)",1,1,1
"org.eclipse.jdt.core.Flags.isPrivate(int)",1,1,1
"org.eclipse.jdt.core.Flags.isProtected(int)",1,1,1
"org.eclipse.jdt.core.Flags.isPublic(int)",1,1,1
"org.eclipse.jdt.core.Flags.isStatic(int)",1,1,1
"org.eclipse.jdt.core.Flags.isStrictfp(int)",1,1,1
"org.eclipse.jdt.core.Flags.isSuper(int)",1,1,1
"org.eclipse.jdt.core.Flags.isSynchronized(int)",1,1,1
"org.eclipse.jdt.core.Flags.isSynthetic(int)",1,1,1
"org.eclipse.jdt.core.Flags.isTransient(int)",1,1,1
"org.eclipse.jdt.core.Flags.isVarargs(int)",1,1,1
"org.eclipse.jdt.core.Flags.isVolatile(int)",1,1,1
"org.eclipse.jdt.core.Flags.toString(int)",2,13,14
"org.eclipse.jdt.core.JavaConventions.JavaConventions()",1,1,1
"org.eclipse.jdt.core.JavaConventions.isOverlappingRoots(IPath,IPath)",2,2,4
"org.eclipse.jdt.core.JavaConventions.scannedIdentifier(String,String,String)",4,4,8
"org.eclipse.jdt.core.JavaConventions.validateClassFileName(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateClassFileName(String,String,String)",7,2,7
"org.eclipse.jdt.core.JavaConventions.validateClasspath(IJavaProject,IClasspathEntry[],IPath)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateClasspathEntry(IJavaProject,IClasspathEntry,boolean)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateCompilationUnitName(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateCompilationUnitName(String,String,String)",7,2,7
"org.eclipse.jdt.core.JavaConventions.validateFieldName(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateFieldName(String,String,String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateIdentifier(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateIdentifier(String,String,String)",2,2,2
"org.eclipse.jdt.core.JavaConventions.validateImportDeclaration(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateImportDeclaration(String,String,String)",4,4,5
"org.eclipse.jdt.core.JavaConventions.validateJavaTypeName(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateJavaTypeName(String,String,String)",9,4,10
"org.eclipse.jdt.core.JavaConventions.validateMethodName(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateMethodName(String,String,String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validatePackageName(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validatePackageName(String,String,String)",11,10,20
"org.eclipse.jdt.core.JavaConventions.validateTypeVariableName(String)",1,1,1
"org.eclipse.jdt.core.JavaConventions.validateTypeVariableName(String,String,String)",1,1,1
"org.eclipse.jdt.core.JavaCore.JavaCore()",1,1,1
"org.eclipse.jdt.core.JavaCore.addElementChangedListener(IElementChangedListener)",1,1,1
"org.eclipse.jdt.core.JavaCore.addElementChangedListener(IElementChangedListener,int)",1,1,1
"org.eclipse.jdt.core.JavaCore.addJavaElementMarkerAttributes(Map,IJavaElement)",1,3,4
"org.eclipse.jdt.core.JavaCore.addNonJavaResources(Object[],IContainer,int,ArrayList)",1,7,8
"org.eclipse.jdt.core.JavaCore.addPreProcessingResourceChangedListener(IResourceChangeListener)",1,1,1
"org.eclipse.jdt.core.JavaCore.addPreProcessingResourceChangedListener(IResourceChangeListener,int)",1,1,1
"org.eclipse.jdt.core.JavaCore.computeClasspathContainerInitializer(String)",7,9,12
"org.eclipse.jdt.core.JavaCore.configureJavaElementMarker(IMarker,IJavaElement)",1,3,4
"org.eclipse.jdt.core.JavaCore.create(IFile)",1,1,1
"org.eclipse.jdt.core.JavaCore.create(IFolder)",1,1,1
"org.eclipse.jdt.core.JavaCore.create(IProject)",2,1,2
"org.eclipse.jdt.core.JavaCore.create(IResource)",1,1,1
"org.eclipse.jdt.core.JavaCore.create(IResource,IJavaProject)",1,1,1
"org.eclipse.jdt.core.JavaCore.create(IWorkspaceRoot)",2,1,2
"org.eclipse.jdt.core.JavaCore.create(String)",1,1,1
"org.eclipse.jdt.core.JavaCore.create(String,WorkingCopyOwner)",2,1,3
"org.eclipse.jdt.core.JavaCore.createClassFileFrom(IFile)",1,1,1
"org.eclipse.jdt.core.JavaCore.createCompilationUnitFrom(IFile)",1,1,1
"org.eclipse.jdt.core.JavaCore.createJarPackageFragmentRootFrom(IFile)",1,1,1
"org.eclipse.jdt.core.JavaCore.getClasspathContainer(IPath,IJavaProject)",2,2,2
"org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer(String)",3,2,3
"org.eclipse.jdt.core.JavaCore.getClasspathVariable(String)",6,12,18
"org.eclipse.jdt.core.JavaCore.getClasspathVariableDeprecationMessage(String)",9,5,10
"org.eclipse.jdt.core.JavaCore.getClasspathVariableInitializer(String)",7,11,13
"org.eclipse.jdt.core.JavaCore.getClasspathVariableNames()",1,1,1
"org.eclipse.jdt.core.JavaCore.getDefaultOptions()",1,1,1
"org.eclipse.jdt.core.JavaCore.getEncoding()",1,2,3
"org.eclipse.jdt.core.JavaCore.getGeneratedResource(ICompilationUnit,IContainer,State,int,ArrayList)",1,7,7
"org.eclipse.jdt.core.JavaCore.getGeneratedResources(IRegion,boolean)",15,19,38
"org.eclipse.jdt.core.JavaCore.getJavaCore()",1,1,1
"org.eclipse.jdt.core.JavaCore.getJavaLikeExtensions()",1,1,1
"org.eclipse.jdt.core.JavaCore.getOption(String)",1,1,1
"org.eclipse.jdt.core.JavaCore.getOptionForConfigurableSeverity(int)",1,1,1
"org.eclipse.jdt.core.JavaCore.getOptions()",1,1,1
"org.eclipse.jdt.core.JavaCore.getPlugin()",1,1,1
"org.eclipse.jdt.core.JavaCore.getReferencedClasspathEntries(IClasspathEntry,IJavaProject)",1,1,1
"org.eclipse.jdt.core.JavaCore.getResolvedClasspathEntry(IClasspathEntry)",1,1,1
"org.eclipse.jdt.core.JavaCore.getResolvedVariablePath(IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.getSharedWorkingCopies(IBufferFactory)",1,2,2
"org.eclipse.jdt.core.JavaCore.getUserLibraryNames()",1,1,1
"org.eclipse.jdt.core.JavaCore.getWorkingCopies(WorkingCopyOwner)",2,1,3
"org.eclipse.jdt.core.JavaCore.initializeAfterLoad(IProgressMonitor)",3,30,40
"org.eclipse.jdt.core.JavaCore.isClasspathVariableReadOnly(String)",1,1,1
"org.eclipse.jdt.core.JavaCore.isJavaLikeFileName(String)",1,1,1
"org.eclipse.jdt.core.JavaCore.isReferencedBy(IJavaElement,IMarker)",8,6,10
"org.eclipse.jdt.core.JavaCore.isReferencedBy(IJavaElement,IMarkerDelta)",8,6,10
"org.eclipse.jdt.core.JavaCore.newAccessRule(IPath,int)",1,1,1
"org.eclipse.jdt.core.JavaCore.newClasspathAttribute(String,String)",1,1,1
"org.eclipse.jdt.core.JavaCore.newContainerEntry(IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newContainerEntry(IPath,IAccessRule[],IClasspathAttribute[],boolean)",3,3,5
"org.eclipse.jdt.core.JavaCore.newContainerEntry(IPath,boolean)",1,1,1
"org.eclipse.jdt.core.JavaCore.newLibraryEntry(IPath,IPath,IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newLibraryEntry(IPath,IPath,IPath,IAccessRule[],IClasspathAttribute[],boolean)",6,5,10
"org.eclipse.jdt.core.JavaCore.newLibraryEntry(IPath,IPath,IPath,boolean)",1,1,1
"org.eclipse.jdt.core.JavaCore.newProjectEntry(IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newProjectEntry(IPath,IAccessRule[],boolean,IClasspathAttribute[],boolean)",2,1,4
"org.eclipse.jdt.core.JavaCore.newProjectEntry(IPath,boolean)",2,1,2
"org.eclipse.jdt.core.JavaCore.newRegion()",1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[])",1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[],IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[],IPath[],IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newSourceEntry(IPath,IPath[],IPath[],IPath,IClasspathAttribute[])",3,1,6
"org.eclipse.jdt.core.JavaCore.newTypeHierarchy(IRegion,WorkingCopyOwner,IProgressMonitor)",2,1,2
"org.eclipse.jdt.core.JavaCore.newVariableEntry(IPath,IPath,IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.newVariableEntry(IPath,IPath,IPath,IAccessRule[],IClasspathAttribute[],boolean)",3,2,5
"org.eclipse.jdt.core.JavaCore.newVariableEntry(IPath,IPath,IPath,boolean)",1,1,1
"org.eclipse.jdt.core.JavaCore.removeClasspathVariable(String)",1,1,1
"org.eclipse.jdt.core.JavaCore.removeClasspathVariable(String,IProgressMonitor)",1,2,2
"org.eclipse.jdt.core.JavaCore.removeElementChangedListener(IElementChangedListener)",1,1,1
"org.eclipse.jdt.core.JavaCore.removeJavaLikeExtension(String)",1,1,1
"org.eclipse.jdt.core.JavaCore.removePreProcessingResourceChangedListener(IResourceChangeListener)",1,1,1
"org.eclipse.jdt.core.JavaCore.run(IWorkspaceRunnable,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.JavaCore.run(IWorkspaceRunnable,ISchedulingRule,IProgressMonitor)",1,2,2
"org.eclipse.jdt.core.JavaCore.setClasspathContainer(IPath,IJavaProject[],IClasspathContainer[],IProgressMonitor)",5,4,5
"org.eclipse.jdt.core.JavaCore.setClasspathVariable(String,IPath)",1,1,1
"org.eclipse.jdt.core.JavaCore.setClasspathVariable(String,IPath,IProgressMonitor)",2,1,2
"org.eclipse.jdt.core.JavaCore.setClasspathVariables(String[],IPath[],IProgressMonitor)",2,1,2
"org.eclipse.jdt.core.JavaCore.setComplianceOptions(String,Map)",2,2,7
"org.eclipse.jdt.core.JavaCore.setOptions(Hashtable<String, String>)",1,1,1
"org.eclipse.jdt.core.JavaCore.start(BundleContext)",1,1,1
"org.eclipse.jdt.core.JavaCore.stop(BundleContext)",1,1,1
"org.eclipse.jdt.core.JavaCore.verbose_failed_to_instanciate_container_initializer(String,IConfigurationElement)",1,1,1
"org.eclipse.jdt.core.JavaCore.verbose_failed_to_instanciate_variable_initializer(String,IConfigurationElement)",1,1,1
"org.eclipse.jdt.core.JavaCore.verbose_found_container_initializer(String,IConfigurationElement)",1,1,1
"org.eclipse.jdt.core.JavaCore.verbose_found_variable_initializer(String,IConfigurationElement)",1,1,1
"org.eclipse.jdt.core.JavaCore.verbose_no_variable_initializer_found(String)",1,1,1
"org.eclipse.jdt.core.JavaCore.verbose_triggering_variable_initialization(String,ClasspathVariableInitializer)",1,1,1
"org.eclipse.jdt.core.JavaCore.verbose_triggering_variable_initialization_invocation_trace()",1,1,1
"org.eclipse.jdt.core.JavaCore.verbose_variable_value_after_initialization(String,IPath)",1,1,1
"org.eclipse.jdt.core.JavaModelException.JavaModelException(CoreException)",1,1,1
"org.eclipse.jdt.core.JavaModelException.JavaModelException(IJavaModelStatus)",1,1,1
"org.eclipse.jdt.core.JavaModelException.JavaModelException(Throwable,int)",1,1,1
"org.eclipse.jdt.core.JavaModelException.getException()",2,2,2
"org.eclipse.jdt.core.JavaModelException.getJavaModelStatus()",2,1,2
"org.eclipse.jdt.core.JavaModelException.isDoesNotExist()",1,2,2
"org.eclipse.jdt.core.JavaModelException.printStackTrace(PrintStream)",1,2,2
"org.eclipse.jdt.core.JavaModelException.printStackTrace(PrintWriter)",1,2,2
"org.eclipse.jdt.core.JavaModelException.toString()",1,3,3
"org.eclipse.jdt.core.NamingConventions.NamingConventions()",1,1,1
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithPrefix(char[],boolean,int)",1,4,4
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithPrefixAndSuffix(char[],boolean,boolean,int)",1,8,9
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithSuffix(char[],boolean,int)",1,4,4
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.acceptNameWithoutPrefixAndSuffix(char[],int)",1,2,2
"org.eclipse.jdt.core.NamingConventions.NamingRequestor.getResults()",1,1,1
"org.eclipse.jdt.core.NamingConventions.convertCharsToString(char[][])",1,2,3
"org.eclipse.jdt.core.NamingConventions.convertStringToChars(String[])",1,3,4
"org.eclipse.jdt.core.NamingConventions.getBaseName(int,String,IJavaProject)",1,1,1
"org.eclipse.jdt.core.NamingConventions.getFieldVariableKind(int)",3,2,3
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForArgumentName(IJavaProject,String)",1,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForArgumentName(IJavaProject,char[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForFieldName(IJavaProject,String,int)",1,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForFieldName(IJavaProject,char[],int)",1,1,2
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForLocalVariableName(IJavaProject,String)",1,1,1
"org.eclipse.jdt.core.NamingConventions.removePrefixAndSuffixForLocalVariableName(IJavaProject,char[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestAccessorName(IJavaProject,char[],int)",1,5,5
"org.eclipse.jdt.core.NamingConventions.suggestArgumentNames(IJavaProject,String,String,int,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestArgumentNames(IJavaProject,char[],char[],int,char[][])",2,1,3
"org.eclipse.jdt.core.NamingConventions.suggestFieldNames(IJavaProject,String,String,int,int,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestFieldNames(IJavaProject,char[],char[],int,int,char[][])",2,1,4
"org.eclipse.jdt.core.NamingConventions.suggestGetterName(IJavaProject,String,int,boolean,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestGetterName(IJavaProject,char[],int,boolean,char[][])",3,5,5
"org.eclipse.jdt.core.NamingConventions.suggestLocalVariableNames(IJavaProject,String,String,int,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestLocalVariableNames(IJavaProject,char[],char[],int,char[][])",2,1,3
"org.eclipse.jdt.core.NamingConventions.suggestNewName(char[],char[][])",2,3,4
"org.eclipse.jdt.core.NamingConventions.suggestSetterName(IJavaProject,String,int,boolean,String[])",1,1,1
"org.eclipse.jdt.core.NamingConventions.suggestSetterName(IJavaProject,char[],int,boolean,char[][])",3,5,5
"org.eclipse.jdt.core.NamingConventions.suggestVariableNames(int,int,String,IJavaProject,int,String[],boolean)",1,1,1
"org.eclipse.jdt.core.Signature.Signature()",1,1,1
"org.eclipse.jdt.core.Signature.appendArgumentSimpleNames(char[],int,int,StringBuffer)",2,7,10
"org.eclipse.jdt.core.Signature.appendArrayTypeSignature(char[],int,boolean,StringBuffer)",1,1,1
"org.eclipse.jdt.core.Signature.appendArrayTypeSignature(char[],int,boolean,StringBuffer,boolean)",5,3,7
"org.eclipse.jdt.core.Signature.appendCaptureTypeSignature(char[],int,boolean,StringBuffer)",3,1,3
"org.eclipse.jdt.core.Signature.appendClassTypeSignature(char[],int,boolean,StringBuffer)",7,10,20
"org.eclipse.jdt.core.Signature.appendIntersectionTypeSignature(char[],int,boolean,StringBuffer)",8,3,8
"org.eclipse.jdt.core.Signature.appendSimpleName(char[],int,int,StringBuffer)",5,10,18
"org.eclipse.jdt.core.Signature.appendTypeArgumentSignature(char[],int,boolean,StringBuffer)",3,4,6
"org.eclipse.jdt.core.Signature.appendTypeArgumentSignatures(char[],int,boolean,StringBuffer)",6,4,7
"org.eclipse.jdt.core.Signature.appendTypeSignature(char[],int,boolean,StringBuffer)",1,1,1
"org.eclipse.jdt.core.Signature.appendTypeSignature(char[],int,boolean,StringBuffer,boolean)",11,10,21
"org.eclipse.jdt.core.Signature.checkArrayDimension(char[],int,int)",6,2,9
"org.eclipse.jdt.core.Signature.checkName(char[],char[],int,int)",6,3,6
"org.eclipse.jdt.core.Signature.checkNextChar(char[],char,int,int,boolean)",3,1,4
"org.eclipse.jdt.core.Signature.consumeWhitespace(char[],int,int)",3,3,4
"org.eclipse.jdt.core.Signature.createArraySignature(String,int)",1,1,1
"org.eclipse.jdt.core.Signature.createArraySignature(char[],int)",2,1,3
"org.eclipse.jdt.core.Signature.createCharArrayTypeSignature(char[],boolean)",4,1,4
"org.eclipse.jdt.core.Signature.createIntersectionTypeSignature(String[])",1,2,2
"org.eclipse.jdt.core.Signature.createIntersectionTypeSignature(char[][])",1,3,3
"org.eclipse.jdt.core.Signature.createMethodSignature(String[],String)",1,2,2
"org.eclipse.jdt.core.Signature.createMethodSignature(char[][],char[])",1,2,3
"org.eclipse.jdt.core.Signature.createTypeParameterSignature(String,String[])",1,2,2
"org.eclipse.jdt.core.Signature.createTypeParameterSignature(char[],char[][])",2,3,4
"org.eclipse.jdt.core.Signature.createTypeSignature(String,boolean)",1,2,2
"org.eclipse.jdt.core.Signature.createTypeSignature(char[],boolean)",1,1,1
"org.eclipse.jdt.core.Signature.encodeArrayDimension(char[],int,int,StringBuffer)",1,3,3
"org.eclipse.jdt.core.Signature.encodeQualifiedName(char[],int,int,StringBuffer)",6,7,10
"org.eclipse.jdt.core.Signature.encodeTypeSignature(char[],int,boolean,int,StringBuffer)",16,21,32
"org.eclipse.jdt.core.Signature.getArrayCount(String)",1,1,1
"org.eclipse.jdt.core.Signature.getArrayCount(char[])",1,1,3
"org.eclipse.jdt.core.Signature.getElementType(String)",1,1,2
"org.eclipse.jdt.core.Signature.getElementType(char[])",2,1,2
"org.eclipse.jdt.core.Signature.getIntersectionTypeBounds(String)",1,1,1
"org.eclipse.jdt.core.Signature.getIntersectionTypeBounds(char[])",6,3,6
"org.eclipse.jdt.core.Signature.getParameterCount(String)",1,1,1
"org.eclipse.jdt.core.Signature.getParameterCount(char[])",5,2,6
"org.eclipse.jdt.core.Signature.getParameterTypes(String)",1,1,1
"org.eclipse.jdt.core.Signature.getParameterTypes(char[])",6,2,7
"org.eclipse.jdt.core.Signature.getQualifier(String)",2,1,2
"org.eclipse.jdt.core.Signature.getQualifier(char[])",2,1,3
"org.eclipse.jdt.core.Signature.getReturnType(String)",1,1,1
"org.eclipse.jdt.core.Signature.getReturnType(char[])",2,1,2
"org.eclipse.jdt.core.Signature.getSignatureQualifier(String)",1,2,2
"org.eclipse.jdt.core.Signature.getSignatureQualifier(char[])",8,5,10
"org.eclipse.jdt.core.Signature.getSignatureSimpleName(String)",1,2,2
"org.eclipse.jdt.core.Signature.getSignatureSimpleName(char[])",10,7,13
"org.eclipse.jdt.core.Signature.getSimpleName(String)",6,4,11
"org.eclipse.jdt.core.Signature.getSimpleName(char[])",6,3,11
"org.eclipse.jdt.core.Signature.getSimpleNames(String)",1,1,1
"org.eclipse.jdt.core.Signature.getSimpleNames(char[])",6,4,9
"org.eclipse.jdt.core.Signature.getThrownExceptionTypes(String)",1,1,1
"org.eclipse.jdt.core.Signature.getThrownExceptionTypes(char[])",6,3,6
"org.eclipse.jdt.core.Signature.getTypeArguments(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeArguments(char[])",7,4,11
"org.eclipse.jdt.core.Signature.getTypeErasure(String)",1,1,2
"org.eclipse.jdt.core.Signature.getTypeErasure(char[])",6,4,9
"org.eclipse.jdt.core.Signature.getTypeParameterBounds(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeParameterBounds(char[])",5,3,6
"org.eclipse.jdt.core.Signature.getTypeParameters(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeParameters(char[])",8,5,20
"org.eclipse.jdt.core.Signature.getTypeSignatureKind(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeSignatureKind(char[])",14,3,16
"org.eclipse.jdt.core.Signature.getTypeVariable(String)",1,1,1
"org.eclipse.jdt.core.Signature.getTypeVariable(char[])",2,1,2
"org.eclipse.jdt.core.Signature.removeCapture(String)",2,1,2
"org.eclipse.jdt.core.Signature.removeCapture(char[])",1,1,1
"org.eclipse.jdt.core.Signature.toCharArray(char[])",3,2,4
"org.eclipse.jdt.core.Signature.toCharArray(char[],char[],char[][],boolean,boolean)",1,1,1
"org.eclipse.jdt.core.Signature.toCharArray(char[],char[],char[][],boolean,boolean,boolean)",4,7,10
"org.eclipse.jdt.core.Signature.toQualifiedName(String[])",1,2,2
"org.eclipse.jdt.core.Signature.toQualifiedName(char[][])",3,2,6
"org.eclipse.jdt.core.Signature.toString(String)",1,1,1
"org.eclipse.jdt.core.Signature.toString(String,String,String[],boolean,boolean)",1,1,1
"org.eclipse.jdt.core.Signature.toString(String,String,String[],boolean,boolean,boolean)",1,4,4
"org.eclipse.jdt.core.SourceRange.SourceRange(int,int)",1,1,1
"org.eclipse.jdt.core.SourceRange.equals(Object)",2,2,3
"org.eclipse.jdt.core.SourceRange.getLength()",1,1,1
"org.eclipse.jdt.core.SourceRange.getOffset()",1,1,1
"org.eclipse.jdt.core.SourceRange.hashCode()",1,1,1
"org.eclipse.jdt.core.SourceRange.isAvailable(ISourceRange)",1,2,2
"org.eclipse.jdt.core.SourceRange.toString()",1,1,1
"org.eclipse.jdt.core.ToolFactory.createCodeFormatter()",6,4,7
"org.eclipse.jdt.core.ToolFactory.createCodeFormatter(Map)",1,1,1
"org.eclipse.jdt.core.ToolFactory.createCodeFormatter(Map,int)",7,11,11
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileBytesDisassembler()",1,1,1
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileDisassembler()",1,1,1
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(IClassFile,int)",3,4,6
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(InputStream,int)",1,1,3
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(String,String,int)",3,3,8
"org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(String,int)",1,1,3
"org.eclipse.jdt.core.ToolFactory.createDefaultCodeFormatter(Map)",1,2,2
"org.eclipse.jdt.core.ToolFactory.createScanner(boolean,boolean,boolean,String)",1,1,3
"org.eclipse.jdt.core.ToolFactory.createScanner(boolean,boolean,boolean,String,String)",1,1,3
"org.eclipse.jdt.core.ToolFactory.createScanner(boolean,boolean,boolean,boolean)",1,1,3
"org.eclipse.jdt.core.WorkingCopyOwner.createBuffer(ICompilationUnit)",1,1,1
"org.eclipse.jdt.core.WorkingCopyOwner.findSource(String,String)",1,1,1
"org.eclipse.jdt.core.WorkingCopyOwner.getProblemRequestor(ICompilationUnit)",1,1,1
"org.eclipse.jdt.core.WorkingCopyOwner.isPackage(String[])",1,1,1
"org.eclipse.jdt.core.WorkingCopyOwner.newWorkingCopy(String,IClasspathEntry[],IProblemRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.WorkingCopyOwner.newWorkingCopy(String,IClasspathEntry[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.WorkingCopyOwner.setPrimaryBufferProvider(WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.core.compiler.BuildContext.getContents()",1,1,1
"org.eclipse.jdt.core.compiler.BuildContext.getFile()",1,1,1
"org.eclipse.jdt.core.compiler.BuildContext.hasAnnotations()",1,1,1
"org.eclipse.jdt.core.compiler.BuildContext.recordAddedGeneratedFiles(IFile[])",1,1,1
"org.eclipse.jdt.core.compiler.BuildContext.recordDeletedGeneratedFiles(IFile[])",1,1,1
"org.eclipse.jdt.core.compiler.BuildContext.recordDependencies(String[])",1,1,1
"org.eclipse.jdt.core.compiler.BuildContext.recordNewProblems(CategorizedProblem[])",1,1,1
"org.eclipse.jdt.core.compiler.CategorizedProblem.getExtraMarkerAttributeNames()",1,1,1
"org.eclipse.jdt.core.compiler.CategorizedProblem.getExtraMarkerAttributeValues()",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.append(char[],char)",2,1,2
"org.eclipse.jdt.core.compiler.CharOperation.append(char[],char[])",2,2,4
"org.eclipse.jdt.core.compiler.CharOperation.append(char[],int,char[],int,int)",1,2,2
"org.eclipse.jdt.core.compiler.CharOperation.arrayConcat(char[][],char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.arrayConcat(char[][],char[][])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.camelCaseMatch(char[],char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.camelCaseMatch(char[],char[],boolean)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.camelCaseMatch(char[],int,int,char[],int,int)",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.camelCaseMatch(char[],int,int,char[],int,int,boolean)",30,13,37
"org.eclipse.jdt.core.compiler.CharOperation.charArrayToStringArray(char[][])",3,1,4
"org.eclipse.jdt.core.compiler.CharOperation.charToString(char[])",2,1,2
"org.eclipse.jdt.core.compiler.CharOperation.compareTo(char[],char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.compareTo(char[],char[],int,int)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.compareWith(char[],char[])",4,1,4
"org.eclipse.jdt.core.compiler.CharOperation.concat(char,char[],char)",2,1,2
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char,char[],char,char[])",4,4,4
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char[],char)",5,1,5
"org.eclipse.jdt.core.compiler.CharOperation.concat(char[],char[],char[])",4,4,4
"org.eclipse.jdt.core.compiler.CharOperation.concatWith(char[],char[][],char)",3,4,9
"org.eclipse.jdt.core.compiler.CharOperation.concatWith(char[][],char)",3,3,9
"org.eclipse.jdt.core.compiler.CharOperation.concatWith(char[][],char[],char)",3,4,9
"org.eclipse.jdt.core.compiler.CharOperation.contains(char,char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.contains(char,char[][])",4,1,4
"org.eclipse.jdt.core.compiler.CharOperation.contains(char[],char[])",4,1,4
"org.eclipse.jdt.core.compiler.CharOperation.deepCopy(char[][])",1,2,2
"org.eclipse.jdt.core.compiler.CharOperation.endsWith(char[],char[])",4,1,4
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[])",6,1,7
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[],boolean)",7,3,8
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[],int,int)",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[],char[],int,int,boolean)",9,3,10
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[][],char[][])",6,2,7
"org.eclipse.jdt.core.compiler.CharOperation.equals(char[][],char[][],boolean)",7,3,8
"org.eclipse.jdt.core.compiler.CharOperation.fragmentEquals(char[],char[],int,boolean)",7,2,7
"org.eclipse.jdt.core.compiler.CharOperation.hashCode(char[])",1,1,6
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char,char[])",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char,char[],int)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char,char[],int,int)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char[],char[],boolean)",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char[],char[],boolean,int)",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.indexOf(char[],char[],boolean,int,int)",17,8,19
"org.eclipse.jdt.core.compiler.CharOperation.isWhitespace(char)",1,1,2
"org.eclipse.jdt.core.compiler.CharOperation.lastIndexOf(char,char[])",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.lastIndexOf(char,char[],int)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.lastIndexOf(char,char[],int,int)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.lastSegment(char[],char)",2,1,2
"org.eclipse.jdt.core.compiler.CharOperation.match(char[],char[],boolean)",3,1,3
"org.eclipse.jdt.core.compiler.CharOperation.match(char[],int,int,char[],int,int,boolean)",14,7,25
"org.eclipse.jdt.core.compiler.CharOperation.occurencesOf(char,char[])",1,1,3
"org.eclipse.jdt.core.compiler.CharOperation.occurencesOf(char,char[],int)",1,1,3
"org.eclipse.jdt.core.compiler.CharOperation.parseInt(char[],int,int)",3,2,4
"org.eclipse.jdt.core.compiler.CharOperation.pathMatch(char[],char[],boolean,char)",15,7,49
"org.eclipse.jdt.core.compiler.CharOperation.prefixEquals(char[],char[])",4,1,4
"org.eclipse.jdt.core.compiler.CharOperation.prefixEquals(char[],char[],boolean)",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.prefixEquals(char[],char[],boolean,int)",7,2,7
"org.eclipse.jdt.core.compiler.CharOperation.remove(char[],char)",4,4,8
"org.eclipse.jdt.core.compiler.CharOperation.replace(char[],char,char)",1,1,4
"org.eclipse.jdt.core.compiler.CharOperation.replace(char[],char[],char)",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.replace(char[],char[],char,int,int)",1,1,4
"org.eclipse.jdt.core.compiler.CharOperation.replace(char[],char[],char[])",4,5,7
"org.eclipse.jdt.core.compiler.CharOperation.replaceOnCopy(char[],char,char)",2,4,6
"org.eclipse.jdt.core.compiler.CharOperation.splitAndTrimOn(char,char[])",2,3,15
"org.eclipse.jdt.core.compiler.CharOperation.splitOn(char,char[])",2,3,7
"org.eclipse.jdt.core.compiler.CharOperation.splitOn(char,char[],int,int)",2,3,8
"org.eclipse.jdt.core.compiler.CharOperation.subarray(char[],int,int)",4,1,5
"org.eclipse.jdt.core.compiler.CharOperation.subarray(char[][],int,int)",4,1,5
"org.eclipse.jdt.core.compiler.CharOperation.toLowerCase(char[])",2,4,7
"org.eclipse.jdt.core.compiler.CharOperation.toString(char[][])",1,1,1
"org.eclipse.jdt.core.compiler.CharOperation.toStrings(char[][])",3,1,4
"org.eclipse.jdt.core.compiler.CharOperation.toUpperCase(char[])",2,4,7
"org.eclipse.jdt.core.compiler.CharOperation.trim(char[])",3,2,8
"org.eclipse.jdt.core.compiler.CompilationParticipant.aboutToBuild(IJavaProject)",1,1,1
"org.eclipse.jdt.core.compiler.CompilationParticipant.buildFinished(IJavaProject)",1,1,1
"org.eclipse.jdt.core.compiler.CompilationParticipant.buildStarting(BuildContext[],boolean)",1,1,1
"org.eclipse.jdt.core.compiler.CompilationParticipant.cleanStarting(IJavaProject)",1,1,1
"org.eclipse.jdt.core.compiler.CompilationParticipant.isActive(IJavaProject)",1,1,1
"org.eclipse.jdt.core.compiler.CompilationParticipant.isAnnotationProcessor()",1,1,1
"org.eclipse.jdt.core.compiler.CompilationParticipant.processAnnotations(BuildContext[])",1,1,1
"org.eclipse.jdt.core.compiler.CompilationParticipant.reconcile(ReconcileContext)",1,1,1
"org.eclipse.jdt.core.compiler.InvalidInputException.InvalidInputException()",1,1,1
"org.eclipse.jdt.core.compiler.InvalidInputException.InvalidInputException(String)",1,1,1
"org.eclipse.jdt.core.compiler.ReconcileContext.ReconcileContext(ReconcileWorkingCopyOperation,CompilationUnit)",1,1,1
"org.eclipse.jdt.core.compiler.ReconcileContext.getAST3()",2,3,4
"org.eclipse.jdt.core.compiler.ReconcileContext.getAST4()",2,3,4
"org.eclipse.jdt.core.compiler.ReconcileContext.getAST8()",2,3,4
"org.eclipse.jdt.core.compiler.ReconcileContext.getASTLevel()",1,1,1
"org.eclipse.jdt.core.compiler.ReconcileContext.getDelta()",1,1,1
"org.eclipse.jdt.core.compiler.ReconcileContext.getProblems(String)",2,1,2
"org.eclipse.jdt.core.compiler.ReconcileContext.getReconcileFlags()",1,1,1
"org.eclipse.jdt.core.compiler.ReconcileContext.getWorkingCopy()",1,1,1
"org.eclipse.jdt.core.compiler.ReconcileContext.isResolvingBindings()",1,1,1
"org.eclipse.jdt.core.compiler.ReconcileContext.putProblems(String,CategorizedProblem[])",1,1,2
"org.eclipse.jdt.core.compiler.ReconcileContext.resetAST()",1,1,1
"org.eclipse.jdt.core.compiler.batch.BatchCompiler.BatchCompiler()",1,1,1
"org.eclipse.jdt.core.compiler.batch.BatchCompiler.compile(String,PrintWriter,PrintWriter,CompilationProgress)",1,1,1
"org.eclipse.jdt.core.compiler.batch.BatchCompiler.compile(String[],PrintWriter,PrintWriter,CompilationProgress)",1,1,1
"org.eclipse.jdt.core.dom.AST.AST()",1,1,1
"org.eclipse.jdt.core.dom.AST.AST(Map)",1,5,7
"org.eclipse.jdt.core.dom.AST.AST(int)",2,2,5
"org.eclipse.jdt.core.dom.AST.apiLevel()",1,1,1
"org.eclipse.jdt.core.dom.AST.convertCompilationUnit(int,CompilationUnitDeclaration,Map,boolean,CompilationUnit,int,IProgressMonitor)",1,2,2
"org.eclipse.jdt.core.dom.AST.convertCompilationUnit(int,CompilationUnitDeclaration,char[],Map,boolean,CompilationUnit,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.dom.AST.createInstance(Class)",2,2,6
"org.eclipse.jdt.core.dom.AST.createInstance(int)",1,1,1
"org.eclipse.jdt.core.dom.AST.disableEvents()",1,1,1
"org.eclipse.jdt.core.dom.AST.getBindingResolver()",1,1,1
"org.eclipse.jdt.core.dom.AST.getDefaultNodeFlag()",1,1,1
"org.eclipse.jdt.core.dom.AST.getEventHandler()",1,1,1
"org.eclipse.jdt.core.dom.AST.hasBindingsRecovery()",1,1,1
"org.eclipse.jdt.core.dom.AST.hasResolvedBindings()",1,1,1
"org.eclipse.jdt.core.dom.AST.hasStatementsRecovery()",1,1,1
"org.eclipse.jdt.core.dom.AST.internalNewName(String[])",2,2,3
"org.eclipse.jdt.core.dom.AST.modificationCount()",1,1,1
"org.eclipse.jdt.core.dom.AST.modifying()",2,1,2
"org.eclipse.jdt.core.dom.AST.newAST(int)",1,1,1
"org.eclipse.jdt.core.dom.AST.newAnnotationTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newAnnotationTypeMemberDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newAnonymousClassDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newArrayAccess()",1,1,1
"org.eclipse.jdt.core.dom.AST.newArrayCreation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newArrayInitializer()",1,1,1
"org.eclipse.jdt.core.dom.AST.newArrayType(Type)",3,2,3
"org.eclipse.jdt.core.dom.AST.newArrayType(Type,int)",6,4,9
"org.eclipse.jdt.core.dom.AST.newAssertStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newAssignment()",1,1,1
"org.eclipse.jdt.core.dom.AST.newBlock()",1,1,1
"org.eclipse.jdt.core.dom.AST.newBlockComment()",1,1,1
"org.eclipse.jdt.core.dom.AST.newBooleanLiteral(boolean)",1,1,1
"org.eclipse.jdt.core.dom.AST.newBreakStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newCastExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newCatchClause()",1,1,1
"org.eclipse.jdt.core.dom.AST.newCharacterLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newClassInstanceCreation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newCompilationUnit()",1,1,1
"org.eclipse.jdt.core.dom.AST.newConditionalExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newConstructorInvocation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newContinueStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newCreationReference()",1,1,1
"org.eclipse.jdt.core.dom.AST.newDimension()",1,1,1
"org.eclipse.jdt.core.dom.AST.newDoStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newEmptyStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newEnhancedForStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newEnumConstantDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newEnumDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newExpressionMethodReference()",1,1,1
"org.eclipse.jdt.core.dom.AST.newExpressionStatement(Expression)",1,1,1
"org.eclipse.jdt.core.dom.AST.newFieldAccess()",1,1,1
"org.eclipse.jdt.core.dom.AST.newFieldDeclaration(VariableDeclarationFragment)",2,1,2
"org.eclipse.jdt.core.dom.AST.newForStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newIfStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newImportDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newInfixExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newInitializer()",1,1,1
"org.eclipse.jdt.core.dom.AST.newInstanceofExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newIntersectionType()",1,1,1
"org.eclipse.jdt.core.dom.AST.newJavadoc()",1,1,1
"org.eclipse.jdt.core.dom.AST.newLabeledStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newLambdaExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newLineComment()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMarkerAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMemberRef()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMemberValuePair()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMethodDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMethodInvocation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMethodRef()",1,1,1
"org.eclipse.jdt.core.dom.AST.newMethodRefParameter()",1,1,1
"org.eclipse.jdt.core.dom.AST.newModifier(ModifierKeyword)",1,1,1
"org.eclipse.jdt.core.dom.AST.newModifiers(int)",1,14,14
"org.eclipse.jdt.core.dom.AST.newName(String)",6,4,7
"org.eclipse.jdt.core.dom.AST.newName(String[])",2,2,3
"org.eclipse.jdt.core.dom.AST.newNameQualifiedType(Name,SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.AST.newNormalAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newNullLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newNumberLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newNumberLiteral(String)",2,1,2
"org.eclipse.jdt.core.dom.AST.newPackageDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newParameterizedType(Type)",1,1,1
"org.eclipse.jdt.core.dom.AST.newParenthesizedExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newPostfixExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newPrefixExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newPrimitiveType(Code)",1,1,1
"org.eclipse.jdt.core.dom.AST.newQualifiedName(Name,SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.AST.newQualifiedType(Type,SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.AST.newReturnStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSimpleName(String)",2,1,2
"org.eclipse.jdt.core.dom.AST.newSimpleType(Name)",1,1,1
"org.eclipse.jdt.core.dom.AST.newSingleMemberAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSingleVariableDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newStringLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSuperConstructorInvocation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSuperFieldAccess()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSuperMethodInvocation()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSuperMethodReference()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSwitchCase()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSwitchStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newSynchronizedStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTagElement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTextElement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newThisExpression()",1,1,1
"org.eclipse.jdt.core.dom.AST.newThrowStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTryStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTypeDeclarationStatement(AbstractTypeDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.AST.newTypeDeclarationStatement(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.AST.newTypeLiteral()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTypeMethodReference()",1,1,1
"org.eclipse.jdt.core.dom.AST.newTypeParameter()",1,1,1
"org.eclipse.jdt.core.dom.AST.newUnionType()",1,1,1
"org.eclipse.jdt.core.dom.AST.newVariableDeclarationExpression(VariableDeclarationFragment)",2,1,2
"org.eclipse.jdt.core.dom.AST.newVariableDeclarationFragment()",1,1,1
"org.eclipse.jdt.core.dom.AST.newVariableDeclarationStatement(VariableDeclarationFragment)",2,1,2
"org.eclipse.jdt.core.dom.AST.newWhileStatement()",1,1,1
"org.eclipse.jdt.core.dom.AST.newWildcardType()",1,1,1
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(IClassFile,boolean)",2,1,3
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(ICompilationUnit,boolean)",1,1,2
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(char[])",2,1,2
"org.eclipse.jdt.core.dom.AST.parseCompilationUnit(char[],String,IJavaProject)",2,1,2
"org.eclipse.jdt.core.dom.AST.postAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.postCloneNodeEvent(ASTNode,ASTNode)",2,2,2
"org.eclipse.jdt.core.dom.AST.postRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.postReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.postValueChangeEvent(ASTNode,SimplePropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.preAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.preCloneNodeEvent(ASTNode)",2,2,2
"org.eclipse.jdt.core.dom.AST.preRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.preReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.preValueChangeEvent(ASTNode,SimplePropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AST.recordModifications(CompilationUnit)",5,4,5
"org.eclipse.jdt.core.dom.AST.reenableEvents()",1,1,1
"org.eclipse.jdt.core.dom.AST.resolveWellKnownType(String)",2,1,2
"org.eclipse.jdt.core.dom.AST.rewrite(IDocument,Map)",3,1,3
"org.eclipse.jdt.core.dom.AST.setArrayComponentType(ArrayType,Type)",1,1,1
"org.eclipse.jdt.core.dom.AST.setBindingResolver(BindingResolver)",2,1,2
"org.eclipse.jdt.core.dom.AST.setDefaultNodeFlag(int)",1,1,1
"org.eclipse.jdt.core.dom.AST.setEventHandler(NodeEventHandler)",2,1,2
"org.eclipse.jdt.core.dom.AST.setFlag(int)",1,1,1
"org.eclipse.jdt.core.dom.AST.setOriginalModificationCount(long)",1,1,1
"org.eclipse.jdt.core.dom.AST.supportedOnlyIn2()",2,1,2
"org.eclipse.jdt.core.dom.AST.unsupportedIn2()",2,1,2
"org.eclipse.jdt.core.dom.ASTConverter.ASTConverter(Map,boolean,IProgressMonitor)",1,1,2
"org.eclipse.jdt.core.dom.ASTConverter.adjustSourcePositionsForParent(Expression)",2,3,7
"org.eclipse.jdt.core.dom.ASTConverter.annotateType(AnnotatableType,Annotation[])",2,4,9
"org.eclipse.jdt.core.dom.ASTConverter.annotateTypeParameter(TypeParameter,Annotation[])",2,4,5
"org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(TypeDeclaration,AbstractTypeDeclaration,boolean)",2,7,20
"org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(TypeDeclaration,AnonymousClassDeclaration)",2,7,20
"org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(TypeDeclaration,EnumDeclaration)",2,6,19
"org.eclipse.jdt.core.dom.ASTConverter.buildCommentsTable(CompilationUnit,int[][])",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(FieldDeclaration[],int,List)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(Statement[],int,List)",1,3,4
"org.eclipse.jdt.core.dom.ASTConverter.checkAndSetMalformed(ASTNode,ASTNode)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.checkCanceled()",2,2,3
"org.eclipse.jdt.core.dom.ASTConverter.completeRecord(ArrayType,ASTNode)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.componentType(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(AND_AND_Expression)",4,11,17
"org.eclipse.jdt.core.dom.ASTConverter.convert(ASTNode[])",1,10,12
"org.eclipse.jdt.core.dom.ASTConverter.convert(AllocationExpression)",3,8,10
"org.eclipse.jdt.core.dom.ASTConverter.convert(Annotation)",3,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(AnnotationMethodDeclaration)",2,4,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(Argument)",2,15,17
"org.eclipse.jdt.core.dom.ASTConverter.convert(ArrayAllocationExpression)",1,11,11
"org.eclipse.jdt.core.dom.ASTConverter.convert(ArrayInitializer)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(ArrayReference)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(AssertStatement)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(Assignment)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(BinaryExpression)",5,13,21
"org.eclipse.jdt.core.dom.ASTConverter.convert(Block)",1,6,6
"org.eclipse.jdt.core.dom.ASTConverter.convert(BreakStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CaseStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CastExpression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CharLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ClassLiteralAccess)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(CompilationUnitDeclaration,char[])",7,19,20
"org.eclipse.jdt.core.dom.ASTConverter.convert(CompoundAssignment)",2,3,13
"org.eclipse.jdt.core.dom.ASTConverter.convert(ConditionalExpression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ContinueStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(DoStatement)",2,1,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(DoubleLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(EqualExpression)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(ExplicitConstructorCall)",3,16,20
"org.eclipse.jdt.core.dom.ASTConverter.convert(Expression)",38,38,38
"org.eclipse.jdt.core.dom.ASTConverter.convert(ExtendedStringLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(FalseLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(FieldDeclaration)",1,8,9
"org.eclipse.jdt.core.dom.ASTConverter.convert(FieldReference)",2,8,8
"org.eclipse.jdt.core.dom.ASTConverter.convert(FloatLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(ForStatement)",2,10,11
"org.eclipse.jdt.core.dom.ASTConverter.convert(ForeachStatement)",5,3,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(IfStatement)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(InstanceOfExpression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(IntLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(IntLiteralMinValue)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Javadoc,BodyDeclaration)",1,9,10
"org.eclipse.jdt.core.dom.ASTConverter.convert(Javadoc,PackageDeclaration)",2,10,11
"org.eclipse.jdt.core.dom.ASTConverter.convert(LabeledStatement)",2,1,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(LambdaExpression)",2,8,8
"org.eclipse.jdt.core.dom.ASTConverter.convert(LongLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(LongLiteralMinValue)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(MarkerAnnotation)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(MemberValuePair)",1,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(MessageSend)",3,25,28
"org.eclipse.jdt.core.dom.ASTConverter.convert(NameReference)",2,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(NormalAnnotation)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(NullLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(OR_OR_Expression)",4,11,17
"org.eclipse.jdt.core.dom.ASTConverter.convert(PostfixExpression)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(PrefixExpression)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedAllocationExpression)",4,12,14
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedNameReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedSuperReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(QualifiedThisReference)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Reference)",5,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(ReferenceExpression)",2,14,17
"org.eclipse.jdt.core.dom.ASTConverter.convert(ReturnStatement)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(SingleMemberAnnotation)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(SingleNameReference)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(Statement)",24,24,26
"org.eclipse.jdt.core.dom.ASTConverter.convert(StringLiteral)",2,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(StringLiteralConcatenation)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(SwitchStatement)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(ThisReference)",4,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convert(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.convert(TrueLiteral)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(TryStatement)",2,7,8
"org.eclipse.jdt.core.dom.ASTConverter.convert(TypeDeclaration)",8,16,19
"org.eclipse.jdt.core.dom.ASTConverter.convert(TypeParameter)",1,6,8
"org.eclipse.jdt.core.dom.ASTConverter.convert(TypeReference)",2,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convert(UnaryExpression)",2,3,6
"org.eclipse.jdt.core.dom.ASTConverter.convert(WhileStatement)",2,1,2
"org.eclipse.jdt.core.dom.ASTConverter.convert(boolean,AbstractMethodDeclaration)",10,39,58
"org.eclipse.jdt.core.dom.ASTConverter.convertAndSetReceiver(AbstractMethodDeclaration,MethodDeclaration)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.convertImport(ImportReference)",2,7,8
"org.eclipse.jdt.core.dom.ASTConverter.convertPackage(CompilationUnitDeclaration)",2,7,8
"org.eclipse.jdt.core.dom.ASTConverter.convertToAnnotationDeclaration(TypeDeclaration)",2,2,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToArray(Type,int,int,int,Annotation[][])",2,6,6
"org.eclipse.jdt.core.dom.ASTConverter.convertToDimensions(int,int,Annotation[])",1,2,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToEnumDeclaration(TypeDeclaration)",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.convertToExpression(Statement)",2,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(FieldDeclaration)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(Expression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.convertToSingleVariableDeclaration(LocalDeclaration)",1,3,4
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationExpression(LocalDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(FieldDeclaration)",1,6,6
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(LocalDeclaration)",1,6,6
"org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(LocalDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.convertType(TypeReference)",20,49,84
"org.eclipse.jdt.core.dom.ASTConverter.createBaseType(TypeReference,long[],Annotation[][],char[][],int,int,boolean)",1,7,13
"org.eclipse.jdt.core.dom.ASTConverter.createComment(int[])",3,2,6
"org.eclipse.jdt.core.dom.ASTConverter.createFakeEmptyStatement(Statement)",2,1,2
"org.eclipse.jdt.core.dom.ASTConverter.createFakeNullLiteral(FunctionalExpression)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.createModifier(ModifierKeyword)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.createQualifiedType(TypeReference,long[],Annotation[][],char[][],int,Type)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.createSimpleName(TypeReference,long[],char[][],int)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.createSimpleType(Name,TypeReference,long[],int,int)",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.extractSubArrayType(ArrayType,int,int)",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.getOperatorFor(int)",20,2,20
"org.eclipse.jdt.core.dom.ASTConverter.getPrimitiveTypeCode(char[])",11,2,51
"org.eclipse.jdt.core.dom.ASTConverter.internalSetExtraDimensions(MethodDeclaration,int)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.internalSetExtraDimensions(SingleVariableDeclaration,int)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.internalSetExtraDimensions(VariableDeclarationFragment,int)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.internalThownExceptions(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.isPrimitiveType(char[])",18,2,51
"org.eclipse.jdt.core.dom.ASTConverter.lookupForScopes()",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.lookupScope(ASTNode)",8,8,17
"org.eclipse.jdt.core.dom.ASTConverter.recordName(Name,ASTNode)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.recordNodes(ASTNode,ASTNode)",2,1,3
"org.eclipse.jdt.core.dom.ASTConverter.recordNodes(Javadoc,TagElement)",3,26,33
"org.eclipse.jdt.core.dom.ASTConverter.recordPendingNameScopeResolution(Name)",1,1,2
"org.eclipse.jdt.core.dom.ASTConverter.recordPendingThisExpressionScopeResolution(ThisExpression)",1,1,2
"org.eclipse.jdt.core.dom.ASTConverter.removeLeadingAndTrailingCommentsFromLiteral(ASTNode)",3,3,6
"org.eclipse.jdt.core.dom.ASTConverter.retrieveClosingAngleBracketPosition(int)",5,2,6
"org.eclipse.jdt.core.dom.ASTConverter.retrieveColonPosition(ASTNode)",3,3,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveDimensionAndSetPositions(int,int,Dimension)",4,4,13
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEllipsisStartPosition(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndOfElementTypeNamePosition(int,int)",3,2,7
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndOfPotentialExtendedDimensions(int,int,int)",9,2,16
"org.eclipse.jdt.core.dom.ASTConverter.retrieveEndOfRightParenthesisPosition(int,int)",4,2,7
"org.eclipse.jdt.core.dom.ASTConverter.retrieveIdentifierAndSetPositions(int,int,Name)",3,3,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveIdentifierEndPosition(int,int)",3,3,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveInitAndSetPositions(int,int,Name)",3,3,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveProperRightBracketPosition(int,int)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.retrieveProperRightBracketPosition(int,int,int)",4,2,11
"org.eclipse.jdt.core.dom.ASTConverter.retrieveRightBrace(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveRightBraceOrSemiColonPosition(int,int)",4,2,5
"org.eclipse.jdt.core.dom.ASTConverter.retrieveSemiColonPosition(Expression)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveStartBlockPosition(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.retrieveStartingCatchPosition(int,int)",3,2,4
"org.eclipse.jdt.core.dom.ASTConverter.setAST(AST)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setExtraAnnotatedDimensions(int,int,TypeReference,List,int)",1,3,5
"org.eclipse.jdt.core.dom.ASTConverter.setInfixSourcePositions(InfixExpression,int)",1,2,3
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(AnnotationTypeDeclaration,TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(AnnotationTypeMemberDeclaration,AnnotationMethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(BodyDeclaration,Annotation[],int)",2,5,21
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(EnumConstantDeclaration,FieldDeclaration)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(EnumDeclaration,TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(FieldDeclaration,FieldDeclaration)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(Initializer,Initializer)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(MethodDeclaration,AbstractMethodDeclaration)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(SingleVariableDeclaration,Argument)",4,7,23
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(SingleVariableDeclaration,LocalDeclaration)",4,7,23
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(TypeDeclaration,TypeDeclaration)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(VariableDeclarationExpression,LocalDeclaration)",4,7,23
"org.eclipse.jdt.core.dom.ASTConverter.setModifiers(VariableDeclarationStatement,LocalDeclaration)",4,7,23
"org.eclipse.jdt.core.dom.ASTConverter.setQualifiedNameNameAndSourceRanges(char[][],long[],ASTNode)",1,5,5
"org.eclipse.jdt.core.dom.ASTConverter.setQualifiedNameNameAndSourceRanges(char[][],long[],int,TypeReference)",1,5,6
"org.eclipse.jdt.core.dom.ASTConverter.setSourceRangeAnnotationsAndRecordNodes(TypeReference,AnnotatableType,Annotation[][],int,int,int)",1,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setSourceRangeAnnotationsAndRecordNodes(TypeReference,AnnotatableType,long[],Annotation[][],int,int,int)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setTypeAnnotationsAndSourceRangeOnArray(ArrayType,Annotation[][])",1,2,2
"org.eclipse.jdt.core.dom.ASTConverter.setTypeAnnotationsOnDimension(Dimension,Annotation[][],int)",2,3,4
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForField(FieldDeclaration,Type,int)",1,6,6
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForMethodDeclaration(AnnotationTypeMemberDeclaration,Type,int)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForMethodDeclaration(MethodDeclaration,Type,int)",5,8,12
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForSingleVariableDeclaration(SingleVariableDeclaration,Type,int)",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForVariableDeclarationExpression(VariableDeclarationExpression,Type,int)",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.setTypeForVariableDeclarationStatement(VariableDeclarationStatement,Type,int)",1,4,4
"org.eclipse.jdt.core.dom.ASTConverter.setTypeNameForAnnotation(Annotation,Annotation)",1,3,3
"org.eclipse.jdt.core.dom.ASTConverter.trimWhiteSpacesAndComments(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.trimWhiteSpacesAndComments(Expression)",1,1,1
"org.eclipse.jdt.core.dom.ASTConverter.trimWhiteSpacesAndComments(int,int)",3,3,9
"org.eclipse.jdt.core.dom.ASTConverter.updateInnerPositions(Type,int)",1,3,3
"org.eclipse.jdt.core.dom.ASTMatcher.ASTMatcher()",1,1,1
"org.eclipse.jdt.core.dom.ASTMatcher.ASTMatcher(boolean)",1,1,1
"org.eclipse.jdt.core.dom.ASTMatcher.compareDeprecatedComment(Javadoc,Javadoc)",2,2,2
"org.eclipse.jdt.core.dom.ASTMatcher.componentType(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.ASTMatcher.match(AnnotationTypeDeclaration,Object)",2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(AnnotationTypeMemberDeclaration,Object)",2,5,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(AnonymousClassDeclaration,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayAccess,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayCreation,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayInitializer,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ArrayType,Object)",3,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(AssertStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(Assignment,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(Block,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(BlockComment,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(BooleanLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(BreakStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(CastExpression,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(CatchClause,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(CharacterLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ClassInstanceCreation,Object)",7,5,9
"org.eclipse.jdt.core.dom.ASTMatcher.match(CompilationUnit,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ConditionalExpression,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ConstructorInvocation,Object)",4,2,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ContinueStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(CreationReference,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(Dimension,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(DoStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(EmptyStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(EnhancedForStatement,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(EnumConstantDeclaration,Object)",2,5,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(EnumDeclaration,Object)",2,6,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(ExpressionMethodReference,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ExpressionStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(FieldAccess,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(FieldDeclaration,Object)",6,5,8
"org.eclipse.jdt.core.dom.ASTMatcher.match(ForStatement,Object)",2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(IfStatement,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(ImportDeclaration,Object)",4,3,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(InfixExpression,Object)",5,5,8
"org.eclipse.jdt.core.dom.ASTMatcher.match(Initializer,Object)",6,4,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(InstanceofExpression,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(IntersectionType,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(Javadoc,Object)",3,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(LabeledStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(LambdaExpression,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(LineComment,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(MarkerAnnotation,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(MemberRef,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(MemberValuePair,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodDeclaration,Object)",2,17,18
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodInvocation,Object)",4,4,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodRef,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(MethodRefParameter,Object)",4,3,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(Modifier,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(NameQualifiedType,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(NormalAnnotation,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(NullLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(NumberLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(PackageDeclaration,Object)",5,2,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(ParameterizedType,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(ParenthesizedExpression,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(PostfixExpression,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(PrefixExpression,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(PrimitiveType,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(QualifiedName,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(QualifiedType,Object)",2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(ReturnStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SimpleName,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SimpleType,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(SingleMemberAnnotation,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(SingleVariableDeclaration,Object)",2,12,13
"org.eclipse.jdt.core.dom.ASTMatcher.match(StringLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperConstructorInvocation,Object)",4,3,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperFieldAccess,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperMethodInvocation,Object)",4,4,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(SuperMethodReference,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(SwitchCase,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(SwitchStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(SynchronizedStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(TagElement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(TextElement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ThisExpression,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(ThrowStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(TryStatement,Object)",2,5,6
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeDeclaration,Object)",11,6,14
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeDeclarationStatement,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeLiteral,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeMethodReference,Object)",2,3,4
"org.eclipse.jdt.core.dom.ASTMatcher.match(TypeParameter,Object)",2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(UnionType,Object)",2,1,2
"org.eclipse.jdt.core.dom.ASTMatcher.match(VariableDeclarationExpression,Object)",6,4,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(VariableDeclarationFragment,Object)",2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.match(VariableDeclarationStatement,Object)",6,4,7
"org.eclipse.jdt.core.dom.ASTMatcher.match(WhileStatement,Object)",2,2,3
"org.eclipse.jdt.core.dom.ASTMatcher.match(WildcardType,Object)",2,4,5
"org.eclipse.jdt.core.dom.ASTMatcher.safeEquals(Object,Object)",3,1,4
"org.eclipse.jdt.core.dom.ASTMatcher.safeSubtreeListMatch(List,List)",4,2,4
"org.eclipse.jdt.core.dom.ASTMatcher.safeSubtreeMatch(Object,Object)",3,1,5
"org.eclipse.jdt.core.dom.ASTNode.ASTNode(AST)",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.hasNext()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.next()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.remove()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.Cursor.update(int,int)",1,1,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.NodeList(ChildListPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.add(int,Object)",3,1,3
"org.eclipse.jdt.core.dom.ASTNode.NodeList.get(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.listSize()",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.newCursor()",1,1,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.releaseCursor(Cursor)",1,1,2
"org.eclipse.jdt.core.dom.ASTNode.NodeList.remove(int)",3,1,3
"org.eclipse.jdt.core.dom.ASTNode.NodeList.set(int,Object)",5,1,5
"org.eclipse.jdt.core.dom.ASTNode.NodeList.size()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.NodeList.updateCursors(int,int)",2,2,3
"org.eclipse.jdt.core.dom.ASTNode.accept(ASTVisitor)",2,2,3
"org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTVisitor,ASTNode)",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTVisitor,NodeList)",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.addProperty(StructuralPropertyDescriptor,List)",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.appendDebugString(StringBuffer)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.appendPrintString(StringBuffer)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.checkModifiable()",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.checkNewChild(ASTNode,ASTNode,boolean,Class)",6,3,8
"org.eclipse.jdt.core.dom.ASTNode.clone(AST)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.copySubtree(AST,ASTNode)",4,1,4
"org.eclipse.jdt.core.dom.ASTNode.copySubtrees(AST,List)",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.createPropertyList(Class,List)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.delete()",3,3,4
"org.eclipse.jdt.core.dom.ASTNode.equals(Object)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getAST()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getFlags()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getLength()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getLocationInParent()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getNodeType()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getParent()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getProperty(String)",5,2,5
"org.eclipse.jdt.core.dom.ASTNode.getRoot()",3,2,3
"org.eclipse.jdt.core.dom.ASTNode.getStartPosition()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.getStructuralProperty(StructuralPropertyDescriptor)",6,6,6
"org.eclipse.jdt.core.dom.ASTNode.hashCode()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetChildListProperty(ChildListPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.nodeClassForType(int)",93,2,93
"org.eclipse.jdt.core.dom.ASTNode.postLazyInit(ASTNode,ChildPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.postReplaceChild(ASTNode,ASTNode,ChildPropertyDescriptor)",1,3,3
"org.eclipse.jdt.core.dom.ASTNode.postValueChange(SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.preLazyInit()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.preReplaceChild(ASTNode,ASTNode,ChildPropertyDescriptor)",4,6,8
"org.eclipse.jdt.core.dom.ASTNode.preValueChange(SimplePropertyDescriptor)",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.properties()",3,3,4
"org.eclipse.jdt.core.dom.ASTNode.reapPropertyList(List)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.setFlags(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.setNodeType(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.setParent(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.setProperty(String,Object)",8,4,10
"org.eclipse.jdt.core.dom.ASTNode.setSourceRange(int,int)",3,1,5
"org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(StructuralPropertyDescriptor,Object)",8,7,10
"org.eclipse.jdt.core.dom.ASTNode.standardToString()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.stringSize(String)",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.structuralPropertiesForType()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.subtreeBytes()",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.subtreeMatch(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2()",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4()",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.toString()",1,2,2
"org.eclipse.jdt.core.dom.ASTNode.unsupportedIn2()",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.unsupportedIn2_3()",2,1,2
"org.eclipse.jdt.core.dom.ASTNode.unsupportedIn2_3_4()",2,1,2
"org.eclipse.jdt.core.dom.ASTParser.ASTParser(int)",2,2,3
"org.eclipse.jdt.core.dom.ASTParser.createAST(IProgressMonitor)",2,3,5
"org.eclipse.jdt.core.dom.ASTParser.createASTs(ICompilationUnit[],String[],ASTRequestor,IProgressMonitor)",3,2,6
"org.eclipse.jdt.core.dom.ASTParser.createASTs(String[],String[],String[],FileASTRequestor,IProgressMonitor)",3,2,8
"org.eclipse.jdt.core.dom.ASTParser.createBindings(IJavaElement[],IProgressMonitor)",2,1,5
"org.eclipse.jdt.core.dom.ASTParser.getClasspath()",2,7,10
"org.eclipse.jdt.core.dom.ASTParser.initializeDefaults()",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(IProgressMonitor)",12,18,37
"org.eclipse.jdt.core.dom.ASTParser.internalCreateASTForKind()",4,16,20
"org.eclipse.jdt.core.dom.ASTParser.newParser(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.propagateErrors(ASTNode,CategorizedProblem[],RecoveryScannerData)",1,2,2
"org.eclipse.jdt.core.dom.ASTParser.rootNodeToCompilationUnit(AST,CompilationUnit,ASTNode,RecordedParsingInformation,RecoveryScannerData)",2,6,8
"org.eclipse.jdt.core.dom.ASTParser.setBindingsRecovery(boolean)",1,1,2
"org.eclipse.jdt.core.dom.ASTParser.setCompilerOptions(Map<String, String>)",1,2,2
"org.eclipse.jdt.core.dom.ASTParser.setEnvironment(String[],String[],String[],boolean)",3,1,5
"org.eclipse.jdt.core.dom.ASTParser.setFocalPosition(int)",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setIgnoreMethodBodies(boolean)",1,1,2
"org.eclipse.jdt.core.dom.ASTParser.setKind(int)",2,1,5
"org.eclipse.jdt.core.dom.ASTParser.setProject(IJavaProject)",1,2,2
"org.eclipse.jdt.core.dom.ASTParser.setResolveBindings(boolean)",1,1,2
"org.eclipse.jdt.core.dom.ASTParser.setSource(IClassFile)",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setSource(ICompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setSource(ITypeRoot)",1,2,2
"org.eclipse.jdt.core.dom.ASTParser.setSource(char[])",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setSourceRange(int,int)",2,1,3
"org.eclipse.jdt.core.dom.ASTParser.setStatementsRecovery(boolean)",1,1,2
"org.eclipse.jdt.core.dom.ASTParser.setUnitName(String)",1,1,1
"org.eclipse.jdt.core.dom.ASTParser.setWorkingCopyOwner(WorkingCopyOwner)",1,1,2
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.ASTRecoveryPropagator(CategorizedProblem[],RecoveryScannerData)",1,1,7
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.endVisit(Block)",1,2,2
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.endVisit(ExpressionStatement)",2,4,5
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.endVisit(ForStatement)",1,5,5
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.endVisit(NormalAnnotation)",1,4,4
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.endVisit(SingleMemberAnnotation)",1,3,3
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.endVisit(VariableDeclarationStatement)",4,4,6
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.endVisitNode(ASTNode)",2,12,16
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.flagNodeWithInsertedTokens()",1,4,5
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.flagNodesWithInsertedTokensAtEnd(ASTNode)",5,9,10
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.flagNodesWithInsertedTokensInside(ASTNode)",1,3,5
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.markIncludedProblems(int,int)",4,3,9
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.visit(Block)",1,1,1
"org.eclipse.jdt.core.dom.ASTRecoveryPropagator.visitNode(ASTNode)",11,2,14
"org.eclipse.jdt.core.dom.ASTRequestor.ASTRequestor()",1,1,1
"org.eclipse.jdt.core.dom.ASTRequestor.acceptAST(ICompilationUnit,CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.ASTRequestor.acceptBinding(String,IBinding)",1,1,1
"org.eclipse.jdt.core.dom.ASTRequestor.createBindings(String[])",1,3,3
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.ASTSyntaxErrorPropagator(CategorizedProblem[])",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.checkAndTagAsMalformed(ASTNode)",3,5,7
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(EnumDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator.visit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.ASTVisitor()",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.ASTVisitor(boolean)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AnnotationTypeMemberDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayCreation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(AssertStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Assignment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Block)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(BlockComment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(BooleanLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(BreakStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CastExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CatchClause)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ContinueStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(CreationReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Dimension)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EnumConstantDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(EnumDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ExpressionMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ForStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(IfStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(InfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(IntersectionType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Javadoc)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(LambdaExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(LineComment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MemberValuePair)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(MethodRefParameter)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(Modifier)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NameQualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NullLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(NumberLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ParameterizedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PostfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PrefixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(PrimitiveType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(QualifiedName)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(QualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ReturnStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SimpleType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SingleVariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(StringLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SuperMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SwitchCase)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SwitchStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TagElement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TextElement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ThisExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TryStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(TypeParameter)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(UnionType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(VariableDeclarationExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(VariableDeclarationFragment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.endVisit(WildcardType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.postVisit(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.preVisit(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.preVisit2(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AnnotationTypeMemberDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayCreation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(AssertStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Assignment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Block)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(BlockComment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(BooleanLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(BreakStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CastExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CatchClause)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ContinueStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(CreationReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Dimension)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EnumConstantDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(EnumDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ExpressionMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ForStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(IfStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(InfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(IntersectionType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Javadoc)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(LambdaExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(LineComment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MemberValuePair)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(MethodRefParameter)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(Modifier)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NameQualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NullLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(NumberLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ParameterizedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PostfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PrefixExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(PrimitiveType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(QualifiedName)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(QualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ReturnStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SimpleType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SingleVariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(StringLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SuperMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SwitchCase)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SwitchStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TagElement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TextElement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ThisExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TryStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeLiteral)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(TypeParameter)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(UnionType)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(VariableDeclarationExpression)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(VariableDeclarationFragment)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.ASTVisitor.visit(WildcardType)",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.AbstractTypeDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.bodyDeclarations()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.getBodyDeclarationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.getNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.internalBodyDeclarationPropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.internalNamePropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.isLocalTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.isMemberTypeDeclaration()",1,1,2
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.isPackageMemberTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.AbstractTypeDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.AnnotatableType.AnnotatableType(AST)",1,2,2
"org.eclipse.jdt.core.dom.AnnotatableType.annotations()",1,2,2
"org.eclipse.jdt.core.dom.AnnotatableType.getAnnotationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotatableType.internalAnnotationsPropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.Annotation.Annotation(AST)",1,1,1
"org.eclipse.jdt.core.dom.Annotation.getTypeName()",1,3,3
"org.eclipse.jdt.core.dom.Annotation.getTypeNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.internalTypeNamePropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isMarkerAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isModifier()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isNormalAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.isSingleMemberAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.resolveAnnotationBinding()",1,1,1
"org.eclipse.jdt.core.dom.Annotation.setTypeName(Name)",2,1,2
"org.eclipse.jdt.core.dom.AnnotationBinding.AnnotationBinding(AnnotationBinding,BindingResolver)",2,1,2
"org.eclipse.jdt.core.dom.AnnotationBinding.getAllMemberValuePairs()",6,3,10
"org.eclipse.jdt.core.dom.AnnotationBinding.getAnnotationType()",2,1,2
"org.eclipse.jdt.core.dom.AnnotationBinding.getAnnotations()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationBinding.getDeclaredMemberValuePairs()",5,3,8
"org.eclipse.jdt.core.dom.AnnotationBinding.getJavaElement()",9,5,16
"org.eclipse.jdt.core.dom.AnnotationBinding.getKey()",1,2,2
"org.eclipse.jdt.core.dom.AnnotationBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationBinding.getModifiers()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationBinding.getName()",2,2,2
"org.eclipse.jdt.core.dom.AnnotationBinding.getRecipientKey()",6,7,9
"org.eclipse.jdt.core.dom.AnnotationBinding.isDeprecated()",2,1,2
"org.eclipse.jdt.core.dom.AnnotationBinding.isEqualTo(IBinding)",7,2,7
"org.eclipse.jdt.core.dom.AnnotationBinding.isRecovered()",1,1,2
"org.eclipse.jdt.core.dom.AnnotationBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationBinding.toString()",1,4,4
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.AnnotationTypeDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalBodyDeclarationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalResolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeDeclaration.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.AnnotationTypeMemberDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getDefault()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.getType()",1,3,3
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",9,9,9
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.setDefault(Expression)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration.treeSize()",1,5,5
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.AnonymousClassDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.bodyDeclarations()",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.AnonymousClassDeclaration.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.ArrayAccess(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ArrayAccess.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.getArray()",1,3,3
"org.eclipse.jdt.core.dom.ArrayAccess.getIndex()",1,3,3
"org.eclipse.jdt.core.dom.ArrayAccess.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.ArrayAccess.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.setArray(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ArrayAccess.setIndex(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ArrayAccess.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ArrayAccess.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.ArrayCreation.ArrayCreation(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ArrayCreation.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.dimensions()",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.getInitializer()",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.getType()",1,3,3
"org.eclipse.jdt.core.dom.ArrayCreation.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.ArrayCreation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.ArrayCreation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.setInitializer(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.setType(ArrayType)",2,1,2
"org.eclipse.jdt.core.dom.ArrayCreation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ArrayCreation.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.ArrayInitializer.ArrayInitializer(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ArrayInitializer.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.expressions()",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.ArrayInitializer.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ArrayInitializer.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.ArrayType(AST)",1,2,2
"org.eclipse.jdt.core.dom.ArrayType.ArrayType(AST,int)",1,2,2
"org.eclipse.jdt.core.dom.ArrayType.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.ArrayType.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.ArrayType.dimensions()",1,2,2
"org.eclipse.jdt.core.dom.ArrayType.getComponentType()",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.getDimensions()",2,3,3
"org.eclipse.jdt.core.dom.ArrayType.getElementType()",2,3,3
"org.eclipse.jdt.core.dom.ArrayType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.ArrayType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.ArrayType.internalGetType(ChildPropertyDescriptor)",1,3,3
"org.eclipse.jdt.core.dom.ArrayType.internalSetType(Type,ChildPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.propertyDescriptors(int)",3,2,3
"org.eclipse.jdt.core.dom.ArrayType.setComponentType(Type)",2,1,2
"org.eclipse.jdt.core.dom.ArrayType.setElementType(Type)",2,1,3
"org.eclipse.jdt.core.dom.ArrayType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ArrayType.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.AssertStatement.AssertStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.AssertStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.AssertStatement.getMessage()",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.AssertStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.AssertStatement.setMessage(Expression)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.AssertStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.Assignment.Assignment(AST)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.Operator.Operator(String)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.Operator.toOperator(String)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.Operator.toString()",1,1,1
"org.eclipse.jdt.core.dom.Assignment.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.Assignment.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.getLeftHandSide()",1,3,3
"org.eclipse.jdt.core.dom.Assignment.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Assignment.getOperator()",1,1,1
"org.eclipse.jdt.core.dom.Assignment.getRightHandSide()",1,3,3
"org.eclipse.jdt.core.dom.Assignment.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.Assignment.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.Assignment.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Assignment.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.setLeftHandSide(Expression)",2,1,2
"org.eclipse.jdt.core.dom.Assignment.setOperator(Operator)",2,1,2
"org.eclipse.jdt.core.dom.Assignment.setRightHandSide(Expression)",2,1,2
"org.eclipse.jdt.core.dom.Assignment.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Assignment.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(Binding,Binding,HashSet)",11,8,13
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(FieldBinding,FieldBinding)",1,4,4
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(MethodBinding,MethodBinding,HashSet)",3,6,8
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding,TypeBinding,HashSet)",25,22,47
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding[],TypeBinding[])",1,1,1
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeBinding[],TypeBinding[],HashSet)",6,2,6
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(TypeVariableBinding[],TypeVariableBinding[])",6,2,6
"org.eclipse.jdt.core.dom.BindingComparator.isEqual(VariableBinding,VariableBinding)",1,4,4
"org.eclipse.jdt.core.dom.BindingResolver.BindingResolver()",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.findDeclaringNode(IAnnotationBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.findDeclaringNode(IBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.findDeclaringNode(String)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getAnnotationInstance(AnnotationBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getCorrespondingNode(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getMemberValuePairBinding(ElementValuePair)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getMethodBinding(MethodBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getPackageBinding(PackageBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getTypeBinding(RecoveredTypeBinding,int)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getTypeBinding(Type)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getTypeBinding(TypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getTypeBinding(VariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getVariableBinding(VariableBinding)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.getWorkingCopyOwner()",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.isResolvedTypeInferredFromExpectedType(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.isResolvedTypeInferredFromExpectedType(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.isResolvedTypeInferredFromExpectedType(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.lookupEnvironment()",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.recordScope(ASTNode,BlockScope)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveAnnotation(Annotation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveArrayType(ITypeBinding,int)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveBoxing(Expression)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstantExpressionValue(Expression)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(EnumConstantDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveConstructor(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveExpressionType(Expression)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveField(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveField(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveImport(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMember(AnnotationTypeMemberDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMemberValuePair(MemberValuePair)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(LambdaExpression)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(MethodReference)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveMethod(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveName(Name)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolvePackage(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveReference(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveReference(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(EnumDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(Type)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveType(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveTypeParameter(TypeParameter)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveUnboxing(Expression)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveVariable(EnumConstantDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveVariable(VariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.resolveWellKnownType(String)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.scope()",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.store(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.BindingResolver.updateKey(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.Block.Block(AST)",1,1,1
"org.eclipse.jdt.core.dom.Block.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.Block.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.Block.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Block.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.Block.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Block.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Block.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.Block.statements()",1,1,1
"org.eclipse.jdt.core.dom.Block.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Block.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.BlockComment(AST)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.BlockComment.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.BodyDeclaration(AST)",1,2,2
"org.eclipse.jdt.core.dom.BodyDeclaration.getJavadoc()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.getJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.getModifiers()",2,4,4
"org.eclipse.jdt.core.dom.BodyDeclaration.getModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalJavadocPropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalModifiers2PropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalModifiersPropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.internalSetModifiers(int)",1,2,2
"org.eclipse.jdt.core.dom.BodyDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.modifiers()",1,2,2
"org.eclipse.jdt.core.dom.BodyDeclaration.setJavadoc(Javadoc)",1,1,1
"org.eclipse.jdt.core.dom.BodyDeclaration.setModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.BooleanLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.booleanValue()",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.BooleanLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.setBooleanValue(boolean)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.BooleanLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.BreakStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.BreakStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.getLabel()",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.BreakStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.setLabel(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.BreakStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.CastExpression.CastExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.CastExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.CastExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.getType()",1,3,3
"org.eclipse.jdt.core.dom.CastExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.CastExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.CastExpression.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.CastExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.CastExpression.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.CatchClause.CatchClause(AST)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.CatchClause.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.getBody()",1,3,3
"org.eclipse.jdt.core.dom.CatchClause.getException()",1,3,3
"org.eclipse.jdt.core.dom.CatchClause.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.CatchClause.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.memSize()",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.setBody(Block)",2,1,2
"org.eclipse.jdt.core.dom.CatchClause.setException(SingleVariableDeclaration)",2,1,2
"org.eclipse.jdt.core.dom.CatchClause.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.CatchClause.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.CharacterLiteral.CharacterLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.charValue()",14,6,25
"org.eclipse.jdt.core.dom.CharacterLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.getEscapedValue()",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.CharacterLiteral.internalSetEscapedValue(String)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.setCharValue(char)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.setEscapedValue(String)",3,2,5
"org.eclipse.jdt.core.dom.CharacterLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.CharacterLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor.ChildListPropertyDescriptor(Class,String,Class,boolean)",2,1,2
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor.cycleRisk()",1,1,1
"org.eclipse.jdt.core.dom.ChildListPropertyDescriptor.getElementType()",1,1,1
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.ChildPropertyDescriptor(Class,String,Class,boolean,boolean)",2,2,3
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.cycleRisk()",1,1,1
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.getChildType()",1,1,1
"org.eclipse.jdt.core.dom.ChildPropertyDescriptor.isMandatory()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.ClassInstanceCreation(AST)",1,1,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ASTVisitor)",1,4,4
"org.eclipse.jdt.core.dom.ClassInstanceCreation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getAnonymousClassDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getName()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.getType()",1,3,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalGetName()",1,3,3
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",9,9,9
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalSetName(Name)",2,1,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.isResolvedTypeInferredFromExpectedType()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.resolveConstructorBinding()",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setAnonymousClassDeclaration(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setName(Name)",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.ClassInstanceCreation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ClassInstanceCreation.treeSize()",1,7,7
"org.eclipse.jdt.core.dom.ClassInstanceCreation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.Comment.Comment(AST)",1,1,1
"org.eclipse.jdt.core.dom.Comment.getAlternateRoot()",1,1,1
"org.eclipse.jdt.core.dom.Comment.isBlockComment()",1,1,1
"org.eclipse.jdt.core.dom.Comment.isDocComment()",1,1,1
"org.eclipse.jdt.core.dom.Comment.isLineComment()",1,1,1
"org.eclipse.jdt.core.dom.Comment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Comment.setAlternateRoot(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.CompilationUnit(AST)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.CompilationUnit.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.findDeclaringNode(IBinding)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.findDeclaringNode(String)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.firstLeadingCommentIndex(ASTNode)",3,2,4
"org.eclipse.jdt.core.dom.CompilationUnit.getColumnNumber(int)",6,3,7
"org.eclipse.jdt.core.dom.CompilationUnit.getCommentList()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getCommentMapper()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getExtendedLength(ASTNode)",3,3,4
"org.eclipse.jdt.core.dom.CompilationUnit.getExtendedStartPosition(ASTNode)",3,3,4
"org.eclipse.jdt.core.dom.CompilationUnit.getJavaElement()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getLineNumber(int)",10,3,11
"org.eclipse.jdt.core.dom.CompilationUnit.getMessages()",1,4,4
"org.eclipse.jdt.core.dom.CompilationUnit.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getPackage()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getPosition(int,int)",8,3,12
"org.eclipse.jdt.core.dom.CompilationUnit.getProblems()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getStatementsRecoveryData()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.getTypeRoot()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.imports()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.initCommentMapper(Scanner)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.CompilationUnit.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.CompilationUnit.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.lastTrailingCommentIndex(ASTNode)",3,2,4
"org.eclipse.jdt.core.dom.CompilationUnit.lineNumber(int)",1,1,2
"org.eclipse.jdt.core.dom.CompilationUnit.memSize()",1,1,3
"org.eclipse.jdt.core.dom.CompilationUnit.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.recordModifications()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.rewrite(IDocument,Map)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.setCommentTable(Comment[])",5,3,7
"org.eclipse.jdt.core.dom.CompilationUnit.setLineEndTable(int[])",2,1,2
"org.eclipse.jdt.core.dom.CompilationUnit.setPackage(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.setProblems(IProblem[])",2,1,2
"org.eclipse.jdt.core.dom.CompilationUnit.setStatementsRecoveryData(Object)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.setTypeRoot(ITypeRoot)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnit.treeSize()",1,6,6
"org.eclipse.jdt.core.dom.CompilationUnit.types()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.CompilationUnitResolver(INameEnvironment,IErrorHandlingPolicy,CompilerOptions,ICompilerRequestor,IProblemFactory,IProgressMonitor,boolean)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.IntArrayList.add(int)",1,2,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.accept(ICompilationUnit,AccessRestriction)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.accept(ISourceType[],PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.beginToCompile(ICompilationUnit[],String[])",1,10,10
"org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitDeclaration,char[],int,Map,boolean,WorkingCopyOwner,BindingTables,int,IProgressMonitor,boolean)",1,2,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.createBinding(String)",3,1,3
"org.eclipse.jdt.core.dom.CompilationUnitResolver.getCompilerOptions(Map,boolean)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.getHandlingPolicy()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.getRequestor()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.handleInternalException(AbortCompilation,CompilationUnitDeclaration)",1,2,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.handleInternalException(Throwable,CompilationUnitDeclaration,CompilationResult)",1,2,2
"org.eclipse.jdt.core.dom.CompilationUnitResolver.initializeParser()",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.parse(ICompilationUnit,NodeSearcher,Map,int)",6,8,13
"org.eclipse.jdt.core.dom.CompilationUnitResolver.parse(ICompilationUnit[],ASTRequestor,int,Map,int,IProgressMonitor)",3,7,8
"org.eclipse.jdt.core.dom.CompilationUnitResolver.parse(String[],String[],FileASTRequestor,int,Map,int,IProgressMonitor)",4,7,11
"org.eclipse.jdt.core.dom.CompilationUnitResolver.process(CompilationUnitDeclaration,int)",1,3,3
"org.eclipse.jdt.core.dom.CompilationUnitResolver.removeUnresolvedBindings(CompilationUnitDeclaration)",1,3,3
"org.eclipse.jdt.core.dom.CompilationUnitResolver.removeUnresolvedBindings(TypeDeclaration)",1,3,13
"org.eclipse.jdt.core.dom.CompilationUnitResolver.reportBinding(Object,ASTRequestor,WorkingCopyOwner,CompilationUnitDeclaration)",1,4,4
"org.eclipse.jdt.core.dom.CompilationUnitResolver.reportBinding(Object,FileASTRequestor,CompilationUnitDeclaration)",1,4,4
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitDeclaration,ICompilationUnit,NodeSearcher,boolean,boolean,boolean)",4,16,24
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitDeclaration,ICompilationUnit,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit,IJavaProject,List,NodeSearcher,Map,WorkingCopyOwner,int,IProgressMonitor)",2,7,10
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit[],String[],ASTRequestor,int,Map,IJavaProject,WorkingCopyOwner,int,IProgressMonitor)",1,6,7
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(ICompilationUnit[],String[],ASTRequestor,int,Map,WorkingCopyOwner,int)",5,14,16
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(IJavaElement[],int,Map,IJavaProject,WorkingCopyOwner,int,IProgressMonitor)",8,8,11
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(String[],String[],String[],FileASTRequestor,int,Map,List,int,IProgressMonitor)",1,5,7
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(String[],String[],String[],FileASTRequestor,int,Map,int)",7,15,20
"org.eclipse.jdt.core.dom.CompilationUnitResolver.resolvedRequestedSourcesAndKeys(int)",6,2,7
"org.eclipse.jdt.core.dom.CompilationUnitResolver.worked(int)",3,2,3
"org.eclipse.jdt.core.dom.ConditionalExpression.ConditionalExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ConditionalExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.getElseExpression()",1,3,3
"org.eclipse.jdt.core.dom.ConditionalExpression.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.ConditionalExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.getThenExpression()",1,3,3
"org.eclipse.jdt.core.dom.ConditionalExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.ConditionalExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.setElseExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ConditionalExpression.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ConditionalExpression.setThenExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ConditionalExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ConditionalExpression.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.ConstructorInvocation.ConstructorInvocation(AST)",1,1,2
"org.eclipse.jdt.core.dom.ConstructorInvocation.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.ConstructorInvocation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.ConstructorInvocation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.ConstructorInvocation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.ConstructorInvocation.resolveConstructorBinding()",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ConstructorInvocation.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.ConstructorInvocation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.ContinueStatement.ContinueStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ContinueStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.getLabel()",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ContinueStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.setLabel(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ContinueStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.CreationReference.CreationReference(AST)",1,1,1
"org.eclipse.jdt.core.dom.CreationReference.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.CreationReference.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.CreationReference.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.CreationReference.getType()",1,3,3
"org.eclipse.jdt.core.dom.CreationReference.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.CreationReference.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.CreationReference.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.CreationReference.internalTypeArgumentsProperty()",1,1,1
"org.eclipse.jdt.core.dom.CreationReference.memSize()",1,1,1
"org.eclipse.jdt.core.dom.CreationReference.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.CreationReference.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.CreationReference.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.CreationReference.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.CreationReference.typeArguments()",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.DefaultASTVisitor()",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.DefaultASTVisitor(boolean)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(AnnotationTypeMemberDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayCreation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(AssertStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Assignment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Block)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(BlockComment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(BooleanLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(BreakStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CastExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CatchClause)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ContinueStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(CreationReference)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Dimension)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(EnumConstantDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(EnumDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ExpressionMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ForStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(IfStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(InfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(IntersectionType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Javadoc)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(LambdaExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(LineComment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MemberValuePair)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(MethodRefParameter)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(Modifier)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(NameQualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(NullLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(NumberLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ParameterizedType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PostfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PrefixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(PrimitiveType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(QualifiedName)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(QualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ReturnStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SimpleType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SingleVariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(StringLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SuperMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SwitchCase)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SwitchStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TagElement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TextElement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ThisExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TryStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(TypeParameter)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(UnionType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(VariableDeclarationExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(VariableDeclarationFragment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisit(WildcardType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.endVisitNode(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(AnnotationTypeMemberDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayCreation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ArrayType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(AssertStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Assignment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Block)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(BlockComment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(BooleanLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(BreakStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CastExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CatchClause)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ContinueStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(CreationReference)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Dimension)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(DoStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(EmptyStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(EnumConstantDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(EnumDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ExpressionMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(FieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ForStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(IfStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(InfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Initializer)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(IntersectionType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Javadoc)",2,2,2
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(LabeledStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(LambdaExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(LineComment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MemberRef)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MemberValuePair)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodRef)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(MethodRefParameter)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(Modifier)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(NameQualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(NullLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(NumberLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PackageDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ParameterizedType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PostfixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PrefixExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(PrimitiveType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(QualifiedName)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(QualifiedType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ReturnStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SimpleType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SingleVariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(StringLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperFieldAccess)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SuperMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SwitchCase)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SwitchStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TagElement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TextElement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ThisExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(ThrowStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TryStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeLiteral)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeMethodReference)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(TypeParameter)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(UnionType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(VariableDeclarationExpression)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(VariableDeclarationFragment)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visit(WildcardType)",1,1,1
"org.eclipse.jdt.core.dom.DefaultASTVisitor.visitNode(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.AnnotationIdentityBinding.AnnotationIdentityBinding(AnnotationBinding)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.AnnotationIdentityBinding.equals(Object)",1,1,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.AnnotationIdentityBinding.hashCode()",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.BindingTables.BindingTables()",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.DefaultBindingResolver(CompilationUnitScope,WorkingCopyOwner,BindingTables,boolean,boolean)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.DefaultBindingResolver(LookupEnvironment,WorkingCopyOwner,BindingTables,boolean,boolean)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.findDeclaringNode(IBinding)",5,4,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.findDeclaringNode(String)",3,1,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getAnnotationInstance(AnnotationBinding)",4,1,6
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getBinding(Binding)",6,5,6
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getBindingsToNodesMap()",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getCorrespondingNode(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getDeclaringMember(ASTNode,Scope)",9,12,14
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getMemberValuePairBinding(ElementValuePair)",3,1,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getMethodBinding(MethodBinding)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getMethodOrLambdaBinding(MethodBinding,MethodBinding,IBinding)",4,3,9
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getPackageBinding(PackageBinding)",3,1,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getTypeAnnotations(int,ArrayBinding,boolean)",1,2,10
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getTypeBinding(RecoveredTypeBinding,int)",2,1,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getTypeBinding(Type)",2,1,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getTypeBinding(TypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getTypeBinding(VariableDeclaration)",2,1,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getTypeCount(ParameterizedQualifiedTypeReference)",1,1,7
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getVariableBinding(VariableBinding)",10,7,11
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getVariableBinding(VariableBinding,VariableDeclaration)",9,7,10
"org.eclipse.jdt.core.dom.DefaultBindingResolver.getWorkingCopyOwner()",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.insertAnnotations(AnnotationBinding[],int)",6,1,9
"org.eclipse.jdt.core.dom.DefaultBindingResolver.internalGetTypeBinding(TypeBinding,IBinding)",10,6,13
"org.eclipse.jdt.core.dom.DefaultBindingResolver.isResolvedTypeInferredFromExpectedType(ClassInstanceCreation)",2,1,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.isResolvedTypeInferredFromExpectedType(MethodInvocation)",3,1,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.isResolvedTypeInferredFromExpectedType(SuperMethodInvocation)",3,1,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.lookupEnvironment()",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.recordScope(ASTNode,BlockScope)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveAnnotation(Annotation)",3,2,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveArrayType(ITypeBinding,int)",5,3,6
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveBoxing(Expression)",2,1,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstantExpressionValue(Expression)",12,12,14
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(ClassInstanceCreation)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(ConstructorInvocation)",2,2,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(EnumConstantDeclaration)",3,4,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveConstructor(SuperConstructorInvocation)",2,2,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveExpressionType(Expression)",11,10,18
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveField(FieldAccess)",2,2,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveField(SuperFieldAccess)",2,2,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveImport(ImportDeclaration)",16,13,21
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMember(AnnotationTypeMemberDeclaration)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMemberValuePair(MemberValuePair)",2,2,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(LambdaExpression)",3,5,6
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(MethodDeclaration)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(MethodInvocation)",2,2,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(MethodReference)",4,3,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveMethod(SuperMethodInvocation)",2,2,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName(Name)",69,61,77
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolvePackage(PackageDeclaration)",6,6,10
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveReference(MemberRef)",4,4,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveReference(MethodRef)",3,3,3
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(AnnotationTypeDeclaration)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(AnonymousClassDeclaration)",3,3,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(EnumDeclaration)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(Type)",18,22,31
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveType(TypeDeclaration)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveTypeBindingForName(Name)",60,43,68
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveTypeParameter(TypeParameter)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveUnboxing(Expression)",2,1,2
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveVariable(EnumConstantDeclaration)",3,3,4
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveVariable(VariableDeclaration)",3,4,5
"org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveWellKnownType(String)",3,31,34
"org.eclipse.jdt.core.dom.DefaultBindingResolver.scope()",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.store(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultBindingResolver.updateKey(ASTNode,ASTNode)",1,2,2
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.endVisitNode(ASTNode)",1,3,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.visit(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.visit(Modifier)",1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.CommentMapperVisitor.visitNode(ASTNode)",2,5,11
"org.eclipse.jdt.core.dom.DefaultCommentMapper.DefaultCommentMapper(Comment[])",1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.firstLeadingCommentIndex(ASTNode)",4,1,4
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getComment(int)",4,1,4
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getCommentIndex(int,int,int)",8,6,12
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getExtendedEnd(ASTNode)",1,3,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getExtendedLength(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getExtendedStartPosition(ASTNode)",3,3,6
"org.eclipse.jdt.core.dom.DefaultCommentMapper.getLineNumber(int,int[])",1,1,3
"org.eclipse.jdt.core.dom.DefaultCommentMapper.hasSameTable(Comment[])",1,1,1
"org.eclipse.jdt.core.dom.DefaultCommentMapper.initialize(CompilationUnit,Scanner)",6,4,10
"org.eclipse.jdt.core.dom.DefaultCommentMapper.lastTrailingCommentIndex(ASTNode)",4,1,4
"org.eclipse.jdt.core.dom.DefaultCommentMapper.storeLeadingComments(ASTNode,int,int[])",8,13,26
"org.eclipse.jdt.core.dom.DefaultCommentMapper.storeTrailingComments(ASTNode,int,boolean,int[])",16,12,27
"org.eclipse.jdt.core.dom.DefaultValuePairBinding.DefaultValuePairBinding(MethodBinding,BindingResolver)",1,4,5
"org.eclipse.jdt.core.dom.DefaultValuePairBinding.getMethodBinding()",1,1,1
"org.eclipse.jdt.core.dom.DefaultValuePairBinding.getName()",1,1,1
"org.eclipse.jdt.core.dom.DefaultValuePairBinding.getValue()",1,1,1
"org.eclipse.jdt.core.dom.DefaultValuePairBinding.isDefault()",1,1,1
"org.eclipse.jdt.core.dom.DefaultValuePairBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.core.dom.Dimension.Dimension(AST)",1,1,1
"org.eclipse.jdt.core.dom.Dimension.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.Dimension.annotations()",1,1,1
"org.eclipse.jdt.core.dom.Dimension.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.Dimension.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Dimension.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.Dimension.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Dimension.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Dimension.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.Dimension.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Dimension.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.DoStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.DoStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.DoStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.DoStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.DoStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.DoStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.DoStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.DoStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.DocCommentParser.DocCommentParser(AST,Scanner,boolean)",2,2,4
"org.eclipse.jdt.core.dom.DocCommentParser.createArgumentReference(char[],int,boolean,Object,long[],long)",1,8,12
"org.eclipse.jdt.core.dom.DocCommentParser.createFieldReference(Object)",1,2,3
"org.eclipse.jdt.core.dom.DocCommentParser.createMethodReference(Object,List)",1,4,5
"org.eclipse.jdt.core.dom.DocCommentParser.createTag()",1,4,4
"org.eclipse.jdt.core.dom.DocCommentParser.createTypeReference(int)",3,5,15
"org.eclipse.jdt.core.dom.DocCommentParser.parse(int,int)",1,3,3
"org.eclipse.jdt.core.dom.DocCommentParser.parse(int[])",1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.parseIdentifierTag(boolean)",2,2,2
"org.eclipse.jdt.core.dom.DocCommentParser.parseReturn()",1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.parseTag(int)",8,31,49
"org.eclipse.jdt.core.dom.DocCommentParser.pushParamName(boolean)",1,2,3
"org.eclipse.jdt.core.dom.DocCommentParser.pushSeeRef(Object)",2,4,6
"org.eclipse.jdt.core.dom.DocCommentParser.pushText(int,int)",1,5,5
"org.eclipse.jdt.core.dom.DocCommentParser.pushThrowName(Object)",2,2,3
"org.eclipse.jdt.core.dom.DocCommentParser.refreshInlineTagPosition(int)",1,5,5
"org.eclipse.jdt.core.dom.DocCommentParser.setComment(int,int)",1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.toString()",1,1,1
"org.eclipse.jdt.core.dom.DocCommentParser.updateDocComment()",1,2,2
"org.eclipse.jdt.core.dom.EmptyStatement.EmptyStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.EmptyStatement.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.EnhancedForStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.EnhancedForStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.EnhancedForStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.getParameter()",1,3,3
"org.eclipse.jdt.core.dom.EnhancedForStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.EnhancedForStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.setParameter(SingleVariableDeclaration)",2,1,2
"org.eclipse.jdt.core.dom.EnhancedForStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.EnhancedForStatement.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.EnumConstantDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.arguments()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.getAnonymousClassDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.resolveConstructorBinding()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.resolveVariable()",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.setAnonymousClassDeclaration(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.EnumConstantDeclaration.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.EnumDeclaration.EnumDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.EnumDeclaration.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.enumConstants()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalBodyDeclarationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",5,5,5
"org.eclipse.jdt.core.dom.EnumDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.EnumDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalResolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.superInterfaceTypes()",1,1,1
"org.eclipse.jdt.core.dom.EnumDeclaration.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.Expression.Expression(AST)",1,1,1
"org.eclipse.jdt.core.dom.Expression.resolveBoxing()",1,1,1
"org.eclipse.jdt.core.dom.Expression.resolveConstantExpressionValue()",1,1,1
"org.eclipse.jdt.core.dom.Expression.resolveTypeBinding()",1,1,1
"org.eclipse.jdt.core.dom.Expression.resolveUnboxing()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionMethodReference.ExpressionMethodReference(AST)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionMethodReference.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ExpressionMethodReference.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionMethodReference.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.ExpressionMethodReference.getName()",1,3,3
"org.eclipse.jdt.core.dom.ExpressionMethodReference.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionMethodReference.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.ExpressionMethodReference.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.ExpressionMethodReference.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionMethodReference.internalTypeArgumentsProperty()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionMethodReference.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionMethodReference.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionMethodReference.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ExpressionMethodReference.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.ExpressionMethodReference.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionMethodReference.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.ExpressionMethodReference.typeArguments()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.ExpressionStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ExpressionStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.ExpressionStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ExpressionStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ExpressionStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ExpressionStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.FieldAccess.FieldAccess(AST)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.FieldAccess.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.FieldAccess.getName()",1,3,3
"org.eclipse.jdt.core.dom.FieldAccess.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.FieldAccess.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.memSize()",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.resolveFieldBinding()",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.FieldAccess.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.FieldAccess.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.FieldAccess.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.FieldDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.fragments()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.getType()",1,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.FieldDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.FieldDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.FieldDeclaration.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.FieldDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.FieldDeclaration.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.FileASTRequestor.acceptAST(String,CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.FileASTRequestor.acceptBinding(String,IBinding)",1,1,1
"org.eclipse.jdt.core.dom.FileASTRequestor.createBindings(String[])",1,3,3
"org.eclipse.jdt.core.dom.ForStatement.ForStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ForStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.ForStatement.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.initializers()",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.ForStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.ForStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.ForStatement.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ForStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.ForStatement.updaters()",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.IfStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.IfStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.getElseStatement()",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.IfStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.getThenStatement()",1,3,3
"org.eclipse.jdt.core.dom.IfStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.IfStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.setElseStatement(Statement)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.IfStatement.setThenStatement(Statement)",2,1,2
"org.eclipse.jdt.core.dom.IfStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.IfStatement.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.ImportDeclaration.ImportDeclaration(AST)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ImportDeclaration.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.ImportDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.ImportDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",5,5,5
"org.eclipse.jdt.core.dom.ImportDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ImportDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.isOnDemand()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.isStatic()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.ImportDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.setName(Name)",2,1,2
"org.eclipse.jdt.core.dom.ImportDeclaration.setOnDemand(boolean)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.setStatic(boolean)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ImportDeclaration.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.InfixExpression.InfixExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.Operator.Operator(String)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.Operator.toOperator(String)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.Operator.toString()",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.InfixExpression.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.InfixExpression.extendedOperands()",1,1,2
"org.eclipse.jdt.core.dom.InfixExpression.getLeftOperand()",1,3,3
"org.eclipse.jdt.core.dom.InfixExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.getOperator()",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.getRightOperand()",1,3,3
"org.eclipse.jdt.core.dom.InfixExpression.hasExtendedOperands()",1,2,2
"org.eclipse.jdt.core.dom.InfixExpression.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.InfixExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.InfixExpression.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.InfixExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.setLeftOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.InfixExpression.setOperator(Operator)",2,1,2
"org.eclipse.jdt.core.dom.InfixExpression.setRightOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.InfixExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.InfixExpression.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.Initializer.Initializer(AST)",1,1,1
"org.eclipse.jdt.core.dom.Initializer.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.Initializer.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.Initializer.getBody()",1,3,3
"org.eclipse.jdt.core.dom.Initializer.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.Initializer.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.Initializer.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.Initializer.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Initializer.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Initializer.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.Initializer.setBody(Block)",2,1,2
"org.eclipse.jdt.core.dom.Initializer.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Initializer.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.InstanceofExpression.InstanceofExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.InstanceofExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.getLeftOperand()",1,3,3
"org.eclipse.jdt.core.dom.InstanceofExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.getRightOperand()",1,3,3
"org.eclipse.jdt.core.dom.InstanceofExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.InstanceofExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.setLeftOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.InstanceofExpression.setRightOperand(Type)",2,1,2
"org.eclipse.jdt.core.dom.InstanceofExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.InstanceofExpression.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.InternalASTRewrite.InternalASTRewrite(CompilationUnit)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.getListEvent(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.getNodeEvent(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.getRootNode()",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.markAsMoveOrCopyTarget(ASTNode,ASTNode)",1,12,12
"org.eclipse.jdt.core.dom.InternalASTRewrite.postAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,4,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.postCloneNodeEvent(ASTNode,ASTNode)",1,4,5
"org.eclipse.jdt.core.dom.InternalASTRewrite.postValueChangeEvent(ASTNode,SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.preAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,4,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.preCloneNodeEvent(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.preRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,4,4
"org.eclipse.jdt.core.dom.InternalASTRewrite.preReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",1,5,5
"org.eclipse.jdt.core.dom.InternalASTRewrite.preValueChangeEvent(ASTNode,SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.InternalASTRewrite.rewriteAST(IDocument,Map)",1,3,3
"org.eclipse.jdt.core.dom.InternalASTRewrite.toString()",1,1,1
"org.eclipse.jdt.core.dom.IntersectionType.IntersectionType(AST)",1,1,1
"org.eclipse.jdt.core.dom.IntersectionType.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.IntersectionType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.IntersectionType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.IntersectionType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.IntersectionType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.IntersectionType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.IntersectionType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.IntersectionType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.IntersectionType.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.IntersectionType.types()",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.Javadoc(AST)",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.Javadoc.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.Javadoc.getComment()",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.Javadoc.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.Javadoc.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.memSize()",1,2,2
"org.eclipse.jdt.core.dom.Javadoc.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.Javadoc.setComment(String)",6,2,8
"org.eclipse.jdt.core.dom.Javadoc.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.tags()",1,1,1
"org.eclipse.jdt.core.dom.Javadoc.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.LabeledStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.LabeledStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.LabeledStatement.getLabel()",1,3,3
"org.eclipse.jdt.core.dom.LabeledStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.LabeledStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.LabeledStatement.setLabel(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.LabeledStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.LabeledStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.LambdaExpression.LambdaExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.LambdaExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.getBody()",1,3,3
"org.eclipse.jdt.core.dom.LambdaExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.hasParentheses()",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.LambdaExpression.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.LambdaExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.LambdaExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.parameters()",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.resolveMethodBinding()",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.setBody(ASTNode)",2,1,3
"org.eclipse.jdt.core.dom.LambdaExpression.setParentheses(boolean)",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.LambdaExpression.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.LineComment.LineComment(AST)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.LineComment.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.LineComment.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.LineComment.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.MarkerAnnotation(AST)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MarkerAnnotation.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.MarkerAnnotation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.internalTypeNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MarkerAnnotation.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.MemberRef.MemberRef(AST)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MemberRef.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.getName()",1,3,3
"org.eclipse.jdt.core.dom.MemberRef.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MemberRef.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MemberRef.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MemberRef.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.MemberValuePair.MemberValuePair(AST)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MemberValuePair.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.getName()",1,3,3
"org.eclipse.jdt.core.dom.MemberValuePair.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.getValue()",1,3,3
"org.eclipse.jdt.core.dom.MemberValuePair.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MemberValuePair.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.resolveMemberValuePairBinding()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MemberValuePair.setValue(Expression)",2,1,2
"org.eclipse.jdt.core.dom.MemberValuePair.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePair.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.MemberValuePairBinding.MemberValuePairBinding(ElementValuePair,BindingResolver)",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePairBinding.appendValue(Object,StringBuffer)",1,5,5
"org.eclipse.jdt.core.dom.MemberValuePairBinding.buildDOMValue(Object,BindingResolver)",16,16,18
"org.eclipse.jdt.core.dom.MemberValuePairBinding.getAnnotations()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePairBinding.getJavaElement()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePairBinding.getKey()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePairBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePairBinding.getMethodBinding()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePairBinding.getModifiers()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePairBinding.getName()",2,1,3
"org.eclipse.jdt.core.dom.MemberValuePairBinding.getValue()",1,2,3
"org.eclipse.jdt.core.dom.MemberValuePairBinding.init()",1,2,4
"org.eclipse.jdt.core.dom.MemberValuePairBinding.internalName()",1,2,2
"org.eclipse.jdt.core.dom.MemberValuePairBinding.isDefault()",4,3,4
"org.eclipse.jdt.core.dom.MemberValuePairBinding.isDeprecated()",1,2,2
"org.eclipse.jdt.core.dom.MemberValuePairBinding.isEqualTo(IBinding)",15,6,15
"org.eclipse.jdt.core.dom.MemberValuePairBinding.isRecovered()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePairBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.MemberValuePairBinding.toString()",1,1,1
"org.eclipse.jdt.core.dom.Message.Message(String,int)",3,1,3
"org.eclipse.jdt.core.dom.Message.Message(String,int,int)",3,1,4
"org.eclipse.jdt.core.dom.Message.getLength()",1,1,1
"org.eclipse.jdt.core.dom.Message.getMessage()",1,1,1
"org.eclipse.jdt.core.dom.Message.getSourcePosition()",1,1,1
"org.eclipse.jdt.core.dom.Message.getStartPosition()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.LambdaMethod.LambdaMethod(DefaultBindingResolver,MethodBinding,MethodBinding,IBinding)",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.LambdaMethod.getAnnotations()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.LambdaMethod.getDeclaringMember()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.LambdaMethod.getKey()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.LambdaMethod.getMethodDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.LambdaMethod.getModifiers()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.LambdaMethod.getParameterAnnotations(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.LambdaMethod.getParameterTypes()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.LambdaMethod.toString()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.MethodBinding(BindingResolver,MethodBinding)",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.filterTypeAnnotations(AnnotationBinding[])",7,3,10
"org.eclipse.jdt.core.dom.MethodBinding.getAnnotations()",2,1,2
"org.eclipse.jdt.core.dom.MethodBinding.getDeclaredReceiverType()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getDeclaringClass()",1,2,2
"org.eclipse.jdt.core.dom.MethodBinding.getDeclaringMember()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getDefaultValue()",2,2,2
"org.eclipse.jdt.core.dom.MethodBinding.getExceptionTypes()",5,2,6
"org.eclipse.jdt.core.dom.MethodBinding.getJavaElement()",2,1,2
"org.eclipse.jdt.core.dom.MethodBinding.getKey()",1,2,2
"org.eclipse.jdt.core.dom.MethodBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getMethodDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getModifiers()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.getName()",1,3,3
"org.eclipse.jdt.core.dom.MethodBinding.getParameterAnnotations(int)",7,3,7
"org.eclipse.jdt.core.dom.MethodBinding.getParameterTypes()",6,4,7
"org.eclipse.jdt.core.dom.MethodBinding.getReturnType()",1,2,2
"org.eclipse.jdt.core.dom.MethodBinding.getTypeArguments()",6,4,7
"org.eclipse.jdt.core.dom.MethodBinding.getTypeParameters()",5,2,6
"org.eclipse.jdt.core.dom.MethodBinding.getUnresolvedJavaElement()",4,1,4
"org.eclipse.jdt.core.dom.MethodBinding.isAnnotationMember()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isConstructor()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isDefaultConstructor()",4,2,4
"org.eclipse.jdt.core.dom.MethodBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isEqualTo(IBinding)",4,1,4
"org.eclipse.jdt.core.dom.MethodBinding.isGenericMethod()",2,1,3
"org.eclipse.jdt.core.dom.MethodBinding.isParameterizedMethod()",1,1,2
"org.eclipse.jdt.core.dom.MethodBinding.isRawMethod()",1,1,2
"org.eclipse.jdt.core.dom.MethodBinding.isRecovered()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isSubsignature(IMethodBinding)",1,2,3
"org.eclipse.jdt.core.dom.MethodBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.isVarargs()",1,1,1
"org.eclipse.jdt.core.dom.MethodBinding.overrides(IMethodBinding)",1,2,2
"org.eclipse.jdt.core.dom.MethodBinding.toString()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.MethodDeclaration(AST)",1,1,3
"org.eclipse.jdt.core.dom.MethodDeclaration.accept0(ASTVisitor)",1,5,5
"org.eclipse.jdt.core.dom.MethodDeclaration.clone0(AST)",1,6,6
"org.eclipse.jdt.core.dom.MethodDeclaration.extraDimensions()",1,2,2
"org.eclipse.jdt.core.dom.MethodDeclaration.getBody()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getExtraDimensions()",2,2,2
"org.eclipse.jdt.core.dom.MethodDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getReceiverQualifier()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getReceiverType()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getReturnType()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.getReturnType2()",1,3,5
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",7,7,7
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetReturnType()",1,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",15,15,15
"org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",5,5,5
"org.eclipse.jdt.core.dom.MethodDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalSetReturnType(Type)",2,1,2
"org.eclipse.jdt.core.dom.MethodDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.internalThrownExceptions()",1,2,2
"org.eclipse.jdt.core.dom.MethodDeclaration.isConstructor()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.isVarargs()",2,3,3
"org.eclipse.jdt.core.dom.MethodDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.parameters()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.propertyDescriptors(int)",3,1,3
"org.eclipse.jdt.core.dom.MethodDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setBody(Block)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setConstructor(boolean)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setExtraDimensions(int)",2,2,3
"org.eclipse.jdt.core.dom.MethodDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MethodDeclaration.setReceiverQualifier(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setReceiverType(Type)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setReturnType(Type)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.setReturnType2(Type)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.thrownExceptionTypes()",1,2,2
"org.eclipse.jdt.core.dom.MethodDeclaration.thrownExceptions()",1,1,1
"org.eclipse.jdt.core.dom.MethodDeclaration.treeSize()",1,10,10
"org.eclipse.jdt.core.dom.MethodDeclaration.typeParameters()",1,2,2
"org.eclipse.jdt.core.dom.MethodInvocation.MethodInvocation(AST)",1,1,2
"org.eclipse.jdt.core.dom.MethodInvocation.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.MethodInvocation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.MethodInvocation.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.getName()",1,3,3
"org.eclipse.jdt.core.dom.MethodInvocation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.MethodInvocation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MethodInvocation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.isResolvedTypeInferredFromExpectedType()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.MethodInvocation.resolveMethodBinding()",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MethodInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MethodInvocation.treeSize()",1,5,5
"org.eclipse.jdt.core.dom.MethodInvocation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.MethodRef.MethodRef(AST)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MethodRef.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.getName()",1,3,3
"org.eclipse.jdt.core.dom.MethodRef.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.MethodRef.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MethodRef.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.parameters()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.MethodRef.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MethodRef.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.MethodRefParameter.MethodRefParameter(AST)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.MethodRefParameter.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.MethodRefParameter.getName()",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.getType()",1,3,3
"org.eclipse.jdt.core.dom.MethodRefParameter.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.MethodRefParameter.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.MethodRefParameter.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.isVarargs()",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.memSize()",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.MethodRefParameter.setName(SimpleName)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.MethodRefParameter.setVarargs(boolean)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.MethodRefParameter.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.MethodReference.MethodReference(AST)",1,1,1
"org.eclipse.jdt.core.dom.MethodReference.getTypeArgumentsProperty()",1,1,1
"org.eclipse.jdt.core.dom.MethodReference.internalTypeArgumentsFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.MethodReference.resolveMethodBinding()",1,1,1
"org.eclipse.jdt.core.dom.MethodReference.typeArguments()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.Modifier(AST)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.ModifierKeyword(String,int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.fromFlagValue(int)",3,2,3
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.toFlagValue()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.toKeyword(String)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.ModifierKeyword.toString()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.getKeyword()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.Modifier.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isAbstract()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isAbstract(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isDefault()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isDefault(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isFinal()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isFinal(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isModifier()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isNative()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isNative(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isPrivate()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isPrivate(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isProtected()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isProtected(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isPublic()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isPublic(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isStatic()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isStatic(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isStrictfp()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isStrictfp(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isSynchronized()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isSynchronized(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isTransient()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isTransient(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isVolatile()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.isVolatile(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Modifier.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.setKeyword(ModifierKeyword)",2,1,2
"org.eclipse.jdt.core.dom.Modifier.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.Modifier.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.Name.Name(AST)",1,1,1
"org.eclipse.jdt.core.dom.Name.getFullyQualifiedName()",2,2,2
"org.eclipse.jdt.core.dom.Name.isQualifiedName()",1,1,1
"org.eclipse.jdt.core.dom.Name.isSimpleName()",1,1,1
"org.eclipse.jdt.core.dom.Name.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.NameEnvironmentWithProgress.NameEnvironmentWithProgress(Classpath[],String[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.dom.NameEnvironmentWithProgress.checkCanceled()",2,4,4
"org.eclipse.jdt.core.dom.NameEnvironmentWithProgress.findType(char[],char[][])",7,5,8
"org.eclipse.jdt.core.dom.NameEnvironmentWithProgress.findType(char[][])",1,1,1
"org.eclipse.jdt.core.dom.NameEnvironmentWithProgress.isPackage(char[][],char[])",1,1,1
"org.eclipse.jdt.core.dom.NameEnvironmentWithProgress.setMonitor(IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.dom.NameQualifiedType.NameQualifiedType(AST)",1,1,1
"org.eclipse.jdt.core.dom.NameQualifiedType.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.NameQualifiedType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.NameQualifiedType.getName()",1,3,3
"org.eclipse.jdt.core.dom.NameQualifiedType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.NameQualifiedType.getQualifier()",1,3,3
"org.eclipse.jdt.core.dom.NameQualifiedType.internalAnnotationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.NameQualifiedType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.NameQualifiedType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.NameQualifiedType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.NameQualifiedType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.NameQualifiedType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.NameQualifiedType.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.NameQualifiedType.setQualifier(Name)",2,1,2
"org.eclipse.jdt.core.dom.NameQualifiedType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.NameQualifiedType.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.NodeEventHandler.NodeEventHandler()",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postCloneNodeEvent(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.postValueChangeEvent(ASTNode,SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preAddChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preCloneNodeEvent(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preRemoveChildEvent(ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preReplaceChildEvent(ASTNode,ASTNode,ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeEventHandler.preValueChangeEvent(ASTNode,SimplePropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.NodeFinder.NodeFinder(ASTNode,int,int)",1,1,1
"org.eclipse.jdt.core.dom.NodeFinder.NodeFinderVisitor.NodeFinderVisitor(int,int)",1,1,1
"org.eclipse.jdt.core.dom.NodeFinder.NodeFinderVisitor.getCoveredNode()",1,1,1
"org.eclipse.jdt.core.dom.NodeFinder.NodeFinderVisitor.getCoveringNode()",1,1,1
"org.eclipse.jdt.core.dom.NodeFinder.NodeFinderVisitor.preVisit2(ASTNode)",4,1,9
"org.eclipse.jdt.core.dom.NodeFinder.getCoveredNode()",1,1,1
"org.eclipse.jdt.core.dom.NodeFinder.getCoveringNode()",1,1,1
"org.eclipse.jdt.core.dom.NodeFinder.perform(ASTNode,ISourceRange)",1,1,1
"org.eclipse.jdt.core.dom.NodeFinder.perform(ASTNode,int,int)",2,4,4
"org.eclipse.jdt.core.dom.NodeFinder.perform(ASTNode,int,int,ITypeRoot)",7,6,10
"org.eclipse.jdt.core.dom.NodeSearcher.NodeSearcher(int)",1,1,1
"org.eclipse.jdt.core.dom.NodeSearcher.visit(ConstructorDeclaration,ClassScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(FieldDeclaration,MethodScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(Initializer,MethodScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(MethodDeclaration,ClassScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(TypeDeclaration,ClassScope)",2,1,3
"org.eclipse.jdt.core.dom.NodeSearcher.visit(TypeDeclaration,CompilationUnitScope)",2,1,3
"org.eclipse.jdt.core.dom.NormalAnnotation.NormalAnnotation(AST)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.NormalAnnotation.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.NormalAnnotation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.NormalAnnotation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.internalTypeNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.NormalAnnotation.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.NormalAnnotation.values()",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.NullLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.NullLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.NumberLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.getToken()",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.NumberLiteral.internalSetToken(String)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.setToken(String)",4,4,9
"org.eclipse.jdt.core.dom.NumberLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.NumberLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.PackageBinding(PackageBinding,BindingResolver)",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.computeNameAndComponents()",1,3,4
"org.eclipse.jdt.core.dom.PackageBinding.getAnnotations()",14,11,19
"org.eclipse.jdt.core.dom.PackageBinding.getJavaElement()",5,2,5
"org.eclipse.jdt.core.dom.PackageBinding.getKey()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.getModifiers()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.getName()",1,2,2
"org.eclipse.jdt.core.dom.PackageBinding.getNameComponents()",1,2,2
"org.eclipse.jdt.core.dom.PackageBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.isEqualTo(IBinding)",4,1,4
"org.eclipse.jdt.core.dom.PackageBinding.isRecovered()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.isUnnamed()",1,1,1
"org.eclipse.jdt.core.dom.PackageBinding.toString()",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.PackageDeclaration(AST)",1,1,2
"org.eclipse.jdt.core.dom.PackageDeclaration.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.PackageDeclaration.annotations()",1,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.getJavadoc()",1,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.PackageDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.PackageDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.PackageDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.setJavadoc(Javadoc)",1,2,2
"org.eclipse.jdt.core.dom.PackageDeclaration.setName(Name)",2,1,2
"org.eclipse.jdt.core.dom.PackageDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.PackageDeclaration.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.ParameterizedType.ParameterizedType(AST)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ParameterizedType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.getType()",1,3,3
"org.eclipse.jdt.core.dom.ParameterizedType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.ParameterizedType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ParameterizedType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.ParameterizedType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ParameterizedType.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.ParameterizedType.typeArguments()",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.ParenthesizedExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ParenthesizedExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.ParenthesizedExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ParenthesizedExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ParenthesizedExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ParenthesizedExpression.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.PostfixExpression.Operator.Operator(String)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.Operator.toOperator(String)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.Operator.toString()",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.PostfixExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.PostfixExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.getOperand()",1,3,3
"org.eclipse.jdt.core.dom.PostfixExpression.getOperator()",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.PostfixExpression.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.PostfixExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.setOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.PostfixExpression.setOperator(Operator)",2,1,2
"org.eclipse.jdt.core.dom.PostfixExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.PostfixExpression.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.PrefixExpression.Operator.Operator(String)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.Operator.toOperator(String)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.Operator.toString()",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.PrefixExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.PrefixExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.getOperand()",1,3,3
"org.eclipse.jdt.core.dom.PrefixExpression.getOperator()",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.PrefixExpression.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.PrefixExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.setOperand(Expression)",2,1,2
"org.eclipse.jdt.core.dom.PrefixExpression.setOperator(Operator)",2,1,2
"org.eclipse.jdt.core.dom.PrefixExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.PrefixExpression.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.PrimitiveType.Code.Code(String)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.Code.toString()",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.PrimitiveType(AST)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.PrimitiveType.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.PrimitiveType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.getPrimitiveTypeCode()",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.internalAnnotationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.PrimitiveType.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.PrimitiveType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.propertyDescriptors(int)",3,2,3
"org.eclipse.jdt.core.dom.PrimitiveType.setPrimitiveTypeCode(Code)",2,1,2
"org.eclipse.jdt.core.dom.PrimitiveType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.toCode(String)",1,1,1
"org.eclipse.jdt.core.dom.PrimitiveType.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.QualifiedName.QualifiedName(AST)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.QualifiedName.appendName(StringBuffer)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.getName()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedName.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.getQualifier()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedName.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.QualifiedName.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.memSize()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.QualifiedName.setQualifier(Name)",2,1,2
"org.eclipse.jdt.core.dom.QualifiedName.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedName.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedType.QualifiedType(AST)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.QualifiedType.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.QualifiedType.getName()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.getQualifier()",1,3,3
"org.eclipse.jdt.core.dom.QualifiedType.internalAnnotationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.QualifiedType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.QualifiedType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.propertyDescriptors(int)",3,2,3
"org.eclipse.jdt.core.dom.QualifiedType.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.QualifiedType.setQualifier(Type)",2,1,2
"org.eclipse.jdt.core.dom.QualifiedType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.QualifiedType.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.RecoveredTypeBinding(BindingResolver,RecoveredTypeBinding,int)",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.RecoveredTypeBinding(BindingResolver,Type)",1,2,2
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.RecoveredTypeBinding(BindingResolver,TypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.RecoveredTypeBinding(BindingResolver,VariableDeclaration)",1,2,2
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.createArrayType(int)",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getAnnotations()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getBinaryName()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getBound()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getComponentType()",2,1,2
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getDeclaredFields()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getDeclaredMethods()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getDeclaredModifiers()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getDeclaredTypes()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getDeclaringClass()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getDeclaringMember()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getDeclaringMethod()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getDimensions()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getElementType()",6,7,8
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getErasure()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getFunctionalInterfaceMethod()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getGenericTypeOfWildcardType()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getInterfaces()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getInternalName()",3,2,3
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getJavaElement()",3,4,4
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getKey()",1,8,8
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getModifiers()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getName()",1,1,2
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getPackage()",6,4,7
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getQualifiedName()",2,2,3
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getRank()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getReferenceBinding()",6,3,6
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getSuperclass()",2,1,2
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getType()",5,3,8
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getTypeAnnotationsOnDimensions()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getTypeArguments()",7,4,7
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getTypeBounds()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getTypeNameFrom(Type)",4,6,12
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getTypeParameters()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.getWildcard()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isAnonymous()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isArray()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isAssignmentCompatible(ITypeBinding)",2,1,2
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isCapture()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isCastCompatible(ITypeBinding)",2,1,2
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isClass()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isEnum()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isEqualTo(IBinding)",2,2,3
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isFromSource()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isGenericType()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isInterface()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isIntersectionType()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isLocal()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isMember()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isNested()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isNullType()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isParameterizedType()",3,3,3
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isPrimitive()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isRawType()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isRecovered()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isSubTypeCompatible(ITypeBinding)",2,1,2
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isTopLevel()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isTypeVariable()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isUpperbound()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredTypeBinding.isWildcardType()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.RecoveredVariableBinding(BindingResolver,VariableDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getAnnotations()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getConstantValue()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getDeclaringClass()",2,4,4
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getDeclaringMethod()",2,4,4
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getJavaElement()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getKey()",1,2,2
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getModifiers()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getName()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getType()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getVariableDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.getVariableId()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.isEffectivelyFinal()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.isEnumConstant()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.isEqualTo(IBinding)",2,3,3
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.isField()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.isParameter()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.isRecovered()",1,1,1
"org.eclipse.jdt.core.dom.RecoveredVariableBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.ReturnStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ReturnStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ReturnStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ReturnStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.SimpleName.SimpleName(AST)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.appendName(StringBuffer)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.getIdentifier()",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.SimpleName.internalSetIdentifier(String)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.isDeclaration()",11,3,12
"org.eclipse.jdt.core.dom.SimpleName.memSize()",1,2,2
"org.eclipse.jdt.core.dom.SimpleName.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.setIdentifier(String)",4,2,5
"org.eclipse.jdt.core.dom.SimpleName.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SimpleName.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor.SimplePropertyDescriptor(Class,String,Class,boolean)",2,2,3
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor.getValueType()",1,1,1
"org.eclipse.jdt.core.dom.SimplePropertyDescriptor.isMandatory()",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.SimpleType(AST)",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.SimpleType.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.SimpleType.getName()",1,3,3
"org.eclipse.jdt.core.dom.SimpleType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.internalAnnotationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.SimpleType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.SimpleType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.propertyDescriptors(int)",3,2,3
"org.eclipse.jdt.core.dom.SimpleType.setName(Name)",2,1,2
"org.eclipse.jdt.core.dom.SimpleType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SimpleType.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.SingleMemberAnnotation(AST)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.getValue()",1,3,3
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.internalTypeNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.setValue(Expression)",2,1,2
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SingleMemberAnnotation.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.SingleVariableDeclaration(AST)",1,1,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.accept0(ASTVisitor)",1,6,6
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.clone0(AST)",1,4,4
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getModifiers()",2,4,4
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.getType()",1,3,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalExtraDimensions2Property()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalExtraDimensionsProperty()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",4,4,4
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",7,7,7
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",5,5,5
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalInitializerProperty()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalSetModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.isVarargs()",1,2,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.modifiers()",1,2,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.propertyDescriptors(int)",3,1,3
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.setVarargs(boolean)",1,2,2
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.treeSize()",1,7,7
"org.eclipse.jdt.core.dom.SingleVariableDeclaration.varargsAnnotations()",1,2,2
"org.eclipse.jdt.core.dom.Statement.Statement(AST)",1,1,1
"org.eclipse.jdt.core.dom.Statement.copyLeadingComment(Statement)",1,1,1
"org.eclipse.jdt.core.dom.Statement.getLeadingComment()",1,1,1
"org.eclipse.jdt.core.dom.Statement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.Statement.setLeadingComment(String)",6,3,8
"org.eclipse.jdt.core.dom.StringLiteral.StringLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.getEscapedValue()",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.getLiteralValue()",4,5,7
"org.eclipse.jdt.core.dom.StringLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.StringLiteral.internalSetEscapedValue(String)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.setEscapedValue(String)",3,2,5
"org.eclipse.jdt.core.dom.StringLiteral.setLiteralValue(String)",2,2,3
"org.eclipse.jdt.core.dom.StringLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.StringLiteral.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.StructuralPropertyDescriptor(Class,String)",2,1,3
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.getId()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.getNodeClass()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.isChildListProperty()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.isChildProperty()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.isSimpleProperty()",1,1,1
"org.eclipse.jdt.core.dom.StructuralPropertyDescriptor.toString()",1,6,6
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.SuperConstructorInvocation(AST)",1,1,2
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.getExpression()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.resolveConstructorBinding()",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.SuperConstructorInvocation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.SuperFieldAccess.SuperFieldAccess(AST)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SuperFieldAccess.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.getName()",1,3,3
"org.eclipse.jdt.core.dom.SuperFieldAccess.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.SuperFieldAccess.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.resolveFieldBinding()",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.SuperFieldAccess.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SuperFieldAccess.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.SuperMethodInvocation(AST)",1,1,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.arguments()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.getName()",1,3,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.SuperMethodInvocation.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.SuperMethodInvocation.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.isResolvedTypeInferredFromExpectedType()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.resolveMethodBinding()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.SuperMethodInvocation.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodInvocation.treeSize()",1,5,5
"org.eclipse.jdt.core.dom.SuperMethodInvocation.typeArguments()",1,2,2
"org.eclipse.jdt.core.dom.SuperMethodReference.SuperMethodReference(AST)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SuperMethodReference.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.getName()",1,3,3
"org.eclipse.jdt.core.dom.SuperMethodReference.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.SuperMethodReference.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.SuperMethodReference.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.internalTypeArgumentsProperty()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.SuperMethodReference.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SuperMethodReference.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.SuperMethodReference.typeArguments()",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.SwitchCase(AST)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SwitchCase.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.SwitchCase.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.SwitchCase.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.isDefault()",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.setExpression(Expression)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SwitchCase.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.SwitchStatement.SwitchStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SwitchStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.SwitchStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.SwitchStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.SwitchStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.SwitchStatement.statements()",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SwitchStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.SynchronizedStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.SynchronizedStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.SynchronizedStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.SynchronizedStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.setBody(Block)",2,1,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.SynchronizedStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.SynchronizedStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.TagElement.TagElement(AST)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.TagElement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.fragments()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.getTagName()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.TagElement.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.TagElement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.isNested()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TagElement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.setTagName(String)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TagElement.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.TextElement.TextElement(AST)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.accept0(ASTVisitor)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TextElement.getText()",1,1,1
"org.eclipse.jdt.core.dom.TextElement.internalGetSetObjectProperty(SimplePropertyDescriptor,boolean,Object)",3,3,3
"org.eclipse.jdt.core.dom.TextElement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.memSize()",1,2,2
"org.eclipse.jdt.core.dom.TextElement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.setText(String)",3,1,3
"org.eclipse.jdt.core.dom.TextElement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TextElement.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.ThisExpression(AST)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ThisExpression.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.getQualifier()",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ThisExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.setQualifier(Name)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ThisExpression.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.ThrowStatement.ThrowStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.ThrowStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.ThrowStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.ThrowStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.ThrowStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.ThrowStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.TryStatement.TryStatement(AST)",1,1,2
"org.eclipse.jdt.core.dom.TryStatement.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.TryStatement.catchClauses()",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.TryStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.TryStatement.getFinally()",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.TryStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.TryStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.propertyDescriptors(int)",3,2,3
"org.eclipse.jdt.core.dom.TryStatement.resources()",1,2,2
"org.eclipse.jdt.core.dom.TryStatement.setBody(Block)",2,1,2
"org.eclipse.jdt.core.dom.TryStatement.setFinally(Block)",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TryStatement.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.Type.Type(AST)",1,1,1
"org.eclipse.jdt.core.dom.Type.isAnnotatable()",1,1,1
"org.eclipse.jdt.core.dom.Type.isArrayType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isIntersectionType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isNameQualifiedType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isParameterizedType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isPrimitiveType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isQualifiedType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isSimpleType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isUnionType()",1,1,1
"org.eclipse.jdt.core.dom.Type.isWildcardType()",1,1,1
"org.eclipse.jdt.core.dom.Type.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.LocalTypeBinding.LocalTypeBinding(BindingResolver,TypeBinding,IBinding)",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.LocalTypeBinding.getDeclaringMember()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.TypeBinding(BindingResolver,TypeBinding)",1,2,3
"org.eclipse.jdt.core.dom.TypeBinding.createArrayType(int)",2,1,3
"org.eclipse.jdt.core.dom.TypeBinding.createTypeBinding(BindingResolver,TypeBinding,IBinding)",1,1,2
"org.eclipse.jdt.core.dom.TypeBinding.getAnnotations()",4,7,9
"org.eclipse.jdt.core.dom.TypeBinding.getBinaryName()",7,4,8
"org.eclipse.jdt.core.dom.TypeBinding.getBound()",3,3,3
"org.eclipse.jdt.core.dom.TypeBinding.getComponentType()",2,1,2
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredFields()",7,9,12
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredMethods()",9,12,16
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredModifiers()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaredTypes()",6,7,9
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaringClass()",5,9,10
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaringMember()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getDeclaringMethod()",5,7,7
"org.eclipse.jdt.core.dom.TypeBinding.getDimensions()",2,1,2
"org.eclipse.jdt.core.dom.TypeBinding.getElementType()",2,1,2
"org.eclipse.jdt.core.dom.TypeBinding.getErasure()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getFunctionalInterfaceMethod()",3,2,5
"org.eclipse.jdt.core.dom.TypeBinding.getGenericTypeOfWildcardType()",3,3,3
"org.eclipse.jdt.core.dom.TypeBinding.getInterfaces()",8,7,11
"org.eclipse.jdt.core.dom.TypeBinding.getIntersectingTypes()",1,3,3
"org.eclipse.jdt.core.dom.TypeBinding.getJavaElement()",5,6,6
"org.eclipse.jdt.core.dom.TypeBinding.getKey()",1,2,2
"org.eclipse.jdt.core.dom.TypeBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getModifiers()",6,5,6
"org.eclipse.jdt.core.dom.TypeBinding.getName()",9,12,22
"org.eclipse.jdt.core.dom.TypeBinding.getPackage()",2,2,2
"org.eclipse.jdt.core.dom.TypeBinding.getQualifiedName()",11,20,31
"org.eclipse.jdt.core.dom.TypeBinding.getRank()",2,2,3
"org.eclipse.jdt.core.dom.TypeBinding.getSuperclass()",6,3,7
"org.eclipse.jdt.core.dom.TypeBinding.getTypeAnnotations()",2,1,2
"org.eclipse.jdt.core.dom.TypeBinding.getTypeAnnotationsOnDimensions()",1,2,2
"org.eclipse.jdt.core.dom.TypeBinding.getTypeArguments()",6,4,6
"org.eclipse.jdt.core.dom.TypeBinding.getTypeBounds()",13,12,19
"org.eclipse.jdt.core.dom.TypeBinding.getTypeDeclaration()",2,2,2
"org.eclipse.jdt.core.dom.TypeBinding.getTypeParameters()",7,5,8
"org.eclipse.jdt.core.dom.TypeBinding.getUnresolvedJavaElement()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.getUnresolvedJavaElement(TypeBinding)",4,2,4
"org.eclipse.jdt.core.dom.TypeBinding.getWildcard()",2,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isAnnotation()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isAnonymous()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isArray()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isAssignmentCompatible(ITypeBinding)",4,2,6
"org.eclipse.jdt.core.dom.TypeBinding.isCapture()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isCastCompatible(ITypeBinding)",3,1,4
"org.eclipse.jdt.core.dom.TypeBinding.isClass()",2,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isDeprecated()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isEnum()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isEqualTo(IBinding)",5,1,5
"org.eclipse.jdt.core.dom.TypeBinding.isFromSource()",11,13,13
"org.eclipse.jdt.core.dom.TypeBinding.isGenericType()",2,1,3
"org.eclipse.jdt.core.dom.TypeBinding.isInterface()",2,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isIntersectionType()",1,1,2
"org.eclipse.jdt.core.dom.TypeBinding.isLocal()",2,5,5
"org.eclipse.jdt.core.dom.TypeBinding.isMember()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isNested()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isNullType()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isParameterizedType()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isPrimitive()",1,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isRawType()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isRecovered()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isSubTypeCompatible(ITypeBinding)",5,1,6
"org.eclipse.jdt.core.dom.TypeBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.isTopLevel()",2,4,4
"org.eclipse.jdt.core.dom.TypeBinding.isTypeVariable()",1,2,2
"org.eclipse.jdt.core.dom.TypeBinding.isUpperbound()",3,2,3
"org.eclipse.jdt.core.dom.TypeBinding.isWildcardType()",1,1,1
"org.eclipse.jdt.core.dom.TypeBinding.resolveAnnotationBindings(AnnotationBinding[],boolean)",7,4,9
"org.eclipse.jdt.core.dom.TypeBinding.resolveAnnotationBindingsOnDimensions(AnnotationBinding[])",4,5,7
"org.eclipse.jdt.core.dom.TypeBinding.toString()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.TypeDeclaration(AST)",1,1,3
"org.eclipse.jdt.core.dom.TypeDeclaration.accept0(ASTVisitor)",1,4,4
"org.eclipse.jdt.core.dom.TypeDeclaration.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.TypeDeclaration.getFields()",1,3,5
"org.eclipse.jdt.core.dom.TypeDeclaration.getMethods()",1,3,5
"org.eclipse.jdt.core.dom.TypeDeclaration.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.getSuperclass()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.getSuperclassType()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.getTypes()",1,3,5
"org.eclipse.jdt.core.dom.TypeDeclaration.internalBodyDeclarationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetChildListProperty(ChildListPropertyDescriptor)",6,6,6
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",9,9,9
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.TypeDeclaration.internalGetSuperclass()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalJavadocProperty()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalModifiers2Property()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalModifiersProperty()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalResolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalSetSuperclass(Name)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.internalSuperInterfaces()",1,2,2
"org.eclipse.jdt.core.dom.TypeDeclaration.isInterface()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.TypeDeclaration.setInterface(boolean)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.setSuperclass(Name)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.setSuperclassType(Type)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.superInterfaceTypes()",1,2,2
"org.eclipse.jdt.core.dom.TypeDeclaration.superInterfaces()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclaration.treeSize()",1,9,9
"org.eclipse.jdt.core.dom.TypeDeclaration.typeParameters()",1,2,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.TypeDeclarationStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.getDeclaration()",1,3,3
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.getTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.internalGetTypeDeclaration()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.internalSetTypeDeclaration(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.resolveBinding()",3,3,3
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.setDeclaration(AbstractTypeDeclaration)",2,1,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.setTypeDeclaration(TypeDeclaration)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.TypeDeclarationStatement.typeDeclProperty()",2,1,2
"org.eclipse.jdt.core.dom.TypeLiteral.TypeLiteral(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.TypeLiteral.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.getType()",1,3,3
"org.eclipse.jdt.core.dom.TypeLiteral.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.TypeLiteral.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.TypeLiteral.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TypeLiteral.treeSize()",1,2,2
"org.eclipse.jdt.core.dom.TypeMethodReference.TypeMethodReference(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeMethodReference.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.TypeMethodReference.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.TypeMethodReference.getName()",1,3,3
"org.eclipse.jdt.core.dom.TypeMethodReference.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TypeMethodReference.getType()",1,3,3
"org.eclipse.jdt.core.dom.TypeMethodReference.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.TypeMethodReference.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.TypeMethodReference.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeMethodReference.internalTypeArgumentsProperty()",1,1,1
"org.eclipse.jdt.core.dom.TypeMethodReference.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TypeMethodReference.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeMethodReference.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.TypeMethodReference.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.TypeMethodReference.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TypeMethodReference.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.TypeMethodReference.typeArguments()",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.TypeParameter(AST)",1,1,2
"org.eclipse.jdt.core.dom.TypeParameter.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.TypeParameter.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.TypeParameter.getName()",1,3,3
"org.eclipse.jdt.core.dom.TypeParameter.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.TypeParameter.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.TypeParameter.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.memSize()",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.modifiers()",1,2,2
"org.eclipse.jdt.core.dom.TypeParameter.propertyDescriptors(int)",3,2,3
"org.eclipse.jdt.core.dom.TypeParameter.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.TypeParameter.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.TypeParameter.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.TypeParameter.typeBounds()",1,1,1
"org.eclipse.jdt.core.dom.UnionType.UnionType(AST)",1,1,1
"org.eclipse.jdt.core.dom.UnionType.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.UnionType.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.UnionType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.UnionType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.UnionType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.UnionType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.UnionType.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.UnionType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.UnionType.treeSize()",1,1,1
"org.eclipse.jdt.core.dom.UnionType.types()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.VariableBinding(BindingResolver,VariableBinding)",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.getAnnotations()",7,4,8
"org.eclipse.jdt.core.dom.VariableBinding.getConstantValue()",11,10,12
"org.eclipse.jdt.core.dom.VariableBinding.getDeclaringClass()",2,3,3
"org.eclipse.jdt.core.dom.VariableBinding.getDeclaringMethod()",8,7,10
"org.eclipse.jdt.core.dom.VariableBinding.getJavaElement()",2,1,2
"org.eclipse.jdt.core.dom.VariableBinding.getKey()",1,2,2
"org.eclipse.jdt.core.dom.VariableBinding.getKind()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.getModifiers()",3,2,3
"org.eclipse.jdt.core.dom.VariableBinding.getName()",1,1,2
"org.eclipse.jdt.core.dom.VariableBinding.getType()",1,2,2
"org.eclipse.jdt.core.dom.VariableBinding.getUnresolvedJavaElement()",12,7,15
"org.eclipse.jdt.core.dom.VariableBinding.getVariableDeclaration()",2,2,2
"org.eclipse.jdt.core.dom.VariableBinding.getVariableId()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.isDeprecated()",2,2,2
"org.eclipse.jdt.core.dom.VariableBinding.isEffectivelyFinal()",1,2,2
"org.eclipse.jdt.core.dom.VariableBinding.isEnumConstant()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.isEqualTo(IBinding)",9,4,9
"org.eclipse.jdt.core.dom.VariableBinding.isField()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.isParameter()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.isRecovered()",1,1,1
"org.eclipse.jdt.core.dom.VariableBinding.isSynthetic()",2,2,2
"org.eclipse.jdt.core.dom.VariableBinding.toString()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.VariableDeclaration(AST)",1,2,2
"org.eclipse.jdt.core.dom.VariableDeclaration.extraDimensions()",1,2,2
"org.eclipse.jdt.core.dom.VariableDeclaration.getExtraDimensions()",2,2,2
"org.eclipse.jdt.core.dom.VariableDeclaration.getExtraDimensions2Property()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getExtraDimensionsProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getInitializer()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getInitializerProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.getName()",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclaration.getNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.internalExtraDimensions2PropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.internalExtraDimensionsPropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.internalInitializerPropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.internalNamePropertyFactory(Class)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(int)",2,2,3
"org.eclipse.jdt.core.dom.VariableDeclaration.resolveBinding()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.setExtraDimensions(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.setInitializer(Expression)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclaration.setName(SimpleName)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.VariableDeclarationExpression(AST)",1,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.fragments()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.getModifiers()",2,4,4
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.getType()",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalSetModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.memSize()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.modifiers()",1,2,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.setModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationExpression.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.VariableDeclarationFragment(AST)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalExtraDimensions2Property()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalExtraDimensionsProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalInitializerProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalNameProperty()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.memSize()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationFragment.treeSize()",1,4,4
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.VariableDeclarationStatement(AST)",1,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.clone0(AST)",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.fragments()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.getModifiers()",2,4,4
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.getType()",1,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalGetChildListProperty(ChildListPropertyDescriptor)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalGetSetIntProperty(SimplePropertyDescriptor,boolean,int)",3,3,3
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalSetModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.modifiers()",1,2,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.propertyDescriptors(int)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.setModifiers(int)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.setType(Type)",2,1,2
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.VariableDeclarationStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.WhileStatement.WhileStatement(AST)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.accept0(ASTVisitor)",1,2,2
"org.eclipse.jdt.core.dom.WhileStatement.clone0(AST)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.getBody()",1,3,3
"org.eclipse.jdt.core.dom.WhileStatement.getExpression()",1,3,3
"org.eclipse.jdt.core.dom.WhileStatement.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",5,5,5
"org.eclipse.jdt.core.dom.WhileStatement.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.memSize()",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.propertyDescriptors(int)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.setBody(Statement)",2,1,2
"org.eclipse.jdt.core.dom.WhileStatement.setExpression(Expression)",2,1,2
"org.eclipse.jdt.core.dom.WhileStatement.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.WhileStatement.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.WildcardType.WildcardType(AST)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.accept0(ASTVisitor)",1,3,3
"org.eclipse.jdt.core.dom.WildcardType.clone0(AST)",1,2,2
"org.eclipse.jdt.core.dom.WildcardType.getBound()",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.getNodeType0()",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.internalAnnotationsProperty()",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.internalGetChildListProperty(ChildListPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.WildcardType.internalGetSetBooleanProperty(SimplePropertyDescriptor,boolean,boolean)",3,3,3
"org.eclipse.jdt.core.dom.WildcardType.internalGetSetChildProperty(ChildPropertyDescriptor,boolean,ASTNode)",3,3,3
"org.eclipse.jdt.core.dom.WildcardType.internalStructuralPropertiesForType(int)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.isUpperBound()",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.memSize()",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.propertyDescriptors(int)",3,2,3
"org.eclipse.jdt.core.dom.WildcardType.setBound(Type)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.setBound(Type,boolean)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.setUpperBound(boolean)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.subtreeMatch0(ASTMatcher,Object)",1,1,1
"org.eclipse.jdt.core.dom.WildcardType.treeSize()",1,3,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.ASTRewrite(AST)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.create(AST)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createCopyTarget(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createGroupNode(ASTNode[])",2,2,4
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createMoveTarget(ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createStringPlaceholder(String,int)",3,1,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createTargetNode(ASTNode,boolean)",3,2,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.get(ASTNode,StructuralPropertyDescriptor)",3,1,4
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getAST()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getExtendedSourceRangeComputer()",1,1,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getListRewrite(ASTNode,ChildListPropertyDescriptor)",2,1,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getNodeStore()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getProperty(String)",5,2,5
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getRewriteEventStore()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.getRootNode()",1,8,14
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.internalRewriteAST(char[],LineInformation,String,List,Map,ASTNode,RecoveryScannerData)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.remove(ASTNode,TextEditGroup)",4,4,5
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.replace(ASTNode,ASTNode,TextEditGroup)",4,4,5
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.rewriteAST()",4,2,5
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.rewriteAST(IDocument,Map)",3,3,5
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.set(ASTNode,StructuralPropertyDescriptor,Object,TextEditGroup)",2,2,4
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.setProperty(String,Object)",8,4,10
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.setTargetSourceRangeComputer(TargetSourceRangeComputer)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.toString()",1,2,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.track(ASTNode)",2,2,3
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validateIsCorrectAST(ASTNode)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validateIsExistingNode(ASTNode)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validateIsListProperty(StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validateIsPropertyOfNode(StructuralPropertyDescriptor,ASTNode)",2,2,2
"org.eclipse.jdt.core.dom.rewrite.ASTRewrite.validatePropertyType(StructuralPropertyDescriptor,Object)",6,8,12
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.ImportRewrite(ICompilationUnit,CompilationUnit,List)",1,2,2
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addAnnotation(AST,Object,ImportRewriteContext)",10,12,17
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addAnnotation(IAnnotationBinding,AST,ImportRewriteContext)",3,8,8
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addEntry(String)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImport(ITypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImport(ITypeBinding,AST)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImport(ITypeBinding,AST,ImportRewriteContext)",1,3,4
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImport(ITypeBinding,ImportRewriteContext)",7,16,17
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImport(String)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImport(String,ImportRewriteContext)",3,3,3
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImportFromSignature(String,AST)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImportFromSignature(String,AST,ImportRewriteContext)",7,12,15
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addStaticImport(IBinding)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addStaticImport(IBinding,ImportRewriteContext)",5,5,5
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addStaticImport(String,String,boolean)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addStaticImport(String,String,boolean,ImportRewriteContext)",3,3,7
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.annotateList(List,IAnnotationBinding[],AST,ImportRewriteContext)",1,3,3
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.annotateType(ITypeBinding,AST,ImportRewriteContext,Type)",1,2,4
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.buildImportRewriteConfiguration()",1,2,4
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.buildType(ITypeBinding,ITypeBinding,AST,ImportRewriteContext,Type)",2,2,3
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.checkAnnotationAndGenerics(ITypeBinding)",3,3,7
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.compareImport(char,String,String,String)",6,4,8
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.containsNestedCapture(ITypeBinding,boolean)",8,7,10
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.containsNestedCapture(String)",1,2,2
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.create(CompilationUnit,boolean)",3,5,8
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.create(ICompilationUnit,boolean)",2,3,5
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.createBaseType(AST,ImportRewriteContext,ITypeBinding)",1,5,6
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.filterFromList(List<String>,char)",2,3,4
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.findInImports(String,String,int)",14,15,24
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getAddedImports()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getAddedStaticImports()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getArrayType(Type,AST,ImportRewriteContext,ITypeBinding)",1,4,4
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getCompilationUnit()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getCreatedImports()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getCreatedStaticImports()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getDefaultImportRewriteContext()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getRawName(ITypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getRawQualifiedName(ITypeBinding)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getRemovedImports()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.getRemovedStaticImports()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.hasRecordedChanges()",1,3,3
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.internalAddImport(ITypeBinding,AST,ImportRewriteContext,Type,boolean)",4,15,15
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.internalAddImport(String,ImportRewriteContext)",3,5,8
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.normalizeTypeBinding(ITypeBinding)",5,6,7
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.removeEntry(String)",3,2,3
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.removeImport(String)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.removeStaticImport(String)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.rewriteImports(IProgressMonitor)",2,6,8
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.setFilterImplicitImports(boolean)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.setImportOrder(String[])",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.setOnDemandImportThreshold(int)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.setStaticOnDemandImportThreshold(int)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ImportRewrite.setUseContextToFilterImplicitImports(boolean)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.ListRewrite(ASTRewrite,ASTNode,ChildListPropertyDescriptor)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.createCopyTarget(ASTNode,ASTNode)",2,2,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.createMoveTarget(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.createMoveTarget(ASTNode,ASTNode,ASTNode,TextEditGroup)",2,2,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.createTargetNode(ASTNode,ASTNode,boolean,ASTNode,TextEditGroup)",3,2,4
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getASTRewrite()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getEvent()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getLocationInParent()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getOriginalList()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getParent()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getRewriteStore()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.getRewrittenList()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertAfter(ASTNode,ASTNode,TextEditGroup)",3,1,4
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertAt(ASTNode,int,TextEditGroup)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertBefore(ASTNode,ASTNode,TextEditGroup)",3,1,4
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertFirst(ASTNode,TextEditGroup)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertLast(ASTNode,TextEditGroup)",2,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.internalInsertAt(ASTNode,int,boolean,TextEditGroup)",1,3,3
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.isInsertBoundToPreviousByDefault(ASTNode)",1,1,2
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.remove(ASTNode,TextEditGroup)",2,2,3
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.replace(ASTNode,ASTNode,TextEditGroup)",2,2,3
"org.eclipse.jdt.core.dom.rewrite.ListRewrite.validatePropertyType(ASTNode)",3,2,3
"org.eclipse.jdt.core.dom.rewrite.TargetSourceRangeComputer.SourceRange.SourceRange(int,int)",1,1,1
"org.eclipse.jdt.core.dom.rewrite.TargetSourceRangeComputer.SourceRange.getLength()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.TargetSourceRangeComputer.SourceRange.getStartPosition()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.TargetSourceRangeComputer.TargetSourceRangeComputer()",1,1,1
"org.eclipse.jdt.core.dom.rewrite.TargetSourceRangeComputer.computeSourceRange(ASTNode)",2,2,2
"org.eclipse.jdt.core.formatter.CodeFormatter.createIndentationString(int)",1,1,1
"org.eclipse.jdt.core.formatter.CodeFormatter.setOptions(Map<String, String>)",1,1,1
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.Messages.bind(String)",1,1,1
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.Messages.bind(String,Object)",1,1,1
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.Messages.bind(String,Object,Object)",1,1,1
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.Messages.bind(String,Object[])",1,1,1
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.displayHelp()",1,1,1
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.displayHelp(String)",1,1,1
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.formatDirTree(File,CodeFormatter)",2,4,5
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.formatFile(File,CodeFormatter)",2,5,6
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.processCommandLine(String[])",13,14,21
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.readConfig(String)",1,6,7
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.start(IApplicationContext)",2,7,8
"org.eclipse.jdt.core.formatter.CodeFormatterApplication.stop()",1,1,1
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.createAlignmentValue(boolean,int,int)",3,3,9
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getEclipse21Settings()",1,1,1
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getEclipseDefaultSettings()",1,1,1
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getForceWrapping(String)",2,1,3
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getIndentStyle(String)",4,1,5
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getJavaConventionsSettings()",1,1,1
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.getWrappingStyle(String)",8,2,9
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.setForceWrapping(String,boolean)",2,1,4
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.setIndentStyle(String,int)",4,3,7
"org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants.setWrappingStyle(String,int)",4,3,10
"org.eclipse.jdt.core.formatter.IndentManipulation.IndentManipulation()",1,1,1
"org.eclipse.jdt.core.formatter.IndentManipulation.calculateSpaceEquivalents(int,int)",2,1,2
"org.eclipse.jdt.core.formatter.IndentManipulation.changeIndent(String,int,int,int,String,String)",3,4,12
"org.eclipse.jdt.core.formatter.IndentManipulation.extractIndentString(String,int,int)",7,5,11
"org.eclipse.jdt.core.formatter.IndentManipulation.getChangeIndentEdits(String,int,int,int,String)",3,4,10
"org.eclipse.jdt.core.formatter.IndentManipulation.getIndentWidth(Map)",3,2,3
"org.eclipse.jdt.core.formatter.IndentManipulation.getIntValue(Map,String,int)",1,1,2
"org.eclipse.jdt.core.formatter.IndentManipulation.getTabWidth(Map)",2,1,2
"org.eclipse.jdt.core.formatter.IndentManipulation.indexOfIndent(CharSequence,int,int,int)",5,3,6
"org.eclipse.jdt.core.formatter.IndentManipulation.isIndentChar(char)",1,2,2
"org.eclipse.jdt.core.formatter.IndentManipulation.isLineDelimiterChar(char)",1,1,2
"org.eclipse.jdt.core.formatter.IndentManipulation.measureIndentInSpaces(CharSequence,int)",5,3,6
"org.eclipse.jdt.core.formatter.IndentManipulation.measureIndentUnits(CharSequence,int,int)",3,1,5
"org.eclipse.jdt.core.formatter.IndentManipulation.trimIndent(String,int,int,int)",9,5,13
"org.eclipse.jdt.core.index.JavaIndexer.generateIndexForJar(String,String)",1,1,1
"org.eclipse.jdt.core.index.JavaIndexerApplication.Messages.bind(String)",1,1,1
"org.eclipse.jdt.core.index.JavaIndexerApplication.Messages.bind(String,Object)",1,1,1
"org.eclipse.jdt.core.index.JavaIndexerApplication.Messages.bind(String,Object,Object)",1,1,1
"org.eclipse.jdt.core.index.JavaIndexerApplication.Messages.bind(String,Object[])",1,1,1
"org.eclipse.jdt.core.index.JavaIndexerApplication.displayError(String)",1,1,1
"org.eclipse.jdt.core.index.JavaIndexerApplication.displayHelp()",1,1,1
"org.eclipse.jdt.core.index.JavaIndexerApplication.processCommandLine(String[])",9,10,10
"org.eclipse.jdt.core.index.JavaIndexerApplication.start(IApplicationContext)",1,8,9
"org.eclipse.jdt.core.index.JavaIndexerApplication.stop()",1,1,1
"org.eclipse.jdt.core.jdom.DOMException.DOMException()",1,1,1
"org.eclipse.jdt.core.jdom.DOMException.DOMException(String)",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.DOMFactory()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createClass()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createCompilationUnit()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createCompilationUnit(String,String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createCompilationUnit(char[],String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createField()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createField(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createImport()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createImport(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createInitializer()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createInitializer(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createInterface()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createMethod()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createMethod(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createPackage()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createPackage(String)",2,1,2
"org.eclipse.jdt.core.jdom.DOMFactory.createType()",1,1,1
"org.eclipse.jdt.core.jdom.DOMFactory.createType(String)",2,1,2
"org.eclipse.jdt.core.search.FieldDeclarationMatch.FieldDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.FieldReferenceMatch.FieldReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.FieldReferenceMatch.isReadAccess()",1,1,1
"org.eclipse.jdt.core.search.FieldReferenceMatch.isWriteAccess()",1,1,1
"org.eclipse.jdt.core.search.LocalVariableDeclarationMatch.LocalVariableDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch.LocalVariableReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch.isReadAccess()",1,1,1
"org.eclipse.jdt.core.search.LocalVariableReferenceMatch.isWriteAccess()",1,1,1
"org.eclipse.jdt.core.search.MethodDeclarationMatch.MethodDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.MethodReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.MethodReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.MethodReferenceMatch(IJavaElement,int,int,int,boolean,boolean,boolean,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.isConstructor()",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.isSuperInvocation()",1,1,1
"org.eclipse.jdt.core.search.MethodReferenceMatch.isSynthetic()",1,1,1
"org.eclipse.jdt.core.search.PackageDeclarationMatch.PackageDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.PackageReferenceMatch.PackageReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.ReferenceMatch.ReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.ReferenceMatch.getLocalElement()",1,1,1
"org.eclipse.jdt.core.search.ReferenceMatch.setLocalElement(IJavaElement)",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.SearchDocument(String,SearchParticipant)",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.addIndexEntry(char[],char[])",1,2,2
"org.eclipse.jdt.core.search.SearchDocument.getContainerRelativePath()",1,2,2
"org.eclipse.jdt.core.search.SearchDocument.getParser()",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.getParticipant()",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.getPath()",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.removeAllIndexEntries()",1,2,2
"org.eclipse.jdt.core.search.SearchDocument.requireIndexingResolvedDocument()",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.setIndex(Index)",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.setParser(SourceElementParser)",1,1,1
"org.eclipse.jdt.core.search.SearchDocument.shouldIndexResolvedDocument()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.ResultCollectorAdapter(IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.acceptSearchMatch(SearchMatch)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.beginReporting()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.ResultCollectorAdapter.endReporting()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine(ICompilationUnit[])",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine(IWorkingCopy[])",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchEngine(WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.SearchPatternAdapter.SearchPatternAdapter(SearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.TypeNameRequestorAdapter.TypeNameRequestorAdapter(ITypeNameRequestor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.TypeNameRequestorAdapter.acceptType(int,char[],char[],char[][],String,AccessRestriction)",1,2,2
"org.eclipse.jdt.core.search.SearchEngine.createHierarchyScope(IType)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createHierarchyScope(IType,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IJavaElement[])",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IJavaElement[],int)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(IResource[])",1,2,2
"org.eclipse.jdt.core.search.SearchEngine.createOrSearchPattern(ISearchPattern,ISearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createSearchPattern(IJavaElement,int)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createSearchPattern(String,int,int,boolean)",1,2,4
"org.eclipse.jdt.core.search.SearchEngine.createStrictHierarchyScope(IJavaProject,IType,boolean,boolean,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createTypeNameMatch(IType,int)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.getDefaultSearchParticipant()",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.search(IWorkspace,IJavaElement,int,IJavaSearchScope,IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.search(IWorkspace,ISearchPattern,IJavaSearchScope,IJavaSearchResultCollector)",2,1,3
"org.eclipse.jdt.core.search.SearchEngine.search(IWorkspace,String,int,int,IJavaSearchScope,IJavaSearchResultCollector)",2,2,5
"org.eclipse.jdt.core.search.SearchEngine.search(SearchPattern,SearchParticipant[],IJavaSearchScope,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(IWorkspace,char[],char[],int,boolean,int,IJavaSearchScope,ITypeNameRequestor,int,IProgressMonitor)",1,1,2
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(char[],char[],int,int,IJavaSearchScope,ITypeNameRequestor,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(char[],char[],int,int,IJavaSearchScope,TypeNameRequestor,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(char[],int,char[],int,int,IJavaSearchScope,TypeNameMatchRequestor,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(char[],int,char[],int,int,IJavaSearchScope,TypeNameRequestor,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(char[][],char[][],IJavaSearchScope,TypeNameMatchRequestor,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchAllTypeNames(char[][],char[][],IJavaSearchScope,TypeNameRequestor,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfAccessedFields(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfAccessedFields(IWorkspace,IJavaElement,IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(IWorkspace,IJavaElement,IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfSentMessages(IJavaElement,SearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfSentMessages(IWorkspace,IJavaElement,IJavaSearchResultCollector)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.SearchMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,3
"org.eclipse.jdt.core.search.SearchMatch.getAccuracy()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getElement()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getLength()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getOffset()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getParticipant()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getResource()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.getRule()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.isEquivalent()",1,2,2
"org.eclipse.jdt.core.search.SearchMatch.isErasure()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.isExact()",1,2,2
"org.eclipse.jdt.core.search.SearchMatch.isImplicit()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.isInsideDocComment()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.isRaw()",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setAccuracy(int)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setElement(Object)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setImplicit(boolean)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setInsideDocComment(boolean)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setLength(int)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setOffset(int)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setParticipant(SearchParticipant)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setRaw(boolean)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setResource(IResource)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.setRule(int)",1,1,1
"org.eclipse.jdt.core.search.SearchMatch.toString()",1,5,6
"org.eclipse.jdt.core.search.SearchParticipant.SearchParticipant()",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.beginSearching()",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.doneSearching()",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.getDescription()",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.indexResolvedDocument(SearchDocument,IPath)",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.removeIndex(IPath)",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.resolveDocument(SearchDocument)",1,1,1
"org.eclipse.jdt.core.search.SearchParticipant.scheduleDocumentIndexing(SearchDocument,IPath)",1,4,4
"org.eclipse.jdt.core.search.SearchPattern.SearchPattern(int)",1,1,4
"org.eclipse.jdt.core.search.SearchPattern.acceptMatch(String,String,char,SearchPattern,IndexQueryRequestor,SearchParticipant,IJavaSearchScope)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.acceptMatch(String,String,char,SearchPattern,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",6,5,7
"org.eclipse.jdt.core.search.SearchPattern.camelCaseMatch(String,String)",3,1,3
"org.eclipse.jdt.core.search.SearchPattern.camelCaseMatch(String,String,boolean)",3,1,3
"org.eclipse.jdt.core.search.SearchPattern.camelCaseMatch(String,int,int,String,int,int)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.camelCaseMatch(String,int,int,String,int,int,boolean)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.createAndPattern(SearchPattern,SearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.createFieldPattern(String,int,int)",8,13,32
"org.eclipse.jdt.core.search.SearchPattern.createMethodOrConstructorPattern(String,int,int,boolean)",33,40,98
"org.eclipse.jdt.core.search.SearchPattern.createOrPattern(SearchPattern,SearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.createPackagePattern(String,int,int)",4,4,4
"org.eclipse.jdt.core.search.SearchPattern.createPattern(IJavaElement,int)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.createPattern(IJavaElement,int,int)",7,20,35
"org.eclipse.jdt.core.search.SearchPattern.createPattern(String,int,int,int)",15,14,16
"org.eclipse.jdt.core.search.SearchPattern.createTypePattern(String,int,int,char)",12,9,25
"org.eclipse.jdt.core.search.SearchPattern.createTypePattern(char[],char[],char[][],String,IType,int,int)",8,8,9
"org.eclipse.jdt.core.search.SearchPattern.currentPattern()",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.enclosingTypeNames(IType)",5,4,7
"org.eclipse.jdt.core.search.SearchPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",5,6,9
"org.eclipse.jdt.core.search.SearchPattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.getIndexKey()",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.getMatchRule()",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.getMatchingRegions(String,String,int)",13,8,24
"org.eclipse.jdt.core.search.SearchPattern.isPolymorphicSearch()",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.matchesDecodedKey(SearchPattern)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.matchesName(char[],char[])",10,12,25
"org.eclipse.jdt.core.search.SearchPattern.queryIn(Index)",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.toString()",1,1,1
"org.eclipse.jdt.core.search.SearchPattern.validateCamelCasePattern(String)",2,3,9
"org.eclipse.jdt.core.search.SearchPattern.validateMatchRule(String,int)",5,4,10
"org.eclipse.jdt.core.search.SearchRequestor.beginReporting()",1,1,1
"org.eclipse.jdt.core.search.SearchRequestor.endReporting()",1,1,1
"org.eclipse.jdt.core.search.SearchRequestor.enterParticipant(SearchParticipant)",1,1,1
"org.eclipse.jdt.core.search.SearchRequestor.exitParticipant(SearchParticipant)",1,1,1
"org.eclipse.jdt.core.search.TypeDeclarationMatch.TypeDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.TypeNameMatch.getFullyQualifiedName()",1,1,1
"org.eclipse.jdt.core.search.TypeNameMatch.getPackageFragmentRoot()",1,1,1
"org.eclipse.jdt.core.search.TypeNameMatch.getPackageName()",1,1,1
"org.eclipse.jdt.core.search.TypeNameMatch.getSimpleTypeName()",1,1,1
"org.eclipse.jdt.core.search.TypeNameMatch.getTypeContainerName()",2,2,2
"org.eclipse.jdt.core.search.TypeNameMatch.getTypeQualifiedName()",1,1,1
"org.eclipse.jdt.core.search.TypeNameRequestor.acceptType(int,char[],char[],char[][],String)",1,1,1
"org.eclipse.jdt.core.search.TypeParameterDeclarationMatch.TypeParameterDeclarationMatch(IJavaElement,int,int,int,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.TypeParameterReferenceMatch.TypeParameterReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.TypeReferenceMatch.TypeReferenceMatch(IJavaElement,int,int,int,boolean,SearchParticipant,IResource)",1,1,1
"org.eclipse.jdt.core.search.TypeReferenceMatch.getOtherElements()",1,1,1
"org.eclipse.jdt.core.search.TypeReferenceMatch.setOtherElements(IJavaElement[])",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aaload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aconst_null(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._aload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._anewarray(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._areturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._arraylength(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._astore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._athrow(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._baload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._bastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._bipush(int,byte)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._breakpoint(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._caload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._castore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._checkcast(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._d2f(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._d2i(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._d2l(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dadd(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._daload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dcmpg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dcmpl(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dconst_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dconst_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ddiv(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dmul(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dneg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._drem(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dreturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dstore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dsub(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup2_x1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup2_x2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup_x1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._dup_x2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._f2d(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._f2i(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._f2l(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fadd(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._faload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fcmpg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fcmpl(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fconst_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fconst_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fconst_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fdiv(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fmul(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fneg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._frem(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._freturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fstore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._fsub(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._getfield(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._getstatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._goto(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._goto_w(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2b(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2c(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2d(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2f(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2l(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._i2s(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iadd(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iaload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iand(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_4(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_5(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iconst_m1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._idiv(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_acmpeq(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_acmpne(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpeq(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpge(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpgt(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmple(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmplt(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._if_icmpne(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifeq(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifge(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifgt(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifle(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iflt(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifne(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifnonnull(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ifnull(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iinc(int,int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._impdep1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._impdep2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._imul(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ineg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._instanceof(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokedynamic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokedynamic(int,int,IConstantPoolEntry,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokeinterface(int,int,byte,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokespecial(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokestatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._invokevirtual(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ior(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._irem(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ireturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ishl(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ishr(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._istore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._isub(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._iushr(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ixor(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._jsr(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._jsr_w(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._l2d(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._l2f(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._l2i(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ladd(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._laload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._land(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lcmp(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lconst_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lconst_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldc(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldc2_w(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldc_w(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ldiv(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lload_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lmul(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lneg(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lookupswitch(int,int,int,int[][])",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lor(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lrem(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lreturn(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lshl(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lshr(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_0(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_1(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lstore_3(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lsub(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lushr(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._lxor(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._monitorenter(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._monitorexit(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._multianewarray(int,int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._new(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._newarray(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._nop(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._pop(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._pop2(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._putfield(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._putstatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._ret(int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._return(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._saload(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._sastore(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._sipush(int,short)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._swap(int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._tableswitch(int,int,int,int,int[])",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._wide(int,int,int)",1,1,1
"org.eclipse.jdt.core.util.ByteCodeVisitorAdapter._wide(int,int,int,int)",1,1,1
"org.eclipse.jdt.core.util.ClassFormatException.ClassFormatException(String)",1,1,1
"org.eclipse.jdt.core.util.ClassFormatException.ClassFormatException(String,Throwable)",1,1,1
"org.eclipse.jdt.core.util.ClassFormatException.ClassFormatException(int)",1,1,1
"org.eclipse.jdt.core.util.CompilationUnitSorter.CompilationUnitSorter()",1,1,1
"org.eclipse.jdt.core.util.CompilationUnitSorter.checkASTLevel(int)",2,2,3
"org.eclipse.jdt.core.util.CompilationUnitSorter.sort(CompilationUnit,Comparator,int,TextEditGroup,IProgressMonitor)",2,1,3
"org.eclipse.jdt.core.util.CompilationUnitSorter.sort(ICompilationUnit,int[],Comparator,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.util.CompilationUnitSorter.sort(int,ICompilationUnit,int[],Comparator,int,IProgressMonitor)",2,1,3
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.annotateMember(String,IFile,String,String,String,MergeStrategy,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.annotateMember(String,IFile,String,String,String,int,MergeStrategy,IProgressMonitor)",13,13,19
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.annotateMethodParameterType(String,IFile,String,String,String,int,MergeStrategy,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.annotateMethodReturnType(String,IFile,String,String,String,MergeStrategy,IProgressMonitor)",1,1,1
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.annotateParameterType(String,String,int,MergeStrategy)",1,2,2
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.annotateReturnType(String,String,MergeStrategy)",1,2,2
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.annotateType(String,String,MergeStrategy)",1,1,1
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.createNewFile(IFile,String,IProgressMonitor)",1,2,2
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.ensureExists(IContainer,IProgressMonitor)",3,2,4
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.extractGenericSignature(IMethodBinding)",1,1,1
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.extractGenericTypeSignature(ITypeBinding)",1,1,1
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.getAnnotatedSignature(String,IFile,String,String)",6,5,7
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.getAnnotationFile(IJavaProject,ITypeBinding,IProgressMonitor)",5,2,5
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.insertAt(String,int,char,MergeStrategy)",3,2,3
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.insertParameterAnnotation(String,int,char,MergeStrategy)",2,3,3
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.insertReturnAnnotation(String,char,MergeStrategy)",3,3,4
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.match(StringBuffer,SignatureWrapper,SignatureWrapper,char,boolean)",4,3,4
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.mergeAnnotation(StringBuffer,SignatureWrapper,SignatureWrapper,MergeStrategy)",9,9,14
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.updateSignature(String,String,int,MergeStrategy)",2,5,7
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.updateType(StringBuffer,char[],char[],MergeStrategy)",5,12,12
"org.eclipse.jdt.core.util.ExternalAnnotationUtil.writeFile(IFile,StringBuffer,String,String,BufferedReader,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.CompletionElementNotifier(CompletionUnitStructureRequestor,boolean,ASTNode)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.getArguments(Argument[])",3,3,5
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.getInterfaceNames(TypeDeclaration)",6,4,11
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.getSuperclassName(TypeDeclaration)",3,2,4
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.getThrownExceptions(AbstractMethodDeclaration)",6,4,7
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.getTypeParameterBounds(TypeParameter)",1,9,9
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.notifySourceElementRequestor(AbstractMethodDeclaration,TypeDeclaration,ImportReference)",4,1,4
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.notifySourceElementRequestor(CompilationUnitDeclaration,int,int,boolean,HashtableOfObjectToInt,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.notifySourceElementRequestor(FieldDeclaration,TypeDeclaration)",3,1,3
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.notifySourceElementRequestor(ImportReference,boolean)",4,1,5
"org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.notifySourceElementRequestor(TypeDeclaration,boolean,TypeDeclaration,ImportReference)",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.AcceptedConstructor.AcceptedConstructor(int,char[],int,char[],char[][],char[][],int,char[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.AcceptedConstructor.toString()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.AcceptedType.AcceptedType(char[],char[],char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.AcceptedType.toString()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.CompletionEngine(SearchableEnvironment,CompletionRequestor,Map,IJavaProject,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.CompletionProblemFactory.CompletionProblemFactory(Locale)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.CompletionProblemFactory.checkProblem(CategorizedProblem,char[],int,int)",2,7,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.CompletionProblemFactory.createProblem(char[],int,String[],String[],int,int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.CompletionProblemFactory.createProblem(char[],int,String[],int,String[],int,int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.CompletionProblemFactory.startCheckingProblems()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.CompletionProblemFactory.stopCheckingProblems()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.accept(ICompilationUnit,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.acceptConstructor(int,char[],int,char[],char[][],char[][],int,char[],int,String,AccessRestriction)",11,7,16
"org.eclipse.jdt.internal.codeassist.CompletionEngine.acceptConstructors(Scope)",29,48,64
"org.eclipse.jdt.internal.codeassist.CompletionEngine.acceptPackage(char[])",3,6,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.acceptType(char[],char[],char[][],int,AccessRestriction)",12,6,17
"org.eclipse.jdt.internal.codeassist.CompletionEngine.acceptTypes(Scope)",22,30,43
"org.eclipse.jdt.internal.codeassist.CompletionEngine.acceptUnresolvedName(char[])",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.addExpectedType(TypeBinding,Scope)",4,5,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.addForbiddenBindings(Binding)",2,2,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.addForbiddenBindingsForMemberTypes(TypeDeclaration)",1,2,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.addUninterestingBindings(Binding)",2,2,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.areParametersCompatibleWith(TypeBinding[],TypeBinding[],boolean)",11,9,14
"org.eclipse.jdt.internal.codeassist.CompletionEngine.assistNodeIsExtendedType(ASTNode,ASTNode)",5,1,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.assistNodeIsInsideCase(ASTNode,ASTNode)",4,3,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.assistNodeIsInterfaceExcludingAnnotation(ASTNode,ASTNode)",5,1,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.buildContext(ASTNode,ASTNode,CompilationUnitDeclaration,Binding,Scope)",1,9,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.buildTokenLocationContext(InternalCompletionContext,Scope,ASTNode,ASTNode)",5,23,37
"org.eclipse.jdt.internal.codeassist.CompletionEngine.checkCancel()",2,2,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(ASTNode,ASTNode,ASTNode,CompilationUnitDeclaration,Binding,Scope,boolean)",4,33,36
"org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(ICompilationUnit,int,int,ITypeRoot)",7,49,53
"org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(IType,char[],int,char[][],char[][],int[],boolean)",1,26,29
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnBranchStatementLabel(ASTNode)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnClassLiteralAccess(ASTNode,Binding,Scope)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnExplicitConstructorCall(ASTNode,Binding,Scope)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnFieldName(ASTNode,Scope)",1,2,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnFieldType(ASTNode,Scope)",1,6,7
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnJavadocAllocationExpression(ASTNode,Binding,Scope)",1,4,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnJavadocFieldReference(ASTNode,Scope)",1,13,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnJavadocMessageSend(ASTNode,Binding,Scope)",1,5,7
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnJavadocParamNameReference(ASTNode)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnJavadocQualifiedTypeReference(ASTNode,Binding,Scope)",1,6,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnJavadocSingleTypeReference(ASTNode,Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnJavadocTag(ASTNode)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnJavadocTypeParamReference(ASTNode)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnKeyword(ASTNode)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnLocalOrArgumentName(ASTNode,Scope)",1,2,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnMarkerAnnotationName(ASTNode,Binding,Scope)",1,12,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnMemberAccess(ASTNode,ASTNode,Binding,Scope,boolean)",1,9,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnMemberValueName(ASTNode,ASTNode,Scope,boolean)",3,11,12
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnMessageSend(ASTNode,Binding,Scope)",1,4,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnMessageSendName(ASTNode,Binding,Scope)",1,7,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnMethodName(ASTNode,Scope)",1,2,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnMethodReturnType(ASTNode,Scope)",1,6,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnParameterizedQualifiedTypeReference(ASTNode,ASTNode,Binding,Scope)",1,8,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnQualifiedAllocationExpression(ASTNode,Binding,Scope)",1,8,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnQualifiedNameReference(ASTNode,ASTNode,Binding,Scope,boolean)",1,18,21
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnQualifiedTypeReference(ASTNode,ASTNode,Binding,Scope)",1,9,11
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnReferenceExpressionName(ASTNode,Binding,Scope)",1,5,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnSingleNameReference(ASTNode,ASTNode,Scope,boolean)",3,17,20
"org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnSingleTypeReference(ASTNode,ASTNode,Binding,Scope)",1,5,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeAlreadyDefinedName(BlockScope,InvocationSite)",7,4,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeAlreadyDefinedName(FieldBinding[],Scope,boolean,ReferenceBinding,InvocationSite,ArrayList)",5,3,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeAlreadyDefinedName(SourceTypeBinding,ClassScope,boolean,InvocationSite,ArrayList)",7,15,18
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeBaseRelevance()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeExpectedTypes(ASTNode,ASTNode,Scope)",8,82,111
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeExpectedTypesForAllocationExpression(ReferenceBinding,Expression[],Scope,InvocationSite)",8,6,11
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeExpectedTypesForMessageSend(ReferenceBinding,char[],Expression[],ReferenceBinding,Scope,InvocationSite,boolean)",11,7,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeExpectedTypesForMessageSendForInterface(ReferenceBinding,char[],Expression[],ReferenceBinding,Scope,InvocationSite,boolean)",4,7,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeForbiddenBindings(ASTNode,ASTNode,Scope)",6,7,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computePrefix(SourceTypeBinding,SourceTypeBinding,boolean)",1,5,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForAnnotation()",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForAnnotationTarget(TypeBinding)",3,2,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForCaseMatching(char[],char[])",9,6,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForClass()",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForConstructor()",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForEnum()",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForEnumConstant(TypeBinding)",4,4,7
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForException()",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForException(char[])",2,3,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForExpectingType(TypeBinding)",8,10,16
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForExpectingType(char[],char[])",5,4,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForFinal(boolean,boolean)",2,1,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForInheritance(ReferenceBinding,ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForInterestingProposal()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForInterestingProposal(Binding)",8,9,12
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForInterestingProposal(char[],char[])",5,4,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForInterface()",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForMissingElements(boolean)",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForQualification(boolean)",3,1,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForResolution()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForResolution(boolean)",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForRestrictions(int)",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForStatic(boolean,boolean)",2,1,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeRelevanceForSuper(MethodBinding,Scope,InvocationSite)",7,7,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeTargetedElement(CompletionOnAnnotationOfType)",10,2,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeTypes(Expression[])",2,1,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeTypesIfCorrect(Expression[])",4,3,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.computeUninterestingBindings(ASTNode,ASTNode,Scope)",8,10,11
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createBindingKey(char[],char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createDefaultParameterNames(int)",2,3,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createImportCharArray(char[],boolean,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createMethod(MethodBinding,char[][],char[][],char[][],Scope,StringBuffer)",1,11,13
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createMethodSignature(char[][],char[][],char[])",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createMethodSignature(char[][],char[][],char[],char[])",1,2,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createNonGenericTypeSignature(char[],char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createProposal(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createRequiredTypeProposal(Binding,int,int,int)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createType(TypeBinding,Scope,StringBuffer)",3,11,16
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createTypeParameterProposal(TypeParameter,int)",1,6,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createTypeProposal(ReferenceBinding,char[],int,char[],int,Binding[],int[],int[],boolean)",1,9,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createTypeProposal(char[],char[],int,int,char[],int)",1,7,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createTypeSignature(char[],char[])",2,2,7
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createTypeVariable(TypeVariableBinding,Scope,StringBuffer)",1,8,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.createVargsType(TypeBinding,Scope,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findAnnotationAttributes(char[],MemberValuePair[],ReferenceBinding)",5,7,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findAnonymousType(ReferenceBinding,TypeBinding[],Scope,InvocationSite,Binding[],int[],int[],boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findAnonymousType(ReferenceBinding,TypeBinding[],Scope,InvocationSite,Binding[],int[],int[],boolean,boolean,boolean,int)",1,12,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findClassField(char[],TypeBinding,Scope,Binding[],int[],int[],boolean)",2,9,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findConstructors(ReferenceBinding,TypeBinding[],Scope,InvocationSite,boolean,Binding[],int[],int[],boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findConstructors(ReferenceBinding,TypeBinding[],Scope,InvocationSite,boolean,Binding[],int[],int[],boolean,boolean,boolean,int)",11,62,80
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findConstructorsFromMissingType(TypeReference,TypeBinding[],Scope,InvocationSite)",1,8,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findConstructorsOrAnonymousTypes(ReferenceBinding,Scope,InvocationSite,boolean,int)",1,9,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findEnclosingTypeNames(Scope)",3,11,13
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findEnumConstants(char[],ReferenceBinding,Scope,ObjectVector,char[][],int,boolean)",8,14,19
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findEnumConstantsFromExpectedTypes(char[],Scope,ObjectVector)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findEnumConstantsFromSwithStatement(char[],SwitchStatement)",1,6,7
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findExceptionFromTryStatement(char[],ReferenceBinding,ReferenceBinding,SourceTypeBinding,BlockScope,ObjectVector,boolean)",34,30,51
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findExceptionFromTryStatement(char[],ReferenceBinding,SourceTypeBinding,BlockScope,ObjectVector)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findExplicitConstructors(char[],ReferenceBinding,MethodScope,InvocationSite)",6,14,19
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFields(char[],FieldBinding[],Scope,ObjectVector,ObjectVector,boolean,ReferenceBinding,InvocationSite,Scope,boolean,boolean,Binding[],int[],int[],boolean,char[],int,int)",35,52,80
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFields(char[],ReferenceBinding,Scope,ObjectVector,ObjectVector,boolean,InvocationSite,Scope,boolean,boolean,Binding[],int[],int[],boolean,char[],int,int)",8,15,23
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethods(char[],TypeBinding,Scope,ObjectVector,ObjectVector,InvocationSite,Scope,boolean,boolean,Binding[],int[],int[],boolean,char[],int,int)",3,38,42
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethodsFromAnotherReceiver(char[],TypeReference,Scope,ObjectVector,ObjectVector,InvocationSite,Scope,boolean,boolean,Binding[],int[],int[],boolean,char[][],int,int)",3,2,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethodsFromCastedReceiver(ASTNode,Binding,Scope,ObjectVector,ObjectVector,InvocationSite,Scope,Expression)",10,4,27
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethodsFromFavorites(char[],Scope,InvocationSite,Scope,ObjectVector,ObjectVector,ObjectVector)",2,6,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethodsFromMissingFieldType(char[],Scope,InvocationSite,boolean)",6,7,11
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethodsFromMissingReturnType(char[],TypeBinding[],Scope,InvocationSite,boolean)",10,15,21
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethodsFromMissingType(TypeReference,Scope,InvocationSite,Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethodsFromStaticImports(char[],Scope,InvocationSite,Scope,boolean,boolean,ObjectVector,ObjectVector,ObjectVector,boolean,boolean)",1,20,22
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsFromFavorites(char[],FieldBinding[],Scope,ObjectVector,ObjectVector,ReferenceBinding,InvocationSite,Scope)",10,13,21
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImplicitMessageSends(char[],TypeBinding[],Scope,InvocationSite,Scope,ObjectVector)",4,3,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImports(CompletionOnImportReference,boolean)",2,4,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImportsOfMemberTypes(char[],ReferenceBinding,boolean)",7,11,16
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImportsOfStaticFields(char[],ReferenceBinding)",8,8,14
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findImportsOfStaticMethods(char[],ReferenceBinding)",10,10,18
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findInterfacesMethodDeclarations(char[],ReferenceBinding,ReferenceBinding[],Scope,ObjectVector,Binding[],int[],int[],boolean)",5,8,11
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findInterfacesMethods(char[],TypeBinding[],TypeBinding[],ReferenceBinding,ReferenceBinding[],Scope,ObjectVector,boolean,boolean,InvocationSite,Scope,boolean,boolean,boolean,Binding[],int[],int[],boolean,char[],int,int)",5,8,11
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findJavadocBlockTags(CompletionOnJavadocTag)",2,4,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findJavadocInlineTags(CompletionOnJavadocTag)",2,4,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findJavadocParamNames(char[],char[][],boolean)",2,7,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findKeywords(char[],char[][],boolean,boolean)",5,10,17
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findKeywordsForMember(char[],int,ASTNode)",1,4,29
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findLabels(char[],char[][])",2,6,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findLocalMethodDeclarations(char[],MethodBinding[],Scope,ObjectVector,boolean,ReferenceBinding)",16,18,31
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findLocalMethods(char[],TypeBinding[],TypeBinding[],MethodBinding[],Scope,ObjectVector,boolean,boolean,ReferenceBinding,InvocationSite,Scope,boolean,boolean,boolean,Binding[],int[],int[],boolean,char[],int,int)",28,64,95
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findLocalMethodsFromFavorites(char[],MethodBinding[],Scope,ObjectVector,ObjectVector,ReferenceBinding,InvocationSite,Scope)",22,36,53
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findLocalMethodsFromStaticImports(char[],MethodBinding[],Scope,boolean,ObjectVector,ReferenceBinding,InvocationSite)",12,15,25
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findLocalMethodsFromStaticImports(char[],Scope,InvocationSite,Scope,boolean,ObjectVector,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMemberTypes(char[],ReferenceBinding,Scope,SourceTypeBinding,boolean,boolean,ObjectVector,Binding[],int[],int[],boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMemberTypes(char[],ReferenceBinding,Scope,SourceTypeBinding,boolean,boolean,boolean,boolean,boolean,SourceTypeBinding,ObjectVector,Binding[],int[],int[],boolean)",9,17,23
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMemberTypes(char[],ReferenceBinding[],ObjectVector,ReferenceBinding,SourceTypeBinding,boolean,boolean,boolean,boolean,Scope,Binding[],int[],int[],boolean)",32,39,64
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMemberTypesFromMissingType(TypeReference,long,Scope)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMemberTypesFromMissingType(char[],long,Scope)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMembers(char[],ReferenceBinding,Scope,InvocationSite,boolean,Binding[],int[],int[],boolean)",1,14,15
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMembersFromMissingType(char[],long,TypeBinding,Scope,InvocationSite,boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMethodDeclarations(char[],ReferenceBinding,Scope,ObjectVector,Binding[],int[],int[],boolean)",2,12,13
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMethodParameterNames(MethodBinding,char[][])",3,12,18
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findMethods(char[],TypeBinding[],TypeBinding[],ReferenceBinding,Scope,ObjectVector,boolean,boolean,InvocationSite,Scope,boolean,boolean,boolean,Binding[],int[],int[],boolean,char[],int,int)",3,14,18
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findNestedTypes(char[],SourceTypeBinding,Scope,boolean,ObjectVector)",21,20,34
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findPackages(CompletionOnPackageReference)",2,1,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findParameterizedType(TypeReference,Scope)",8,8,12
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findSubMemberTypes(char[],ReferenceBinding,Scope,SourceTypeBinding,boolean,boolean,boolean,ObjectVector)",7,8,11
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTrueOrFalseKeywords(char[][])",3,7,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypeParameters(char[],Scope)",9,8,17
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypesAndPackages(char[],Scope,boolean,boolean,ObjectVector)",23,53,83
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypesAndSubpackages(char[],PackageBinding,Scope)",19,33,55
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypesFromExpectedTypes(char[],Scope,ObjectVector,boolean,boolean)",29,37,56
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypesFromImports(char[],Scope,boolean,ObjectVector)",23,28,40
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findTypesFromStaticImports(char[],Scope,boolean,ObjectVector)",18,22,32
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findUnresolvedReference(int,int,BlockScope,char[][])",1,2,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findUnresolvedReferenceAfter(int,BlockScope,char[][])",5,9,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findUnresolvedReferenceBefore(int,int,BlockScope,char[][])",6,9,10
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariableFromUnresolvedReference(LocalDeclaration,BlockScope,char[][])",6,13,14
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariableName(char[],char[],char[],char[],TypeBinding,char[][],char[][],boolean,int,int)",4,7,17
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariableName(char[],char[],char[],char[],TypeBinding,char[][],char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariableNameForCollection(char[],char[],char[],char[],TypeBinding,char[][],char[][],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariableNames(char[],TypeReference,char[][],char[][],int)",1,7,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariablesAndMethods(char[],Scope,InvocationSite,Scope,boolean,boolean)",21,20,40
"org.eclipse.jdt.internal.codeassist.CompletionEngine.getCompletedTypeSignature(ReferenceBinding)",1,12,12
"org.eclipse.jdt.internal.codeassist.CompletionEngine.getFavoriteReferenceBindings(Scope)",11,7,17
"org.eclipse.jdt.internal.codeassist.CompletionEngine.getNoCacheNameEnvironment()",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.getParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.getRequiredTypeSignature(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.getResolvedSignature(char[][],char[],int,Scope)",11,7,16
"org.eclipse.jdt.internal.codeassist.CompletionEngine.getTypeName(TypeReference)",1,2,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.hasArrayTypeAsExpectedSuperTypes()",4,4,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.hasMemberTypesInEnclosingScope(SourceTypeBinding,Scope)",5,2,7
"org.eclipse.jdt.internal.codeassist.CompletionEngine.hasPossibleAnnotationTarget(TypeBinding,Scope)",8,7,14
"org.eclipse.jdt.internal.codeassist.CompletionEngine.hasStaticMemberTypes(ReferenceBinding,SourceTypeBinding,CompilationUnitScope)",5,5,8
"org.eclipse.jdt.internal.codeassist.CompletionEngine.inlineTagCompletion(char[],char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.isAllowingLongComputationProposals()",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.isForbidden(ReferenceBinding)",4,1,4
"org.eclipse.jdt.internal.codeassist.CompletionEngine.isForbidden(char[],char[],char[][])",6,4,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.isIgnored(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.isIgnored(int,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.isIgnored(int,int)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.isValidPackageName(char[])",5,3,5
"org.eclipse.jdt.internal.codeassist.CompletionEngine.isValidParent(ASTNode,ASTNode,Scope)",10,9,23
"org.eclipse.jdt.internal.codeassist.CompletionEngine.mustQualifyType(ReferenceBinding,char[],Scope)",7,8,9
"org.eclipse.jdt.internal.codeassist.CompletionEngine.parseSnippeInitializer(char[],int,char[][],char[][],int[],boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.printDebug(CategorizedProblem)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.printDebug(CompletionProposal)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.printDebug(CompletionProposal,int,StringBuffer)",2,13,33
"org.eclipse.jdt.internal.codeassist.CompletionEngine.printDebugTab(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.proposeConstructor(AcceptedConstructor,Scope)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.proposeConstructor(char[],int,char[],char[][],char[][],int,char[],int,int,char[],char[],boolean,Scope,int)",8,21,39
"org.eclipse.jdt.internal.codeassist.CompletionEngine.proposeNewMethod(char[],ReferenceBinding)",1,3,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.proposeType(char[],char[],int,int,char[],char[],boolean,Scope)",9,7,21
"org.eclipse.jdt.internal.codeassist.CompletionEngine.reset()",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionEngine.setSourceAndTokenRange(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.setSourceAndTokenRange(int,int,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.setSourceRange(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.setSourceRange(int,int,boolean)",1,1,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.setTokenRange(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionEngine.setTokenRange(int,int,boolean)",1,1,3
"org.eclipse.jdt.internal.codeassist.CompletionEngine.substituteMethodTypeParameterName(char,char,char,char[][],char[][])",8,10,12
"org.eclipse.jdt.internal.codeassist.CompletionEngine.substituteMethodTypeParameterName(char[],char[][],char[][])",6,6,6
"org.eclipse.jdt.internal.codeassist.CompletionEngine.substituteMethodTypeParameterNames(TypeVariableBinding[],char[][])",5,6,8
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.CompletionRequestorWrapper(ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.accept(CompletionProposal)",2,38,48
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.completionFailure(IProblem)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.getParameterPackages(char[])",1,2,3
"org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper.getParameterTypes(char[])",1,2,3
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.CompletionUnitStructureRequestor(ICompilationUnit,CompilationUnitElementInfo,Parser,ASTNode,Map,Map,Map,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.acceptAnnotation(Annotation,AnnotatableInfo,JavaElement)",3,3,3
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createAnnotation(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createField(JavaElement,FieldInfo)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createImportContainer(ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createImportDeclaration(ImportContainer,String,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createInitializer(JavaElement)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createMethodHandle(JavaElement,MethodInfo)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createPackageDeclaration(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createTypeHandle(JavaElement,TypeInfo)",1,2,2
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createTypeParameter(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.getMemberValue(MemberValuePair,Expression)",5,1,5
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.getMemberValuePairs(MemberValuePair[])",3,3,4
"org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.hasEmptyName(TypeReference,ASTNode)",15,10,19
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getCompletionNode()",3,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getCompletionNodeParent()",3,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getEnclosingElement()",3,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getExpectedTypesKeys()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getExpectedTypesSignatures()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getOffset()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getToken()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getTokenEnd()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getTokenKind()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getTokenLocation()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getTokenStart()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getVisibleElements(String)",3,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getVisibleFields()",3,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getVisibleLocalVariables()",3,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getVisibleMethods()",3,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.isExtended()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.isInJavadoc()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.isInJavadocFormalReference()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.isInJavadocText()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setExpectedTypesKeys(char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setExpectedTypesSignatures(char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setExtended()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setExtendedData(ITypeRoot,CompilationUnitDeclaration,LookupEnvironment,Scope,ASTNode,ASTNode,WorkingCopyOwner,CompletionParser)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setJavadoc(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setOffset(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setToken(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setTokenKind(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setTokenLocation(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setTokenRange(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionContext.setTokenRange(int,int,int)",1,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.InternalCompletionProposal(int,int)",4,1,7
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.canUseDiamond(CompletionContext)",4,5,8
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.findConstructorParameterNames(char[],char[],char[],char[][])",5,12,22
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.findMethod(IType,char[],char[][])",1,4,7
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.findMethodParameterNames(char[],char[],char[],char[][])",2,6,12
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.findParameterNames(IProgressMonitor)",2,13,23
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getAccessibility()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getAdditionalFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getBinding()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getCompletion()",1,6,6
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getCompletionLocation()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getDeclarationKey()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getDeclarationPackageName()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getDeclarationSignature()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getDeclarationTypeName()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getKey()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getKind()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getName()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getOpenedBinaryTypesThreshold()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getPackageName()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getParameterPackageNames()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getParameterTypeNames()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getReceiverEnd()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getReceiverSignature()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getReceiverStart()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getRelevance()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getReplaceEnd()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getReplaceStart()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getRequiredProposals()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getSignature()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getTokenEnd()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getTokenStart()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.getTypeName()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.isConstructor()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setAccessibility(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setAdditionalFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setBinding(Binding)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setCompletion(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setDeclarationKey(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setDeclarationPackageName(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setDeclarationSignature(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setDeclarationTypeName(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setHasNoParameterNamesFromIndex(boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setIsContructor(boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setKey(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setName(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setOriginalSignature(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setPackageName(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setParameterNames(char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setParameterPackageNames(char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setParameterTypeNames(char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setReceiverRange(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setReceiverSignature(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setRelevance(int)",2,1,2
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setReplaceRange(int,int)",2,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setRequiredProposals(CompletionProposal[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setSignature(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setTokenRange(int,int)",2,1,3
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.setTypeName(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalCompletionProposal.toString()",2,10,37
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.InternalExtendedCompletionContext(InternalCompletionContext,ITypeRoot,CompilationUnitDeclaration,LookupEnvironment,Scope,ASTNode,ASTNode,WorkingCopyOwner,CompletionParser)",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.canUseDiamond(String[],char[])",8,6,12
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.computeEnclosingJavaElements()",2,2,3
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.computeVisibleElementBindings()",8,14,20
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getCompletionNode()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getCompletionNodeParent()",1,1,1
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getEnclosingElement()",2,3,5
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getJavaElement(LocalVariableBinding)",2,5,6
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getJavaElementOfCompilationUnit(ASTNode,Binding)",4,3,5
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getJavaElementOfCompilationUnit(Binding)",2,2,3
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getTypeFromSignature(String,Scope)",1,4,8
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getVisibleElements(String)",11,21,30
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getVisibleFields()",1,2,2
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getVisibleLocalVariables()",1,2,2
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getVisibleMethods()",1,2,2
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.replacePackagesDot(char[])",2,2,6
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.searchVisibleFields(FieldBinding[],ReferenceBinding,Scope,InvocationSite,Scope,boolean,ObjectVector,ObjectVector)",9,5,10
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.searchVisibleFields(ReferenceBinding,Scope,InvocationSite,Scope,boolean,boolean,ObjectVector,ObjectVector)",7,15,21
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.searchVisibleInterfaceMethods(ReferenceBinding[],ReferenceBinding,Scope,InvocationSite,Scope,boolean,ObjectVector)",4,8,10
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.searchVisibleLocalMethods(MethodBinding[],ReferenceBinding,Scope,InvocationSite,Scope,boolean,ObjectVector)",11,5,12
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.searchVisibleMethods(ReferenceBinding,Scope,InvocationSite,Scope,boolean,boolean,ObjectVector)",1,15,15
"org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.searchVisibleVariablesAndMethods(Scope,ObjectVector,ObjectVector,ObjectVector,boolean)",11,16,24
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.MissingTypesGuesser(CompletionEngine)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.ResolutionCleaner()",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.cleanUp(ParameterizedQualifiedTypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.cleanUp(ParameterizedSingleTypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.cleanUp(TypeReference)",1,2,2
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.cleanUp(TypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.cleanUp(TypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(ParameterizedQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(ParameterizedQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(ParameterizedSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(ParameterizedSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(QualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(QualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(SingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(SingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(Wildcard,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.ResolutionCleaner.visit(Wildcard,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.computeMissingElements(QualifiedTypeReference[],char[][][],Binding[],int[],int[])",5,4,5
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.convert(ArrayQualifiedTypeReference)",6,4,7
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.convert(ArrayTypeReference)",5,4,6
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.convert(ParameterizedQualifiedTypeReference)",10,6,13
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.convert(ParameterizedSingleTypeReference)",7,5,8
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.convert(QualifiedTypeReference)",6,4,7
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.convert(SingleTypeReference)",5,4,6
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.convert(TypeReference)",8,8,8
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.convert(Wildcard)",3,2,3
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.findTypeNames(char[][])",3,3,5
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.getOriginal(TypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.getSubstituedTypes()",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.getSubstitution(TypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.guess(TypeReference,Scope,GuessedTypeRequestor)",3,7,9
"org.eclipse.jdt.internal.codeassist.MissingTypesGuesser.nextSubstitution(QualifiedTypeReference[],char[][][][],int[])",3,1,7
"org.eclipse.jdt.internal.codeassist.SelectionEngine.InheritDocVisitor.visitInheritDoc(ReferenceBinding)",6,6,7
"org.eclipse.jdt.internal.codeassist.SelectionEngine.InheritDocVisitor.visitInheritDocInterfaces(ArrayList,ReferenceBinding)",7,5,7
"org.eclipse.jdt.internal.codeassist.SelectionEngine.SelectionEngine(SearchableEnvironment,ISelectionRequestor,Map,WorkingCopyOwner)",1,3,4
"org.eclipse.jdt.internal.codeassist.SelectionEngine.SelectionTypeNameMatchRequestorWrapper.AcceptedType.AcceptedType(int,char[],char[],String,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.codeassist.SelectionEngine.SelectionTypeNameMatchRequestorWrapper.SelectionTypeNameMatchRequestorWrapper(TypeNameMatchRequestor,IJavaSearchScope,ImportReference[])",1,1,1
"org.eclipse.jdt.internal.codeassist.SelectionEngine.SelectionTypeNameMatchRequestorWrapper.acceptNotImported()",1,3,3
"org.eclipse.jdt.internal.codeassist.SelectionEngine.SelectionTypeNameMatchRequestorWrapper.acceptType(int,char[],char[],char[][],String,AccessRestriction)",6,7,9
"org.eclipse.jdt.internal.codeassist.SelectionEngine.SelectionTypeNameMatchRequestorWrapper.initializeImportNodeCaches()",1,3,6
"org.eclipse.jdt.internal.codeassist.SelectionEngine.acceptConstructor(int,char[],int,char[],char[][],char[][],int,char[],int,String,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.codeassist.SelectionEngine.acceptPackage(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.SelectionEngine.acceptQualifiedTypes()",1,9,9
"org.eclipse.jdt.internal.codeassist.SelectionEngine.acceptType(char[],char[],char[][],int,AccessRestriction)",2,10,18
"org.eclipse.jdt.internal.codeassist.SelectionEngine.checkSelection(char[],int,int)",27,20,64
"org.eclipse.jdt.internal.codeassist.SelectionEngine.checkTypeArgument(Scanner)",6,5,16
"org.eclipse.jdt.internal.codeassist.SelectionEngine.findAllTypes(char[])",1,3,6
"org.eclipse.jdt.internal.codeassist.SelectionEngine.findMethodWithAttachedDocInHierarchy(MethodBinding)",8,2,9
"org.eclipse.jdt.internal.codeassist.SelectionEngine.findOverriddenMethodInType(ReferenceBinding,MethodBinding)",5,3,6
"org.eclipse.jdt.internal.codeassist.SelectionEngine.getCorrectMethodBinding(MethodBinding)",4,3,5
"org.eclipse.jdt.internal.codeassist.SelectionEngine.getParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.SelectionEngine.isLocal(ReferenceBinding)",5,3,5
"org.eclipse.jdt.internal.codeassist.SelectionEngine.select(ICompilationUnit,int,int)",9,34,40
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectDeclaration(CompilationUnitDeclaration)",4,3,6
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectDeclaration(TypeDeclaration,char[],char[])",12,19,25
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectFrom(Binding,CompilationUnitDeclaration,ICompilationUnit,boolean)",4,33,46
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectFrom(Binding,CompilationUnitDeclaration,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectLocalDeclaration(ASTNode)",14,8,15
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectMemberTypeFromImport(CompilationUnitDeclaration,char[],ReferenceBinding,boolean)",5,3,6
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectStaticFieldFromStaticImport(CompilationUnitDeclaration,char[],ReferenceBinding)",6,2,6
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectStaticMethodFromStaticImport(CompilationUnitDeclaration,char[],ReferenceBinding)",8,2,8
"org.eclipse.jdt.internal.codeassist.SelectionEngine.selectType(char[],IType)",1,14,18
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.acceptException(ReferenceBinding)",1,3,3
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.endVisit(AllocationExpression,BlockScope)",1,2,2
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.endVisit(MessageSend,BlockScope)",1,2,2
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.endVisit(ThrowStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.endVisitMethodInvocation(MethodBinding)",1,2,3
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.getAlreadyCaughtExceptions()",1,1,1
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.getDiscouragedExceptions()",1,1,1
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.getThrownUncaughtExceptions()",1,1,1
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.processThrownExceptions(TryStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.removeCaughtException(ReferenceBinding)",1,5,5
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.removeCaughtExceptions(TryStatement,boolean)",1,12,13
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.visit(TryStatement,BlockScope)",1,4,5
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.visit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.visit(TypeDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.ThrownExceptionFinder.visitType(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.UnresolvedReferenceNameFinder(CompletionEngine)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.acceptName(char[])",4,3,6
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(Argument,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(Argument,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(Block,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(ConstructorDeclaration,ClassScope)",1,3,3
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(LocalDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisitPreserved(int,int)",3,3,5
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.endVisitRemoved(int,int)",3,3,5
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.find(char[],AbstractMethodDeclaration,int,char[][],UnresolvedReferenceNameRequestor)",1,2,2
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.find(char[],Initializer,ClassScope,int,char[][],UnresolvedReferenceNameRequestor)",1,2,2
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.findAfter(char[],Scope,ClassScope,int,int,char[][],UnresolvedReferenceNameRequestor)",1,2,2
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.findAfter(char[],Scope,int,int,int,boolean,char[][],UnresolvedReferenceNameRequestor)",2,2,6
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.findBefore(char[],Scope,ClassScope,int,int,int,char[][],UnresolvedReferenceNameRequestor)",1,2,2
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.findBefore(char[],Scope,int,int,int,int,char[][],UnresolvedReferenceNameRequestor)",2,1,3
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.getEnclosingDeclaration()",6,1,6
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.indexOfFisrtNameAfter(int)",10,5,13
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.indexOfNextName(int)",2,1,7
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.initPotentialNamesTables(char[][])",7,3,8
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.popParent()",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.pushParent(ASTNode)",1,2,2
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.removeFields(TypeDeclaration)",3,6,8
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.removeLocals(Statement[],int,int)",3,7,9
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.removeNameAt(int)",1,1,2
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.visit(Block,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.visit(ConstructorDeclaration,ClassScope)",1,3,3
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.visit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.visit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.visit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder.visit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc.CompletionJavadoc(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc.getCompletionNode()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc.internalResolve(Scope)",3,11,18
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc.missingParamTags(Binding,MethodScope)",5,3,15
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc.missingTypeParameterTags(Binding,Scope)",7,7,18
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc.print(int,StringBuffer)",1,11,20
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc.resolve(ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc.resolve(CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc.resolve(MethodScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.CompletionJavadocParser(CompletionParser)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.checkDeprecation(int)",1,4,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.commentParse()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.createArgumentReference(char[],int,boolean,Object,long[],long)",2,3,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.createFieldReference(Object)",2,3,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.createMethodReference(Object,List)",2,3,11
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.createTypeReference(int)",6,9,13
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.getCompletionJavadoc()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.getCompletionParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.initLevelTags()",1,5,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.parseArguments(Object)",31,18,37
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.parseParam()",3,10,26
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.parseReference()",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.parseTag(int)",1,2,9
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.parseThrows()",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.possibleTags(char[],boolean)",2,4,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.pushParamName(boolean)",2,4,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.pushText(int,int)",2,20,29
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.readToken()",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.syntaxRecoverArgumentType(Object,List,Object)",4,7,19
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.syntaxRecoverEmptyArgumentType(Object)",1,2,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.syntaxRecoverQualifiedName(int)",2,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.updateDocComment()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser.verifySpaceOrEndComment()",2,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.CompletionNodeDetector(ASTNode,ASTNode)",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.containsCompletionNode()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(AND_AND_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ASTNode)",1,1,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(AllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayInitializer,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(Assignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(BinaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(CastExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(CompoundAssignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ConditionalExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(EqualExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ExplicitConstructorCall,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(FieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(InstanceOfExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(MemberValuePair,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(MemberValuePair,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(OR_OR_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ParameterizedQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ParameterizedQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ParameterizedSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ParameterizedSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(PostfixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(PrefixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedSuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(QualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ReferenceExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(SingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(SingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(SingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(SuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(ThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.endVisit(UnaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.getCompletionNodeParent()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(AND_AND_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ASTNode)",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(AllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayInitializer,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(Assignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(BinaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(CastExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(CompoundAssignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ConditionalExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(EqualExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ExplicitConstructorCall,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(FieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(InstanceOfExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(MemberValuePair,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(MemberValuePair,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(OR_OR_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ParameterizedQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ParameterizedQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ParameterizedSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ParameterizedSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(PostfixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(PrefixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedSuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(QualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ReferenceExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(SingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(SingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(SingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(StringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(SuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(ThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector.visit(UnaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound.CompletionNodeFound()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound.CompletionNodeFound(ASTNode,Binding,Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound.CompletionNodeFound(ASTNode,Binding,Scope,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound.CompletionNodeFound(ASTNode,Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound.CompletionNodeFound(ASTNode,Scope,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnAnnotationMemberValuePair.CompletionOnAnnotationMemberValuePair(TypeReference,int,MemberValuePair[],MemberValuePair)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnAnnotationMemberValuePair.printExpression(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnAnnotationMemberValuePair.resolveType(BlockScope)",2,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnAnnotationOfType.CompletionOnAnnotationOfType(char[],CompilationResult,Annotation)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnAnnotationOfType.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName.CompletionOnArgumentName(char[],long,TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName.bind(MethodScope,TypeBinding,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName.print(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnBranchStatementLabel.CompletionOnBranchStatementLabel(int,char[],int,int,char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnBranchStatementLabel.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnBranchStatementLabel.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnBranchStatementLabel.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassLiteralAccess.CompletionOnClassLiteralAccess(long,TypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassLiteralAccess.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassLiteralAccess.resolveType(BlockScope)",2,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExplicitConstructorCall.CompletionOnExplicitConstructorCall(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExplicitConstructorCall.printStatement(int,StringBuffer)",1,6,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnExplicitConstructorCall.resolve(BlockScope)",4,4,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldName.CompletionOnFieldName(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldName.printStatement(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldName.resolve(MethodScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldType.CompletionOnFieldType(TypeReference,boolean)",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldType.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnImportReference.CompletionOnImportReference(char[][],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnImportReference.print(int,StringBuffer,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocAllocationExpression.CompletionOnJavadocAllocationExpression(JavadocAllocationExpression,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocAllocationExpression.CompletionOnJavadocAllocationExpression(JavadocAllocationExpression,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocAllocationExpression.addCompletionFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocAllocationExpression.completeAnException()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocAllocationExpression.completeBaseTypes()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocAllocationExpression.completeFormalReference()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocAllocationExpression.completeInText()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocAllocationExpression.getCompletionFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocAllocationExpression.printExpression(int,StringBuffer)",1,11,11
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.CompletionOnJavadocFieldReference(Expression,int,int,int,char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.CompletionOnJavadocFieldReference(JavadocFieldReference,int,char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.CompletionOnJavadocFieldReference(JavadocMessageSend,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.addCompletionFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.completeAnException()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.completeBaseTypes()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.completeFormalReference()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.completeInText()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.getCompletionFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.internalResolveType(Scope)",2,4,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocFieldReference.printExpression(int,StringBuffer)",1,11,11
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocMessageSend.CompletionOnJavadocMessageSend(JavadocMessageSend,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocMessageSend.CompletionOnJavadocMessageSend(JavadocMessageSend,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocMessageSend.addCompletionFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocMessageSend.completeAnException()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocMessageSend.completeBaseTypes()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocMessageSend.completeFormalReference()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocMessageSend.completeInText()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocMessageSend.getCompletionFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocMessageSend.printExpression(int,StringBuffer)",1,11,11
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocParamNameReference.CompletionOnJavadocParamNameReference(JavadocSingleNameReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocParamNameReference.CompletionOnJavadocParamNameReference(char[],long,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocParamNameReference.addCompletionFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocParamNameReference.getCompletionFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocParamNameReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocParamNameReference.reportError(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference.CompletionOnJavadocQualifiedTypeReference(JavadocQualifiedTypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference.CompletionOnJavadocQualifiedTypeReference(char[][],char[],long[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference.addCompletionFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference.completeAnException()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference.completeBaseTypes()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference.completeFormalReference()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference.completeInText()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference.getCompletionFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference.printExpression(int,StringBuffer)",1,11,11
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference.CompletionOnJavadocSingleTypeReference(JavadocSingleTypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference.CompletionOnJavadocSingleTypeReference(char[],long,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference.addCompletionFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference.completeAnException()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference.completeBaseTypes()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference.completeFormalReference()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference.completeInText()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference.getCompletionFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference.printExpression(int,StringBuffer)",1,11,11
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTag.CompletionOnJavadocTag(char[],long,int,int,char[][][],boolean)",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTag.addCompletionFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTag.filterPossibleTags(Scope)",8,11,26
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTag.getCompletionFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTag.getPossibleBlockTags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTag.getPossibleInlineTags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTag.printExpression(int,StringBuffer)",1,8,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTypeParamReference.CompletionOnJavadocTypeParamReference(JavadocSingleTypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTypeParamReference.CompletionOnJavadocTypeParamReference(char[],long,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTypeParamReference.addCompletionFlags(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTypeParamReference.getCompletionFlags()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTypeParamReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTypeParamReference.reportError(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.CompletionOnKeyword1(char[],long,char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.CompletionOnKeyword1(char[],long,char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.getPossibleKeywords()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.getToken()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2.CompletionOnKeyword2(char[],long,char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2.getPossibleKeywords()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2.getToken()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2.print(int,StringBuffer,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.CompletionOnKeyword3(char[],long,char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.CompletionOnKeyword3(char[],long,char[][])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.getPossibleKeywords()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.getToken()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnLocalName.CompletionOnLocalName(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnLocalName.printAsExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnLocalName.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnLocalName.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMarkerAnnotationName.CompletionOnMarkerAnnotationName(TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMarkerAnnotationName.resolveType(BlockScope)",3,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberAccess.CompletionOnMemberAccess(char[],long,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberAccess.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberAccess.resolveType(BlockScope)",6,8,11
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberValueName.CompletionOnMemberValueName(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberValueName.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSend.printExpression(int,StringBuffer)",1,7,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSend.resolveType(BlockScope)",3,5,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSendName.CompletionOnMessageSendName(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSendName.printExpression(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSendName.resolveType(BlockScope)",3,5,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodName.CompletionOnMethodName(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodName.print(int,StringBuffer)",1,7,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodName.resolve(ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodReturnType.CompletionOnMethodReturnType(TypeReference,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodReturnType.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodReturnType.resolveStatements()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodTypeParameter.CompletionOnMethodTypeParameter(TypeParameter[],CompilationResult)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodTypeParameter.print(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodTypeParameter.resolveStatements()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnPackageReference.CompletionOnPackageReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnPackageReference.print(int,StringBuffer,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.CompletionOnParameterizedQualifiedTypeReference(char[][],TypeReference[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.CompletionOnParameterizedQualifiedTypeReference(char[][],TypeReference[][],char[],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.isClass()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.isException()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.isInterface()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.isSuperType()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.printExpression(int,StringBuffer)",2,7,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.resolveType(BlockScope,boolean,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference.resolveType(ClassScope,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedAllocationExpression.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedAllocationExpression.resolveType(BlockScope)",5,9,19
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedNameReference.CompletionOnQualifiedNameReference(char[][],char[],long[],boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedNameReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedNameReference.resolveType(BlockScope)",3,4,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.CompletionOnQualifiedTypeReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.CompletionOnQualifiedTypeReference(char[][],char[],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.augmentTypeWithAdditionalDimensions(int,Annotation[][],boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.getTypeBinding(Scope)",3,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.isClass()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.isException()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.isInterface()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.isSuperType()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.printExpression(int,StringBuffer)",2,3,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference.setKind(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnReferenceExpressionName.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnReferenceExpressionName.resolveType(BlockScope)",4,5,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference.CompletionOnSingleNameReference(char[],long,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference.CompletionOnSingleNameReference(char[],long,char[][],boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference.resolveType(BlockScope)",2,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.CompletionOnSingleTypeReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.CompletionOnSingleTypeReference(char[],long,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.augmentTypeWithAdditionalDimensions(int,Annotation[][],boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.getTypeBinding(Scope)",3,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.isClass()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.isException()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.isInterface()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.isSuperType()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.printExpression(int,StringBuffer)",2,2,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",3,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference.setKind(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnStringLiteral.CompletionOnStringLiteral(char[],int,int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnStringLiteral.CompletionOnStringLiteral(int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnStringLiteral.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnStringLiteral.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionOnStringLiteral.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.CompletionParser(ProblemReporter,boolean)",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.CompletionParser(ProblemReporter,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.addPotentialName(char[],int,int)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.assistIdentifier()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.assistNodeNeedsStacking()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.assistNodeParent()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.attachOrphanCompletionNode()",52,85,116
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.augmentTypeWithAdditionalDimensions(TypeReference,int,Annotation[][],boolean)",2,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.becomeSimpleParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.bodyEnd(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.bodyEnd(Initializer)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.buildMoreAnnotationCompletionContext(MemberValuePair)",2,6,14
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.buildMoreCompletionContext(Expression)",9,33,100
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.buildMoreCompletionEnclosingContext(Statement)",4,6,21
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.buildMoreGenericsCompletionContext(ASTNode,boolean)",4,19,26
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.buildMoreTryStatementCompletionContext(TypeReference)",1,3,12
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkAndSetModifiers(int)",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkClassInstanceCreation()",3,7,12
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkClassLiteralAccess()",4,5,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkInstanceofKeyword()",4,7,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkInvocation()",5,13,31
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkKeyword()",4,7,23
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkLabelStatement()",4,5,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkMemberAccess()",3,2,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkMemberValueName()",4,1,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkNameCompletion()",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkParemeterizedMethodName()",5,8,13
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkParemeterizedType()",4,4,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkRecoveredMethod()",5,4,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.checkRecoveredType()",6,8,12
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.classHeaderExtendsOrImplements(boolean)",1,5,12
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.completionIdentifierCheck()",18,10,28
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAdditionalBound()",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAdditionalBound1()",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAnnotationAsModifier()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAnnotationName()",3,3,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAnnotationTypeDeclarationHeaderName()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAnnotationTypeDeclarationHeaderNameWithTypeParameters()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeArrayCreationExpressionWithInitializer()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeArrayCreationExpressionWithoutInitializer()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeArrayCreationHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAssignment()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeAssignmentOperator(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeBinaryExpression(int)",1,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeBinaryExpressionWithName(int)",1,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeBlockStatement()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCaseLabel()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionLL1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionWithGenericsArray()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionWithNameArray()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionWithPrimitiveType()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCastExpressionWithQualifiedGenericsArray()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCatchFormalParameter()",1,3,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassBodyDeclaration()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassBodyopt()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassDeclaration()",1,2,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassHeaderExtends()",1,2,12
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassHeaderImplements()",1,1,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassHeaderName1()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassInstanceCreationExpressionName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeClassTypeElt()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeCompilationUnit()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConditionalExpression(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConditionalExpressionWithName(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConstructorBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConstructorHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConstructorHeaderName()",2,4,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeConstructorHeaderNameWithTypeParameters()",1,3,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeDefaultLabel()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeDimWithOrWithOutExpr()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEmptyStatement()",1,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnhancedForStatement()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnhancedForStatementHeaderInit(boolean)",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnterAnonymousClassBody(boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnterVariable()",5,11,19
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnumConstantHeaderName()",3,3,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnumConstantNoClassBody()",1,3,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnumConstantWithClassBody()",1,3,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnumHeaderName()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEnumHeaderNameWithTypeParameters()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEqualityExpression(int)",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeEqualityExpressionWithName(int)",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeExitVariableWithInitialization()",1,3,11
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeExitVariableWithoutInitialization()",1,3,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeExplicitConstructorInvocation(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeFieldAccess(boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeForceNoDiet()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeFormalParameter(boolean)",1,10,17
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeGenericTypeWithDiamond()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeIdentifierOrNew(boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeImportDeclaration()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInsideCastExpression()",1,6,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInsideCastExpressionLL1()",1,5,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInsideCastExpressionLL1WithBounds()",1,6,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInsideCastExpressionWithQualifiedGenerics()",1,4,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInstanceOfExpression()",1,2,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInstanceOfExpressionWithName()",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInterfaceHeaderExtends()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInterfaceHeaderName1()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInterfaceType()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeInvocationExpression()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeLabel()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeLambdaExpression()",1,2,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMarkerAnnotation(boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMemberValueAsName()",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMemberValuePair()",2,2,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodDeclaration(boolean,boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodHeaderExtendedDims()",1,2,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodHeaderName(boolean)",1,13,15
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodHeaderNameWithTypeParameters(boolean)",1,2,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodHeaderRightParen()",1,2,9
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodInvocationName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodInvocationNameWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodInvocationPrimary()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodInvocationPrimaryWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodInvocationSuper()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeMethodInvocationSuperWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeModifiers()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeNestedMethod()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeNormalAnnotation(boolean)",3,7,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeOnlySynchronized()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeOnlyTypeArguments()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeOnlyTypeArgumentsForCastExpression()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeOpenFakeBlock()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumePackageDeclarationName()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumePackageDeclarationNameWithModifiers()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumePrimaryNoNewArrayName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumePrimaryNoNewArrayNameSuper()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumePrimaryNoNewArrayNameThis()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumePushCombineModifiers()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumePushPosition()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeReferenceType()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeReferenceType1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeReferenceType2()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeReferenceType3()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeRestoreDiet()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeRightParen()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeSingleMemberAnnotation(boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeSingleStaticImportDeclarationName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeSingleTypeImportDeclarationName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStatementBreakWithLabel()",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStatementFor()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStatementIfNoElse()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStatementIfWithElse()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStatementLabel()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStatementSwitch()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStatementWhile()",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStaticImportOnDemandDeclarationName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeStaticInitializer()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeToken(int)",16,70,188
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeArgumentReferenceType1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeArgumentReferenceType2()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeArguments()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeHeaderNameWithTypeParameters()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeImportOnDemandDeclarationName()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameter1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameter1WithExtends()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameter1WithExtendsAndBounds()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameterHeader()",5,5,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameterWithExtends()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameterWithExtendsAndBounds()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeTypeParameters()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeUnaryExpression(int)",1,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeUnaryExpression(int,boolean)",1,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeUnionType()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeUnionTypeAsClassType()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcard()",4,5,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcard1()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcard2()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcard3()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcardBounds1Extends()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcardBounds2Extends()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcardBounds3Extends()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.consumeWildcardBoundsExtends()",1,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.convertToMethodDeclaration(ConstructorDeclaration,CompilationResult)",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.copyState(Parser)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createAssistImportReference(char[][],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createAssistPackageReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createFieldDeclaration(char[],int,int)",2,3,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createJavadocParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createLocalDeclaration(char[],int,int)",2,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createParameterizedQualifiedAssistTypeReference(char[][],TypeReference[][],char[],TypeReference[],long[])",5,3,9
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createParameterizedSingleAssistTypeReference(TypeReference[],char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createQualifiedAssistNameReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createQualifiedAssistTypeReference(char[][],char[],long[])",4,2,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createSingleAssistNameReference(char[],long)",7,11,32
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createSingleAssistTypeReference(char[],long)",4,2,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createSnapShotParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.createStringLiteral(char[],int,int,int)",3,1,25
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.dietParse(ICompilationUnit,CompilationResult,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.enclosingNode()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.flushAssistState()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.getTypeReferenceForGenericType(int,int,int)",9,1,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.getUnspecifiedReference(boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.getUnspecifiedReferenceOptimized()",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.indexOfAssistIdentifier(boolean)",2,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.initialize()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.initialize(boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.initializeForBlockStatements()",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.initializeScanner()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isAfterArrayType()",2,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isAlreadyPotentialName(int)",2,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isEmptyNameCompletion()",1,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInImportStatement()",3,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isIndirectlyInsideBlock()",3,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideAnnotation()",3,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideArrayInitializer()",2,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideBlock()",6,2,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideBreakable()",8,3,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideLoop()",7,3,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.isInsideReturn()",8,2,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.newReferenceExpression()",2,2,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.parse(ICompilationUnit,CompilationResult,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.parseBlockStatements(ConstructorDeclaration,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.parseSomeStatements(int,int,int,CompilationUnitDeclaration)",1,4,6
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.popUntilCompletedAnnotationIfNecessary()",2,1,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.prepareForBlockStatements()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.pushCompletionOnMemberAccessOnExpressionStack(boolean)",1,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.pushOnLabelStack(char[])",2,2,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.recordReference(NameReference)",3,5,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.recoveryExitFromVariable()",1,6,8
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.recoveryTokenCheck()",2,9,15
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.reset()",1,1,2
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.resetAfterCompletion()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.restoreAssistParser(Object)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.resumeAfterRecovery()",6,9,13
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.resumeOnSyntaxError()",4,3,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.setAssistIdentifier(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.shouldStackAssistNode()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.stackHasInstanceOfExpression(Object[],int)",3,1,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.startRecordingIdentifiers(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.stopRecordingIdentifiers()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.toString()",1,3,3
"org.eclipse.jdt.internal.codeassist.complete.CompletionParser.updateRecoveryState()",1,4,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.CompletionScanner(long)",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.getCurrentIdentifierSource()",4,4,7
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.getCurrentTokenSourceString()",3,4,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.getNextToken0()",130,104,260
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.getNextUnicodeChar()",2,1,4
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.isAtAssistIdentifier()",3,1,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.isFirstTag()",1,10,10
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.jumpOverBlock()",1,1,1
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.scanIdentifierOrKeyword()",2,3,5
"org.eclipse.jdt.internal.codeassist.complete.CompletionScanner.scanNumber(boolean)",2,1,3
"org.eclipse.jdt.internal.codeassist.complete.InvalidCursorLocation.InvalidCursorLocation(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistAnnotation.AssistAnnotation(JavaElement,String,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistAnnotation.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistCompilationUnit.AssistCompilationUnit(ICompilationUnit,WorkingCopyOwner,Map,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistCompilationUnit.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistCompilationUnit.getImportContainer()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistCompilationUnit.getPackageDeclaration(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistCompilationUnit.getType(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistCompilationUnit.hasChildren()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistImportContainer.AssistImportContainer(CompilationUnit,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistImportContainer.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistImportContainer.getImport(String,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistImportDeclaration.AssistImportDeclaration(ImportContainer,String,boolean,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistImportDeclaration.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistInitializer.AssistInitializer(JavaElement,int,Map,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistInitializer.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistInitializer.getType(String,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistOptions.AssistOptions()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistOptions.AssistOptions(Map)",2,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistOptions.set(Map)",1,45,52
"org.eclipse.jdt.internal.codeassist.impl.AssistOptions.splitAndTrimOn(char,char[])",1,2,4
"org.eclipse.jdt.internal.codeassist.impl.AssistPackageDeclaration.AssistPackageDeclaration(CompilationUnit,String,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistPackageDeclaration.getAnnotation(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistPackageDeclaration.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.AssistParser(ProblemReporter)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.assistNodeNeedsStacking()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.assistNodeParent()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.becomeSimpleParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.bodyEnd(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.bodyEnd(Initializer)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.buildInitialRecoveryState()",18,35,50
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.commit()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeAnnotationTypeDeclarationHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeBlockStatement()",1,2,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeBlockStatements()",1,2,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeClassBodyDeclaration()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeClassBodyopt()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeClassHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeConstructorBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeConstructorHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnhancedForStatementHeaderInit(boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnterAnonymousClassBody(boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnterMemberValue()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnumConstantHeader()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnumConstantHeaderName()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnumConstantNoClassBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnumConstantWithClassBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeEnumHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeExitMemberValue()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeExplicitConstructorInvocation(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeFieldDeclaration()",1,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeForceNoDiet()",1,5,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeInterfaceHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodBody()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodDeclaration(boolean,boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationName()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationNameWithTypeArguments()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationPrimary()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationPrimaryWithTypeArguments()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationSuper()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodInvocationSuperWithTypeArguments()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeNestedLambda()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeNestedMethod()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeOpenBlock()",1,5,6
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeOpenFakeBlock()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumePackageDeclarationName()",2,2,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumePackageDeclarationNameWithModifiers()",2,3,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeRestoreDiet()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeSingleStaticImportDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeSingleTypeImportDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeStaticImportOnDemandDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeStaticInitializer()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeStaticOnly()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeToken(int)",5,10,20
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeTypeImportOnDemandDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.copyState(Parser)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.enclosingNode()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.fallBackToSpringForward(Statement)",8,5,9
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.flushAssistState()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.flushElementStack()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.getAssistTypeReferenceForGenericType(int,int,int)",3,10,19
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.getNextToken()",1,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.getTypeReference(int)",2,4,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.getUnspecifiedReferenceOptimized()",2,3,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.goForBlockStatementsOrCatchHeader()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.goForBlockStatementsopt()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.goForCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.goForHeaders()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.identifierSubSet(int)",2,1,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.indexOfAssistIdentifier()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.indexOfAssistIdentifier(boolean)",5,1,8
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.initialize()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.initialize(boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isAssistParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isIndirectlyInsideFieldInitialization()",3,1,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isIndirectlyInsideLambdaBlock()",3,1,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isIndirectlyInsideLambdaExpression()",3,1,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isIndirectlyInsideMethod()",3,1,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isIndirectlyInsideType()",3,1,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isInsideArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isInsideAttributeValue()",6,2,6
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isInsideFieldInitialization()",5,2,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isInsideMethod()",5,2,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.isInsideType()",5,2,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.lastIndexOfElement(int)",3,1,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(AbstractMethodDeclaration,CompilationUnitDeclaration)",1,3,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(ConstructorDeclaration,CompilationUnitDeclaration)",2,3,7
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(Initializer,TypeDeclaration,CompilationUnitDeclaration)",2,2,6
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(MethodDeclaration,CompilationUnitDeclaration)",5,2,8
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.popElement(int)",3,2,7
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.popUntilElement(int)",2,1,7
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.prepareForBlockStatements()",1,3,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.prepareForHeaders()",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.pushOnElementStack(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.pushOnElementStack(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.pushOnElementStack(int,int,Object)",2,2,3
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.recoveryExitFromVariable()",1,3,5
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.recoveryTokenCheck()",2,14,21
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.requireExtendedRecovery()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.reset()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.restoreAssistParser(Object)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.resumeAfterRecovery()",8,13,21
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.shouldStackAssistNode()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementInfo(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementInfo(int,int)",4,1,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementKind(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementKind(int,int)",4,1,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementObjectInfo(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.topKnownElementObjectInfo(int,int)",4,1,4
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.triggerRecoveryUponLambdaClosure(Statement,boolean)",9,12,34
"org.eclipse.jdt.internal.codeassist.impl.AssistParser.wrapWithExplicitConstructorCallIfNeeded(ASTNode)",2,5,7
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceField.AssistSourceField(JavaElement,String,Map,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceField.getAnnotation(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceField.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceField.getKey()",3,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceField.getType(String,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceField.isResolved()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceField.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceMethod.AssistSourceMethod(JavaElement,String,String[],Map,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceMethod.getAnnotation(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceMethod.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceMethod.getKey()",3,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceMethod.getType(String,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceMethod.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceMethod.isResolved()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceMethod.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.AssistSourceType(JavaElement,String,Map,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getAnnotation(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getField(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getFullyQualifiedParameterizedName()",2,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getInitializer(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getKey()",3,3,4
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getMethod(String,String[])",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getType(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getType(String,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.isResolved()",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistSourceType.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.AssistTypeParameter.AssistTypeParameter(JavaElement,String,Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.AssistTypeParameter.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.Engine.Engine(Map)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.Engine.accept(IBinaryType,PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.Engine.accept(ICompilationUnit,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.codeassist.impl.Engine.accept(ISourceType[],PackageBinding,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.Engine.getSignature(MethodBinding)",1,3,3
"org.eclipse.jdt.internal.codeassist.impl.Engine.getSignature(TypeBinding)",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.Engine.getTypeSignature(TypeBinding)",1,2,2
"org.eclipse.jdt.internal.codeassist.impl.Engine.initializeImportCaches()",1,5,9
"org.eclipse.jdt.internal.codeassist.impl.Engine.initializePackageCache()",1,3,4
"org.eclipse.jdt.internal.codeassist.impl.Engine.mustQualifyType(char[],char[],char[],int)",12,17,27
"org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(CompilationUnitDeclaration,int)",3,3,4
"org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(TypeDeclaration,CompilationUnitDeclaration,int)",14,11,15
"org.eclipse.jdt.internal.codeassist.impl.Engine.reset(boolean)",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadoc.SelectionJavadoc(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadoc.internalResolve(Scope)",5,4,16
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadoc.print(int,StringBuffer)",1,2,11
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadoc.resolve(ClassScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadoc.resolve(MethodScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.SelectionJavadocParser(SelectionParser)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.checkDeprecation(int)",1,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.commentParse()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.createArgumentReference(char[],int,boolean,Object,long[],long)",1,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.createFieldReference(Object)",1,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.createMethodReference(Object,List)",1,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.createTypeReference(int)",5,7,9
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.parseInheritDocTag()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.pushParamName(boolean)",1,4,5
"org.eclipse.jdt.internal.codeassist.select.SelectionJavadocParser.updateDocComment()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionNodeFound.SelectionNodeFound()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionNodeFound.SelectionNodeFound(Binding)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionNodeFound.SelectionNodeFound(Binding,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.SelectionOnArgumentName(char[],long,TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.SelectionOnArgumentName(char[],long,TypeReference,int,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.bind(MethodScope,TypeBinding,boolean)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.print(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnArgumentName.resolveForCatch(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnExplicitConstructorCall.SelectionOnExplicitConstructorCall(int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnExplicitConstructorCall.printStatement(int,StringBuffer)",1,6,6
"org.eclipse.jdt.internal.codeassist.select.SelectionOnExplicitConstructorCall.resolve(BlockScope)",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldReference.SelectionOnFieldReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldReference.resolveType(BlockScope)",2,6,7
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldType.SelectionOnFieldType(TypeReference)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnFieldType.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnImportReference.SelectionOnImportReference(char[][],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnImportReference.print(int,StringBuffer,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLambdaExpression.SelectionOnLambdaExpression(LambdaExpression)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLambdaExpression.resolveType(BlockScope)",2,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLocalName.SelectionOnLocalName(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLocalName.printAsExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLocalName.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnLocalName.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnMessageSend.findNonDefaultAbstractMethod(MethodBinding)",9,9,11
"org.eclipse.jdt.internal.codeassist.select.SelectionOnMessageSend.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.codeassist.select.SelectionOnMessageSend.resolveType(BlockScope)",3,8,8
"org.eclipse.jdt.internal.codeassist.select.SelectionOnNameOfMemberValuePair.SelectionOnNameOfMemberValuePair(char[],int,int,Expression)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnNameOfMemberValuePair.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnNameOfMemberValuePair.resolveTypeExpecting(BlockScope,TypeBinding)",2,1,2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnPackageReference.SelectionOnPackageReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnPackageReference.print(int,StringBuffer,boolean)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedQualifiedTypeReference.SelectionOnParameterizedQualifiedTypeReference(char[][],char[],TypeReference[][],TypeReference[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedQualifiedTypeReference.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedQualifiedTypeReference.resolveType(BlockScope,boolean,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedQualifiedTypeReference.resolveType(ClassScope,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedSingleTypeReference.SelectionOnParameterizedSingleTypeReference(char[],TypeReference[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedSingleTypeReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedSingleTypeReference.resolveType(BlockScope,boolean,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnParameterizedSingleTypeReference.resolveType(ClassScope,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedAllocationExpression.SelectionOnQualifiedAllocationExpression()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedAllocationExpression.SelectionOnQualifiedAllocationExpression(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedAllocationExpression.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedAllocationExpression.resolveType(BlockScope)",11,6,13
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedNameReference.SelectionOnQualifiedNameReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedNameReference.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedNameReference.resolveType(BlockScope)",6,7,10
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedSuperReference.SelectionOnQualifiedSuperReference(TypeReference,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedSuperReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedSuperReference.resolveType(BlockScope)",2,2,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedTypeReference.SelectionOnQualifiedTypeReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedTypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedTypeReference.getTypeBinding(Scope)",3,4,5
"org.eclipse.jdt.internal.codeassist.select.SelectionOnQualifiedTypeReference.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnReferenceExpression.SelectionOnReferenceExpression(ReferenceExpression)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnReferenceExpression.resolveType(BlockScope)",2,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionOnReferenceExpressionName.SelectionOnReferenceExpressionName()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnReferenceExpressionName.isConstructorReference()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnReferenceExpressionName.isMethodReference()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnReferenceExpressionName.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnReferenceExpressionName.resolveType(BlockScope)",3,3,7
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleNameReference.SelectionOnSingleNameReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleNameReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleNameReference.resolveType(BlockScope)",8,9,13
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.SelectionOnSingleTypeReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.getTypeBinding(Scope)",2,4,4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSuperReference.SelectionOnSuperReference(int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSuperReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionOnSuperReference.resolveType(BlockScope)",2,2,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.SelectionParser(ProblemReporter)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.assistIdentifier()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.attachOrphanCompletionNode()",5,7,10
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.buildMoreCompletionContext(Expression)",2,8,17
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.checkRecoveredType()",5,3,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.classInstanceCreation(boolean)",4,5,8
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeArrayCreationExpressionWithInitializer()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeArrayCreationExpressionWithoutInitializer()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeCastExpressionLL1()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeCastExpressionLL1WithBounds()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeCastExpressionWithGenericsArray()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeCastExpressionWithNameArray()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeCastExpressionWithPrimitiveType()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeCastExpressionWithQualifiedGenericsArray()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeCatchFormalParameter()",1,3,8
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()",3,4,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeClassInstanceCreationExpressionWithTypeArguments()",3,4,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeEnterAnonymousClassBody(boolean)",2,5,8
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeEnterVariable()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeExitVariableWithInitialization()",1,1,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeFieldAccess(boolean)",2,3,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeFormalParameter(boolean)",1,10,21
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeInsideCastExpression()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeInsideCastExpressionLL1()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeInsideCastExpressionLL1WithBounds()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeInsideCastExpressionWithQualifiedGenerics()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeInstanceOfExpression()",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeInstanceOfExpressionWithName()",1,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeLambdaExpression()",1,2,7
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeLocalVariableDeclarationStatement()",1,1,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeMarkerAnnotation(boolean)",2,4,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeMemberValuePair()",2,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeMethodInvocationName()",4,6,12
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeMethodInvocationPrimary()",4,6,6
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeNormalAnnotation(boolean)",2,5,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeReferenceExpression(ReferenceExpression)",1,1,5
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeSingleMemberAnnotation(boolean)",2,4,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeStaticImportOnDemandDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeToken(int)",3,7,10
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeTypeImportOnDemandDeclarationName()",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createAssistImportReference(char[][],long[],int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createAssistPackageReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createJavadocParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createLocalDeclaration(char[],int,int)",2,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createParameterizedQualifiedAssistTypeReference(char[][],TypeReference[][],char[],TypeReference[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createParameterizedSingleAssistTypeReference(TypeReference[],char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createQualifiedAssistNameReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createQualifiedAssistTypeReference(char[][],char[],long[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createSingleAssistNameReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createSingleAssistTypeReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.createSnapShotParser()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.dietParse(ICompilationUnit,CompilationResult,int,int)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.getUnspecifiedReference(boolean)",3,7,10
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.getUnspecifiedReferenceOptimized()",1,1,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.initializeScanner()",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.newMessageSend()",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.newMessageSendWithTypeArguments()",2,3,4
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.newReferenceExpression()",2,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.parse(ICompilationUnit,CompilationResult,int,int)",2,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.resumeAfterRecovery()",7,6,9
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.selectionIdentifierCheck()",2,1,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.setAssistIdentifier(char[])",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.toString()",1,3,3
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.typeElidedArgument()",2,2,2
"org.eclipse.jdt.internal.codeassist.select.SelectionParser.updateRecoveryState()",1,2,3
"org.eclipse.jdt.internal.codeassist.select.SelectionScanner.SelectionScanner(long)",1,1,1
"org.eclipse.jdt.internal.codeassist.select.SelectionScanner.getCurrentIdentifierSource()",3,4,5
"org.eclipse.jdt.internal.codeassist.select.SelectionScanner.isAtAssistIdentifier()",1,1,2
"org.eclipse.jdt.internal.codeassist.select.SelectionScanner.scanIdentifierOrKeyword()",2,1,4
"org.eclipse.jdt.internal.compiler.ASTVisitor.acceptProblem(IProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AND_AND_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AnnotationMethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Argument,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Argument,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayInitializer,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayInitializer,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(AssertStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Assignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(BinaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Block,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(BreakStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CaseStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CastExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CharLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ClassLiteralAccess,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Clinit,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CompilationUnitDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(CompoundAssignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ConditionalExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ContinueStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(DoStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(DoubleLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(EmptyStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(EqualExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ExplicitConstructorCall,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ExtendedStringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FalseLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FieldReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(FloatLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ForStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ForeachStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(IfStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ImportReference,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(InstanceOfExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(IntLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(IntersectionCastTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(IntersectionCastTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Javadoc,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Javadoc,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocAllocationExpression,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArgumentExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArgumentExpression,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArraySingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocArraySingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocFieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocFieldReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocImplicitTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocImplicitTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocMessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocMessageSend,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocReturnStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocReturnStatement,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocSingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocSingleNameReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(JavadocSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LabeledStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LambdaExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LocalDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(LongLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MarkerAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MarkerAnnotation,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MemberValuePair,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MemberValuePair,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(NormalAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(NormalAnnotation,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(NullLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(OR_OR_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ParameterizedSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(PostfixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(PrefixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedNameReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedSuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedSuperReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedThisReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(QualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ReferenceExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ReturnStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleMemberAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleMemberAnnotation,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleNameReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(StringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(StringLiteralConcatenation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SwitchStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(SynchronizedStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ThisReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(ThrowStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TrueLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TryStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeParameter,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(TypeParameter,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(UnaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(UnionTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(UnionTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(WhileStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Wildcard,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.endVisit(Wildcard,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AND_AND_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AnnotationMethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Argument,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Argument,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayInitializer,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayInitializer,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ArrayTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(AssertStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Assignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(BinaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Block,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(BreakStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CaseStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CastExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CharLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ClassLiteralAccess,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Clinit,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CompilationUnitDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(CompoundAssignment,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ConditionalExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ContinueStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(DoStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(DoubleLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(EmptyStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(EqualExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ExplicitConstructorCall,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ExtendedStringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FalseLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FieldReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(FloatLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ForStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ForeachStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(IfStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ImportReference,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(InstanceOfExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(IntLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(IntersectionCastTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(IntersectionCastTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Javadoc,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Javadoc,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocAllocationExpression,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArgumentExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArgumentExpression,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArrayQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArrayQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArraySingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocArraySingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocFieldReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocFieldReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocImplicitTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocImplicitTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocMessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocMessageSend,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocReturnStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocReturnStatement,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocSingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocSingleNameReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(JavadocSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LabeledStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LambdaExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LocalDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(LongLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MarkerAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MarkerAnnotation,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MemberValuePair,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MemberValuePair,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MessageSend,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(NormalAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(NormalAnnotation,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(NullLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(OR_OR_Expression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedQualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedQualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedSingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ParameterizedSingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(PostfixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(PrefixExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedAllocationExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedNameReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedSuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedSuperReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedThisReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(QualifiedTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ReferenceExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ReturnStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleMemberAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleMemberAnnotation,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleNameReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleNameReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SingleTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(StringLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(StringLiteralConcatenation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SuperReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SwitchStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(SynchronizedStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ThisReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ThisReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(ThrowStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TrueLiteral,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TryStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeDeclaration,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeParameter,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(TypeParameter,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(UnaryExpression,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(UnionTypeReference,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(UnionTypeReference,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(WhileStatement,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Wildcard,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ASTVisitor.visit(Wildcard,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.ClassFile()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.ClassFile(SourceTypeBinding)",1,1,5
"org.eclipse.jdt.internal.compiler.ClassFile.add(Map,StackMapFrame)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addAbstractMethod(AbstractMethodDeclaration,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addAttributes()",4,21,25
"org.eclipse.jdt.internal.compiler.ClassFile.addDefaultAbstractMethods()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.addFieldAttributes(FieldBinding,int)",1,16,18
"org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfo(FieldBinding)",1,3,4
"org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfos()",1,6,8
"org.eclipse.jdt.internal.compiler.ClassFile.addMissingAbstractProblemMethod(MethodDeclaration,MethodBinding,CategorizedProblem,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemClinit(CategorizedProblem[])",1,8,8
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemConstructor(AbstractMethodDeclaration,MethodBinding,CategorizedProblem[])",1,8,8
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemConstructor(AbstractMethodDeclaration,MethodBinding,CategorizedProblem[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemMethod(AbstractMethodDeclaration,MethodBinding,CategorizedProblem[])",1,11,11
"org.eclipse.jdt.internal.compiler.ClassFile.addProblemMethod(AbstractMethodDeclaration,MethodBinding,CategorizedProblem[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addRealJumpTarget(Set,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSpecialMethods()",2,7,20
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticArrayClone(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticArrayConstructor(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticConstructorAccessMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticDeserializeLambda(SyntheticMethodBinding,SyntheticMethodBinding[])",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticEnumInitializationMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticEnumValueOfMethod(SyntheticMethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticEnumValuesMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticFactoryMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticFieldReadAccessMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticFieldWriteAccessMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticMethodAccessMethod(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.addSyntheticSwitchTable(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.completeArgumentAnnotationInfo(Argument[],List)",1,3,3
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(int)",1,21,23
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForClinit(int)",1,19,19
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForClinit(int,int)",1,11,11
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForMissingAbstractProblemMethod(MethodBinding,int,int[],int)",1,8,8
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForProblemMethod(AbstractMethodDeclaration,MethodBinding,int,int[],int)",1,9,9
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForSyntheticMethod(SyntheticMethodBinding,int,int[])",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttributeForSyntheticMethod(boolean,SyntheticMethodBinding,int,int[])",2,18,20
"org.eclipse.jdt.internal.compiler.ClassFile.completeMethodInfo(MethodBinding,int,int)",1,24,27
"org.eclipse.jdt.internal.compiler.ClassFile.createProblemType(TypeDeclaration,CompilationResult)",6,15,21
"org.eclipse.jdt.internal.compiler.ClassFile.dumpLocations(int[])",1,4,5
"org.eclipse.jdt.internal.compiler.ClassFile.dumpTargetTypeContents(int,AnnotationContext)",2,3,14
"org.eclipse.jdt.internal.compiler.ClassFile.fileName()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.filterFakeFrames(Set,Map,int)",1,3,3
"org.eclipse.jdt.internal.compiler.ClassFile.generateAnnotation(Annotation,int)",5,11,18
"org.eclipse.jdt.internal.compiler.ClassFile.generateAnnotationDefaultAttribute(AnnotationMethodDeclaration,int)",1,2,3
"org.eclipse.jdt.internal.compiler.ClassFile.generateBootstrapMethods(List)",2,14,22
"org.eclipse.jdt.internal.compiler.ClassFile.generateCodeAttributeHeader()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateConstantValueAttribute(Constant,FieldBinding,int)",2,7,14
"org.eclipse.jdt.internal.compiler.ClassFile.generateDeprecatedAttribute()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateElementValue(Expression,TypeBinding,int)",1,8,9
"org.eclipse.jdt.internal.compiler.ClassFile.generateElementValue(int,Expression,Constant,TypeBinding)",2,5,14
"org.eclipse.jdt.internal.compiler.ClassFile.generateElementValueForNonConstantExpression(Expression,int,TypeBinding)",1,13,16
"org.eclipse.jdt.internal.compiler.ClassFile.generateEnclosingMethodAttribute()",1,4,4
"org.eclipse.jdt.internal.compiler.ClassFile.generateExceptionsAttribute(ReferenceBinding[])",1,3,3
"org.eclipse.jdt.internal.compiler.ClassFile.generateHierarchyInconsistentAttribute()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateInnerClassAttribute(int,ReferenceBinding[])",1,7,8
"org.eclipse.jdt.internal.compiler.ClassFile.generateLineNumberAttribute()",1,5,6
"org.eclipse.jdt.internal.compiler.ClassFile.generateLineNumberAttribute(int)",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateLocalVariableTableAttribute(int,boolean,boolean)",4,14,27
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoAttributes(MethodBinding)",1,21,23
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoAttributes(MethodBinding,AnnotationMethodDeclaration)",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoHeader(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoHeader(MethodBinding,int)",1,2,4
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodInfoHeaderForClinit()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateMethodParameters(MethodBinding)",2,25,31
"org.eclipse.jdt.internal.compiler.ClassFile.generateMissingAbstractMethods(MethodDeclaration[],CompilationResult)",1,9,9
"org.eclipse.jdt.internal.compiler.ClassFile.generateMissingTypesAttribute()",3,4,6
"org.eclipse.jdt.internal.compiler.ClassFile.generateRuntimeAnnotations(Annotation[],long)",15,23,37
"org.eclipse.jdt.internal.compiler.ClassFile.generateRuntimeAnnotationsForParameters(Argument[])",20,24,38
"org.eclipse.jdt.internal.compiler.ClassFile.generateRuntimeTypeAnnotations(AnnotationContext[],int,int)",5,11,15
"org.eclipse.jdt.internal.compiler.ClassFile.generateSignatureAttribute(char[])",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateSourceAttribute(String)",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapAttribute(MethodBinding,int,int,int,boolean)",5,19,35
"org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(MethodBinding,int,int,int,boolean)",12,37,78
"org.eclipse.jdt.internal.compiler.ClassFile.generateSyntheticAttribute()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.generateTypeAnnotation(AnnotationContext,int)",2,2,4
"org.eclipse.jdt.internal.compiler.ClassFile.generateTypeAnnotationAttributeForTypeDeclaration()",5,10,13
"org.eclipse.jdt.internal.compiler.ClassFile.generateTypeAnnotationsOnCodeAttribute()",4,9,15
"org.eclipse.jdt.internal.compiler.ClassFile.generateVarargsAttribute()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.getBytes()",1,2,2
"org.eclipse.jdt.internal.compiler.ClassFile.getCompoundName()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.getNewInstance(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.getParametersCount(char[])",5,3,8
"org.eclipse.jdt.internal.compiler.ClassFile.getReturnType(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.i2At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.i4At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.initByteArrays()",1,1,2
"org.eclipse.jdt.internal.compiler.ClassFile.initialize(SourceTypeBinding,ClassFile,boolean)",3,5,11
"org.eclipse.jdt.internal.compiler.ClassFile.initializeDefaultLocals(StackMapFrame,MethodBinding,int,int)",5,21,26
"org.eclipse.jdt.internal.compiler.ClassFile.initializeLocals(boolean,int,StackMapFrame)",6,1,9
"org.eclipse.jdt.internal.compiler.ClassFile.jdk16packageInfoAnnotation(long,long)",2,1,5
"org.eclipse.jdt.internal.compiler.ClassFile.outerMostEnclosingClassFile()",1,1,2
"org.eclipse.jdt.internal.compiler.ClassFile.recordBootstrapMethod(FunctionalExpression)",1,1,2
"org.eclipse.jdt.internal.compiler.ClassFile.recordInnerClasses(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.recordInnerClasses(TypeBinding,boolean)",1,3,4
"org.eclipse.jdt.internal.compiler.ClassFile.reset(SourceTypeBinding)",1,3,7
"org.eclipse.jdt.internal.compiler.ClassFile.resizeContents(int)",1,1,2
"org.eclipse.jdt.internal.compiler.ClassFile.retrieveLocal(int,int)",6,1,7
"org.eclipse.jdt.internal.compiler.ClassFile.scanType(char[],int)",5,4,5
"org.eclipse.jdt.internal.compiler.ClassFile.setForMethodInfos()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.traverse(MethodBinding,int,byte[],int,int,Map,boolean)",23,53,248
"org.eclipse.jdt.internal.compiler.ClassFile.u1At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.u2At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.u4At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFile.utf8At(byte[],int,int)",1,2,5
"org.eclipse.jdt.internal.compiler.ClassFile.writeArgumentName(char[],int,int)",1,3,4
"org.eclipse.jdt.internal.compiler.ClassFilePool.ClassFilePool()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFilePool.acquire(SourceTypeBinding)",4,3,4
"org.eclipse.jdt.internal.compiler.ClassFilePool.newInstance()",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFilePool.release(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.ClassFilePool.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.CompilationResult(ICompilationUnit,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.CompilationResult(char[],int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.computePriority(CategorizedProblem)",1,4,8
"org.eclipse.jdt.internal.compiler.CompilationResult.getAllProblems()",3,4,12
"org.eclipse.jdt.internal.compiler.CompilationResult.getCUProblems()",1,7,9
"org.eclipse.jdt.internal.compiler.CompilationResult.getClassFiles()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.getContext(CategorizedProblem)",2,2,2
"org.eclipse.jdt.internal.compiler.CompilationResult.getErrors()",2,3,6
"org.eclipse.jdt.internal.compiler.CompilationResult.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.getLineSeparatorPositions()",1,1,2
"org.eclipse.jdt.internal.compiler.CompilationResult.getProblems()",1,4,5
"org.eclipse.jdt.internal.compiler.CompilationResult.getTasks()",1,3,3
"org.eclipse.jdt.internal.compiler.CompilationResult.hasErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.hasMandatoryErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.hasProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.hasTasks()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.hasWarnings()",4,3,4
"org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CategorizedProblem[],int,int)",2,4,8
"org.eclipse.jdt.internal.compiler.CompilationResult.record(CategorizedProblem,ReferenceContext)",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.record(CategorizedProblem,ReferenceContext,boolean)",2,8,12
"org.eclipse.jdt.internal.compiler.CompilationResult.record(char[],ClassFile)",1,2,3
"org.eclipse.jdt.internal.compiler.CompilationResult.recordPackageName(char[][])",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.recordTask(CategorizedProblem)",1,3,3
"org.eclipse.jdt.internal.compiler.CompilationResult.removeProblem(CategorizedProblem)",1,3,4
"org.eclipse.jdt.internal.compiler.CompilationResult.tagAsAccepted()",1,1,1
"org.eclipse.jdt.internal.compiler.CompilationResult.toString()",1,6,6
"org.eclipse.jdt.internal.compiler.Compiler.APTProblem.APTProblem(CategorizedProblem,ReferenceContext)",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.Compiler(INameEnvironment,IErrorHandlingPolicy,CompilerOptions,ICompilerRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.Compiler(INameEnvironment,IErrorHandlingPolicy,CompilerOptions,ICompilerRequestor,IProblemFactory,PrintWriter)",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.Compiler(INameEnvironment,IErrorHandlingPolicy,CompilerOptions,ICompilerRequestor,IProblemFactory,PrintWriter,CompilationProgress)",1,3,4
"org.eclipse.jdt.internal.compiler.Compiler.Compiler(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.Compiler(INameEnvironment,IErrorHandlingPolicy,Map,ICompilerRequestor,IProblemFactory,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.accept(IBinaryType,PackageBinding,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.compiler.Compiler.accept(ICompilationUnit,AccessRestriction)",2,5,5
"org.eclipse.jdt.internal.compiler.Compiler.accept(ISourceType[],PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.addCompilationUnit(ICompilationUnit,CompilationUnitDeclaration)",2,2,3
"org.eclipse.jdt.internal.compiler.Compiler.backupAptProblems()",2,7,9
"org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(ICompilationUnit[])",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.compile(ICompilationUnit[])",3,6,7
"org.eclipse.jdt.internal.compiler.Compiler.getUnitToProcess(int)",2,1,4
"org.eclipse.jdt.internal.compiler.Compiler.handleInternalException(AbortCompilation,CompilationUnitDeclaration)",8,6,18
"org.eclipse.jdt.internal.compiler.Compiler.handleInternalException(Throwable,CompilationUnitDeclaration,CompilationResult)",1,4,11
"org.eclipse.jdt.internal.compiler.Compiler.initializeParser()",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.internalBeginToCompile(ICompilationUnit[],int)",2,6,10
"org.eclipse.jdt.internal.compiler.Compiler.process(CompilationUnitDeclaration,int)",1,6,7
"org.eclipse.jdt.internal.compiler.Compiler.processAnnotations()",5,6,12
"org.eclipse.jdt.internal.compiler.Compiler.processCompiledUnits(int)",6,15,22
"org.eclipse.jdt.internal.compiler.Compiler.reportProgress(String)",3,2,3
"org.eclipse.jdt.internal.compiler.Compiler.reportWorked(int,int)",3,2,3
"org.eclipse.jdt.internal.compiler.Compiler.reset()",1,2,2
"org.eclipse.jdt.internal.compiler.Compiler.resolve(CompilationUnitDeclaration,ICompilationUnit,boolean,boolean,boolean)",4,9,16
"org.eclipse.jdt.internal.compiler.Compiler.resolve(ICompilationUnit,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.restoreAptProblems()",1,5,6
"org.eclipse.jdt.internal.compiler.Compiler.setBinaryTypes(ReferenceBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.Compiler.shouldCleanup(int)",1,1,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.exitAfterAllProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.exitOnFirstError()",1,1,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.ignoreAllProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.proceedOnFirstError()",1,1,1
"org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.proceedWithAllProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.DocumentElementParser(IDocumentElementRequestor,IProblemFactory,CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.checkComment()",3,3,9
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeCatchFormalParameter()",1,2,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassBodyDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassDeclaration()",2,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassHeader()",2,4,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeClassHeaderName1()",1,3,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeConstructorDeclaration()",2,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeConstructorHeader()",2,5,6
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeConstructorHeaderName()",1,2,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeDefaultModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeDiet()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeEnhancedForStatementHeaderInit(boolean)",1,2,4
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeEnterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeEnterVariable()",1,9,12
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeExitVariableWithInitialization()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeExitVariableWithoutInitialization()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeFieldDeclaration()",2,2,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeFormalParameter(boolean)",1,9,16
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInterfaceDeclaration()",2,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInterfaceHeader()",2,3,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInterfaceHeaderName1()",1,3,5
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInternalCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeInternalCompilationUnitWithTypes()",1,2,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeLocalVariableDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodDeclaration(boolean,boolean)",2,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeader()",2,5,7
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeaderExtendedDims()",1,2,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeaderName(boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeMethodHeaderNameWithTypeParameters(boolean)",1,6,8
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePackageComment()",1,2,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePackageDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePackageDeclarationNameWithModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePushModifiers()",1,2,4
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumePushRealModifiers()",1,2,4
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeSingleStaticImportDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeSingleTypeImportDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeStaticImportOnDemandDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeStaticInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeStaticOnly()",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.consumeTypeImportOnDemandDeclarationName()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.endParse(int)",1,2,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.flushCommentsDefinedPriorTo(int)",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.initialize(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.isLocalDeclaration()",3,1,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parse()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseCompilationUnit(ICompilationUnit)",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseConstructor(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseField(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseImport(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseInitializer(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseMethod(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parsePackage(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.parseType(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.pushOnIntArrayStack(int[])",1,2,2
"org.eclipse.jdt.internal.compiler.DocumentElementParser.resetModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.resumeOnSyntaxError()",1,1,1
"org.eclipse.jdt.internal.compiler.DocumentElementParser.returnTypeName(TypeReference)",2,2,3
"org.eclipse.jdt.internal.compiler.DocumentElementParser.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.ExtraFlags.getExtraFlags(ClassFileReader)",3,3,8
"org.eclipse.jdt.internal.compiler.ExtraFlags.getExtraFlags(IType)",3,3,8
"org.eclipse.jdt.internal.compiler.ExtraFlags.getExtraFlags(TypeDeclaration)",3,1,7
"org.eclipse.jdt.internal.compiler.ProcessTaskManager.ProcessTaskManager(Compiler,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ProcessTaskManager.addNextUnit(CompilationUnitDeclaration)",1,3,5
"org.eclipse.jdt.internal.compiler.ProcessTaskManager.removeNextUnit()",6,5,12
"org.eclipse.jdt.internal.compiler.ProcessTaskManager.run()",5,5,11
"org.eclipse.jdt.internal.compiler.ProcessTaskManager.shutdown()",1,3,4
"org.eclipse.jdt.internal.compiler.ReadManager.ReadManager(ICompilationUnit[],int)",1,4,12
"org.eclipse.jdt.internal.compiler.ReadManager.getContents(ICompilationUnit)",11,8,19
"org.eclipse.jdt.internal.compiler.ReadManager.run()",6,7,13
"org.eclipse.jdt.internal.compiler.ReadManager.shutdown()",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.LocalDeclarationVisitor.peekDeclaringType()",3,1,3
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.LocalDeclarationVisitor.popDeclaringType()",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.LocalDeclarationVisitor.pushDeclaringType(TypeDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.LocalDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.LocalDeclarationVisitor.visit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.SourceElementNotifier(ISourceElementRequestor,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.getArgumentInfos(Argument[])",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.getInterfaceNames(TypeDeclaration)",1,3,7
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.getSuperclassName(TypeDeclaration)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.getThrownExceptions(AbstractMethodDeclaration)",1,3,3
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.getTypeParameterBounds(TypeParameter)",1,4,4
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.getTypeParameterInfos(TypeParameter[])",2,2,3
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.hasDeprecatedAnnotation(Annotation[])",4,3,4
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(AbstractMethodDeclaration,TypeDeclaration,ImportReference)",9,19,31
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(CompilationUnitDeclaration,int,int,boolean,HashtableOfObjectToInt,Map)",1,7,17
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(FieldDeclaration,TypeDeclaration)",2,11,25
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(ImportReference,boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(TypeDeclaration,boolean,TypeDeclaration,ImportReference)",4,11,36
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.quickSort(ASTNode[],int,int)",1,3,7
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.sourceEnd(TypeDeclaration)",3,1,3
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.visitIfNeeded(AbstractMethodDeclaration)",1,6,7
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.visitIfNeeded(FieldDeclaration,TypeDeclaration)",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementNotifier.visitIfNeeded(Initializer)",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.SourceElementParser(ISourceElementRequestor,IProblemFactory,CompilerOptions,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.SourceElementParser(ISourceElementRequestor,IProblemFactory,CompilerOptions,boolean,boolean,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.acceptJavadocTypeReference(Expression)",1,3,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.addUnknownRef(NameReference)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.checkComment()",4,21,38
"org.eclipse.jdt.internal.compiler.SourceElementParser.classInstanceCreation(boolean)",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeAnnotationAsModifier()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeAnnotationTypeDeclarationHeaderName()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeAnnotationTypeDeclarationHeaderNameWithTypeParameters()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeCatchFormalParameter()",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeClassHeaderName1()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeClassInstanceCreationExpressionWithTypeArguments()",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeConstructorHeaderName()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeConstructorHeaderNameWithTypeParameters()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeEnumConstantNoClassBody()",1,2,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeEnumConstantWithClassBody()",1,2,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeEnumHeaderName()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeEnumHeaderNameWithTypeParameters()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeExitVariableWithInitialization()",1,2,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeExitVariableWithoutInitialization()",1,2,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeFieldAccess(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeFormalParameter(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeInterfaceHeaderName1()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMarkerAnnotation(boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMemberValuePair()",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodHeaderName(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodHeaderNameWithTypeParameters(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationName()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationNameWithTypeArguments()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationPrimary()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationPrimaryWithTypeArguments()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationSuper()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeMethodInvocationSuperWithTypeArguments()",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeNormalAnnotation(boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeSingleMemberAnnotation(boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeSingleStaticImportDeclarationName()",1,5,8
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeSingleTypeImportDeclarationName()",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeStaticImportOnDemandDeclarationName()",1,4,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeTypeElidedLambdaParameter(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.consumeTypeImportOnDemandDeclarationName()",1,3,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.convertToMethodDeclaration(ConstructorDeclaration,CompilationResult)",1,3,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.endParse(int)",2,3,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(int)",1,15,22
"org.eclipse.jdt.internal.compiler.SourceElementParser.getUnspecifiedReference(boolean)",2,5,5
"org.eclipse.jdt.internal.compiler.SourceElementParser.getUnspecifiedReferenceOptimized()",2,4,4
"org.eclipse.jdt.internal.compiler.SourceElementParser.newImportReference(char[][],long[],boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.newQualifiedNameReference(char[][],long[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.newSingleNameReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(ICompilationUnit,boolean,IProgressMonitor)",2,4,7
"org.eclipse.jdt.internal.compiler.SourceElementParser.rememberCategories()",1,3,3
"org.eclipse.jdt.internal.compiler.SourceElementParser.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementParser.setRequestor(ISourceElementRequestor)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptAnnotationTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptAnnotationTypeReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptConstructorReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptFieldReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptImport(int,int,int,int,char[][],boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptLineSeparatorPositions(int[])",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptMethodReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptPackage(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptProblem(CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptTypeReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptUnknownReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.acceptUnknownReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterConstructor(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterField(FieldInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterInitializer(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.enterType(TypeInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitField(int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitMethod(int,Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter.exitType(int)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceJavadocParser.SourceJavadocParser(Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.SourceJavadocParser.checkDeprecation(int)",1,2,2
"org.eclipse.jdt.internal.compiler.SourceJavadocParser.parseIdentifierTag(boolean)",6,10,11
"org.eclipse.jdt.internal.compiler.SourceJavadocParser.parseSimpleTag()",2,30,35
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.AND_AND_Expression(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,8,8
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateCode(BlockScope,CodeStream,boolean)",5,18,21
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolean(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",8,18,26
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.resolveType(BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ASTNode.ASTNode()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.acceptPotentiallyCompatibleMethods(MethodBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.checkInvocationArgument(BlockScope,Expression,TypeBinding,TypeBinding,TypeBinding)",4,4,6
"org.eclipse.jdt.internal.compiler.ast.ASTNode.checkInvocationArguments(BlockScope,Expression,TypeBinding,MethodBinding,Expression[],TypeBinding[],boolean,InvocationSite)",4,43,51
"org.eclipse.jdt.internal.compiler.ast.ASTNode.checkingPotentialCompatibility()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.concreteStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.copySE8AnnotationsToType(BlockScope,Binding,Annotation[],boolean)",11,15,35
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isFieldUseDeprecated(FieldBinding,Scope,int)",4,9,12
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isImplicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isMethodUseDeprecated(MethodBinding,Scope,boolean)",5,7,13
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isQualifiedSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isTypeUseDeprecated(TypeBinding,Scope)",5,7,14
"org.eclipse.jdt.internal.compiler.ast.ASTNode.isUnqualifiedSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.mergeAnnotationsIntoType(BlockScope,AnnotationBinding[],long,Annotation,TypeReference,TypeBinding)",3,10,13
"org.eclipse.jdt.internal.compiler.ast.ASTNode.printAnnotations(Annotation[],StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ASTNode.printIndent(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ASTNode.printModifiers(int,StringBuffer)",1,12,12
"org.eclipse.jdt.internal.compiler.ast.ASTNode.receiverIsImplicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations(BlockScope,Annotation[],Binding)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations(BlockScope,Annotation[],Binding,boolean)",20,40,64
"org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations(BlockScope,Annotation[][],TypeBinding)",2,3,7
"org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveDeprecatedAnnotations(BlockScope,Annotation[],Binding)",15,10,32
"org.eclipse.jdt.internal.compiler.ast.ASTNode.resolvePolyExpressionArguments(Invocation,MethodBinding,TypeBinding[],BlockScope)",7,8,18
"org.eclipse.jdt.internal.compiler.ast.ASTNode.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.sourceStart()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ASTNode.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.AbstractMethodDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.abort(int,CategorizedProblem)",5,2,5
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.analyseArguments(FlowInfo,Argument[],MethodBinding)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.analyseArguments18(FlowInfo,Argument[],MethodBinding)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.bindArguments()",3,8,11
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.bindThrownExceptions()",5,5,12
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.checkArgumentsSize()",2,4,5
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.compilationResult()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.createArgumentBindings()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.createArgumentBindings(Argument[],MethodBinding,MethodScope)",4,4,7
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(ClassFile)",3,10,11
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(ClassScope,ClassFile)",3,9,12
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.getAllAnnotationContexts(int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.getCompilationUnitDeclaration()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.hasErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isAbstract()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isClinit()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isDefaultConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isDefaultMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isInitializationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isNative()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.isStatic()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.print(int,StringBuffer)",1,12,13
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.printBody(int,StringBuffer)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.printReturnType(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(ClassScope)",1,6,8
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveJavadoc()",3,6,7
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveReceiver()",6,17,20
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements()",1,6,6
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.tagAsHavingErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.tagAsHavingIgnoredMandatoryErrors(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.typeParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.validateNullAnnotations(boolean)",2,6,9
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.printAsExpression(int,StringBuffer)",2,6,7
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.printStatement(int,StringBuffer)",3,3,3
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,12,14
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.arguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.binding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.checkCapturedLocalInitializationIfNecessary(ReferenceBinding,BlockScope,FlowInfo)",5,7,8
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.checkIllegalNullAnnotation(BlockScope,TypeBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.checkTypeArgumentRedundancy(ParameterizedTypeBinding,BlockScope)",13,7,16
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.enclosingInstance()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.generateCode(BlockScope,CodeStream,boolean)",2,11,13
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.getExpressionContext()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.getInferenceContext(ParameterizedMethodBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.inferConstructorOfElidedParameterizedType(Scope)",4,10,14
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.inferElidedTypes(Scope)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.invocationTargetType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isBoxingCompatibleWith(TypeBinding,Scope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isCompatibleWith(TypeBinding,Scope)",5,10,12
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isPolyExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isPolyExpression(MethodBinding)",1,1,4
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.printExpression(int,StringBuffer)",1,8,8
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.registerInferenceContext(ParameterizedGenericMethodBinding,InferenceContext18)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.registerResult(TypeBinding,MethodBinding)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(BlockScope)",22,46,64
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setExpectedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setExpressionContext(ExpressionContext)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.statementExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AllocationExpression.traverse(ASTVisitor,BlockScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.Annotation.checkAnnotationTarget(Annotation,BlockScope,ReferenceBinding,int,Binding,long)",2,2,4
"org.eclipse.jdt.internal.compiler.ast.Annotation.checkContainerAnnotationType(ASTNode,BlockScope,ReferenceBinding,ReferenceBinding,boolean)",5,13,14
"org.eclipse.jdt.internal.compiler.ast.Annotation.checkContainerAnnotationTypeTarget(ASTNode,Scope,ReferenceBinding,ReferenceBinding)",3,6,11
"org.eclipse.jdt.internal.compiler.ast.Annotation.checkContainingAnnotationTargetAtUse(Annotation,BlockScope,TypeBinding,TypeBinding)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.Annotation.checkForInstancesOfRepeatableWithRepeatingContainerAnnotation(BlockScope,ReferenceBinding,Annotation[])",6,4,7
"org.eclipse.jdt.internal.compiler.ast.Annotation.checkRepeatableMetaAnnotation(BlockScope)",4,1,5
"org.eclipse.jdt.internal.compiler.ast.Annotation.computeElementValuePairs()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Annotation.detectStandardAnnotation(Scope,ReferenceBinding,MemberValuePair)",2,18,38
"org.eclipse.jdt.internal.compiler.ast.Annotation.evaluateDefaultNullnessLocation(Object)",14,7,20
"org.eclipse.jdt.internal.compiler.ast.Annotation.getAnnotationRetention(ReferenceBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.Annotation.getCompilerAnnotation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Annotation.getLocations(Expression,Annotation)",9,21,39
"org.eclipse.jdt.internal.compiler.ast.Annotation.getPersistibleAnnotation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Annotation.getRetentionName(long)",3,1,3
"org.eclipse.jdt.internal.compiler.ast.Annotation.getRetentionPolicy(char[])",6,2,9
"org.eclipse.jdt.internal.compiler.ast.Annotation.getTargetElementType(char[])",13,3,20
"org.eclipse.jdt.internal.compiler.ast.Annotation.isAnnotationTargetAllowed(Annotation,BlockScope,TypeBinding,int)",3,6,8
"org.eclipse.jdt.internal.compiler.ast.Annotation.isAnnotationTargetAllowed(Binding,BlockScope,TypeBinding,int,long)",28,17,34
"org.eclipse.jdt.internal.compiler.ast.Annotation.isAnnotationTargetAllowed(BlockScope,TypeBinding,Binding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.Annotation.isRuntimeInvisible()",5,1,5
"org.eclipse.jdt.internal.compiler.ast.Annotation.isRuntimeTypeInvisible()",5,1,5
"org.eclipse.jdt.internal.compiler.ast.Annotation.isRuntimeTypeVisible()",5,1,5
"org.eclipse.jdt.internal.compiler.ast.Annotation.isRuntimeVisible()",5,1,5
"org.eclipse.jdt.internal.compiler.ast.Annotation.isTypeUseCompatible(TypeReference,Scope)",3,2,4
"org.eclipse.jdt.internal.compiler.ast.Annotation.isTypeUseCompatible(TypeReference,Scope,Annotation[])",9,10,15
"org.eclipse.jdt.internal.compiler.ast.Annotation.nullLocationBitsFromAnnotationValue(Object)",3,4,4
"org.eclipse.jdt.internal.compiler.ast.Annotation.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Annotation.recordSuppressWarnings(Scope,int,int,boolean)",3,15,16
"org.eclipse.jdt.internal.compiler.ast.Annotation.resolveType(BlockScope)",11,33,46
"org.eclipse.jdt.internal.compiler.ast.Annotation.setPersistibleAnnotation(ContainerAnnotation)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.AnnotationMethodDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.generateCode(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.isMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.print(int,StringBuffer)",1,11,11
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.resolveStatements()",5,10,12
"org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.traverse(ASTVisitor,ClassScope)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.Argument.Argument(char[],long,TypeReference,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.Argument.Argument(char[],long,TypeReference,int,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.Argument.bind(MethodScope,TypeBinding,boolean)",1,9,12
"org.eclipse.jdt.internal.compiler.ast.Argument.createBinding(MethodScope,TypeBinding)",1,5,7
"org.eclipse.jdt.internal.compiler.ast.Argument.getKind()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.Argument.hasElidedType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.hasNullTypeAnnotation(AnnotationPosition)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Argument.isArgument()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.isRecoveredFromLoneIdentifier()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.isVarArgs()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.Argument.print(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Argument.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Argument.resolveForCatch(BlockScope)",3,12,16
"org.eclipse.jdt.internal.compiler.ast.Argument.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.Argument.traverse(ASTVisitor,ClassScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.generateCode(BlockScope,CodeStream,boolean)",4,5,6
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.getAllAnnotationContexts(int,int,List)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.getAnnotationsOnDimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.printExpression(int,StringBuffer)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.resolveType(BlockScope)",6,21,25
"org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression.traverse(ASTVisitor,BlockScope)",1,6,8
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.ArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.analyseCode(BlockScope,FlowContext,FlowInfo)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(BlockScope,CodeStream,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(TypeReference,ArrayAllocationExpression,BlockScope,CodeStream,boolean)",2,11,17
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.resolveTypeExpecting(BlockScope,TypeBinding)",8,18,21
"org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.ArrayQualifiedTypeReference(char[][],int,Annotation[][],long[])",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.ArrayQualifiedTypeReference(char[][],int,long[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.extraDimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.getAnnotationsOnDimensions(boolean)",2,1,6
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.getParameterizedTypeName()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.getTypeBinding(Scope)",3,4,5
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.internalResolveType(Scope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.printExpression(int,StringBuffer)",1,7,10
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.setAnnotationsOnDimensions(Annotation[][])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,8,10
"org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,8,10
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.ArrayReference(Expression,Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",2,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.checkNPE(BlockScope,FlowContext,FlowInfo)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generateCode(BlockScope,CodeStream,boolean)",2,7,8
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.resolveType(BlockScope)",1,6,7
"org.eclipse.jdt.internal.compiler.ast.ArrayReference.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.ArrayTypeReference(char[],int,Annotation[][],long)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.ArrayTypeReference(char[],int,long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.extraDimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.getAnnotationsOnDimensions(boolean)",2,1,6
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.getParameterizedTypeName()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.getTypeBinding(Scope)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.hasNullTypeAnnotation(AnnotationPosition)",9,7,12
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.internalResolveType(Scope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.printExpression(int,StringBuffer)",1,7,10
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.setAnnotationsOnDimensions(Annotation[][])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ASTVisitor,BlockScope)",1,8,9
"org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ASTVisitor,ClassScope)",1,8,9
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.AssertStatement(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.AssertStatement(Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",3,9,9
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.generateCode(BlockScope,CodeStream)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",6,6,7
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.resolve(BlockScope)",2,5,6
"org.eclipse.jdt.internal.compiler.ast.AssertStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Assignment.Assignment(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.analyseCode(BlockScope,FlowContext,FlowInfo)",1,13,19
"org.eclipse.jdt.internal.compiler.ast.Assignment.checkAssignment(BlockScope,TypeBinding,TypeBinding)",1,10,10
"org.eclipse.jdt.internal.compiler.ast.Assignment.generateCode(BlockScope,CodeStream,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.getLastField(Expression)",7,1,7
"org.eclipse.jdt.internal.compiler.ast.Assignment.localVariableBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.nullStatus(FlowInfo,FlowContext)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.Assignment.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.resolveType(BlockScope)",5,15,20
"org.eclipse.jdt.internal.compiler.ast.Assignment.resolveTypeExpecting(BlockScope,TypeBinding)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.Assignment.statementExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Assignment.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.BinaryExpression(BinaryExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.BinaryExpression(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,4,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.computeConstant(BlockScope,int,int)",1,2,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateCode(BlockScope,CodeStream,boolean)",14,97,136
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateLogicalAnd(BlockScope,CodeStream,boolean)",4,9,9
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateLogicalOr(BlockScope,CodeStream,boolean)",4,9,9
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateLogicalXor(BlockScope,CodeStream,boolean)",4,10,10
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedBoolean(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",3,4,10
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedGreaterThan(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",10,20,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedGreaterThanOrEqual(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",10,20,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLessThan(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",10,20,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLessThanOrEqual(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",10,20,26
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLogicalAnd(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",4,14,14
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLogicalOr(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",4,14,14
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLogicalXor(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",4,10,10
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedStringConcatenation(BlockScope,CodeStream,int)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedStringConcatenationCreation(BlockScope,CodeStream,int)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.nonRecursiveResolveTypeUpwards(BlockScope)",6,20,33
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.optimizedBooleanConstant()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.optimizedBooleanConstant(int,int,int)",10,8,19
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType(BlockScope)",6,20,34
"org.eclipse.jdt.internal.compiler.ast.BinaryExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Block.Block(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Block.analyseCode(BlockScope,FlowContext,FlowInfo)",2,8,10
"org.eclipse.jdt.internal.compiler.ast.Block.branchChainTo(BranchLabel)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Block.completesByContinue()",1,2,3
"org.eclipse.jdt.internal.compiler.ast.Block.doesNotCompleteNormally()",1,2,3
"org.eclipse.jdt.internal.compiler.ast.Block.generateCode(BlockScope,CodeStream)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.Block.isEmptyBlock()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Block.printBody(int,StringBuffer)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.Block.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Block.resolve(BlockScope)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.Block.resolveUsing(BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.Block.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.BranchStatement.BranchStatement(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BranchStatement.generateCode(BlockScope,CodeStream)",5,6,7
"org.eclipse.jdt.internal.compiler.ast.BranchStatement.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.BreakStatement(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",7,11,12
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.doesNotCompleteNormally()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.BreakStatement.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.CaseStatement(Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.generateCode(BlockScope,CodeStream)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.resolveCase(BlockScope,TypeBinding,SwitchStatement)",7,13,17
"org.eclipse.jdt.internal.compiler.ast.CaseStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.CastExpression.CastExpression(Expression,TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkAlternateBinding(BlockScope,Expression,TypeBinding,MethodBinding,Expression[],TypeBinding[],TypeBinding[],InvocationSite)",6,9,11
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNPE(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCast(BlockScope,int,int,Expression,int)",5,4,6
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCasts(BlockScope,Expression,TypeBinding,MethodBinding,Expression[],TypeBinding[],InvocationSite)",9,9,12
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCasts(BlockScope,int,int,Expression,int,boolean,Expression,int,boolean)",12,15,25
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForAssignedCast(BlockScope,TypeBinding,CastExpression)",6,4,7
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForCastCast(BlockScope,CastExpression)",4,1,4
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForEnclosingInstanceCast(BlockScope,Expression,TypeBinding,TypeBinding)",6,5,8
"org.eclipse.jdt.internal.compiler.ast.CastExpression.checkUnsafeCast(Scope,TypeBinding,TypeBinding,TypeBinding,boolean)",16,21,35
"org.eclipse.jdt.internal.compiler.ast.CastExpression.generateCode(BlockScope,CodeStream,boolean)",3,11,18
"org.eclipse.jdt.internal.compiler.ast.CastExpression.innermostCastedExpression()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.isIndirectlyUsed()",6,5,9
"org.eclipse.jdt.internal.compiler.ast.CastExpression.localVariableBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.nullStatus(FlowInfo,FlowContext)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.optimizedBooleanConstant()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.CastExpression.resolveType(BlockScope)",1,21,23
"org.eclipse.jdt.internal.compiler.ast.CastExpression.setExpectedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.tagAsNeedCheckCast()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.tagAsUnnecessaryCast(Scope,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CastExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.CharLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.computeValue()",3,4,13
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CharLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.ClassLiteralAccess(int,TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.analyseCode(BlockScope,FlowContext,FlowInfo)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.resolveType(BlockScope)",4,7,8
"org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Clinit.Clinit(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.analyseCode(ClassScope,InitializationFlowContext,FlowInfo)",2,6,9
"org.eclipse.jdt.internal.compiler.ast.Clinit.generateCode(ClassScope,ClassFile)",2,7,10
"org.eclipse.jdt.internal.compiler.ast.Clinit.generateCode(ClassScope,ClassFile,int)",3,27,36
"org.eclipse.jdt.internal.compiler.ast.Clinit.isClinit()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.isInitializationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.parseStatements(Parser,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.resolve(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Clinit.setAssertionSupport(FieldBinding,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.Clinit.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.CombinedBinaryExpression(CombinedBinaryExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.CombinedBinaryExpression(Expression,Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,6,6
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.generateOptimizedStringConcatenation(BlockScope,CodeStream,int)",6,8,9
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.generateOptimizedStringConcatenationCreation(BlockScope,CodeStream,int)",6,8,11
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.initArity(Expression,int)",1,1,3
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.printExpressionNoParenthesis(int,StringBuffer)",2,4,4
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.resolveType(BlockScope)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.traverse(ASTVisitor,BlockScope)",5,7,7
"org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.tuneArityMax()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.CompilationUnitDeclaration(ProblemReporter,CompilationResult,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.abort(int,CategorizedProblem)",4,2,4
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode()",2,3,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.checkUnusedImports()",1,4,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.cleanUp()",1,3,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.cleanUp(TypeDeclaration)",1,4,6
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.compilationResult()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.createPackageInfoType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.declarationOfType(char[][])",3,2,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.finalizeProblems()",25,32,51
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode()",2,6,7
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.getCompilationUnitDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.getMainTypeName()",2,4,5
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.hasErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.hasFunctionalTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.isEmpty()",1,1,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.isPackageInfo()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.isSuppressed(CategorizedProblem)",7,2,7
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.print(int,StringBuffer)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.propagateInnerEmulationForAllLocalTypes()",1,3,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.record(FunctionalExpression)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.record(LocalTypeBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.recordStringLiteral(StringLiteral,boolean)",5,6,8
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.recordSuppressWarnings(IrritantSet,Annotation,int,int,ReferenceContext)",4,7,9
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.reportNLSProblems()",11,22,28
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve()",1,8,14
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.tagAsHavingErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.tagAsHavingIgnoredMandatoryErrors(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(ASTVisitor,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(ASTVisitor,CompilationUnitScope,boolean)",2,13,18
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.CompoundAssignment(Expression,Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.analyseCode(BlockScope,FlowContext,FlowInfo)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.checkCastCompatibility()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.nullStatus(FlowInfo,FlowContext)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.operatorToString()",12,2,12
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.resolveType(BlockScope)",13,26,33
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.restrainUsageToNumericTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.CompoundAssignment.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.ConditionalExpression(Expression,Expression,Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,27,28
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.checkNPE(BlockScope,FlowContext,FlowInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.computeConversions(BlockScope,TypeBinding)",1,17,21
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.computeNullStatus(FlowInfo,FlowInfo,FlowContext)",4,2,9
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(BlockScope,CodeStream,boolean)",3,17,18
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateOptimizedBoolean(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",7,23,26
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.getExpressionContext()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.getPolyExpressions()",3,1,3
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.isBoxingCompatibleWith(TypeBinding,Scope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.isCompatibleWith(TypeBinding,Scope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.isFunctionalType()",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.isPertinentToApplicability(TypeBinding,MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.isPolyExpression()",8,5,15
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.isPotentiallyCompatibleWith(TypeBinding,Scope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.nullStatus(FlowInfo,FlowContext)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.optimizedBooleanConstant()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.resolveType(BlockScope)",23,66,81
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.sIsMoreSpecific(TypeBinding,TypeBinding,Scope)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.setExpectedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.setExpressionContext(ExpressionContext)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.ConstructorDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.analyseCode(ClassScope,InitializationFlowContext,FlowInfo,int)",14,31,47
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateCode(ClassScope,ClassFile)",3,9,12
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateSyntheticFieldInitializationsIfNecessary(MethodScope,CodeStream,ReferenceBinding)",2,7,8
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.getAllAnnotationContexts(int,List)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.internalGenerateCode(ClassScope,ClassFile)",4,20,26
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isDefaultConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isInitializationMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isRecursive(ArrayList)",6,6,10
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.isValueProvidedUsingAnnotation(FieldDeclaration)",12,8,12
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.printBody(int,StringBuffer)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveJavadoc()",1,7,8
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveStatements()",1,7,9
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.traverse(ASTVisitor,ClassScope)",1,14,14
"org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.typeParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ContainerAnnotation.ContainerAnnotation(Annotation,ReferenceBinding,BlockScope)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ContainerAnnotation.addContainee(Annotation)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ContainerAnnotation.resolveType(BlockScope)",3,6,8
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.ContinueStatement(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",8,12,13
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.completesByContinue()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.doesNotCompleteNormally()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ContinueStatement.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.DoStatement.DoStatement(Expression,Statement,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.DoStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,12,14
"org.eclipse.jdt.internal.compiler.ast.DoStatement.completesByContinue()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.DoStatement.doesNotCompleteNormally()",3,9,11
"org.eclipse.jdt.internal.compiler.ast.DoStatement.generateCode(BlockScope,CodeStream)",2,9,11
"org.eclipse.jdt.internal.compiler.ast.DoStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.DoStatement.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.DoStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.DoubleLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.computeConstant()",9,4,15
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.DoubleLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.EmptyStatement(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.complainIfUnreachable(FlowInfo,BlockScope,int,boolean)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.generateCode(BlockScope,CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.EmptyStatement.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.EqualExpression(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,15,16
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.checkNullComparison(BlockScope,FlowContext,FlowInfo,FlowInfo,FlowInfo)",1,20,31
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.checkVariableComparison(BlockScope,FlowContext,FlowInfo,FlowInfo,FlowInfo,LocalVariableBinding,int,Expression)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.computeConstant(TypeBinding,TypeBinding)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateBooleanEqual(BlockScope,CodeStream,boolean)",3,17,17
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateCode(BlockScope,CodeStream,boolean)",2,5,5
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateNonBooleanEqual(BlockScope,CodeStream,boolean)",8,28,36
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateOptimizedBoolean(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",2,5,5
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateOptimizedBooleanEqual(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",3,7,11
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.generateOptimizedNonBooleanEqual(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",9,35,43
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.resolveType(BlockScope)",5,37,48
"org.eclipse.jdt.internal.compiler.ast.EqualExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.ExplicitConstructorCall(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.analyseCode(BlockScope,FlowContext,FlowInfo)",1,8,9
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.arguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.binding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.generateCode(BlockScope,CodeStream)",2,7,9
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.getInferenceContext(ParameterizedMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.isImplicitSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.printStatement(int,StringBuffer)",1,8,8
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.registerInferenceContext(ParameterizedGenericMethodBinding,InferenceContext18)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.registerResult(TypeBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.resolve(BlockScope)",10,41,54
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.traverse(ASTVisitor,BlockScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.Expression.Expression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.checkCastTypesCompatibility(Scope,TypeBinding,TypeBinding,Expression)",59,72,95
"org.eclipse.jdt.internal.compiler.ast.Expression.checkNPE(BlockScope,FlowContext,FlowInfo)",5,5,9
"org.eclipse.jdt.internal.compiler.ast.Expression.checkNPEbyUnboxing(BlockScope,FlowContext,FlowInfo)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.Expression.checkUnsafeCast(Scope,TypeBinding,TypeBinding,TypeBinding,boolean)",4,8,9
"org.eclipse.jdt.internal.compiler.ast.Expression.computeConversion(Scope,TypeBinding,TypeBinding)",7,11,22
"org.eclipse.jdt.internal.compiler.ast.Expression.forcedToBeRaw(ReferenceContext)",20,15,22
"org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(BlockScope,CodeStream)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(BlockScope,CodeStream,boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.Expression.generateOptimizedBoolean(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",2,14,15
"org.eclipse.jdt.internal.compiler.ast.Expression.generateOptimizedStringConcatenation(BlockScope,CodeStream,int)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.Expression.generateOptimizedStringConcatenationCreation(BlockScope,CodeStream,int)",4,4,6
"org.eclipse.jdt.internal.compiler.ast.Expression.getAllInheritedMethods0(ReferenceBinding,ArrayList<MethodBinding>)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.Expression.getAllOriginalInheritedMethods(ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Expression.getDirectBinding(Expression)",11,8,13
"org.eclipse.jdt.internal.compiler.ast.Expression.getPolyExpressions()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.Expression.isBoxingCompatibleWith(TypeBinding,Scope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Expression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.isCompatibleWith(TypeBinding,Scope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Expression.isConstantValueOfTypeAssignableToType(TypeBinding,TypeBinding)",4,3,5
"org.eclipse.jdt.internal.compiler.ast.Expression.isConstantValueRepresentable(Constant,int,int)",66,58,66
"org.eclipse.jdt.internal.compiler.ast.Expression.isExactMethodReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.isFunctionalType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.isPertinentToApplicability(TypeBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.isPolyExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.isPolyExpression(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.isPotentiallyCompatibleWith(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.isTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.localVariableBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.markAsNonNull()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.nullAnnotatedVariableBinding(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.nullStatus(FlowInfo,FlowContext)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.optimizedBooleanConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.postConversionType(Scope)",2,3,11
"org.eclipse.jdt.internal.compiler.ast.Expression.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveExpressionExpecting(TypeBinding,Scope,InferenceContext18)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.resolveTypeExpecting(BlockScope,TypeBinding)",5,3,5
"org.eclipse.jdt.internal.compiler.ast.Expression.reusableJSRTarget()",2,1,3
"org.eclipse.jdt.internal.compiler.ast.Expression.sIsMoreSpecific(TypeBinding,TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.setExpectedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.setExpressionContext(ExpressionContext)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.statementExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.tagAsNeedCheckCast()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.tagAsUnnecessaryCast(Scope,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.toTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Expression.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.ExtendedStringLiteral(StringLiteral,CharLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.ExtendedStringLiteral(StringLiteral,StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.extendWith(CharLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.extendWith(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.FakedTrackingVariable(BlockScope,ASTNode,FlowInfo,int)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.FakedTrackingVariable(LocalVariableBinding,ASTNode,FlowInfo,FlowContext,int)",3,2,4
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.IteratorForReporting.IteratorForReporting(List<FakedTrackingVariable>,Scope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.IteratorForReporting.found(FakedTrackingVariable)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.IteratorForReporting.hasNext()",12,14,17
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.IteratorForReporting.next()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.IteratorForReporting.remove()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.IteratorForReporting.setUpForStage(Stage)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.analyseCloseableAllocation(BlockScope,FlowInfo,AllocationExpression)",7,13,18
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.analyseCloseableExpression(FlowInfo,FlowContext,LocalVariableBinding,ASTNode,Expression,FakedTrackingVariable)",12,8,19
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.cleanUpAfterAssignment(BlockScope,int,Expression)",4,4,10
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.containsAllocation(ASTNode)",4,4,5
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.findCloseTracker(BlockScope,FlowInfo,Expression)",6,3,6
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.findMostSpecificStatus(FlowInfo,BlockScope,BlockScope)",3,3,6
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.generateCode(BlockScope,CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.getCloseTrackingVariable(Expression,FlowInfo,FlowContext)",12,7,13
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.getNullStatusAggressively(LocalVariableBinding,FlowInfo)",7,2,10
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.handleRegularResource(BlockScope,FlowInfo,AllocationExpression)",1,6,7
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.handleResourceAssignment(BlockScope,FlowInfo,FlowInfo,FlowContext,ASTNode,Expression,LocalVariableBinding)",10,12,26
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.hasDefinitelyNoResource(FlowInfo)",4,2,5
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.isAnyCloseable(TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.isBlacklistedMethod(Expression)",3,4,4
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.isClosedInFinallyOfEnclosing(BlockScope)",4,3,5
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.isResourceBeingReturned(FakedTrackingVariable)",3,1,3
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.markClose(FlowInfo,FlowContext)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.markClosedInNestedMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.markPassedToOutside(BlockScope,Expression,FlowInfo,FlowContext,boolean)",3,5,7
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.mergeCloseStatus(BlockScope,int,LocalVariableBinding,BlockScope)",5,5,8
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.nameForReporting(ASTNode,ReferenceContext)",5,5,6
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.neverClosedAtLocations()",4,3,4
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.pick(FakedTrackingVariable,FakedTrackingVariable,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.pickMoreUnsafe(FakedTrackingVariable,FakedTrackingVariable,BlockScope,FlowInfo)",5,5,7
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.preConnectTrackerAcrossAssignment(ASTNode,LocalVariableBinding,Expression,FlowInfo)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.preConnectTrackerAcrossAssignment(ASTNode,LocalVariableBinding,FlowInfo,AllocationExpression,FakedTrackingVariable)",1,2,3
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.preConnectTrackerAcrossAssignment(ASTNode,LocalVariableBinding,FlowInfo,ConditionalExpression,FakedTrackingVariable)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.preConnectTrackerAcrossAssignment(ASTNode,LocalVariableBinding,FlowInfo,FakedTrackingVariable,Expression)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.recordErrorLocation(ASTNode,int)",2,1,3
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.reportError(ProblemReporter,ASTNode,int)",5,2,11
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.reportExplicitClosing(ProblemReporter)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.reportRecordedErrors(Scope,int,boolean)",4,7,10
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.withdraw()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.FalseLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.generateOptimizedBoolean(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FalseLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.FieldDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.FieldDeclaration(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.analyseCode(MethodScope,FlowContext,FlowInfo)",1,16,17
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.generateCode(BlockScope,CodeStream)",2,6,7
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.getAllAnnotationContexts(int,List)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.getKind()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.isFinal()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.isStatic()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(MethodScope)",18,32,49
"org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.traverse(ASTVisitor,MethodScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.FieldReference.FieldReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",1,21,21
"org.eclipse.jdt.internal.compiler.ast.FieldReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.FieldReference.checkNPE(BlockScope,FlowContext,FlowInfo)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.FieldReference.computeConversion(Scope,TypeBinding,TypeBinding)",2,7,10
"org.eclipse.jdt.internal.compiler.ast.FieldReference.fieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generateCode(BlockScope,CodeStream,boolean)",5,28,32
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",2,7,11
"org.eclipse.jdt.internal.compiler.ast.FieldReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",3,9,14
"org.eclipse.jdt.internal.compiler.ast.FieldReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.getThisFieldTokens(int)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.FieldReference.isEquivalent(Reference)",6,8,12
"org.eclipse.jdt.internal.compiler.ast.FieldReference.isQualifiedSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.isTypeAccess()",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FieldReference.lastFieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",7,8,15
"org.eclipse.jdt.internal.compiler.ast.FieldReference.nullAnnotatedVariableBinding(boolean)",3,1,4
"org.eclipse.jdt.internal.compiler.ast.FieldReference.optimizedBooleanConstant()",4,4,5
"org.eclipse.jdt.internal.compiler.ast.FieldReference.postConversionType(Scope)",2,3,12
"org.eclipse.jdt.internal.compiler.ast.FieldReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.resolveType(BlockScope)",8,26,34
"org.eclipse.jdt.internal.compiler.ast.FieldReference.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.setDepth(int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.FieldReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FieldReference.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.FloatLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.computeConstant()",9,4,15
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FloatLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ForStatement.ForStatement(Statement[],Expression,Statement[],Statement,boolean,int,int)",1,1,3
"org.eclipse.jdt.internal.compiler.ast.ForStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",3,38,41
"org.eclipse.jdt.internal.compiler.ast.ForStatement.completesByContinue()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ForStatement.doesNotCompleteNormally()",1,8,10
"org.eclipse.jdt.internal.compiler.ast.ForStatement.generateCode(BlockScope,CodeStream)",3,27,30
"org.eclipse.jdt.internal.compiler.ast.ForStatement.printStatement(int,StringBuffer)",1,9,9
"org.eclipse.jdt.internal.compiler.ast.ForStatement.resolve(BlockScope)",1,7,8
"org.eclipse.jdt.internal.compiler.ast.ForStatement.traverse(ASTVisitor,BlockScope)",1,8,8
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.ForeachStatement(LocalDeclaration,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",2,14,19
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.doesNotCompleteNormally()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.generateCode(BlockScope,CodeStream)",9,26,36
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.printStatement(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.resolve(BlockScope)",5,27,39
"org.eclipse.jdt.internal.compiler.ast.ForeachStatement.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.FunctionalExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.FunctionalExpression(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.VisibilityInspector.VisibilityInspector(FunctionalExpression,Scope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.VisibilityInspector.checkVisibility(ReferenceBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.VisibilityInspector.visible(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.VisibilityInspector.visible(TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.VisibilityInspector.visit(ParameterizedTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.VisibilityInspector.visit(RawTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.VisibilityInspector.visit(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.argumentsTypeElided()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.diagnosticsSourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.expectedType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.getExpressionContext()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.getMethodBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.getRequiredBridges()",10,12,21
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.invocationTargetType()",4,2,4
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.isBoxingCompatibleWith(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.isFunctionalType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.isPertinentToApplicability(TypeBinding,MethodBinding)",6,4,7
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.isPolyExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.isPolyExpression(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.kosherDescriptor(Scope,MethodBinding,boolean)",1,1,5
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.nullStatus(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.recordFunctionalType(Scope)",5,3,6
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.reportSamProblem(BlockScope,MethodBinding)",3,2,5
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.requiresBridges()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.resolveType(BlockScope)",4,6,6
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.setCompilationResult(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.setExpectedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.setExpressionContext(ExpressionContext)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IfStatement.IfStatement(Expression,Statement,Statement,int,int)",1,1,4
"org.eclipse.jdt.internal.compiler.ast.IfStatement.IfStatement(Expression,Statement,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.IfStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,15,25
"org.eclipse.jdt.internal.compiler.ast.IfStatement.completesByContinue()",1,4,4
"org.eclipse.jdt.internal.compiler.ast.IfStatement.doesNotCompleteNormally()",1,4,4
"org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode(BlockScope,CodeStream)",2,20,22
"org.eclipse.jdt.internal.compiler.ast.IfStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.IfStatement.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ImportReference.ImportReference(char[][],long[],boolean,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ImportReference.getImportName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ImportReference.print(int,StringBuffer,boolean)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.ImportReference.traverse(ASTVisitor,CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.Initializer(Block,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.Initializer.analyseCode(MethodScope,FlowContext,FlowInfo)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.Initializer.generateCode(BlockScope,CodeStream)",2,2,3
"org.eclipse.jdt.internal.compiler.ast.Initializer.getKind()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.getMethodBinding()",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Initializer.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements(Parser,TypeDeclaration,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Initializer.printStatement(int,StringBuffer)",2,5,5
"org.eclipse.jdt.internal.compiler.ast.Initializer.resolve(MethodScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.Initializer.traverse(ASTVisitor,MethodScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.InstanceOfExpression(Expression,TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,5,7
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.resolveType(BlockScope)",2,11,13
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.tagAsUnnecessaryCast(Scope,TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.IntLiteral(char[],char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.IntLiteral(char[],char[],int,int,int,Constant)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.buildIntLiteral(char[],int,int)",4,2,8
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.computeConstant()",11,10,22
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.computeValue(char[],int,int,int)",3,2,3
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.convertToMinValue()",4,2,5
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue.IntLiteralMinValue(char[],char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.IntersectionCastTypeReference(TypeReference[])",3,1,3
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.augmentTypeWithAdditionalDimensions(int,Annotation[][],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.getLastToken()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.getTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.getTypeReferences()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.printExpression(int,StringBuffer)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.resolveType(BlockScope,boolean,int)",22,13,25
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.traverse(ASTVisitor,BlockScope)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Javadoc.Javadoc(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Javadoc.canBeSeen(int,int)",6,2,7
"org.eclipse.jdt.internal.compiler.ast.Javadoc.getNodeStartingAt(int)",26,8,28
"org.eclipse.jdt.internal.compiler.ast.Javadoc.print(int,StringBuffer)",1,10,10
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolve(ClassScope)",2,8,15
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolve(CompilationUnitScope)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolve(MethodScope)",2,34,53
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveParamTags(MethodScope,boolean,boolean)",2,14,21
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveReference(Expression,Scope)",3,36,43
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveThrowsTags(MethodScope,boolean)",2,28,40
"org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveTypeParameterTags(Scope,boolean)",4,23,32
"org.eclipse.jdt.internal.compiler.ast.Javadoc.traverse(ASTVisitor,BlockScope)",1,11,11
"org.eclipse.jdt.internal.compiler.ast.Javadoc.traverse(ASTVisitor,ClassScope)",1,11,11
"org.eclipse.jdt.internal.compiler.ast.Javadoc.verifyTypeReference(Expression,Expression,Scope,boolean,ReferenceBinding,int)",21,29,39
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.JavadocAllocationExpression(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.JavadocAllocationExpression(long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.internalResolveType(Scope)",11,31,39
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.traverse(ASTVisitor,BlockScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.traverse(ASTVisitor,ClassScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.JavadocArgumentExpression(char[],int,int,TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.internalResolveType(Scope)",6,13,16
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.traverse(ASTVisitor,ClassScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.JavadocArrayQualifiedTypeReference(JavadocQualifiedTypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.reportDeprecatedType(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.JavadocArraySingleTypeReference(char[],int,long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.reportDeprecatedType(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.JavadocFieldReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.internalResolveType(Scope)",5,16,19
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.traverse(ASTVisitor,ClassScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.JavadocImplicitTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.augmentTypeWithAdditionalDimensions(int,Annotation[][],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.getLastToken()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.getTypeName()",2,1,2
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.internalResolveType(Scope,int)",10,12,16
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.reportDeprecatedType(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.JavadocMessageSend(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.JavadocMessageSend(char[],long,JavadocArgumentExpression[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.internalResolveType(Scope)",14,33,42
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.printExpression(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.traverse(ASTVisitor,ClassScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.JavadocQualifiedTypeReference(char[][],long[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.internalResolveType(Scope,boolean)",4,7,8
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.reportDeprecatedType(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.reportDeprecatedType(TypeBinding,Scope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.resolveType(BlockScope,boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.resolveType(ClassScope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.JavadocReturnStatement(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.resolve(BlockScope)",1,3,6
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.JavadocSingleNameReference(char[],long,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.resolve(BlockScope,boolean,boolean)",2,5,7
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.JavadocSingleTypeReference(char[],long,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.internalResolveType(Scope,int)",9,11,14
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.reportDeprecatedType(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.LabeledStatement(char[],Statement,long,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.completesByContinue()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.concreteStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.doesNotCompleteNormally()",2,1,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.generateCode(BlockScope,CodeStream)",2,4,5
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LabeledStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.LambdaExpression(CompilationResult,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.LambdaExpression(CompilationResult,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.abort(int,CategorizedProblem)",5,2,5
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.addSyntheticArgument(LocalVariableBinding)",5,2,9
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,6,12
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.analyzeExceptions()",1,2,3
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.analyzeShape()",1,4,7
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.argumentTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.arguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.argumentsTypeElided()",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.arrowPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.body()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.cachedResolvedCopy(TypeBinding,boolean,boolean,InferenceContext18)",8,11,18
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.checkAgainstNullAnnotation(FlowContext,Expression,FlowInfo,int)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.compilationResult()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.copy()",1,2,4
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.diagnosticsSourceEnd()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.enclosingScopesHaveErrors()",3,3,4
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.expectedResultType()",1,2,3
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.findGroundTargetType(BlockScope,TypeBinding,boolean)",4,6,6
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.findGroundTargetTypeForElidedLambda(BlockScope,ParameterizedTypeBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.generateCode(BlockScope,CodeStream,boolean)",1,5,10
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.generateCode(ClassFile)",1,9,10
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.generateCode(ClassScope,ClassFile)",4,5,5
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.getCompilationUnitDeclaration()",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.getMarkerInterfaces()",6,5,7
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.getMethodBinding()",1,4,5
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.getScope()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.getSyntheticArgument(LocalVariableBinding)",3,1,4
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.getThrownExceptions()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.getTypeBinding()",2,1,3
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.hasErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.isCompatibleWith(TypeBinding,Scope)",12,4,14
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.isPertinentToApplicability(TypeBinding,MethodBinding)",8,3,8
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.isPotentiallyCompatibleWith(TypeBinding,Scope)",7,2,8
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.isValueCompatible()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.isVoidCompatible()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.kosherDescriptor(Scope,MethodBinding,boolean)",2,3,3
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.mergeParameterNullAnnotations(BlockScope)",2,11,11
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.original()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.printExpression(int,StringBuffer,boolean)",1,7,8
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.resolveExpressionExpecting(TypeBinding,Scope,InferenceContext18)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.resolveType(BlockScope)",15,49,85
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.resultExpressions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.returnsExpression(Expression,TypeBinding)",3,4,7
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.sIsMoreSpecific(TypeBinding,TypeBinding,Scope)",20,14,28
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.setArguments(Argument[])",1,1,3
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.setArrowPosition(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.setBody(Statement)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.tagAsHavingErrors()",3,3,4
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.tagAsHavingIgnoredMandatoryErrors(int)",4,4,6
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.LambdaExpression.validateNullAnnotations()",1,4,4
"org.eclipse.jdt.internal.compiler.ast.Literal.Literal(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Literal.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Literal.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Literal.resolveType(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.LocalDeclaration(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.analyseCode(BlockScope,FlowContext,FlowInfo)",2,8,11
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.checkModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.generateCode(BlockScope,CodeStream)",5,7,10
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.getAllAnnotationContexts(int,LocalVariableBinding,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.getAllAnnotationContexts(int,int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.getKind()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.isArgument()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.isReceiver()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.isRecoveredFromLoneIdentifier()",1,4,6
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(BlockScope)",5,28,34
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverseWithoutInitializer(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.LongLiteral(char[],char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.buildLongLiteral(char[],int,int)",4,2,8
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.computeConstant()",11,10,22
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.computeValue(char[],int,int,int)",3,2,3
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.convertToMinValue()",4,2,5
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue.LongLiteralMinValue(char[],char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral.MagicLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral.isValidJavaStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MagicLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.MarkerAnnotation(TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.memberValuePairs()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.traverse(ASTVisitor,ClassScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.MemberValuePair(char[],int,int,Expression)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.resolveTypeExpecting(BlockScope,TypeBinding)",14,46,53
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.MemberValuePair.traverse(ASTVisitor,ClassScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseBooleanAssertion(BlockScope,Expression,FlowContext,FlowInfo,boolean,boolean)",1,6,7
"org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode(BlockScope,FlowContext,FlowInfo)",7,18,23
"org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseNullAssertion(BlockScope,Expression,FlowContext,FlowInfo,boolean)",1,8,10
"org.eclipse.jdt.internal.compiler.ast.MessageSend.arguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.binding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.checkNPE(BlockScope,FlowContext,FlowInfo)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.computeConversion(Scope,TypeBinding,TypeBinding)",2,9,13
"org.eclipse.jdt.internal.compiler.ast.MessageSend.detectAssertionUtility(int)",26,15,34
"org.eclipse.jdt.internal.compiler.ast.MessageSend.findMethodBinding(BlockScope)",3,4,7
"org.eclipse.jdt.internal.compiler.ast.MessageSend.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.generateCode(BlockScope,CodeStream,boolean)",2,16,18
"org.eclipse.jdt.internal.compiler.ast.MessageSend.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.getExpressionContext()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.getInferenceContext(ParameterizedMethodBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.invocationTargetType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isBoxingCompatibleWith(TypeBinding,Scope)",4,12,15
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isCompatibleWith(TypeBinding,Scope)",3,12,15
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isPolyExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isPolyExpression(MethodBinding)",8,3,10
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isQualifiedSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.isTypeAccess()",1,2,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",8,7,9
"org.eclipse.jdt.internal.compiler.ast.MessageSend.nullStatus(FlowInfo,FlowContext)",3,2,4
"org.eclipse.jdt.internal.compiler.ast.MessageSend.postConversionType(Scope)",2,3,12
"org.eclipse.jdt.internal.compiler.ast.MessageSend.printExpression(int,StringBuffer)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.MessageSend.receiverIsImplicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.recordCallingClose(BlockScope,FlowContext,FlowInfo,Expression)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.MessageSend.registerInferenceContext(ParameterizedGenericMethodBinding,InferenceContext18)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.registerResult(TypeBinding,MethodBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(BlockScope)",15,72,99
"org.eclipse.jdt.internal.compiler.ast.MessageSend.sIsMoreSpecific(TypeBinding,TypeBinding,Scope)",2,3,4
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setActualReceiverType(ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setDepth(int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setExpectedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setExpressionContext(ExpressionContext)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.statementExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(ASTVisitor,BlockScope)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.MethodDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(ClassScope,FlowContext,FlowInfo)",5,30,39
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.getAllAnnotationContexts(int,List)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.hasNullTypeAnnotation(AnnotationPosition)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.isDefaultMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.isMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(Parser,CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.printReturnType(int,StringBuffer)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements()",7,28,47
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(ASTVisitor,ClassScope)",1,14,14
"org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.typeParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.NameReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.checkEffectiveFinality(LocalVariableBinding,Scope)",3,4,4
"org.eclipse.jdt.internal.compiler.ast.NameReference.fieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.isTypeAccess()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.NameReference.isTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NameReference.lastFieldBinding()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.NameReference.setActualReceiverType(ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.NameReference.setDepth(int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.NameReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.NormalAnnotation(TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.computeElementValuePairs()",2,1,4
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.memberValuePairs()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.printExpression(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.traverse(ASTVisitor,BlockScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.traverse(ASTVisitor,ClassScope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.NullAnnotationMatching(int,int,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.SearchContradictions.visit(ParameterizedTypeBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.SearchContradictions.visit(RawTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.SearchContradictions.visit(ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.SearchContradictions.visit(TypeVariableBinding)",3,1,5
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.SearchContradictions.visit(WildcardBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.analyse(TypeBinding,TypeBinding,TypeBinding,int,CheckMode)",25,23,49
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.analyse(TypeBinding,TypeBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.areSameTypes(TypeBinding,TypeBinding,TypeBinding)",9,9,13
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.checkAssignment(BlockScope,FlowContext,VariableBinding,FlowInfo,int,Expression,TypeBinding)",8,7,12
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.checkForContradictions(MethodBinding,Object,Scope)",6,7,11
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.computeNullProblemSeverity(long,long,int,boolean)",6,1,11
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.hasContradictions(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.isAnyMismatch()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.isDefiniteMismatch()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.isPotentiallyNullMismatch()",1,3,3
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.isUnchecked()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.mergeTypeAnnotations(TypeBinding,TypeBinding,boolean,LookupEnvironment)",2,6,6
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.moreDangerousType(TypeBinding,TypeBinding)",8,3,8
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.providedNullTagBits(TypeBinding)",16,4,16
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.requiredNullTagBits(TypeBinding,CheckMode)",14,4,14
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.strongerType(TypeBinding,TypeBinding,LookupEnvironment)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.superTypeHintName(CompilerOptions,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.validNullTagBits(long)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.weakerTypes(TypeBinding[],TypeBinding[],LookupEnvironment)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.NullLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.nullStatus(FlowInfo,FlowContext)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.reusableJSRTarget()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NullLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.NumberLiteral(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.NumberLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.isValidJavaStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.removePrefixZerosAndUnderscores(char[],boolean)",8,4,24
"org.eclipse.jdt.internal.compiler.ast.NumberLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.OR_OR_Expression(Expression,Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,8,8
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.generateCode(BlockScope,CodeStream,boolean)",5,18,21
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.generateOptimizedBoolean(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",8,18,23
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.isCompactableOperation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.resolveType(BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.OperatorExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.classInitialize()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.generateTableTestCase()",43,8,49
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_AND()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_AND_AND()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_DIVIDE()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_EQUAL_EQUAL()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_GREATER()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_GREATER_EQUAL()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_LEFT_SHIFT()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_LESS()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_LESS_EQUAL()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_MINUS()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_MULTIPLY()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_OR()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_OR_OR()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_PLUS()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_REMAINDER()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_RIGHT_SHIFT()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_UNSIGNED_RIGHT_SHIFT()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.get_XOR()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.operatorToString()",24,2,24
"org.eclipse.jdt.internal.compiler.ast.OperatorExpression.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.ParameterizedQualifiedTypeReference(char[][],TypeReference[][],int,Annotation[][],long[])",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.ParameterizedQualifiedTypeReference(char[][],TypeReference[][],int,long[])",5,1,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.augmentTypeWithAdditionalDimensions(int,Annotation[][],boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.checkBounds(ReferenceBinding,Scope,int)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.checkBounds(Scope)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.createArrayType(Scope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.getParameterizedTypeName()",1,6,7
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.getTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.hasNullTypeAnnotation(AnnotationPosition)",9,7,10
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.internalResolveLeafType(Scope,boolean)",14,47,57
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.internalResolveType(Scope,boolean,int)",5,6,9
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.isParameterizedTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.printExpression(int,StringBuffer)",1,16,21
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.resolveType(BlockScope,boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.resolveType(ClassScope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,11,13
"org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,11,13
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.ParameterizedSingleTypeReference(char[],TypeReference[],int,Annotation[][],long)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.ParameterizedSingleTypeReference(char[],TypeReference[],int,long)",3,1,3
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.augmentTypeWithAdditionalDimensions(int,Annotation[][],boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.checkBounds(Scope)",2,3,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.createArrayType(Scope,TypeBinding)",2,3,3
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.getParameterizedTypeName()",1,4,5
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.getTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.hasNullTypeAnnotation(AnnotationPosition)",7,5,8
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveLeafType(Scope,ReferenceBinding,boolean)",18,26,35
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType(Scope,ReferenceBinding,boolean,int)",7,11,12
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.isParameterizedTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.printExpression(int,StringBuffer)",1,10,14
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(BlockScope,boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(ClassScope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.traverse(ASTVisitor,BlockScope)",1,9,10
"org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.traverse(ASTVisitor,ClassScope)",1,8,9
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.PostfixExpression(Expression,Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.checkCastCompatibility()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.operatorToString()",3,2,3
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.restrainUsageToNumericTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PostfixExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.PrefixExpression(Expression,Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.checkCastCompatibility()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.operatorToString()",3,2,3
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.restrainUsageToNumericTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.PrefixExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.QualifiedAllocationExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.QualifiedAllocationExpression(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,17,20
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.enclosingInstance()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.generateCode(BlockScope,CodeStream,boolean)",2,12,14
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(BlockScope)",2,10,12
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveTypeForQualifiedAllocationExpression(BlockScope)",33,67,93
"org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.traverse(ASTVisitor,BlockScope)",1,9,9
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.QualifiedNameReference(char[][],long[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",2,29,35
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",2,15,21
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.checkInternalNPE(BlockScope,FlowContext,FlowInfo,boolean)",1,7,10
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.checkNPE(BlockScope,FlowContext,FlowInfo)",3,2,5
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.computeConversion(Scope,TypeBinding,TypeBinding)",2,9,14
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateCode(BlockScope,CodeStream,boolean)",2,25,28
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",2,10,13
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",3,12,16
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateReadSequence(BlockScope,CodeStream)",2,27,40
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateReceiver(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getCodegenBinding(int)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getFinalReceiverType()",4,2,8
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getGenericCast(int)",3,1,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getOtherFieldBindings(BlockScope)",5,25,30
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.isEquivalent(Reference)",11,2,11
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.isFieldAccess()",2,1,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.lastFieldBinding()",3,1,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",6,4,8
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.manageSyntheticAccessIfNecessary(BlockScope,FieldBinding,int,FlowInfo)",7,6,16
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.nullAnnotatedVariableBinding(boolean)",3,5,7
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.optimizedBooleanConstant()",6,5,6
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.postConversionType(Scope)",2,3,13
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.printExpression(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.reportError(BlockScope)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType(BlockScope)",10,35,44
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setGenericCast(int,TypeBinding)",2,1,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.setSyntheticAccessor(FieldBinding,int,SyntheticMethodBinding)",1,1,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.unboundReferenceErrorName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.QualifiedSuperReference(TypeReference,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.findCompatibleEnclosing(ReferenceBinding,TypeBinding)",2,4,7
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.isQualifiedSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.isSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.resolveType(BlockScope)",5,6,7
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference.traverse(ASTVisitor,ClassScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.QualifiedThisReference(TypeReference,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.findCompatibleEnclosing(ReferenceBinding,TypeBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.generateCode(BlockScope,CodeStream,boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.resolveType(BlockScope)",7,9,11
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference.traverse(ASTVisitor,ClassScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.QualifiedTypeReference(char[][],long[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.augmentTypeWithAdditionalDimensions(int,Annotation[][],boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.findNextTypeBinding(int,Scope,PackageBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getAnnotatableLevels()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getLastToken()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(Scope)",9,23,29
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.printExpression(int,StringBuffer)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.recordResolution(LookupEnvironment,TypeBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.rejectAnnotationsOnPackageQualifiers(Scope,PackageBinding)",2,3,6
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.rejectAnnotationsOnStaticMemberQualififer(Scope,ReferenceBinding,Annotation[])",1,5,5
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.traverse(ASTVisitor,BlockScope)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.traverse(ASTVisitor,ClassScope)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.Receiver.Receiver(char[],long,TypeReference,NameReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Receiver.isReceiver()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Receiver.print(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Reference.Reference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.checkNPE(BlockScope,FlowContext,FlowInfo)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.Reference.checkNullableFieldDereference(Scope,FieldBinding,long)",3,3,3
"org.eclipse.jdt.internal.compiler.ast.Reference.fieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.fieldStore(Scope,CodeStream,FieldBinding,MethodBinding,TypeBinding,boolean,boolean)",3,8,10
"org.eclipse.jdt.internal.compiler.ast.Reference.isEquivalent(Reference)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.lastFieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Reference.nullStatus(FlowInfo,FlowContext)",6,5,7
"org.eclipse.jdt.internal.compiler.ast.Reference.reportOnlyUselesslyReadLocal(BlockScope,LocalVariableBinding,boolean)",6,7,12
"org.eclipse.jdt.internal.compiler.ast.Reference.reportOnlyUselesslyReadPrivateField(BlockScope,FieldBinding,boolean)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.ReferenceExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.acceptPotentiallyCompatibleMethods(MethodBinding[])",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.cachedResolvedCopy(TypeBinding)",3,2,5
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.checkNullAnnotations(BlockScope)",1,12,14
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.checkingPotentialCompatibility()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.copy()",1,2,3
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.createPseudoExpressions(TypeBinding[])",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.descriptorParametersAsArgumentExpressions()",3,2,5
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.freshInferenceContext(Scope)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.generateCode(BlockScope,CodeStream,boolean)",6,23,25
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.generateImplicitLambda(BlockScope,CodeStream,boolean)",6,9,18
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.getExactMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.getInferenceContext(ParameterizedMethodBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.getMethodBinding()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.initialize(CompilationResult,Expression,TypeReference[],char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isArrayConstructorReference()",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isCompatibleWith(TypeBinding,Scope)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isConstructorReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isExactMethodReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isMethodReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isPertinentToApplicability(TypeBinding,MethodBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isPotentiallyCompatibleWith(TypeBinding,Scope)",15,14,28
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",7,14,17
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.printExpression(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.registerInferenceContext(ParameterizedGenericMethodBinding,InferenceContext18)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.resolveExpressionExpecting(TypeBinding,Scope,InferenceContext18)",3,8,12
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.resolveType(BlockScope)",34,93,115
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.sIsMoreSpecific(TypeBinding,TypeBinding,Scope)",8,5,12
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.shouldGenerateImplicitLambda(BlockScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.shouldGenerateSecretReceiverVariable()",3,6,7
"org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.traverse(ASTVisitor,BlockScope)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.ReturnStatement(Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.ReturnStatement(Expression,int,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",8,23,31
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.checkAgainstNullAnnotation(BlockScope,FlowContext,FlowInfo)",1,4,6
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.doesNotCompleteNormally()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateCode(BlockScope,CodeStream)",5,10,12
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateReturnBytecode(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateStoreSaveValueIfNecessary(CodeStream)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.needValue()",1,1,3
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.needValueStore()",1,1,4
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.prepareSaveValueLocation(TryStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.resolve(BlockScope)",10,30,38
"org.eclipse.jdt.internal.compiler.ast.ReturnStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.SingleMemberAnnotation()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.SingleMemberAnnotation(TypeReference,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.computeElementValuePairs()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.memberValuePairs()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.traverse(ASTVisitor,ClassScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.SingleNameReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",3,28,39
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",2,9,12
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.checkFieldAccess(BlockScope)",3,17,17
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.checkNPE(BlockScope,FlowContext,FlowInfo)",4,4,4
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.computeConversion(Scope,TypeBinding,TypeBinding)",2,9,13
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",7,20,32
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCode(BlockScope,CodeStream,boolean)",11,23,32
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",2,2,4
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCompoundAssignment(BlockScope,CodeStream,MethodBinding,Expression,int,int,boolean)",12,26,37
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",7,16,25
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateReceiver(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.getName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.isEquivalent(Reference)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.localVariableBinding()",2,2,3
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",6,4,8
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",5,6,10
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.nullAnnotatedVariableBinding(boolean)",3,2,4
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.nullStatus(FlowInfo,FlowContext)",3,2,3
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.postConversionType(Scope)",2,3,12
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.reportError(BlockScope)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.resolveType(BlockScope)",6,15,16
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleNameReference.unboundReferenceErrorName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.SingleTypeReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.augmentTypeWithAdditionalDimensions(int,Annotation[][],boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getLastToken()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding(Scope)",4,7,10
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.isBaseTypeReference()",1,1,10
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.printExpression(int,StringBuffer)",1,2,3
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.resolveTypeEnclosing(BlockScope,ReferenceBinding)",4,6,8
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(ASTVisitor,BlockScope)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(ASTVisitor,ClassScope)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.Statement.analyseArguments(BlockScope,FlowContext,FlowInfo,MethodBinding,Expression[])",3,16,23
"org.eclipse.jdt.internal.compiler.ast.Statement.analyseOneArgument18(BlockScope,FlowContext,FlowInfo,TypeBinding,Expression,Boolean,TypeBinding)",2,3,3
"org.eclipse.jdt.internal.compiler.ast.Statement.branchChainTo(BranchLabel)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.breaksOut(char[])",1,2,3
"org.eclipse.jdt.internal.compiler.ast.Statement.checkAgainstNullTypeAnnotation(BlockScope,TypeBinding,Expression,FlowContext,FlowInfo)",2,3,3
"org.eclipse.jdt.internal.compiler.ast.Statement.complainIfUnreachable(FlowInfo,BlockScope,int,boolean)",3,7,8
"org.eclipse.jdt.internal.compiler.ast.Statement.completesByContinue()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.continuesAtOuterLabel()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.Statement.doesNotCompleteNormally()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.expectedType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.findConstructorBinding(BlockScope,Invocation,ReferenceBinding,TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.generateArguments(MethodBinding,Expression[],BlockScope,CodeStream)",1,11,12
"org.eclipse.jdt.internal.compiler.ast.Statement.getExpressionContext()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.internalAnalyseOneArgument18(BlockScope,FlowContext,TypeBinding,Expression,FlowInfo,int,Boolean,TypeBinding)",1,5,7
"org.eclipse.jdt.internal.compiler.ast.Statement.internalCheckAgainstNullTypeAnnotation(BlockScope,TypeBinding,Expression,int,FlowContext,FlowInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Statement.invocationTargetType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.isBoxingCompatible(TypeBinding,TypeBinding,Expression,Scope)",2,6,9
"org.eclipse.jdt.internal.compiler.ast.Statement.isEmptyBlock()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.isKnowDeadCodePattern(Expression)",2,1,3
"org.eclipse.jdt.internal.compiler.ast.Statement.isValidJavaStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.print(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Statement.resolveCase(BlockScope,TypeBinding,SwitchStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.StringLiteral(char[],int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.StringLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.extendWith(CharLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.extendWith(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.extendsWith(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.StringLiteralConcatenation(StringLiteral,StringLiteral)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.extendsWith(StringLiteral)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.enterAnyExceptionHandler(CodeStream)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.enterDeclaredExceptionHandlers(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.exitAnyExceptionHandler()",1,2,2
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.exitDeclaredExceptionHandlers(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.placeAllAnyExceptionHandler()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.reenterAllExceptionHandlers(SubRoutineStatement[],int,CodeStream)",2,2,4
"org.eclipse.jdt.internal.compiler.ast.SuperReference.SuperReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.implicitSuperConstructorCall()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isImplicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.isUnqualifiedSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.printExpression(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SuperReference.resolveType(BlockScope)",3,2,3
"org.eclipse.jdt.internal.compiler.ast.SuperReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",2,14,20
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.branchChainTo(BranchLabel)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.completesByContinue()",4,2,5
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.doesNotCompleteNormally()",4,2,5
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.generateCode(BlockScope,CodeStream)",3,18,26
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.generateCodeForStringSwitch(BlockScope,CodeStream)",4,16,28
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.printStatement(int,StringBuffer)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.reportDuplicateCase(CaseStatement,CaseStatement,int)",3,3,5
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.resolve(BlockScope)",15,28,41
"org.eclipse.jdt.internal.compiler.ast.SwitchStatement.traverse(ASTVisitor,BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.SynchronizedStatement(Expression,Block,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.completesByContinue()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.doesNotCompleteNormally()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.generateCode(BlockScope,CodeStream)",3,10,12
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.generateSubRoutineInvocation(BlockScope,CodeStream,Object,int,LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.isSubRoutineEscaping()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.resolve(BlockScope)",3,2,5
"org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.ThisReference.ThisReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.analyseAssignment(BlockScope,FlowContext,FlowInfo,Assignment,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.checkAccess(BlockScope,ReferenceBinding)",5,7,7
"org.eclipse.jdt.internal.compiler.ast.ThisReference.checkNPE(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generateCode(BlockScope,CodeStream,boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.implicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.isImplicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.isThis()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.nullStatus(FlowInfo,FlowContext)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.printExpression(int,StringBuffer)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ThisReference.resolveType(BlockScope)",2,5,7
"org.eclipse.jdt.internal.compiler.ast.ThisReference.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThisReference.traverse(ASTVisitor,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.ThrowStatement(Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.doesNotCompleteNormally()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.generateCode(BlockScope,CodeStream)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.resolve(BlockScope)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.ThrowStatement.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.TrueLiteral(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.computeConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.generateOptimizedBoolean(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.literalType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.source()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TrueLiteral.traverse(ASTVisitor,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TryStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",3,27,38
"org.eclipse.jdt.internal.compiler.ast.TryStatement.completesByContinue()",5,10,10
"org.eclipse.jdt.internal.compiler.ast.TryStatement.doesNotCompleteNormally()",5,7,7
"org.eclipse.jdt.internal.compiler.ast.TryStatement.enterAnyExceptionHandler(CodeStream)",2,1,2
"org.eclipse.jdt.internal.compiler.ast.TryStatement.enterDeclaredExceptionHandlers(CodeStream)",1,2,3
"org.eclipse.jdt.internal.compiler.ast.TryStatement.exitAnyExceptionHandler()",2,1,2
"org.eclipse.jdt.internal.compiler.ast.TryStatement.exitDeclaredExceptionHandlers(CodeStream)",1,2,3
"org.eclipse.jdt.internal.compiler.ast.TryStatement.finallyMode()",4,3,4
"org.eclipse.jdt.internal.compiler.ast.TryStatement.findCloseMethod(LocalDeclaration,LocalVariableBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.TryStatement.generateCode(BlockScope,CodeStream)",10,47,63
"org.eclipse.jdt.internal.compiler.ast.TryStatement.generateSubRoutineInvocation(BlockScope,CodeStream,Object,int,LocalVariableBinding)",6,16,22
"org.eclipse.jdt.internal.compiler.ast.TryStatement.isSubRoutineEscaping()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TryStatement.isUncheckedCatchBlock(int)",5,4,5
"org.eclipse.jdt.internal.compiler.ast.TryStatement.prepareCatchInfo(FlowInfo,ExceptionHandlingFlowContext,FlowInfo,int)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.TryStatement.printStatement(int,StringBuffer)",1,7,8
"org.eclipse.jdt.internal.compiler.ast.TryStatement.resolve(BlockScope)",3,19,26
"org.eclipse.jdt.internal.compiler.ast.TryStatement.traverse(ASTVisitor,BlockScope)",1,6,6
"org.eclipse.jdt.internal.compiler.ast.TryStatement.verifyDuplicationAndOrder(int,TypeBinding[],boolean)",13,10,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.TypeDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.abort(int,CategorizedProblem)",5,2,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.addClinit()",1,3,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.addMissingAbstractMethodFor(MethodBinding)",1,4,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(BlockScope,FlowContext,FlowInfo)",2,2,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(ClassScope)",2,1,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(ClassScope,FlowContext,FlowInfo)",2,2,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(CompilationUnitScope)",2,1,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.checkConstructors(Parser)",2,8,9
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.compilationResult()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.createDefaultConstructor(boolean,boolean)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.createDefaultConstructorWithBinding(MethodBinding,boolean)",1,9,12
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOf(FieldBinding)",4,1,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOf(MemberTypeBinding)",4,3,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOf(MethodBinding)",4,1,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.declarationOfType(char[][])",5,3,6
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(BlockScope,CodeStream)",3,4,7
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(ClassFile)",6,12,15
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(ClassScope,ClassFile)",2,4,6
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.getCompilationUnitDeclaration()",2,2,2
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.hasErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(FlowContext,FlowInfo)",4,22,26
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.isPackageInfo()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.isSecondary()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.kind(int)",5,2,5
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",2,13,15
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.manageEnclosingInstanceAccessIfNecessary(ClassScope,FlowInfo)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.needClassInitMethod()",7,2,7
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(Parser,CompilationUnitDeclaration)",3,8,9
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.print(int,StringBuffer)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printBody(int,StringBuffer)",1,10,10
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printHeader(int,StringBuffer)",3,11,16
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printStatement(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve()",14,68,86
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(BlockScope)",6,22,23
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(ClassScope)",1,2,3
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.tagAsHavingErrors()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.tagAsHavingIgnoredMandatoryErrors(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(ASTVisitor,BlockScope)",1,18,19
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(ASTVisitor,ClassScope)",1,17,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(ASTVisitor,CompilationUnitScope)",1,17,18
"org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.updateMaxFieldCount()",2,1,3
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.checkBounds(Scope)",1,4,4
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.generateCode(BlockScope,CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.getAllAnnotationContexts(int,int,List)",5,8,11
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.getKind()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.internalResolve(Scope,boolean)",1,8,8
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.printStatement(int,StringBuffer)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.resolve(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.resolve(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.resolveAnnotations(Scope)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.traverse(ASTVisitor,BlockScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.TypeParameter.traverse(ASTVisitor,ClassScope)",1,7,7
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.AnnotationCollector(Expression,int,int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.AnnotationCollector(LocalDeclaration,int,LocalVariableBinding,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.AnnotationCollector(LocalDeclaration,int,int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.AnnotationCollector(TypeParameter,int,int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.AnnotationCollector(TypeReference,int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.AnnotationCollector(TypeReference,int,int,List,Annotation[][],int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.AnnotationCollector(TypeReference,int,int,int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.endVisit(Wildcard,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.internalVisit(Annotation)",2,4,8
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.visit(Argument,BlockScope)",4,1,4
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.visit(Argument,ClassScope)",4,1,4
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.visit(LocalDeclaration,BlockScope)",3,1,3
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.visit(MarkerAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.visit(NormalAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.visit(SingleMemberAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.AnnotationCollector.visit(Wildcard,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.aboutToResolve(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.baseTypeReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.baseTypeReference(int,int,Annotation[][])",20,3,20
"org.eclipse.jdt.internal.compiler.ast.TypeReference.checkBounds(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.checkNullConstraints(Scope,TypeBinding[],int)",1,6,7
"org.eclipse.jdt.internal.compiler.ast.TypeReference.checkNullConstraints(Scope,TypeReference[])",1,5,5
"org.eclipse.jdt.internal.compiler.ast.TypeReference.containsNullAnnotation(Annotation[])",4,1,7
"org.eclipse.jdt.internal.compiler.ast.TypeReference.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.extraDimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.findAnnotation(long)",5,1,8
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getAllAnnotationContexts(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getAllAnnotationContexts(int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getAllAnnotationContexts(int,int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getAllAnnotationContexts(int,int,List,Annotation[])",1,2,3
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getAllAnnotationContexts(int,int,List,Annotation[][],int)",1,5,5
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getAllAnnotationContexts(int,int,int,List)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getAnnotatableLevels()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getAnnotationsOnDimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getAnnotationsOnDimensions(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getMergedAnnotationsOnDimensions(int,Annotation[][])",2,1,7
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getParameterizedTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.getTypeReferences()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.hasNullTypeAnnotation(AnnotationPosition)",5,4,5
"org.eclipse.jdt.internal.compiler.ast.TypeReference.internalResolveType(Scope,int)",11,15,19
"org.eclipse.jdt.internal.compiler.ast.TypeReference.isBaseTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.isParameterizedTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.isTypeReference()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.isUnionType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.isVarargs()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.isWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.reportDeprecatedType(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.reportDeprecatedType(TypeBinding,Scope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.reportInvalidType(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveAnnotations(Scope,int)",1,18,20
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType(ClassScope)",3,3,4
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(BlockScope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(BlockScope,boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(ClassScope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveTypeArgument(BlockScope,ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveTypeArgument(ClassScope,ReferenceBinding,int)",1,1,3
"org.eclipse.jdt.internal.compiler.ast.TypeReference.setAnnotationsOnDimensions(Annotation[][])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.UnaryExpression(Expression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.analyseCode(BlockScope,FlowContext,FlowInfo)",2,2,2
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.generateCode(BlockScope,CodeStream,boolean)",7,16,26
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.generateOptimizedBoolean(BlockScope,CodeStream,BranchLabel,BranchLabel,boolean)",2,4,4
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.optimizedBooleanConstant()",1,1,2
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.printExpressionNoParenthesis(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.resolveType(BlockScope)",5,11,22
"org.eclipse.jdt.internal.compiler.ast.UnaryExpression.traverse(ASTVisitor,BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.UnionTypeReference(TypeReference[])",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.augmentTypeWithAdditionalDimensions(int,Annotation[][],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.getLastToken()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.getTypeBinding(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.getTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.isUnionType()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.printExpression(int,StringBuffer)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.resolveType(BlockScope,boolean,int)",5,9,12
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.traverse(ASTVisitor,BlockScope)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.traverse(ASTVisitor,ClassScope)",1,3,4
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.WhileStatement(Expression,Statement,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",3,17,19
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.completesByContinue()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.doesNotCompleteNormally()",1,7,8
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.generateCode(BlockScope,CodeStream)",3,15,16
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.printStatement(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.resolve(BlockScope)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.WhileStatement.traverse(ASTVisitor,BlockScope)",1,3,3
"org.eclipse.jdt.internal.compiler.ast.Wildcard.Wildcard(int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.getParameterizedTypeName()",4,3,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.getTypeName()",4,3,4
"org.eclipse.jdt.internal.compiler.ast.Wildcard.internalResolveType(Scope,ReferenceBinding,int)",3,8,9
"org.eclipse.jdt.internal.compiler.ast.Wildcard.isWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.printExpression(int,StringBuffer)",2,3,6
"org.eclipse.jdt.internal.compiler.ast.Wildcard.resolveType(BlockScope,boolean,int)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Wildcard.resolveType(ClassScope,int)",1,2,2
"org.eclipse.jdt.internal.compiler.ast.Wildcard.resolveTypeArgument(BlockScope,ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.resolveTypeArgument(ClassScope,ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.ast.Wildcard.traverse(ASTVisitor,BlockScope)",1,5,6
"org.eclipse.jdt.internal.compiler.ast.Wildcard.traverse(ASTVisitor,ClassScope)",1,5,6
"org.eclipse.jdt.internal.compiler.batch.BatchCompilerRequestor.BatchCompilerRequestor(Main)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.BatchCompilerRequestor.acceptResult(CompilationResult)",1,5,6
"org.eclipse.jdt.internal.compiler.batch.BatchCompilerRequestor.reportProblems(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.ClasspathDirectory(File,String,int,AccessRuleSet,String)",1,2,3
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.directoryList(String)",8,5,11
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.doesFileExist(String,String)",4,2,4
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.fetchLinkedJars(ClasspathSectionProblemReporter)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.findClass(char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.findClass(char[],String,String,boolean)",7,9,14
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.findSecondaryInClass(char[],String,String)",1,4,4
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.findSourceSecondaryType(char[],String,String)",1,3,4
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.findTypeNames(String)",4,4,8
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.getMode()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.getPackageTypes(char[],String)",7,5,13
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.getPath()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.hasAnnotationFileFor(String)",2,3,3
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.isPackage(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.normalizedPath()",1,3,3
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.ClasspathJar(File,boolean,AccessRuleSet,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.fetchLinkedJars(ClasspathSectionProblemReporter)",1,10,12
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.findClass(char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.findClass(char[],String,String,boolean)",6,4,9
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.findTypeNames(String)",6,5,7
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.getMode()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.getPath()",1,3,3
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.hasAnnotationFileFor(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.initialize()",1,1,2
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.isPackage(String)",5,4,5
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.normalizedPath()",1,3,3
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.reset()",1,4,6
"org.eclipse.jdt.internal.compiler.batch.ClasspathJar.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathLocation.ClasspathLocation(AccessRuleSet,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathLocation.equals(Object)",8,2,8
"org.eclipse.jdt.internal.compiler.batch.ClasspathLocation.fetchAccessRestriction(String)",2,2,3
"org.eclipse.jdt.internal.compiler.batch.ClasspathLocation.getMode()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathLocation.getPath()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathLocation.hashCode()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar.ClasspathSourceJar(File,boolean,AccessRuleSet,String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar.findClass(char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar.findClass(char[],String,String,boolean)",3,3,5
"org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar.getMode()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.CompilationUnit(char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.CompilationUnit(char[],String,String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.CompilationUnit(char[],String,String,String,boolean)",2,4,6
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.getContents()",2,1,3
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.getPackageName()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.ignoreOptionalProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.CompilationUnit.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.FileFinder.find(File,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.FileFinder.find0(File,String,ArrayList)",3,5,6
"org.eclipse.jdt.internal.compiler.batch.FileSystem.ClasspathNormalizer.normalize(ArrayList)",1,3,3
"org.eclipse.jdt.internal.compiler.batch.FileSystem.FileSystem(Classpath[],String[],boolean)",1,3,4
"org.eclipse.jdt.internal.compiler.batch.FileSystem.FileSystem(String[],String[],String)",1,3,4
"org.eclipse.jdt.internal.compiler.batch.FileSystem.cleanup()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.FileSystem.convertPathSeparators(String)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.FileSystem.findClass(String,char[],boolean)",4,6,8
"org.eclipse.jdt.internal.compiler.batch.FileSystem.findType(char[],char[][])",2,2,2
"org.eclipse.jdt.internal.compiler.batch.FileSystem.findType(char[][])",2,2,2
"org.eclipse.jdt.internal.compiler.batch.FileSystem.findType(char[][],boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.batch.FileSystem.findTypeNames(char[][])",1,11,11
"org.eclipse.jdt.internal.compiler.batch.FileSystem.getClasspath(String,String,AccessRuleSet)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.FileSystem.getClasspath(String,String,boolean,AccessRuleSet,String)",1,7,11
"org.eclipse.jdt.internal.compiler.batch.FileSystem.initializeKnownFileNames(String[])",3,6,15
"org.eclipse.jdt.internal.compiler.batch.FileSystem.internalFindClass(String,char[],boolean)",12,11,17
"org.eclipse.jdt.internal.compiler.batch.FileSystem.isPackage(char[][],char[])",6,6,8
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.Logger(Main,PrintWriter,PrintWriter)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.buildFileName(String,String)",1,3,3
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.close()",1,3,3
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.compiling()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.endLoggingExtraProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.endLoggingProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.endLoggingSource()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.endLoggingSources()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.endLoggingTasks()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.endTag(String)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.errorReportSource(CategorizedProblem,char[],int)",6,6,24
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.extractContext(CategorizedProblem,char[])",6,4,22
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.flush()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.getFieldName(int)",1,1,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.getProblemOptionKey(int)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logAverage()",1,3,3
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logClassFile(boolean,String,String)",1,6,7
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logClasspath(Classpath[])",2,6,9
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logCommandLineArguments(String[])",2,4,5
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logException(Exception)",1,6,7
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logExtraProblem(CategorizedProblem,int,int)",1,7,7
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logIncorrectVMVersionForAnnotationProcessing()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logNoClassFileCreated(String,String,IOException)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logNumberOfClassFilesGenerated(int)",1,3,3
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logOptions(Map)",1,3,3
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logPendingError(String)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logProblem(CategorizedProblem,int,int,char[])",1,7,7
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logProblems(CategorizedProblem[],char[],Main)",1,14,15
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logProblemsSummary(int,int,int,int)",1,11,12
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logProgress()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logRepetition(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logTiming(CompilerStats)",1,4,4
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logUnavaibleAPT(String)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logUsage(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logVersion(boolean)",1,4,5
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logWarning(String)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logWrongJDK()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logXmlExtraProblem(CategorizedProblem,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logXmlProblem(CategorizedProblem,char[])",1,4,6
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.logXmlTask(CategorizedProblem,char[])",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.loggingExtraProblems(Main)",1,10,11
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printErr(String)",1,2,3
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printNewLine()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printOut(char)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printStats()",1,6,9
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printTag(String,HashMap,boolean,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printlnErr()",1,2,3
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printlnErr(String)",1,2,3
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.printlnOut(String)",1,2,3
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.setEmacs()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.setLog(String)",1,5,5
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.startLoggingExtraProblems(int)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.startLoggingProblems(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.startLoggingSource(CompilationResult)",1,7,9
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.startLoggingSources()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Logger.startLoggingTasks(int)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.Main(PrintWriter,PrintWriter,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Main(PrintWriter,PrintWriter,boolean,Map)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.Main(PrintWriter,PrintWriter,boolean,Map,CompilationProgress)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.ResourceBundleFactory.getBundle(Locale)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.addExtraProblems(CategorizedProblem)",1,1,2
"org.eclipse.jdt.internal.compiler.batch.Main.addNewEntry(ArrayList,String,ArrayList,String,String,boolean,boolean)",5,12,17
"org.eclipse.jdt.internal.compiler.batch.Main.addPendingErrors(String)",1,1,2
"org.eclipse.jdt.internal.compiler.batch.Main.bind(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.bind(String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.bind(String,String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.bind(String,String[])",2,1,3
"org.eclipse.jdt.internal.compiler.batch.Main.checkVMVersion(long)",11,2,12
"org.eclipse.jdt.internal.compiler.batch.Main.compile(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.compile(String,PrintWriter,PrintWriter)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.compile(String[])",2,16,19
"org.eclipse.jdt.internal.compiler.batch.Main.compile(String[],PrintWriter,PrintWriter,CompilationProgress)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.configure(String[])",134,186,252
"org.eclipse.jdt.internal.compiler.batch.Main.decodeIgnoreOptionalProblemsFromFolders(String)",1,4,4
"org.eclipse.jdt.internal.compiler.batch.Main.disableAll(int)",5,4,7
"org.eclipse.jdt.internal.compiler.batch.Main.enableAll(int)",5,4,7
"org.eclipse.jdt.internal.compiler.batch.Main.extractDestinationPathFromSourceFile(CompilationResult)",4,4,5
"org.eclipse.jdt.internal.compiler.batch.Main.getAllEncodings(Set)",1,3,3
"org.eclipse.jdt.internal.compiler.batch.Main.getBatchRequestor()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.getCompilationUnits()",4,4,7
"org.eclipse.jdt.internal.compiler.batch.Main.getHandlingPolicy()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.getJavaHome()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.getLibrariesFiles(File[])",1,4,4
"org.eclipse.jdt.internal.compiler.batch.Main.getLibraryAccess()",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.getProblemFactory()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.handleBootclasspath(ArrayList,String)",2,5,5
"org.eclipse.jdt.internal.compiler.batch.Main.handleClasspath(ArrayList,String)",1,13,13
"org.eclipse.jdt.internal.compiler.batch.Main.handleEndorseddirs(ArrayList)",1,13,13
"org.eclipse.jdt.internal.compiler.batch.Main.handleErrorOrWarningToken(String,boolean,int)",120,151,222
"org.eclipse.jdt.internal.compiler.batch.Main.handleErrorToken(String,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.handleExtdirs(ArrayList)",1,12,12
"org.eclipse.jdt.internal.compiler.batch.Main.handleWarningToken(String,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.initialize(PrintWriter,PrintWriter,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.initialize(PrintWriter,PrintWriter,boolean,Map)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.initialize(PrintWriter,PrintWriter,boolean,Map,CompilationProgress)",1,3,3
"org.eclipse.jdt.internal.compiler.batch.Main.initializeAnnotationProcessorManager()",1,3,4
"org.eclipse.jdt.internal.compiler.batch.Main.initializeWarnings(String)",2,10,11
"org.eclipse.jdt.internal.compiler.batch.Main.isParentOf(char[],char[])",5,1,6
"org.eclipse.jdt.internal.compiler.batch.Main.loggingExtraProblems()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.main(String[])",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.outputClassFiles(CompilationResult)",1,10,12
"org.eclipse.jdt.internal.compiler.batch.Main.performCompilation()",1,6,8
"org.eclipse.jdt.internal.compiler.batch.Main.printUsage()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.printUsage(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.processClassNames(LookupEnvironment)",3,5,6
"org.eclipse.jdt.internal.compiler.batch.Main.processPathEntries(int,ArrayList,String,String,boolean,boolean)",15,19,41
"org.eclipse.jdt.internal.compiler.batch.Main.processPaths(String[],int,String,ArrayList)",11,12,14
"org.eclipse.jdt.internal.compiler.batch.Main.processPaths(String[],int,String,String[])",10,11,13
"org.eclipse.jdt.internal.compiler.batch.Main.relocalize()",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.relocalize(Locale)",1,2,2
"org.eclipse.jdt.internal.compiler.batch.Main.setDestinationPath(String)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.setLocale(Locale)",1,1,1
"org.eclipse.jdt.internal.compiler.batch.Main.setPaths(ArrayList,String,ArrayList,ArrayList,ArrayList,ArrayList,String)",1,3,6
"org.eclipse.jdt.internal.compiler.batch.Main.setSeverity(String,int,boolean)",3,6,10
"org.eclipse.jdt.internal.compiler.batch.Main.shouldIgnoreOptionalProblems(char[][],char[])",4,2,5
"org.eclipse.jdt.internal.compiler.batch.Main.tokenize(String)",1,10,13
"org.eclipse.jdt.internal.compiler.batch.Main.validateOptions(boolean)",18,97,97
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.AnnotationInfo(byte[],int[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.AnnotationInfo(byte[],int[],int,boolean,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.decodeAnnotation()",1,2,3
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.decodeDefaultValue()",2,4,17
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.equals(Object)",6,1,6
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.getElementValuePairs()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.getTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.initialize()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.readRetentionPolicy(int)",2,5,9
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.readTargetValue(int)",2,6,10
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.scanAnnotation(int,boolean,boolean)",10,6,18
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.scanElementValue(int)",2,3,7
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo.AnnotationMethodInfo(MethodInfo,Object)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo.createAnnotationMethod(byte[],int[],int)",5,10,15
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo.getDefaultValue()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo.toStringContent(StringBuffer)",1,5,5
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations.AnnotationMethodInfoWithAnnotations(MethodInfo,Object,AnnotationInfo[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations.initialize()",1,3,4
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations.reset()",1,3,4
"org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations.toStringContent(StringBuffer)",1,2,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.ClassFileReader(byte[],char[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.ClassFileReader(byte[],char[],boolean)",6,30,58
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.accessFlags()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeAnnotations(int,boolean)",3,4,8
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.decodeTypeAnnotations(int,boolean)",1,3,4
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.enrichWithExternalAnnotationsFor(ITypeAnnotationWalker,Object,LookupEnvironment)",5,8,9
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getConstantClassNameAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getConstantPoolOffsets()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getEnclosingMethod()",2,2,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getEnclosingTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getFields()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getGenericSignature()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getInnerSourceName()",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getMemberTypes()",4,7,11
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getMethods()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getMissingTypeNames()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getModifiers()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getSourceName()",2,4,5
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getSuperclassName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getVersion()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasAnnotationProvider()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasNonSyntheticFieldChanges(FieldInfo[],FieldInfo[])",11,4,14
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasNonSyntheticMethodChanges(MethodInfo[],MethodInfo[])",11,8,18
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralAnnotationChanges(IBinaryAnnotation[],IBinaryAnnotation[])",14,6,18
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralChanges(byte[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralChanges(byte[],boolean,boolean)",40,24,59
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralFieldChanges(FieldInfo,FieldInfo)",20,11,20
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralMethodChanges(MethodInfo,MethodInfo)",15,4,17
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.initialize()",1,7,8
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isAnonymous()",2,1,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isLocal()",3,1,4
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isMember()",3,1,4
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.isNestedType()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.printTypeModifiers(int)",1,7,7
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(File)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(File,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(InputStream,String)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(InputStream,String,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(String)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(String,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(ZipFile,String)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(ZipFile,String,boolean)",2,2,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.setExternalAnnotationProvider(String,String,ZipFile,ZipFileProducer)",4,5,7
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.sourceFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.ClassFileStruct(byte[],int[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.doubleAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.floatAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i4At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.i8At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u1At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u2At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u4At(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.utf8At(int,int)",1,2,5
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.ClassFormatException(RuntimeException,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.ClassFormatException(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.ClassFormatException(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getBufferPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getErrorCode()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getException()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.printStackTrace()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.printStackTrace(PrintStream)",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.printStackTrace(PrintWriter)",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.ElementValuePairInfo(char[],Object)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.equals(Object)",8,2,8
"org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.getName()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.getValue()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.hashCode()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.BasicAnnotationWalker(char[],int,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.getAnnotationsAtCursor(int)",5,3,6
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.toNextArrayDimension()",3,2,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.toNextNestedType()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.toReceiver()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.toSupertype(short,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.toTypeArgument(int)",3,3,5
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.toTypeBound(short)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.toTypeParameter(boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.toTypeParameterBounds(boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.toWildcardBound()",3,2,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.BasicAnnotationWalker.wrapperWithStart(int)",1,1,2
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.DispatchingAnnotationWalker(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.getAnnotationsAtCursor(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toField()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toMethodParameter(short)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toMethodReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toNextArrayDimension()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toNextNestedType()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toReceiver()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toSupertype(short,char[])",3,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toThrows(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toTypeArgument(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toTypeBound(short)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toTypeParameter(boolean,int)",2,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toTypeParameterBounds(boolean,int)",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.DispatchingAnnotationWalker.toWildcardBound()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.ExternalAnnotationProvider(InputStream,String)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.FieldAnnotationWalker.FieldAnnotationWalker(char[],int,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.FieldAnnotationWalker.toField()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.FieldAnnotationWalker.toMethodParameter(short)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.FieldAnnotationWalker.toMethodReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.FieldAnnotationWalker.toThrows(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.MethodAnnotationWalker.MethodAnnotationWalker(char[],int,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.MethodAnnotationWalker.getParameterCount()",1,2,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.MethodAnnotationWalker.toField()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.MethodAnnotationWalker.toMethodParameter(short)",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.MethodAnnotationWalker.toMethodReturn()",2,1,2
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.MethodAnnotationWalker.toThrows(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.MethodAnnotationWalker.toTypeParameter(boolean,int)",3,2,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.MethodAnnotationWalker.toTypeParameterBounds(boolean,int)",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.MethodAnnotationWalker.typeEnd(int)",1,1,4
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.SingleMarkerAnnotation.getBinaryTypeName(char[][])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.SingleMarkerAnnotation.getElementValuePairs()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.SuperTypesAnnotationWalker.SuperTypesAnnotationWalker(char[],LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.SuperTypesAnnotationWalker.toField()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.SuperTypesAnnotationWalker.toMethodParameter(short)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.SuperTypesAnnotationWalker.toMethodReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.SuperTypesAnnotationWalker.toThrows(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.TypeParametersAnnotationWalker.TypeParametersAnnotationWalker(char[],int,int,int[],LookupEnvironment)",4,3,12
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.TypeParametersAnnotationWalker.getAnnotationsAtCursor(int)",4,2,5
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.TypeParametersAnnotationWalker.toField()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.TypeParametersAnnotationWalker.toMethodParameter(short)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.TypeParametersAnnotationWalker.toMethodReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.TypeParametersAnnotationWalker.toThrows(int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.TypeParametersAnnotationWalker.toTypeBound(short)",3,2,4
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.TypeParametersAnnotationWalker.toTypeParameter(boolean,int)",3,1,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.TypeParametersAnnotationWalker.toTypeParameterBounds(boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.assertClassHeader(String,String)",3,2,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.extractSignature(String)",2,3,4
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.forField(char[],char[],LookupEnvironment)",3,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.forMethod(char[],char[],LookupEnvironment)",3,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.forTypeHeader(LookupEnvironment)",2,1,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.initAnnotations(LookupEnvironment)",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.initialize(InputStream)",11,14,25
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.trimTail(String)",2,3,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.FieldInfo(byte[],int[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.compareTo(Object)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.createField(byte[],int[],int)",4,13,16
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.decodeAnnotations(int,boolean)",3,4,7
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.decodeTypeAnnotations(int,boolean)",2,1,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.equals(Object)",2,1,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getConstant()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getGenericSignature()",2,3,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getModifiers()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getName()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getTypeName()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getWrappedConstantValue()",2,4,12
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.hasConstant()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readConstantAttribute()",3,6,16
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readModifierRelatedAttributes()",2,4,7
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.throwFormatException()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.toStringContent(StringBuffer)",1,1,9
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation.FieldInfoWithAnnotation(FieldInfo,AnnotationInfo[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation.initialize()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation.reset()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithTypeAnnotation.FieldInfoWithTypeAnnotation(FieldInfo,AnnotationInfo[],TypeAnnotationInfo[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithTypeAnnotation.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithTypeAnnotation.initialize()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithTypeAnnotation.reset()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithTypeAnnotation.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.InnerClassInfo(byte[],int[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getEnclosingTypeName()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getModifiers()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getName()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getSourceName()",1,3,3
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.MethodInfo(byte[],int[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.compareTo(Object)",2,1,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.createMethod(byte[],int[],int)",5,21,27
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeAnnotations(int,boolean,int,MethodInfo)",1,1,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeCodeAttribute(int)",1,3,5
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeLocalVariableAttribute(int,int)",4,5,6
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeMethodAnnotations(int,boolean,MethodInfo)",5,2,9
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeMethodParameters(int,MethodInfo)",1,4,4
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeParamAnnotations(int,boolean,MethodInfo)",1,4,6
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.decodeTypeAnnotations(int,boolean,MethodInfo)",2,1,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.equals(Object)",2,2,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getAnnotatedParametersCount()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getArgumentNames()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getDefaultValue()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getExceptionTypeNames()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getGenericSignature()",2,3,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getMethodDescriptor()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getModifiers()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getParameterAnnotations(int,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getSelector()",1,2,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.isClinit()",1,1,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.isConstructor()",1,1,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.readCodeAttribute()",4,4,5
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.readExceptionAttributes()",1,5,6
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.readModifierRelatedAttributes()",2,4,11
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.toString(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.toStringContent(StringBuffer)",1,2,10
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations.MethodInfoWithAnnotations(MethodInfo,AnnotationInfo[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations.initialize()",1,3,4
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations.reset()",1,3,4
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations.toStringContent(StringBuffer)",1,2,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations.MethodInfoWithParameterAnnotations(MethodInfo,AnnotationInfo[],AnnotationInfo[][])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations.getAnnotatedParametersCount()",1,1,2
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations.getParameterAnnotations(int,char[])",1,4,5
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations.initialize()",1,3,5
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations.reset()",1,3,5
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations.toStringContent(StringBuffer)",1,3,5
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithTypeAnnotations.MethodInfoWithTypeAnnotations(MethodInfo,AnnotationInfo[],AnnotationInfo[][],TypeAnnotationInfo[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithTypeAnnotations.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithTypeAnnotations.initialize()",1,2,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithTypeAnnotations.reset()",1,2,3
"org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithTypeAnnotations.toStringContent(StringBuffer)",1,2,3
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.NonNullDefaultAwareTypeAnnotationWalker(IBinaryTypeAnnotation[],int,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.NonNullDefaultAwareTypeAnnotationWalker(IBinaryTypeAnnotation[],long,int,int,IBinaryAnnotation,boolean,boolean,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.NonNullDefaultAwareTypeAnnotationWalker(int,IBinaryAnnotation,boolean,boolean,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.NonNullDefaultAwareTypeAnnotationWalker(int,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.getAnnotationsAtCursor(int)",4,4,9
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.getNonNullAnnotation(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.restrict(long,int)",3,1,8
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.toMethodParameter(short)",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.toMethodReturn()",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.toNextDetail(int)",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.toSupertype(short,char[])",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.toTypeArgument(int)",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.toTypeBound(short)",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.toTypeParameter(boolean,int)",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.toTypeParameterBounds(boolean,int)",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker.toWildcardBound()",2,2,2
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.TypeAnnotationInfo(byte[],int[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.TypeAnnotationInfo(byte[],int[],int,boolean,boolean)",2,4,10
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.equals(Object)",8,1,8
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.getAnnotation()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.getBoundIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.getMethodFormalParameterIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.getSupertypeIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.getTargetType()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.getThrowsTypeIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.getTypeParameterIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.getTypePath()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.hashCode()",1,1,3
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.toString()",2,5,8
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.TypeAnnotationWalker(IBinaryTypeAnnotation[])",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.TypeAnnotationWalker(IBinaryTypeAnnotation[],long)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.TypeAnnotationWalker(IBinaryTypeAnnotation[],long,int)",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.getAnnotationsAtCursor(int)",5,3,6
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.restrict(long,int)",3,1,6
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toField()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toMethodParameter(short)",2,3,5
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toMethodReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toNextArrayDimension()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toNextDetail(int)",2,2,5
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toNextNestedType()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toReceiver()",1,1,1
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toSupertype(short,char[])",2,3,5
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toTarget(int)",2,2,4
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toThrows(int)",2,3,5
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toTypeArgument(int)",2,2,6
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toTypeBound(short)",2,2,4
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toTypeParameter(boolean,int)",2,3,6
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toTypeParameterBounds(boolean,int)",2,3,6
"org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationWalker.toWildcardBound()",2,2,5
"org.eclipse.jdt.internal.compiler.codegen.AnnotationContext.AnnotationContext(Annotation,Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.AnnotationContext.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.BranchLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.BranchLabel(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.addForwardReference(int)",7,8,10
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.becomeDelegateFor(BranchLabel)",6,1,7
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.branch()",2,3,3
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.branchWide()",2,3,3
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.forwardReferenceCount()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.forwardReferences()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.initialize(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.isCaseLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.isStandardLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.place()",1,7,16
"org.eclipse.jdt.internal.compiler.codegen.BranchLabel.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CachedIndexEntry.CachedIndexEntry(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.CaseLabel(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.branch()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.branchWide()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.isCaseLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.isStandardLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.place()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CaseLabel.placeInstruction()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.CharArrayCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.CharArrayCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.containsKey(char[])",3,2,4
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.get(char[])",3,2,4
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.put(char[],int)",3,3,5
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.putIfAbsent(char[],int)",3,3,5
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.remove(char[])",3,2,4
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.returnKeyFor(int)",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CharArrayCache.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.CodeStream(ClassFile)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aaload()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aastore()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aconst_null()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addDefinitelyAssignedVariables(Scope,int)",2,5,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addLabel(BranchLabel)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addVariable(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.addVisibleLocalVariable(LocalVariableBinding)",2,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload(int)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_0()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_1()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_2()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.aload_3()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.anewarray(TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.areturn()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.arrayAt(int)",2,2,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.arrayAtPut(int,boolean)",2,10,17
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.arraylength()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore(int)",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_0()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.astore_3()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.athrow()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.baload()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.bastore()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.bipush(byte)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.caload()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.castore()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.checkcast(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.checkcast(TypeReference,TypeBinding,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.checkcast(int)",2,3,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.d2f()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.d2i()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.d2l()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dadd()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.daload()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dastore()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dcmpg()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dcmpl()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dconst_0()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dconst_1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ddiv()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.decrStackSize(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload(int)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_0()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_1()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_2()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dload_3()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dmul()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dneg()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.drem()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dreturn()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore(int)",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_0()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dstore_3()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dsub()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup2_x1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup2_x2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup_x1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.dup_x2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.exitUserScope(BlockScope)",4,3,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.exitUserScope(BlockScope,LocalVariableBinding)",4,3,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.f2d()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.f2i()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.f2l()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fadd()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.faload()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fastore()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fcmpg()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fcmpl()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fconst_0()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fconst_1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fconst_2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fdiv()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fieldAccess(byte,FieldBinding,TypeBinding)",2,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fieldAccess(byte,int,char[],char[],char[])",2,3,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.findDirectSuperTypeTowards(SyntheticMethodBinding,MethodBinding)",6,4,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload(int)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_0()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_1()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_2()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fload_3()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fmul()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fneg()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.frem()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.freturn()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore(int)",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_0()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fstore_3()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.fsub()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateBoxingConversion(int)",2,10,17
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateClassLiteralAccessForType(TypeBinding,FieldBinding)",2,7,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateCodeAttributeForProblemMethod(String)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateConstant(Constant,int)",2,4,12
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateEmulatedReadAccessForField(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateEmulatedWriteAccessForField(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateEmulationForConstructor(Scope,MethodBinding)",1,7,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateEmulationForField(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateEmulationForMethod(Scope,MethodBinding)",1,7,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateImplicitConversion(int)",2,4,28
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(byte)",3,3,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(char)",4,4,12
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(double)",3,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(float)",4,5,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(int)",4,4,13
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(long)",3,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(short)",3,3,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateOuterAccess(Object[],ASTNode,Binding,Scope)",5,9,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateReturnBytecode(Expression)",4,4,8
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateStringConcatenationAppend(BlockScope,Expression,Expression)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForArrayClone(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForArrayConstructor(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding)",4,11,16
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForDeserializeLambda(SyntheticMethodBinding,SyntheticMethodBinding[])",1,14,19
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForEnumInitializationMethod(SyntheticMethodBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForEnumValueOf(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForEnumValues(SyntheticMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForFactoryMethod(SyntheticMethodBinding)",2,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding)",2,4,8
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForFieldWriteAccess(SyntheticMethodBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForMethodAccess(SyntheticMethodBinding)",3,14,21
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForSwitchTable(SyntheticMethodBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticEnclosingInstanceValues(BlockScope,ReferenceBinding,Expression,ASTNode)",2,18,18
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticOuterArgumentValues(BlockScope,ReferenceBinding,ASTNode)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateUnboxingConversion(int)",2,2,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateWideRevertedConditionalBranch(byte,BranchLabel)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getBaseTypeValue(int)",2,2,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getConstantPoolDeclaringClass(Scope,FieldBinding,TypeBinding,boolean)",3,11,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getConstantPoolDeclaringClass(Scope,MethodBinding,TypeBinding,boolean)",1,12,12
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getContents()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.getTYPE(int)",2,2,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.goto_(BranchLabel)",3,6,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.goto_w(BranchLabel)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2b()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2c()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2d()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2f()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2l()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.i2s()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iadd()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iaload()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iand()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iastore()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_0()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_3()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_4()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_5()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iconst_m1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.idiv()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_acmpeq(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_acmpne(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpeq(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpge(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpgt(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmple(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmplt(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.if_icmpne(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifeq(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifge(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifgt(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifle(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iflt(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifne(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifnonnull(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ifnull(BranchLabel)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iinc(int,int)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload(int)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_0()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_1()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_2()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iload_3()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.imul()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.indexOfSameLineEntrySincePC(int,int)",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ineg()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.init(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.initializeMaxLocals(MethodBinding)",3,5,11
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.inlineForwardReferencesFromLabelsTargeting(BranchLabel,int)",7,3,7
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.insertionIndex(int[],int,int)",5,1,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.instance_of(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.instance_of(TypeReference,TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invoke(byte,MethodBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invoke(byte,MethodBinding,TypeBinding,TypeReference[])",5,8,20
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invoke(byte,int,int,char[],char[],char[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invoke18(byte,int,int,char[],boolean,char[],char[])",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeAccessibleObjectSetAccessible()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeArrayNewInstance()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeAutoCloseableClose(TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeClassForName()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeClassGetDeclaredConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeClassGetDeclaredField()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeClassGetDeclaredMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeDynamic(int,int,int,char[],char[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeDynamic(int,int,int,char[],char[],boolean,TypeReference,TypeReference[])",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeEnumOrdinal(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeIterableIterator(TypeBinding)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangAssertionErrorConstructor(int)",2,2,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangAssertionErrorDefaultConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangClassDesiredAssertionStatus()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangEnumValues(TypeBinding,ArrayBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangEnumvalueOf(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangErrorConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangReflectConstructorNewInstance()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangReflectFieldGetter(int)",2,2,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangReflectFieldSetter(int)",2,2,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaLangReflectMethodInvoke()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaUtilIteratorHasNext()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeJavaUtilIteratorNext()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeNoClassDefFoundErrorStringConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeObjectEquals()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeObjectGetClass()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationAppendForType(int)",2,2,17
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationDefaultConstructor()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationStringConstructor()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringConcatenationToString()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringEquals()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringHashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringIntern()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeStringValueOf(int)",2,2,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeSystemArraycopy()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeThrowableAddSuppressed()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.invokeThrowableGetMessage()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ior()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.irem()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ireturn()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.isDefinitelyAssigned(Scope,int,LocalVariableBinding)",6,1,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ishl()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ishr()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore(int)",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_0()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.istore_3()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.isub()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.iushr()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ixor()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.jsr(BranchLabel)",2,3,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.jsr_w(BranchLabel)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.l2d()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.l2f()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.l2i()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ladd()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.laload()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.land()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lastore()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lcmp()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lconst_0()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lconst_1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(String)",1,7,15
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(TypeBinding)",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(float)",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc(int)",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc2_w(double)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldc2_w(long)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldcForIndex(int)",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ldiv()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload(int)",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_0()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_1()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_2()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lload_3()",1,2,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lmul()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lneg()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.load(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.load(TypeBinding,int)",7,7,31
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.loadInt(int)",1,9,9
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lookupswitch(CaseLabel,int[],int[],CaseLabel[])",1,6,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lor()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lrem()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lreturn()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lshl()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lshr()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore(int)",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_0()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_1()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_2()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lstore_3()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lsub()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lushr()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.lxor()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.monitorenter()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.monitorexit()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.multianewarray(TypeReference,TypeBinding,int,ArrayAllocationExpression)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(ArrayBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(TypeReference,ArrayAllocationExpression,ArrayBinding)",2,2,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newJavaLangAssertionError()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newJavaLangError()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newNoClassDefFoundError()",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newStringContatenation()",1,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newWrapperFor(int)",2,3,12
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.new_(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.new_(TypeReference,TypeBinding)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.newarray(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.nop()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.optimizeBranch(int,BranchLabel)",1,6,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.pop()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.pop2()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.pushExceptionOnStack(TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.pushOnStack(TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.record(LocalVariableBinding)",2,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.recordExpressionType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.recordPositionsFrom(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.recordPositionsFrom(int,int,boolean)",12,42,78
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.registerExceptionHandler(ExceptionLabel)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.removeNotDefinitelyAssignedVariables(Scope,int)",2,5,6
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.removeUnusedPcToSourceMapEntries()",1,1,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.removeVariable(LocalVariableBinding)",4,2,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.reset(AbstractMethodDeclaration,ClassFile)",1,5,8
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.reset(ClassFile)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.reset(LambdaExpression,ClassFile)",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.resetForCodeGenUnusedLocals()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.resetForProblemClinit(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.resetInWideMode()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.resizeByteArray()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.ret(int)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.return_()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.saload()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sastore()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sendOperator(int,int)",6,6,37
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sipush(int)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.sort(int[],int,int,int[])",1,6,10
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.store(LocalVariableBinding,boolean)",7,12,36
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.swap()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.swap(int[],int,int,int[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.tableswitch(CaseLabel,int,int,int[],int[],CaseLabel[])",4,7,8
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.throwAnyException(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writePosition(BranchLabel)",2,3,4
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writePosition(BranchLabel,int)",2,4,5
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedShort(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedShort(int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedWord(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeSignedWord(int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeUnsignedShort(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.CodeStream.writeWidePosition(BranchLabel)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ConstantPool(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.dumpBytes()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.initialize(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(String)",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(byte[],char[])",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(char[])",1,10,11
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(char[],byte[])",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(double)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(float)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(int)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndex(long)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForField(char[],char[],char[])",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForInvokeDynamic(int,char[],char[])",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForLdc(char[])",4,16,17
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethod(TypeBinding,char[],char[],boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethod(char[],char[],char[],boolean)",1,5,6
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethodHandle(MethodBinding)",1,5,7
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethodHandle(int,TypeBinding,char[],char[],boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForMethodType(char[])",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForNameAndType(char[],char[])",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForType(TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.literalIndexForType(char[])",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.putInCacheIfAbsent(char[],char[],char[],int)",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.putInNameAndTypeCacheIfAbsent(char[],char[],int)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.reset()",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.resetForAttributeName(char[],int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.resetForClinit(int,int)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.resizePoolContents(int)",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.writeU1(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ConstantPool.writeU2(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.DoubleCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.DoubleCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.containsKey(double)",8,4,10
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.put(double,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.putIfAbsent(double,int)",8,5,11
"org.eclipse.jdt.internal.compiler.codegen.DoubleCache.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.ExceptionLabel(CodeStream,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.ExceptionLabel(CodeStream,TypeBinding,TypeReference,Annotation[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.getCount()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.place()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.placeEnd()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.placeStart()",2,2,4
"org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.toString()",1,6,6
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.FloatCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.FloatCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.containsKey(float)",8,4,10
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.put(float,int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.putIfAbsent(float,int)",8,5,11
"org.eclipse.jdt.internal.compiler.codegen.FloatCache.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.IntegerCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.IntegerCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.containsKey(int)",3,1,6
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.hash(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.put(int,int)",3,2,7
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.putIfAbsent(int,int)",3,2,7
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.rehash()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.IntegerCache.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.Label.Label()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.Label.Label(CodeStream)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.LongCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.LongCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.LongCache.containsKey(long)",3,1,6
"org.eclipse.jdt.internal.compiler.codegen.LongCache.hash(long)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.put(long,int)",3,2,7
"org.eclipse.jdt.internal.compiler.codegen.LongCache.putIfAbsent(long,int)",3,2,7
"org.eclipse.jdt.internal.compiler.codegen.LongCache.rehash()",1,3,5
"org.eclipse.jdt.internal.compiler.codegen.LongCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.LongCache.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel.MultiCatchExceptionLabel(CodeStream,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel.getCount()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel.initialize(UnionTypeReference,Annotation[])",1,1,3
"org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel.place()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel.placeEnd()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel.placeStart()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.ObjectCache()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.ObjectCache(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.containsKey(Object)",3,1,4
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.get(Object)",3,1,4
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.hashCode(Object)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.put(Object,int)",3,2,5
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.size()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.ObjectCache.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.StackMapFrame(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addLocal(int,VerificationTypeInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(TypeBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(VerificationTypeInfo)",2,3,4
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.duplicate()",1,6,6
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.equals(VerificationTypeInfo,VerificationTypeInfo)",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.getFrameType(StackMapFrame)",6,4,9
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.getIndexOfDifferentLocals(int)",4,1,4
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.getNumberOfLocals()",3,4,6
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.getOffsetDelta(StackMapFrame)",2,1,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.numberOfDifferentLocals(StackMapFrame)",27,23,38
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.print(VerificationTypeInfo[],int)",4,5,5
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.printFrame(StringBuffer,StackMapFrame)",1,1,2
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.putLocal(int,VerificationTypeInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.replaceWithElementType()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.ExceptionMarker.ExceptionMarker(int,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.ExceptionMarker.compareTo(Object)",2,1,2
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.ExceptionMarker.equals(Object)",2,3,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.ExceptionMarker.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.ExceptionMarker.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.StackDepthMarker.StackDepthMarker(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.StackDepthMarker.StackDepthMarker(int,int,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.StackDepthMarker.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.StackMapFrameCodeStream(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.StackMarker.StackMarker(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.StackMarker.setInfos(VerificationTypeInfo[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.StackMarker.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.addDefinitelyAssignedVariables(Scope,int)",7,9,11
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.addExceptionMarker(int,TypeBinding)",2,3,6
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.addFramePosition(int)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.addStackDepthMarker(int,int,TypeBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.addStackMarker(int,int)",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.addVariable(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.areturn()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.athrow()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.decrStackSize(int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.dreturn()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.freturn()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.generateClassLiteralAccessForType(TypeBinding,FieldBinding)",2,7,7
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.generateOuterAccess(Object[],ASTNode,Binding,Scope)",2,2,2
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.getExceptionMarkers()",2,2,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.getFramePositions()",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.getStackDepthMarkers()",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.getStackMarkers()",3,1,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.goto_(BranchLabel)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.goto_w(BranchLabel)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.hasFramePositions()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.init(ClassFile)",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.initializeMaxLocals(MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.ireturn()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.lreturn()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.optimizeBranch(int,BranchLabel)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.popStateIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.pushExceptionOnStack(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.pushOnStack(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.pushStateIndex(int)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.recordExpressionType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.removeFramePosition(int)",1,3,3
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.removeNotDefinitelyAssignedVariables(Scope,int)",7,6,8
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.reset(ClassFile)",1,5,5
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.resetForCodeGenUnusedLocals()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.resetInWideMode()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.resetSecretLocals()",1,4,4
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.return_()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.writePosition(BranchLabel)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.writePosition(BranchLabel,int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.writeSignedWord(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.writeWidePosition(BranchLabel)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.TypeAnnotationCodeStream(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.addAnnotationContext(TypeReference,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.addAnnotationContext(TypeReference,int,int,ArrayAllocationExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.addAnnotationContext(TypeReference,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.checkcast(TypeReference,TypeBinding,int)",1,7,7
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.init(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.instance_of(TypeReference,TypeBinding)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.invoke(byte,MethodBinding,TypeBinding,TypeReference[])",1,4,5
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.invokeDynamic(int,int,int,char[],char[],boolean,TypeReference,TypeReference[])",1,6,8
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.multianewarray(TypeReference,TypeBinding,int,ArrayAllocationExpression)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.newArray(TypeReference,ArrayAllocationExpression,ArrayBinding)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.new_(TypeReference,TypeBinding)",1,2,3
"org.eclipse.jdt.internal.compiler.codegen.TypeAnnotationCodeStream.reset(ClassFile)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.VerificationTypeInfo()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.VerificationTypeInfo(TypeBinding)",2,2,7
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.VerificationTypeInfo(int,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.VerificationTypeInfo(int,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.VerificationTypeInfo(int,int,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.duplicate()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.equals(Object)",2,3,3
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.id()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.replaceWithElementType()",2,3,13
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.setBinding(TypeBinding)",2,2,7
"org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.toString()",2,2,10
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.AccessRestriction(AccessRule,byte,String)",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.getProblemId()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRestriction.ignoreIfBetter()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRule.AccessRule(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRule.AccessRule(char[],int,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.env.AccessRule.equals(Object)",3,1,3
"org.eclipse.jdt.internal.compiler.env.AccessRule.getProblemId()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRule.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRule.ignoreIfBetter()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRule.toString()",2,3,5
"org.eclipse.jdt.internal.compiler.env.AccessRuleSet.AccessRuleSet(AccessRule[],byte,String)",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRuleSet.equals(Object)",7,4,10
"org.eclipse.jdt.internal.compiler.env.AccessRuleSet.getAccessRules()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRuleSet.getViolatedRestriction(char[])",5,4,5
"org.eclipse.jdt.internal.compiler.env.AccessRuleSet.hashCode()",1,2,2
"org.eclipse.jdt.internal.compiler.env.AccessRuleSet.hashCode(AccessRule[])",2,3,4
"org.eclipse.jdt.internal.compiler.env.AccessRuleSet.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.env.AccessRuleSet.toString(boolean)",1,6,6
"org.eclipse.jdt.internal.compiler.env.ClassSignature.ClassSignature(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.env.ClassSignature.equals(Object)",4,1,4
"org.eclipse.jdt.internal.compiler.env.ClassSignature.getTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.env.ClassSignature.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.env.ClassSignature.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.env.EnumConstantSignature.EnumConstantSignature(char[],char[])",1,1,1
"org.eclipse.jdt.internal.compiler.env.EnumConstantSignature.equals(Object)",5,1,5
"org.eclipse.jdt.internal.compiler.env.EnumConstantSignature.getEnumConstantName()",1,1,1
"org.eclipse.jdt.internal.compiler.env.EnumConstantSignature.getTypeName()",1,1,1
"org.eclipse.jdt.internal.compiler.env.EnumConstantSignature.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.env.EnumConstantSignature.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.NameEnvironmentAnswer(IBinaryType,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.NameEnvironmentAnswer(ICompilationUnit,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.NameEnvironmentAnswer(ISourceType[],AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getAccessRestriction()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getBinaryType()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getSourceTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.ignoreIfBetter()",1,2,2
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isBetter(NameEnvironmentAnswer)",3,2,4
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.isSourceType()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.ConditionalFlowInfo(FlowInfo,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.addInitializationsFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.addNullInfoFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.addPotentialInitializationsFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.asNegatedCondition()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.copy()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.hasNullInfoFor(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.initsWhenFalse()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.initsWhenTrue()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyAssigned(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyAssigned(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNonNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isDefinitelyUnknown(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isPotentiallyAssigned(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isPotentiallyAssigned(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isPotentiallyNonNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isPotentiallyNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isPotentiallyUnknown(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isProtectedNonNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.isProtectedNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsComparedEqualToNonNull(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsComparedEqualToNull(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyAssigned(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyAssigned(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNonNull(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyNull(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markAsDefinitelyUnknown(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markPotentiallyNonNullBit(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markPotentiallyNullBit(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.markPotentiallyUnknownBit(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.mergedWith(UnconditionalFlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.nullInfoLessUnconditionalCopy()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.resetAssignmentInfo(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.resetNullInfo(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.safeInitsWhenTrue()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.setReachMode(int)",1,1,2
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.unconditionalCopy()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.unconditionalFieldLessCopy()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.unconditionalInits()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo.unconditionalInitsWithoutSideEffect()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.ExceptionHandlingFlowContext(FlowContext,ASTNode,ReferenceBinding[],FlowContext,BlockScope,UnconditionalFlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.ExceptionHandlingFlowContext(FlowContext,ASTNode,ReferenceBinding[],int[],Argument[],FlowContext,BlockScope,UnconditionalFlowInfo)",1,5,9
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.ExceptionHandlingFlowContext(FlowContext,TryStatement,ReferenceBinding[],int[],FlowContext,BlockScope,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.complainIfUnusedExceptionHandlers(AbstractMethodDeclaration)",6,8,12
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.complainIfUnusedExceptionHandlers(BlockScope,TryStatement)",1,4,4
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.getExceptionType(int)",5,3,5
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.getInitializationContext()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.individualToString()",1,4,5
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.initsOnException(int)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.initsOnReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.mergeUnhandledException(TypeBinding)",2,6,8
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.recordHandlingException(ReferenceBinding,UnconditionalFlowInfo,TypeBinding,TypeBinding,ASTNode,boolean)",1,3,8
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.recordReturnFrom(UnconditionalFlowInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.subroutine()",3,2,3
"org.eclipse.jdt.internal.compiler.flow.ExceptionInferenceFlowContext.ExceptionInferenceFlowContext(FlowContext,ASTNode,ReferenceBinding[],FlowContext,BlockScope,UnconditionalFlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.FinallyFlowContext(FlowContext,ASTNode,ExceptionHandlingFlowContext)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.complainOnDeferredChecks(FlowInfo,BlockScope)",18,30,45
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.internalRecordNullityMismatch(Expression,TypeBinding,FlowInfo,int,TypeBinding,int)",2,2,4
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.isSubRoutine()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.recordFinalAssignment(VariableBinding,Reference)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.recordNullReference(LocalVariableBinding,ASTNode,int,FlowInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.recordUnboxing(Scope,Expression,int,FlowInfo)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.recordUsingNullReference(Scope,LocalVariableBinding,ASTNode,int,FlowInfo)",29,35,57
"org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.removeFinalAssignmentIfAny(Reference)",3,1,3
"org.eclipse.jdt.internal.compiler.flow.FlowContext.FlowContext(FlowContext,ASTNode)",1,1,3
"org.eclipse.jdt.internal.compiler.flow.FlowContext.breakLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.checkExceptionHandlers(TypeBinding,ASTNode,FlowInfo,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.checkExceptionHandlers(TypeBinding,ASTNode,FlowInfo,BlockScope,boolean)",12,24,32
"org.eclipse.jdt.internal.compiler.flow.FlowContext.checkExceptionHandlers(TypeBinding[],ASTNode,FlowInfo,BlockScope)",13,26,40
"org.eclipse.jdt.internal.compiler.flow.FlowContext.checkUnboxing(Scope,Expression,FlowInfo)",4,4,5
"org.eclipse.jdt.internal.compiler.flow.FlowContext.continueLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.expireNullCheckedFieldInfo()",1,1,3
"org.eclipse.jdt.internal.compiler.flow.FlowContext.extendTimeToLiveForNullCheckedField(int)",1,1,2
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getInitializationContext()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getInitsForFinalBlankInitializationCheck(TypeBinding,FlowInfo)",4,4,6
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getLocalParent()",2,1,4
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForBreakLabel(char[])",4,3,6
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForContinueLabel(char[])",5,6,9
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForDefaultBreak()",4,3,6
"org.eclipse.jdt.internal.compiler.flow.FlowContext.getTargetContextForDefaultContinue()",4,2,5
"org.eclipse.jdt.internal.compiler.flow.FlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.initsOnBreak()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.initsOnReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.internalRecordNullityMismatch(Expression,TypeBinding,FlowInfo,int,TypeBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isBreakable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isContinuable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isNonReturningContext()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isNullcheckedFieldAccess(Reference)",5,2,5
"org.eclipse.jdt.internal.compiler.flow.FlowContext.isSubRoutine()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.labelName()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.markFinallyNullStatus(LocalVariableBinding,int)",4,2,4
"org.eclipse.jdt.internal.compiler.flow.FlowContext.mergeFinallyNullInfo(FlowInfo)",4,2,4
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordAbruptExit()",1,3,4
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordBreakFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordBreakTo(FlowContext)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordContinueFrom(FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordExitAgainstResource(BlockScope,FlowInfo,FakedTrackingVariable,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordFinalAssignment(VariableBinding,Reference)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordNullCheckedFieldReference(Reference,int)",4,2,5
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordNullReference(LocalVariableBinding,ASTNode,int,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordNullityMismatch(BlockScope,Expression,TypeBinding,TypeBinding,FlowInfo,int,NullAnnotationMatching)",5,4,7
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordProvidedExpectedTypes(TypeBinding,TypeBinding,int)",1,4,5
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordReturnFrom(UnconditionalFlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordSettingFinal(VariableBinding,Reference,FlowInfo)",4,3,4
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordUnboxing(Scope,Expression,int,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.recordUsingNullReference(Scope,LocalVariableBinding,ASTNode,int,FlowInfo)",17,19,32
"org.eclipse.jdt.internal.compiler.flow.FlowContext.removeFinalAssignmentIfAny(Reference)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.subroutine()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowContext.toString()",1,4,6
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.asNegatedCondition()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.canOnlyBeNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.cannotBeDefinitelyNullOrNonNull(LocalVariableBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.cannotBeNull(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.conditional(FlowInfo,FlowInfo)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.initial(int)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.markNullStatus(LocalVariableBinding,int)",2,6,9
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.mergeNullStatus(int,int)",6,3,12
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.mergedOptimizedBranches(FlowInfo,boolean,FlowInfo,boolean,boolean)",1,5,7
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.mergedOptimizedBranchesIfElse(FlowInfo,boolean,FlowInfo,boolean,boolean,FlowInfo,IfStatement,boolean)",1,13,25
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.nullStatus(LocalVariableBinding)",5,1,8
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.reachMode()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.tagBitsToNullStatus(long)",3,1,3
"org.eclipse.jdt.internal.compiler.flow.FlowInfo.toString()",2,1,2
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.InitializationFlowContext(FlowContext,ASTNode,FlowInfo,FlowContext,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.checkInitializerExceptions(BlockScope,FlowContext,FlowInfo)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.getInitializationContext()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.individualToString()",1,2,2
"org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext.recordHandlingException(ReferenceBinding,UnconditionalFlowInfo,TypeBinding,TypeBinding,ASTNode,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.InsideSubRoutineFlowContext(FlowContext,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.initsOnReturn()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.isNonReturningContext()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.recordReturnFrom(UnconditionalFlowInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext.subroutine()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.LabelFlowContext(FlowContext,ASTNode,char[],BranchLabel,BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.checkLabelValidity(BlockScope)",1,4,4
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LabelFlowContext.labelName()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.EscapingExceptionCatchSite.EscapingExceptionCatchSite(ExceptionHandlingFlowContext,ReferenceBinding,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.EscapingExceptionCatchSite.simulateThrowAfterLoopBack(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.LoopingFlowContext(FlowContext,FlowInfo,ASTNode,BranchLabel,BranchLabel,Scope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.complainOnDeferredFinalChecks(BlockScope,FlowInfo)",3,8,9
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.complainOnDeferredNullChecks(BlockScope,FlowInfo)",38,51,84
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.continueLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.hasEscapingExceptions()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.internalRecordNullityMismatch(Expression,TypeBinding,FlowInfo,int,TypeBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.isContinuable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.isContinuedTo()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordBreakTo(FlowContext)",1,4,4
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordCatchContextOfEscapingException(ExceptionHandlingFlowContext,ReferenceBinding,FlowInfo)",1,1,2
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordContinueFrom(FlowContext,FlowInfo)",1,6,8
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordExitAgainstResource(BlockScope,FlowInfo,FakedTrackingVariable,ASTNode)",4,3,4
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordFinalAssignment(VariableBinding,Reference)",4,3,6
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordNullReference(LocalVariableBinding,ASTNode,int,FlowInfo)",1,4,4
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordUnboxing(Scope,Expression,int,FlowInfo)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordUsingNullReference(Scope,LocalVariableBinding,ASTNode,int,FlowInfo)",19,28,42
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.removeFinalAssignmentIfAny(Reference)",3,1,3
"org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.simulateThrowAfterLoopBack(FlowInfo)",1,3,3
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.SwitchFlowContext(FlowContext,ASTNode,BranchLabel,boolean)",1,1,3
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.breakLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.individualToString()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.isBreakable()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext.recordBreakFrom(FlowInfo)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.TryFlowContext.TryFlowContext(FlowContext,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.TryFlowContext.markFinallyNullStatus(LocalVariableBinding,int)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.TryFlowContext.mergeFinallyNullInfo(FlowInfo)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.AssertionFailedException.AssertionFailedException(String)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addInfoFrom(FlowInfo,boolean)",15,9,41
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addInitializationsFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addNullInfoFrom(FlowInfo)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addPotentialInitializationsFrom(FlowInfo)",3,6,11
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addPotentialNullInfoFrom(UnconditionalFlowInfo)",10,5,29
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.canOnlyBeNull(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.cannotBeDefinitelyNullOrNonNull(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.cannotBeNull(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.copy()",2,4,7
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.createExtraSpace(int)",1,2,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.discardInitializationInfo()",2,1,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.discardNonFieldInitializations()",3,1,8
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.fakeInitializedFlowInfo(int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.hasNullInfoFor(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.initsWhenFalse()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.initsWhenTrue()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(FieldBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(LocalVariableBinding)",2,1,3
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(int)",4,1,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNonNull(LocalVariableBinding)",6,2,8
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyNull(LocalVariableBinding)",5,1,7
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyUnknown(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyAssigned(FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyAssigned(LocalVariableBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyAssigned(int)",4,1,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyNonNull(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyNull(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isPotentiallyUnknown(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isProtectedNonNull(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isProtectedNull(LocalVariableBinding)",5,1,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isTrue(boolean,String)",2,1,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsComparedEqualToNonNull(LocalVariableBinding)",9,6,24
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsComparedEqualToNull(LocalVariableBinding)",9,6,20
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyAssigned(FieldBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyAssigned(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyAssigned(int)",1,6,6
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNonNull(LocalVariableBinding)",1,6,10
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyNull(LocalVariableBinding)",1,6,10
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markAsDefinitelyUnknown(LocalVariableBinding)",1,6,10
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markPotentiallyNonNullBit(LocalVariableBinding)",1,6,10
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markPotentiallyNullBit(LocalVariableBinding)",1,6,10
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.markPotentiallyUnknownBit(LocalVariableBinding)",1,6,10
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.mergedWith(UnconditionalFlowInfo)",20,8,62
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.nullInfoLessUnconditionalCopy()",2,2,4
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.numberOfEnclosingFields(ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.resetAssignmentInfo(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.resetAssignmentInfo(int)",4,1,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.resetNullInfo(LocalVariableBinding)",4,1,5
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.safeInitsWhenTrue()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.setReachMode(int)",2,1,7
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.toString()",5,1,11
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.unconditionalCopy()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.unconditionalFieldLessCopy()",3,4,9
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.unconditionalInits()",1,1,1
"org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.unconditionalInitsWithoutSideEffect()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.BooleanConstant(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.booleanValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.equals(Object)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.fromValue(boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.hashCode()",1,1,2
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.BooleanConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.ByteConstant(byte)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.equals(Object)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.fromValue(byte)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ByteConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.CharConstant(char)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.equals(Object)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.CharConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.fromValue(char)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CharConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.CompilerOptions()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.CompilerOptions(Map)",1,2,2
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.CompilerOptions(Map,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getMap()",1,4,45
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getSeverity(int)",5,1,6
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getSeverityString(int)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.getVisibilityString(int)",5,2,5
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.isAnyEnabled(IrritantSet)",1,3,3
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.optionKeyFromIrritant(int)",77,2,77
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.resetDefaults()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.set(Map)",1,189,243
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.toString()",1,3,40
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.updateSeverity(int,Object)",1,5,5
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.usesNullTypeAnnotations()",2,1,3
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.versionFromJdkLevel(long)",11,2,19
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.versionToJdkLevel(Object)",15,6,17
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.warningOptionNames()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.warningTokenFromIrritant(int)",25,2,25
"org.eclipse.jdt.internal.compiler.impl.CompilerOptions.warningTokenToIrritants(String)",27,3,39
"org.eclipse.jdt.internal.compiler.impl.CompilerStats.compareTo(Object)",1,1,3
"org.eclipse.jdt.internal.compiler.impl.CompilerStats.elapsedTime()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.booleanValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.castTo(int)",54,44,54
"org.eclipse.jdt.internal.compiler.impl.Constant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperation(Constant,int,int)",17,17,18
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperation(Constant,int,int,Constant,int)",19,19,19
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationAND(Constant,int,Constant,int)",28,28,32
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationAND_AND(Constant,int,Constant,int)",1,2,2
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationDIVIDE(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationEQUAL_EQUAL(Constant,int,Constant,int)",55,55,64
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationGREATER(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationGREATER_EQUAL(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationLEFT_SHIFT(Constant,int,Constant,int)",27,27,31
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationLESS(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationLESS_EQUAL(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationMINUS(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationMULTIPLY(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationOR(Constant,int,Constant,int)",28,28,32
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationOR_OR(Constant,int,Constant,int)",1,2,2
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationPLUS(Constant,int,Constant,int)",69,69,78
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationREMAINDER(Constant,int,Constant,int)",51,51,57
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationRIGHT_SHIFT(Constant,int,Constant,int)",27,27,31
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationUNSIGNED_RIGHT_SHIFT(Constant,int,Constant,int)",27,27,31
"org.eclipse.jdt.internal.compiler.impl.Constant.computeConstantOperationXOR(Constant,int,Constant,int)",28,28,32
"org.eclipse.jdt.internal.compiler.impl.Constant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.hasSameValue(Constant)",12,11,13
"org.eclipse.jdt.internal.compiler.impl.Constant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.Constant.toString()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.Constant.typeName()",11,2,11
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.DoubleConstant(double)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.equals(Object)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.fromValue(double)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.toString()",2,1,2
"org.eclipse.jdt.internal.compiler.impl.DoubleConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.FloatConstant(float)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.equals(Object)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.fromValue(float)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.FloatConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.IntConstant(int)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.equals(Object)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.IntConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.fromValue(int)",17,2,17
"org.eclipse.jdt.internal.compiler.impl.IntConstant.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IntConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.IrritantSet(IrritantSet)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.IrritantSet(int)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.areAllSet()",3,1,3
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.clear(int)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.clearAll()",1,1,2
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.hasSameIrritants(IrritantSet)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.initialize(IrritantSet)",2,1,2
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.initialize(int)",2,1,2
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.isAnySet(IrritantSet)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.isSet(int)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.set(IrritantSet)",2,1,5
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.set(int)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.IrritantSet.setAll()",1,1,2
"org.eclipse.jdt.internal.compiler.impl.LongConstant.LongConstant(long)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.equals(Object)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.LongConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.fromValue(long)",3,1,3
"org.eclipse.jdt.internal.compiler.impl.LongConstant.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.LongConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.ShortConstant(short)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.byteValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.charValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.doubleValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.equals(Object)",4,1,4
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.floatValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.fromValue(short)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.intValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.longValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.shortValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.ShortConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.StringConstant(String)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.equals(Object)",5,2,5
"org.eclipse.jdt.internal.compiler.impl.StringConstant.fromValue(String)",1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.hashCode()",1,2,2
"org.eclipse.jdt.internal.compiler.impl.StringConstant.stringValue()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.impl.StringConstant.typeID()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.AnnotatableTypeSystem(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.flattenedAnnotations(AnnotationBinding[][])",4,3,10
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getAnnotatedType(TypeBinding,AnnotationBinding[][])",7,10,20
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getAnnotatedType(TypeBinding,TypeBinding,AnnotationBinding[])",14,15,31
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getAnnotatedTypes(TypeBinding)",4,3,6
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getArrayType(TypeBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getArrayType(TypeBinding,int,AnnotationBinding[])",6,6,11
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getMemberType(ReferenceBinding,ReferenceBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding,AnnotationBinding[])",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getRawType(ReferenceBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getRawType(ReferenceBinding,ReferenceBinding,AnnotationBinding[])",7,5,11
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getWildcard(ReferenceBinding,int,TypeBinding,TypeBinding[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getWildcard(ReferenceBinding,int,TypeBinding,TypeBinding[],int,AnnotationBinding[])",8,7,15
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.haveTypeAnnotations(TypeBinding,AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.haveTypeAnnotations(TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.haveTypeAnnotations(TypeBinding,TypeBinding,TypeBinding[],AnnotationBinding[])",7,4,11
"org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.isAnnotatedTypeSystem()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.AnnotationBinding(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.AnnotationBinding(ReferenceBinding,ElementValuePair[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.addStandardAnnotations(AnnotationBinding[],long,LookupEnvironment)",3,10,21
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.buildMarkerAnnotation(char[][],LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.buildMarkerAnnotationForMemberType(char[][],LookupEnvironment)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.buildRetentionAnnotation(long,LookupEnvironment)",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.buildTargetAnnotation(long,LookupEnvironment)",2,12,23
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.computeUniqueKey(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.equals(Object)",14,6,15
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.getAnnotationType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.getElementValuePairs()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.resolve()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.setMethodBindings(ReferenceBinding,ElementValuePair[])",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.toString()",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.AnnotationMethodHolder.AnnotationMethodHolder(AnnotationBinding[],AnnotationBinding[][],Object,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.AnnotationMethodHolder.getDefaultValue()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.MethodHolder.MethodHolder(AnnotationBinding[],AnnotationBinding[][])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.MethodHolder.getParameterAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.MethodHolder.getParameterAnnotations(int)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.MethodHolder.setAnnotations(AnnotationBinding[])",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.getDefaultValue()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.getParameterAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.getParameterAnnotations(int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.setAnnotations(AnnotationBinding[])",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder.storeAnnotations(AnnotationBinding[],AnnotationBinding[][],Object,LookupEnvironment)",3,1,9
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.ArrayBinding(TypeBinding,int,LookupEnvironment)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.acceptsNonNullDefault()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.annotatedDebugName()",1,5,6
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.closestMatch()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.collectInferenceVariables(Set<InferenceVariable>)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.collectMissingTypes(List)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.collectSubstitutes(Scope,TypeBinding,InferenceContext,int)",4,5,8
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.computeUniqueKey(boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.constantPoolName()",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.debugName()",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.elementsType()",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.environment()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.erasure()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.genericTypeSignature()",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.getPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.hashCode()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.isCompatibleWith(TypeBinding,Scope)",12,7,13
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.isProperType(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.isSubtypeOf(TypeBinding)",7,4,8
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.leafComponentType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.mentionsAny(TypeBinding[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.nullAnnotatedReadableName(CompilerOptions,boolean)",2,6,7
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.qualifiedSourceName()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.readableName()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.setTypeAnnotations(AnnotationBinding[],boolean)",3,2,10
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.shortReadableName()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.sourceName()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.substituteInferenceVariable(InferenceVariable,TypeBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.unannotated()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.uncapture(Scope)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.withoutToplevelNullAnnotation()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.BaseTypeBinding(int,char[],char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.computeUniqueKey(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.getPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.initializeConversions()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isCompatibleWith(TypeBinding,Scope)",3,2,6
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isNarrowing(int,int)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isUncheckedException(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.isWidening(int,int)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.qualifiedSourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.setTypeAnnotations(AnnotationBinding[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.shortReadableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.sourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.unannotated()",11,2,11
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.BinaryTypeBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.BinaryTypeBinding(BinaryTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.BinaryTypeBinding(PackageBinding,IBinaryType,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.BinaryTypeBinding(PackageBinding,IBinaryType,LookupEnvironment,boolean)",1,5,12
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.addMethodTypeVariables(TypeVariableBinding[])",7,4,10
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableFields()",3,6,8
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableMethods()",3,6,8
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(IBinaryType,boolean)",2,29,34
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.clone(TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.containerAnnotationType()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(Object,LookupEnvironment,char[][][],boolean)",9,8,11
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(IBinaryAnnotation,LookupEnvironment,char[][][])",1,2,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotations(IBinaryAnnotation[],LookupEnvironment,char[][][])",1,2,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createFields(IBinaryField[],IBinaryType,long,char[][][])",2,12,16
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethod(IBinaryMethod,IBinaryType,long,char[][][])",2,38,57
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethods(IBinaryMethod[],IBinaryType,long,char[][][])",8,10,20
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createTypeVariables(SignatureWrapper,boolean,char[][][],ITypeAnnotationWalker,boolean)",5,6,16
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.enclosingType()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.fields()",3,5,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.findMethod(char[],char[][][])",6,8,18
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.genericTypeSignature()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getExactConstructor(TypeBinding[])",6,8,9
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",10,14,15
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getField(char[],boolean)",2,5,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMemberType(char[])",7,7,8
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMethods(char[])",6,9,9
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMethods(char[],int)",5,15,16
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getNonNullByDefaultValue(IBinaryAnnotation)",5,6,9
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getNullDefault()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getNullDefaultFrom(IBinaryAnnotation[])",4,4,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getTypeAnnotationWalker(IBinaryTypeAnnotation[],int)",7,8,11
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getTypeVariable(char[])",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.hasMemberTypes()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.hasTypeBit(int)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.initializeTypeVariable(TypeVariableBinding,TypeVariableBinding[],SignatureWrapper,char[][][],ITypeAnnotationWalker)",2,5,9
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.isEquivalentTo(TypeBinding)",5,3,5
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.isGenericType()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.isHierarchyConnected()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.isPrototype()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.isRepeatableAnnotationType()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.kind()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.memberTypes()",4,5,8
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.methods()",3,5,6
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.prototype()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(TypeBinding,LookupEnvironment,boolean)",6,6,10
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypeFor(FieldBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypesFor(MethodBinding)",3,6,10
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.retrieveAnnotations(Binding)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.scanFieldForNullAnnotation(IBinaryField,FieldBinding,boolean,ITypeAnnotationWalker)",11,11,21
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.scanMethodForNullAnnotation(IBinaryMethod,MethodBinding,ITypeAnnotationWalker)",16,21,34
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.scanTypeForContainerAnnotation(IBinaryType,char[][][])",5,6,8
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.scanTypeForNullDefaultAnnotation(IBinaryType,PackageBinding)",12,6,18
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.setContainerAnnotationType(ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.setNullDefault(long,int)",4,1,5
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.signature2qualifiedTypeName(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.storedAnnotations(boolean)",4,2,5
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superInterfaces()",7,6,8
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass()",3,4,5
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.tagAsHavingDefectiveContainerType()",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()",6,39,39
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.typeVariables()",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.unResolvedFields()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.unResolvedMethods()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.unannotated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.withoutToplevelNullAnnotation()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.Binding.computeUniqueKey()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.computeUniqueKey(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.getAnnotationTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.initializeDeprecatedAnnotationTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.isAnnotationType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.isParameter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.isTaggedRepeatable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.isValidBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.isVolatile()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.setAnnotations(AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.setAnnotations(AnnotationBinding[],Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Binding.shortReadableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(BlockScope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(BlockScope,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(BlockScope,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.BlockScope(int,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addAnonymousType(TypeDeclaration,ReferenceBinding)",1,2,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addLocalType(TypeDeclaration)",1,2,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addLocalVariable(LocalVariableBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.addSubscope(Scope)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.allowBlankFinalFieldAssignment(FieldBinding)",4,2,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.basicToString(int)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.checkAndSetModifiersForVariable(LocalVariableBinding)",1,3,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.checkAppropriate(MethodBinding,MethodBinding,InvocationSite)",3,4,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.checkAppropriateMethodAgainstSupers(char[],MethodBinding,TypeBinding[],InvocationSite)",5,4,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.checkUnclosedCloseables(FlowInfo,FlowContext,ASTNode,BlockScope)",11,15,24
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.computeLocalVariablePositions(int,int,CodeStream)",1,17,25
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.correlateTrackingVarsIfElse(FlowInfo,FlowInfo)",11,12,21
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.emulateOuterAccess(LocalVariableBinding)",6,6,10
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.findLocalType(char[])",6,4,7
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.findLocalVariableDeclarations(int)",9,6,15
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.findVariable(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getBinding(char[][],InvocationSite)",20,18,21
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getBinding(char[][],int,InvocationSite,boolean)",23,21,30
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getEmulationPath(LocalVariableBinding)",8,6,10
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.getEmulationPath(ReferenceBinding,boolean,boolean)",27,28,46
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.hasDefaultNullnessFor(int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.isDuplicateLocalVariable(char[])",5,3,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.maxShiftedOffset()",1,1,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.needBlankFinalFieldInitializationCheck(FieldBinding)",6,3,7
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.propagateInnerEmulation(ReferenceBinding,boolean)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.pruneWrapperTrackingVar(FakedTrackingVariable)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.referenceType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.registerTrackingVariable(FakedTrackingVariable)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.removeTrackingVar(FakedTrackingVariable)",3,4,5
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.reportResourceLeak(FakedTrackingVariable,ASTNode,int)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.scopeIndex()",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.startIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BlockScope.toString(int)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.BoundSet()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.ThreeSets()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.addBound(TypeBound)",2,2,8
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.combineAndUseNullHints(TypeBinding,long,LookupEnvironment)",3,9,9
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.copy()",1,1,4
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.findSingleWrapperType()",12,9,12
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.flattenInto(TypeBound[],int)",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.hasDependency(InferenceVariable)",6,5,9
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.hasDependency(Set<TypeBound>,InferenceVariable)",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.lowerBounds(boolean,InferenceVariable)",2,4,6
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.setInstantiation(TypeBinding,InferenceVariable,LookupEnvironment)",1,5,7
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.size()",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.upperBounds(boolean,InferenceVariable)",7,4,11
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.ThreeSets.useNullHints(long,TypeBinding[],LookupEnvironment)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.addBound(TypeBound,LookupEnvironment)",5,14,18
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.addBounds(BoundSet,LookupEnvironment)",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.addBounds(TypeBound[],LookupEnvironment)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.addBoundsFromTypeParameters(InferenceContext18,TypeVariableBinding[],InferenceVariable[])",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.addTypeBoundsFromWildcardBound(InferenceContext18,InferenceSubstitution,int,TypeBinding,TypeBinding,TypeBinding)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.combineEqualSupers(TypeBound,TypeBound)",3,3,5
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.combineSameSame(TypeBound,TypeBound)",4,2,5
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.combineSameSameWithProperType(TypeBound,TypeBound)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.combineSameSubSuper(TypeBound,TypeBound)",7,7,13
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.combineSuperAndSub(TypeBound,TypeBound)",4,4,6
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.condition18_5_2_bullet_3_3_1(InferenceVariable,TypeBinding)",15,11,17
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.condition18_5_2_bullet_3_3_2(InferenceVariable,TypeBinding,InferenceContext18)",9,5,9
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.copy()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.dependsOnResolutionOf(InferenceVariable,InferenceVariable)",9,7,12
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.deriveTypeArgumentConstraints(TypeBound,TypeBound)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.findWrapperTypeBound(InferenceVariable)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.flatten()",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.getEquivalentOuterVariable(InferenceVariable,InferenceVariable[])",9,7,9
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.getInstantiation(InferenceVariable,LookupEnvironment)",3,3,6
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.hasCaptureBound(Set<InferenceVariable>)",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.hasOnlyTrivialExceptionBounds(InferenceVariable,TypeBinding[])",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.incorporate(InferenceContext18)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.incorporate(InferenceContext18,TypeBound[],TypeBound[])",27,33,51
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.isInstantiated(InferenceVariable)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.lowerBounds(InferenceVariable,boolean)",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.numUninstantiatedVariables(InferenceVariable[])",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(InferenceContext18,ConstraintFormula)",10,5,10
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.superOnlyRaw(TypeBinding,TypeBinding,LookupEnvironment)",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.superTypesWithCommonGenericType(TypeBinding,TypeBinding)",8,3,11
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.typeArgumentEqualityConstraints(TypeBinding,TypeBinding,boolean)",7,8,14
"org.eclipse.jdt.internal.compiler.lookup.BoundSet.upperBounds(InferenceVariable,boolean)",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.CaptureBinding(CaptureBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.CaptureBinding(ReferenceBinding,char[],int,int,int,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.CaptureBinding(WildcardBinding,ReferenceBinding,int,int,ASTNode,int)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.computeUniqueKey(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.debugName()",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.genericTypeSignature()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.getDerivedTypesForDeferredInitialization()",1,3,6
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.initializeBounds(Scope,ParameterizedTypeBinding)",4,16,26
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.isCapture()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.isEquivalentTo(TypeBinding)",6,4,7
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.isProperType(boolean)",3,3,5
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.nullAnnotatedReadableName(CompilerOptions,boolean)",1,6,6
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.readableName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.setTypeAnnotations(AnnotationBinding[],boolean)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.shortReadableName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.signableName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.substituteInferenceVariable(InferenceVariable,TypeBinding)",3,7,8
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.toString()",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.uncapture(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.withoutToplevelNullAnnotation()",4,4,6
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.CaptureBinding18(CaptureBinding18)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.CaptureBinding18(ReferenceBinding,char[],char[],int,int,int,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.computeUniqueKey(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.erasure()",3,4,7
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.findSuperTypeOriginatingFrom(TypeBinding)",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.genericTypeSignature()",1,5,6
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.getMethods(char[])",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.initializeBounds(Scope,ParameterizedTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.isCompatibleWith(TypeBinding,Scope)",12,8,16
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.isEquivalentTo(TypeBinding)",9,6,10
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.isProperType(boolean)",7,4,8
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.readableName()",4,5,7
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.setUpperBounds(TypeBinding[],ReferenceBinding)",2,6,11
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.shortReadableName()",4,5,7
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.substituteInferenceVariable(InferenceVariable,TypeBinding)",3,17,19
"org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.uncapture(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding.CatchParameterBinding(LocalDeclaration,TypeBinding,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding.getPreciseTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding.isCatchParameter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding.setPreciseType(TypeBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.ClassScope(Scope,TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildAnonymousTypeBinding(SourceTypeBinding,ReferenceBinding)",5,12,13
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFields()",10,11,12
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFieldsAndMethods()",1,7,7
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildLocalType(SourceTypeBinding,PackageBinding)",7,9,9
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildLocalTypeBinding(SourceTypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildMemberTypes(AccessRestriction)",9,13,14
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildMethods()",5,19,27
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildType(SourceTypeBinding,PackageBinding,AccessRestriction)",1,4,6
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildTypeVariables()",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkAndSetModifiers()",15,46,78
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkAndSetModifiersForField(FieldBinding,FieldDeclaration)",3,10,17
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkForInheritedMemberTypes(SourceTypeBinding)",13,16,25
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkParameterizedSuperTypeCollisions()",16,13,24
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkParameterizedTypeBounds()",1,7,8
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectEnumSuperclass()",4,5,5
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectMemberTypes()",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperInterfaces()",10,16,18
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass()",10,17,19
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchyWithoutMembers()",2,6,7
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.deferCheck(Runnable)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(SourceTypeBinding,ReferenceBinding,TypeReference)",17,25,30
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(TypeBinding,TypeReference)",4,4,7
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype(TypeReference)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.hasDefaultNullnessFor(int)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.problemReporter()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.referenceType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.resolveTypeParameter(TypeParameter)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ClassScope.toString()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.CompilationUnitScope(CompilationUnitDeclaration,LookupEnvironment)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.buildFieldsAndMethods()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.buildTypeBindings(AccessRestriction)",7,21,33
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.checkAndRecordImportBinding(Binding,HashtableOfType,ImportReference,char[][])",15,31,36
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.checkAndSetImports()",11,13,17
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.checkMoreStaticBindings(char[][],HashtableOfType,int,ImportReference)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.checkParameterizedTypes()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.computeConstantPoolName(LocalTypeBinding)",4,8,10
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports()",19,27,35
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(char[][],boolean,boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(char[][],int)",12,11,14
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(char[][],int,boolean)",5,3,5
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleStaticImport(char[][],int)",12,13,22
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findStaticMethod(ReferenceBinding,char[])",6,5,7
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.getDefaultImports()",2,4,5
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.getImport(char[][],boolean,boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.hasDefaultNullnessFor(int)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.nextCaptureID()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordImportBinding(ImportBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordQualifiedReference(char[][])",5,5,6
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordReference(ReferenceBinding,char[])",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordReference(char[][],char[])",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordRootReference(char[])",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordSimpleReference(char[])",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordSuperTypeReference(TypeBinding)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeConversion(TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReference(TypeBinding)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReferences(TypeBinding[])",3,4,7
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.resolveSingleImport(ImportBinding,int)",4,4,8
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.storeDependencyInfo()",1,14,14
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.typeToRecord(TypeBinding)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.verifyMethods(MethodVerifier)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExceptionFormula.ConstraintExceptionFormula(FunctionalExpression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExceptionFormula.inputVariables(InferenceContext18)",7,11,11
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExceptionFormula.reduce(InferenceContext18)",20,15,29
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExceptionFormula.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.ConstraintExpressionFormula(Expression,TypeBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.ConstraintExpressionFormula(Expression,TypeBinding,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.canBePolyExpression(Expression)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.findGroundTargetType(InferenceContext18,BlockScope,LambdaExpression,ParameterizedTypeBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.inferInvocationApplicability(InferenceContext18,MethodBinding,TypeBinding[],boolean,int)",1,4,5
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.inferPolyInvocationType(InferenceContext18,InvocationSite,TypeBinding,MethodBinding)",9,14,20
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.inputVariables(InferenceContext18)",8,16,17
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.reduce(InferenceContext18)",32,28,49
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.reduceReferenceExpressionCompatibility(ReferenceExpression,InferenceContext18)",16,15,32
"org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ConstraintFormula.appendTypeName(StringBuffer,TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ConstraintFormula.applySubstitution(BoundSet,InferenceVariable[])",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ConstraintFormula.inputVariables(InferenceContext18)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ConstraintFormula.outputVariables(InferenceContext18)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.ConstraintTypeFormula()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.ConstraintTypeFormula(TypeBinding,TypeBinding,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.addConstraintsFromTypeParameters(TypeBinding,ParameterizedTypeBinding,List<ConstraintFormula>)",6,5,11
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.applySubstitution(BoundSet,InferenceVariable[])",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.checkIVFreeTVmatch(TypeBinding,TypeBinding)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.create(TypeBinding,TypeBinding,int)",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.create(TypeBinding,TypeBinding,int,boolean)",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.equalsEquals(ConstraintTypeFormula)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.findMostSpecificSuperArray(TypeBinding,TypeBinding[],TypeBinding)",3,3,7
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.reduce(InferenceContext18)",22,27,31
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.reduceSubType(Scope,TypeBinding,TypeBinding)",32,28,49
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.reduceTypeEquality(TypeBinding)",16,18,32
"org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.ElementValuePair(char[],Expression,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.ElementValuePair(char[],Object,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.UnresolvedEnumConstant.UnresolvedEnumConstant(ReferenceBinding,LookupEnvironment,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.UnresolvedEnumConstant.getEnumConstantName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.UnresolvedEnumConstant.getResolved()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.getMethodBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.getName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.getValue()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.getValue(Expression)",8,8,16
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.setMethodBinding(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.setValue(Object)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding(FieldBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding(FieldDeclaration,TypeBinding,int,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.FieldBinding(char[],TypeBinding,int,ReferenceBinding,Constant)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.canBeSeenBy(PackageBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.canBeSeenBy(TypeBinding,InvocationSite,Scope)",25,21,35
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.computeUniqueKey(boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.constant()",1,5,7
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.constant(Scope)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.fillInDefaultNonNullness(FieldDeclaration,Scope)",4,7,9
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.genericSignature()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.getAnnotationTagBits()",3,3,6
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.getAnnotations()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isDefault()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isOrEnclosedByPrivateType()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isPrivate()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isProtected()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isPublic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isTransient()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isUsed()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isUsedOnlyInCompound()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isViewedAsDeprecated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.isVolatile()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.setAnnotations(AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.FieldBinding.sourceField()",4,1,5
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.ImplicitNullAnnotationVerifier(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.ImplicitNullAnnotationVerifier(LookupEnvironment,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.applyReturnNullBits(MethodBinding,long)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.areParametersEqual(MethodBinding,MethodBinding)",15,11,17
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.areTypesEqual(TypeBinding,TypeBinding)",8,7,11
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.checkImplicitNullAnnotations(MethodBinding,AbstractMethodDeclaration,boolean,Scope)",3,17,27
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.checkNullSpecInheritance(MethodBinding,AbstractMethodDeclaration,boolean,boolean,boolean,MethodBinding,MethodBinding[],Scope,InheritedNonNullnessInfo[])",23,47,65
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.collectOverriddenMethods(MethodBinding,char[],int,ReferenceBinding,Set,List)",3,4,5
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.findAllOverriddenMethods(MethodBinding,char[],int,ReferenceBinding,Set,List)",3,3,5
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.getParameterNonNullness(MethodBinding,int,boolean)",4,4,5
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.getReturnTypeNullnessTagBits(MethodBinding,boolean)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.recordArgNonNullness(MethodBinding,int,int,Argument,Boolean)",1,2,4
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.recordArgNonNullness18(MethodBinding,int,Argument,Boolean,LookupEnvironment)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.recordDeferredInheritedNullness(Scope,ASTNode,MethodBinding,Boolean,InheritedNonNullnessInfo)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.ImportBinding(char[][],boolean,Binding,ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.isStatic()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.readableName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ImportBinding.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding.ImportConflictBinding(char[][],Binding,ReferenceBinding,ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext.InferenceContext(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext.getSubstitutes(TypeVariableBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext.hasUnresolvedTypeArgument()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext.recordSubstitute(TypeVariableBinding,TypeBinding,int)",5,2,5
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext.toString()",5,12,18
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.InferenceContext18(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.InferenceContext18(Scope,Expression[],InvocationSite,InferenceContext18)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.SuspendedInferenceRecord.SuspendedInferenceRecord(InvocationSite,Expression[],InferenceVariable[],int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.addConstraintsToC(Expression[],Set<ConstraintFormula>,MethodBinding,int,boolean,InvocationSite)",6,4,9
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.addConstraintsToC_OneExpr(Expression,Set<ConstraintFormula>,TypeBinding,TypeBinding,MethodBinding,boolean)",13,19,27
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.addDependencies(BoundSet,Set<InferenceVariable>,InferenceVariable)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.addInitialTypeVariableSubstitutions(TypeBinding[])",2,3,6
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.addThrowsContraints(TypeBinding[],InferenceVariable[],ReferenceBinding[])",4,4,4
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.addTypeVariableSubstitutions(TypeBinding[])",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.allOutputVariables(Set<ConstraintFormula>)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.checkExpression(Expression,TypeBinding[],TypeBinding,TypeBinding[],TypeBinding)",19,28,37
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.createBoundsForFunctionalInterfaceParameterizationInference(ParameterizedTypeBinding)",5,4,9
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.createInitialBoundSet(TypeVariableBinding[])",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.createInitialConstraintsForParameters(TypeBinding[],boolean,TypeBinding,MethodBinding)",2,11,16
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.dependsOn(Collection<InferenceVariable>,Collection<InferenceVariable>)",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.doesExpressionContain(Expression,Expression)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.enterLambda(LambdaExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.enterPolyInvocation(InvocationSite,Expression[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.findBottomSet(Set<ConstraintFormula>,Set<InferenceVariable>)",6,4,6
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.forwardResults(BoundSet,Invocation,ParameterizedMethodBinding,TypeBinding)",12,10,21
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.freshCapture(InferenceVariable)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.getFunctionInterfaceArgumentSolutions(TypeBinding[])",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.getInferenceKind(MethodBinding,TypeBinding[])",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.getInferenceVariable(TypeBinding,int,InvocationSite)",5,3,9
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.getParameter(TypeBinding[],int,boolean)",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.getResultSubstitution(BoundSet,boolean)",3,2,4
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.getReturnProblemMethodIfNeeded(TypeBinding,MethodBinding)",3,2,5
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.getSmallestVariableSet(BoundSet,InferenceVariable[])",4,5,7
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.getSolutions(TypeVariableBinding[],InvocationSite,BoundSet)",5,7,10
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.inferFunctionalInterfaceParameterization(LambdaExpression,BlockScope,ParameterizedTypeBinding)",3,4,4
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.inferInvocationApplicability(MethodBinding,TypeBinding[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.inferInvocationType(TypeBinding,InvocationSite,MethodBinding)",11,13,20
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.integrateInnerInferenceB2(InferenceContext18)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.isMoreSpecificThan(MethodBinding,MethodBinding,boolean,boolean)",8,5,11
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.isReachable(Map<ConstraintFormula, Set<ConstraintFormula>>,ConstraintFormula,ConstraintFormula,Set<ConstraintFormula>,Set<ConstraintFormula>)",6,5,6
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.isResolved(BoundSet)",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.isTypeVariableOfCandidate(TypeBinding,MethodBinding)",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.isVarArgs()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.missingImplementation(String)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.moreSpecificMain(TypeBinding,TypeBinding,Expression)",10,8,15
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.parameterizedWithWildcard(TypeBinding)",5,4,6
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.pickFromCycle(Set<ConstraintFormula>)",13,19,26
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.rankNode(ConstraintExpressionFormula,Map<ConstraintExpressionFormula, ConstraintExpressionFormula>,Map<ConstraintExpressionFormula, Set<ConstraintExpressionFormula>>)",3,2,5
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.recordUncheckedConversion(ConstraintTypeFormula)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.reduce()",4,2,5
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.reduceAndIncorporate(ConstraintFormula)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.reduceWithEqualityConstraints(TypeBinding[],TypeBinding[])",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.reportUncheckedConversions(BoundSet)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.resolve(InferenceVariable[])",27,26,36
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.resumeSuspendedInference(SuspendedInferenceRecord)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.setUpperBounds(CaptureBinding18,TypeBinding[])",7,4,7
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.siSubI(TypeBinding,TypeBinding)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.siSuperI(TypeBinding,TypeBinding)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.solve()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.solve(InferenceVariable[])",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.solve(boolean)",7,4,10
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.sortTypes(TypeBinding[])",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.substitute(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.toString()",3,13,17
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.usesUncheckedConversion()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.varArgTypes(TypeBinding[],int)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.InferenceFailureException.InferenceFailureException(String)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution.InferenceSubstitution(InferenceContext18)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution.InferenceSubstitution(LookupEnvironment,InferenceVariable[],InvocationSite)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution.environment()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution.getP(int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution.isRawSubstitution()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution.substitute(Substitution,TypeBinding)",4,6,6
"org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution.substitute(TypeVariableBinding)",7,7,11
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.InferenceVariable(TypeBinding,int,InvocationSite,char[],LookupEnvironment,ReferenceBinding)",1,1,4
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.InferenceVariable(TypeBinding,int,int,InvocationSite,LookupEnvironment,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.collectInferenceVariables(Set<InferenceVariable>)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.debugName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.equals(Object)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.erasure()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.getPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.hasTypeBit(int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.hashCode()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.isCompatibleWith(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.isProperType(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.prototype()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.qualifiedSourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.sourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.substituteInferenceVariable(InferenceVariable,TypeBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.superInterfaces()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.updateSourceName(int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency.InnerEmulationDependency(BlockScope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.IntersectionTypeBinding18(IntersectionTypeBinding18)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.IntersectionTypeBinding18(ReferenceBinding[],LookupEnvironment)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.canBeInstantiated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.canBeSeenBy(PackageBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.canBeSeenBy(ReferenceBinding,ReferenceBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.canBeSeenBy(Scope)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.collectInferenceVariables(Set<InferenceVariable>)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.debugName()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.getIntersectingTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.getPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.getSAMType(Scope)",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.getSingleAbstractMethod(Scope,boolean)",7,4,8
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.hasTypeBit(int)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.isBoxedPrimitiveType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.isCompatibleWith(TypeBinding,Scope)",10,7,14
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.isIntersectionType18()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.isSubtypeOf(TypeBinding)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.mentionsAny(TypeBinding[],int)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.qualifiedSourceName()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.readableName()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.shortReadableName()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.sourceName()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.superInterfaces()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.superclass()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.EmptyWithAstNode(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.acceptPotentiallyCompatibleMethods(MethodBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.checkingPotentialCompatibility()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.getExpressionContext()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.invocationTargetType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.isQualifiedSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.receiverIsImplicitThis()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.InvocationSite.EmptyWithAstNode.sourceStart()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.LocalTypeBinding(ClassScope,SourceTypeBinding,CaseStatement)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.LocalTypeBinding(LocalTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.addInnerEmulationDependent(BlockScope,boolean)",5,2,5
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.anonymousOriginalSuperType()",7,3,8
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.checkRedundantNullnessDefaultRecurse(ASTNode,Annotation[],long,boolean)",3,3,6
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.computeUniqueKey(boolean)",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.constantPoolName()",3,3,5
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.enclosingMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.genericTypeSignature()",2,4,5
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.readableName()",1,6,6
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.setAsMemberType()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.setConstantPoolName(char[])",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.shortReadableName()",1,6,6
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.signature()",2,4,5
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.sourceName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.toString()",4,4,4
"org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.updateInnerEmulationDependents()",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.LocalVariableBinding(LocalDeclaration,TypeBinding,int,MethodScope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.LocalVariableBinding(LocalDeclaration,TypeBinding,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.LocalVariableBinding(char[],TypeBinding,int,boolean)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.computeUniqueKey(boolean)",9,14,19
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.getAnnotations()",8,8,12
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.getEnclosingMethod()",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.getScopeKey(BlockScope,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.isCatchParameter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.isParameter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.isSecret()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.recordInitializationEndPC(int)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.recordInitializationStartPC(int)",5,2,6
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.resetInitializations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.setAnnotations(AnnotationBinding[],Scope)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.toString()",2,5,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.LookupEnvironment(ITypeRequestor,CompilerOptions,ProblemReporter,INameEnvironment)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.addResolutionListener(IQualifiedTypeResolutionListener)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.annotateType(TypeBinding,ITypeAnnotationWalker,char[][][])",4,6,10
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(PackageBinding,char[])",5,5,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(char[][])",2,4,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.buildTypeBindings(CompilationUnitDeclaration,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(IBinaryType,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(IBinaryType,boolean,AccessRestriction)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings()",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration)",3,4,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration,boolean)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration[],boolean[],int)",1,8,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.computeArrayClone(MethodBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.computeBoxingType(TypeBinding)",28,5,36
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.computePackageFrom(char[][],boolean)",2,5,9
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.containsNullTypeAnnotation(IBinaryAnnotation[])",5,3,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(ReferenceBinding)",3,6,6
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToRawType(TypeBinding,boolean)",7,13,20
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToRawTypes(ReferenceBinding[],boolean,boolean)",2,5,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertUnresolvedBinaryToRawType(TypeBinding)",7,10,16
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createAnnotatedType(TypeBinding,AnnotationBinding[])",6,5,13
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createAnnotatedType(TypeBinding,AnnotationBinding[][])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createAnnotation(ReferenceBinding,ElementValuePair[])",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createArrayType(TypeBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createArrayType(TypeBinding,int,AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(IBinaryType,PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(IBinaryType,PackageBinding,boolean,AccessRestriction)",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createCapturedWildcard(WildcardBinding,ReferenceBinding,int,int,ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createGetClassMethod(TypeBinding,MethodBinding,Scope)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createIntersectionType18(ReferenceBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createMemberType(ReferenceBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createMissingType(PackageBinding,char[][])",1,4,6
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createPackage(char[][])",5,5,10
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedGenericMethod(MethodBinding,RawTypeBinding)",5,3,9
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedGenericMethod(MethodBinding,TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedGenericMethod(MethodBinding,TypeBinding[],boolean,boolean)",11,8,18
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding,AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createPolymorphicMethod(MethodBinding,TypeBinding[])",4,6,10
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createRawType(ReferenceBinding,ReferenceBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createRawType(ReferenceBinding,ReferenceBinding,AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createUnresolvedAnnotation(ReferenceBinding,ElementValuePair[])",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createWildcard(ReferenceBinding,int,TypeBinding,TypeBinding[],int)",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createWildcard(ReferenceBinding,int,TypeBinding,TypeBinding[],int,AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.filterNullTypeAnnotations(AnnotationBinding[])",4,1,8
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getAccessRestriction(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getAnnotatedTypes(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getCachedType(char[][])",5,4,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getNonNullAnnotation()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getNonNullAnnotationName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getNonNullByDefaultAnnotationName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getNullableAnnotation()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getNullableAnnotationName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getPackage0(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getResolvedType(char[][],Scope)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTopLevelPackage(char[])",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getType(char[][])",11,7,15
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeArgumentsFromSignature(SignatureWrapper,TypeVariableBinding[],ReferenceBinding,ReferenceBinding,char[][][],ITypeAnnotationWalker)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromCompoundName(char[][],boolean,boolean)",1,5,6
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromConstantPoolName(char[],int,int,boolean,char[][][])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromConstantPoolName(char[],int,int,boolean,char[][][],ITypeAnnotationWalker)",4,4,6
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromSignature(char[],int,int,boolean,TypeBinding,char[][][],ITypeAnnotationWalker)",4,7,23
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(SignatureWrapper,TypeVariableBinding[],ReferenceBinding,char[][][],ITypeAnnotationWalker)",8,19,23
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeVariable(TypeVariableBinding,int,AnnotationBinding[][],ITypeAnnotationWalker,char[][][])",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromVariantTypeSignature(SignatureWrapper,TypeVariableBinding[],ReferenceBinding,ReferenceBinding,int,char[][][],ITypeAnnotationWalker)",2,2,5
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getUnannotatedType(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.initializeUsesNullTypeAnnotation()",6,3,11
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.isMissingType(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.isPackage(char[][],char[])",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.methodVerifier()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.newMethodVerifier()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.nullAnnotationsFromTagBits(long)",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.qualifiedNameMatchesSignature(char[][],char[])",6,1,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.releaseClassFiles(ClassFile[])",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.reset()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.setAccessRestriction(ReferenceBinding,AccessRestriction)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.updateCaches(UnresolvedReferenceBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.updatePolymorphicMethodReturnType(PolymorphicMethodBinding,TypeBinding)",4,4,7
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.usesAnnotatedTypeSystem()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.usesNullTypeAnnotations()",2,4,6
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.MemberTypeBinding(MemberTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.MemberTypeBinding(char[][],ClassScope,SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.checkSyntheticArgsAndFields()",5,2,5
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.constantPoolName()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.initializeDeprecatedAnnotationTagBits()",2,5,6
"org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.toString()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding(MethodBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding(int,TypeBinding[],ReferenceBinding[],ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.MethodBinding(int,char[],TypeBinding,TypeBinding[],ReferenceBinding[],ReferenceBinding)",1,4,9
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areParameterErasuresEqual(MethodBinding)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areParametersCompatibleWith(TypeBinding[])",10,9,13
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areParametersEqual(MethodBinding)",5,2,5
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.areTypeVariableErasuresEqual(MethodBinding)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.asRawMethod(LookupEnvironment)",2,6,7
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.canBeSeenBy(InvocationSite,Scope)",6,5,8
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.canBeSeenBy(PackageBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.canBeSeenBy(TypeBinding,InvocationSite,Scope)",28,25,41
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.collectMissingTypes(List)",1,6,6
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeSubstitutedMethod(MethodBinding,LookupEnvironment)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(boolean)",1,10,11
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.fillInDefaultNonNullness(AbstractMethodDeclaration)",3,9,14
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.fillInDefaultNonNullness18(AbstractMethodDeclaration,LookupEnvironment)",4,15,18
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.findOriginalInheritedMethod(MethodBinding)",5,3,6
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.genericMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.genericSignature()",4,7,10
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getAnnotationTagBits()",1,7,10
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getDefaultValue()",1,7,7
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getParameterAnnotations()",2,7,11
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getTypeVariable(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.hasNonNullDefaultFor(int,boolean)",6,1,6
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.hasSubstitutedParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.hasSubstitutedReturnType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isAbstract()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isBridge()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDefault()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDefaultAbstract()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDefaultMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isFinal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isImplementing()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isMain()",3,7,8
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isNative()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isOrEnclosedByPrivateType()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isOverriding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isPolymorphic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isPrivate()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isProtected()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isPublic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isStrictfp()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isSynchronized()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isUsed()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isVarargs()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isViewedAsDeprecated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.isVoidMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.readableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.redeclaresPublicObjectMethod(Scope)",4,4,7
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.setAnnotations(AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.setAnnotations(AnnotationBinding[],AnnotationBinding[][],Object,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.setDefaultValue(Object)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.setParameterAnnotations(AnnotationBinding[][])",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.setSelector(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.shallowOriginal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.shortReadableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature()",2,13,16
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature(ClassFile)",2,32,35
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceEnd()",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceLambda()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceMethod()",5,1,7
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceStart()",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.tiebreakMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.toString()",1,13,14
"org.eclipse.jdt.internal.compiler.lookup.MethodBinding.typeVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.MethodScope(Scope,ReferenceContext,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.MethodScope(Scope,ReferenceContext,boolean,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.basicToString(int)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.checkAndSetModifiersForConstructor(MethodBinding)",1,9,17
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.checkAndSetModifiersForMethod(MethodBinding)",2,21,28
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.checkUnusedParameters(MethodBinding)",4,9,13
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.computeLocalVariablePositions(int,CodeStream)",3,8,12
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.createMethod(AbstractMethodDeclaration)",1,14,20
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.findField(TypeBinding,char[],InvocationSite,boolean)",9,3,11
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.hasDefaultNullnessFor(int)",3,1,4
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isInsideConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isInsideInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isInsideInitializerOrConstructor()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.isLambdaScope()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.recordInitializationStates(FlowInfo)",9,3,14
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.referenceMethod()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.referenceMethodBinding()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.referenceType()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodScope.resolveTypeParameter(TypeParameter)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.MethodVerifier(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areMethodsCompatible(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areMethodsCompatible(MethodBinding,MethodBinding,LookupEnvironment)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areReturnTypesCompatible(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.areReturnTypesCompatible(MethodBinding,MethodBinding,LookupEnvironment)",5,4,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.canOverridingMethodDifferInErasure(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.canSkipInheritedMethods()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.canSkipInheritedMethods(MethodBinding,MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkAbstractMethod(MethodBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkAgainstInheritedMethods(MethodBinding,MethodBinding[],int,MethodBinding[])",12,28,33
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkConcreteInheritedMethod(MethodBinding,MethodBinding[])",8,11,13
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkExceptions(MethodBinding,MethodBinding)",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkForBridgeMethod(MethodBinding,MethodBinding,MethodBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkForMissingHashCodeMethod()",1,3,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkForRedundantSuperinterfaces(ReferenceBinding,ReferenceBinding[])",28,28,33
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkInheritedMethods(MethodBinding[],int,boolean[],boolean[])",5,17,23
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkInheritedReturnTypes(MethodBinding,MethodBinding)",5,5,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.checkPackagePrivateAbstractMethod(MethodBinding)",8,6,11
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.collectAllDistinctSuperInterfaces(ReferenceBinding[],Set,List)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeInheritedMethods()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeInheritedMethods(ReferenceBinding,ReferenceBinding[])",24,37,45
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeMethods()",1,5,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeSubstituteMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.computeSubstituteMethod(MethodBinding,MethodBinding,LookupEnvironment)",16,9,19
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.couldMethodOverride(MethodBinding,MethodBinding)",8,6,12
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.doesMethodOverride(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.doesMethodOverride(MethodBinding,MethodBinding,LookupEnvironment)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.findBestInheritedAbstractOrDefaultMethod(MethodBinding[],int)",7,6,9
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.findOverriddenInheritedMethods(MethodBinding[],int)",15,7,20
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.findSuperinterfaceCollisions(ReferenceBinding,ReferenceBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.hasGenericParameter(MethodBinding)",5,2,5
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isAsVisible(MethodBinding,MethodBinding)",6,1,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isInterfaceMethodImplemented(MethodBinding,MethodBinding,ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isMethodSubsignature(MethodBinding,MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isParameterSubsignature(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isParameterSubsignature(MethodBinding,MethodBinding,LookupEnvironment)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isSameClassOrSubclassOf(ReferenceBinding,ReferenceBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isSubstituteParameterSubsignature(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.isSubstituteParameterSubsignature(MethodBinding,MethodBinding,LookupEnvironment)",7,10,11
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.mustImplementAbstractMethod(ReferenceBinding)",5,7,9
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.mustImplementAbstractMethods()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.problemReporter(MethodBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.reportIncompatibleReturnTypeError(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.reportRawReferences(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.resolvedExceptionTypesFor(MethodBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.verify()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier.verify(SourceTypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.MethodVerifier15(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.canOverridingMethodDifferInErasure(MethodBinding,MethodBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.canSkipInheritedMethods()",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.canSkipInheritedMethods(MethodBinding,MethodBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkAgainstInheritedMethods(MethodBinding,MethodBinding[],int,MethodBinding[])",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkConcreteInheritedMethod(MethodBinding,MethodBinding[])",1,17,17
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkForBridgeMethod(MethodBinding,MethodBinding,MethodBinding[])",6,11,13
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkForNameClash(MethodBinding,MethodBinding)",20,28,36
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkInheritedDefaultMethods(MethodBinding[],boolean[],int)",6,8,11
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkInheritedMethods(MethodBinding,MethodBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkInheritedMethods(MethodBinding[],int,boolean[],boolean[])",17,23,28
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkInheritedReturnTypes(MethodBinding,MethodBinding)",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkMethods()",24,41,67
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkNullSpecInheritance(MethodBinding,AbstractMethodDeclaration,boolean,boolean,boolean,MethodBinding,MethodBinding[],Scope,InheritedNonNullnessInfo[])",2,3,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.checkTypeVariableMethods(TypeParameter)",13,16,25
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.detectInheritedNameClash(MethodBinding,MethodBinding)",6,2,6
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.detectNameClash(MethodBinding,MethodBinding,boolean)",8,6,12
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.doTypeVariablesClash(MethodBinding,MethodBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.findReplacedMethod(MethodBinding,MethodBinding)",2,6,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.findSuperinterfaceCollisions(ReferenceBinding,ReferenceBinding[])",8,19,24
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.isAcceptableReturnTypeOverride(MethodBinding,MethodBinding)",8,3,8
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.isInterfaceMethodImplemented(MethodBinding,MethodBinding,ReferenceBinding)",4,4,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.isMethodSubsignature(MethodBinding,MethodBinding)",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.isSkippableOrOverridden(MethodBinding,MethodBinding,boolean[],boolean[],boolean[],int)",6,6,9
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.isUnsafeReturnTypeOverride(MethodBinding,MethodBinding)",5,5,7
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.reportIncompatibleReturnTypeError(MethodBinding,MethodBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.reportRawReferences()",7,14,18
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.reportRawReferences(MethodBinding,MethodBinding)",3,13,16
"org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.verify()",4,6,9
"org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding.MissingTypeBinding(PackageBinding,char[][],LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding.collectMissingTypes(List)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding.setMissingSuperclass(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding.setTypeAnnotations(AnnotationBinding[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding.MostSpecificExceptionMethodBinding(MethodBinding,ReferenceBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.NestedTypeBinding(NestedTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.NestedTypeBinding(char[][],ClassScope,SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgument(LocalVariableBinding)",5,3,7
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgument(ReferenceBinding)",2,3,6
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgumentAndField(LocalVariableBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.addSyntheticArgumentAndField(ReferenceBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.checkRedundantNullnessDefaultRecurse(ASTNode,Annotation[],long,boolean)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.enclosingType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.getEnclosingInstancesSlotSize()",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.getOuterLocalVariablesSlotSize()",3,2,7
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.getSyntheticArgument(LocalVariableBinding)",5,1,5
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.getSyntheticArgument(ReferenceBinding,boolean,boolean)",13,6,14
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticEnclosingInstanceTypes()",2,1,5
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticEnclosingInstances()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticOuterLocalVariables()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.updateInnerEmulationDependents()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NullTypeBinding.NullTypeBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NullTypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NullTypeBinding.setTypeAnnotations(AnnotationBinding[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.NullTypeBinding.unannotated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding(char[],LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.PackageBinding(char[][],PackageBinding,LookupEnvironment)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addNotFoundPackage(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addNotFoundType(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addPackage(PackageBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.addType(ReferenceBinding)",1,8,9
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.checkIfNullAnnotationPackage()",1,2,5
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.checkIfNullAnnotationType(ReferenceBinding)",1,6,10
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.clearMissingTagBit()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.computeUniqueKey(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.findPackage(char[])",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getPackage(char[])",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getPackage0(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getType(char[])",5,3,5
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getType0(char[])",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(char[])",11,5,14
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.isPackageOfQualifiedTypeName(char[][],char[][])",4,2,5
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.isViewedAsDeprecated()",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.problemId()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PackageBinding.toString()",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.ParameterizedFieldBinding(ParameterizedTypeBinding,FieldBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.constant()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding.setConstant(Constant)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.LingeringTypeVariableEliminator.LingeringTypeVariableEliminator(TypeVariableBinding[],TypeBinding[],Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.LingeringTypeVariableEliminator.environment()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.LingeringTypeVariableEliminator.isRawSubstitution()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.LingeringTypeVariableEliminator.substitute(TypeVariableBinding)",3,3,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.ParameterizedGenericMethodBinding(MethodBinding,RawTypeBinding,LookupEnvironment)",1,6,8
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.ParameterizedGenericMethodBinding(MethodBinding,TypeBinding[],LookupEnvironment,boolean,boolean)",7,3,14
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.boundCheck18(Scope,TypeBinding[])",3,4,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(MethodBinding,TypeBinding[],Scope,InvocationSite)",10,18,26
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod18(MethodBinding,TypeBinding[],Scope,InvocationSite)",11,21,30
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeUniqueKey(boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.environment()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.genericMethod()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.getErasure18_5_2(TypeBinding,LookupEnvironment,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.hasSubstitutedParameters()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.hasSubstitutedReturnType()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.inferFromArgumentTypes(Scope,MethodBinding,TypeBinding[],TypeBinding[],InferenceContext)",14,11,20
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.inferFromExpectedType(Scope,InferenceContext)",19,10,23
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.isRawSubstitution()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.resolveSubstituteConstraints(Scope,TypeVariableBinding[],InferenceContext,boolean)",15,14,24
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.substitute(TypeVariableBinding)",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.tiebreakMethod()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.ParameterizedMethodBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.ParameterizedMethodBinding(ParameterizedTypeBinding,MethodBinding)",10,15,28
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.ParameterizedMethodBinding(ReferenceBinding,MethodBinding,char[][],LookupEnvironment)",9,10,21
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.hasSubstitutedParameters()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.hasSubstitutedReturnType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.instantiateGetClass(TypeBinding,MethodBinding,Scope)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.shallowOriginal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.ParameterizedTypeBinding(ReferenceBinding,TypeBinding[],ReferenceBinding,LookupEnvironment)",1,6,8
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.actualType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.annotatedDebugName()",1,4,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.boundCheck(Scope,TypeReference[])",1,6,8
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.canBeInstantiated()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.capture(Scope,int,int)",2,8,10
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.collectInferenceVariables(Set<InferenceVariable>)",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.collectMissingTypes(List)",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.collectSubstitutes(Scope,TypeBinding,InferenceContext,int)",16,14,31
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.computeId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.computeUniqueKey(boolean)",1,9,11
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.createParameterizedMethod(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.debugName()",2,6,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.enclosingType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.environment()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.erasure()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.fieldCount()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.fields()",2,1,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.genericType()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.genericTypeSignature()",1,7,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getAnnotationTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getEnclosingInstancesSlotSize()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getExactConstructor(TypeBinding[])",11,9,13
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",17,16,23
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getField(char[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getMemberType(char[])",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getMethods(char[])",5,7,10
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getNonWildcardParameterization(Scope)",8,7,19
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getOuterLocalVariablesSlotSize()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getSingleAbstractMethod(Scope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getSingleAbstractMethod(Scope,boolean,int,int)",11,8,18
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.hasMemberTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.hasTypeBit(int)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.implementsMethod(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initialize(ReferenceBinding,TypeBinding[])",2,4,9
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initializeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initializeForStaticImports()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isBoundParameterizedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isEquivalentTo(TypeBinding)",18,8,20
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isHierarchyConnected()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isParameterizedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isProperType(boolean)",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.isRawSubstitution()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.memberTypes()",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.mentionsAny(TypeBinding[],int)",5,4,6
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.methods()",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.nullAnnotatedReadableName(CompilerOptions)",1,8,9
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.nullAnnotatedReadableName(CompilerOptions,boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.nullAnnotatedShortReadableName(CompilerOptions)",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.qualifiedPackageName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.qualifiedSourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.readableName()",1,5,6
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.resolve()",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.shortReadableName()",1,5,6
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.signature()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.sourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substitute(TypeVariableBinding)",7,6,9
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substituteInferenceVariable(InferenceVariable,TypeBinding)",3,6,6
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.superInterfaces()",3,5,6
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.superclass()",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",1,7,7
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.syntheticEnclosingInstanceTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.syntheticOuterLocalVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.toString()",2,30,30
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.typeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.typeVariables()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.unResolvedFields()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.unannotated()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.uncapture(Scope)",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.withoutToplevelNullAnnotation()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.PolyParameterizedGenericMethodBinding.PolyParameterizedGenericMethodBinding(ParameterizedGenericMethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyParameterizedGenericMethodBinding.equals(Object)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.PolyParameterizedGenericMethodBinding.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.PolyTypeBinding(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.computeBoxingType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.getPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.isCompatibleWith(TypeBinding,Scope)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.isFunctionalType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.isPolyType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.isPotentiallyCompatibleWith(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.qualifiedSourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.sIsMoreSpecific(TypeBinding,TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.shortReadableName()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.sourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding.PolymorphicMethodBinding(MethodBinding,TypeBinding,TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding.PolymorphicMethodBinding(MethodBinding,TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding.isPolymorphic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding.isVarargs()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding.matches(TypeBinding[],TypeBinding)",8,4,10
"org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding.original()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[],ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[][],ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.ProblemBinding(char[][],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.ProblemFieldBinding(FieldBinding,ReferenceBinding,char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.ProblemFieldBinding(ReferenceBinding,char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.ProblemMethodBinding(MethodBinding,char[],TypeBinding[],int)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.ProblemMethodBinding(char[],TypeBinding[],ReferenceBinding,int)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.ProblemMethodBinding(char[],TypeBinding[],int)",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.shallowOriginal()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding.ProblemPackageBinding(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding.ProblemPackageBinding(char[][],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.ProblemReferenceBinding(char[][],ReferenceBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.closestMatch()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.closestReferenceMatch()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.hasTypeBit(int)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.problemId()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.problemReasonString(int)",4,4,6
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.setTypeAnnotations(AnnotationBinding[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.shortReadableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.sourceName()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.RawTypeBinding(ReferenceBinding,ReferenceBinding,LookupEnvironment)",1,7,12
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.annotatedDebugName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.capture(Scope,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.computeUniqueKey(boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.createParameterizedMethod(MethodBinding)",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.debugName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.genericTypeSignature()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.getSingleAbstractMethod(Scope,boolean)",6,4,9
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.initializeArguments()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isEquivalentTo(TypeBinding)",5,4,6
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isParameterizedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isProperType(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.isProvablyDistinct(TypeBinding)",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.mentionsAny(TypeBinding[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.readableName()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.shortReadableName()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.substituteInferenceVariable(InferenceVariable,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.uncapture(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.withoutToplevelNullAnnotation()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReductionResult.relationToString(int)",9,2,9
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.ReferenceBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.ReferenceBinding(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.acceptsNonNullDefault()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.appendNullAnnotation(StringBuffer,CompilerOptions)",1,7,8
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.applyCloseableClassWhitelists()",15,11,16
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.applyCloseableInterfaceWhitelists()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.availableFields()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.availableMethods()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.binarySearch(char[],FieldBinding[])",6,2,6
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.binarySearch(char[],MethodBinding[])",6,6,10
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeInstantiated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy(PackageBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy(ReferenceBinding,ReferenceBinding)",22,16,30
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy(Scope)",11,8,14
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.compare(char[],char[],int,int)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.computeGenericTypeSignature(TypeVariableBinding[])",2,6,7
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.computeId()",75,50,190
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.computeId(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.computeUniqueKey(boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.constantPoolName()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.debugName()",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.depth()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.detectAnnotationCycle()",4,7,12
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.enclosingTypeAt(int)",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.enumConstantCount()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.fieldCount()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.fields()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getAnnotationTagBits()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getEnclosingInstancesSlotSize()",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getExactConstructor(TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getField(char[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getInterfaceAbstractContracts(Scope)",11,13,20
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getMemberType(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getMethods(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getMethods(char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getNullDefault()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getOuterLocalVariablesSlotSize()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getSingleAbstractMethod(Scope,boolean)",22,20,49
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getTypeVariable(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hasIncompatibleSuperType(ReferenceBinding)",13,14,22
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hasMemberTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hasNonNullDefaultFor(int,boolean)",7,4,7
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hasRestrictedAccess()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.hashCode()",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.implementsInterface(ReferenceBinding,boolean)",10,13,19
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.implementsMethod(MethodBinding)",5,4,5
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isAbstract()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isAnnotationType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isBinaryBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isClass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith(TypeBinding,Scope)",6,4,9
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith0(TypeBinding,Scope)",21,11,24
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isConsistentIntersection(TypeBinding[])",5,8,10
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isDefault()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isEnum()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isFinal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isFunctionalInterface(Scope)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isHierarchyBeingActivelyConnected()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isHierarchyBeingConnected()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isHierarchyConnected()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isInterface()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isOrEnclosedByPrivateType()",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isPrivate()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isProperType(boolean)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isProtected()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isPublic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isStatic()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isStrictfp()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isSubTypeOfRTL(TypeBinding)",7,6,8
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isSubtypeOf(TypeBinding)",9,3,11
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isSuperclassOf(ReferenceBinding)",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isThrowable()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isUncheckedException(boolean)",6,3,6
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isUsed()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isViewedAsDeprecated()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.memberTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.methods()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.nullAnnotatedReadableName(CompilerOptions)",1,8,9
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.nullAnnotatedReadableName(CompilerOptions,boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.nullAnnotatedShortReadableName(CompilerOptions)",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.outermostEnclosingType()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.qualifiedSourceName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.readableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.retrieveAnnotationHolder(Binding,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.retrieveAnnotations(Binding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.setAnnotations(AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.setContainerAnnotationType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.shortReadableName()",1,5,5
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.signature()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.sortFields(FieldBinding[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.sortMethods(MethodBinding[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.sourceName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.storeAnnotationHolder(Binding,AnnotationHolder)",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.storeAnnotations(Binding,AnnotationBinding[])",4,3,7
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.storedAnnotations(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.superInterfaces()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.superclass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.syntheticEnclosingInstanceTypes()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.tagAsHavingDefectiveContainerType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.unResolvedFields()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.unResolvedMethods()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.Scope(int,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.Substitutor.isMemberTypeOfRaw(TypeBinding,ReferenceBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.Substitutor.substitute(Substitution,ReferenceBinding[])",4,4,7
"org.eclipse.jdt.internal.compiler.lookup.Scope.Substitutor.substitute(Substitution,TypeBinding)",18,22,32
"org.eclipse.jdt.internal.compiler.lookup.Scope.Substitutor.substitute(Substitution,TypeBinding[])",2,4,6
"org.eclipse.jdt.internal.compiler.lookup.Scope.boxing(TypeBinding)",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.classScope()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.compareTypes(TypeBinding,TypeBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.compilationUnitScope()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.compilerOptions()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(MethodBinding,TypeBinding[],InvocationSite)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(MethodBinding,TypeBinding[],InvocationSite,boolean)",18,12,39
"org.eclipse.jdt.internal.compiler.lookup.Scope.connectTypeVariables(TypeParameter[],boolean)",24,29,40
"org.eclipse.jdt.internal.compiler.lookup.Scope.convertEliminatingTypeVariables(TypeBinding,ReferenceBinding,int,Set)",10,26,40
"org.eclipse.jdt.internal.compiler.lookup.Scope.createArrayType(TypeBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.createArrayType(TypeBinding,int,AnnotationBinding[])",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.createTypeVariables(TypeParameter[],Binding)",3,7,13
"org.eclipse.jdt.internal.compiler.lookup.Scope.deferBoundCheck(TypeReference)",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.deferCheck(Runnable)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingClassScope()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingLambdaScope()",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingMethodScope()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingReceiverType()",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingReferenceContext()",5,2,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.enclosingSourceType()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.environment()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.findDefaultAbstractMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite,ReferenceBinding,ObjectVector,MethodBinding[])",14,17,23
"org.eclipse.jdt.internal.compiler.lookup.Scope.findDirectMemberType(char[],ReferenceBinding)",10,6,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.findExactMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",13,14,18
"org.eclipse.jdt.internal.compiler.lookup.Scope.findField(TypeBinding,char[],InvocationSite,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.findField(TypeBinding,char[],InvocationSite,boolean,boolean)",32,21,47
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMemberType(char[],ReferenceBinding)",24,20,36
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite,boolean)",4,6,6
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod0(ReferenceBinding,char[],TypeBinding[],InvocationSite,boolean)",45,64,93
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethodForArray(ArrayBinding,char[],TypeBinding[],InvocationSite)",10,8,12
"org.eclipse.jdt.internal.compiler.lookup.Scope.findMethodInSuperInterfaces(ReferenceBinding,char[],ObjectVector,List<TypeBinding>,InvocationSite)",13,16,21
"org.eclipse.jdt.internal.compiler.lookup.Scope.findType(char[],PackageBinding,PackageBinding)",4,3,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.findVariable(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getBaseType(char[])",12,2,53
"org.eclipse.jdt.internal.compiler.lookup.Scope.getBinding(char[],int,InvocationSite,boolean)",41,43,76
"org.eclipse.jdt.internal.compiler.lookup.Scope.getConstructor(ReferenceBinding,TypeBinding[],InvocationSite)",4,6,6
"org.eclipse.jdt.internal.compiler.lookup.Scope.getConstructor0(ReferenceBinding,TypeBinding[],InvocationSite)",7,8,16
"org.eclipse.jdt.internal.compiler.lookup.Scope.getCurrentPackage()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getDeclarationModifiers()",7,3,8
"org.eclipse.jdt.internal.compiler.lookup.Scope.getExactConstructor(TypeBinding,InvocationSite)",12,10,17
"org.eclipse.jdt.internal.compiler.lookup.Scope.getExactMethod(TypeBinding,TypeBinding,char[],InvocationSite,MethodBinding)",8,9,14
"org.eclipse.jdt.internal.compiler.lookup.Scope.getExactMethod(TypeBinding,char[],InvocationSite)",11,13,20
"org.eclipse.jdt.internal.compiler.lookup.Scope.getField(TypeBinding,char[],InvocationSite)",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.getFilteredExceptions(MethodBinding)",9,4,9
"org.eclipse.jdt.internal.compiler.lookup.Scope.getImplicitMethod(char[],TypeBinding[],InvocationSite)",20,54,81
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaIoSerializable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangAnnotationAnnotation()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangAssertionError()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangClass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangCloneable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangEnum()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangIllegalArgumentException()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangInvokeLambdaMetafactory()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangInvokeMethodHandlesLookup()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangInvokeSerializedLambda()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangIterable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangObject()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaLangThrowable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getJavaUtilIterator()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.getMemberType(char[],ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod(TypeBinding,char[],TypeBinding[],InvocationSite)",8,7,12
"org.eclipse.jdt.internal.compiler.lookup.Scope.getOnlyPackage(char[][])",6,6,8
"org.eclipse.jdt.internal.compiler.lookup.Scope.getPackage(char[][])",9,6,10
"org.eclipse.jdt.internal.compiler.lookup.Scope.getStaticFactory(ParameterizedTypeBinding,ReferenceBinding,TypeBinding[],InvocationSite)",10,16,30
"org.eclipse.jdt.internal.compiler.lookup.Scope.getType(char[])",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.getType(char[],PackageBinding)",5,6,7
"org.eclipse.jdt.internal.compiler.lookup.Scope.getType(char[][],int)",17,16,19
"org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(char[],int,boolean)",52,70,104
"org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(char[][])",14,15,19
"org.eclipse.jdt.internal.compiler.lookup.Scope.greaterLowerBound(ReferenceBinding[])",10,5,14
"org.eclipse.jdt.internal.compiler.lookup.Scope.greaterLowerBound(TypeBinding[],Scope,LookupEnvironment)",18,12,25
"org.eclipse.jdt.internal.compiler.lookup.Scope.hasErasedCandidatesCollisions(TypeBinding,TypeBinding,Map,ReferenceBinding,ASTNode)",4,4,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.innermostSwitchCase()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.isAcceptableMethod(MethodBinding,MethodBinding)",19,26,39
"org.eclipse.jdt.internal.compiler.lookup.Scope.isBoxingCompatibleWith(TypeBinding,TypeBinding)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInField(FieldBinding)",4,1,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInMethod(MethodBinding)",5,1,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInSameUnit(ReferenceBinding)",3,2,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.isDefinedInType(ReferenceBinding)",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.isInsideCase(CaseStatement)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.isInsideDeprecatedCode()",12,9,18
"org.eclipse.jdt.internal.compiler.lookup.Scope.isLambdaScope()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.isLambdaSubscope()",5,4,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.isOverriddenMethodGeneric(MethodBinding)",5,5,6
"org.eclipse.jdt.internal.compiler.lookup.Scope.isSubtypeOfRawType(TypeBinding)",12,12,19
"org.eclipse.jdt.internal.compiler.lookup.Scope.leastContainingInvocation(TypeBinding,Object,ArrayList)",10,7,14
"org.eclipse.jdt.internal.compiler.lookup.Scope.leastContainingTypeArgument(TypeBinding,TypeBinding,ReferenceBinding,int,ArrayList)",23,13,29
"org.eclipse.jdt.internal.compiler.lookup.Scope.lowerUpperBound(TypeBinding[])",2,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.lowerUpperBound(TypeBinding[],ArrayList)",21,14,31
"org.eclipse.jdt.internal.compiler.lookup.Scope.methodScope()",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.minimalErasedCandidates(TypeBinding[],Map)",40,64,88
"org.eclipse.jdt.internal.compiler.lookup.Scope.mostSpecificClassMethodBinding(MethodBinding[],int,InvocationSite)",6,4,8
"org.eclipse.jdt.internal.compiler.lookup.Scope.mostSpecificInterfaceMethodBinding(MethodBinding[],int,InvocationSite)",5,3,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.mostSpecificMethodBinding(MethodBinding[],int,TypeBinding[],InvocationSite,ReferenceBinding)",57,63,100
"org.eclipse.jdt.internal.compiler.lookup.Scope.namedMethodScope()",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.Scope.originalReferenceContext()",5,2,7
"org.eclipse.jdt.internal.compiler.lookup.Scope.outerMostClassScope()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.outerMostMethodScope()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(MethodBinding,TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(MethodBinding,TypeBinding[],InvocationSite)",10,8,17
"org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(MethodBinding,TypeBinding[],boolean)",18,16,29
"org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(TypeBinding,TypeBinding)",6,4,9
"org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(TypeBinding,TypeBinding,LookupEnvironment,boolean)",6,6,11
"org.eclipse.jdt.internal.compiler.lookup.Scope.referenceCompilationUnit()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.Scope.referenceContext()",5,2,5
"org.eclipse.jdt.internal.compiler.lookup.Scope.resolveTypeParameter(TypeParameter)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.startIndex()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.substitute(Substitution,ReferenceBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.substitute(Substitution,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.substitute(Substitution,TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.Scope.tagAsAccessingEnclosingInstanceStateOf(ReferenceBinding,boolean)",7,12,17
"org.eclipse.jdt.internal.compiler.lookup.Scope.typeAnnotationsResolutionScope(Scope)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.Scope.validateNullAnnotation(long,TypeReference,Annotation[])",4,6,8
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.SignatureWrapper(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.SignatureWrapper(char[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.SignatureWrapper(char[],boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.atEnd()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.computeEnd()",6,5,16
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.getFrom(int)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.nextName()",1,2,4
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.nextWord()",1,2,6
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.peekFullType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.skipAngleContents(int)",5,2,6
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.tail()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.SourceTypeBinding(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.SourceTypeBinding(char[][],PackageBinding,ClassScope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addDefaultAbstractMethods()",13,17,23
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticArrayMethod(ArrayBinding,int)",2,3,9
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticBridgeMethod(MethodBinding)",9,10,17
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticBridgeMethod(MethodBinding,MethodBinding)",8,9,15
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticEnumMethod(char[])",2,2,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFactoryMethod(MethodBinding,MethodBinding,TypeBinding[])",2,1,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForAssert(BlockScope)",6,6,11
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForClassLiteral(TypeBinding,BlockScope)",5,5,9
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForEnumValues()",6,6,10
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForInnerclass(LocalVariableBinding)",6,6,10
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForInnerclass(ReferenceBinding)",6,7,11
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticFieldForSwitchEnum(char[],String)",6,6,11
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethod(FieldBinding,boolean,boolean)",2,2,9
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethod(LambdaExpression)",2,4,7
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethod(MethodBinding,boolean)",2,9,16
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethodForEnumInitialization(int,int)",2,1,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethodForSwitchEnum(TypeBinding)",2,3,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.areFieldsInitialized()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.areMethodsInitialized()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.checkAnnotationsInType()",1,4,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.checkRedundantNullnessDefaultOne(ASTNode,Annotation[],long,boolean)",3,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.checkRedundantNullnessDefaultRecurse(ASTNode,Annotation[],long,boolean)",3,3,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.computeUniqueKey(boolean)",6,7,10
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.containerAnnotationType()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.createArgumentBindings(MethodBinding,CompilerOptions)",2,5,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.evaluateNullAnnotations()",3,18,34
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForFieldsAndMethods()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.fields()",6,9,13
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.genericSignature()",5,9,10
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.genericTypeSignature()",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getAnnotationTagBits()",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getDefaultAbstractMethods()",3,4,7
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getExactConstructor(TypeBinding[])",11,15,17
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getExactMethod(char[],TypeBinding[],CompilationUnitScope)",21,26,28
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getField(char[],boolean)",8,8,10
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getMethods(char[])",10,14,14
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getNullDefault()",3,4,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getSyntheticBridgeMethod(MethodBinding)",5,1,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getSyntheticField(LocalVariableBinding)",3,1,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getSyntheticField(ReferenceBinding,boolean)",7,4,9
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.hasMemberTypes()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.hasNonNullDefaultFor(int,boolean)",13,6,15
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.hasTypeBit(int)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.initializeDeprecatedAnnotationTagBits()",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.initializeForStaticImports()",3,3,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.internalFaultInTypeForFieldsAndMethods()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isEquivalentTo(TypeBinding)",17,10,22
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isGenericType()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isHierarchyConnected()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isPrototype()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isRepeatableAnnotationType()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.isTaggedRepeatable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.kind()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.maybeMarkTypeParametersNonNull()",2,5,7
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.memberTypes()",3,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.methods()",31,42,69
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.prototype()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.rejectTypeAnnotatedVoidMethod(AbstractMethodDeclaration)",1,3,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypeFor(FieldBinding)",8,14,27
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypesFor(MethodBinding)",12,44,73
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.retrieveAnnotationHolder(Binding,boolean)",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setContainerAnnotationType(ReferenceBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setFields(FieldBinding[])",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setMemberTypes(ReferenceBinding[])",2,4,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setMethods(MethodBinding[])",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setSuperClass(ReferenceBinding)",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setSuperInterfaces(ReferenceBinding[])",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setTypeVariables(TypeVariableBinding[])",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.sourceEnd()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.sourceStart()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.storedAnnotations(boolean)",4,3,6
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.superInterfaces()",2,4,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.superclass()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.syntheticFields()",4,7,10
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.syntheticMethods()",3,7,10
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.tagAsHavingDefectiveContainerType()",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.tagIndirectlyAccessibleMembers()",2,6,8
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()",6,40,40
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.typeVariables()",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.unResolvedFields()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.unannotated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.verifyMethods(MethodVerifier)",2,2,3
"org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.withoutToplevelNullAnnotation()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding.SyntheticArgumentBinding(LocalVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding.SyntheticArgumentBinding(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticFactoryMethodBinding.SyntheticFactoryMethodBinding(MethodBinding,LookupEnvironment,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticFactoryMethodBinding.applyTypeArgumentsOnConstructor(TypeBinding[],TypeBinding[])",5,6,7
"org.eclipse.jdt.internal.compiler.lookup.SyntheticFactoryMethodBinding.getConstructor()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding.SyntheticFieldBinding(char[],TypeBinding,int,ReferenceBinding,Constant,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(FieldBinding,ReferenceBinding,TypeBinding,char[])",9,10,16
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(FieldBinding,boolean,boolean,ReferenceBinding)",12,11,22
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(LambdaExpression,char[],SourceTypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(MethodBinding,MethodBinding,SourceTypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(MethodBinding,MethodBinding,char[],TypeBinding[],SourceTypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(MethodBinding,SourceTypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(MethodBinding,boolean,ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(SourceTypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(SourceTypeBinding,char[])",1,3,5
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(SourceTypeBinding,int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.SyntheticMethodBinding(int,ArrayBinding,char[],SourceTypeBinding)",1,3,5
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.initializeConstructorAccessor(MethodBinding)",10,8,15
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.initializeMethodAccessor(MethodBinding,boolean,ReferenceBinding)",10,13,22
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.isConstructorRelated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.markNonNull(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.markNonNull(MethodBinding,int,LookupEnvironment)",2,4,5
"org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding.sourceLambda()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.TypeBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.TypeBinding(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.acceptsNonNullDefault()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.actualType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.additionalBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.annotatedDebugName()",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.bound()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.boundKind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.canBeInstantiated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.canBeSeenBy(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.capture(Scope,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.closestMatch()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.collectInferenceVariables(Set<InferenceVariable>)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.collectMissingTypes(List)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.collectSubstitutes(Scope,TypeBinding,InferenceContext,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.containerAnnotationType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.debugName()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.depth()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.dimensions()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.enclosingMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.enclosingType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.enterRecursiveFunction()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.equalsEquals(TypeBinding,TypeBinding)",4,1,6
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.erasure()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.exitRecursiveFunction()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.findSuperTypeOriginatingFrom(TypeBinding)",30,22,41
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.findSuperTypeOriginatingFrom(int,boolean)",16,15,25
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.genericCast(TypeBinding)",3,1,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.genericTypeSignature()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.getErasureCompatibleType(TypeBinding)",10,10,14
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.getIntersectingTypes()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.getMethods(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.getSingleAbstractMethod(Scope,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.hasNullTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.hasTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.hasTypeBit(int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.initializeForStaticImports()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isAnonymousType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isBaseType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isBoundParameterizedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isBoxedPrimitiveType()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isBoxingCompatibleWith(TypeBinding,Scope)",6,3,7
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isCapture()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isClass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isCompatibleWith(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isEnum()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isEquivalentTo(TypeBinding)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isFunctionalInterface(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isFunctionalType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isGenericType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isHierarchyInconsistent()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isInterface()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isIntersectionType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isIntersectionType18()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isLocalType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isMemberType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isNestedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isNumericType()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isParameterizedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isParameterizedTypeWithActualArguments()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isParameterizedWithOwnVariables()",6,4,8
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isPolyType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isPotentiallyCompatibleWith(TypeBinding,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isPrimitiveOrBoxedPrimitiveType()",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isPrimitiveType()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProperType(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProvableDistinctSubType(TypeBinding)",7,15,16
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProvablyDistinct(TypeBinding)",29,14,37
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProvablyDistinctTypeArgument(TypeBinding,ParameterizedTypeBinding,int)",29,23,49
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isRawType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isReifiable()",9,5,11
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isRepeatableAnnotationType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isStatic()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isSubtypeOf(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isThrowable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isTypeArgumentContainedBy(TypeBinding)",48,31,72
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isTypeVariable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isUnboundWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isUncheckedException(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isUnresolvedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.leafComponentType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.mentionsAny(TypeBinding[],int)",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.needsUncheckedConversion(TypeBinding)",9,2,9
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.notEquals(TypeBinding,TypeBinding)",4,1,6
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.nullAnnotatedReadableName(CompilerOptions,boolean)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.original()",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.prototype()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.qualifiedPackageName()",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.rank()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.sIsMoreSpecific(TypeBinding,TypeBinding,Scope)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.setTypeAnnotations(AnnotationBinding[],boolean)",3,2,8
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.signableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.signature()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.substituteInferenceVariable(InferenceVariable,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.superInterfaces()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.superclass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.syntheticOuterLocalVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.typeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.typeVariables()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.unannotated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.uncapture(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.wellKnownType(Scope,int)",12,4,12
"org.eclipse.jdt.internal.compiler.lookup.TypeBinding.withoutToplevelNullAnnotation()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(ArrayBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(BaseTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(IntersectionTypeBinding18)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(ParameterizedTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(PolyTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(RawTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(TypeBindingVisitor,ReferenceBinding[])",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(TypeBindingVisitor,TypeBinding)",4,9,21
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(TypeBindingVisitor,TypeBinding[])",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(TypeVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(WildcardBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBound.TypeBound(InferenceVariable,TypeBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBound.TypeBound(InferenceVariable,TypeBinding,int,boolean)",2,4,6
"org.eclipse.jdt.internal.compiler.lookup.TypeBound.createBoundOrDependency(InferenceSubstitution,TypeBinding,InferenceVariable)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBound.equals(Object)",2,4,4
"org.eclipse.jdt.internal.compiler.lookup.TypeBound.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBound.isBound()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeBound.safeType(TypeBinding)",3,5,5
"org.eclipse.jdt.internal.compiler.lookup.TypeBound.toString()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CloseMethodRecord.CloseMethodRecord(char[][],char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.HashedParameterizedTypes.InternalParameterizedTypeBinding.InternalParameterizedTypeBinding(ReferenceBinding,TypeBinding[],ReferenceBinding,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.HashedParameterizedTypes.InternalParameterizedTypeBinding.equals(Object)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.HashedParameterizedTypes.InternalParameterizedTypeBinding.hashCode()",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.HashedParameterizedTypes.get(ReferenceBinding,TypeBinding[],ReferenceBinding,AnnotationBinding[])",5,5,12
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.HashedParameterizedTypes.put(ReferenceBinding,TypeBinding[],ReferenceBinding,ParameterizedTypeBinding)",1,4,6
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.TypeSystem(LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.cacheDerivedType(TypeBinding,TypeBinding)",5,2,11
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.cacheDerivedType(TypeBinding,TypeBinding,TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.fixTypeVariableDeclaringElement(TypeVariableBinding,Binding)",1,1,5
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.forceRegisterAsDerived(TypeBinding)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getAnnotatedType(TypeBinding,AnnotationBinding[][])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getAnnotatedTypes(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getAnnotationType(ReferenceBinding,boolean)",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getArrayType(TypeBinding,int)",5,7,10
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getArrayType(TypeBinding,int,AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getCapturedWildcard(WildcardBinding,ReferenceBinding,int,int,ASTNode,int)",7,3,10
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getDerivedTypes(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getIntersectionType18(ReferenceBinding[])",9,2,11
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getMemberType(ReferenceBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding)",2,4,7
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getParameterizedType(ReferenceBinding,TypeBinding[],ReferenceBinding,AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getRawType(ReferenceBinding,ReferenceBinding)",5,7,10
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getRawType(ReferenceBinding,ReferenceBinding,AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getUnannotatedType(TypeBinding)",5,6,11
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getWildcard(ReferenceBinding,int,TypeBinding,TypeBinding[],int)",6,10,17
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getWildcard(ReferenceBinding,int,TypeBinding,TypeBinding[],int,AnnotationBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.isAnnotatedTypeSystem()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeSystem.updateCaches(UnresolvedReferenceBinding,ReferenceBinding)",7,1,9
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.TypeVariableBinding(TypeVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.TypeVariableBinding(char[],Binding,int,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.TypeVariableBinding(char[],LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.acceptsNonNullDefault()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.annotatedDebugName()",1,9,10
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.appendNullAnnotation(StringBuffer,CompilerOptions)",1,7,8
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.boundCheck(Substitution,TypeBinding,Scope)",4,4,5
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.boundsCount()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.canBeInstantiated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.collectInferenceVariables(Set<InferenceVariable>)",2,4,5
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.collectSubstitutes(Scope,TypeBinding,InferenceContext,int)",6,3,9
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.combineTypeAnnotations(TypeBinding)",3,4,4
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.computeUniqueKey(boolean)",5,6,6
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.constantPoolName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.debugName()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.denotesRelevantSuperClass(TypeBinding)",2,5,6
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.enterRecursiveFunction()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.erasure()",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.evaluateNullAnnotations(Scope,TypeParameter)",1,11,12
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.exitRecursiveFunction()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.findBound(TypeBinding,TypeParameter)",5,4,6
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.genericSignature()",1,5,6
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.genericTypeSignature()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.getDerivedTypesForDeferredInitialization()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.getTypeBounds(InferenceVariable,InferenceSubstitution)",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.hasOnlyRawBounds()",6,5,7
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.hasRelevantTypeUseNullAnnotations()",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.hasTypeBit(int)",1,5,7
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.internalBoundCheck(Substitution,TypeBinding,Scope)",28,29,49
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isErasureBoundTo(TypeBinding)",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isHierarchyConnected()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isInterchangeableWith(TypeVariableBinding,Substitution)",7,3,7
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isProperType(boolean)",6,4,7
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isSubtypeOf(TypeBinding)",7,5,9
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.isTypeVariable()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.kind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.mentionsAny(TypeBinding[],int)",7,4,8
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.nullAnnotatedReadableName(CompilerOptions,boolean)",1,9,10
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.nullMismatchOnBound(TypeParameter,TypeBinding,long,long,Scope)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.otherUpperBounds()",4,2,4
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.resolve()",2,7,12
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.setFirstBound(TypeBinding)",1,3,7
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.setSuperClass(ReferenceBinding)",1,2,5
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.setSuperInterfaces(ReferenceBinding[])",1,2,5
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.setTypeAnnotations(AnnotationBinding[],boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.shortReadableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.substituteInferenceVariable(InferenceVariable,TypeBinding)",3,8,10
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.superInterfaces()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.superclass()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.toString()",2,9,10
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.unannotated()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.upperBound()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.withoutToplevelNullAnnotation()",3,2,3
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding.UnresolvedAnnotationBinding(ReferenceBinding,ElementValuePair[],LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding.getAnnotationType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding.getElementValuePairs()",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding.resolve()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.UnresolvedReferenceBinding(UnresolvedReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.UnresolvedReferenceBinding(char[][],PackageBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.addWrapper(TypeBinding,LookupEnvironment)",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.clone(TypeBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.debugName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.depth()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.hasTypeBit(int)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.isUnresolvedType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.prototype()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(LookupEnvironment,boolean)",2,10,13
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.setResolvedType(ReferenceBinding,LookupEnvironment)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",2,3,4
"org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.toString()",2,3,3
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.VariableBinding(char[],TypeBinding,int,Constant)",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.constant()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.constant(Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isBlankFinal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isEffectivelyFinal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isFinal()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isNonNull()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.isNullable()",1,1,3
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.readableName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.setConstant(Constant)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VariableBinding.toString()",1,3,4
"org.eclipse.jdt.internal.compiler.lookup.VoidTypeBinding.VoidTypeBinding()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VoidTypeBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VoidTypeBinding.setTypeAnnotations(AnnotationBinding[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.VoidTypeBinding.unannotated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.WildcardBinding(ReferenceBinding,int,TypeBinding,TypeBinding[],int,LookupEnvironment)",1,3,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.acceptsNonNullDefault()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.actualType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.additionalBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.allBounds()",2,1,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.annotatedDebugName()",4,7,8
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.bound()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.boundCheck(TypeBinding)",7,3,8
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.boundKind()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.canBeInstantiated()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.clone(TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.collectInferenceVariables(Set<InferenceVariable>)",1,4,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.collectMissingTypes(List)",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.collectSubstitutes(Scope,TypeBinding,InferenceContext,int)",19,26,68
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.computeUniqueKey(boolean)",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.constantPoolName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.debugName()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.enterRecursiveFunction()",2,1,2
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.erasure()",4,5,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.exitRecursiveFunction()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.genericTypeSignature()",2,3,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.getIntersectingTypes()",2,2,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.hasTypeBit(int)",1,5,7
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.hashCode()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.initialize(ReferenceBinding,TypeBinding,TypeBinding[])",1,2,5
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isHierarchyConnected()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isIntersectionType()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isProperType(boolean)",7,5,9
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isSuperclassOf(ReferenceBinding)",3,3,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isUnboundWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.isWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.kind()",1,1,2
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.mentionsAny(TypeBinding[],int)",7,4,8
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.nullAnnotatedReadableName(CompilerOptions,boolean)",2,4,6
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.rank()",1,1,1
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.readableName()",4,4,6
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.resolve()",3,3,7
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.shortReadableName()",4,4,6
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.signature()",4,4,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.sourceName()",4,3,4
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.substituteInferenceVariable(InferenceVariable,TypeBinding)",2,9,9
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.superInterfaces()",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.superclass()",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.swapUnresolved(UnresolvedReferenceBinding,ReferenceBinding,LookupEnvironment)",1,6,7
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.toString()",5,6,7
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.typeVariable()",1,2,3
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.unannotated()",1,2,2
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.uncapture(Scope)",2,4,6
"org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.withoutToplevelNullAnnotation()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.AbstractCommentParser(Parser)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.commentParse()",6,41,105
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.consumeToken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.createFakeReference(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.createReturnStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getCurrentTokenType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getIndexPosition()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getLineNumber(int)",3,2,3
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.getTokenEndPosition()",2,2,2
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseArguments(Object)",26,14,36
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseHref()",14,19,33
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseHtmlTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseIdentifierTag(boolean)",2,3,3
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseMember(Object)",4,10,14
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseParam()",17,40,70
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseQualifiedName(boolean)",10,7,21
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseReference()",23,37,55
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseThrows()",3,5,6
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.peekChar()",1,9,12
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushIdentifier(boolean,boolean)",1,5,5
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushOnAstStack(Object,boolean)",2,6,6
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.pushText(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readChar()",1,9,12
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readToken()",1,4,4
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readTokenAndConsume()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.readTokenSafely()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.recordInheritedPosition(long)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.refreshInlineTagPosition(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.refreshReturnStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.setInlineTagStarted(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.syntaxRecoverQualifiedName(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.toString()",3,4,8
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.updateLineEnd()",3,3,3
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.verifyEndLine(int)",8,9,14
"org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.verifySpaceOrEndComment()",8,4,9
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.JavadocParser(Parser)",1,1,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.checkDeprecation(int)",9,8,14
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createArgumentReference(char[],int,boolean,Object,long[],long)",1,1,7
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createFieldReference(Object)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createMethodReference(Object,List)",9,14,17
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createReturnStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createTag()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.createTypeReference(int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.getParsedTypeDeclaration()",4,1,4
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseInheritDocTag()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseParam()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseReturn()",2,3,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseSimpleTag()",2,20,24
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseTag(int)",11,72,104
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseThrows()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushParamName(boolean)",6,8,12
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushSeeRef(Object)",3,3,6
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushText(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.pushThrowName(Object)",3,3,6
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.refreshInlineTagPosition(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.refreshReturnStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.JavadocParser.updateDocComment()",4,9,24
"org.eclipse.jdt.internal.compiler.parser.NLSTag.NLSTag(int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.NLSTag.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.Parser()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.Parser(ProblemReporter,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.annotateTypeReference(Wildcard)",1,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.annotationRecoveryCheckPoint(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.arrayInitializer(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.asi(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.atConflictScenario(int)",2,1,4
"org.eclipse.jdt.internal.compiler.parser.Parser.augmentTypeWithAdditionalDimensions(TypeReference,int,Annotation[][],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.automatonState()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.automatonWillShift(int,int)",3,4,7
"org.eclipse.jdt.internal.compiler.parser.Parser.base_check(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.blockReal()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFile(String,List)",1,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForCompliance(String,int,String[])",1,8,9
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForName(String,String)",1,7,10
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForReadableName(String,char[],char[],String[],String[])",1,6,7
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForTable(String,byte[])",1,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileForTable(String,char[])",1,2,5
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileOfByteFor(String,String,String[])",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileOfIntFor(String,String,String[])",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFileOfShortFor(String,String,String[])",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFilesForRecoveryTemplates(String,String,char[],char[],String[],char[],String[])",1,8,8
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFilesForStatementsRecoveryFilter(String,char[],char[],String[])",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.buildFilesFromLPG(String,String)",1,5,5
"org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState()",14,29,41
"org.eclipse.jdt.internal.compiler.parser.Parser.checkAndSetModifiers(int)",1,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.checkComment()",4,5,18
"org.eclipse.jdt.internal.compiler.parser.Parser.checkForDiamond(TypeReference)",1,7,9
"org.eclipse.jdt.internal.compiler.parser.Parser.checkNonNLSAfterBodyEnd(int)",1,2,5
"org.eclipse.jdt.internal.compiler.parser.Parser.classInstanceCreation(boolean)",1,5,8
"org.eclipse.jdt.internal.compiler.parser.Parser.computeQualifiedGenericsFromRightSide(TypeReference,int,Annotation[][])",1,10,19
"org.eclipse.jdt.internal.compiler.parser.Parser.computeReverseTable(char[],char[],String[])",5,1,6
"org.eclipse.jdt.internal.compiler.parser.Parser.concatExpressionLists()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.concatGenericsLists()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.concatNodeLists()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBound()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBound1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBoundList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAdditionalBoundList1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAllocationHeader()",3,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationAsModifier()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationName()",1,3,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclaration()",1,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclarationHeader()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclarationHeaderName()",1,7,13
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeDeclarationHeaderNameWithTypeParameters()",1,7,13
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeMemberDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeMemberDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAnnotationTypeMemberDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArgumentList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayAccess(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayCreationExpressionWithInitializer()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayCreationExpressionWithoutInitializer()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayCreationHeader()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeArrayTypeWithTypeArgumentsName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAssertStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAssignment()",3,1,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeAssignmentOperator(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBinaryExpression(int)",2,13,22
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBinaryExpressionWithName(int)",2,8,14
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBlock()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBlockStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeBlockStatements()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCaseLabel()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionLL1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionLL1WithBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithGenericsArray()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithNameArray()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithPrimitiveType()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCastExpressionWithQualifiedGenericsArray()",1,4,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCatchFormalParameter()",1,4,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCatchHeader()",5,1,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCatchType()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCatches()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyDeclaration()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassBodyopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassDeclaration()",6,5,11
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeader()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeaderExtends()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeaderImplements()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassHeaderName1()",1,6,10
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionQualified()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()",1,5,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassInstanceCreationExpressionWithTypeArguments()",1,5,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassOrInterface()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassOrInterfaceName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassTypeElt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassTypeList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConditionalExpression(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConditionalExpressionWithName(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorBlockStatements()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorBody()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorDeclaration()",5,10,18
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorHeader()",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorHeaderName()",3,4,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeConstructorHeaderNameWithTypeParameters()",3,4,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeCreateInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDefaultLabel()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDefaultModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDiet()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDimWithOrWithOutExpr()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDimWithOrWithOutExprs()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeDims()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeElidedLeftBraceAndReturn()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyAnnotationTypeMemberDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArgumentListopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyArrayInitializeropt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyBlockStatementsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyCatchesopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyClassBodyDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyDimsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyEnumDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyForInitopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyForUpdateopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyInterfaceMemberDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyInternalCompilationUnit()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyMemberValueArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyMemberValuePairsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyMethodHeaderDefaultValue()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyStatement()",4,13,14
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptySwitchBlock()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEmptyTypeDeclaration()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnhancedForStatement()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnhancedForStatementHeader()",1,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnhancedForStatementHeaderInit(boolean)",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterAnonymousClassBody(boolean)",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterInstanceCreationArgumentList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterMemberValue()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterMemberValueArrayInitializer()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterVariable()",3,13,15
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumBodyNoConstants()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumBodyWithConstants()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantHeader()",1,7,9
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantHeaderName()",3,3,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantNoClassBody()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstantWithClassBody()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumConstants()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumDeclaration()",5,4,10
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumHeader()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumHeaderName()",1,7,13
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnumHeaderNameWithTypeParameters()",1,7,13
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEqualityExpression(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeEqualityExpressionWithName(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitMemberValue()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitTryBlock()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitVariableWithInitialization()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExitVariableWithoutInitialization()",1,3,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExplicitConstructorInvocation(int,int)",2,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExplicitConstructorInvocationWithTypeArguments(int,int)",2,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExplicitThisParameter(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExpression()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeExpressionStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFieldAccess(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFieldDeclaration()",1,1,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeForInit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeForceNoDiet()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFormalParameter(boolean)",1,12,22
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFormalParameterList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeFormalParameterListopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericTypeArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericTypeNameArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeGenericTypeWithDiamond()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeIdentifierOrNew(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeImportDeclaration()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeImportDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpressionLL1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpressionLL1WithBounds()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInsideCastExpressionWithQualifiedGenerics()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInstanceOfExpression()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInstanceOfExpressionWithName()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceDeclaration()",1,5,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceHeader()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceHeaderExtends()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceHeaderName1()",1,6,10
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceMemberDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceMemberDeclarationsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceMethodDeclaration(boolean)",1,8,13
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInterfaceTypeList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInternalCompilationUnit()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInternalCompilationUnitWithTypes()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInvalidAnnotationTypeDeclaration()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInvalidConstructorDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInvalidConstructorDeclaration(boolean)",1,1,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInvalidEnumDeclaration()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInvalidInterfaceDeclaration()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeInvocationExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLambdaExpression()",1,3,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLambdaHeader()",1,5,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLeftParen()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLocalVariableDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeLocalVariableDeclarationStatement()",6,7,11
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMarkerAnnotation(boolean)",1,4,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValueArrayInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValueAsName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValuePair()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValuePairs()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMemberValues()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodBody()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodDeclaration(boolean,boolean)",1,9,13
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeader()",1,4,9
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderDefaultValue()",1,4,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderExtendedDims()",1,2,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderName(boolean)",1,5,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderNameWithTypeParameters(boolean)",1,6,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderRightParen()",7,9,16
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodHeaderThrowsClause()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationName()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationNameWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationPrimary()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationPrimaryWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodInvocationSuperWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeModifiers()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeModifiers2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeMultipleResources()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNameArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNestedLambda()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNestedMethod()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNestedType()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNonTypeUseName()",1,3,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeNormalAnnotation(boolean)",1,6,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOneDimLoop(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOneMoreTypeAnnotation()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOnlySynchronized()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOnlyTypeArguments()",1,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOnlyTypeArgumentsForCastExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeOpenBlock()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageComment()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageDeclarationName()",1,1,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePackageDeclarationNameWithModifiers()",1,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePostfixExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArray()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayNameSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayNameThis()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayPrimitiveArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayPrimitiveType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayThis()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimaryNoNewArrayWithName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimitiveArrayType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePrimitiveType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushCombineModifiers()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushLeftBrace()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushModifiersForHeader()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumePushRealModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeQualifiedName(boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecoveryMethodHeaderName()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecoveryMethodHeaderNameWithTypeParameters()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReduceImports()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceExpression(ReferenceExpression)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceExpressionGenericTypeForm()",1,4,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceExpressionPrimaryForm()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceExpressionSuperForm()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceExpressionTypeArgumentsAndTrunk(boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceExpressionTypeForm(boolean)",3,4,8
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeReferenceType3()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeResourceAsLocalVariableDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeResourceOptionalTrailingSemiColon(boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeResourceSpecification()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRestoreDiet()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRightParen()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(int)",2,486,969
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSimpleAssertStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleMemberAnnotation(boolean)",1,5,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleMemberAnnotationMemberValue()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleResource()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleStaticImportDeclarationName()",1,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSingleTypeImportDeclarationName()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementBreak()",3,1,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementBreakWithLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementCatch()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementContinue()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementContinueWithLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementDo()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementExpressionList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementFor()",1,4,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementIfNoElse()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementIfWithElse()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementLabel()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementReturn()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementSwitch()",1,3,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementSynchronized()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementThrow()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementTry(boolean,boolean)",1,3,7
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStatementWhile()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStaticImportOnDemandDeclarationName()",1,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStaticInitializer()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeStaticOnly()",1,1,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchBlock()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchBlockStatement()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchBlockStatements()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeSwitchLabels()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeToken(int)",2,7,69
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeAnnotation()",1,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgument()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentList3()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentReferenceType1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArgumentReferenceType2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeArguments()",1,2,4
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeElidedLambdaParameter(boolean)",1,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeHeaderNameWithTypeParameters()",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeImportOnDemandDeclarationName()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameter1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameter1WithExtends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameter1WithExtendsAndBounds()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterHeader()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterList()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterList1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterWithExtends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameterWithExtendsAndBounds()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeTypeParameters()",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeUnannotatableQualifiedName()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeUnaryExpression(int)",1,4,6
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeUnaryExpression(int,boolean)",1,3,5
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeUnionType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeUnionTypeAsClassType()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeVariableDeclaratorIdParameter()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeVariableDeclarators()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeVariableInitializers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard1()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard1WithBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard2()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard2WithBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard3()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcard3WithBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds1Extends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds1Super()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds2Extends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds2Super()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds3Extends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBounds3Super()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBoundsExtends()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardBoundsSuper()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeWildcardWithBounds()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeZeroAdditionalBounds()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.consumeZeroTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.containsComment(int,int)",4,1,5
"org.eclipse.jdt.internal.compiler.parser.Parser.convertToMethodDeclaration(ConstructorDeclaration,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.copyState(Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.createFieldDeclaration(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.createIntersectionCastTypeReference(TypeReference[])",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.createJavadocParser()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.createLocalDeclaration(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.createStringLiteral(char[],int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.currentRecoveryType()",3,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(ICompilationUnit,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.dispatchDeclarationInto(int)",3,6,17
"org.eclipse.jdt.internal.compiler.parser.Parser.dispatchDeclarationIntoEnumDeclaration(int)",3,8,19
"org.eclipse.jdt.internal.compiler.parser.Parser.endParse(int)",1,9,10
"org.eclipse.jdt.internal.compiler.parser.Parser.flushCommentsDefinedPriorTo(int)",6,4,13
"org.eclipse.jdt.internal.compiler.parser.Parser.getAnnotationType()",2,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.getAnnotationsOnDimensions(int)",1,4,5
"org.eclipse.jdt.internal.compiler.parser.Parser.getFirstToken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.getJavaDocPositions()",2,1,8
"org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(CompilationUnitDeclaration)",4,5,9
"org.eclipse.jdt.internal.compiler.parser.Parser.getNextCharacter(char[],int[])",2,9,11
"org.eclipse.jdt.internal.compiler.parser.Parser.getSymbol(String,String[],int[])",3,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(int)",1,9,15
"org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(int,int,int)",3,7,13
"org.eclipse.jdt.internal.compiler.parser.Parser.getUnspecifiedReference()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.getUnspecifiedReference(boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.getUnspecifiedReferenceOptimized()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.goForBlockStatementsOrCatchHeader()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForBlockStatementsopt()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForClassBodyDeclarations()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForExpression(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForFieldDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForGenericMethodDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForHeaders()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.goForImportDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForInitializer()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForMemberValue()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForMethodBody()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForPackageDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.goForTypeDeclaration()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.hasLeadingTagComment(char[],int)",11,1,15
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreExpressionAssignment()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.ignoreNextClosingBrace()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.in_symbol(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.initTables()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.initialize()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.initialize(boolean)",1,1,5
"org.eclipse.jdt.internal.compiler.parser.Parser.initializeScanner()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.isAssistParser()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.isIndirectlyInsideLambdaExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.jumpOverMethodBody()",1,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.jumpOverType()",1,4,9
"org.eclipse.jdt.internal.compiler.parser.Parser.markEnclosingMemberWithLocalOrFunctionalType(LocalTypeKind)",5,3,14
"org.eclipse.jdt.internal.compiler.parser.Parser.markEnclosingMemberWithLocalType()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.moveRecoveryCheckpoint()",4,2,7
"org.eclipse.jdt.internal.compiler.parser.Parser.nasi(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.newMessageSend()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.newMessageSendWithTypeArguments()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.newReferenceExpression()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.ntAction(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.optimizedConcatNodeLists()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.original_state(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.parse()",8,36,47
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ConstructorDeclaration,CompilationUnitDeclaration,boolean)",2,6,14
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(FieldDeclaration,TypeDeclaration,CompilationUnitDeclaration,char[])",2,1,4
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ICompilationUnit,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(ICompilationUnit,CompilationResult,int,int)",1,6,8
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(Initializer,TypeDeclaration,CompilationUnitDeclaration)",2,2,9
"org.eclipse.jdt.internal.compiler.parser.Parser.parse(MethodDeclaration,CompilationUnitDeclaration)",5,3,12
"org.eclipse.jdt.internal.compiler.parser.Parser.parseClassBodyDeclarations(char[],int,int,CompilationUnitDeclaration)",9,13,25
"org.eclipse.jdt.internal.compiler.parser.Parser.parseExpression(char[],int,int,CompilationUnitDeclaration,boolean)",2,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.parseLambdaExpression(char[],int,int,CompilationUnitDeclaration,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.parseMemberValue(char[],int,int,CompilationUnitDeclaration)",2,1,3
"org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(ReferenceContext,int,int,TypeDeclaration[],CompilationUnitDeclaration)",1,1,5
"org.eclipse.jdt.internal.compiler.parser.Parser.persistLineSeparatorPositions()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.prepareForBlockStatements()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.problemReporter()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushIdentifier()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.pushIdentifier(char[],long)",1,4,7
"org.eclipse.jdt.internal.compiler.parser.Parser.pushIdentifier(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnAstLengthStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnAstStack(ASTNode)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnExpressionStack(Expression)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnExpressionStackLengthStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnGenericsIdentifiersLengthStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnGenericsLengthStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnGenericsStack(ASTNode)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnIntStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnRealBlockStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnTypeAnnotationLengthStack(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Parser.pushOnTypeAnnotationStack(Annotation)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.Parser.readByteTable(String)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.readLongTable(String)",5,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.readNameTable(String)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.readReadableNameTable(String)",1,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.readTable(String)",5,3,6
"org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements()",6,11,16
"org.eclipse.jdt.internal.compiler.parser.Parser.recoveryExitFromVariable()",1,5,7
"org.eclipse.jdt.internal.compiler.parser.Parser.recoveryTokenCheck()",2,4,17
"org.eclipse.jdt.internal.compiler.parser.Parser.rejectIllegalLeadingTypeAnnotations(TypeReference)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Parser.rejectIllegalTypeAnnotations(TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.rejectIllegalTypeAnnotations(TypeReference,boolean)",1,7,9
"org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrors(boolean,int)",3,2,5
"org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrorsForSkippedMethod(TypeDeclaration[])",1,12,12
"org.eclipse.jdt.internal.compiler.parser.Parser.resetModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.resetStacks()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.resumeAfterRecovery()",6,4,7
"org.eclipse.jdt.internal.compiler.parser.Parser.resumeOnSyntaxError()",5,4,9
"org.eclipse.jdt.internal.compiler.parser.Parser.setMethodsFullRecovery(boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.setStatementsRecovery(boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.tAction(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.toString()",1,2,8
"org.eclipse.jdt.internal.compiler.parser.Parser.typeElidedArgument()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.updateRecoveryState()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Parser.updateSourceDeclarationParts(int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Parser.updateSourcePosition(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.RecoveredAnnotation(int,int,int,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.add(TypeDeclaration,int)",2,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.addAnnotation(Annotation,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.addAnnotationName(int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.resetPendingModifiers()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.setKind(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.sourceEnd()",3,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.toString(int)",2,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.updateFromParserState()",2,7,18
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.updateOnClosingBrace(int,int)",3,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.updatedAnnotationReference()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.RecoveredBlock(Block,RecoveredElement,int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(AbstractMethodDeclaration,int)",3,3,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(Block,int)",3,4,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(FieldDeclaration,int)",3,6,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(LocalDeclaration,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(LocalDeclaration,int,boolean)",6,3,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(Statement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(Statement,int,boolean)",4,2,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(TypeDeclaration,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.add(TypeDeclaration,int,boolean)",4,3,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.addAnnotationName(int,int,int,int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.addModifier(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.attach(RecoveredStatement)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.attachPendingModifiers(RecoveredAnnotation[],int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.resetPendingModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.toString(int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateOnClosingBrace(int,int)",4,4,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateOnOpeningBrace(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updatedBlock(int,Set)",9,3,29
"org.eclipse.jdt.internal.compiler.parser.RecoveredBlock.updatedStatement(int,Set)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.RecoveredElement(RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.RecoveredElement(RecoveredElement,int,Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(AbstractMethodDeclaration,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(Block,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(FieldDeclaration,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(ImportReference,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(LocalDeclaration,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(Statement,int)",5,1,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.add(TypeDeclaration,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.addAnnotationName(int,int,int,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.addBlockStatement(RecoveredBlock)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.addModifier(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.depth()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.enclosingInitializer()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.enclosingMethod()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.enclosingType()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.parser()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.preserveEnclosingBlocks()",1,1,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.previousAvailableLineEnd(int)",6,1,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.resetPendingModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.tabString(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.toString(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.topElement()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.type()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateBodyStart(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateFromParserState()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateOnClosingBrace(int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateOnOpeningBrace(int,int)",2,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateSourceEndIfNecessary(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredElement.updateSourceEndIfNecessary(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.RecoveredField(FieldDeclaration,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.RecoveredField(FieldDeclaration,RecoveredElement,int,Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.add(FieldDeclaration,int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.add(LocalDeclaration,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.add(Statement,int)",2,2,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.add(TypeDeclaration,int)",2,4,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.attach(RecoveredAnnotation[],int,int,int)",4,1,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.toString(int)",1,5,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateOnClosingBrace(int,int)",5,6,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateOnOpeningBrace(int,int)",5,2,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredField.updatedFieldDeclaration(int,Set)",1,10,22
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.RecoveredImport(ImportReference,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.toString(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredImport.updatedImportReference()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.RecoveredInitializer(FieldDeclaration,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.RecoveredInitializer(FieldDeclaration,RecoveredElement,int,Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(Block,int)",4,2,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(FieldDeclaration,int)",5,6,9
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(LocalDeclaration,int)",3,3,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(Statement,int)",3,3,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.add(TypeDeclaration,int)",4,9,12
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.addAnnotationName(int,int,int,int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.addModifier(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.resetPendingModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.toString(int)",1,4,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updateOnClosingBrace(int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updateOnOpeningBrace(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updateSourceEndIfNecessary(int,int)",1,5,9
"org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.updatedFieldDeclaration(int,Set)",1,2,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.RecoveredLocalVariable(LocalDeclaration,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.add(Statement,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.attach(RecoveredAnnotation[],int,int,int)",4,1,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.toString(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateOnClosingBrace(int,int)",3,2,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateOnOpeningBrace(int,int)",2,1,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable.updatedStatement(int,Set)",1,4,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.RecoveredMethod(AbstractMethodDeclaration,RecoveredElement,int,Parser)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(Block,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(Block,int,boolean)",4,3,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(FieldDeclaration,int)",5,8,10
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(LocalDeclaration,int)",4,6,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(Statement,int)",4,6,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.add(TypeDeclaration,int)",6,10,14
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.addAnnotationName(int,int,int,int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.addModifier(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.attach(RecoveredAnnotation[],int,int,int)",4,1,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.attach(TypeParameter[],int)",4,1,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.bodyStartsAtHeaderEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.resetPendingModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.toString(int)",1,6,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateBodyStart(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateFromParserState()",7,14,31
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateOnClosingBrace(int,int)",6,6,8
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateOnOpeningBrace(int,int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updateSourceEndIfNecessary(int,int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.updatedMethodDeclaration(int,Set)",1,9,18
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.RecoveredStatement(Statement,RecoveredElement,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.toString(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updateOnClosingBrace(int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredStatement.updatedStatement(int,Set)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.RecoveredType(TypeDeclaration,RecoveredElement,int)",1,3,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(AbstractMethodDeclaration,int)",3,6,10
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(Block,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(FieldDeclaration,int)",4,6,11
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(TypeDeclaration,int)",5,7,10
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.add(TypeParameter[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.addAnnotationName(int,int,int,int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.addModifier(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.annotationsConsumed(Annotation[])",4,1,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.attach(RecoveredAnnotation[],int,int,int)",4,1,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.bodyEnd()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.bodyStartsAtHeaderEnd()",4,1,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.enclosingType()",3,1,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.lastMemberEnd()",1,1,10
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.name()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.resetPendingModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.toString(int)",1,10,10
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateBodyStart(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateFromParserState()",1,7,19
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateOnClosingBrace(int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateOnOpeningBrace(int,int)",3,4,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updatedStatement(int,Set)",3,1,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredType.updatedTypeDeclaration(int,Set)",13,27,61
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.RecoveredUnit(CompilationUnitDeclaration,int,Parser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(AbstractMethodDeclaration,int)",2,3,6
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(FieldDeclaration,int)",2,2,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(ImportReference,int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.add(TypeDeclaration,int)",4,6,7
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.addAnnotationName(int,int,int,int)",1,3,3
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.addModifier(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.parseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.resetPendingModifiers()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.sourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.toString(int)",1,5,5
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.updateParseTree()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.updateSourceEndIfNecessary(int,int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveredUnit.updatedCompilationUnitDeclaration()",1,7,11
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.RecoveryScanner(Scanner,RecoveryScannerData)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.RecoveryScanner(boolean,boolean,long,long,char[][],char[][],boolean,RecoveryScannerData)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.getCurrentIdentifierSource()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.getCurrentTokenSource()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.getCurrentTokenSourceString()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.getData()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.getNextToken0()",11,4,19
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.insertToken(int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.insertTokenAhead(int,int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.insertTokens(int[],int,int)",3,3,6
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.isFakeToken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.isInsertedToken()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.isPrecededByRemovedToken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.isReplacedToken()",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.removeTokens(int,int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.replaceTokens(int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.replaceTokens(int[],int,int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.reverse(int[])",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.setData(RecoveryScannerData)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.setPendingTokens(int[])",1,1,1
"org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData.removeUnused()",1,1,10
"org.eclipse.jdt.internal.compiler.parser.Scanner.Goal.Goal(int,int[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.Goal.followSetOfCast()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.Goal.hasBeenReached(int,int)",5,1,5
"org.eclipse.jdt.internal.compiler.parser.Scanner.Scanner()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.Scanner(boolean,boolean,boolean,long,char[][],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.Scanner(boolean,boolean,boolean,long,long,char[][],char[][],boolean)",1,5,7
"org.eclipse.jdt.internal.compiler.parser.Scanner.VanguardParser.VanguardParser(VanguardScanner)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.VanguardParser.parse(Goal)",8,7,10
"org.eclipse.jdt.internal.compiler.parser.Scanner.VanguardParser.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.VanguardScanner.VanguardScanner(long,long)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.VanguardScanner.getNextToken()",2,4,6
"org.eclipse.jdt.internal.compiler.parser.Scanner.atEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.atTypeAnnotation()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.checkTaskTag(int,int)",21,14,41
"org.eclipse.jdt.internal.compiler.parser.Scanner.consumeDigits(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.consumeDigits(int,boolean)",4,2,5
"org.eclipse.jdt.internal.compiler.parser.Scanner.consumeDigits0(int,int,int,boolean)",6,3,8
"org.eclipse.jdt.internal.compiler.parser.Scanner.disambiguatedToken(int)",9,8,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.extractInt(char[],int,int)",4,2,14
"org.eclipse.jdt.internal.compiler.parser.Scanner.fastForward(Statement)",7,3,10
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentIdentifierSource()",9,8,9
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentStringLiteral()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenEndPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenSource()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenSourceString()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenStartPosition()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getCurrentTokenString()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getIdentityComparisonLines()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineEnd(int)",5,1,6
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineEnds()",2,1,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineNumber(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getLineStart(int)",5,1,6
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNLSTags()",2,2,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextChar()",1,3,6
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextChar(char)",5,3,9
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextChar(char,char)",5,3,11
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsDigit()",5,3,9
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsDigit(int)",5,3,9
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsJavaIdentifierPart()",9,6,17
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharAsJavaIdentifierPartWithBoundCheck()",9,7,17
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextCharWithBoundChecks()",4,5,8
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextToken()",3,2,7
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextToken0()",120,82,221
"org.eclipse.jdt.internal.compiler.parser.Scanner.getNextUnicodeChar()",6,9,14
"org.eclipse.jdt.internal.compiler.parser.Scanner.getRawTokenSource()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getRawTokenSourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getSource()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.getVanguardParser()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.internalScanIdentifierOrKeyword(int,int,char[])",139,15,324
"org.eclipse.jdt.internal.compiler.parser.Scanner.isAtAssistIdentifier()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.isFirstTag()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.isIdentifier(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.isKeyword(int)",3,2,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.isLiteral(int)",3,2,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.jumpOverMethodBody()",25,56,121
"org.eclipse.jdt.internal.compiler.parser.Scanner.jumpOverUnicodeWhiteSpace()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.maybeAtEllipsisAnnotationsStart()",4,2,4
"org.eclipse.jdt.internal.compiler.parser.Scanner.maybeAtLambdaOrCast()",3,2,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.maybeAtReferenceExpression()",4,3,6
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource1()",28,2,28
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource2()",5,1,8
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource3()",5,1,10
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource4()",5,1,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource5()",5,1,14
"org.eclipse.jdt.internal.compiler.parser.Scanner.optimizedCurrentTokenSource6()",5,1,16
"org.eclipse.jdt.internal.compiler.parser.Scanner.parseTags()",2,9,15
"org.eclipse.jdt.internal.compiler.parser.Scanner.pushLineSeparator()",6,6,13
"org.eclipse.jdt.internal.compiler.parser.Scanner.pushUnicodeLineSeparator()",1,1,4
"org.eclipse.jdt.internal.compiler.parser.Scanner.recordComment(int)",2,3,4
"org.eclipse.jdt.internal.compiler.parser.Scanner.resetTo(int,int)",1,1,4
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanEscapeCharacter()",4,7,20
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanIdentifier()",16,13,27
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanIdentifierOrKeyword()",9,6,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanIdentifierOrKeywordWithBoundCheck()",9,6,12
"org.eclipse.jdt.internal.compiler.parser.Scanner.scanNumber(boolean)",55,45,95
"org.eclipse.jdt.internal.compiler.parser.Scanner.setActiveParser(ConflictedParser)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.setSource(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.Scanner.setSource(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.setSource(char[],CompilationResult)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.toString()",4,4,8
"org.eclipse.jdt.internal.compiler.parser.Scanner.toStringAction(int)",107,10,107
"org.eclipse.jdt.internal.compiler.parser.Scanner.ungetToken(int)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.Scanner.unicodeInitializeBuffer(int)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.unicodeStore()",1,2,3
"org.eclipse.jdt.internal.compiler.parser.Scanner.unicodeStore(char)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.digit(char,int)",10,2,15
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.getHexadecimalValue(char)",18,2,18
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.getNumericValue(char)",5,2,5
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.initializeTable()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.initializeTable17()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.initializeTable18()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.initializeTables(String)",1,22,22
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isBitSet(long[],int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isDigit(char)",3,1,3
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierPart(char)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierPart(long,char)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierPart(long,char,char)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierPart(long,int)",15,18,18
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierStart(char)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierStart(long,char)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierStart(long,char,char)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierStart(long,int)",12,15,15
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isLetter(char)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isLetterOrDigit(char)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isLowerCase(char)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isUpperCase(char)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isWhitespace(char)",2,1,2
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.toCodePoint(char,char)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.toLowerCase(char)",4,1,4
"org.eclipse.jdt.internal.compiler.parser.ScannerHelper.toUpperCase(char)",4,1,4
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.SourceTypeConverter(int,ProblemReporter)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.buildCompilationUnit(ISourceType[],int,ProblemReporter,CompilationResult)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(IJavaElement,FieldDeclaration,CompilationResult)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(ISourceType[],CompilationResult)",4,7,11
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(InitializerElementInfo,CompilationResult)",1,3,4
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceField,TypeDeclaration,CompilationResult)",1,9,12
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceMethod,SourceMethodElementInfo,CompilationResult)",1,18,26
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convert(SourceType,CompilationResult)",2,24,40
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.convertAnnotations(IAnnotatable)",1,5,6
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.getSource()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.parseMemberValue(char[])",1,1,2
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.TypeConverter(ProblemReporter,char)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.addIdentifiers(String,int,int,int,ArrayList)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.createImportReference(String[],int,int,boolean,int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.createTypeParameter(char[],char[][],int,int)",1,5,5
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.createTypeReference(String,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.createTypeReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.createTypeReference(char[],int,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.decodeType(String,int,int,int)",27,12,58
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.decodeType2(char[],int,int,int,boolean)",9,6,25
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.decodeType3(char[],int,int,int,int,int,int,int,ArrayList)",7,11,18
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.decodeTypeArguments(String,int,int,int)",4,2,4
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.decodeTypeArguments(char[],int,int,int,boolean)",4,2,4
"org.eclipse.jdt.internal.compiler.parser.TypeConverter.extractIdentifiers(String,int,int,int)",1,4,4
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.DiagnoseParser(Parser,int,int,int,CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.DiagnoseParser(Parser,int,int,int,int[],int[],int[],CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.PrimaryRepairInfo.PrimaryRepairInfo()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.PrimaryRepairInfo.copy()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.RepairCandidate.RepairCandidate()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.StateInfo.StateInfo(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.atConflictScenario(int)",1,4,4
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.checkPrimaryDistance(int[],int,PrimaryRepairInfo)",1,14,45
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.diagnoseParse(boolean)",7,19,35
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.displayEscapeCharacters(char[],int,int)",1,4,4
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.errorRecovery(int,boolean)",7,4,9
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.getNTermTemplate(int)",2,2,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.getNtermIndex(int,int,int)",4,4,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.getTermIndex(int[],int,int,int)",4,6,13
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.mergeCandidate(int,int)",4,3,4
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.misplacementRecovery(int[],int,int,SecondaryRepairInfo,boolean)",1,2,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.misspell(int,int)",3,3,36
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.parseCheck(int[],int,int,int)",15,17,28
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.primaryDiagnosis(PrimaryRepairInfo)",3,14,16
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.primaryPhase(int)",5,8,25
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.problemReporter()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reallocateStacks()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportError(int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportError(int,int,int,int,int)",1,2,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportPrimaryError(int,int,int,int)",2,50,65
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.reportSecondaryError(int,int,int,int,int)",2,32,45
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.scopeTrial(int[],int,PrimaryRepairInfo)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.scopeTrialCheck(int[],int,PrimaryRepairInfo,int)",14,14,30
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryCheck(int[],int,int,int)",4,2,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryDiagnosis(SecondaryRepairInfo)",2,6,6
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryPhase(int)",3,14,32
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.secondaryRecovery(int[],int,int,SecondaryRepairInfo,boolean)",1,4,18
"org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.LexStream(int,Scanner,int[],int[],int[],int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.Token.toString()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.afterEol(int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.awaitingColonColon()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.badtoken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.end(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.flags(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.getToken()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.isInsideStream(int)",4,1,5
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.kind(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.line(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.name(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.next(int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.previous(int)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.readTokenFromScanner()",1,4,12
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.reset(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.start(int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.toString()",1,7,8
"org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream.token(int)",5,4,7
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.RangeResult()",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.addInterval(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.addInterval(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.compare(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.getRanges()",1,2,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.RangeResult.quickSort(int[],int[],int[],int,int)",1,4,7
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.computeDietRange(TypeDeclaration[])",2,2,3
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.computeDietRange0(TypeDeclaration[],RangeResult)",1,11,14
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.containsErrorInSignature(AbstractMethodDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.containsIgnoredBody(AbstractMethodDeclaration)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation(CompilationResult,CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation(CompilationResult,Throwable)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.AbortCompilation(boolean,RuntimeException)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.getKey()",1,2,2
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.getMessage()",1,4,7
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.updateContext(ASTNode,CompilationResult)",3,2,4
"org.eclipse.jdt.internal.compiler.problem.AbortCompilation.updateContext(InvocationSite,CompilationResult)",3,2,4
"org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit.AbortCompilationUnit(CompilationResult,CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit.AbortCompilationUnit(CompilationResult,IOException,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortMethod.AbortMethod(CompilationResult,CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.AbortType.AbortType(CompilationResult,CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.DefaultProblem(char[],String,int,String[],int,int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.errorReportSource(char[])",6,3,19
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getArguments()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getCategoryID()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getID()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getInternalCategoryMessage()",17,2,17
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getMarkerType()",1,1,2
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getMessage()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getOriginatingFileName()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceColumnNumber()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceEnd()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceLineNumber()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getSourceStart()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.isError()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.isInfo()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.isWarning()",1,1,2
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setOriginatingFileName(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setSourceEnd(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setSourceLineNumber(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setSourceStart(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblem.toString()",1,1,4
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.DefaultProblemFactory()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.DefaultProblemFactory(Locale)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.createProblem(char[],int,String[],String[],int,int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.createProblem(char[],int,String[],int,String[],int,int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.getLocale()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.getLocalizedMessage(int,String[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.getLocalizedMessage(int,int,String[])",9,8,13
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.keyFromID(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.loadMessageTemplates(Locale)",1,3,5
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.localizedMessage(CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.setLocale(Locale)",2,3,4
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.ProblemHandler(IErrorHandlingPolicy,CompilerOptions,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.computeSeverity(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.createProblem(char[],int,String[],String[],int,int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.createProblem(char[],int,String[],int,String[],int,int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.handle(int,String[],String[],int,int,ReferenceContext,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.handle(int,String[],int,String[],int,int,int,ReferenceContext,CompilationResult)",14,19,28
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.record(CategorizedProblem,CompilationResult,ReferenceContext,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.resumeTempErrorHandlingPolicy(IErrorHandlingPolicy)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.suspendTempErrorHandlingPolicy()",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemHandler.switchErrorHandlingPolicy(IErrorHandlingPolicy)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.ProblemReporter(IErrorHandlingPolicy,CompilerOptions,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abortDueToInternalError(String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abortDueToInternalError(String,ASTNode)",1,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodCannotBeOverridden(SourceTypeBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodInAbstractClass(SourceTypeBinding,AbstractMethodDeclaration)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodInConcreteClass(SourceTypeBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodMustBeImplemented(SourceTypeBinding,MethodBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodMustBeImplemented(SourceTypeBinding,MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.abstractMethodNeedingNoBody(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.alreadyDefinedLabel(char[],ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotatedTypeName(TypeBinding,char[][])",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationCannotOverrideMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationCircularity(TypeBinding,TypeBinding,TypeReference)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationMembersCannotHaveParameters(AnnotationMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationMembersCannotHaveTypeParameters(AnnotationMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeDeclarationCannotHaveConstructor(ConstructorDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeDeclarationCannotHaveSuperclass(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeDeclarationCannotHaveSuperinterfaces(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationTypeUsedAsSuperinterface(SourceTypeBinding,TypeReference,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationValueMustBeAnnotation(TypeBinding,char[],Expression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationValueMustBeArrayInitializer(TypeBinding,char[],Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationValueMustBeClassLiteral(TypeBinding,char[],Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.annotationValueMustBeConstant(TypeBinding,char[],Expression,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.anonymousClassCannotExtendFinalClass(TypeReference,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.argumentTypeCannotBeVoid(ASTNode,Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.argumentTypeCannotBeVoidArray(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.arrayConstantsOnlyInArrayInitializers(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.arrayReferencePotentialNullReference(ArrayReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.assignmentHasNoEffect(AbstractVariableDeclaration,char[])",2,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.assignmentHasNoEffect(Assignment,char[])",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.attemptToReturnNonVoidExpression(ReturnStatement,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.attemptToReturnVoidValue(ReturnStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.autoManagedResourcesNotBelow17(LocalDeclaration[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.autoboxing(Expression,TypeBinding,TypeBinding)",2,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.boundCannotBeArray(ASTNode,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.boundMustBeAnInterface(ASTNode,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.bytecodeExceeds64KLimit(AbstractMethodDeclaration)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.bytecodeExceeds64KLimit(LambdaExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.bytecodeExceeds64KLimit(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAllocateVoidArray(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAssignToFinalField(FieldBinding,ASTNode)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAssignToFinalLocal(LocalVariableBinding,ASTNode)",1,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotAssignToFinalOuterLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotDefineDimensionsAndInitializer(ArrayAllocationExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotDireclyInvokeAbstractMethod(ASTNode,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotExtendEnum(SourceTypeBinding,TypeReference,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotImplementIncompatibleNullness(MethodBinding,MethodBinding,boolean)",1,3,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotImportPackage(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotInferElidedTypes(AllocationExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotInstantiate(Expression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotInvokeSuperConstructorInEnum(ExplicitConstructorCall,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotReadSource(CompilationUnitDeclaration,AbortCompilationUnit,boolean)",2,4,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotReferToNonEffectivelyFinalOuterLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotReferToNonFinalOuterLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotReturnInInitializer(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotThrowNull(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotThrowType(ASTNode,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotUseQualifiedEnumConstantInCaseLabel(Reference,FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotUseSuperInCodeSnippet(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.cannotUseSuperInJavaLangObject(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.caseExpressionMustBeConstant(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.classExtendFinalClass(SourceTypeBinding,TypeReference,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.codeSnippetMissingClass(String,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.codeSnippetMissingMethod(String,String,String,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.comparingIdenticalExpressions(Expression)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.computeSeverity(int)",12,3,21
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.conditionalArgumentsIncompatibleTypes(ConditionalExpression,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.conflictingImport(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.conflictingInheritedNullAnnotations(ASTNode,boolean,MethodBinding,boolean,MethodBinding)",1,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.conflictingNullAnnotations(MethodBinding,ASTNode,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.constantOutOfRange(Literal,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.constructedArrayIncompatible(ReferenceExpression,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.containerAnnotationTypeHasNonDefaultMembers(ASTNode,ReferenceBinding,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.containerAnnotationTypeHasShorterRetention(ASTNode,ReferenceBinding,String,ReferenceBinding,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.containerAnnotationTypeHasWrongValueType(ASTNode,ReferenceBinding,ReferenceBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.containerAnnotationTypeMustHaveValue(ASTNode,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.contradictoryNullAnnotations(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.contradictoryNullAnnotations(Annotation[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.contradictoryNullAnnotations(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.contradictoryNullAnnotationsInferred(MethodBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.contradictoryNullAnnotationsInferred(MethodBinding,int,int,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.contradictoryNullAnnotationsOnBounds(Annotation,long)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.corruptedSignature(TypeBinding,char[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.danglingReference(ReferenceExpression,TypeBinding,char[],TypeBinding[])",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.defaultMethodOverridesObjectMethod(MethodBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.defaultMethodsNotBelow18(MethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.defaultModifierIllegallySpecified(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedField(FieldBinding,ASTNode)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedMethod(MethodBinding,ASTNode)",2,2,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedType(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.deprecatedType(TypeBinding,ASTNode,int)",3,1,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.dereferencingNullableExpression(Expression)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.dereferencingNullableExpression(long,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.descriptorHasInvisibleType(FunctionalExpression,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.diamondNotBelow17(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.diamondNotBelow17(ASTNode,int)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.diamondNotWithAnoymousClasses(TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.diamondNotWithExplicitTypeArguments(TypeReference[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.disallowedTargetForAnnotation(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.disallowedTargetForContainerAnnotation(Annotation,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.disallowedThisParameter(Receiver)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateAnnotation(Annotation,long)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateAnnotationValue(TypeBinding,MemberValuePair)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateBoundInIntersectionCast(TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateBounds(ASTNode,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateCase(CaseStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateDefaultCase(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateEnumSpecialMethod(SourceTypeBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateFieldInType(SourceTypeBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateImport(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateInheritedMethods(SourceTypeBinding,MethodBinding,MethodBinding,boolean)",4,3,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateInitializationOfBlankFinalField(FieldBinding,Reference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateInitializationOfFinalLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateMethodInType(AbstractMethodDeclaration,boolean,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForField(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForMethod(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateModifierForVariable(LocalDeclaration,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateNestedType(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateSuperinterface(SourceTypeBinding,TypeReference,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateTargetInTargetAnnotation(TypeBinding,NameReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateTypeParameterInType(TypeParameter)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.duplicateTypes(CompilationUnitDeclaration,TypeDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.emptyControlFlowStatement(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.enumAbstractMethodMustBeImplemented(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.enumConstantMustImplementAbstractMethod(AbstractMethodDeclaration,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.enumConstantsCannotBeSurroundedByParenthesis(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.enumStaticFieldUsedDuringInitialization(FieldBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.enumSwitchCannotTargetField(Reference,FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.errorNoMethodFor(Expression,TypeBinding,char[],TypeBinding[])",1,3,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.errorNoMethodFor(MessageSend,TypeBinding,TypeBinding[])",1,3,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.errorNoSuperInInterface(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.errorThisSuperInStatic(ASTNode)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.excludeDueToAnnotation(Annotation[],int)",7,2,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.explicitlyClosedAutoCloseable(FakedTrackingVariable)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.explitAnnotationTargetRequired(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.expressionNonNullComparison(Expression,boolean)",15,11,29
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.expressionNullReference(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.expressionPotentialNullReference(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.expressionShouldBeAVariable(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.fakeReachable(ASTNode)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.fieldHiding(FieldDeclaration,Binding)",8,16,20
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.fieldsOrThisBeforeConstructorInvocation(ASTNode)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.finalMethodCannotBeOverridden(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.finalVariableBound(TypeVariableBinding,TypeReference)",3,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.finallyMustCompleteNormally(Block)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.findAnnotation(Annotation[],int)",4,1,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forbiddenReference(FieldBinding,ASTNode,byte,String,int)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forbiddenReference(MethodBinding,ASTNode,byte,String,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forbiddenReference(TypeBinding,ASTNode,byte,String,int)",3,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forwardReference(Reference,int,FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.forwardTypeVariableReference(ASTNode,TypeVariableBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.genericInferenceError(String,InvocationSite)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.genericInferenceProblem(String,InvocationSite,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.genericTypeCannotExtendThrowable(TypeDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.getElaborationId(int,byte)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.getIrritant(int)",76,2,76
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.getProblemCategory(int,int)",21,3,21
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],String[],int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],String[],int,int,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],String[],int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(int,String[],int,String[],int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hiddenCatchBlock(ReferenceBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hierarchyCircularity(SourceTypeBinding,ReferenceBinding,TypeReference)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hierarchyCircularity(TypeVariableBinding,ReferenceBinding,TypeReference)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.hierarchyHasProblems(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illFormedParameterizationOfFunctionalInterface(FunctionalExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalAbstractModifierCombinationForMethod(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalAbstractModifierCombinationForMethod(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalAccessFromTypeVariable(TypeVariableBinding,ASTNode)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalAnnotationForBaseType(Annotation,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalAnnotationForBaseType(TypeReference,Annotation[],long)",1,1,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalArrayOfUnionType(char[],TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalArrayTypeInIntersectionCast(TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalClassLiteralForTypeVariable(TypeVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalExtendedDimensions(AnnotationMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalExtendedDimensions(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalGenericArray(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalInstanceOfGenericType(TypeBinding,ASTNode)",2,7,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalLocalTypeDeclaration(TypeDeclaration)",2,2,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierCombinationFinalAbstractForClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierCombinationFinalVolatileForField(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierCombinationForInterfaceMethod(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationField(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationMember(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationMemberType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForAnnotationType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForEnum(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForEnumConstant(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForEnumConstructor(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForField(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForInterface(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForInterfaceField(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForInterfaceMethod(AbstractMethodDeclaration,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForLocalClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMemberClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMemberEnum(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMemberInterface(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForMethod(AbstractMethodDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForVariable(LocalDeclaration,boolean)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifiers(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifiersForElidedType(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalParameterRedefinition(Argument,ReferenceBinding,TypeBinding)",4,1,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalPrimitiveOrArrayTypeForEnclosingInstance(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalQualifiedParameterizedTypeAllocation(TypeReference,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalQualifierForExplicitThis(Receiver,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalQualifierForExplicitThis2(Receiver)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalRedefinitionToNonNullParameter(Argument,ReferenceBinding,char[][])",4,2,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalReturnRedefinition(ASTNode,MethodBinding,boolean,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalReturnRedefinition(AbstractMethodDeclaration,MethodBinding,char[][])",1,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalSourceLevelForThis(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalStaticModifierForMemberType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalSuperAccess(TypeBinding,TypeBinding,ASTNode)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalSuperCallBypassingOverride(InvocationSite,MethodBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalThis(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalThisDeclaration(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalTypeAnnotationsInStaticMemberAccess(Annotation,Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalTypeForExplicitThis(Receiver,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalUsageOfQualifiedTypeReference(QualifiedTypeReference)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalUsageOfTypeAnnotations(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalUsageOfWildcard(TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalUseOfUnderscoreAsAnIdentifier(int,int,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVararg(Argument,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVarargInLambda(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierCombinationForField(ReferenceBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierCombinationForMemberType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierCombinationForMethod(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVisibilityModifierForInterfaceMemberType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalVoidExpression(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.implicitObjectBoundNoNullDefault(TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.importProblem(ImportReference,Binding)",5,5,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incompatibleExceptionInThrowsClause(SourceTypeBinding,MethodBinding,MethodBinding,ReferenceBinding)",1,3,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incompatibleReturnType(MethodBinding,MethodBinding)",1,8,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incompatibleReturnType(ReferenceExpression,MethodBinding,TypeBinding)",1,4,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectArityForParameterizedType(ASTNode,TypeBinding,TypeBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectArityForParameterizedType(ASTNode,TypeBinding,TypeBinding[],int)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectLocationForNonEmptyDimension(ArrayAllocationExpression,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.incorrectSwitchType(Expression,TypeBinding)",1,5,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.indirectAccessToStaticField(ASTNode,FieldBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.indirectAccessToStaticMethod(ASTNode,MethodBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedDefaultMethodConflictsWithOtherInherited(SourceTypeBinding,MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodReducesVisibility(SourceTypeBinding,MethodBinding,MethodBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodReducesVisibility(TypeParameter,MethodBinding,MethodBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodReducesVisibility(int,int,MethodBinding,MethodBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodsHaveIncompatibleReturnTypes(ASTNode,MethodBinding[],int)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodsHaveIncompatibleReturnTypes(SourceTypeBinding,MethodBinding[],int,boolean[])",3,3,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.inheritedMethodsHaveNameClash(SourceTypeBinding,MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.initializerMustCompleteNormally(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.innerTypesCannotDeclareStaticInitializers(ReferenceBinding,Initializer)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.interfaceCannotHaveConstructors(ConstructorDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.interfaceCannotHaveInitializers(char[],FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.internalAnnotatedTypeName(char[],char[],int)",1,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.intersectionCastNotBelow18(TypeReference[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidAnnotationMemberType(MethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidArrayConstructorReference(ReferenceExpression,TypeBinding,TypeBinding[])",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidBreak(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidConstructor(Statement,MethodBinding)",4,9,28
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidContinue(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidEnclosingType(Expression,TypeBinding,ReferenceBinding)",3,3,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidExplicitConstructorCall(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidExpressionAsStatement(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidField(FieldReference,TypeBinding)",4,3,12
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidField(NameReference,FieldBinding)",6,4,14
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidField(QualifiedNameReference,FieldBinding,int,TypeBinding)",5,4,12
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidFileNameForPackageAnnotations(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidMethod(MessageSend,MethodBinding,Scope)",8,12,32
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidNullToSynchronize(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidOperator(BinaryExpression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidOperator(CompoundAssignment,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidOperator(UnaryExpression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidParameterizedExceptionType(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidParenthesizedExpression(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidType(ASTNode,TypeBinding)",21,14,39
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeArguments(TypeReference[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeForCollection(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeForCollectionTarget14(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeToSynchronize(Expression,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidTypeVariableAsException(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUnaryExpression(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfAnnotation(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfAnnotationDeclarations(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfEnumDeclarations(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfForeachStatements(LocalDeclaration,Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfStaticImports(ImportReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfTypeAnnotations(Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfTypeArguments(TypeReference,TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfTypeParameters(TypeParameter,TypeParameter)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfTypeParametersForAnnotationDeclaration(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfTypeParametersForEnumDeclaration(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidUsageOfVarargs(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isClassPathCorrect(char[][],CompilationUnitDeclaration,Object)",1,4,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isIdentifier(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isKeyword(int)",3,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isLiteral(int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isRecoveredName(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isRecoveredName(char[][])",4,1,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocAmbiguousMethodReference(int,int,Binding,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedField(FieldBinding,ASTNode,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedMethod(MethodBinding,ASTNode,int)",2,3,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedType(TypeBinding,ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDeprecatedType(TypeBinding,ASTNode,int,int)",3,5,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedParamTag(char[],int,int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedReturnTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedTag(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocDuplicatedThrowsClassName(TypeReference,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocEmptyReturnTag(int,int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocErrorNoMethodFor(MessageSend,TypeBinding,TypeBinding[],int)",2,4,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocHiddenReference(int,int,Scope,int)",3,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidConstructor(Statement,MethodBinding,int)",8,3,19
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidField(FieldReference,Binding,TypeBinding,int)",3,3,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidMemberTypeQualification(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidMethod(MessageSend,MethodBinding,int)",10,4,20
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidParamTagName(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidParamTypeParameter(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidSeeHref(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidSeeReferenceArgs(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidSeeUrlReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidThrowsClass(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidThrowsClassName(TypeReference,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidType(ASTNode,TypeBinding,int)",4,3,10
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidValueReference(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMalformedSeeReference(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissing(int,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissing(int,int,int,int)",2,4,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingHashCharacter(int,int,String)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingIdentifier(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingParamName(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingParamTag(char[],int,int,int)",2,4,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingReference(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingReturnTag(int,int,int)",1,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingTagDescription(char[],int,int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingTagDescriptionAfterReference(int,int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingThrowsClassName(int,int,int)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocMissingThrowsTag(TypeReference,int)",2,4,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUndeclaredParamTagName(char[],int,int,int)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUnexpectedTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUnexpectedText(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocUnterminatedInlineTag(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocVisibility(int,int)",6,2,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocVisibilityArgument(int,int)",2,2,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.lambdaExpressionCannotImplementGenericMethod(LambdaExpression,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.lambdaExpressionsNotBelow18(LambdaExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.lambdaParameterTypeMismatched(Argument,TypeReference,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.lambdaRedeclaresArgument(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.lambdaRedeclaresLocal(LocalDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.lambdaSignatureMismatched(LambdaExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableHiding(LocalDeclaration,Binding,boolean)",6,3,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableNonNullComparedToNull(LocalVariableBinding,ASTNode)",2,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableNullComparedToNonNull(LocalVariableBinding,ASTNode)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableNullInstanceof(LocalVariableBinding,ASTNode)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableNullReference(LocalVariableBinding,ASTNode)",3,2,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariablePotentialNullReference(LocalVariableBinding,ASTNode)",4,3,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableRedundantCheckOnNonNull(LocalVariableBinding,ASTNode)",2,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableRedundantCheckOnNull(LocalVariableBinding,ASTNode)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.localVariableRedundantNullAssignment(LocalVariableBinding,ASTNode)",3,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.messageSendPotentialNullReference(MethodBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.messageSendRedundantCheckOnNonNull(MethodBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodCanBeDeclaredStatic(MethodDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodCanBePotentiallyDeclaredStatic(MethodDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodHasMissingSwitchDefault()",1,2,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodMustBeAccessedStatically(ReferenceExpression,MethodBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodMustBeAccessedWithInstance(ReferenceExpression,MethodBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodMustOverride(AbstractMethodDeclaration,long)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNameClash(MethodBinding,MethodBinding,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNameClashHidden(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNeedBody(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodNeedingNoBody(MethodDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodReferenceSwingsBothWays(ReferenceExpression,MethodBinding,MethodBinding)",1,5,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.methodWithConstructorName(MethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.misplacedTypeAnnotations(Annotation,Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingDefaultCase(SwitchStatement,boolean,TypeBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingDeprecatedAnnotationForField(FieldDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingDeprecatedAnnotationForMethod(AbstractMethodDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingDeprecatedAnnotationForType(TypeDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingEnumConstantCase(SwitchStatement,FieldBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingNonNullByDefaultAnnotation(TypeDeclaration)",4,2,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingOverrideAnnotation(AbstractMethodDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingOverrideAnnotationForInterfaceMethodImplementation(AbstractMethodDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingReturnType(AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingSemiColon(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingSerialVersion(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingSynchronizedOnInheritedMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingTypeInConstructor(ASTNode,MethodBinding)",2,2,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingTypeInLambda(LambdaExpression,MethodBinding)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingTypeInMethod(ASTNode,MethodBinding)",2,2,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingValueForAnnotationMember(Annotation,char[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.multiCatchNotBelow17(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.multipleFunctionalInterfaces(FunctionalExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.mustDefineDimensionsOrInitializer(ArrayAllocationExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.mustUseAStaticMethod(MessageSend,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nativeMethodsCannotBeStrictfp(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.needImplementation(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.needToEmulateFieldAccess(FieldBinding,ASTNode,boolean)",2,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.needToEmulateMethodAccess(MethodBinding,ASTNode)",5,2,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noAdditionalBoundAfterTypeVariable(TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceForArgument(LocalVariableBinding,ASTNode)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceForConstant(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceForLocal(LocalVariableBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noMoreAvailableSpaceInConstantPool(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.noSuchEnclosingInstance(TypeBinding,ASTNode,boolean)",1,7,9
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nodeSourceEnd(ASTNode)",3,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nodeSourceEnd(Binding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nodeSourceEnd(Binding,ASTNode,int)",18,1,19
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nodeSourceStart(ASTNode)",3,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nodeSourceStart(Binding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nodeSourceStart(Binding,ASTNode,int)",12,1,13
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonExternalizedStringLiteral(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonGenericTypeCannotBeParameterized(int,ASTNode,TypeBinding,TypeBinding[])",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonStaticAccessToStaticField(ASTNode,FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonStaticAccessToStaticField(ASTNode,FieldBinding,int)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonStaticAccessToStaticMethod(ASTNode,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nonStaticContextForEnumMemberType(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notAFunctionalInterface(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notAnnotationType(TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notCompatibleTypesError(EqualExpression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notCompatibleTypesError(InstanceOfExpression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.notCompatibleTypesErrorInForeach(Expression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullAnnotationIsRedundant(AbstractMethodDeclaration,int)",1,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullAnnotationIsRedundant(FieldDeclaration)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullAnnotationUnsupportedLocation(Annotation)",1,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullAnnotationUnsupportedLocation(TypeReference)",1,4,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullDefaultAnnotationIsRedundant(ASTNode,Annotation[],Binding)",1,2,7
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullUnboxing(ASTNode,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullableFieldDereference(FieldBinding,long)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullityMismatch(Expression,TypeBinding,TypeBinding,int,char[][])",6,9,10
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullityMismatchIsNull(Expression,TypeBinding)",1,5,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullityMismatchIsUnknown(Expression,TypeBinding,TypeBinding,char[][])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullityMismatchPotentiallyNull(Expression,TypeBinding,char[][])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullityMismatchSpecdNullable(Expression,TypeBinding,char[][])",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullityMismatchTypeArgument(TypeBinding,TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullityMismatchingTypeAnnotation(Expression,TypeBinding,TypeBinding,NullAnnotationMatching)",3,11,15
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.objectCannotBeGeneric(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.objectCannotHaveSuperTypes(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.objectMustBeClass(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.onlyReferenceTypesInIntersectionCast(TypeReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.operatorOnlyValidOnNumericType(CompoundAssignment,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.overridesDeprecatedMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.overridesMethodWithoutSuperInvocation(MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.overridesPackageDefaultMethod(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.packageCollidesWithType(CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.packageIsNotExpectedPackage(CompilationUnitDeclaration)",1,2,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parameterAssignment(LocalVariableBinding,ASTNode)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parameterBoundAsString(TypeVariableBinding,boolean)",1,8,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parameterLackingNonnullAnnotation(Argument,ReferenceBinding,char[][])",1,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parameterLackingNullableAnnotation(Argument,ReferenceBinding,char[][])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parameterizedMemberTypeMissingArguments(ASTNode,TypeBinding,int)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseError(int,int,int,char[],String,String[])",4,7,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorDeleteToken(int,int,int,char[],String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorDeleteTokens(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertAfterToken(int,int,int,char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertBeforeToken(int,int,int,char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertToComplete(int,int,String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertToCompletePhrase(int,int,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInsertToCompleteScope(int,int,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorInvalidToken(int,int,int,char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorMergeTokens(int,int,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorMisplacedConstruct(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorNoSuggestion(int,int,int,char[],String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorNoSuggestionForTokens(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorReplaceToken(int,int,int,char[],String,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorReplaceTokens(int,int,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.parseErrorUnexpectedEnd(int,int)",1,1,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.polymorphicMethodNotBelow17(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.possibleAccidentalBooleanAssignment(Assignment)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.possibleFallThroughCase(CaseStatement)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.possibleHeapPollutionFromVararg(AbstractVariableDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.potentialNullUnboxing(ASTNode,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.potentiallyUnclosedCloseable(FakedTrackingVariable,ASTNode)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.publicClassMustMatchFileName(CompilationUnitDeclaration,TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.rawConstructorReferenceNotWithExplicitTypeArguments(TypeReference[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.rawMemberTypeCannotBeParameterized(ASTNode,ReferenceBinding,TypeBinding[])",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.rawTypeReference(ASTNode,TypeBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.recursiveConstructorInvocation(ExplicitConstructorCall)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.redefineArgument(Argument)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.redefineLocal(LocalDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.redundantSpecificationOfTypeArguments(ASTNode,TypeBinding[])",1,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.redundantSuperInterface(SourceTypeBinding,TypeReference,ReferenceBinding,ReferenceBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.referenceExpressionArgumentNullityMismatch(ReferenceExpression,TypeBinding,TypeBinding,MethodBinding,int,NullAnnotationMatching)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.referenceExpressionsNotBelow18(ReferenceExpression)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.referenceMustBeArrayTypeAt(TypeBinding,ArrayReference)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.repeatableAnnotationTypeIsDocumented(ASTNode,ReferenceBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.repeatableAnnotationTypeIsInherited(ASTNode,ReferenceBinding,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.repeatableAnnotationTypeTargetMismatch(ASTNode,ReferenceBinding,ReferenceBinding,String)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.repeatableAnnotationWithRepeatingContainer(Annotation,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.repeatedAnnotationWithContainer(Annotation,Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.replaceIfSynthetic(String)",3,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.reset()",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.resourceHasToImplementAutoCloseable(TypeBinding,TypeReference)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.retrieveClosingAngleBracketPosition(int)",8,2,12
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.retrieveEndingPositionAfterOpeningParenthesis(int,int,int)",8,2,10
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.retrieveStartingPositionAfterOpeningParenthesis(int,int,int)",8,4,10
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.safeVarargsOnFixedArityMethod(MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.safeVarargsOnNonFinalInstanceMethod(MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.scannerError(Parser,String)",14,18,25
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.shortAnnotatedTypeName(TypeBinding,char[][])",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.shouldImplementHashcode(SourceTypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.shouldReturn(TypeBinding,ASTNode)",1,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.signalNoImplicitStringConversionForCharArrayExpression(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticAndInstanceConflict(MethodBinding,MethodBinding)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticFieldAccessToNonStaticVariable(ASTNode,FieldBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticInheritedMethodConflicts(SourceTypeBinding,MethodBinding,MethodBinding[])",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticInterfaceMethodsNotBelow18(MethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.staticMemberOfParameterizedType(ASTNode,ReferenceBinding,int)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.stringConstantIsExceedingUtf8Limit(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superTypeCannotUseWildcard(SourceTypeBinding,TypeReference,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superclassMustBeAClass(SourceTypeBinding,TypeReference,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superfluousSemicolon(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superinterfaceMustBeAnInterface(SourceTypeBinding,TypeReference,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.superinterfacesCollide(TypeBinding,ASTNode,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.syntaxError(int,int,int,int,char[],String,String)",2,6,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.targetTypeIsNotAFunctionalInterface(FunctionalExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.task(String,String,String,int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.toleratedMisplacedTypeAnnotations(Annotation,Annotation)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyDimensions(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyFields(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyMethods(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.tooManyParametersForSyntheticMethod(AbstractMethodDeclaration)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeCastError(CastExpression,TypeBinding,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeCollidesWithEnclosingType(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeCollidesWithPackage(CompilationUnitDeclaration,TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeHiding(TypeDeclaration,TypeBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeHiding(TypeDeclaration,TypeVariableBinding)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeHiding(TypeParameter,Binding)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeMismatchError(TypeBinding,TypeBinding,ASTNode,ASTNode)",4,8,12
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typeMismatchError(TypeBinding,TypeVariableBinding,ReferenceBinding,ASTNode)",2,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typesAsString(MethodBinding,TypeBinding[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typesAsString(MethodBinding,TypeBinding[],boolean,boolean)",2,15,15
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typesAsString(MethodBinding,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typesAsString(MethodBinding,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typesAsString(TypeBinding[],boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.typesAsString(TypeBinding[],boolean,boolean)",1,5,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unclosedCloseable(FakedTrackingVariable,ASTNode)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undefinedAnnotationValue(TypeBinding,MemberValuePair)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undefinedLabel(BranchStatement)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undefinedTypeVariableSignature(char[],ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.undocumentedEmptyBlock(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unexpectedStaticModifierForField(SourceTypeBinding,FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unexpectedStaticModifierForMethod(ReferenceBinding,AbstractMethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unhandledException(TypeBinding,ASTNode)",1,2,6
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unhandledException(TypeBinding,ReferenceExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unhandledExceptionFromAutoClose(TypeBinding,ASTNode)",1,2,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unhandledWarningToken(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.uninitializedBlankFinalField(FieldBinding,ASTNode)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.uninitializedLocalVariable(LocalVariableBinding,ASTNode)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.uninitializedNonNullField(FieldBinding,ASTNode)",1,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.uninternedIdentityComparison(EqualExpression,TypeBinding,TypeBinding,CompilationUnitDeclaration)",5,7,11
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unmatchedBracket(int,ReferenceContext,CompilationResult)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryCast(CastExpression)",3,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryElse(ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryEnclosingInstanceSpecification(Expression,ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryInstanceof(InstanceOfExpression,TypeBinding)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryNLSTags(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unnecessaryTypeArgumentsForMethodInvocation(MethodBinding,TypeBinding[],TypeReference[])",1,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unqualifiedFieldAccess(NameReference,FieldBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unreachableCatchBlock(ReferenceBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unreachableCode(Statement)",1,1,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unresolvableReference(NameReference,Binding)",4,3,8
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeCast(CastExpression,Scope)",3,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeElementTypeConversion(Expression,TypeBinding,TypeBinding)",4,2,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeGenericArrayForVarargs(TypeBinding,ASTNode)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeNullnessCast(CastExpression,Scope)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeRawFieldAssignment(FieldBinding,TypeBinding,ASTNode)",3,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeRawGenericMethodInvocation(ASTNode,MethodBinding,TypeBinding[])",3,2,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeRawInvocation(ASTNode,MethodBinding)",3,2,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeReturnTypeOverride(MethodBinding,MethodBinding,SourceTypeBinding)",3,2,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unsafeTypeConversion(Expression,TypeBinding,TypeBinding)",4,2,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedArgument(LocalDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedDeclaredThrownException(ReferenceBinding,AbstractMethodDeclaration,ASTNode)",2,2,4
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedExceptionParameter(LocalDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedImport(ImportReference)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedLabel(LabeledStatement)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedLocalVariable(LocalDeclaration)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedObjectAllocation(AllocationExpression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateConstructor(ConstructorDeclaration)",3,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateField(FieldDeclaration)",9,12,16
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateMethod(AbstractMethodDeclaration)",7,17,23
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedPrivateType(TypeDeclaration)",3,1,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedTypeParameter(TypeParameter)",2,1,2
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.unusedWarningToken(Expression)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.useAssertAsAnIdentifier(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.useEnumAsAnIdentifier(int,int)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.varargsArgumentNeedCast(MethodBinding,TypeBinding,InvocationSite)",2,2,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.varargsConflict(MethodBinding,MethodBinding,SourceTypeBinding)",1,3,3
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.variableTypeCannotBeVoid(AbstractVariableDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.variableTypeCannotBeVoidArray(AbstractVariableDeclaration)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.visibilityConflict(MethodBinding,MethodBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wildcardAssignment(TypeBinding,TypeBinding,ASTNode)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wildcardInvocation(ASTNode,TypeBinding,MethodBinding,TypeBinding[])",3,4,5
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wrongSequenceOfExceptionTypes(TypeReference,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wrongSequenceOfExceptionTypesError(TypeReference,TypeBinding,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement.ShouldNotImplement(String)",1,1,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.CompoundNameVector()",1,1,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.add(char[][])",1,2,2
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.addAll(char[][][])",1,2,2
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.contains(char[][])",3,2,3
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.elementAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.remove(char[][])",3,3,3
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.removeAll()",1,1,2
"org.eclipse.jdt.internal.compiler.util.CompoundNameVector.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.util.FloatUtil.convertHexFloatingPointLiteralToBits(char[])",14,12,47
"org.eclipse.jdt.internal.compiler.util.FloatUtil.valueOfHexDoubleLiteral(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.FloatUtil.valueOfHexFloatLiteral(char[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.GenericXMLWriter(OutputStream,String,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.GenericXMLWriter(Writer,String,boolean)",1,2,2
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.appendEscapedChar(StringBuffer,char)",1,2,2
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.endTag(String,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.getEscaped(String)",1,2,2
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.getReplacement(char)",6,2,6
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.printString(String,boolean,boolean)",1,3,3
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.printTabulation()",1,2,2
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.printTag(String,HashMap,boolean,boolean,boolean)",1,6,8
"org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.startTag(String,boolean)",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashSetOfInt.HashSetOfInt()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashSetOfInt.HashSetOfInt(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashSetOfInt.add(int)",3,2,5
"org.eclipse.jdt.internal.compiler.util.HashSetOfInt.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashSetOfInt.contains(int)",3,1,4
"org.eclipse.jdt.internal.compiler.util.HashSetOfInt.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashSetOfInt.remove(int)",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashSetOfInt.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashSetOfInt.toString()",1,4,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.HashtableOfInt()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.HashtableOfInt(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.containsKey(int)",3,1,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.get(int)",3,1,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.put(int,Object)",3,2,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.HashtableOfIntValues()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.HashtableOfIntValues(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.containsKey(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.get(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.put(char[],int)",3,4,6
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.removeKey(char[])",3,4,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.toString()",1,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.HashtableOfLong()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.HashtableOfLong(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.containsKey(long)",3,1,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.get(long)",3,1,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.put(long,Object)",3,2,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.HashtableOfObject()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.HashtableOfObject(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.containsKey(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.get(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.put(char[],Object)",3,4,6
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.putUnsafely(char[],Object)",1,2,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.removeKey(char[])",3,4,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.HashtableOfObjectToInt()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.HashtableOfObjectToInt(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.containsKey(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.keysToArray(Object[])",1,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.put(Object,int)",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.removeKey(Object)",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.toString()",1,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.HashtableOfObjectToIntArray()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.HashtableOfObjectToIntArray(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.containsKey(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.get(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.keysToArray(Object[])",1,1,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.put(Object,int[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.removeKey(Object)",3,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray.toString()",1,6,6
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.HashtableOfPackage()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.HashtableOfPackage(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.containsKey(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.get(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.put(char[],PackageBinding)",3,4,6
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.HashtableOfType()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.HashtableOfType(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.containsKey(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.get(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.getput(char[],ReferenceBinding)",3,4,6
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.put(char[],ReferenceBinding)",3,4,6
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.rehash()",1,3,4
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer.addCurrentTokenJarWhenNecessary(StringBuffer)",2,3,4
"org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer.analyzeManifestContents(InputStream)",11,12,34
"org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer.getCalledFileNames()",1,1,1
"org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer.getClasspathSectionsCount()",1,1,1
"org.eclipse.jdt.internal.compiler.util.Messages.Messages()",1,1,1
"org.eclipse.jdt.internal.compiler.util.Messages.MessagesProperties.MessagesProperties(Field[],String)",1,2,2
"org.eclipse.jdt.internal.compiler.util.Messages.MessagesProperties.put(Object,Object)",3,1,5
"org.eclipse.jdt.internal.compiler.util.Messages.bind(String)",1,1,1
"org.eclipse.jdt.internal.compiler.util.Messages.bind(String,Object)",1,1,1
"org.eclipse.jdt.internal.compiler.util.Messages.bind(String,Object,Object)",1,1,1
"org.eclipse.jdt.internal.compiler.util.Messages.bind(String,Object[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.Messages.buildVariants(String)",4,3,5
"org.eclipse.jdt.internal.compiler.util.Messages.initializeMessages(String,Class)",3,3,6
"org.eclipse.jdt.internal.compiler.util.Messages.load(String,ClassLoader,Field[])",3,3,6
"org.eclipse.jdt.internal.compiler.util.ObjectVector.ObjectVector()",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.ObjectVector(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.add(Object)",1,2,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.addAll(ObjectVector)",1,2,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.addAll(Object[])",1,2,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.contains(Object)",3,2,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.containsIdentical(Object)",3,1,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.copyInto(Object[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.copyInto(Object[],int)",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.elementAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.find(Object)",3,2,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.remove(Object)",3,3,3
"org.eclipse.jdt.internal.compiler.util.ObjectVector.removeAll()",1,1,2
"org.eclipse.jdt.internal.compiler.util.ObjectVector.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.SimpleLookupTable()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.SimpleLookupTable(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.containsKey(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.getKey(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.keyForValue(Object)",4,4,5
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Object,Object)",3,3,5
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Object)",3,4,6
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeValue(Object)",1,4,8
"org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.SimpleNameVector()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.add(char[])",1,2,2
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.addAll(char[][])",1,2,2
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.contains(char[])",3,2,3
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.copyInto(Object[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.elementAt(int)",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.remove(char[])",3,3,3
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.removeAll()",1,1,2
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.size()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleNameVector.toString()",1,2,2
"org.eclipse.jdt.internal.compiler.util.SimpleSet.SimpleSet()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleSet.SimpleSet(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Object)",3,3,5
"org.eclipse.jdt.internal.compiler.util.SimpleSet.addIfNotIncluded(Object)",3,3,5
"org.eclipse.jdt.internal.compiler.util.SimpleSet.asArray(Object[])",2,1,5
"org.eclipse.jdt.internal.compiler.util.SimpleSet.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.util.SimpleSet.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Object)",3,2,4
"org.eclipse.jdt.internal.compiler.util.SimpleSet.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.SimpleSet.remove(Object)",3,4,6
"org.eclipse.jdt.internal.compiler.util.SimpleSet.toString()",1,3,3
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.SimpleSetOfCharArray()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.SimpleSetOfCharArray(int)",1,1,2
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.add(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.asArray(Object[])",2,1,5
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.clear()",1,1,2
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.clone()",1,1,1
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.get(char[])",3,3,5
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.includes(char[])",3,2,4
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.rehash()",1,3,3
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.remove(char[])",3,4,6
"org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.toString()",1,1,3
"org.eclipse.jdt.internal.compiler.util.Sorting.abstractFirst(MethodBinding[],int)",2,5,8
"org.eclipse.jdt.internal.compiler.util.Sorting.concreteFirst(MethodBinding[],int)",2,5,8
"org.eclipse.jdt.internal.compiler.util.Sorting.sort(ReferenceBinding[],int,ReferenceBinding[],int)",2,2,3
"org.eclipse.jdt.internal.compiler.util.Sorting.sortInferenceVariables(InferenceVariable[])",1,1,1
"org.eclipse.jdt.internal.compiler.util.Sorting.sortSuper(ReferenceBinding,ReferenceBinding[],ReferenceBinding[],int)",4,4,5
"org.eclipse.jdt.internal.compiler.util.Sorting.sortTypes(ReferenceBinding[])",1,2,2
"org.eclipse.jdt.internal.compiler.util.Util.appendEscapedChar(StringBuffer,char,boolean)",2,7,15
"org.eclipse.jdt.internal.compiler.util.Util.buildAllDirectoriesInto(String,String)",13,17,17
"org.eclipse.jdt.internal.compiler.util.Util.bytesToChar(byte[],String)",1,1,1
"org.eclipse.jdt.internal.compiler.util.Util.collectFilesNames()",2,14,16
"org.eclipse.jdt.internal.compiler.util.Util.collectRunningVMBootclasspath(List)",1,3,3
"org.eclipse.jdt.internal.compiler.util.Util.computeOuterMostVisibility(TypeDeclaration,int)",2,2,7
"org.eclipse.jdt.internal.compiler.util.Util.effectivelyEqual(Object[],Object[])",6,1,8
"org.eclipse.jdt.internal.compiler.util.Util.getExceptionSummary(Throwable)",4,4,7
"org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(File)",1,2,3
"org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(File,String)",1,2,3
"org.eclipse.jdt.internal.compiler.util.Util.getFileOutputStream(boolean,String,String)",2,4,5
"org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsByteArray(InputStream,int)",1,6,8
"org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(InputStream,int,String)",5,6,13
"org.eclipse.jdt.internal.compiler.util.Util.getJavaHome()",3,2,3
"org.eclipse.jdt.internal.compiler.util.Util.getLineNumber(int,int[],int,int)",7,1,7
"org.eclipse.jdt.internal.compiler.util.Util.getParameterCount(char[])",5,2,6
"org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(ZipEntry,ZipFile)",2,3,4
"org.eclipse.jdt.internal.compiler.util.Util.hashCode(Object[])",2,3,4
"org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(String)",4,3,6
"org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(char[])",4,1,6
"org.eclipse.jdt.internal.compiler.util.Util.isExcluded(char[],char[][],char[][],boolean)",8,9,16
"org.eclipse.jdt.internal.compiler.util.Util.isJavaFileName(String)",4,3,6
"org.eclipse.jdt.internal.compiler.util.Util.isJavaFileName(char[])",4,1,6
"org.eclipse.jdt.internal.compiler.util.Util.isPotentialZipArchive(String)",10,5,10
"org.eclipse.jdt.internal.compiler.util.Util.recordNestedType(ClassFile,TypeBinding)",8,22,27
"org.eclipse.jdt.internal.compiler.util.Util.reverseQuickSort(char[][],int,int)",1,4,7
"org.eclipse.jdt.internal.compiler.util.Util.reverseQuickSort(char[][],int,int,int[])",1,4,7
"org.eclipse.jdt.internal.compiler.util.Util.scanArrayTypeSignature(char[],int)",5,1,5
"org.eclipse.jdt.internal.compiler.util.Util.scanBaseTypeSignature(char[],int)",3,1,3
"org.eclipse.jdt.internal.compiler.util.Util.scanCaptureTypeSignature(char[],int)",3,1,3
"org.eclipse.jdt.internal.compiler.util.Util.scanClassTypeSignature(char[],int)",6,5,10
"org.eclipse.jdt.internal.compiler.util.Util.scanIdentifier(char[],int)",5,1,10
"org.eclipse.jdt.internal.compiler.util.Util.scanTypeArgumentSignature(char[],int)",5,3,5
"org.eclipse.jdt.internal.compiler.util.Util.scanTypeArgumentSignatures(char[],int)",6,2,6
"org.eclipse.jdt.internal.compiler.util.Util.scanTypeBoundSignature(char[],int)",12,8,13
"org.eclipse.jdt.internal.compiler.util.Util.scanTypeSignature(char[],int)",9,8,9
"org.eclipse.jdt.internal.compiler.util.Util.scanTypeVariableSignature(char[],int)",4,1,4
"org.eclipse.jdt.internal.compiler.util.Util.searchColumnNumber(int[],int,int)",5,2,5
"org.eclipse.jdt.internal.compiler.util.Util.toBoolean(boolean)",2,1,2
"org.eclipse.jdt.internal.compiler.util.Util.toString(Object[])",2,1,2
"org.eclipse.jdt.internal.compiler.util.Util.toString(Object[],Displayable)",2,3,4
"org.eclipse.jdt.internal.compiler.util.Util.writeToDisk(boolean,String,String,ClassFile)",1,1,2
"org.eclipse.jdt.internal.core.AnnotatableInfo.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.AnnotatableInfo.getNameSourceEnd()",1,1,1
"org.eclipse.jdt.internal.core.AnnotatableInfo.getNameSourceStart()",1,1,1
"org.eclipse.jdt.internal.core.AnnotatableInfo.setNameSourceEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.AnnotatableInfo.setNameSourceStart(int)",1,1,1
"org.eclipse.jdt.internal.core.Annotation.Annotation(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.Annotation.Annotation(JavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.Annotation.equals(Object)",5,2,5
"org.eclipse.jdt.internal.core.Annotation.getClassFile()",1,1,1
"org.eclipse.jdt.internal.core.Annotation.getDeclaringMember()",1,1,1
"org.eclipse.jdt.internal.core.Annotation.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.Annotation.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.Annotation.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.Annotation.getMemberValuePairs()",2,2,3
"org.eclipse.jdt.internal.core.Annotation.getNameRange()",4,3,4
"org.eclipse.jdt.internal.core.Annotation.getSourceRange()",3,3,3
"org.eclipse.jdt.internal.core.Annotation.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.Annotation.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.BasicCompilationUnit(char[],char[][],String)",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.BasicCompilationUnit(char[],char[][],String,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.BasicCompilationUnit(char[],char[][],String,String)",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getContents()",2,1,3
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getMainTypeName()",1,6,8
"org.eclipse.jdt.internal.core.BasicCompilationUnit.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.ignoreOptionalProblems()",1,1,1
"org.eclipse.jdt.internal.core.BasicCompilationUnit.initEncoding(IJavaElement)",2,6,7
"org.eclipse.jdt.internal.core.BasicCompilationUnit.toString()",1,1,1
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.beginTask(String,int)",1,2,2
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.done()",1,2,2
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.getMonitor()",1,1,1
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.getWorked()",1,1,1
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.internalWorked(double)",1,2,2
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.isCanceled()",2,2,2
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.setCanceled(boolean)",1,2,2
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.setTaskName(String)",1,2,2
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.subTask(String)",1,2,2
"org.eclipse.jdt.internal.core.BatchInitializationMonitor.worked(int)",1,2,2
"org.eclipse.jdt.internal.core.BatchOperation.BatchOperation(IWorkspaceRunnable)",1,1,1
"org.eclipse.jdt.internal.core.BatchOperation.canModifyRoots()",1,1,1
"org.eclipse.jdt.internal.core.BatchOperation.executeOperation()",4,4,5
"org.eclipse.jdt.internal.core.BatchOperation.verify()",1,1,1
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.BecomeWorkingCopyOperation(CompilationUnit,IProblemRequestor)",1,1,1
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.executeOperation()",1,4,4
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.BinaryField(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.BinaryField.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getAttachedJavadoc(IProgressMonitor)",2,1,2
"org.eclipse.jdt.internal.core.BinaryField.getConstant()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getKey(boolean)",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.getTypeSignature()",2,2,2
"org.eclipse.jdt.internal.core.BinaryField.isEnumConstant()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.resolved(Binding)",1,1,1
"org.eclipse.jdt.internal.core.BinaryField.toStringInfo(int,StringBuffer,Object,boolean)",1,4,4
"org.eclipse.jdt.internal.core.BinaryLambdaExpression.BinaryLambdaExpression(JavaElement,LambdaExpression)",1,1,1
"org.eclipse.jdt.internal.core.BinaryLambdaExpression.BinaryLambdaExpression(JavaElement,String,int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.BinaryLambdaExpression.BinaryLambdaExpression(JavaElement,String,int,int,int,LambdaMethod)",1,1,1
"org.eclipse.jdt.internal.core.BinaryLambdaExpression.getPrimaryElement(boolean)",1,1,1
"org.eclipse.jdt.internal.core.BinaryLambdaExpression.isBinary()",1,1,1
"org.eclipse.jdt.internal.core.BinaryLambdaMethod.BinaryLambdaMethod(JavaElement,String,String,int,String[],String[],String,SourceMethodElementInfo)",1,1,1
"org.eclipse.jdt.internal.core.BinaryLambdaMethod.getPrimaryElement(boolean)",1,1,1
"org.eclipse.jdt.internal.core.BinaryLambdaMethod.isBinary()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.BinaryMember(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.getAnnotation(char[][])",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.getAnnotations(IBinaryAnnotation[],long)",3,2,4
"org.eclipse.jdt.internal.core.BinaryMember.getCategories()",4,3,4
"org.eclipse.jdt.internal.core.BinaryMember.getKey()",1,1,2
"org.eclipse.jdt.internal.core.BinaryMember.getNameRange()",2,2,2
"org.eclipse.jdt.internal.core.BinaryMember.getSourceRange()",2,2,2
"org.eclipse.jdt.internal.core.BinaryMember.getStandardAnnotations(long)",2,8,9
"org.eclipse.jdt.internal.core.BinaryMember.isBinary()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.rename(String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMember.setContents(String,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.BinaryMethod(JavaElement,String,String[])",1,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.BinaryMethod.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getAnnotations(JavaElement,IBinaryAnnotation[])",2,2,3
"org.eclipse.jdt.internal.core.BinaryMethod.getAttachedJavadoc(IProgressMonitor)",2,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.getDefaultValue()",2,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getErasedParameterType(int)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getErasedParameterTypes()",1,3,5
"org.eclipse.jdt.internal.core.BinaryMethod.getExceptionTypes()",1,6,8
"org.eclipse.jdt.internal.core.BinaryMethod.getFlags()",1,2,3
"org.eclipse.jdt.internal.core.BinaryMethod.getHandleMemento(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.BinaryMethod.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getKey(boolean)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getNumberOfParameters()",1,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.getParameterNames()",12,22,34
"org.eclipse.jdt.internal.core.BinaryMethod.getParameterTypes()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getParameters()",2,8,12
"org.eclipse.jdt.internal.core.BinaryMethod.getRawParameterNames()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getRawParameterNames(int)",1,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.getReturnType()",1,2,2
"org.eclipse.jdt.internal.core.BinaryMethod.getReturnType(IBinaryMethod)",1,2,2
"org.eclipse.jdt.internal.core.BinaryMethod.getSignature()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.getTypeParameterSignatures()",2,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.getTypeParameters()",2,2,3
"org.eclipse.jdt.internal.core.BinaryMethod.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.BinaryMethod.isConstructor()",2,1,2
"org.eclipse.jdt.internal.core.BinaryMethod.isLambdaMethod()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.isMainMethod()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.isOpenParenForMethod(String,String,int)",4,8,10
"org.eclipse.jdt.internal.core.BinaryMethod.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.isSimilar(IMethod)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.readableName()",1,4,5
"org.eclipse.jdt.internal.core.BinaryMethod.resolved(Binding)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.splitParameters(char[],int)",2,6,20
"org.eclipse.jdt.internal.core.BinaryMethod.toStringInfo(int,StringBuffer,Object,boolean)",1,5,5
"org.eclipse.jdt.internal.core.BinaryMethod.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.BinaryMethod.toStringName(StringBuffer,int)",1,7,8
"org.eclipse.jdt.internal.core.BinaryType.BinaryType(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,WorkingCopyOwner,IProgressMonitor)",2,5,6
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.createField(String,IJavaElement,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.createInitializer(String,IJavaElement,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.createMethod(String,IJavaElement,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.createType(String,IJavaElement,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.findMethods(IMethod)",1,1,2
"org.eclipse.jdt.internal.core.BinaryType.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getAttachedJavadoc(IProgressMonitor)",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getChildrenForCategory(String)",8,7,9
"org.eclipse.jdt.internal.core.BinaryType.getClassFileInfo()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getDeclaringType()",7,6,11
"org.eclipse.jdt.internal.core.BinaryType.getElementInfo(IProgressMonitor)",2,1,3
"org.eclipse.jdt.internal.core.BinaryType.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getField(String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getFields()",2,2,2
"org.eclipse.jdt.internal.core.BinaryType.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getFullyQualifiedName()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getFullyQualifiedName(char)",1,1,2
"org.eclipse.jdt.internal.core.BinaryType.getFullyQualifiedParameterizedName()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",17,11,30
"org.eclipse.jdt.internal.core.BinaryType.getInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getInitializers()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getJavadocContents(IProgressMonitor)",4,6,10
"org.eclipse.jdt.internal.core.BinaryType.getKey(boolean)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getMethod(String,String[])",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getMethods()",2,2,2
"org.eclipse.jdt.internal.core.BinaryType.getPackageFragment()",3,3,3
"org.eclipse.jdt.internal.core.BinaryType.getSourceFileName(IBinaryType)",2,4,4
"org.eclipse.jdt.internal.core.BinaryType.getSuperInterfaceNames()",2,1,4
"org.eclipse.jdt.internal.core.BinaryType.getSuperInterfaceTypeSignatures()",4,5,11
"org.eclipse.jdt.internal.core.BinaryType.getSuperclassName()",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.getSuperclassTypeSignature()",4,3,8
"org.eclipse.jdt.internal.core.BinaryType.getType(String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameterSignatures()",2,1,2
"org.eclipse.jdt.internal.core.BinaryType.getTypeParameters()",2,2,3
"org.eclipse.jdt.internal.core.BinaryType.getTypeQualifiedName()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.getTypeQualifiedName(char)",1,1,2
"org.eclipse.jdt.internal.core.BinaryType.getTypes()",2,2,2
"org.eclipse.jdt.internal.core.BinaryType.isAnnotation()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isClass()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isEnum()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isInterface()",2,2,2
"org.eclipse.jdt.internal.core.BinaryType.isLambda()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isLocal()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isMember()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.loadTypeHierachy(InputStream,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.loadTypeHierachy(InputStream,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(ICompilationUnit[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(IWorkingCopy[],IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.BinaryType.newSupertypeHierarchy(WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(ICompilationUnit[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IJavaProject,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IJavaProject,WorkingCopyOwner,IProgressMonitor)",2,4,6
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(IWorkingCopy[],IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.resolved(Binding)",1,1,1
"org.eclipse.jdt.internal.core.BinaryType.sourceFileName(IBinaryType)",6,7,8
"org.eclipse.jdt.internal.core.BinaryType.toStringInfo(int,StringBuffer,Object,boolean)",1,7,7
"org.eclipse.jdt.internal.core.BinaryType.toStringName(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.BinaryTypeConverter.BinaryTypeConverter(ProblemReporter,CompilationResult,HashSetOfCharArrayArray)",1,1,1
"org.eclipse.jdt.internal.core.BinaryTypeConverter.buildImports(ClassFileReader)",4,3,9
"org.eclipse.jdt.internal.core.BinaryTypeConverter.buildTypeDeclaration(IType,CompilationUnitDeclaration)",1,2,3
"org.eclipse.jdt.internal.core.BinaryTypeConverter.convert(IField,IType)",2,1,2
"org.eclipse.jdt.internal.core.BinaryTypeConverter.convert(IMethod,IType)",8,10,20
"org.eclipse.jdt.internal.core.BinaryTypeConverter.convert(IType,IType,TypeDeclaration)",3,18,32
"org.eclipse.jdt.internal.core.BinaryTypeConverter.createTypeReference(String)",1,2,3
"org.eclipse.jdt.internal.core.BinaryTypeConverter.stringArrayToCharArray(String[])",3,2,4
"org.eclipse.jdt.internal.core.Buffer.Buffer(IFile,IOpenable,boolean)",1,2,2
"org.eclipse.jdt.internal.core.Buffer.addBufferChangedListener(IBufferChangedListener)",1,2,3
"org.eclipse.jdt.internal.core.Buffer.append(String)",2,1,2
"org.eclipse.jdt.internal.core.Buffer.append(char[])",4,2,5
"org.eclipse.jdt.internal.core.Buffer.close()",2,1,2
"org.eclipse.jdt.internal.core.Buffer.getChar(int)",3,1,3
"org.eclipse.jdt.internal.core.Buffer.getCharacters()",3,1,3
"org.eclipse.jdt.internal.core.Buffer.getContents()",2,1,2
"org.eclipse.jdt.internal.core.Buffer.getLength()",2,1,2
"org.eclipse.jdt.internal.core.Buffer.getOwner()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.getText(int,int)",4,1,4
"org.eclipse.jdt.internal.core.Buffer.getUnderlyingResource()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.hasUnsavedChanges()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.isClosed()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.Buffer.moveAndResizeGap(int,int)",2,5,5
"org.eclipse.jdt.internal.core.Buffer.notifyChanged(BufferChangedEvent)",1,3,3
"org.eclipse.jdt.internal.core.Buffer.removeBufferChangedListener(IBufferChangedListener)",1,2,3
"org.eclipse.jdt.internal.core.Buffer.replace(int,int,String)",1,2,2
"org.eclipse.jdt.internal.core.Buffer.replace(int,int,char[])",3,5,8
"org.eclipse.jdt.internal.core.Buffer.save(IProgressMonitor,boolean)",6,9,17
"org.eclipse.jdt.internal.core.Buffer.setContents(String)",1,1,1
"org.eclipse.jdt.internal.core.Buffer.setContents(char[])",4,2,5
"org.eclipse.jdt.internal.core.Buffer.setReadOnly(boolean)",1,1,2
"org.eclipse.jdt.internal.core.Buffer.toString()",2,5,8
"org.eclipse.jdt.internal.core.BufferCache.BufferCache(int)",1,1,1
"org.eclipse.jdt.internal.core.BufferCache.BufferCache(int,int)",1,1,1
"org.eclipse.jdt.internal.core.BufferCache.close(LRUCacheEntry)",2,3,3
"org.eclipse.jdt.internal.core.BufferCache.closeBuffers()",2,2,3
"org.eclipse.jdt.internal.core.BufferCache.newInstance(int,int)",1,1,1
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.BufferFactoryWrapper(IBufferFactory)",1,1,1
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.create(IBufferFactory)",1,1,1
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.createBuffer(ICompilationUnit)",2,2,2
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.equals(Object)",3,1,3
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.hashCode()",2,1,2
"org.eclipse.jdt.internal.core.BufferFactoryWrapper.toString()",1,1,1
"org.eclipse.jdt.internal.core.BufferManager.addBuffer(IBuffer)",1,3,3
"org.eclipse.jdt.internal.core.BufferManager.createBuffer(IOpenable)",1,1,2
"org.eclipse.jdt.internal.core.BufferManager.createNullBuffer(IOpenable)",1,1,2
"org.eclipse.jdt.internal.core.BufferManager.getBuffer(IOpenable)",1,1,1
"org.eclipse.jdt.internal.core.BufferManager.getDefaultBufferFactory()",1,1,1
"org.eclipse.jdt.internal.core.BufferManager.getDefaultBufferManager()",1,1,2
"org.eclipse.jdt.internal.core.BufferManager.getOpenBuffers()",1,1,1
"org.eclipse.jdt.internal.core.BufferManager.removeBuffer(IBuffer)",1,3,3
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.CancelableNameEnvironment(JavaProject,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.checkCanceled()",2,4,4
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findPackages(char[],ISearchRequestor)",1,1,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findType(char[],char[][])",1,1,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findType(char[][])",1,1,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.findTypes(char[],boolean,boolean,int,ISearchRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CancelableNameEnvironment.setMonitor(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CancelableProblemFactory.CancelableProblemFactory(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CancelableProblemFactory.createProblem(char[],int,String[],String[],int,int,int,int,int)",2,2,3
"org.eclipse.jdt.internal.core.CancelableProblemFactory.createProblem(char[],int,String[],int,String[],int,int,int,int,int)",2,2,3
"org.eclipse.jdt.internal.core.ChangeClasspathOperation.ChangeClasspathOperation(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.ChangeClasspathOperation.canModifyRoots()",1,1,1
"org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ClasspathChange,boolean)",1,7,7
"org.eclipse.jdt.internal.core.ChangeClasspathOperation.getSchedulingRule()",1,1,1
"org.eclipse.jdt.internal.core.ChangeClasspathOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.ClassFile(PackageFragment,String)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.becomeWorkingCopy(IProblemRequestor,WorkingCopyOwner,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.ClassFile.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",2,2,2
"org.eclipse.jdt.internal.core.ClassFile.close()",1,2,2
"org.eclipse.jdt.internal.core.ClassFile.closeAndRemoveFromJarTypeCache()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,CompletionRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,CompletionRequestor,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,CompletionRequestor,WorkingCopyOwner,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,ICodeCompletionRequestor)",2,2,2
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeComplete(int,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.ClassFile.codeSelect(int,int)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.codeSelect(int,int,WorkingCopyOwner)",2,3,3
"org.eclipse.jdt.internal.core.ClassFile.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.ClassFile.existsUsingJarTypeCache()",7,5,12
"org.eclipse.jdt.internal.core.ClassFile.findElement(IJavaElement,int,SourceMapper)",5,5,8
"org.eclipse.jdt.internal.core.ClassFile.findPrimaryType()",2,1,2
"org.eclipse.jdt.internal.core.ClassFile.getAttachedJavadoc(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(IFile)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(IFile,boolean)",4,5,9
"org.eclipse.jdt.internal.core.ClassFile.getBuffer()",4,3,4
"org.eclipse.jdt.internal.core.ClassFile.getBytes()",4,3,6
"org.eclipse.jdt.internal.core.ClassFile.getClassFile()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getCorrespondingResource()",2,2,2
"org.eclipse.jdt.internal.core.ClassFile.getElementAt(int)",2,3,3
"org.eclipse.jdt.internal.core.ClassFile.getElementAtConsideringSibling(int)",6,9,13
"org.eclipse.jdt.internal.core.ClassFile.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",3,2,3
"org.eclipse.jdt.internal.core.ClassFile.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getJarBinaryTypeInfo(PackageFragment,boolean)",2,5,5
"org.eclipse.jdt.internal.core.ClassFile.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getOuterMostEnclosingType()",1,2,2
"org.eclipse.jdt.internal.core.ClassFile.getPath()",2,2,2
"org.eclipse.jdt.internal.core.ClassFile.getSource()",2,1,2
"org.eclipse.jdt.internal.core.ClassFile.getSourceRange()",3,2,3
"org.eclipse.jdt.internal.core.ClassFile.getTopLevelTypeName()",1,2,2
"org.eclipse.jdt.internal.core.ClassFile.getType()",1,2,2
"org.eclipse.jdt.internal.core.ClassFile.getTypeName()",1,2,2
"org.eclipse.jdt.internal.core.ClassFile.getTypeRoot()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getWorkingCopy(IProgressMonitor,IBufferFactory)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.getWorkingCopy(WorkingCopyOwner,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.ClassFile.hasBuffer()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.isClass()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.isInterface()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.mapSource(SourceMapper,IBinaryType,IClassFile)",4,3,5
"org.eclipse.jdt.internal.core.ClassFile.openBuffer(IProgressMonitor,Object)",1,3,4
"org.eclipse.jdt.internal.core.ClassFile.resource(PackageFragmentRoot)",1,1,1
"org.eclipse.jdt.internal.core.ClassFile.setupExternalAnnotationProvider(IProject,IPath,ZipFile,ClassFileReader,String)",3,8,8
"org.eclipse.jdt.internal.core.ClassFile.simpleName(char[])",3,2,3
"org.eclipse.jdt.internal.core.ClassFile.translatedName(char[])",2,1,4
"org.eclipse.jdt.internal.core.ClassFile.translatedNames(char[][])",2,2,3
"org.eclipse.jdt.internal.core.ClassFile.unqualifiedName(char[])",4,3,4
"org.eclipse.jdt.internal.core.ClassFile.validateClassFile()",2,2,3
"org.eclipse.jdt.internal.core.ClassFile.validateExistence(IResource)",5,5,6
"org.eclipse.jdt.internal.core.ClassFileInfo.generateAnnotationInfo(JavaElement,HashMap,IBinaryAnnotation,String)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileInfo.generateAnnotationInfo(JavaElement,char[],HashMap,IBinaryAnnotation,String)",1,6,7
"org.eclipse.jdt.internal.core.ClassFileInfo.generateAnnotationsInfos(JavaElement,IBinaryAnnotation[],long,HashMap)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileInfo.generateAnnotationsInfos(JavaElement,char[],IBinaryAnnotation[],long,HashMap)",1,3,3
"org.eclipse.jdt.internal.core.ClassFileInfo.generateFieldInfos(IType,IBinaryType,HashMap,ArrayList)",2,2,3
"org.eclipse.jdt.internal.core.ClassFileInfo.generateInnerClassHandles(IType,IBinaryType,ArrayList)",1,3,3
"org.eclipse.jdt.internal.core.ClassFileInfo.generateMethodInfos(IType,IBinaryType,HashMap,ArrayList,ArrayList)",2,23,32
"org.eclipse.jdt.internal.core.ClassFileInfo.generateStandardAnnotation(JavaElement,char[][],IMemberValuePair[],HashMap)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileInfo.generateStandardAnnotationsInfos(JavaElement,char[],long,HashMap)",2,8,9
"org.eclipse.jdt.internal.core.ClassFileInfo.generateTypeParameterInfos(BinaryMember,char[],HashMap,ArrayList)",2,3,5
"org.eclipse.jdt.internal.core.ClassFileInfo.getRetentionPolicy(long)",2,3,4
"org.eclipse.jdt.internal.core.ClassFileInfo.getTargetElementTypes(long)",3,11,12
"org.eclipse.jdt.internal.core.ClassFileInfo.hasReadBinaryChildren()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileInfo.readBinaryChildren(ClassFile,HashMap,IBinaryType)",1,3,3
"org.eclipse.jdt.internal.core.ClassFileInfo.removeBinaryChildren()",1,6,6
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.ClassFileWorkingCopy(ClassFile,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.commitWorkingCopy(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getBuffer()",2,2,2
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getContents()",3,1,4
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPath()",1,1,1
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.getPrimaryElement(boolean)",2,2,3
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.openBuffer(IProgressMonitor,Object)",1,2,2
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.resource(PackageFragmentRoot)",2,2,2
"org.eclipse.jdt.internal.core.ClassFileWorkingCopy.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.ClasspathAccessRule.ClasspathAccessRule(IPath,int)",1,1,1
"org.eclipse.jdt.internal.core.ClasspathAccessRule.ClasspathAccessRule(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.ClasspathAccessRule.getKind()",4,2,4
"org.eclipse.jdt.internal.core.ClasspathAccessRule.getPattern()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathAccessRule.toProblemId(int)",4,2,7
"org.eclipse.jdt.internal.core.ClasspathAttribute.ClasspathAttribute(String,String)",1,1,1
"org.eclipse.jdt.internal.core.ClasspathAttribute.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.ClasspathAttribute.getName()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathAttribute.getValue()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathAttribute.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathAttribute.toString()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathChange.ClasspathChange(JavaProject,IClasspathEntry[],IPath,IClasspathEntry[])",1,1,1
"org.eclipse.jdt.internal.core.ClasspathChange.addClasspathDeltas(JavaElementDelta,IPackageFragmentRoot[],int)",1,3,6
"org.eclipse.jdt.internal.core.ClasspathChange.classpathContains(IClasspathEntry[],IClasspathEntry)",20,13,27
"org.eclipse.jdt.internal.core.ClasspathChange.collectAllSubfolders(IFolder,ArrayList)",1,3,4
"org.eclipse.jdt.internal.core.ClasspathChange.determineAffectedPackageFragments(IPath)",1,10,10
"org.eclipse.jdt.internal.core.ClasspathChange.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.ClasspathChange.generateDelta(JavaElementDelta,boolean)",15,33,48
"org.eclipse.jdt.internal.core.ClasspathChange.getSourceAttachmentDeltaFlag(IPath,IPath)",5,3,5
"org.eclipse.jdt.internal.core.ClasspathChange.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathChange.requestIndexing()",12,15,24
"org.eclipse.jdt.internal.core.ClasspathChange.toString()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.AssertionFailedException.AssertionFailedException(String)",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.ClasspathEntry(int,int,IPath,IPath[],IPath[],IPath,IPath,IPath,IClasspathEntry,boolean,IAccessRule[],boolean,IClasspathAttribute[])",1,4,9
"org.eclipse.jdt.internal.core.ClasspathEntry.ClasspathEntry(int,int,IPath,IPath[],IPath[],IPath,IPath,IPath,boolean,IAccessRule[],boolean,IClasspathAttribute[])",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.combine(IAccessRule[],IAccessRule[],boolean)",3,1,4
"org.eclipse.jdt.internal.core.ClasspathEntry.combineAccessRules()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.combineWith(ClasspathEntry)",3,7,8
"org.eclipse.jdt.internal.core.ClasspathEntry.decodeAccessRules(NodeList)",9,6,11
"org.eclipse.jdt.internal.core.ClasspathEntry.decodeExtraAttributes(NodeList)",7,4,8
"org.eclipse.jdt.internal.core.ClasspathEntry.decodePatterns(NamedNodeMap,String)",5,4,6
"org.eclipse.jdt.internal.core.ClasspathEntry.decodeUnknownNode(Node,StringBuffer,IJavaProject)",1,1,2
"org.eclipse.jdt.internal.core.ClasspathEntry.decodeUnknownNode(Node,XMLWriter,boolean)",2,7,8
"org.eclipse.jdt.internal.core.ClasspathEntry.elementDecode(Element,IJavaProject,Map)",7,23,35
"org.eclipse.jdt.internal.core.ClasspathEntry.elementEncode(XMLWriter,IPath,boolean,boolean,Map,boolean)",1,22,31
"org.eclipse.jdt.internal.core.ClasspathEntry.encodeAccessRule(AccessRule,XMLWriter,boolean,boolean)",2,3,5
"org.eclipse.jdt.internal.core.ClasspathEntry.encodeAccessRules(XMLWriter,boolean,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ClasspathEntry.encodeExtraAttributes(XMLWriter,boolean,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ClasspathEntry.encodePatterns(IPath[],String,Map)",1,4,5
"org.eclipse.jdt.internal.core.ClasspathEntry.encodeUnknownChildren(XMLWriter,boolean,boolean,ArrayList)",1,2,2
"org.eclipse.jdt.internal.core.ClasspathEntry.equalAttributes(IClasspathAttribute[],IClasspathAttribute[])",6,3,7
"org.eclipse.jdt.internal.core.ClasspathEntry.equalPatterns(IPath[],IPath[])",6,3,7
"org.eclipse.jdt.internal.core.ClasspathEntry.equals(Object)",23,6,23
"org.eclipse.jdt.internal.core.ClasspathEntry.fullExclusionPatternChars()",1,3,3
"org.eclipse.jdt.internal.core.ClasspathEntry.fullInclusionPatternChars()",1,3,3
"org.eclipse.jdt.internal.core.ClasspathEntry.getAccessRuleSet()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getAccessRules()",3,1,3
"org.eclipse.jdt.internal.core.ClasspathEntry.getAccessRules(IPath[],IPath[])",2,3,6
"org.eclipse.jdt.internal.core.ClasspathEntry.getCalledFileNames(IPath)",5,12,16
"org.eclipse.jdt.internal.core.ClasspathEntry.getChildAttributes(String,NodeList,boolean[])",3,3,3
"org.eclipse.jdt.internal.core.ClasspathEntry.getContentKind()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getEntryKind()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getExclusionPatterns()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getExternalAnnotationPath(IClasspathEntry,IProject,boolean)",9,7,9
"org.eclipse.jdt.internal.core.ClasspathEntry.getExtraAttributes()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getInclusionPatterns()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getLibraryIndexLocation()",5,4,7
"org.eclipse.jdt.internal.core.ClasspathEntry.getOutputLocation()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getPath()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getRawExternalAnnotationPath(IClasspathEntry)",3,3,3
"org.eclipse.jdt.internal.core.ClasspathEntry.getReferencingEntry()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getResolvedEntry()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getSourceAttachmentEncoding()",3,3,3
"org.eclipse.jdt.internal.core.ClasspathEntry.getSourceAttachmentPath()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.getSourceAttachmentRootPath()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.hasDotDot(IPath)",3,2,3
"org.eclipse.jdt.internal.core.ClasspathEntry.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.ignoreOptionalProblems()",4,4,4
"org.eclipse.jdt.internal.core.ClasspathEntry.isExported()",1,1,1
"org.eclipse.jdt.internal.core.ClasspathEntry.isOptional()",3,3,4
"org.eclipse.jdt.internal.core.ClasspathEntry.kindFromString(String)",7,1,7
"org.eclipse.jdt.internal.core.ClasspathEntry.kindToString(int)",8,2,8
"org.eclipse.jdt.internal.core.ClasspathEntry.removeAttribute(String,NamedNodeMap)",2,1,2
"org.eclipse.jdt.internal.core.ClasspathEntry.removeNode(String,NamedNodeMap)",2,1,3
"org.eclipse.jdt.internal.core.ClasspathEntry.resolveDotDot(IPath,IPath)",2,15,17
"org.eclipse.jdt.internal.core.ClasspathEntry.resolvedChainedLibraries()",2,2,3
"org.eclipse.jdt.internal.core.ClasspathEntry.resolvedChainedLibraries(IPath)",2,1,2
"org.eclipse.jdt.internal.core.ClasspathEntry.resolvedChainedLibraries(IPath,HashSet,ArrayList)",7,7,9
"org.eclipse.jdt.internal.core.ClasspathEntry.resolvedDotDot(IPath)",2,1,2
"org.eclipse.jdt.internal.core.ClasspathEntry.rootID()",2,2,8
"org.eclipse.jdt.internal.core.ClasspathEntry.toString()",3,18,27
"org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspath(IJavaProject,IClasspathEntry[],IPath)",50,62,81
"org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(IJavaProject,IClasspathEntry,IClasspathContainer,boolean,boolean)",31,36,54
"org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(IJavaProject,IClasspathEntry,boolean,boolean)",2,3,7
"org.eclipse.jdt.internal.core.ClasspathEntry.validateLibraryContents(IPath,IJavaProject,String)",2,3,3
"org.eclipse.jdt.internal.core.ClasspathEntry.validateLibraryEntry(IPath,IJavaProject,String,IPath,String,boolean)",25,35,43
"org.eclipse.jdt.internal.core.ClasspathValidation.ClasspathValidation(JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.ClasspathValidation.validate()",1,8,9
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.CommitWorkingCopyOperation(ICompilationUnit,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation()",7,17,25
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.getSchedulingRule()",3,2,3
"org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.verify()",3,2,4
"org.eclipse.jdt.internal.core.CompilationUnit.CompilationUnit(PackageFragment,String,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.applyTextEdit(TextEdit,IProgressMonitor)",3,3,6
"org.eclipse.jdt.internal.core.CompilationUnit.becomeWorkingCopy(IProblemRequestor,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.becomeWorkingCopy(IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",5,15,20
"org.eclipse.jdt.internal.core.CompilationUnit.canBeRemovedFromCache()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.canBufferBeRemovedFromCache(IBuffer)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.cloneCachingContents()",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.close()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.closing(Object)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,CompletionRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,CompletionRequestor,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,CompletionRequestor,WorkingCopyOwner,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,ICodeCompletionRequestor)",2,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(int,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(int,int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(int,int,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.commit(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,1,3
"org.eclipse.jdt.internal.core.CompilationUnit.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.createImport(String,IJavaElement,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.createImport(String,IJavaElement,int,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.createPackageDeclaration(String,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.createType(String,IJavaElement,boolean,IProgressMonitor)",1,4,4
"org.eclipse.jdt.internal.core.CompilationUnit.delete(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.destroy()",1,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.discardWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.findElements(IJavaElement)",6,8,19
"org.eclipse.jdt.internal.core.CompilationUnit.findPrimaryType()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.findSharedWorkingCopy(IBufferFactory)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.findWorkingCopy(WorkingCopyOwner)",3,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.getAllTypes()",1,4,4
"org.eclipse.jdt.internal.core.CompilationUnit.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getContents()",5,7,9
"org.eclipse.jdt.internal.core.CompilationUnit.getCorrespondingResource()",2,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.getElementAt(int)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",4,3,6
"org.eclipse.jdt.internal.core.CompilationUnit.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getImport(String)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getImportContainer()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getImports()",4,3,4
"org.eclipse.jdt.internal.core.CompilationUnit.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getOriginal(IJavaElement)",3,2,4
"org.eclipse.jdt.internal.core.CompilationUnit.getOriginalElement()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.getOwner()",1,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.getPackageDeclaration(String)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPackageDeclarations()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPackageName()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.getPath()",3,3,3
"org.eclipse.jdt.internal.core.CompilationUnit.getPerWorkingCopyInfo()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPrimary()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getPrimaryElement(boolean)",2,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.getSharedWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.getSource()",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getType(String)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getTypeRoot()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getTypes()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getUnderlyingResource()",2,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(IProgressMonitor,IBufferFactory,IProblemRequestor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(WorkingCopyOwner,IProblemRequestor,IProgressMonitor)",3,2,3
"org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.hasBuffer()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.hasResourceChanged()",4,1,4
"org.eclipse.jdt.internal.core.CompilationUnit.ignoreOptionalProblems()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isBasedOn(IResource)",3,1,3
"org.eclipse.jdt.internal.core.CompilationUnit.isConsistent()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isPrimary()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isSourceElement()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.isWorkingCopy()",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(int,boolean,int,HashMap,IProgressMonitor)",3,2,4
"org.eclipse.jdt.internal.core.CompilationUnit.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,1,3
"org.eclipse.jdt.internal.core.CompilationUnit.openAncestors(HashMap,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.openBuffer(IProgressMonitor,Object)",6,11,13
"org.eclipse.jdt.internal.core.CompilationUnit.originalFromClone()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile(boolean,IProgressMonitor)",1,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile(int,boolean,WorkingCopyOwner,IProgressMonitor)",1,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile(int,boolean,boolean,WorkingCopyOwner,IProgressMonitor)",1,1,3
"org.eclipse.jdt.internal.core.CompilationUnit.reconcile(int,int,WorkingCopyOwner,IProgressMonitor)",2,3,5
"org.eclipse.jdt.internal.core.CompilationUnit.rename(String,boolean,IProgressMonitor)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.resource(PackageFragmentRoot)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.restore()",3,1,3
"org.eclipse.jdt.internal.core.CompilationUnit.save(IProgressMonitor,boolean)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnit.toStringInfo(int,StringBuffer,Object,boolean)",1,4,4
"org.eclipse.jdt.internal.core.CompilationUnit.updateTimeStamp(CompilationUnit)",2,1,2
"org.eclipse.jdt.internal.core.CompilationUnit.validateCompilationUnit(IResource)",5,3,6
"org.eclipse.jdt.internal.core.CompilationUnit.validateExistence(IResource)",4,4,5
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.getSourceLength()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitElementInfo.setSourceLength(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.CompilationUnitProblemFinder(INameEnvironment,IErrorHandlingPolicy,CompilerOptions,ICompilerRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.accept(ISourceType[],PackageBinding,AccessRestriction)",1,3,3
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.getCompilerOptions(Map,boolean,boolean)",1,1,2
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.getHandlingPolicy()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.getRequestor()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.initializeParser()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnit,SourceElementParser,WorkingCopyOwner,HashMap,boolean,int,IProgressMonitor)",1,10,16
"org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnit,WorkingCopyOwner,HashMap,boolean,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.CompilationUnitStructureRequestor(ICompilationUnit,CompilationUnitElementInfo,Map)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptAnnotation(Annotation,AnnotatableInfo,JavaElement)",1,3,3
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptImport(int,int,int,int,char[][],boolean,int)",1,3,3
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptLineSeparatorPositions(int[])",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptMethodParameters(Argument[],JavaElement,MethodInfo)",2,4,5
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptPackage(ImportReference)",1,4,4
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptProblem(CategorizedProblem)",1,1,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.acceptTypeParameter(TypeParameterInfo,JavaElementInfo)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.addToChildren(Object,JavaElement)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.convertTypeNamesToSigs(char[][])",3,2,4
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createAnnotation(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createField(JavaElement,FieldInfo)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createImportContainer(ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createImportDeclaration(ImportContainer,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createInitializer(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createMethodHandle(JavaElement,MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createMethodInfo(MethodInfo,SourceMethod)",1,8,15
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createPackageDeclaration(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createTypeHandle(JavaElement,TypeInfo)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createTypeInfo(TypeInfo,SourceType)",1,9,12
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.createTypeParameter(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterConstructor(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterField(FieldInfo)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterInitializer(int,int)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterMethod(MethodInfo)",1,2,5
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterType(TypeInfo)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitCompilationUnit(int)",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitField(int,int,int)",1,8,10
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitInitializer(int)",1,1,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitMethod(int,Expression)",1,3,3
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.exitType(int)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.getChildren(Object)",2,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.getMemberValue(MemberValuePair,Expression)",12,12,17
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.getMemberValuePair(MemberValuePair)",1,1,1
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.getMemberValuePairs(MemberValuePair[])",1,2,2
"org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.resolveDuplicates(SourceRefElement)",1,5,5
"org.eclipse.jdt.internal.core.CopyElementsOperation.CopyElementsOperation(IJavaElement[],IJavaElement,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.CopyElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CopyElementsOperation.getNestedOperation(IJavaElement)",5,5,10
"org.eclipse.jdt.internal.core.CopyElementsOperation.getSourceFor(IJavaElement)",1,2,3
"org.eclipse.jdt.internal.core.CopyElementsOperation.isRenamingMainType(IJavaElement,IJavaElement)",2,5,5
"org.eclipse.jdt.internal.core.CopyElementsOperation.processElement(IJavaElement)",2,10,11
"org.eclipse.jdt.internal.core.CopyElementsOperation.resolveRenameAnchor(IJavaElement)",3,2,3
"org.eclipse.jdt.internal.core.CopyElementsOperation.verify()",3,1,4
"org.eclipse.jdt.internal.core.CopyElementsOperation.verify(IJavaElement)",1,6,6
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.CopyPackageFragmentRootOperation(IPackageFragmentRoot,IPath,int,int,IClasspathEntry)",1,1,1
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.addEntryToClasspath(IClasspathEntry,IWorkspaceRoot)",8,9,10
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.copy(IClasspathEntry)",7,9,9
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.copyResource(IPackageFragmentRoot,IClasspathEntry,IWorkspaceRoot)",8,13,17
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.executeOperation()",1,4,4
"org.eclipse.jdt.internal.core.CopyPackageFragmentRootOperation.verify()",11,9,16
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.CopyResourceElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.collectResourcesOfInterest(IPackageFragment)",2,4,9
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.createNeededPackageFragments(IContainer,PackageFragmentRoot,String[],boolean)",1,7,9
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.getDeltaFor(IJavaProject)",1,2,2
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.getResource(IJavaElement)",2,3,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.getSchedulingRule()",3,4,6
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.getSchedulingRule(IJavaElement)",3,5,9
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.initializeASTParser()",1,1,1
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.prepareDeltas(IJavaElement,IJavaElement,boolean,boolean)",5,5,6
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processCompilationUnitResource(ICompilationUnit,PackageFragment)",8,12,19
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processDeltas()",1,2,2
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processElement(IJavaElement)",2,2,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processElements()",1,1,2
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processPackageFragmentResource(PackageFragment,PackageFragmentRoot,String)",19,33,38
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.saveContent(PackageFragment,String,TextEdit,String,IFile)",1,2,3
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateContent(ICompilationUnit,PackageFragment,String)",2,3,3
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updatePackageStatement(CompilationUnit,String[],ASTRewrite,ICompilationUnit)",1,6,6
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateReadOnlyPackageFragmentsForCopy(IContainer,PackageFragmentRoot,String[])",1,4,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateReadOnlyPackageFragmentsForMove(IContainer,PackageFragmentRoot,String[],boolean)",1,5,6
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.updateTypeName(ICompilationUnit,CompilationUnit,String,String,ASTRewrite)",1,9,9
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.verify()",3,1,4
"org.eclipse.jdt.internal.core.CopyResourceElementsOperation.verify(IJavaElement)",1,14,14
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.CreateCompilationUnitOperation(IPackageFragment,String,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.executeOperation()",4,10,13
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.getSchedulingRule()",2,2,2
"org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.verify()",4,1,4
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.CreateElementInCUOperation(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.checkCanceled()",1,2,2
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.createAfter(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.createBefore(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.executeOperation()",1,7,7
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.generateNewCompilationUnitAST(ICompilationUnit)",1,2,3
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.generateResultHandles()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getMainAmountOfWork()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.getSchedulingRule()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.initializeDefaultPosition()",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.insertASTNode(ASTRewrite,ASTNode,ASTNode)",2,5,7
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.parse(ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.setAlteredName(String)",1,1,1
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.setRelativePosition(IJavaElement,int)",1,1,2
"org.eclipse.jdt.internal.core.CreateElementInCUOperation.verify()",4,3,5
"org.eclipse.jdt.internal.core.CreateFieldOperation.CreateFieldOperation(IType,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.generateElementAST(ASTRewrite,ICompilationUnit)",2,1,2
"org.eclipse.jdt.internal.core.CreateFieldOperation.generateResultHandle()",1,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.getASTNodeName()",2,1,2
"org.eclipse.jdt.internal.core.CreateFieldOperation.getFragment(ASTNode)",4,3,4
"org.eclipse.jdt.internal.core.CreateFieldOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.initializeDefaultPosition()",1,5,8
"org.eclipse.jdt.internal.core.CreateFieldOperation.rename(ASTNode,SimpleName)",1,1,1
"org.eclipse.jdt.internal.core.CreateFieldOperation.verifyNameCollision()",3,3,3
"org.eclipse.jdt.internal.core.CreateImportOperation.CreateImportOperation(String,ICompilationUnit,int)",1,1,1
"org.eclipse.jdt.internal.core.CreateImportOperation.generateElementAST(ASTRewrite,ICompilationUnit)",3,7,8
"org.eclipse.jdt.internal.core.CreateImportOperation.generateResultHandle()",1,1,1
"org.eclipse.jdt.internal.core.CreateImportOperation.getChildPropertyDescriptor(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.CreateImportOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateImportOperation.initializeDefaultPosition()",5,5,6
"org.eclipse.jdt.internal.core.CreateImportOperation.verify()",3,1,3
"org.eclipse.jdt.internal.core.CreateInitializerOperation.CreateInitializerOperation(IType,String)",1,1,1
"org.eclipse.jdt.internal.core.CreateInitializerOperation.generateElementAST(ASTRewrite,ICompilationUnit)",2,1,2
"org.eclipse.jdt.internal.core.CreateInitializerOperation.generateResultHandle()",4,5,8
"org.eclipse.jdt.internal.core.CreateInitializerOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateInitializerOperation.initializeDefaultPosition()",1,3,6
"org.eclipse.jdt.internal.core.CreateInitializerOperation.rename(ASTNode,SimpleName)",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.CreateMethodOperation(IType,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.convertASTMethodTypesToSignatures()",1,5,6
"org.eclipse.jdt.internal.core.CreateMethodOperation.generateElementAST(ASTRewrite,ICompilationUnit)",2,1,2
"org.eclipse.jdt.internal.core.CreateMethodOperation.generateResultHandle()",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.getASTNodeName()",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.rename(ASTNode,SimpleName)",1,1,1
"org.eclipse.jdt.internal.core.CreateMethodOperation.verifyNameCollision()",3,4,4
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.CreatePackageDeclarationOperation(String,ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.generateElementAST(ASTRewrite,ICompilationUnit)",3,3,4
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.generateResultHandle()",1,1,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.getChildPropertyDescriptor(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.initializeDefaultPosition()",3,3,4
"org.eclipse.jdt.internal.core.CreatePackageDeclarationOperation.verify()",3,1,3
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.CreatePackageFragmentOperation(IPackageFragmentRoot,String,boolean)",1,2,2
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.executeOperation()",1,7,7
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.getSchedulingRule()",2,1,2
"org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.verify()",7,7,10
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.CreateTypeHierarchyOperation(IRegion,ICompilationUnit[],IType,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.CreateTypeHierarchyOperation(IType,ICompilationUnit[],IJavaProject,boolean)",1,2,2
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.CreateTypeHierarchyOperation(IType,ICompilationUnit[],IJavaSearchScope,boolean)",1,2,2
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.getResult()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.verify()",4,3,7
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.CreateTypeMemberOperation(IJavaElement,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.generateElementAST(ASTRewrite,ICompilationUnit)",8,6,10
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.generateSyntaxIncorrectAST()",1,3,3
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.getChildPropertyDescriptor(ASTNode)",5,2,5
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.getType()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.removeIndentAndNewLines(String,ICompilationUnit)",5,3,5
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.setAlteredName(String)",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.verify()",4,3,5
"org.eclipse.jdt.internal.core.CreateTypeMemberOperation.verifyNameCollision()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.CreateTypeOperation(IJavaElement,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.generateElementAST(ASTRewrite,ICompilationUnit)",2,1,2
"org.eclipse.jdt.internal.core.CreateTypeOperation.generateResultHandle()",3,3,3
"org.eclipse.jdt.internal.core.CreateTypeOperation.getASTNodeName()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.getType()",2,1,2
"org.eclipse.jdt.internal.core.CreateTypeOperation.rename(ASTNode,SimpleName)",1,1,1
"org.eclipse.jdt.internal.core.CreateTypeOperation.verify()",3,5,7
"org.eclipse.jdt.internal.core.CreateTypeOperation.verifyNameCollision()",4,4,5
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner.DefaultWorkingCopyOwner()",1,1,1
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner.createBuffer(ICompilationUnit)",2,2,2
"org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner.toString()",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.DeleteElementsOperation(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.deleteElement(IJavaElement,ICompilationUnit)",1,2,2
"org.eclipse.jdt.internal.core.DeleteElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.getSchedulingRule()",3,3,4
"org.eclipse.jdt.internal.core.DeleteElementsOperation.groupElements()",3,5,5
"org.eclipse.jdt.internal.core.DeleteElementsOperation.initASTParser()",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.processElement(IJavaElement)",1,7,7
"org.eclipse.jdt.internal.core.DeleteElementsOperation.processElements()",1,1,1
"org.eclipse.jdt.internal.core.DeleteElementsOperation.verify(IJavaElement)",1,4,4
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.DeletePackageFragmentRootOperation(IPackageFragmentRoot,int,int)",1,1,1
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.deleteResource(IPackageFragmentRoot,IClasspathEntry)",4,5,7
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.executeOperation()",1,5,6
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.updateProjectClasspath(IPath,IJavaProject,Map)",1,6,7
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.updateReferringProjectClasspaths(IPath,IJavaProject,Map)",3,2,3
"org.eclipse.jdt.internal.core.DeletePackageFragmentRootOperation.verify()",5,3,6
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.DeleteResourceElementsOperation(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.deletePackageFragment(IPackageFragment)",2,10,15
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.processElement(IJavaElement)",2,3,6
"org.eclipse.jdt.internal.core.DeleteResourceElementsOperation.verify(IJavaElement)",1,7,9
"org.eclipse.jdt.internal.core.DeltaProcessingState.addClasspathChange(IProject,IClasspathEntry[],IPath,IClasspathEntry[])",1,2,5
"org.eclipse.jdt.internal.core.DeltaProcessingState.addClasspathValidation(JavaProject)",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.addElementChangedListener(IElementChangedListener,int)",3,4,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.addExternalFolderChange(JavaProject,IClasspathEntry[])",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.addForRefresh(IJavaElement)",1,1,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.addPreResourceChangedListener(IResourceChangeListener,int)",3,2,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.addProjectReferenceChange(JavaProject,IClasspathEntry[])",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.doNotUse()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessingState.findJavaProject(String)",2,2,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.getClasspathChange(IProject)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessingState.getDeltaProcessor()",2,1,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.getExternalLibTimeStamps()",1,6,7
"org.eclipse.jdt.internal.core.DeltaProcessingState.getOldJavaProjecNames()",2,3,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.getRootInfos(boolean)",5,12,15
"org.eclipse.jdt.internal.core.DeltaProcessingState.getTimeStampsFile()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots(boolean)",3,3,6
"org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRootsWithPreviousSession()",1,1,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeAllClasspathChanges()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeClasspathValidations()",2,1,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeElementChangedListener(IElementChangedListener)",3,4,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeExternalElementsToRefresh()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeExternalFolderChanges()",2,1,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.removePreResourceChangedListener(IResourceChangeListener)",3,4,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.removeProjectReferenceChanges()",2,1,2
"org.eclipse.jdt.internal.core.DeltaProcessingState.resetOldJavaProjectNames()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(IResourceChangeEvent)",1,4,4
"org.eclipse.jdt.internal.core.DeltaProcessingState.saveExternalLibTimeStamps()",2,7,10
"org.eclipse.jdt.internal.core.DeltaProcessingState.updateRoots(IPath,IResourceDelta,DeltaProcessor)",4,10,12
"org.eclipse.jdt.internal.core.DeltaProcessor.DeltaProcessor(DeltaProcessingState,JavaModelManager)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.OutputsInfo.OutputsInfo(IPath[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.OutputsInfo.toString()",3,4,8
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.RootInfo(JavaProject,IPath,char[][],char[][],int)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.getPackageFragmentRoot()",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.getPackageFragmentRoot(IResource)",1,3,4
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.isRootOfProject(IPath)",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.RootInfo.toString()",1,9,9
"org.eclipse.jdt.internal.core.DeltaProcessor.addDependentProjects(IJavaProject,HashMap,HashSet)",4,2,4
"org.eclipse.jdt.internal.core.DeltaProcessor.addPackageFragmentRoot(OpenableElementInfo,IPackageFragmentRoot)",8,7,12
"org.eclipse.jdt.internal.core.DeltaProcessor.addToParentInfo(Openable)",1,4,5
"org.eclipse.jdt.internal.core.DeltaProcessor.checkExternalArchiveChanges(IJavaElement[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.checkExternalArchiveChanges(IJavaElement[],boolean,IProgressMonitor)",5,17,19
"org.eclipse.jdt.internal.core.DeltaProcessor.checkExternalFolderChange(IProject,JavaProject)",1,1,2
"org.eclipse.jdt.internal.core.DeltaProcessor.checkProjectReferenceChange(IProject,JavaProject)",1,1,2
"org.eclipse.jdt.internal.core.DeltaProcessor.checkProjectsAndClasspathChanges(IResourceDelta)",4,19,30
"org.eclipse.jdt.internal.core.DeltaProcessor.checkSourceAttachmentChange(IResourceDelta,IResource)",5,5,9
"org.eclipse.jdt.internal.core.DeltaProcessor.close(Openable)",1,1,2
"org.eclipse.jdt.internal.core.DeltaProcessor.contentChanged(Openable)",1,5,6
"org.eclipse.jdt.internal.core.DeltaProcessor.createElement(IResource,int,RootInfo)",7,19,29
"org.eclipse.jdt.internal.core.DeltaProcessor.createExternalArchiveDelta(HashSet,IProgressMonitor)",11,31,41
"org.eclipse.jdt.internal.core.DeltaProcessor.currentDelta()",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.deleting(IProject)",1,2,4
"org.eclipse.jdt.internal.core.DeltaProcessor.elementAdded(Openable,IResourceDelta,RootInfo)",2,12,14
"org.eclipse.jdt.internal.core.DeltaProcessor.elementRemoved(Openable,IResourceDelta,RootInfo)",4,8,15
"org.eclipse.jdt.internal.core.DeltaProcessor.elementType(IResource,int,int,RootInfo)",12,14,23
"org.eclipse.jdt.internal.core.DeltaProcessor.enclosingRootInfo(IPath,int)",3,3,4
"org.eclipse.jdt.internal.core.DeltaProcessor.externalPath(IResource)",2,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.fire(IJavaElementDelta,int)",3,7,8
"org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(IJavaElementDelta,IElementChangedListener[],int[],int)",1,4,4
"org.eclipse.jdt.internal.core.DeltaProcessor.fireReconcileDelta(IElementChangedListener[],int[],int)",1,4,4
"org.eclipse.jdt.internal.core.DeltaProcessor.flush()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.getSourceElementParser(Openable)",1,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.getTimeStamp(File)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.isAffectedBy(IResourceDelta)",5,4,8
"org.eclipse.jdt.internal.core.DeltaProcessor.isPrimaryWorkingCopy(IJavaElement,int)",2,3,3
"org.eclipse.jdt.internal.core.DeltaProcessor.isResFilteredFromOutput(RootInfo,OutputsInfo,IResource,int)",8,9,13
"org.eclipse.jdt.internal.core.DeltaProcessor.mergeDeltas(Collection)",4,9,11
"org.eclipse.jdt.internal.core.DeltaProcessor.nonJavaResourcesChanged(Openable,IResourceDelta)",3,7,10
"org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(IJavaElementDelta,int,IElementChangedListener[],int[],int)",1,7,7
"org.eclipse.jdt.internal.core.DeltaProcessor.notifyTypeHierarchies(IElementChangedListener[],int)",3,3,4
"org.eclipse.jdt.internal.core.DeltaProcessor.oldRootInfo(IPath,JavaProject)",6,2,6
"org.eclipse.jdt.internal.core.DeltaProcessor.otherRootsInfo(IPath,int)",2,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.outputsInfo(RootInfo,IResource)",3,7,11
"org.eclipse.jdt.internal.core.DeltaProcessor.popUntilPrefixOf(IPath)",4,8,9
"org.eclipse.jdt.internal.core.DeltaProcessor.processResourceDelta(IResourceDelta)",2,10,13
"org.eclipse.jdt.internal.core.DeltaProcessor.readRawClasspath(JavaProject)",1,4,4
"org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(IJavaElementDelta)",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.removeFromParentInfo(Openable)",1,3,4
"org.eclipse.jdt.internal.core.DeltaProcessor.resetProjectCaches()",2,3,4
"org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(IResourceChangeEvent)",7,42,50
"org.eclipse.jdt.internal.core.DeltaProcessor.rootInfo(IPath,int)",2,2,2
"org.eclipse.jdt.internal.core.DeltaProcessor.startDeltas()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.stopDeltas()",1,1,1
"org.eclipse.jdt.internal.core.DeltaProcessor.traverseDelta(IResourceDelta,int,RootInfo,OutputsInfo)",9,21,44
"org.eclipse.jdt.internal.core.DeltaProcessor.updateCurrentDeltaAndIndex(IResourceDelta,int,RootInfo)",13,21,30
"org.eclipse.jdt.internal.core.DeltaProcessor.updateIndex(Openable,IResourceDelta)",8,21,41
"org.eclipse.jdt.internal.core.DeltaProcessor.updateJavaModel(IJavaElementDelta)",1,3,3
"org.eclipse.jdt.internal.core.DeltaProcessor.updateRootIndex(PackageFragmentRoot,String[],IResourceDelta)",1,3,3
"org.eclipse.jdt.internal.core.DeltaProcessor.validateClasspaths(IResourceDelta)",2,8,10
"org.eclipse.jdt.internal.core.DeltaProcessor.validateClasspaths(IResourceDelta,HashSet)",3,12,17
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.DiscardWorkingCopyOperation(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.executeOperation()",1,6,6
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.DiscardWorkingCopyOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.DocumentAdapter.DocumentAdapter(IBuffer)",1,1,1
"org.eclipse.jdt.internal.core.DocumentAdapter.replace(int,int,String)",1,1,1
"org.eclipse.jdt.internal.core.DocumentAdapter.set(String)",1,1,1
"org.eclipse.jdt.internal.core.ElementCache.ElementCache(int)",1,1,1
"org.eclipse.jdt.internal.core.ElementCache.ElementCache(int,int)",1,1,1
"org.eclipse.jdt.internal.core.ElementCache.close(LRUCacheEntry)",2,2,3
"org.eclipse.jdt.internal.core.ElementCache.ensureSpaceLimit(Object,IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.ElementCache.newInstance(int,int)",1,1,1
"org.eclipse.jdt.internal.core.ElementCache.resetSpaceLimit(int,IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.DirectoryNode.DirectoryNode(DirectoryNode,IPath)",1,1,1
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.DirectoryNode.getChildren()",1,1,2
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.DirectoryNode.isEmpty()",1,4,4
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.DirectoryNode.numClassFiles()",2,4,4
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.DirectoryNode.registerClassFile(IPath,ClassFile)",1,2,3
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.DirectoryNode.toString()",1,3,3
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.DirectoryNode.unregisterClassFile(IPath)",1,4,4
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.DirectoryNode.unregisterDirectory(DirectoryNode)",1,5,5
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.ExternalAnnotationTracker()",1,1,1
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.getAnnotationBase(DirectoryNode,IPath,int,int)",2,2,3
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.registerClassFile(IPath,IPath,ClassFile)",1,2,2
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.resourceChanged(IResourceChangeEvent)",1,6,6
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.shutdown(IWorkspace)",1,1,1
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.start(IWorkspace)",1,1,1
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.traverseForClassFiles(Map<IPath, ClassFile>,IResourceDelta,int)",1,4,4
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.traverseForDirectories(DirectoryNode,IResourceDelta)",1,7,7
"org.eclipse.jdt.internal.core.ExternalAnnotationTracker.unregisterClassFile(IPath,IPath)",1,2,2
"org.eclipse.jdt.internal.core.ExternalFolderChange.ExternalFolderChange(JavaProject,IClasspathEntry[])",1,1,1
"org.eclipse.jdt.internal.core.ExternalFolderChange.toString()",1,1,1
"org.eclipse.jdt.internal.core.ExternalFolderChange.updateExternalFoldersIfNecessary(boolean,IProgressMonitor)",4,5,7
"org.eclipse.jdt.internal.core.ExternalFoldersManager.ExternalFoldersManager()",1,2,2
"org.eclipse.jdt.internal.core.ExternalFoldersManager.RefreshJob.RefreshJob(Vector)",1,1,1
"org.eclipse.jdt.internal.core.ExternalFoldersManager.RefreshJob.addFoldersToRefresh(Collection)",1,4,5
"org.eclipse.jdt.internal.core.ExternalFoldersManager.RefreshJob.belongsTo(Object)",1,1,1
"org.eclipse.jdt.internal.core.ExternalFoldersManager.RefreshJob.run(IProgressMonitor)",2,5,6
"org.eclipse.jdt.internal.core.ExternalFoldersManager.addFolder(IPath,IProject,boolean)",2,4,5
"org.eclipse.jdt.internal.core.ExternalFoldersManager.addFolder(IPath,boolean)",1,1,1
"org.eclipse.jdt.internal.core.ExternalFoldersManager.cleanUp(IProgressMonitor)",2,4,5
"org.eclipse.jdt.internal.core.ExternalFoldersManager.createExternalFoldersProject(IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.ExternalFoldersManager.createExternalFoldersProject(IProject,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(IPath,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(IPath,boolean,IProject,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.ExternalFoldersManager.createPendingFolders(IProgressMonitor)",2,4,6
"org.eclipse.jdt.internal.core.ExternalFoldersManager.getExternalFolders(IClasspathEntry[])",2,5,8
"org.eclipse.jdt.internal.core.ExternalFoldersManager.getExternalFoldersManager()",1,1,2
"org.eclipse.jdt.internal.core.ExternalFoldersManager.getExternalFoldersProject()",1,1,1
"org.eclipse.jdt.internal.core.ExternalFoldersManager.getFolder(IPath)",1,1,1
"org.eclipse.jdt.internal.core.ExternalFoldersManager.getFolders()",4,9,9
"org.eclipse.jdt.internal.core.ExternalFoldersManager.getFoldersToCleanUp(IProgressMonitor)",2,7,10
"org.eclipse.jdt.internal.core.ExternalFoldersManager.isExternalFolderPath(IPath)",6,6,9
"org.eclipse.jdt.internal.core.ExternalFoldersManager.isInternalPathForExternalFolder(IPath)",1,1,1
"org.eclipse.jdt.internal.core.ExternalFoldersManager.openExternalFoldersProject(IProject,IProgressMonitor)",1,4,4
"org.eclipse.jdt.internal.core.ExternalFoldersManager.refreshReferences(IProject,IProgressMonitor)",4,2,5
"org.eclipse.jdt.internal.core.ExternalFoldersManager.refreshReferences(IProject[],IProgressMonitor)",6,4,9
"org.eclipse.jdt.internal.core.ExternalFoldersManager.removeFolder(IPath)",1,1,1
"org.eclipse.jdt.internal.core.ExternalFoldersManager.removePendingFolder(Object)",2,1,2
"org.eclipse.jdt.internal.core.ExternalFoldersManager.runRefreshJob(Collection)",4,6,6
"org.eclipse.jdt.internal.core.ExternalJavaProject.ExternalJavaProject(IClasspathEntry[])",1,1,2
"org.eclipse.jdt.internal.core.ExternalJavaProject.equals(Object)",1,1,1
"org.eclipse.jdt.internal.core.ExternalJavaProject.exists()",1,1,1
"org.eclipse.jdt.internal.core.ExternalJavaProject.getOption(String,boolean)",2,2,3
"org.eclipse.jdt.internal.core.ExternalJavaProject.isOnClasspath(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.ExternalJavaProject.isOnClasspath(IResource)",1,1,1
"org.eclipse.jdt.internal.core.ExternalJavaProject.validateExistence(IResource)",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.ExternalPackageFragmentRoot(IPath,JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.ExternalPackageFragmentRoot(IResource,IPath,JavaProject)",1,2,2
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.determineKind(IResource)",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.equals(Object)",3,2,3
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.getKind()",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.getPath()",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.getUnderlyingResource()",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.internalKind()",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.isExternal()",1,1,1
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.resource(PackageFragmentRoot)",2,2,2
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.resourceExists(IResource)",4,1,4
"org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot.toStringAncestors(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.ImportContainer(CompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.ImportContainer.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",4,4,4
"org.eclipse.jdt.internal.core.ImportContainer.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getImport(String)",1,2,2
"org.eclipse.jdt.internal.core.ImportContainer.getImport(String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.getPrimaryElement(boolean)",2,2,3
"org.eclipse.jdt.internal.core.ImportContainer.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.readableName()",1,1,1
"org.eclipse.jdt.internal.core.ImportContainer.toString(int,StringBuffer)",2,3,5
"org.eclipse.jdt.internal.core.ImportContainer.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ImportContainerInfo.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.ImportDeclaration(ImportContainer,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.ImportDeclaration.getElementName()",2,1,2
"org.eclipse.jdt.internal.core.ImportDeclaration.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getHandleMemento(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.ImportDeclaration.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getNameWithoutStar()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.getPrimaryElement(boolean)",2,2,3
"org.eclipse.jdt.internal.core.ImportDeclaration.isOnDemand()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.readableName()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclaration.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo.setNameSourceEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.ImportDeclarationElementInfo.setNameSourceStart(int)",1,1,1
"org.eclipse.jdt.internal.core.Initializer.Initializer(JavaElement,int)",2,1,2
"org.eclipse.jdt.internal.core.Initializer.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.Initializer.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.getHandleMemento(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.Initializer.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.getPrimaryElement(boolean)",3,3,4
"org.eclipse.jdt.internal.core.Initializer.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.readableName()",1,1,1
"org.eclipse.jdt.internal.core.Initializer.rename(String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.Initializer.toStringInfo(int,StringBuffer,Object,boolean)",1,5,5
"org.eclipse.jdt.internal.core.InitializerWithChildrenInfo.InitializerWithChildrenInfo(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.InitializerWithChildrenInfo.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.InternalNamingConventions.acceptName(char[],char[],char[],boolean,boolean,int,INamingRequestor)",1,4,5
"org.eclipse.jdt.internal.core.InternalNamingConventions.computeBaseTypeNames(char,char[][])",4,2,5
"org.eclipse.jdt.internal.core.InternalNamingConventions.computeBaseTypeNames(char[],boolean,char[][])",3,3,3
"org.eclipse.jdt.internal.core.InternalNamingConventions.computeNonBaseTypeNames(char[],boolean,boolean)",8,19,36
"org.eclipse.jdt.internal.core.InternalNamingConventions.excludeNames(char[],char[],char[],char[][])",1,3,3
"org.eclipse.jdt.internal.core.InternalNamingConventions.generateConstantName(char[][],int,boolean)",1,3,7
"org.eclipse.jdt.internal.core.InternalNamingConventions.generateNonConstantName(char[][],int,boolean)",1,2,6
"org.eclipse.jdt.internal.core.InternalNamingConventions.getBaseName(char[],char[][],char[][],boolean,boolean)",1,5,5
"org.eclipse.jdt.internal.core.InternalNamingConventions.getBaseName(int,IJavaProject,char[],boolean)",2,3,7
"org.eclipse.jdt.internal.core.InternalNamingConventions.getNameScanner(CompilerOptions)",1,1,1
"org.eclipse.jdt.internal.core.InternalNamingConventions.removePrefix(char[],char[][])",6,7,13
"org.eclipse.jdt.internal.core.InternalNamingConventions.removeVariablePrefixAndSuffix(char[],char[][],char[][],boolean)",1,14,16
"org.eclipse.jdt.internal.core.InternalNamingConventions.removeVariablePrefixAndSuffix(int,IJavaProject,char[])",2,3,7
"org.eclipse.jdt.internal.core.InternalNamingConventions.suggestVariableNames(int,int,char[],IJavaProject,int,char[],char[][],boolean,INamingRequestor)",17,43,68
"org.eclipse.jdt.internal.core.JarEntryDirectory.JarEntryDirectory(String)",1,1,1
"org.eclipse.jdt.internal.core.JarEntryDirectory.clone(Object)",1,3,3
"org.eclipse.jdt.internal.core.JarEntryDirectory.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryDirectory.getContents()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryDirectory.isFile()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryDirectory.setChildren(IJarEntryResource[])",1,1,1
"org.eclipse.jdt.internal.core.JarEntryDirectory.toString()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.JarEntryFile(String)",1,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.clone(Object)",1,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.getContents()",2,2,4
"org.eclipse.jdt.internal.core.JarEntryFile.isFile()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryFile.toString()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryResource.JarEntryResource(String)",1,1,1
"org.eclipse.jdt.internal.core.JarEntryResource.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.JarEntryResource.getEntryName()",1,4,4
"org.eclipse.jdt.internal.core.JarEntryResource.getFullPath()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryResource.getName()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryResource.getPackageFragmentRoot()",3,3,3
"org.eclipse.jdt.internal.core.JarEntryResource.getParent()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryResource.getZipFile()",3,3,3
"org.eclipse.jdt.internal.core.JarEntryResource.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryResource.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JarEntryResource.setParent(Object)",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.JarPackageFragment(PackageFragmentRoot,String[])",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",2,2,2
"org.eclipse.jdt.internal.core.JarPackageFragment.computeChildren(ArrayList)",2,2,3
"org.eclipse.jdt.internal.core.JarPackageFragment.computeNonJavaResources(ArrayList)",9,10,12
"org.eclipse.jdt.internal.core.JarPackageFragment.containsJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.createCompilationUnit(String,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getClassFiles()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getCompilationUnits()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getCorrespondingResource()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.getNonJavaResources()",2,2,2
"org.eclipse.jdt.internal.core.JarPackageFragment.internalIsValidPackageName()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragment.storedNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentInfo.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.JarPackageFragmentRoot(IPath,JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.JarPackageFragmentRoot(IResource,JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.computeChildren(OpenableElementInfo,IResource)",5,5,7
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.determineKind(IResource)",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.equals(Object)",3,2,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getIndexPath()",2,2,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getJar()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getKind()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getNonJavaResources()",2,2,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getPackageFragment(String[])",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getUnderlyingResource()",3,3,3
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.initRawPackageInfo(HashtableOfArrayToObject,String,boolean,String)",6,7,12
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.internalKind()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.internalPath()",2,2,2
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.isArchive()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.isExternal()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.resource(PackageFragmentRoot)",2,1,2
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.resourceExists(IResource)",2,2,2
"org.eclipse.jdt.internal.core.JarPackageFragmentRoot.toStringAncestors(StringBuffer)",2,1,2
"org.eclipse.jdt.internal.core.JavaCorePreferenceInitializer.initializeDefaultPreferences()",1,3,3
"org.eclipse.jdt.internal.core.JavaCorePreferenceInitializer.initializeDeprecatedOptions()",1,1,1
"org.eclipse.jdt.internal.core.JavaCorePreferenceModifyListener.cleanJavaCore(Preferences)",1,4,5
"org.eclipse.jdt.internal.core.JavaCorePreferenceModifyListener.isJavaProjectAccessible(String)",3,2,3
"org.eclipse.jdt.internal.core.JavaCorePreferenceModifyListener.preApply(IEclipsePreferences)",1,3,4
"org.eclipse.jdt.internal.core.JavaElement.JavaElement(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.appendEscapedDelimiter(StringBuffer,char)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.close()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.equals(Object)",3,3,4
"org.eclipse.jdt.internal.core.JavaElement.escapeMementoName(StringBuffer,String)",2,3,3
"org.eclipse.jdt.internal.core.JavaElement.exists()",1,1,2
"org.eclipse.jdt.internal.core.JavaElement.findNode(CompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getAncestor(int)",3,2,3
"org.eclipse.jdt.internal.core.JavaElement.getAttachedJavadoc(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getChildren()",2,2,2
"org.eclipse.jdt.internal.core.JavaElement.getChildrenOfType(int)",1,3,3
"org.eclipse.jdt.internal.core.JavaElement.getClassFile()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getElementInfo(IProgressMonitor)",2,1,2
"org.eclipse.jdt.internal.core.JavaElement.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleFromMemento(MementoTokenizer,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.JavaElement.getHandleIdentifier()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleMemento()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getHandleMemento(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getIndexOf(byte[],byte[],int,int)",7,4,10
"org.eclipse.jdt.internal.core.JavaElement.getJavaModel()",3,1,3
"org.eclipse.jdt.internal.core.JavaElement.getJavaProject()",3,1,3
"org.eclipse.jdt.internal.core.JavaElement.getJavadocBaseLocation()",6,4,7
"org.eclipse.jdt.internal.core.JavaElement.getLibraryJavadocLocation(IClasspathEntry)",4,4,6
"org.eclipse.jdt.internal.core.JavaElement.getOpenable()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getOpenableParent()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getParent()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getPrimaryElement()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getPrimaryElement(boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getResource()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getSchedulingRule()",4,5,5
"org.eclipse.jdt.internal.core.JavaElement.getSourceElementAt(int)",9,11,13
"org.eclipse.jdt.internal.core.JavaElement.getSourceMapper()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.getURLContents(URL,String)",8,15,33
"org.eclipse.jdt.internal.core.JavaElement.hasChildren()",2,2,2
"org.eclipse.jdt.internal.core.JavaElement.hashCode()",2,2,2
"org.eclipse.jdt.internal.core.JavaElement.isAncestorOf(IJavaElement)",1,3,3
"org.eclipse.jdt.internal.core.JavaElement.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.isSameCharacter(byte,byte)",2,2,3
"org.eclipse.jdt.internal.core.JavaElement.newDoesNotExistStatus()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.newJavaModelException(IStatus)",2,2,2
"org.eclipse.jdt.internal.core.JavaElement.newNotPresentException()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(Object,boolean,IProgressMonitor)",2,6,6
"org.eclipse.jdt.internal.core.JavaElement.readableName()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.resolved(Binding)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.tabString(int)",1,2,2
"org.eclipse.jdt.internal.core.JavaElement.toDebugString()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toString()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toString(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.JavaElement.toStringAncestors(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.JavaElement.toStringChildren(int,StringBuffer,Object)",2,2,4
"org.eclipse.jdt.internal.core.JavaElement.toStringInfo(int,StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.JavaElement.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toStringWithAncestors()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.toStringWithAncestors(boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.unresolved()",1,1,1
"org.eclipse.jdt.internal.core.JavaElement.validateAndCache(URL,FileNotFoundException)",3,5,10
"org.eclipse.jdt.internal.core.JavaElementDelta.JavaElementDelta(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.Key.Key(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.Key.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.JavaElementDelta.Key.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.addAffectedChild(JavaElementDelta)",9,9,20
"org.eclipse.jdt.internal.core.JavaElementDelta.addNewChild(JavaElementDelta)",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDelta.addResourceDelta(IResourceDelta)",4,3,6
"org.eclipse.jdt.internal.core.JavaElementDelta.added(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.added(IJavaElement,int)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.changed(IJavaElement,int)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.changedAST(CompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.clearAffectedChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.closed(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.contentChanged()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.createDeltaTree(IJavaElement,JavaElementDelta)",1,3,4
"org.eclipse.jdt.internal.core.JavaElementDelta.equalsAndSameParent(IJavaElement,IJavaElement)",1,3,3
"org.eclipse.jdt.internal.core.JavaElementDelta.find(IJavaElement)",2,1,2
"org.eclipse.jdt.internal.core.JavaElementDelta.findDescendant(Key)",5,2,5
"org.eclipse.jdt.internal.core.JavaElementDelta.fineGrained()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getAddedChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getAffectedChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getAncestors(IJavaElement)",4,2,4
"org.eclipse.jdt.internal.core.JavaElementDelta.getAnnotationDeltas()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getChangedChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getChildIndex(Key)",4,5,6
"org.eclipse.jdt.internal.core.JavaElementDelta.getChildrenOfType(int)",2,3,4
"org.eclipse.jdt.internal.core.JavaElementDelta.getCompilationUnitAST()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getDeltaFor(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getElement()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getMovedFromElement()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getMovedToElement()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getRemovedChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.getResourceDeltas()",2,2,3
"org.eclipse.jdt.internal.core.JavaElementDelta.growAndAddToArray(IJavaElementDelta[],IJavaElementDelta)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.insertDeltaTree(IJavaElement,JavaElementDelta)",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDelta.movedFrom(IJavaElement,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.movedTo(IJavaElement,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.opened(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.removeAffectedChild(JavaElementDelta)",2,2,3
"org.eclipse.jdt.internal.core.JavaElementDelta.removeAndShrinkArray(IJavaElementDelta[],int)",1,3,3
"org.eclipse.jdt.internal.core.JavaElementDelta.removeExistingChild(Key,int)",1,4,4
"org.eclipse.jdt.internal.core.JavaElementDelta.removed(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.removed(IJavaElement,int)",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDelta.sourceAttached(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.sourceDetached(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDelta.toDebugString(StringBuffer,int)",1,41,41
"org.eclipse.jdt.internal.core.JavaElementDelta.toDebugString(int)",2,9,12
"org.eclipse.jdt.internal.core.JavaElementDelta.toString()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.JavaElementDeltaBuilder(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.JavaElementDeltaBuilder(IJavaElement,int)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.ListItem.ListItem(IJavaElement,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.added(IJavaElement)",1,3,5
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.buildDeltas()",1,3,3
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.equals(char[][][],char[][][])",6,2,7
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findAdditions(IJavaElement,int)",2,6,9
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findAnnotationChanges(IAnnotation[],IAnnotation[],IJavaElement)",4,7,12
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findChangesInPositioning(IJavaElement,int)",3,7,9
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findContentChange(JavaElementInfo,JavaElementInfo,IJavaElement)",1,22,27
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.findDeletions()",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.getElementInfo(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.getNewPosition(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.getOldPosition(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.initialize()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.insertPositions(IJavaElement[],boolean)",1,3,5
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.isPositionedCorrectly(IJavaElement)",4,2,4
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.recordElementInfo(IJavaElement,JavaModel,int)",3,6,10
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.recordNewPositions(IJavaElement,int)",2,4,6
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.removeElementInfo(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.removed(IJavaElement)",1,3,5
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.toString()",1,2,2
"org.eclipse.jdt.internal.core.JavaElementDeltaBuilder.trimDelta(JavaElementDelta)",1,3,3
"org.eclipse.jdt.internal.core.JavaElementInfo.clone()",1,1,2
"org.eclipse.jdt.internal.core.JavaElementInfo.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptField(IField)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptInitializer(IInitializer)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptMemberType(IType)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptMethod(IMethod)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptPackageFragment(IPackageFragment)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.acceptType(IType)",1,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getFields()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getInitializers()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getMemberTypes()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getMethods()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getPackageFragments()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.getTypes()",2,1,2
"org.eclipse.jdt.internal.core.JavaElementRequestor.isCanceled()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementRequestor.reset()",1,1,1
"org.eclipse.jdt.internal.core.JavaElementRequestor.setCanceled(boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.JavaModel()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",1,4,4
"org.eclipse.jdt.internal.core.JavaModel.contains(IResource)",4,3,5
"org.eclipse.jdt.internal.core.JavaModel.copy(IJavaElement[],IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",1,5,5
"org.eclipse.jdt.internal.core.JavaModel.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.delete(IJavaElement[],boolean,IProgressMonitor)",1,5,5
"org.eclipse.jdt.internal.core.JavaModel.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.JavaModel.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getExternalTarget(IPath,boolean)",7,4,7
"org.eclipse.jdt.internal.core.JavaModel.getFile(Object)",1,1,2
"org.eclipse.jdt.internal.core.JavaModel.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",3,2,3
"org.eclipse.jdt.internal.core.JavaModel.getHandleMemento(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getJavaProject(IResource)",5,4,5
"org.eclipse.jdt.internal.core.JavaModel.getJavaProject(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getJavaProjects()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getPath()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getTarget(IPath,boolean)",2,1,2
"org.eclipse.jdt.internal.core.JavaModel.getUnderlyingResource()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getWorkspace()",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.getWorkspaceTarget(IPath)",3,2,4
"org.eclipse.jdt.internal.core.JavaModel.isExternalFile(IPath)",2,3,4
"org.eclipse.jdt.internal.core.JavaModel.isFile(Object)",2,2,2
"org.eclipse.jdt.internal.core.JavaModel.move(IJavaElement[],IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",1,5,5
"org.eclipse.jdt.internal.core.JavaModel.refreshExternalArchives(IJavaElement[],IProgressMonitor)",1,1,2
"org.eclipse.jdt.internal.core.JavaModel.rename(IJavaElement[],IJavaElement[],String[],boolean,IProgressMonitor)",1,4,5
"org.eclipse.jdt.internal.core.JavaModel.resource(PackageFragmentRoot)",1,1,1
"org.eclipse.jdt.internal.core.JavaModel.runOperation(MultiOperation,IJavaElement[],IJavaElement[],String[],IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.JavaModel.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.JavaModel.validateExistence(IResource)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelCache.JavaModelCache()",1,1,2
"org.eclipse.jdt.internal.core.JavaModelCache.getExistingElement(IJavaElement)",8,5,8
"org.eclipse.jdt.internal.core.JavaModelCache.getInfo(IJavaElement)",8,8,9
"org.eclipse.jdt.internal.core.JavaModelCache.getJarTypeRatio()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelCache.getMemoryRatio()",1,2,3
"org.eclipse.jdt.internal.core.JavaModelCache.getOpenableRatio()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelCache.getRatioForProperty(String)",2,3,3
"org.eclipse.jdt.internal.core.JavaModelCache.peekAtInfo(IJavaElement)",8,8,9
"org.eclipse.jdt.internal.core.JavaModelCache.putInfo(IJavaElement,Object)",2,2,7
"org.eclipse.jdt.internal.core.JavaModelCache.removeFromJarTypeCache(BinaryType)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelCache.removeInfo(JavaElement)",2,2,7
"org.eclipse.jdt.internal.core.JavaModelCache.resetJarTypeCache()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelCache.toString()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelCache.toStringFillingRation(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelInfo.computeNonJavaResources()",2,3,6
"org.eclipse.jdt.internal.core.JavaModelInfo.getNonJavaResources()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.CompilationParticipants.getCompilationParticipants(IJavaProject)",3,5,9
"org.eclipse.jdt.internal.core.JavaModelManager.CompilationParticipants.getRegisteredParticipants()",7,8,14
"org.eclipse.jdt.internal.core.JavaModelManager.CompilationParticipants.indexForSourceLevel(String)",10,2,10
"org.eclipse.jdt.internal.core.JavaModelManager.CompilationParticipants.managedMarkerTypes()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.CompilationParticipants.sortParticipants(ArrayList,IConfigurationElement[],int)",6,2,7
"org.eclipse.jdt.internal.core.JavaModelManager.EclipsePreferencesListener.preferenceChange(PreferenceChangeEvent)",1,23,26
"org.eclipse.jdt.internal.core.JavaModelManager.JavaModelManager()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.PerProjectInfo(IProject)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.addClasspathChange()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.forgetExternalTimestampsAndIndexes()",2,4,5
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.getResolvedClasspath()",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.readAndCacheClasspath(JavaProject)",1,7,7
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.rememberExternalLibTimestamps()",2,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.resetResolvedClasspath()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.setClasspath(IClasspathEntry[],IClasspathEntry[],IPath,IJavaModelStatus,IClasspathEntry[],Map,Map,IJavaModelStatus,boolean)",1,2,4
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.setRawClasspath(IClasspathEntry[],IClasspathEntry[],IPath,IJavaModelStatus)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.setRawClasspath(IClasspathEntry[],IPath,IJavaModelStatus)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.setResolvedClasspath(IClasspathEntry[],IClasspathEntry[],Map,Map,IJavaModelStatus,int,boolean)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.setResolvedClasspath(IClasspathEntry[],Map,Map,IJavaModelStatus,int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.toString()",1,8,8
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.writeAndCacheClasspath(JavaProject,IClasspathEntry[],IClasspathEntry[],IPath)",2,1,3
"org.eclipse.jdt.internal.core.JavaModelManager.PerProjectInfo.writeAndCacheClasspath(JavaProject,IClasspathEntry[],IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.PerWorkingCopyInfo(CompilationUnit,IProblemRequestor)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.acceptProblem(IProblem)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.beginReporting()",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.endReporting()",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.getProblemRequestor()",2,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.isActive()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.PerWorkingCopyInfo.toString()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.PersistedClasspathContainer.PersistedClasspathContainer(IJavaProject,IPath,IClasspathEntry[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PersistedClasspathContainer.getClasspathEntries()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PersistedClasspathContainer.getDescription()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PersistedClasspathContainer.getKind()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PersistedClasspathContainer.getPath()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.PersistedClasspathContainer.toString()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.VariablesAndContainersLoadHelper(DataInputStream)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.load()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadAccessRule()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadAccessRules()",2,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadAttribute()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadAttributes()",2,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadBoolean()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadClasspathEntries()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadClasspathEntry()",3,3,7
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadContainers(IJavaProject)",3,3,4
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadInt()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadPath()",2,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadPaths()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadProjects(IJavaModel)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadString()",3,3,7
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersLoadHelper.loadVariables()",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.VariablesAndContainersSaveHelper(DataOutputStream)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.save(ISaveContext)",1,4,6
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveAccessRule(ClasspathAccessRule)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveAccessRules(IAccessRule[])",1,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveAttribute(IClasspathAttribute)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveAttributes(IClasspathAttribute[])",1,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveClasspathEntries(IClasspathEntry[])",1,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveClasspathEntry(IClasspathEntry)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveContainers(IJavaProject,Map)",1,4,4
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveInt(int)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveNewId(Object,HashtableOfObjectToInt)",2,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.savePath(IPath)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.savePaths(IPath[])",1,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveProjects(IJavaProject[])",1,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveString(String)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.VariablesAndContainersSaveHelper.saveVariables(Map)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.ZipCache.ZipCache(Object)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.ZipCache.flush()",1,3,4
"org.eclipse.jdt.internal.core.JavaModelManager.ZipCache.getCache(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.ZipCache.setCache(IPath,ZipFile)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.addAssumedExternalFile(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.addDeprecatedOptions(Hashtable)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.addExternalFile(IPath)",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.addInvalidArchive(IPath)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.addNonChainingJar(IPath)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.batchContainerInitializations()",2,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.batchInitializationFinished()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.cacheToString(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(Object)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.clearExternalFileState(IPath)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.closeChildren(Object)",1,3,4
"org.eclipse.jdt.internal.core.JavaModelManager.closeZipFile(ZipFile)",3,2,5
"org.eclipse.jdt.internal.core.JavaModelManager.conflictsWithOutputLocation(IPath,JavaProject)",6,4,8
"org.eclipse.jdt.internal.core.JavaModelManager.containerAddInitializationInProgress(IJavaProject,IPath)",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerBeingInitializedGet(IJavaProject,IPath)",3,1,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerBeingInitializedPut(IJavaProject,IPath,IClasspathContainer)",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerBeingInitializedRemove(IJavaProject,IPath)",3,3,5
"org.eclipse.jdt.internal.core.JavaModelManager.containerGet(IJavaProject,IPath)",3,1,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerGetDefaultToPreviousSession(IJavaProject,IPath)",3,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerIsInitializationInProgress(IJavaProject,IPath)",3,1,3
"org.eclipse.jdt.internal.core.JavaModelManager.containerPut(IJavaProject,IPath,IClasspathContainer)",2,5,5
"org.eclipse.jdt.internal.core.JavaModelManager.containerPutIfInitializingWithSameEntries(IPath,IJavaProject[],IClasspathContainer[])",11,13,19
"org.eclipse.jdt.internal.core.JavaModelManager.containerRemove(IJavaProject)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.containerRemoveInitializationInProgress(IJavaProject,IPath)",3,3,5
"org.eclipse.jdt.internal.core.JavaModelManager.containersReset(String[])",1,6,6
"org.eclipse.jdt.internal.core.JavaModelManager.contentTypeChanged(ContentTypeChangeEvent)",1,2,4
"org.eclipse.jdt.internal.core.JavaModelManager.create(IFile,IJavaProject)",5,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.create(IFolder,IJavaProject)",6,4,7
"org.eclipse.jdt.internal.core.JavaModelManager.create(IResource,IJavaProject)",7,6,7
"org.eclipse.jdt.internal.core.JavaModelManager.createAnnotationProcessorManager()",8,5,9
"org.eclipse.jdt.internal.core.JavaModelManager.createClassFileFrom(IFile,IJavaProject)",2,3,4
"org.eclipse.jdt.internal.core.JavaModelManager.createCompilationUnitFrom(IFile,IJavaProject)",2,4,5
"org.eclipse.jdt.internal.core.JavaModelManager.createJarPackageFragmentRootFrom(IFile,IJavaProject)",3,3,5
"org.eclipse.jdt.internal.core.JavaModelManager.debugNewOpenableCacheStats()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.determineIfOnClasspath(IResource,IJavaProject)",11,13,20
"org.eclipse.jdt.internal.core.JavaModelManager.discardPerWorkingCopyInfo(CompilationUnit)",3,7,10
"org.eclipse.jdt.internal.core.JavaModelManager.doNotUse()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.doneSaving(ISaveContext)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.flushZipFiles(Object)",2,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.forceBatchInitializations(boolean)",3,2,4
"org.eclipse.jdt.internal.core.JavaModelManager.getClasspathBeingResolved()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(IPath,IJavaProject)",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.getClasspathListCache(String)",4,2,4
"org.eclipse.jdt.internal.core.JavaModelManager.getClasspathListFile(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getDefaultOptions()",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.getDefaultOptionsNoInitialization()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getDefaultPreferences()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getDeltaProcessor()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getDeltaState()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getElementsOutOfSynchWithBuffers()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getExistingElement(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getExternalManager()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getExternalWorkingCopyProjects()",1,4,5
"org.eclipse.jdt.internal.core.JavaModelManager.getIndexManager()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getInfo(IJavaElement)",3,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.getInstancePreferences()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getJavaModel()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getJavaModelManager()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(IProject,IProgressMonitor)",2,6,6
"org.eclipse.jdt.internal.core.JavaModelManager.getNonChainingJarsCache()",2,7,8
"org.eclipse.jdt.internal.core.JavaModelManager.getOpenableCacheSize()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getOption(String)",4,5,7
"org.eclipse.jdt.internal.core.JavaModelManager.getOption(String,boolean,IEclipsePreferences)",4,7,9
"org.eclipse.jdt.internal.core.JavaModelManager.getOptionLevel(String)",3,1,3
"org.eclipse.jdt.internal.core.JavaModelManager.getOptions()",3,8,9
"org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfo(IProject,boolean)",1,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(IProject)",3,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.getPerWorkingCopyInfo(CompilationUnit,boolean,boolean,IProblemRequestor)",1,4,8
"org.eclipse.jdt.internal.core.JavaModelManager.getPreviousSessionContainer(IPath,IJavaProject)",3,4,4
"org.eclipse.jdt.internal.core.JavaModelManager.getPreviousSessionVariable(String)",2,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.getReferencedClasspathEntries(IClasspathEntry,IJavaProject)",5,2,6
"org.eclipse.jdt.internal.core.JavaModelManager.getRegisteredContainerIDs()",2,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.getRegisteredVariableNames()",2,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.getResolvedVariablePath(IPath,boolean)",4,3,6
"org.eclipse.jdt.internal.core.JavaModelManager.getSerializationFile(IProject)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.getTemporaryCache()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.getUserLibraryManager()",1,1,3
"org.eclipse.jdt.internal.core.JavaModelManager.getVariableAndContainersFile()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getWorkingCopies(WorkingCopyOwner,boolean)",2,6,10
"org.eclipse.jdt.internal.core.JavaModelManager.getWorkspaceScope()",1,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.getZipFile(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.getZipFile(IPath,boolean)",6,10,12
"org.eclipse.jdt.internal.core.JavaModelManager.hasTemporaryCache()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(IJavaProject,IPath)",5,21,23
"org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(IJavaProject,IPath)",6,22,31
"org.eclipse.jdt.internal.core.JavaModelManager.initializePreferences()",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.intern(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.intern(char[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.isAssumedExternalFile(IPath)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.isClasspathBeingResolved(IJavaProject)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.isDeprecatedOption(String)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.isExternalFile(IPath)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.isInvalidArchive(IPath)",4,2,5
"org.eclipse.jdt.internal.core.JavaModelManager.isNonChainingJar(IPath)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.knowsOption(String)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.loadClasspathListCache(String)",1,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.loadVariablesAndContainers()",7,16,24
"org.eclipse.jdt.internal.core.JavaModelManager.loadVariablesAndContainers(IEclipsePreferences)",5,7,8
"org.eclipse.jdt.internal.core.JavaModelManager.peekAtInfo(IJavaElement)",3,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.prepareToSave(ISaveContext)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.putInfos(IJavaElement,Object,boolean,Map)",2,5,7
"org.eclipse.jdt.internal.core.JavaModelManager.putJarTypeInfo(IJavaElement,Object)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.readState(IProject)",5,8,10
"org.eclipse.jdt.internal.core.JavaModelManager.recreatePersistedContainer(IJavaProject,IPath,String,boolean)",2,6,7
"org.eclipse.jdt.internal.core.JavaModelManager.recreatePersistedContainer(String,String,boolean)",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.registerDebugOptionsListener(BundleContext)",1,27,27
"org.eclipse.jdt.internal.core.JavaModelManager.rememberScope(AbstractSearchScope)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.removeFromInvalidArchiveCache(IPath)",1,6,6
"org.eclipse.jdt.internal.core.JavaModelManager.removeFromJarTypeCache(BinaryType)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.removeInfoAndChildren(JavaElement)",3,6,11
"org.eclipse.jdt.internal.core.JavaModelManager.removePerProjectInfo(JavaProject,boolean)",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.resetClasspathListCache()",1,5,5
"org.eclipse.jdt.internal.core.JavaModelManager.resetExternalFilesCache()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.resetJarTypeCache()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.resetProjectOptions(JavaProject)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.resetProjectPreferences(JavaProject)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.resetTemporaryCache()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.resolveVariableEntry(IClasspathEntry,boolean)",11,8,11
"org.eclipse.jdt.internal.core.JavaModelManager.rollback(ISaveContext)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.saveBuiltState(PerProjectInfo)",2,6,9
"org.eclipse.jdt.internal.core.JavaModelManager.saveClasspathListCache(String)",1,3,5
"org.eclipse.jdt.internal.core.JavaModelManager.saveState(PerProjectInfo,ISaveContext)",2,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.saveVariablesAndContainers(ISaveContext)",1,2,4
"org.eclipse.jdt.internal.core.JavaModelManager.saving(ISaveContext)",5,10,13
"org.eclipse.jdt.internal.core.JavaModelManager.secondaryTypeAdding(String,char[],char[])",1,12,13
"org.eclipse.jdt.internal.core.JavaModelManager.secondaryTypes(IJavaProject,boolean,IProgressMonitor)",7,7,12
"org.eclipse.jdt.internal.core.JavaModelManager.secondaryTypesMerging(Hashtable)",2,9,10
"org.eclipse.jdt.internal.core.JavaModelManager.secondaryTypesRemoving(Hashtable,IFile)",1,12,16
"org.eclipse.jdt.internal.core.JavaModelManager.secondaryTypesRemoving(IFile,boolean)",4,11,14
"org.eclipse.jdt.internal.core.JavaModelManager.secondaryTypesSearching(IJavaProject,boolean,IProgressMonitor,PerProjectInfo)",1,11,16
"org.eclipse.jdt.internal.core.JavaModelManager.setBuildOrder(String[])",3,4,11
"org.eclipse.jdt.internal.core.JavaModelManager.setClasspathBeingResolved(IJavaProject,boolean)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.setLastBuiltState(IProject,Object)",1,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.setOptions(Hashtable)",5,6,11
"org.eclipse.jdt.internal.core.JavaModelManager.shutdown()",1,3,4
"org.eclipse.jdt.internal.core.JavaModelManager.startIndexing()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.startup()",1,6,7
"org.eclipse.jdt.internal.core.JavaModelManager.storePreference(String,String,IEclipsePreferences,Map)",5,6,10
"org.eclipse.jdt.internal.core.JavaModelManager.touchProjects(IProject[],IProgressMonitor)",1,5,6
"org.eclipse.jdt.internal.core.JavaModelManager.traceVariableAndContainers(String,long)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.unregisterDebugOptionsListener()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.variableGet(String)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelManager.variableGetDefaultToPreviousSession(String)",2,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.variableInitializationInProgress()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.variableNames()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.variablePreferencesPut(String,IPath)",1,2,3
"org.eclipse.jdt.internal.core.JavaModelManager.variablePut(String,IPath)",2,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.variablePutIfInitializingWithSameValue(String[],IPath[])",4,1,4
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_batching_containers_initialization(IJavaProject,IPath)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_container_initialization_failed(IJavaProject,IPath,IClasspathContainer,ClasspathContainerInitializer)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_container_null_failure_container(IJavaProject,IPath,ClasspathContainerInitializer)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_container_using_failure_container(IJavaProject,IPath,ClasspathContainerInitializer)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_container_value_after_initialization(IJavaProject,IPath,IClasspathContainer)",1,4,4
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_missbehaving_container(IJavaProject,IPath,IClasspathEntry[])",2,2,2
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_missbehaving_container(IPath,IJavaProject[],IClasspathContainer[],IClasspathContainer,IClasspathEntry[],IClasspathEntry[])",3,6,6
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_missbehaving_container_null_entries(IJavaProject,IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_no_container_initializer_found(IJavaProject,IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_reentering_project_container_access(IPath,IJavaProject,IClasspathContainer)",1,3,3
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_reentering_variable_access(String,IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_triggering_container_initialization(IJavaProject,IPath,ClasspathContainerInitializer)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.verbose_triggering_container_initialization_invocation_trace()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelManager.verifyArchiveContent(IPath)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[],IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.JavaModelOperation(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.addAction(IPostAction)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(IJavaElementDelta)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.addReconcileDelta(ICompilationUnit,IJavaElementDelta)",1,4,4
"org.eclipse.jdt.internal.core.JavaModelOperation.applyTextEdit(ICompilationUnit,TextEdit)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.beginTask(String,int)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.canModifyRoots()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.checkCanceled()",2,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.commonVerify()",4,1,5
"org.eclipse.jdt.internal.core.JavaModelOperation.copyResources(IResource[],IPath)",1,3,4
"org.eclipse.jdt.internal.core.JavaModelOperation.createFile(IContainer,String,InputStream,boolean)",1,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.createFolder(IContainer,String,boolean)",1,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.deleteEmptyPackageFragment(IPackageFragment,boolean,IResource)",1,4,7
"org.eclipse.jdt.internal.core.JavaModelOperation.deleteResource(IResource,int)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.deleteResources(IResource[],boolean)",2,1,5
"org.eclipse.jdt.internal.core.JavaModelOperation.done()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.equalsOneOf(IPath,IPath[])",3,2,3
"org.eclipse.jdt.internal.core.JavaModelOperation.executeNestedOperation(JavaModelOperation,int)",5,4,6
"org.eclipse.jdt.internal.core.JavaModelOperation.firstActionWithID(String,int)",3,2,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getAttribute(Object)",3,2,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getCompilationUnitFor(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getCurrentOperationStack()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.getDocument(ICompilationUnit)",2,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.getElementToProcess()",2,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getJavaModel()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getNestedFolders(IPackageFragmentRoot)",1,4,5
"org.eclipse.jdt.internal.core.JavaModelOperation.getParentElement()",2,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.getParentElements()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getResultElements()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getSchedulingRule()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.getSubProgressMonitor(int)",1,1,2
"org.eclipse.jdt.internal.core.JavaModelOperation.hasModifiedResource()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.internalWorked(double)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.isCanceled()",2,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.isTopLevelOperation()",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.moveResources(IResource[],IPath)",1,3,5
"org.eclipse.jdt.internal.core.JavaModelOperation.newJavaElementDelta()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.popOperation()",2,3,3
"org.eclipse.jdt.internal.core.JavaModelOperation.postAction(IPostAction,int)",3,7,11
"org.eclipse.jdt.internal.core.JavaModelOperation.prefixesOneOf(IPath,IPath[])",3,2,3
"org.eclipse.jdt.internal.core.JavaModelOperation.pushOperation(JavaModelOperation)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.removeAllPostAction(String)",2,3,4
"org.eclipse.jdt.internal.core.JavaModelOperation.removeReconcileDelta(ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.run(IProgressMonitor)",2,12,12
"org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(IProgressMonitor)",5,5,7
"org.eclipse.jdt.internal.core.JavaModelOperation.runPostActions()",1,3,3
"org.eclipse.jdt.internal.core.JavaModelOperation.setAttribute(Object,Object)",2,1,3
"org.eclipse.jdt.internal.core.JavaModelOperation.setCanceled(boolean)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.setNested(boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.setTaskName(String)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.subTask(String)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelOperation.verify()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelOperation.worked(int)",1,2,2
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(CoreException)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement,IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement,IPath,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,Throwable)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,int,IJavaElement,IPath,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.JavaModelStatus(int,int,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getBits()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getElements()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getMessage()",47,43,73
"org.eclipse.jdt.internal.core.JavaModelStatus.getPath()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.getSeverity()",2,3,4
"org.eclipse.jdt.internal.core.JavaModelStatus.getString()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.isDoesNotExist()",1,1,2
"org.eclipse.jdt.internal.core.JavaModelStatus.isMultiStatus()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.isOK()",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.matches(JavaModelStatus,int)",1,1,4
"org.eclipse.jdt.internal.core.JavaModelStatus.matches(int)",4,3,4
"org.eclipse.jdt.internal.core.JavaModelStatus.newMultiStatus(IJavaModelStatus[])",1,1,1
"org.eclipse.jdt.internal.core.JavaModelStatus.toString()",2,1,2
"org.eclipse.jdt.internal.core.JavaProject.ClasspathResolutionBreakpointListener.breakpoint(int)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.JavaProject()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.JavaProject(IProject,JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.addCPResolutionBPListener(ClasspathResolutionBreakpointListener)",1,1,2
"org.eclipse.jdt.internal.core.JavaProject.addToBuildSpec(String)",1,2,2
"org.eclipse.jdt.internal.core.JavaProject.addToResult(IClasspathEntry,IClasspathEntry,ResolvedClasspath,LinkedHashSet,ExternalFoldersManager,Map,boolean,Map)",1,9,9
"org.eclipse.jdt.internal.core.JavaProject.areClasspathsEqual(IClasspathEntry[],IClasspathEntry[])",6,3,7
"org.eclipse.jdt.internal.core.JavaProject.areClasspathsEqual(IClasspathEntry[],IClasspathEntry[],IPath,IPath)",5,2,5
"org.eclipse.jdt.internal.core.JavaProject.areClasspathsEqual(IClasspathEntry[],IPath,IClasspathEntry[])",6,3,8
"org.eclipse.jdt.internal.core.JavaProject.breakpoint(int,JavaProject)",2,2,3
"org.eclipse.jdt.internal.core.JavaProject.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.canonicalizedPath(IPath)",8,6,11
"org.eclipse.jdt.internal.core.JavaProject.close()",1,5,6
"org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(ClasspathEntry,HashSet,ObjectVector)",5,8,10
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry)",1,1,2
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry,ObjectVector,HashSet,IClasspathEntry,boolean,Map)",9,15,25
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry[],ObjectVector,HashSet,IClasspathEntry,boolean,Map)",1,3,3
"org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(IClasspathEntry[],boolean,Map)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.computeSharedPropertyFileName(QualifiedName)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.configure()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.contains(IResource)",7,12,19
"org.eclipse.jdt.internal.core.JavaProject.copyFromOldChainedEntry(ClasspathEntry,ClasspathEntry)",1,1,4
"org.eclipse.jdt.internal.core.JavaProject.createClasspathProblemMarker(IJavaModelStatus)",6,8,19
"org.eclipse.jdt.internal.core.JavaProject.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.decodeClasspath(String,Map)",2,8,13
"org.eclipse.jdt.internal.core.JavaProject.decodeClasspathEntry(String)",3,2,7
"org.eclipse.jdt.internal.core.JavaProject.deconfigure()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.defaultClasspath()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.defaultOutputLocation()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.driveExists(IPath,Map)",4,3,4
"org.eclipse.jdt.internal.core.JavaProject.encodeClasspath(IClasspathEntry[],IClasspathEntry[],IPath,boolean,Map)",1,5,6
"org.eclipse.jdt.internal.core.JavaProject.encodeClasspathEntry(IClasspathEntry)",1,1,2
"org.eclipse.jdt.internal.core.JavaProject.equals(Object)",3,1,3
"org.eclipse.jdt.internal.core.JavaProject.findElement(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findElement(IPath,WorkingCopyOwner)",6,7,10
"org.eclipse.jdt.internal.core.JavaProject.findElement(String,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragment(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragment(String)",4,3,4
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragment0(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragmentRoot(IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragmentRoot0(IPath)",4,2,4
"org.eclipse.jdt.internal.core.JavaProject.findPackageFragmentRoots(IClasspathEntry)",3,3,4
"org.eclipse.jdt.internal.core.JavaProject.findType(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,NameLookup,boolean,IProgressMonitor)",5,3,5
"org.eclipse.jdt.internal.core.JavaProject.findType(String,String)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,String,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,String,NameLookup,boolean,IProgressMonitor)",1,1,2
"org.eclipse.jdt.internal.core.JavaProject.findType(String,String,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,String,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.findType(String,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.flushClasspathProblemMarkers(boolean,boolean,boolean)",1,12,14
"org.eclipse.jdt.internal.core.JavaProject.getAccessRestrictions(String)",2,2,5
"org.eclipse.jdt.internal.core.JavaProject.getAllPackageFragmentRoots()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getAllPackageFragmentRoots(Map)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getBPListeners()",2,1,2
"org.eclipse.jdt.internal.core.JavaProject.getClasspathEntryFor(IPath)",3,2,4
"org.eclipse.jdt.internal.core.JavaProject.getCycleMarker()",4,4,6
"org.eclipse.jdt.internal.core.JavaProject.getEclipsePreferences()",3,18,20
"org.eclipse.jdt.internal.core.JavaProject.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getFolderPackageFragmentRoot(IPath)",2,2,2
"org.eclipse.jdt.internal.core.JavaProject.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",5,5,7
"org.eclipse.jdt.internal.core.JavaProject.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getJavaCommandIndex(ICommand[])",3,2,3
"org.eclipse.jdt.internal.core.JavaProject.getJavaProjectElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getOption(String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getOptions(boolean)",4,13,16
"org.eclipse.jdt.internal.core.JavaProject.getOutputLocation()",3,2,3
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(IPath)",6,9,10
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(IResource)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(IResource,IPath)",6,2,6
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(String)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot0(IPath)",2,1,2
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots(IClasspathEntry)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragments()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentsInRoots(IPackageFragmentRoot[])",1,3,4
"org.eclipse.jdt.internal.core.JavaProject.getPath()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getPluginWorkingLocation()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getProject()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getProjectCache()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getRawClasspath()",3,2,3
"org.eclipse.jdt.internal.core.JavaProject.getReferencedClasspathEntries()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getRequiredProjectNames()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath()",1,3,3
"org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(boolean)",3,9,10
"org.eclipse.jdt.internal.core.JavaProject.getSharedProperty(String)",4,7,8
"org.eclipse.jdt.internal.core.JavaProject.getSourceMapper()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.getUnderlyingResource()",2,2,2
"org.eclipse.jdt.internal.core.JavaProject.hasBuildState()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.hasClasspathCycle(IClasspathEntry[])",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.hasCycleMarker()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.hasJavaNature(IProject)",2,2,3
"org.eclipse.jdt.internal.core.JavaProject.hasSource()",3,2,4
"org.eclipse.jdt.internal.core.JavaProject.hasUTF8BOM(byte[])",4,1,4
"org.eclipse.jdt.internal.core.JavaProject.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.isOnClasspath(IJavaElement)",9,5,15
"org.eclipse.jdt.internal.core.JavaProject.isOnClasspath(IResource)",5,4,9
"org.eclipse.jdt.internal.core.JavaProject.isOnClasspathEntry(IPath,boolean,boolean,IClasspathEntry)",5,4,7
"org.eclipse.jdt.internal.core.JavaProject.loadPreferences()",3,4,7
"org.eclipse.jdt.internal.core.JavaProject.newEvaluationContext()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newNameLookup(ICompilationUnit[])",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newNameLookup(WorkingCopyOwner)",1,2,2
"org.eclipse.jdt.internal.core.JavaProject.newSearchableNameEnvironment(ICompilationUnit[])",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newSearchableNameEnvironment(WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTemporaryInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IRegion,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IRegion,WorkingCopyOwner,IProgressMonitor)",2,1,2
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IType,IRegion,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(IType,IRegion,WorkingCopyOwner,IProgressMonitor)",3,1,3
"org.eclipse.jdt.internal.core.JavaProject.projectPrerequisites(IClasspathEntry[])",2,4,4
"org.eclipse.jdt.internal.core.JavaProject.readFileEntries(Map)",1,4,4
"org.eclipse.jdt.internal.core.JavaProject.readFileEntriesWithException(Map)",5,6,8
"org.eclipse.jdt.internal.core.JavaProject.readOutputLocation()",2,4,4
"org.eclipse.jdt.internal.core.JavaProject.readRawClasspath()",2,4,4
"org.eclipse.jdt.internal.core.JavaProject.removeCPResolutionBPListener(ClasspathResolutionBreakpointListener)",2,1,3
"org.eclipse.jdt.internal.core.JavaProject.removeFromBuildSpec(String)",3,3,3
"org.eclipse.jdt.internal.core.JavaProject.resetCaches()",1,2,2
"org.eclipse.jdt.internal.core.JavaProject.resetResolvedClasspath()",1,1,2
"org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(IClasspathEntry[])",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(IClasspathEntry[],IClasspathEntry[],boolean,boolean)",5,35,40
"org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(IClasspathEntry[],boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(PerProjectInfo,boolean,boolean)",1,7,8
"org.eclipse.jdt.internal.core.JavaProject.resource(PackageFragmentRoot)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.rootID()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setJavaCommand(IProjectDescription,ICommand)",1,2,2
"org.eclipse.jdt.internal.core.JavaProject.setOption(String,String)",1,2,3
"org.eclipse.jdt.internal.core.JavaProject.setOptions(Map<String, String>)",2,5,8
"org.eclipse.jdt.internal.core.JavaProject.setOutputLocation(IPath,IProgressMonitor)",3,1,3
"org.eclipse.jdt.internal.core.JavaProject.setProject(IProject)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IClasspathEntry[],IPath,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IClasspathEntry[],IPath,boolean,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IPath,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IPath,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(IClasspathEntry[],boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.setSharedProperty(String,String)",1,4,4
"org.eclipse.jdt.internal.core.JavaProject.updateCycleParticipants(ArrayList,LinkedHashSet,IWorkspaceRoot,HashSet,Map)",1,11,12
"org.eclipse.jdt.internal.core.JavaProject.updatePreferences(IEclipsePreferences)",1,4,5
"org.eclipse.jdt.internal.core.JavaProject.validateCycles(Map)",5,14,17
"org.eclipse.jdt.internal.core.JavaProject.validateExistence(IResource)",2,3,3
"org.eclipse.jdt.internal.core.JavaProject.verbose_reentering_classpath_resolution()",1,1,1
"org.eclipse.jdt.internal.core.JavaProject.writeFileEntries(IClasspathEntry[],IClasspathEntry[],IPath)",3,4,7
"org.eclipse.jdt.internal.core.JavaProject.writeFileEntries(IClasspathEntry[],IPath)",1,1,1
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.JavaProjectElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.ProjectCache.ProjectCache(IPackageFragmentRoot[],Map,Map)",1,1,1
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.addSuperPackageNames(String[],HashtableOfArrayToObject)",1,3,3
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.computeNonJavaResources(JavaProject)",2,16,23
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.getNonJavaResources(JavaProject)",1,2,2
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.getProjectCache(JavaProject)",1,6,6
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.initializePackageNames(IPackageFragmentRoot,HashSetOfArray)",1,3,5
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.isClasspathEntryOrOutputLocation(IPath,IPath,IClasspathEntry[],IPath)",5,4,7
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.newNameLookup(JavaProject,ICompilationUnit[])",6,8,12
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.resetCaches()",1,1,1
"org.eclipse.jdt.internal.core.JavaProjectElementInfo.setNonJavaResources(Object[])",1,1,1
"org.eclipse.jdt.internal.core.JavadocContents.JavadocContents(BinaryType,String)",1,1,1
"org.eclipse.jdt.internal.core.JavadocContents.JavadocContents(String)",1,2,2
"org.eclipse.jdt.internal.core.JavadocContents.computeChildRange(char[],int)",6,9,10
"org.eclipse.jdt.internal.core.JavadocContents.computeChildRange(int,char[],int)",1,4,4
"org.eclipse.jdt.internal.core.JavadocContents.computeChildrenSections()",1,1,8
"org.eclipse.jdt.internal.core.JavadocContents.computeFieldRange(IField)",1,5,6
"org.eclipse.jdt.internal.core.JavadocContents.computeMethodAnchorPrefixEnd(BinaryMethod)",6,9,12
"org.eclipse.jdt.internal.core.JavadocContents.computeMethodRange(IMethod)",1,7,8
"org.eclipse.jdt.internal.core.JavadocContents.computeTypeRange()",4,10,18
"org.eclipse.jdt.internal.core.JavadocContents.getFieldDoc(IField)",4,4,6
"org.eclipse.jdt.internal.core.JavadocContents.getJavadoc8Anchor(char[])",2,3,7
"org.eclipse.jdt.internal.core.JavadocContents.getMethodDoc(IMethod)",4,4,6
"org.eclipse.jdt.internal.core.JavadocContents.getPackageDoc()",5,4,9
"org.eclipse.jdt.internal.core.JavadocContents.getTypeDoc()",4,3,5
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.LRUCacheEnumerator(LRUEnumeratorElement)",1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.LRUEnumeratorElement.LRUEnumeratorElement(Object)",1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.hasMoreElements()",1,1,1
"org.eclipse.jdt.internal.core.LRUCacheEnumerator.nextElement()",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.LambdaExpression(JavaElement,LambdaExpression)",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.LambdaExpression(JavaElement,String,int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.LambdaExpression(JavaElement,String,int,int,int,LambdaMethod)",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.equals(Object)",4,3,5
"org.eclipse.jdt.internal.core.LambdaExpression.findLambdaSuperType(LambdaExpression)",5,4,5
"org.eclipse.jdt.internal.core.LambdaExpression.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",14,9,20
"org.eclipse.jdt.internal.core.LambdaExpression.getHandleMemento(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.getHandleMemento(StringBuffer,boolean,boolean)",1,3,3
"org.eclipse.jdt.internal.core.LambdaExpression.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.getMethod()",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.getPrimaryElement(boolean)",4,4,5
"org.eclipse.jdt.internal.core.LambdaExpression.getSuperInterfaceTypeSignatures()",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.isLambda()",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.isLocal()",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.makeTypeElementInfo(LambdaExpression,String,int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.resolved(Binding)",1,1,1
"org.eclipse.jdt.internal.core.LambdaExpression.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.LambdaFactory.createLambdaExpression(JavaElement,LambdaExpression)",2,1,2
"org.eclipse.jdt.internal.core.LambdaFactory.createLambdaExpression(JavaElement,String,int,int,int)",2,1,2
"org.eclipse.jdt.internal.core.LambdaFactory.createLambdaMethod(JavaElement,LambdaExpression)",1,4,4
"org.eclipse.jdt.internal.core.LambdaFactory.createLambdaMethod(JavaElement,String,String,int,int,int,String[],String[],String)",1,2,3
"org.eclipse.jdt.internal.core.LambdaFactory.getTypeSignature(JavaModelManager,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.core.LambdaFactory.isBinaryMember(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.LambdaMethod(JavaElement,String,String,int,String[],String[],String,SourceMethodElementInfo)",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.LambdaMethod.getElementInfo(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.getHandleMemento(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.getHandleMemento(StringBuffer,boolean)",1,4,4
"org.eclipse.jdt.internal.core.LambdaMethod.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.getKey()",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.getReturnType()",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.getSignature()",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.isLambdaMethod()",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.LambdaMethod.resolved(Binding)",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.LocalVariable(JavaElement,String,int,int,int,int,String,Annotation[],int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.LocalVariable(JavaElement,String,int,int,int,int,String,Annotation[],int,boolean,Annotation[][])",1,3,4
"org.eclipse.jdt.internal.core.LocalVariable.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.equals(Object)",2,5,6
"org.eclipse.jdt.internal.core.LocalVariable.exists()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.generateInfos(Object,HashMap,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getAnnotation(Annotation,JavaElement)",1,3,4
"org.eclipse.jdt.internal.core.LocalVariable.getAnnotation(String)",3,2,3
"org.eclipse.jdt.internal.core.LocalVariable.getAnnotationMemberValue(MemberValuePair,Expression,JavaElement)",12,12,17
"org.eclipse.jdt.internal.core.LocalVariable.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getAnnotations(Annotation[])",2,2,4
"org.eclipse.jdt.internal.core.LocalVariable.getClassFile()",2,2,3
"org.eclipse.jdt.internal.core.LocalVariable.getCorrespondingResource()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getDeclaringMember()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getFlags()",4,4,5
"org.eclipse.jdt.internal.core.LocalVariable.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,2,2
"org.eclipse.jdt.internal.core.LocalVariable.getHandleMemento(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getHandleMemento(StringBuffer,boolean)",1,3,3
"org.eclipse.jdt.internal.core.LocalVariable.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getKey(boolean)",5,6,6
"org.eclipse.jdt.internal.core.LocalVariable.getNameRange()",4,4,5
"org.eclipse.jdt.internal.core.LocalVariable.getPath()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getSource()",3,1,5
"org.eclipse.jdt.internal.core.LocalVariable.getSourceRange()",4,4,4
"org.eclipse.jdt.internal.core.LocalVariable.getTypeRoot()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getTypeSignature()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.getUnderlyingResource()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.isParameter()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.resource()",1,1,1
"org.eclipse.jdt.internal.core.LocalVariable.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.Member.Member(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.Member.areSimilarMethods(String,String[],String,String[],String[])",5,5,6
"org.eclipse.jdt.internal.core.Member.convertConstant(Constant)",13,11,14
"org.eclipse.jdt.internal.core.Member.findMethods(IMethod,IMethod[])",2,5,5
"org.eclipse.jdt.internal.core.Member.getCategories()",5,2,5
"org.eclipse.jdt.internal.core.Member.getClassFile()",2,2,3
"org.eclipse.jdt.internal.core.Member.getDeclaringType()",2,1,2
"org.eclipse.jdt.internal.core.Member.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.Member.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",25,10,40
"org.eclipse.jdt.internal.core.Member.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.Member.getJavadocRange()",8,6,13
"org.eclipse.jdt.internal.core.Member.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.Member.getOuterMostLocalContext()",4,3,5
"org.eclipse.jdt.internal.core.Member.getType(String,int)",2,2,2
"org.eclipse.jdt.internal.core.Member.getTypeRoot()",1,2,2
"org.eclipse.jdt.internal.core.Member.isBinary()",1,1,1
"org.eclipse.jdt.internal.core.Member.isMainMethod(IMethod)",4,8,8
"org.eclipse.jdt.internal.core.Member.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.Member.readableName()",2,2,2
"org.eclipse.jdt.internal.core.MemberElementInfo.getModifiers()",1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.getNameSourceEnd()",1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.getNameSourceStart()",1,1,1
"org.eclipse.jdt.internal.core.MemberElementInfo.setFlags(int)",1,1,1
"org.eclipse.jdt.internal.core.MemberValuePair.MemberValuePair(String)",1,1,1
"org.eclipse.jdt.internal.core.MemberValuePair.MemberValuePair(String,Object,int)",1,1,1
"org.eclipse.jdt.internal.core.MemberValuePair.equals(Object)",2,8,9
"org.eclipse.jdt.internal.core.MemberValuePair.getMemberName()",1,1,1
"org.eclipse.jdt.internal.core.MemberValuePair.getValue()",1,1,1
"org.eclipse.jdt.internal.core.MemberValuePair.getValueKind()",1,1,1
"org.eclipse.jdt.internal.core.MemberValuePair.hashCode()",1,3,3
"org.eclipse.jdt.internal.core.ModelUpdater.addToParentInfo(Openable)",1,3,4
"org.eclipse.jdt.internal.core.ModelUpdater.close(Openable)",1,1,2
"org.eclipse.jdt.internal.core.ModelUpdater.elementAdded(Openable)",2,3,4
"org.eclipse.jdt.internal.core.ModelUpdater.elementChanged(Openable)",1,1,1
"org.eclipse.jdt.internal.core.ModelUpdater.elementRemoved(Openable)",2,3,6
"org.eclipse.jdt.internal.core.ModelUpdater.processJavaDelta(IJavaElementDelta)",1,2,2
"org.eclipse.jdt.internal.core.ModelUpdater.removeFromParentInfo(Openable)",1,3,4
"org.eclipse.jdt.internal.core.ModelUpdater.traverseDelta(IJavaElementDelta,IPackageFragmentRoot,IJavaProject)",4,7,13
"org.eclipse.jdt.internal.core.MoveElementsOperation.MoveElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.MoveElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.MoveElementsOperation.isMove()",1,1,1
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.MovePackageFragmentRootOperation(IPackageFragmentRoot,IPath,int,int,IClasspathEntry)",1,1,1
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.executeOperation()",1,8,10
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.moveResource(IPackageFragmentRoot,IClasspathEntry,IWorkspaceRoot)",6,13,16
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.removeEntryFromClasspath(IPath,IJavaProject)",1,6,7
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.renameEntryInClasspath(IPath,IJavaProject)",1,14,17
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.renamePatterns(IPath,IPath[])",1,5,5
"org.eclipse.jdt.internal.core.MovePackageFragmentRootOperation.updateReferringProjectClasspaths(IPath,IJavaProject)",3,2,3
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation.MoveResourceElementsOperation(IJavaElement[],IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.MoveResourceElementsOperation.isMove()",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.MultiOperation(IJavaElement[],IJavaElement[],boolean)",1,4,4
"org.eclipse.jdt.internal.core.MultiOperation.MultiOperation(IJavaElement[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.error(int,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.executeOperation()",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.getDestinationParent(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.getNewNameFor(IJavaElement)",1,5,5
"org.eclipse.jdt.internal.core.MultiOperation.initializeRenamings()",1,4,5
"org.eclipse.jdt.internal.core.MultiOperation.isMove()",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.isRename()",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.processElements()",3,7,7
"org.eclipse.jdt.internal.core.MultiOperation.setInsertBefore(IJavaElement,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.setRenamings(String[])",1,1,1
"org.eclipse.jdt.internal.core.MultiOperation.verifyDestination(IJavaElement,IJavaElement)",2,13,20
"org.eclipse.jdt.internal.core.MultiOperation.verifyRenaming(IJavaElement)",4,2,7
"org.eclipse.jdt.internal.core.MultiOperation.verifySibling(IJavaElement,IJavaElement)",1,4,4
"org.eclipse.jdt.internal.core.NameLookup.Answer.Answer(IType,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.NameLookup.Answer.ignoreIfBetter()",1,2,2
"org.eclipse.jdt.internal.core.NameLookup.Answer.isBetter(Answer)",3,2,4
"org.eclipse.jdt.internal.core.NameLookup.NameLookup(IPackageFragmentRoot[],HashtableOfArrayToObject,ICompilationUnit[],Map)",10,17,27
"org.eclipse.jdt.internal.core.NameLookup.acceptType(IType,int,boolean)",6,3,9
"org.eclipse.jdt.internal.core.NameLookup.findAllTypes(String,boolean,int,IJavaElementRequestor)",6,4,7
"org.eclipse.jdt.internal.core.NameLookup.findCompilationUnit(String)",5,6,7
"org.eclipse.jdt.internal.core.NameLookup.findCompilationUnit(String[],String,PackageFragmentRoot)",4,3,5
"org.eclipse.jdt.internal.core.NameLookup.findPackageFragment(IPath)",16,11,20
"org.eclipse.jdt.internal.core.NameLookup.findPackageFragments(String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.NameLookup.findPackageFragments(String,boolean,boolean)",5,19,23
"org.eclipse.jdt.internal.core.NameLookup.findSecondaryType(String,String,IJavaProject,boolean,IProgressMonitor)",4,6,8
"org.eclipse.jdt.internal.core.NameLookup.findType(String,IPackageFragment,boolean,int)",2,1,2
"org.eclipse.jdt.internal.core.NameLookup.findType(String,IPackageFragment,boolean,int,boolean,boolean)",2,2,4
"org.eclipse.jdt.internal.core.NameLookup.findType(String,String,boolean,int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.NameLookup.findType(String,String,boolean,int,boolean,boolean,boolean,IProgressMonitor)",13,21,32
"org.eclipse.jdt.internal.core.NameLookup.findType(String,boolean,int)",1,1,2
"org.eclipse.jdt.internal.core.NameLookup.findType(String,boolean,int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.NameLookup.findType(String,boolean,int,boolean,boolean,boolean,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.NameLookup.getMemberType(IType,String,int)",1,3,3
"org.eclipse.jdt.internal.core.NameLookup.getViolatedRestriction(String,String,IType,AccessRestriction)",1,3,3
"org.eclipse.jdt.internal.core.NameLookup.isPackage(String[])",1,1,1
"org.eclipse.jdt.internal.core.NameLookup.isPrimaryType(String,IType,boolean)",3,2,3
"org.eclipse.jdt.internal.core.NameLookup.nameMatches(String,ICompilationUnit,boolean)",2,2,2
"org.eclipse.jdt.internal.core.NameLookup.nameMatches(String,IJavaElement,boolean)",2,2,2
"org.eclipse.jdt.internal.core.NameLookup.seekPackageFragments(String,boolean,IJavaElementRequestor)",13,11,14
"org.eclipse.jdt.internal.core.NameLookup.seekTypes(String,IPackageFragment,boolean,int,IJavaElementRequestor)",1,1,1
"org.eclipse.jdt.internal.core.NameLookup.seekTypes(String,IPackageFragment,boolean,int,IJavaElementRequestor,boolean)",5,11,16
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInBinaryPackage(String,IPackageFragment,boolean,int,IJavaElementRequestor)",5,13,16
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInSourcePackage(String,IPackageFragment,int,boolean,String,int,IJavaElementRequestor)",10,10,18
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInTopLevelType(String,int,IType,IJavaElementRequestor,int)",4,3,4
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInType(String,int,IType,IJavaElementRequestor,int)",7,6,9
"org.eclipse.jdt.internal.core.NameLookup.seekTypesInWorkingCopies(String,IPackageFragment,int,boolean,String,int,IJavaElementRequestor,boolean)",16,19,23
"org.eclipse.jdt.internal.core.NamedMember.NamedMember(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.NamedMember.appendTypeParameters(StringBuffer)",2,6,7
"org.eclipse.jdt.internal.core.NamedMember.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.NamedMember.getFullyQualifiedName(char,boolean)",2,2,2
"org.eclipse.jdt.internal.core.NamedMember.getFullyQualifiedParameterizedName(String,String)",2,3,4
"org.eclipse.jdt.internal.core.NamedMember.getKey(IField,boolean)",1,1,1
"org.eclipse.jdt.internal.core.NamedMember.getKey(IMethod,boolean)",1,7,7
"org.eclipse.jdt.internal.core.NamedMember.getKey(IType,boolean)",1,5,5
"org.eclipse.jdt.internal.core.NamedMember.getOccurrenceCountSignature()",1,1,1
"org.eclipse.jdt.internal.core.NamedMember.getPackageFragment()",1,1,1
"org.eclipse.jdt.internal.core.NamedMember.getTypeParameters()",1,1,1
"org.eclipse.jdt.internal.core.NamedMember.getTypeQualifiedName(char,boolean)",5,7,11
"org.eclipse.jdt.internal.core.NamedMember.resolveType(String)",1,1,1
"org.eclipse.jdt.internal.core.NamedMember.resolveType(String,WorkingCopyOwner)",1,3,3
"org.eclipse.jdt.internal.core.NonJavaResource.NonJavaResource(Object,IResource)",1,1,1
"org.eclipse.jdt.internal.core.NonJavaResource.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.NonJavaResource.getChildren()",3,3,5
"org.eclipse.jdt.internal.core.NonJavaResource.getContents()",2,2,2
"org.eclipse.jdt.internal.core.NonJavaResource.getEntryName()",1,4,4
"org.eclipse.jdt.internal.core.NonJavaResource.getFullPath()",1,1,1
"org.eclipse.jdt.internal.core.NonJavaResource.getName()",1,1,1
"org.eclipse.jdt.internal.core.NonJavaResource.getPackageFragmentRoot()",3,3,3
"org.eclipse.jdt.internal.core.NonJavaResource.getParent()",1,1,1
"org.eclipse.jdt.internal.core.NonJavaResource.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.NonJavaResource.isFile()",1,1,1
"org.eclipse.jdt.internal.core.NonJavaResource.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.NonJavaResource.toString()",1,1,1
"org.eclipse.jdt.internal.core.NullBuffer.NullBuffer(IFile,IOpenable,boolean)",1,1,1
"org.eclipse.jdt.internal.core.Openable.Openable(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.Openable.bufferChanged(BufferChangedEvent)",1,2,2
"org.eclipse.jdt.internal.core.Openable.canBeRemovedFromCache()",1,1,2
"org.eclipse.jdt.internal.core.Openable.canBufferBeRemovedFromCache(IBuffer)",1,1,1
"org.eclipse.jdt.internal.core.Openable.closeBuffer()",2,2,3
"org.eclipse.jdt.internal.core.Openable.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.Openable.codeComplete(ICompilationUnit,ICompilationUnit,int,CompletionRequestor,WorkingCopyOwner,ITypeRoot,IProgressMonitor)",4,6,9
"org.eclipse.jdt.internal.core.Openable.codeSelect(ICompilationUnit,int,int,WorkingCopyOwner)",3,6,9
"org.eclipse.jdt.internal.core.Openable.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.Openable.exists()",5,4,7
"org.eclipse.jdt.internal.core.Openable.findRecommendedLineSeparator()",1,2,2
"org.eclipse.jdt.internal.core.Openable.generateInfos(Object,HashMap,IProgressMonitor)",4,7,13
"org.eclipse.jdt.internal.core.Openable.getBuffer()",3,3,4
"org.eclipse.jdt.internal.core.Openable.getBufferFactory()",1,1,1
"org.eclipse.jdt.internal.core.Openable.getBufferManager()",1,1,1
"org.eclipse.jdt.internal.core.Openable.getCorrespondingResource()",1,1,1
"org.eclipse.jdt.internal.core.Openable.getOpenable()",1,1,1
"org.eclipse.jdt.internal.core.Openable.getPackageFragmentRoot()",1,1,1
"org.eclipse.jdt.internal.core.Openable.getResource()",4,3,4
"org.eclipse.jdt.internal.core.Openable.getUnderlyingResource()",4,3,5
"org.eclipse.jdt.internal.core.Openable.hasBuffer()",1,1,1
"org.eclipse.jdt.internal.core.Openable.hasUnsavedChanges()",7,6,12
"org.eclipse.jdt.internal.core.Openable.isConsistent()",1,1,1
"org.eclipse.jdt.internal.core.Openable.isOpen()",1,1,1
"org.eclipse.jdt.internal.core.Openable.isSourceElement()",1,1,1
"org.eclipse.jdt.internal.core.Openable.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.Openable.makeConsistent(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.Openable.open(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.Openable.openAncestors(HashMap,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.Openable.openBuffer(IProgressMonitor,Object)",1,1,1
"org.eclipse.jdt.internal.core.Openable.resource()",2,3,3
"org.eclipse.jdt.internal.core.Openable.resourceExists(IResource)",1,1,1
"org.eclipse.jdt.internal.core.Openable.save(IProgressMonitor,boolean)",2,2,3
"org.eclipse.jdt.internal.core.OpenableElementInfo.addChild(IJavaElement)",4,3,4
"org.eclipse.jdt.internal.core.OpenableElementInfo.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.OpenableElementInfo.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.OpenableElementInfo.removeChild(IJavaElement)",3,5,5
"org.eclipse.jdt.internal.core.OpenableElementInfo.setChildren(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.OpenableElementInfo.setIsStructureKnown(boolean)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.OverflowingLRUCache(int)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.OverflowingLRUCache(int,int)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.clone()",1,2,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.elements()",2,1,3
"org.eclipse.jdt.internal.core.OverflowingLRUCache.fillingRatio()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.getEntryTable()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.getLoadFactor()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.getOverflow()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.makeSpace(int)",3,2,7
"org.eclipse.jdt.internal.core.OverflowingLRUCache.printStats()",1,4,6
"org.eclipse.jdt.internal.core.OverflowingLRUCache.privateRemoveEntry(LRUCacheEntry,boolean)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.privateRemoveEntry(LRUCacheEntry,boolean,boolean)",5,4,7
"org.eclipse.jdt.internal.core.OverflowingLRUCache.put(Object,Object)",3,4,4
"org.eclipse.jdt.internal.core.OverflowingLRUCache.remove(Object)",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.setLoadFactor(double)",2,1,3
"org.eclipse.jdt.internal.core.OverflowingLRUCache.setSpaceLimit(int)",1,2,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.shrink()",2,2,2
"org.eclipse.jdt.internal.core.OverflowingLRUCache.toString()",1,1,1
"org.eclipse.jdt.internal.core.OverflowingLRUCache.updateTimestamp(LRUCacheEntry)",1,3,3
"org.eclipse.jdt.internal.core.PackageDeclaration.PackageDeclaration(CompilationUnit,String)",1,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.PackageDeclaration.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getNameRange()",1,1,1
"org.eclipse.jdt.internal.core.PackageDeclaration.getPrimaryElement(boolean)",2,2,3
"org.eclipse.jdt.internal.core.PackageDeclaration.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.PackageFragment.PackageFragment(PackageFragmentRoot,String[])",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",1,11,12
"org.eclipse.jdt.internal.core.PackageFragment.containsJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,1,4
"org.eclipse.jdt.internal.core.PackageFragment.createCompilationUnit(String,String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.delete(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.equals(Object)",3,2,4
"org.eclipse.jdt.internal.core.PackageFragment.exists()",1,3,3
"org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(IProgressMonitor)",6,4,10
"org.eclipse.jdt.internal.core.PackageFragment.getClassFile(String)",2,2,2
"org.eclipse.jdt.internal.core.PackageFragment.getClassFiles()",2,1,2
"org.eclipse.jdt.internal.core.PackageFragment.getCompilationUnit(String)",2,1,2
"org.eclipse.jdt.internal.core.PackageFragment.getCompilationUnits()",2,1,2
"org.eclipse.jdt.internal.core.PackageFragment.getCompilationUnits(WorkingCopyOwner)",2,4,6
"org.eclipse.jdt.internal.core.PackageFragment.getElementName()",2,1,2
"org.eclipse.jdt.internal.core.PackageFragment.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",4,2,5
"org.eclipse.jdt.internal.core.PackageFragment.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.getKind()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.getNonJavaResources()",2,2,2
"org.eclipse.jdt.internal.core.PackageFragment.getPath()",2,3,3
"org.eclipse.jdt.internal.core.PackageFragment.getUnderlyingResource()",5,6,7
"org.eclipse.jdt.internal.core.PackageFragment.hasChildren()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.hasSubpackages()",5,3,5
"org.eclipse.jdt.internal.core.PackageFragment.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.PackageFragment.internalIsValidPackageName()",3,2,3
"org.eclipse.jdt.internal.core.PackageFragment.isDefaultPackage()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.isValidPackageName()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragment.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,1,4
"org.eclipse.jdt.internal.core.PackageFragment.rename(String,boolean,IProgressMonitor)",2,1,2
"org.eclipse.jdt.internal.core.PackageFragment.resource(PackageFragmentRoot)",2,3,3
"org.eclipse.jdt.internal.core.PackageFragment.toStringChildren(int,StringBuffer,Object)",1,2,2
"org.eclipse.jdt.internal.core.PackageFragment.toStringInfo(int,StringBuffer,Object,boolean)",1,4,4
"org.eclipse.jdt.internal.core.PackageFragment.validateExistence(IResource)",4,7,7
"org.eclipse.jdt.internal.core.PackageFragmentInfo.PackageFragmentInfo()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentInfo.containsJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentInfo.getNonJavaResources(IResource,PackageFragmentRoot)",1,2,3
"org.eclipse.jdt.internal.core.PackageFragmentInfo.setNonJavaResources(Object[])",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.PackageFragmentRoot(IResource,JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.attachSource(IPath,IPath,IProgressMonitor)",3,17,21
"org.eclipse.jdt.internal.core.PackageFragmentRoot.buildStructure(OpenableElementInfo,IProgressMonitor,Map,IResource)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.computeChildren(OpenableElementInfo,IResource)",1,4,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.computeFolderChildren(IContainer,boolean,String[],ArrayList,char[][],char[][])",2,10,13
"org.eclipse.jdt.internal.core.PackageFragmentRoot.copy(IPath,int,int,IClasspathEntry,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.createPackageFragment(String,boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.createSourceMapper(IPath,IPath)",1,3,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.delete(int,int,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.determineKind(IResource)",2,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.equals(Object)",3,2,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.findSourceAttachmentRecommendation()",7,4,10
"org.eclipse.jdt.internal.core.PackageFragmentRoot.fullExclusionPatternChars()",3,3,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.fullInclusionPatternChars()",3,3,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getElementName()",2,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",3,5,7
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getHandleMemento(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getKind()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getNonJavaResources()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPackageFragment(String)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPackageFragment(String[])",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPackageName(IFolder)",1,3,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getPath()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getRawClasspathEntry()",2,2,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getResolvedClasspathEntry()",2,2,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentPath()",6,5,8
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentRootPath()",6,5,9
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceMapper()",1,3,4
"org.eclipse.jdt.internal.core.PackageFragmentRoot.getUnderlyingResource()",2,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.hasChildren()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.ignoreOptionalProblems()",1,1,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.internalKind()",1,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.internalPath()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.isArchive()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.isExternal()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.move(IPath,int,int,IClasspathEntry,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.resource()",2,1,2
"org.eclipse.jdt.internal.core.PackageFragmentRoot.resource(PackageFragmentRoot)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.setSourceMapper(SourceMapper)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRoot.toStringInfo(int,StringBuffer,Object,boolean)",1,5,5
"org.eclipse.jdt.internal.core.PackageFragmentRoot.validateExistence(IResource)",3,2,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.validateOnClasspath()",2,2,3
"org.eclipse.jdt.internal.core.PackageFragmentRoot.verifyAttachSource(IPath)",4,4,5
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.PackageFragmentRootInfo()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.computeFolderNonJavaResources(IPackageFragmentRoot,IContainer,char[][],char[][])",8,10,17
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.computeNonJavaResources(IResource,PackageFragmentRoot)",1,3,4
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.getNonJavaResources(IJavaProject,IResource,PackageFragmentRoot)",1,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.getRootKind()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.getSourceMapper()",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.ignoreOptionalProblems(PackageFragmentRoot)",1,2,2
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.isClasspathEntry(IPath,IClasspathEntry[])",3,2,3
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.setNonJavaResources(Object[])",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.setRootKind(int)",1,1,1
"org.eclipse.jdt.internal.core.PackageFragmentRootInfo.setSourceMapper(SourceMapper)",1,1,1
"org.eclipse.jdt.internal.core.ProjectReferenceChange.ProjectReferenceChange(JavaProject,IClasspathEntry[])",1,1,1
"org.eclipse.jdt.internal.core.ProjectReferenceChange.toString()",1,1,1
"org.eclipse.jdt.internal.core.ProjectReferenceChange.updateProjectReferencesIfNecessary()",5,10,12
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.ReconcileWorkingCopyOperation(IJavaElement,int,int,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation()",1,11,15
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.getWorkingCopy()",1,1,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.isReadOnly()",1,1,1
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(CompilationUnit)",4,11,18
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.notifyParticipants(CompilationUnit)",4,5,6
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.reportProblems(CompilationUnit,IProblemRequestor)",5,5,7
"org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.verify()",3,1,3
"org.eclipse.jdt.internal.core.Region.Region()",1,1,1
"org.eclipse.jdt.internal.core.Region.add(IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.Region.contains(IJavaElement)",5,3,5
"org.eclipse.jdt.internal.core.Region.getAncestors(IJavaElement)",1,2,2
"org.eclipse.jdt.internal.core.Region.getElements()",1,2,2
"org.eclipse.jdt.internal.core.Region.remove(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.Region.removeAllChildren(IJavaElement)",5,5,6
"org.eclipse.jdt.internal.core.Region.toString()",1,3,3
"org.eclipse.jdt.internal.core.RenameElementsOperation.RenameElementsOperation(IJavaElement[],IJavaElement[],String[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.RenameElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.RenameElementsOperation.isRename()",1,1,1
"org.eclipse.jdt.internal.core.RenameElementsOperation.verify()",3,1,4
"org.eclipse.jdt.internal.core.RenameElementsOperation.verify(IJavaElement)",1,6,7
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.RenameResourceElementsOperation(IJavaElement[],IJavaElement[],String[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.getMainTaskName()",1,1,1
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.isRename()",1,1,1
"org.eclipse.jdt.internal.core.RenameResourceElementsOperation.verify(IJavaElement)",1,5,6
"org.eclipse.jdt.internal.core.ResolvedBinaryField.ResolvedBinaryField(JavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryField.getKey()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryField.getKey(boolean)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryField.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryField.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ResolvedBinaryField.unresolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryMethod.ResolvedBinaryMethod(JavaElement,String,String[],String)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryMethod.getKey()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryMethod.getKey(boolean)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryMethod.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryMethod.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ResolvedBinaryMethod.unresolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryType.ResolvedBinaryType(JavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryType.getFullyQualifiedParameterizedName()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryType.getKey()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryType.getKey(boolean)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryType.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedBinaryType.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ResolvedBinaryType.unresolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedLambdaExpression.ResolvedLambdaExpression(JavaElement,LambdaExpression,String)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedLambdaExpression.equals(Object)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedLambdaExpression.getFullyQualifiedParameterizedName()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedLambdaExpression.getKey()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedLambdaExpression.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedLambdaExpression.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ResolvedLambdaExpression.unresolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceField.ResolvedSourceField(JavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceField.getKey()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceField.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceField.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ResolvedSourceField.unresolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceMethod.ResolvedSourceMethod(JavaElement,String,String[],String)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceMethod.getKey()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceMethod.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceMethod.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ResolvedSourceMethod.unresolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceType.ResolvedSourceType(JavaElement,String,String)",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceType.getFullyQualifiedParameterizedName()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceType.getKey()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceType.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.ResolvedSourceType.toStringInfo(int,StringBuffer,Object,boolean)",1,2,2
"org.eclipse.jdt.internal.core.ResolvedSourceType.unresolved()",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.SearchableEnvironment(JavaProject,ICompilationUnit[])",1,2,2
"org.eclipse.jdt.internal.core.SearchableEnvironment.SearchableEnvironment(JavaProject,WorkingCopyOwner)",1,2,2
"org.eclipse.jdt.internal.core.SearchableEnvironment.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.convertSearchFilterToModelFilter(int)",8,2,8
"org.eclipse.jdt.internal.core.SearchableEnvironment.find(String,String)",6,11,14
"org.eclipse.jdt.internal.core.SearchableEnvironment.findConstructorDeclarations(char[],boolean,ISearchRequestor,IProgressMonitor)",5,8,15
"org.eclipse.jdt.internal.core.SearchableEnvironment.findExactTypes(String,ISearchRequestor,int)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.findExactTypes(char[],boolean,int,ISearchRequestor)",5,6,10
"org.eclipse.jdt.internal.core.SearchableEnvironment.findPackages(char[],ISearchRequestor)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.findType(char[],char[][])",2,2,4
"org.eclipse.jdt.internal.core.SearchableEnvironment.findType(char[][])",4,2,4
"org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(String,ISearchRequestor,int)",1,5,5
"org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(char[],boolean,boolean,int,ISearchRequestor)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(char[],boolean,boolean,int,ISearchRequestor,IProgressMonitor)",8,12,19
"org.eclipse.jdt.internal.core.SearchableEnvironment.getSearchScope()",1,3,3
"org.eclipse.jdt.internal.core.SearchableEnvironment.isPackage(char[][],char[])",1,3,5
"org.eclipse.jdt.internal.core.SearchableEnvironment.toStringChar(char[])",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironment.toStringCharChar(char[][])",1,2,2
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.SearchableEnvironmentRequestor(ISearchRequestor)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.SearchableEnvironmentRequestor(ISearchRequestor,ICompilationUnit,IJavaProject,NameLookup)",1,2,2
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptInitializer(IInitializer)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptPackageFragment(IPackageFragment)",1,1,1
"org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptType(IType)",2,7,9
"org.eclipse.jdt.internal.core.SelectionRequestor.SelectionRequestor(NameLookup,Openable)",1,1,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptBinaryMethod(IType,IMethod,char[],boolean)",1,10,11
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptBinaryMethod(IType,char[],char[][],char[][],String[],char[][],char[][][],char[],boolean)",4,6,8
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptError(CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptField(char[],char[],char[],boolean,char[],int,int)",5,13,14
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalField(FieldBinding)",1,7,7
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalMethod(MethodBinding)",1,8,8
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalMethodTypeParameter(TypeVariableBinding)",1,5,5
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalType(TypeBinding)",1,6,6
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalTypeParameter(TypeVariableBinding)",1,6,6
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalVariable(LocalVariableBinding,ICompilationUnit)",1,7,7
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptMethod(char[],char[],String,char[],char[][],char[][],String[],char[][],char[][][],boolean,boolean,char[],int,int)",1,8,11
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptMethodDeclaration(IType,char[],int,int)",3,7,8
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptMethodTypeParameter(char[],char[],char[],int,int,char[],boolean,int,int)",3,10,12
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptPackage(char[])",1,4,4
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptSourceMethod(IType,char[],char[][],char[][],String[],char[][],char[][][],char[])",6,14,17
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptType(IType)",1,3,3
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptType(char[],char[],int,boolean,char[],int,int)",2,8,11
"org.eclipse.jdt.internal.core.SelectionRequestor.acceptTypeParameter(char[],char[],char[],boolean,int,int)",1,6,6
"org.eclipse.jdt.internal.core.SelectionRequestor.addElement(IJavaElement)",3,3,4
"org.eclipse.jdt.internal.core.SelectionRequestor.areTypeParametersCompatible(IMethod,char[][],char[][][])",7,6,12
"org.eclipse.jdt.internal.core.SelectionRequestor.findLocalElement(int)",1,3,5
"org.eclipse.jdt.internal.core.SelectionRequestor.findLocalElement(int,MethodScope)",3,6,6
"org.eclipse.jdt.internal.core.SelectionRequestor.findMethodFromBinding(MethodBinding,String[],ReferenceBinding)",3,3,4
"org.eclipse.jdt.internal.core.SelectionRequestor.getElements()",1,2,2
"org.eclipse.jdt.internal.core.SelectionRequestor.resolveType(char[],char[],int)",8,16,27
"org.eclipse.jdt.internal.core.SelectionRequestor.resolveTypeByLocation(char[],char[],int,int,int)",11,19,31
"org.eclipse.jdt.internal.core.SetClasspathOperation.SetClasspathOperation(JavaProject,IClasspathEntry[],IClasspathEntry[],IPath,boolean)",1,1,1
"org.eclipse.jdt.internal.core.SetClasspathOperation.SetClasspathOperation(JavaProject,IClasspathEntry[],IPath,boolean)",1,1,1
"org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation()",1,3,3
"org.eclipse.jdt.internal.core.SetClasspathOperation.getSchedulingRule()",2,2,2
"org.eclipse.jdt.internal.core.SetClasspathOperation.toString()",1,3,3
"org.eclipse.jdt.internal.core.SetClasspathOperation.verify()",2,1,2
"org.eclipse.jdt.internal.core.SetContainerOperation.SetContainerOperation(IPath,IJavaProject[],IClasspathContainer[])",1,1,1
"org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation()",16,18,30
"org.eclipse.jdt.internal.core.SetContainerOperation.verbose_failure(CoreException)",1,1,1
"org.eclipse.jdt.internal.core.SetContainerOperation.verbose_set_container()",2,4,4
"org.eclipse.jdt.internal.core.SetContainerOperation.verbose_set_container_invocation_trace()",1,1,1
"org.eclipse.jdt.internal.core.SetContainerOperation.verbose_update_project(JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.SetVariablesOperation.SetVariablesOperation(String[],IPath[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.SetVariablesOperation.executeOperation()",15,22,33
"org.eclipse.jdt.internal.core.SetVariablesOperation.verbose_failure(String[])",1,1,1
"org.eclipse.jdt.internal.core.SetVariablesOperation.verbose_set_variables()",1,1,1
"org.eclipse.jdt.internal.core.SetVariablesOperation.verbose_update_project(String[],JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.added()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.changed(int)",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.getKind()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.modifiers()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.removed()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.superTypes()",1,1,1
"org.eclipse.jdt.internal.core.SimpleDelta.toDebugString(StringBuffer)",2,2,5
"org.eclipse.jdt.internal.core.SimpleDelta.toDebugString(StringBuffer,int)",1,5,5
"org.eclipse.jdt.internal.core.SimpleDelta.toString()",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptField(IField)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptInitializer(IInitializer)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptMemberType(IType)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptMethod(IMethod)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptPackageFragment(IPackageFragment)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.acceptType(IType)",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.getType()",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.isCanceled()",1,1,1
"org.eclipse.jdt.internal.core.SingleTypeRequestor.reset()",1,1,1
"org.eclipse.jdt.internal.core.SortElementsOperation.SortElementsOperation(int,IJavaElement[],int[],Comparator)",1,1,1
"org.eclipse.jdt.internal.core.SortElementsOperation.calculateEdit(CompilationUnit,TextEditGroup)",4,1,4
"org.eclipse.jdt.internal.core.SortElementsOperation.checkMalformedNodes(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.SortElementsOperation.covers(TextEdit,TextEdit)",3,2,5
"org.eclipse.jdt.internal.core.SortElementsOperation.executeOperation()",2,2,3
"org.eclipse.jdt.internal.core.SortElementsOperation.getMainAmountOfWork()",1,1,1
"org.eclipse.jdt.internal.core.SortElementsOperation.insert(TextEdit,TextEdit)",4,6,6
"org.eclipse.jdt.internal.core.SortElementsOperation.isMalformed(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.SortElementsOperation.processElement(ICompilationUnit,char[])",2,6,7
"org.eclipse.jdt.internal.core.SortElementsOperation.sortCompilationUnit(CompilationUnit,TextEditGroup)",8,9,16
"org.eclipse.jdt.internal.core.SortElementsOperation.verify()",4,2,5
"org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.getReturnTypeName()",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.isConstructor()",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorInfo.setReturnType(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorWithChildrenInfo.SourceConstructorWithChildrenInfo(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.SourceConstructorWithChildrenInfo.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.SourceField.SourceField(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.SourceField.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.SourceField.findNode(CompilationUnit)",3,1,3
"org.eclipse.jdt.internal.core.SourceField.getConstant()",8,13,17
"org.eclipse.jdt.internal.core.SourceField.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.SourceField.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.SourceField.getKey()",1,1,2
"org.eclipse.jdt.internal.core.SourceField.getPrimaryElement(boolean)",3,2,3
"org.eclipse.jdt.internal.core.SourceField.getTypeSignature()",1,1,1
"org.eclipse.jdt.internal.core.SourceField.isEnumConstant()",1,1,1
"org.eclipse.jdt.internal.core.SourceField.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.SourceField.resolved(Binding)",1,1,1
"org.eclipse.jdt.internal.core.SourceField.toStringInfo(int,StringBuffer,Object,boolean)",1,4,4
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getInitializationSource()",1,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getTypeName()",1,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.getTypeSignature()",1,1,1
"org.eclipse.jdt.internal.core.SourceFieldElementInfo.setTypeName(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceFieldWithChildrenInfo.SourceFieldWithChildrenInfo(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.SourceFieldWithChildrenInfo.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.LocalVariableElementKey.LocalVariableElementKey(IJavaElement,String)",1,4,4
"org.eclipse.jdt.internal.core.SourceMapper.LocalVariableElementKey.equals(Object)",10,3,10
"org.eclipse.jdt.internal.core.SourceMapper.LocalVariableElementKey.hashCode()",1,3,3
"org.eclipse.jdt.internal.core.SourceMapper.LocalVariableElementKey.toString()",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.SourceMapper()",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.SourceMapper(IPath,String,Map)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.SourceMapper(IPath,String,Map,String)",1,2,3
"org.eclipse.jdt.internal.core.SourceMapper.acceptImport(int,int,int,int,char[][],boolean,int)",1,4,4
"org.eclipse.jdt.internal.core.SourceMapper.acceptLineSeparatorPositions(int[])",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.acceptPackage(ImportReference)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.acceptProblem(CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.addCategories(IJavaElement,char[][])",2,1,3
"org.eclipse.jdt.internal.core.SourceMapper.close()",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.computeAllRootPaths(IType)",2,38,45
"org.eclipse.jdt.internal.core.SourceMapper.computeRootPath(IContainer,HashSet,boolean,Set,int)",5,9,11
"org.eclipse.jdt.internal.core.SourceMapper.convertTypeNamesToSigs(char[][])",4,11,17
"org.eclipse.jdt.internal.core.SourceMapper.enterAbstractMethod(MethodInfo)",1,13,16
"org.eclipse.jdt.internal.core.SourceMapper.enterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterConstructor(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterField(FieldInfo)",1,2,2
"org.eclipse.jdt.internal.core.SourceMapper.enterInitializer(int,int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.enterType(TypeInfo)",1,6,6
"org.eclipse.jdt.internal.core.SourceMapper.exitAbstractMethod(int)",1,2,2
"org.eclipse.jdt.internal.core.SourceMapper.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitField(int,int,int)",1,2,2
"org.eclipse.jdt.internal.core.SourceMapper.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitMethod(int,Expression)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.exitType(int)",1,2,2
"org.eclipse.jdt.internal.core.SourceMapper.findMatchingGenericEnd(char[],int)",4,2,5
"org.eclipse.jdt.internal.core.SourceMapper.findSource(IType,IBinaryType)",3,1,3
"org.eclipse.jdt.internal.core.SourceMapper.findSource(IType,String)",4,8,9
"org.eclipse.jdt.internal.core.SourceMapper.findSource(String)",2,5,11
"org.eclipse.jdt.internal.core.SourceMapper.getFlags(IJavaElement)",3,3,4
"org.eclipse.jdt.internal.core.SourceMapper.getImports(BinaryType)",1,3,3
"org.eclipse.jdt.internal.core.SourceMapper.getMethodParameterNames(IMethod)",2,4,5
"org.eclipse.jdt.internal.core.SourceMapper.getNameRange(IJavaElement)",4,9,13
"org.eclipse.jdt.internal.core.SourceMapper.getSourceForRootPath(String,String)",1,2,3
"org.eclipse.jdt.internal.core.SourceMapper.getSourceRange(IJavaElement)",4,9,13
"org.eclipse.jdt.internal.core.SourceMapper.getType(String)",3,4,5
"org.eclipse.jdt.internal.core.SourceMapper.getUnqualifiedMethodHandle(IMethod,boolean)",1,2,3
"org.eclipse.jdt.internal.core.SourceMapper.getUnqualifiedTypeSignature(String,int,int,StringBuffer,boolean)",8,9,20
"org.eclipse.jdt.internal.core.SourceMapper.hasToRetrieveSourceRangesForLocalClass(char[])",5,2,5
"org.eclipse.jdt.internal.core.SourceMapper.mapSource(IType,char[],IBinaryType)",1,1,1
"org.eclipse.jdt.internal.core.SourceMapper.mapSource(IType,char[],IBinaryType,IJavaElement)",4,8,11
"org.eclipse.jdt.internal.core.SourceMapper.readSource(ZipEntry,ZipFile,String)",2,2,5
"org.eclipse.jdt.internal.core.SourceMapper.setMethodParameterNames(IMethod,char[][])",1,1,2
"org.eclipse.jdt.internal.core.SourceMapper.setSourceRange(IJavaElement,SourceRange,SourceRange)",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.SourceMethod(JavaElement,String,String[])",1,1,2
"org.eclipse.jdt.internal.core.SourceMethod.closing(Object)",1,2,2
"org.eclipse.jdt.internal.core.SourceMethod.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.SourceMethod.getDefaultValue()",2,1,2
"org.eclipse.jdt.internal.core.SourceMethod.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getExceptionTypes()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getHandleMemento(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.SourceMethod.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getKey()",1,1,2
"org.eclipse.jdt.internal.core.SourceMethod.getNumberOfParameters()",1,1,2
"org.eclipse.jdt.internal.core.SourceMethod.getParameterNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getParameterTypes()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getParameters()",2,1,2
"org.eclipse.jdt.internal.core.SourceMethod.getPrimaryElement(boolean)",3,2,3
"org.eclipse.jdt.internal.core.SourceMethod.getRawParameterNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getReturnType()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getSignature()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.getTypeParameterSignatures()",1,4,4
"org.eclipse.jdt.internal.core.SourceMethod.getTypeParameters()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.SourceMethod.isConstructor()",2,1,2
"org.eclipse.jdt.internal.core.SourceMethod.isLambdaMethod()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.isMainMethod()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.isSimilar(IMethod)",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.readableName()",1,4,5
"org.eclipse.jdt.internal.core.SourceMethod.resolved(Binding)",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.toStringInfo(int,StringBuffer,Object,boolean)",1,5,5
"org.eclipse.jdt.internal.core.SourceMethod.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.SourceMethod.toStringName(StringBuffer,int)",1,7,8
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getArgumentNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getExceptionTypeNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getTypeParameterBounds()",1,2,3
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.getTypeParameterNames()",2,2,3
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.setArgumentNames(char[][])",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodElementInfo.setExceptionTypeNames(char[][])",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.getReturnTypeName()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.isAnnotationMethod()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.isConstructor()",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodInfo.setReturnType(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodWithChildrenInfo.SourceMethodWithChildrenInfo(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.SourceMethodWithChildrenInfo.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.SourceRefElement(JavaElement)",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.closing(Object)",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.copy(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,1,4
"org.eclipse.jdt.internal.core.SourceRefElement.createElementInfo()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.delete(boolean,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.SourceRefElement.findNode(CompilationUnit)",1,1,2
"org.eclipse.jdt.internal.core.SourceRefElement.generateInfos(Object,HashMap,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.SourceRefElement.getAnnotation(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getCorrespondingResource()",2,2,2
"org.eclipse.jdt.internal.core.SourceRefElement.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",2,2,2
"org.eclipse.jdt.internal.core.SourceRefElement.getHandleMemento(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.SourceRefElement.getHandleUpdatingCountFromMemento(MementoTokenizer,WorkingCopyOwner)",3,1,3
"org.eclipse.jdt.internal.core.SourceRefElement.getOccurrenceCount()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getOpenableParent()",3,2,3
"org.eclipse.jdt.internal.core.SourceRefElement.getPath()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getSource()",3,1,5
"org.eclipse.jdt.internal.core.SourceRefElement.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource()",2,2,2
"org.eclipse.jdt.internal.core.SourceRefElement.hasChildren()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.isStructureKnown()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.move(IJavaElement,IJavaElement,String,boolean,IProgressMonitor)",2,1,4
"org.eclipse.jdt.internal.core.SourceRefElement.rename(String,boolean,IProgressMonitor)",2,1,2
"org.eclipse.jdt.internal.core.SourceRefElement.resource()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElement.toStringName(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.SourceRefElementInfo.getDeclarationSourceEnd()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.getDeclarationSourceStart()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.getSourceRange()",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.setSourceRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceRefElementInfo.setSourceRangeStart(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.SourceType(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.closing(Object)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,CompletionRequestor,WorkingCopyOwner,IProgressMonitor)",2,5,6
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.codeComplete(char[],int,int,char[][],char[][],int[],boolean,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.SourceType.createField(String,IJavaElement,boolean,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.createInitializer(String,IJavaElement,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.createMethod(String,IJavaElement,boolean,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.createType(String,IJavaElement,boolean,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.equals(Object)",3,1,3
"org.eclipse.jdt.internal.core.SourceType.findMethods(IMethod)",1,1,2
"org.eclipse.jdt.internal.core.SourceType.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getChildrenForCategory(String)",4,5,9
"org.eclipse.jdt.internal.core.SourceType.getDeclaringType()",4,4,4
"org.eclipse.jdt.internal.core.SourceType.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getField(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getFields()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getFullyQualifiedName()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getFullyQualifiedName(char)",1,1,2
"org.eclipse.jdt.internal.core.SourceType.getFullyQualifiedParameterizedName()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getHandleFromMemento(String,MementoTokenizer,WorkingCopyOwner)",17,11,30
"org.eclipse.jdt.internal.core.SourceType.getInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getInitializers()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getKey()",1,1,2
"org.eclipse.jdt.internal.core.SourceType.getMethod(String,String[])",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getMethods()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getOccurrenceCountSignature()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getPackageFragment()",3,3,3
"org.eclipse.jdt.internal.core.SourceType.getPrimaryElement(boolean)",6,5,6
"org.eclipse.jdt.internal.core.SourceType.getSuperInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getSuperInterfaceTypeSignatures()",2,2,3
"org.eclipse.jdt.internal.core.SourceType.getSuperclassName()",2,1,2
"org.eclipse.jdt.internal.core.SourceType.getSuperclassTypeSignature()",2,1,2
"org.eclipse.jdt.internal.core.SourceType.getType(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeParameter(String)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeParameterSignatures()",1,4,4
"org.eclipse.jdt.internal.core.SourceType.getTypeParameters()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeQualifiedName()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.getTypeQualifiedName(char)",1,1,2
"org.eclipse.jdt.internal.core.SourceType.getTypes()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isAnnotation()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isClass()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isEnum()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isInterface()",2,2,2
"org.eclipse.jdt.internal.core.SourceType.isLambda()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isLocal()",3,2,3
"org.eclipse.jdt.internal.core.SourceType.isMember()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.isResolved()",1,1,1
"org.eclipse.jdt.internal.core.SourceType.loadTypeHierachy(InputStream,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.loadTypeHierachy(InputStream,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(ICompilationUnit[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(IWorkingCopy[],IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(ICompilationUnit[],IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IJavaProject,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IJavaProject,WorkingCopyOwner,IProgressMonitor)",2,4,6
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(IWorkingCopy[],IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.resolved(Binding)",1,1,1
"org.eclipse.jdt.internal.core.SourceType.toStringInfo(int,StringBuffer,Object,boolean)",1,10,10
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.addCategories(IJavaElement,char[][])",2,1,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getCategories()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getEnclosingType()",2,3,4
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getFieldHandles()",3,2,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getFields()",1,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getHandle()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getInitializers()",3,3,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getInterfaceNames()",2,1,2
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMemberTypeHandles()",3,2,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMemberTypes()",1,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMethodHandles()",3,2,6
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getMethods()",1,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getName()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getSuperclassName()",3,1,4
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getTypeParameterBounds()",1,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.getTypeParameterNames()",2,2,3
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.isAnonymous()",1,1,2
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.isAnonymousMember()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setHandle(IType)",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setSuperInterfaceNames(char[][])",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.setSuperclassName(char[])",1,1,1
"org.eclipse.jdt.internal.core.SourceTypeElementInfo.toString()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.TypeParameter(JavaElement,String)",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.TypeParameter.getBounds()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getBoundsSignatures()",4,3,7
"org.eclipse.jdt.internal.core.TypeParameter.getClassFile()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getDeclaringMember()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getElementName()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getElementType()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getHandleMementoDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.getKey(boolean)",1,5,5
"org.eclipse.jdt.internal.core.TypeParameter.getNameRange()",3,3,3
"org.eclipse.jdt.internal.core.TypeParameter.getSourceRange()",3,3,3
"org.eclipse.jdt.internal.core.TypeParameter.getTypeRoot()",1,1,1
"org.eclipse.jdt.internal.core.TypeParameter.toStringName(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.TypeVector()",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.TypeVector(IType)",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.TypeVector(IType[])",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.add(IType)",1,2,2
"org.eclipse.jdt.internal.core.TypeVector.addAll(IType[])",1,2,2
"org.eclipse.jdt.internal.core.TypeVector.contains(IType)",3,2,3
"org.eclipse.jdt.internal.core.TypeVector.copy()",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.elementAt(int)",1,1,1
"org.eclipse.jdt.internal.core.TypeVector.elements()",2,2,3
"org.eclipse.jdt.internal.core.TypeVector.find(IType)",3,1,3
"org.eclipse.jdt.internal.core.TypeVector.remove(IType)",3,3,3
"org.eclipse.jdt.internal.core.TypeVector.removeAll()",1,1,2
"org.eclipse.jdt.internal.core.TypeVector.toString()",1,2,2
"org.eclipse.jdt.internal.core.UserLibrary.UserLibrary(IClasspathEntry[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.UserLibrary.createFromString(Reader)",2,11,14
"org.eclipse.jdt.internal.core.UserLibrary.equals(Object)",5,5,7
"org.eclipse.jdt.internal.core.UserLibrary.getEntries()",1,1,1
"org.eclipse.jdt.internal.core.UserLibrary.hashCode()",1,2,3
"org.eclipse.jdt.internal.core.UserLibrary.isSystemLibrary()",1,1,1
"org.eclipse.jdt.internal.core.UserLibrary.serialize(IClasspathEntry[],boolean)",1,7,10
"org.eclipse.jdt.internal.core.UserLibrary.toString()",2,2,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.UserLibraryClasspathContainer(String)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getClasspathEntries()",2,2,2
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getDescription()",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getKind()",2,2,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getPath()",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.getUserLibrary()",1,2,4
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainer.verbose_no_user_library_found(String)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.canUpdateClasspathContainer(IPath,IJavaProject)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.getComparisonID(IPath,IJavaProject)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.getDescription(IPath,IJavaProject)",2,2,2
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.initialize(IPath,IJavaProject)",1,5,7
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.isUserLibraryContainer(IPath)",1,3,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.requestClasspathContainerUpdate(IPath,IJavaProject,IClasspathContainer)",1,3,3
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.verbose_no_user_library_found(IJavaProject,String)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryClasspathContainerInitializer.verbose_not_a_user_library(IJavaProject,IPath)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryManager.UserLibraryManager()",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryManager.getUserLibrary(String)",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryManager.getUserLibraryNames()",1,1,1
"org.eclipse.jdt.internal.core.UserLibraryManager.initialize()",4,9,9
"org.eclipse.jdt.internal.core.UserLibraryManager.removeUserLibrary(String)",1,2,2
"org.eclipse.jdt.internal.core.UserLibraryManager.setUserLibrary(String,IClasspathEntry[],boolean)",1,3,3
"org.eclipse.jdt.internal.core.UserLibraryManager.updateUserLibrary(String,String)",6,10,13
"org.eclipse.jdt.internal.core.VerboseElementCache.VerboseElementCache(int,String)",1,1,1
"org.eclipse.jdt.internal.core.VerboseElementCache.makeSpace(int)",2,3,3
"org.eclipse.jdt.internal.core.VerboseElementCache.put(Object,Object)",1,1,3
"org.eclipse.jdt.internal.core.XMLWriter.XMLWriter(Writer,IJavaProject,boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.AbortIncrementalBuildException.AbortIncrementalBuildException(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.AbstractImageBuilder(JavaBuilder,boolean,State)",5,4,6
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(CompilationResult)",6,16,20
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptSecondaryType(ClassFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.addAllSourceFiles(ArrayList)",10,12,17
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.cleanUp()",1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(SourceFile[])",1,19,27
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(SourceFile[],SourceFile[],boolean)",2,4,8
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.copyResource(IResource,IResource)",2,2,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.createFolder(IPath,IContainer)",2,2,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.createProblemFor(IResource,IMember,String,String)",4,6,9
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.deleteGeneratedFiles(IFile[])",1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.findSourceFile(IFile,boolean)",7,5,9
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.finishedWith(String,CompilationResult,char[],ArrayList,ArrayList)",5,4,5
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.fromIFile(IFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.initializeAnnotationProcessorManager(Compiler)",1,2,2
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.internalException(CoreException)",2,1,2
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.isExcludedFromProject(IPath)",5,2,5
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.newCompiler()",1,11,12
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.notifyParticipants(SourceFile[])",6,12,15
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.processAnnotations(CompilationParticipantResult[])",2,6,9
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.recordParticipantResult(CompilationParticipantResult)",1,5,6
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.storeProblemsFor(SourceFile,CategorizedProblem[])",10,19,33
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.storeTasksFor(SourceFile,CategorizedProblem[])",2,6,11
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.updateProblemsFor(SourceFile,CompilationResult)",2,1,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.updateTasksFor(SourceFile,CompilationResult)",2,1,3
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(ClassFile,SourceFile,boolean)",1,2,2
"org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFileContents(ClassFile,IFile,String,boolean,SourceFile)",1,5,5
"org.eclipse.jdt.internal.core.builder.AdditionalTypeCollection.AdditionalTypeCollection(char[][],char[][][],char[][],char[][])",1,1,1
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.BatchImageBuilder(JavaBuilder,boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.acceptSecondaryType(ClassFile)",1,2,2
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build()",1,10,10
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(boolean)",7,18,24
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanUp()",1,1,1
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.compile(SourceFile[],SourceFile[],boolean)",1,1,3
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack(ClasspathMultiDirectory,boolean)",12,8,17
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.findOriginalResource(IPath)",4,3,4
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.printStats()",2,1,2
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.processAnnotationResults(CompilationParticipantResult[])",1,1,2
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.rebuildTypesAffectedBySecondaryTypes()",1,2,3
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.storeProblemsFor(SourceFile,CategorizedProblem[])",4,4,8
"org.eclipse.jdt.internal.core.builder.BatchImageBuilder.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.BuildNotifier(IProgressMonitor,IProject)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.aboutToCompile(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.begin()",1,2,2
"org.eclipse.jdt.internal.core.builder.BuildNotifier.checkCancel()",2,2,3
"org.eclipse.jdt.internal.core.builder.BuildNotifier.checkCancelWithinCompiler()",2,4,4
"org.eclipse.jdt.internal.core.builder.BuildNotifier.compiled(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.done()",1,2,2
"org.eclipse.jdt.internal.core.builder.BuildNotifier.problemsMessage()",2,15,21
"org.eclipse.jdt.internal.core.builder.BuildNotifier.resetProblemCounters()",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.setCancelling(boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.setProgressPerCompilationUnit(float)",1,1,1
"org.eclipse.jdt.internal.core.builder.BuildNotifier.subTask(String)",2,2,4
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProblemCounts(CategorizedProblem[])",1,2,3
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProblemCounts(IMarker[],CategorizedProblem[])",13,11,19
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProgress(float)",1,4,4
"org.eclipse.jdt.internal.core.builder.BuildNotifier.updateProgressDelta(float)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.ClasspathDirectory(IContainer,boolean,AccessRuleSet)",1,2,2
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.debugPathString()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.directoryList(String)",4,6,9
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.doesFileExist(String,String,String)",4,2,4
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.equals(Object)",5,3,6
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.findClass(String,String,String)",4,2,7
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.getProjectRelativePath()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.isExcluded(IResource)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.isOutputFolder()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.isPackage(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.reset()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathDirectory.toString()",2,1,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.ClasspathJar(IFile,AccessRuleSet,IPath)",1,3,4
"org.eclipse.jdt.internal.core.builder.ClasspathJar.ClasspathJar(String,long,AccessRuleSet,IPath)",1,2,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.ClasspathJar(ZipFile,AccessRuleSet,IPath)",1,2,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.PackageCacheEntry.PackageCacheEntry(long,long,SimpleSet)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathJar.cleanup()",1,4,6
"org.eclipse.jdt.internal.core.builder.ClasspathJar.debugPathString()",2,1,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.equals(Object)",5,4,7
"org.eclipse.jdt.internal.core.builder.ClasspathJar.findClass(String,String,String)",4,3,8
"org.eclipse.jdt.internal.core.builder.ClasspathJar.findPackageSet(ClasspathJar)",5,3,7
"org.eclipse.jdt.internal.core.builder.ClasspathJar.getProjectRelativePath()",2,1,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.isPackage(String)",2,4,5
"org.eclipse.jdt.internal.core.builder.ClasspathJar.lastModified()",1,2,2
"org.eclipse.jdt.internal.core.builder.ClasspathJar.toString()",2,1,2
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forBinaryFolder(IContainer,boolean,AccessRuleSet)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forLibrary(IFile,AccessRuleSet,IPath)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forLibrary(String,AccessRuleSet,IPath)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forLibrary(String,long,AccessRuleSet,IPath)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.forSourceFolder(IContainer,IContainer,char[][],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.isOutputFolder()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathLocation.reset()",1,1,1
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.ClasspathMultiDirectory(IContainer,IContainer,char[][],char[][],boolean)",1,1,5
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.equals(Object)",3,5,7
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.isExcluded(IResource)",3,3,4
"org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.CompilationParticipantResult(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.getContents()",1,1,1
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.getFile()",1,1,1
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.hasAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.recordAddedGeneratedFiles(IFile[])",2,2,4
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.recordDeletedGeneratedFiles(IFile[])",2,2,4
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.recordDependencies(String[])",2,2,4
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.recordNewProblems(CategorizedProblem[])",2,2,4
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.reset(boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.CompilationParticipantResult.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.ImageBuilderInternalException(CoreException)",1,1,1
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.getThrowable()",1,1,1
"org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException.printStackTrace()",1,2,2
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.IncrementalImageBuilder(BatchImageBuilder)",1,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.IncrementalImageBuilder(JavaBuilder)",1,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.IncrementalImageBuilder(JavaBuilder,State)",1,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.addAffectedSourceFiles()",2,1,3
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.addAffectedSourceFiles(StringSet,StringSet,StringSet,StringSet)",8,8,14
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.addDependentsOf(IPath,boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.addDependentsOf(IPath,boolean,StringSet,StringSet,StringSet)",5,7,10
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(SimpleLookupTable)",10,16,18
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.buildAfterBatchBuild()",1,4,4
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.checkForClassFileChanges(IResourceDelta,ClasspathMultiDirectory,int)",7,8,13
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.cleanUp()",1,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(SourceFile[],SourceFile[],boolean)",1,8,10
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.deleteGeneratedFiles(IFile[])",3,6,7
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findAffectedSourceFiles(IResourceDelta,ClasspathLocation[],IProject)",7,12,12
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findAffectedSourceFiles(IResourceDelta,int,StringSet)",11,17,21
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findSourceFiles(IResourceDelta)",15,17,21
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.findSourceFiles(IResourceDelta,ClasspathMultiDirectory,int)",26,48,64
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.finishedWith(String,CompilationResult,char[],ArrayList,ArrayList)",4,5,8
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.processAnnotationResults(CompilationParticipantResult[])",3,7,8
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.removeClassFile(IPath,IContainer)",1,5,5
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.removeSecondaryTypes()",1,5,6
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.resetCollections()",1,3,3
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.updateProblemsFor(SourceFile,CompilationResult)",2,2,4
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.updateTasksFor(SourceFile,CompilationResult)",2,1,3
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileCheck(IFile,String,byte[])",5,6,10
"org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileContents(ClassFile,IFile,String,boolean,SourceFile)",9,15,18
"org.eclipse.jdt.internal.core.builder.JavaBuilder.build(int,Map,IProgressMonitor)",2,25,27
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll()",1,2,3
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(SimpleLookupTable)",1,4,5
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildFinished()",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.buildStarting()",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(IProgressMonitor)",2,6,7
"org.eclipse.jdt.internal.core.builder.JavaBuilder.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.clearLastState()",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.createInconsistentBuildMarker(CoreException)",1,4,5
"org.eclipse.jdt.internal.core.builder.JavaBuilder.filterExtraResource(IResource)",9,7,10
"org.eclipse.jdt.internal.core.builder.JavaBuilder.findDeltas()",8,13,17
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(IProject)",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getProblemsFor(IResource)",3,6,8
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getRequiredProjects(boolean)",3,10,15
"org.eclipse.jdt.internal.core.builder.JavaBuilder.getTasksFor(IResource)",2,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.hasBuildpathErrors()",3,2,3
"org.eclipse.jdt.internal.core.builder.JavaBuilder.hasClasspathChanged()",12,12,22
"org.eclipse.jdt.internal.core.builder.JavaBuilder.hasJavaBuilder(IProject)",3,2,3
"org.eclipse.jdt.internal.core.builder.JavaBuilder.hasStructuralDelta()",7,8,9
"org.eclipse.jdt.internal.core.builder.JavaBuilder.initializeBuilder(int,boolean)",7,8,17
"org.eclipse.jdt.internal.core.builder.JavaBuilder.isClasspathBroken(IClasspathEntry[],IProject)",3,2,3
"org.eclipse.jdt.internal.core.builder.JavaBuilder.isWorthBuilding()",8,12,14
"org.eclipse.jdt.internal.core.builder.JavaBuilder.mustPropagateStructuralChanges()",4,5,5
"org.eclipse.jdt.internal.core.builder.JavaBuilder.printLocations(ClasspathLocation[],ClasspathLocation[])",1,3,3
"org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(IProject,DataInputStream)",1,1,1
"org.eclipse.jdt.internal.core.builder.JavaBuilder.recordNewState(State)",1,4,5
"org.eclipse.jdt.internal.core.builder.JavaBuilder.removeProblemsAndTasksFor(IResource)",3,4,6
"org.eclipse.jdt.internal.core.builder.JavaBuilder.removeProblemsFor(IResource)",3,4,6
"org.eclipse.jdt.internal.core.builder.JavaBuilder.removeTasksFor(IResource)",1,3,4
"org.eclipse.jdt.internal.core.builder.JavaBuilder.toString()",1,2,2
"org.eclipse.jdt.internal.core.builder.JavaBuilder.writeState(Object,DataOutputStream)",1,1,1
"org.eclipse.jdt.internal.core.builder.MissingSourceFileException.MissingSourceFileException(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.NameEnvironment(IJavaProject)",1,1,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.NameEnvironment(IWorkspaceRoot,JavaProject,SimpleLookupTable,BuildNotifier)",1,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.cleanup()",1,3,3
"org.eclipse.jdt.internal.core.builder.NameEnvironment.computeClasspathLocations(IWorkspaceRoot,JavaProject,SimpleLookupTable)",15,34,44
"org.eclipse.jdt.internal.core.builder.NameEnvironment.createOutputFolder(IContainer)",1,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.createParentFolder(IContainer)",1,2,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.findClass(String,char[])",12,9,17
"org.eclipse.jdt.internal.core.builder.NameEnvironment.findType(char[],char[][])",2,2,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.findType(char[][])",2,2,2
"org.eclipse.jdt.internal.core.builder.NameEnvironment.isPackage(String)",3,2,3
"org.eclipse.jdt.internal.core.builder.NameEnvironment.isPackage(char[][],char[])",1,1,1
"org.eclipse.jdt.internal.core.builder.NameEnvironment.setNames(String[],SourceFile[])",1,8,8
"org.eclipse.jdt.internal.core.builder.NameSet.NameSet(int)",1,1,2
"org.eclipse.jdt.internal.core.builder.NameSet.add(char[])",3,3,5
"org.eclipse.jdt.internal.core.builder.NameSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.builder.NameSet.toString()",1,1,3
"org.eclipse.jdt.internal.core.builder.ProblemFactory.ProblemFactory(Locale)",1,1,1
"org.eclipse.jdt.internal.core.builder.ProblemFactory.getProblemFactory(Locale)",1,2,2
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.QualifiedNameSet(int)",1,1,2
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.add(char[][])",4,3,6
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.builder.QualifiedNameSet.toString()",1,3,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.ReferenceCollection(char[][][],char[][],char[][])",1,1,1
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.addDependencies(String[])",4,6,7
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[])",3,1,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[][])",3,1,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[][][],char[][])",1,1,1
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.includes(char[][][],char[][],char[][])",19,27,31
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.insideRoot(char[])",3,1,3
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internQualifiedNames(StringSet)",3,3,5
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internQualifiedNames(char[][][])",1,1,1
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internQualifiedNames(char[][][],boolean)",9,4,11
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internSimpleNames(StringSet)",1,1,1
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internSimpleNames(StringSet,boolean)",3,3,5
"org.eclipse.jdt.internal.core.builder.ReferenceCollection.internSimpleNames(char[][],boolean)",9,4,11
"org.eclipse.jdt.internal.core.builder.SourceFile.SourceFile(IFile,ClasspathMultiDirectory)",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.SourceFile(IFile,ClasspathMultiDirectory,boolean)",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.equals(Object)",3,2,4
"org.eclipse.jdt.internal.core.builder.SourceFile.extractTypeName()",1,3,3
"org.eclipse.jdt.internal.core.builder.SourceFile.getContents()",1,2,2
"org.eclipse.jdt.internal.core.builder.SourceFile.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.ignoreOptionalProblems()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.SourceFile.typeLocator()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.State()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.State(JavaBuilder)",1,1,2
"org.eclipse.jdt.internal.core.builder.State.computeStructuralBuildTime(long)",1,1,2
"org.eclipse.jdt.internal.core.builder.State.copyFrom(State)",1,6,6
"org.eclipse.jdt.internal.core.builder.State.getDefinedTypeNamesFor(String)",2,1,2
"org.eclipse.jdt.internal.core.builder.State.getReferences()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.getStructurallyChangedTypes(State)",3,3,5
"org.eclipse.jdt.internal.core.builder.State.isDuplicateLocator(String,String)",1,2,2
"org.eclipse.jdt.internal.core.builder.State.isKnownPackage(String)",3,9,10
"org.eclipse.jdt.internal.core.builder.State.isKnownType(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.State.isSourceFolderEmpty(IContainer)",3,3,4
"org.eclipse.jdt.internal.core.builder.State.read(IProject,DataInputStream)",5,26,31
"org.eclipse.jdt.internal.core.builder.State.readName(DataInputStream)",1,2,2
"org.eclipse.jdt.internal.core.builder.State.readNames(DataInputStream)",1,2,2
"org.eclipse.jdt.internal.core.builder.State.readRestriction(DataInputStream)",2,2,3
"org.eclipse.jdt.internal.core.builder.State.record(String,char[][][],char[][],char[][],char[],ArrayList)",1,3,3
"org.eclipse.jdt.internal.core.builder.State.recordLocatorForType(String,String)",1,2,2
"org.eclipse.jdt.internal.core.builder.State.recordStructuralDependency(IProject,State)",1,3,3
"org.eclipse.jdt.internal.core.builder.State.removeLocator(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.State.removePackage(IResourceDelta)",2,4,5
"org.eclipse.jdt.internal.core.builder.State.removeQualifiedTypeName(String)",1,1,1
"org.eclipse.jdt.internal.core.builder.State.tagAsNoopBuild()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.tagAsStructurallyChanged()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.toString()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.wasNoopBuild()",1,1,1
"org.eclipse.jdt.internal.core.builder.State.wasStructurallyChanged(IProject,State)",3,3,4
"org.eclipse.jdt.internal.core.builder.State.wasStructurallyChanged(String)",1,3,3
"org.eclipse.jdt.internal.core.builder.State.write(DataOutputStream)",5,46,51
"org.eclipse.jdt.internal.core.builder.State.writeName(char[],DataOutputStream)",1,2,2
"org.eclipse.jdt.internal.core.builder.State.writeNames(char[][],DataOutputStream)",1,2,3
"org.eclipse.jdt.internal.core.builder.State.writeRestriction(AccessRuleSet,DataOutputStream)",1,4,4
"org.eclipse.jdt.internal.core.builder.StringSet.StringSet(int)",1,1,2
"org.eclipse.jdt.internal.core.builder.StringSet.add(String)",3,3,5
"org.eclipse.jdt.internal.core.builder.StringSet.clear()",1,1,2
"org.eclipse.jdt.internal.core.builder.StringSet.includes(String)",3,2,4
"org.eclipse.jdt.internal.core.builder.StringSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.builder.StringSet.toString()",1,1,3
"org.eclipse.jdt.internal.core.builder.WorkQueue.WorkQueue()",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.add(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.addAll(SourceFile[])",1,2,2
"org.eclipse.jdt.internal.core.builder.WorkQueue.clear()",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.finished(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.isCompiled(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.isWaiting(SourceFile)",1,1,1
"org.eclipse.jdt.internal.core.builder.WorkQueue.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.NaiveASTFlattener()",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.getName(ClassInstanceCreation)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.getResult()",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.getReturnType(MethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.getSuperclass(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.getTypeDeclaration(TypeDeclarationStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.printIndent()",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.printModifiers(List)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.printModifiers(int)",1,12,12
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.reset()",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.superInterfaces(TypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.thrownExceptions(MethodDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(AnnotationTypeDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(AnnotationTypeMemberDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(AnonymousClassDeclaration)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ArrayAccess)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ArrayCreation)",1,4,4
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ArrayInitializer)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ArrayType)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(AssertStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(Assignment)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(Block)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(BlockComment)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(BooleanLiteral)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(BreakStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(CastExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(CatchClause)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ClassInstanceCreation)",1,10,10
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(CompilationUnit)",1,4,4
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ConstructorInvocation)",1,7,7
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ContinueStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(CreationReference)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(Dimension)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(DoStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(EmptyStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(EnumConstantDeclaration)",1,6,6
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(EnumDeclaration)",1,9,9
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ExpressionMethodReference)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(FieldAccess)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(FieldDeclaration)",1,6,6
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ForStatement)",1,6,6
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(IfStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ImportDeclaration)",1,4,4
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(InfixExpression)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(Initializer)",1,4,4
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(IntersectionType)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(Javadoc)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(LabeledStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(LambdaExpression)",1,5,5
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(LineComment)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(MemberRef)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(MemberValuePair)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(MethodDeclaration)",1,27,27
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(MethodInvocation)",1,8,8
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(MethodRef)",1,4,4
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(MethodRefParameter)",1,4,4
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(Modifier)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(NameQualifiedType)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(NormalAnnotation)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(NullLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(NumberLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(PackageDeclaration)",1,4,4
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ParameterizedType)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(PostfixExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(PrefixExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(PrimitiveType)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(QualifiedName)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(QualifiedType)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ReturnStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SimpleName)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SimpleType)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SingleVariableDeclaration)",1,11,11
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SuperConstructorInvocation)",1,8,8
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SuperFieldAccess)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SuperMethodInvocation)",1,8,8
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SuperMethodReference)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SwitchCase)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SwitchStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(TagElement)",1,9,13
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(TextElement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ThisExpression)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(ThrowStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(TryStatement)",1,7,7
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(TypeDeclaration)",1,19,22
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(TypeDeclarationStatement)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(TypeLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(TypeMethodReference)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(TypeParameter)",1,5,5
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(UnionType)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(VariableDeclarationExpression)",1,5,5
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(VariableDeclarationFragment)",1,5,5
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(VariableDeclarationStatement)",1,5,5
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(WildcardType)",1,3,3
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visitAnnotationsList(List)",1,2,2
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visitComponentType(ArrayType)",1,1,1
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visitReferenceTypeArguments(List)",1,4,4
"org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visitTypeAnnotations(AnnotatableType)",1,2,2
"org.eclipse.jdt.internal.core.dom.SourceRangeVerifier.checkChild(ASTNode,ASTNode,ASTNode)",4,5,8
"org.eclipse.jdt.internal.core.dom.SourceRangeVerifier.preVisit2(ASTNode)",8,6,8
"org.eclipse.jdt.internal.core.dom.SourceRangeVerifier.process(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ASTRewriteAnalyzer(char[],LineInformation,String,TextEdit,RewriteEventStore,NodeInfoStore,List,Map,TargetSourceRangeComputer,RecoveryScannerData)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getEndOfNode(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getInitialIndent()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getNewNode(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getNodeIndent(int)",4,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getOriginalNode(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getSeparatorString(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.getStartOfNextNode(int,int)",3,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.insertAfterSeparator(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.lineCommentSwallowsActualCode(int)",2,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.mustRemoveSeparator(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.rewriteList(ASTNode,StructuralPropertyDescriptor,String,String,int)",10,30,42
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.rewriteList(ASTNode,StructuralPropertyDescriptor,int,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.rewriteList(ASTNode,StructuralPropertyDescriptor,int,String,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.rewriteList(ASTNode,StructuralPropertyDescriptor,int,String,String,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ListRewriter.updateIndent(int,int,int,TextEditGroup)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ModifierRewriter.ModifierRewriter(Prefix)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ModifierRewriter.getSeparatorString(int)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.ParagraphListRewriter(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.countEmptyLines(ASTNode)",5,4,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getInitialIndent()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getNewLines(int)",7,7,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getNode(int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getSeparatorString(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.getSeparatorString(int,int)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ParagraphListRewriter.mustRemoveSeparator(int,int)",5,6,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter.SwitchListRewriter(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter.getNodeIndent(int)",1,3,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter.getSeparatorString(int)",2,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.SwitchListRewriter.updateIndent(int,int,int,TextEditGroup)",5,7,13
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEdit(TextEdit)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEditGroup(TextEditGroup,TextEdit)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.changeNotSupported(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.createIndentString(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePostVisit(ASTNode,Stack)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePreVisit(CopySourceInfo[],Stack)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextCopy(TextEdit,int,int,String,TextEditGroup)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextInsert(int,ASTNode,int,boolean,TextEditGroup)",3,13,15
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextInsert(int,String,TextEditGroup)",1,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemove(int,int,TextEditGroup)",2,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit(int,int,ASTNode,TextEditGroup)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextReplace(int,int,String,TextEditGroup)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTNode,StructuralPropertyDescriptor,int)",3,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitList(List,int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren(ASTNode)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ensureSpaceAfterReplace(ASTNode,ChildPropertyDescriptor)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.ensureSpaceBeforeReplace(ASTNode)",5,5,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.findTagNameEnd(TagElement)",2,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getChangeKind(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getContent()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getCopySourceEdit(CopySourceInfo)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getCurrentLineStart(String,int)",3,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getDimensions(ArrayType)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getEditGroup(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getEditGroup(RewriteEvent)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getElementType(ArrayType)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getEvent(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedEnd(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedOffset(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedRange(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getIndent(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getIndentAtOffset(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getIndentOfLine(int)",2,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getLineCommentEndOffsets()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getLineDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getLineInformation()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getNewValue(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getOriginalValue(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getPosAfterLeftBrace(int)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getPosAfterTry(int)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getPreviousNode(ASTNode)",3,2,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getPreviousTokenEndOffset(ASTNode,int)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getScanner()",1,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.handleException(Throwable)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.hasChildrenChanges(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.insertAnnotationsOnDimension(ArrayType,int,int,TextEditGroup,boolean)",1,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isAllOfKind(RewriteEvent[],int)",3,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isChanged(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isCollapsed(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.isInsertBoundToPrevious(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.needsNewLineForLineComment(ASTNode,String,int)",2,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.postVisit(ASTNode)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.preVisit(ASTNode)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.replaceOperation(int,String,TextEditGroup)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.retrieveRightBracketEndPosition(int,int,boolean)",5,5,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteAnnotationsOnDimension(ArrayType,ArrayType,int,int,boolean,TextEditGroup)",1,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteArrayTypeDimensions(ArrayType,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteBodyNode(ASTNode,StructuralPropertyDescriptor,int,int,int,BlockContext)",6,10,13
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteExtraDimensions(ASTNode,StructuralPropertyDescriptor,int)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteExtraDimensions(int,int,int,TextEditGroup)",1,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteExtraDimensionsInfo(ASTNode,int,ChildListPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteJavadoc(ASTNode,StructuralPropertyDescriptor)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteMethodBody(MethodDeclaration,int)",5,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteMethodReceiver(MethodDeclaration,int)",5,16,19
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteModifiers(ASTNode,StructuralPropertyDescriptor,int)",4,10,22
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteModifiers2(ASTNode,ChildListPropertyDescriptor,int)",3,12,19
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteNode(ASTNode,StructuralPropertyDescriptor,int,Prefix)",5,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteNodeList(ASTNode,StructuralPropertyDescriptor,int,String,String)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteNodeList(ASTNode,StructuralPropertyDescriptor,int,String,String,String)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteOperation(ASTNode,StructuralPropertyDescriptor,int)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteOptionalQualifier(ASTNode,StructuralPropertyDescriptor,int)",6,8,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteOptionalTypeParameters(ASTNode,StructuralPropertyDescriptor,int,String,boolean,boolean)",5,12,14
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteParagraphList(ASTNode,StructuralPropertyDescriptor,int,int,int,int)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteRequiredNode(ASTNode,StructuralPropertyDescriptor)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteReturnType(MethodDeclaration,boolean,boolean)",2,5,10
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteTypeAnnotations(ASTNode,ChildListPropertyDescriptor,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteVarargsAnnotations(ASTNode,ChildListPropertyDescriptor,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AnnotationTypeDeclaration)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AnnotationTypeMemberDeclaration)",2,4,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AnonymousClassDeclaration)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayAccess)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayCreation)",6,21,25
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayInitializer)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ArrayType)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(AssertStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Assignment)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Block)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(BooleanLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(BreakStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CastExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CatchClause)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CharacterLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ClassInstanceCreation)",2,9,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CompilationUnit)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ConditionalExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ConstructorInvocation)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ContinueStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(CreationReference)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Dimension)",2,8,12
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(DoStatement)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EmptyStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EnhancedForStatement)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EnumConstantDeclaration)",2,13,13
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(EnumDeclaration)",2,17,17
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ExpressionMethodReference)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ExpressionStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(FieldAccess)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(FieldDeclaration)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ForStatement)",2,7,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(IfStatement)",2,10,11
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ImportDeclaration)",2,11,11
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(InfixExpression)",2,16,18
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Initializer)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(InstanceofExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(IntersectionType)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Javadoc)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(LabeledStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(LambdaExpression)",2,16,19
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MarkerAnnotation)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MemberRef)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MemberValuePair)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodDeclaration)",2,7,13
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodInvocation)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodRef)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(MethodRefParameter)",2,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(Modifier)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NameQualifiedType)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NormalAnnotation)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NullLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(NumberLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PackageDeclaration)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ParameterizedType)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ParenthesizedExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PostfixExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PrefixExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(PrimitiveType)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(QualifiedName)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(QualifiedType)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ReturnStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SimpleName)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SimpleType)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SingleMemberAnnotation)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SingleVariableDeclaration)",2,17,17
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(StringLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperConstructorInvocation)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperFieldAccess)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperMethodInvocation)",2,7,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SuperMethodReference)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SwitchCase)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SwitchStatement)",2,4,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(SynchronizedStatement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TagElement)",3,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TextElement)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ThisExpression)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ThrowStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TryStatement)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeDeclaration)",3,20,28
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeDeclarationStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeLiteral)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeMethodReference)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(TypeParameter)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(UnionType)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(VariableDeclarationExpression)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(VariableDeclarationFragment)",2,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(VariableDeclarationStatement)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(WhileStatement)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(WildcardType)",2,6,8
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visitReferenceTypeArguments(ASTNode,StructuralPropertyDescriptor,int)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTNode,StructuralPropertyDescriptor)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisitList(List)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.ASTRewriteFlattener(RewriteEventStore)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.asString(ASTNode,RewriteEventStore)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getAttribute(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getBooleanAttribute(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getChildList(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getChildNode(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getIntAttribute(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.getResult()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.internalVisitDimensionAnnotations(ArrayType,int,boolean)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.printModifiers(int,StringBuffer)",1,12,12
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.reset()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AnnotationTypeDeclaration)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AnnotationTypeMemberDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AnonymousClassDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayAccess)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayCreation)",1,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayInitializer)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ArrayType)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(AssertStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Assignment)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Block)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(BlockComment)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(BooleanLiteral)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(BreakStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CastExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CatchClause)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CharacterLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ClassInstanceCreation)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CompilationUnit)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ConstructorInvocation)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ContinueStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(CreationReference)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Dimension)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(DoStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EmptyStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EnumConstantDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(EnumDeclaration)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ExpressionMethodReference)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ExpressionStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(FieldAccess)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(FieldDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ForStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(IfStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ImportDeclaration)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(InfixExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Initializer)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(IntersectionType)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Javadoc)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(LabeledStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(LambdaExpression)",1,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(LineComment)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MemberRef)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MemberValuePair)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodDeclaration)",1,11,12
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodInvocation)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodRef)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(MethodRefParameter)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(Modifier)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NameQualifiedType)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NullLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(NumberLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PackageDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ParameterizedType)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PostfixExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PrefixExpression)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(PrimitiveType)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(QualifiedName)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(QualifiedType)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ReturnStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SimpleName)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SimpleType)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SingleVariableDeclaration)",1,7,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(StringLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperConstructorInvocation)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperFieldAccess)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperMethodInvocation)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SuperMethodReference)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SwitchCase)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SwitchStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TagElement)",1,5,6
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TextElement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ThisExpression)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(ThrowStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TryStatement)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeDeclaration)",1,5,9
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeDeclarationStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeLiteral)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeMethodReference)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(TypeParameter)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(UnionType)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(VariableDeclarationExpression)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(VariableDeclarationFragment)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(VariableDeclarationStatement)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visit(WildcardType)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visitExtraDimensions(ASTNode,SimplePropertyDescriptor,ChildListPropertyDescriptor)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visitList(ASTNode,StructuralPropertyDescriptor,String)",1,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFlattener.visitList(ASTNode,StructuralPropertyDescriptor,String,String,String)",1,4,5
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ASTRewriteFormatter(NodeInfoStore,RewriteEventStore,Map,String)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefix.BlockFormattingPrefix(String,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefix.getPrefixAndSuffix(int,ASTNode,RewriteEventStore)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefixSuffix.BlockFormattingPrefixSuffix(String,String,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.BlockFormattingPrefixSuffix.getPrefixAndSuffix(int,ASTNode,RewriteEventStore)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ConstPrefix.ConstPrefix(String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ConstPrefix.getPrefix(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.ExtendedFlattener(RewriteEventStore)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.addMarker(Object,int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.fixupLength(Object,int)",3,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.getMarkers()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.postVisit(ASTNode)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.preVisit(ASTNode)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.ExtendedFlattener.visit(Block)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.FormattingPrefix.FormattingPrefix(String,String,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.FormattingPrefix.getPrefix(int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.changeIndent(String,int,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.computeIndentUnits(String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.createDocument(String,Position[])",4,4,7
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.createIndentString(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.evaluateFormatterEdit(String,TextEdit,Position[])",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.formatNode(ASTNode,String,int)",6,7,23
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.formatString(int,String,int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getEventStore()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getFormattedResult(ASTNode,int,Collection)",3,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getIndentString(String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getIndentWidth()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getLineDelimiter()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getPlaceholders()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.getTabWidth()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteFormatter.shifEdit(TextEdit,int)",5,6,7
"org.eclipse.jdt.internal.core.dom.rewrite.LineCommentEndOffsets.LineCommentEndOffsets(List)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.LineCommentEndOffsets.getOffsets()",1,6,7
"org.eclipse.jdt.internal.core.dom.rewrite.LineCommentEndOffsets.isEndOfLineComment(int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.LineCommentEndOffsets.isEndOfLineComment(int,char[])",2,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.LineCommentEndOffsets.remove(int)",2,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.LineInformation.create(CompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.LineInformation.create(IDocument)",1,1,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.ListRewriteEvent(List)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.ListRewriteEvent(RewriteEvent[])",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getChangeKind()",4,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getChangeKind(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getEntries()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getIndex(ASTNode,int)",4,4,6
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getNewValue()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.getOriginalValue()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.insert(ASTNode,int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.isListRewrite()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.removeEntry(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.replaceEntry(ASTNode,ASTNode)",5,6,7
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.revertChange(NodeRewriteEvent)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.setNewValue(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.ListRewriteEvent.toString()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.CopyPlaceholderData.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.NodeInfoStore(AST)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.StringPlaceholderData.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.clear()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.createCollapsePlaceholder()",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.getPlaceholderData(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.isCollapsed(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.markAsCopyTarget(ASTNode,CopySourceInfo)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.markAsStringPlaceholder(ASTNode,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.newPlaceholderNode(int)",2,2,8
"org.eclipse.jdt.internal.core.dom.rewrite.NodeInfoStore.setPlaceholderData(ASTNode,PlaceholderData)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.NodeRewriteEvent(Object,Object)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getChangeKind()",5,1,5
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getNewValue()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.getOriginalValue()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.isListRewrite()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.setNewValue(Object)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.NodeRewriteEvent.toString()",2,2,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.CopySourceInfo(PropertyLocation,ASTNode,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.compareTo(Object)",3,1,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.getNode()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.CopySourceInfo.toString()",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.EventHolder.EventHolder(ASTNode,StructuralPropertyDescriptor,RewriteEvent)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.EventHolder.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.NodeRangeInfo.NodeRangeInfo(ASTNode,StructuralPropertyDescriptor,ASTNode,ASTNode,CopySourceInfo,ASTNode,TextEditGroup)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.NodeRangeInfo.compareTo(Object)",4,2,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.NodeRangeInfo.getEndNode()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.NodeRangeInfo.getInternalPlaceholder()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.NodeRangeInfo.getStartNode()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.NodeRangeInfo.isMove()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.NodeRangeInfo.toString()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.NodeRangeInfo.updatePlaceholderSourceRanges(TargetSourceRangeComputer)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.ParentIterator()",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.hasNext()",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.next()",4,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.ParentIterator.remove()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.PropertyLocation(ASTNode,StructuralPropertyDescriptor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.equals(Object)",2,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.getParent()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.getProperty()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.PropertyLocation.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.RewriteEventStore()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.accessOriginalValue(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.addEvent(ASTNode,StructuralPropertyDescriptor,RewriteEvent)",4,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.assertNoOverlap(ListRewriteEvent,int,int,List)",3,2,8
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.clear()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.createCopySourceInfo(PropertyLocation,ASTNode,boolean)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.createRangeCopy(ASTNode,StructuralPropertyDescriptor,ASTNode,ASTNode,boolean,ASTNode,ASTNode,TextEditGroup)",4,2,6
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.doMarkMovedAsRemoved(CopySourceInfo,ASTNode,StructuralPropertyDescriptor)",1,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.findEvent(Object,int)",7,5,7
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getChangeKind(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getChangeRootIterator()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getChangedPropertieEvents(ASTNode)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getEvent(ASTNode,StructuralPropertyDescriptor)",5,3,7
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getEventEditGroup(RewriteEvent)",2,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getListEvent(ASTNode,StructuralPropertyDescriptor,boolean)",1,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getNewValue(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getNodeCopySources(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getNodeEvent(ASTNode,StructuralPropertyDescriptor,boolean)",1,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getOriginalValue(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getPropertyLocation(Object,int)",8,6,8
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.getTrackedNodeData(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.hasChangedProperties(ASTNode)",4,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.internalGetCopySources(List,ASTNode)",2,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isInsertBoundToPrevious(ASTNode)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isNewNode(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isNodeInEvent(RewriteEvent,Object,int)",3,3,5
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.isRangeCopyPlaceholder(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markAsCopySource(ASTNode,StructuralPropertyDescriptor,ASTNode,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.markAsTracked(ASTNode,TextEditGroup)",2,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.prepareMovedNodes(TargetSourceRangeComputer)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.prepareNodeRangeCopies(TargetSourceRangeComputer)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.prepareSingleNodeCopies()",1,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.processListWithRanges(List,RewriteEvent[],TargetSourceRangeComputer)",1,8,9
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.removeMoveRangePlaceholders()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.revertListWithRanges(RewriteEvent[],Set,List)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.revertMovedNodes()",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setEventEditGroup(RewriteEvent,TextEditGroup)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setInsertBoundToPrevious(ASTNode)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setNodePropertyMapper(INodePropertyMapper)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.setTrackedNodeData(ASTNode,TextEditGroup)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.toString()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.validateHasChildProperty(ASTNode,StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.validateIsListProperty(StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.RewriteEventStore.validateIsNodeProperty(StructuralPropertyDescriptor)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier.SourceModifier(int,String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier.copy()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.SourceModifier.getModifications(String)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.TokenScanner(Scanner)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.createError(int,String,Throwable)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getCurrentEndOffset()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getCurrentLength()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getCurrentStartOffset()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getNextEndOffset(int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getNextStartOffset(int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getPreviousTokenEndOffset(int,int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getScanner()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenEndOffset(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.getTokenStartOffset(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.isComment(int)",1,1,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.isModifier(int)",3,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readNext(boolean)",3,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readNext(int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readToToken(int)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.readToToken(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner.setOffset(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition.TrackedNodePosition(TextEditGroup,ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition.getLength()",3,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.TrackedNodePosition.getStartPosition()",3,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ConflictIdentifier.ConflictIdentifier(OnDemandComputer,TypeConflictingSimpleNameFinder,StaticConflictingSimpleNameFinder,Set<String>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ConflictIdentifier.Conflicts.Conflicts(Set<String>,Set<String>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ConflictIdentifier.Conflicts.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ConflictIdentifier.extractContainerNames(Collection<OnDemandReduction>,boolean)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ConflictIdentifier.extractOnDemandContainerNames(Collection<ImportName>,boolean)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ConflictIdentifier.findConflictingSimpleNames(ConflictingSimpleNameFinder,Set<ImportName>,boolean,Set<String>,IProgressMonitor)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ConflictIdentifier.identifyConflicts(Set<ImportName>,Set<ImportName>,Set<String>,Set<String>,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportComment.ImportComment(IRegion,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportComparator.ImportComparator(ImportGroupComparator,Comparator<ImportName>,Comparator<ImportName>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportComparator.compare(ImportName,ImportName)",1,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportComparator.createQualifiedNameComparator()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportDeclarationWriter.ImportDeclarationWriter(boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportDeclarationWriter.writeImportDeclaration(ImportName)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.ImportEditor(String,boolean,int,ImportGroupComparator,List<OriginalImportEntry>,RewriteSite,ImportDeclarationWriter)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.ImportEdits.ImportEdits(Collection<TextEdit>,Collection<TextEdit>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.OriginalImportsCursor.OriginalImportsCursor(int,Collection<OriginalImportEntry>)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.OriginalImportsCursor.advance()",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.containsFloatingComment(Iterable<ImportComment>)",3,1,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.createDelimiter(int)",4,2,5
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.createTextEdit(Collection<ImportEntry>)",1,6,8
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.deleteRemainingText(IRegion,Collection<TextEdit>)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.determineEditsForImports(IRegion,Collection<ImportEntry>)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.determineNewDelimiter(ImportEntry,ImportEntry,Collection<ImportComment>)",6,10,14
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.mapPrecedingImports(Collection<? extends ImportEntry>)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.moveOriginalImport(OriginalImportEntry,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.needsStandardDelimiter(ImportEntry,ImportEntry,boolean)",1,4,6
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.placeNewImport(ImportEntry,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.placeResultantImports(OriginalImportsCursor,Collection<ImportEntry>,Map<ImportEntry, Collection<ImportComment>>)",1,12,14
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.preserveStationaryImport(OriginalImportEntry)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEditor.relocateComments(Collection<ImportComment>,int)",2,4,5
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportEntry.ImportEntry(ImportName)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.ImportGroup.ImportGroup(String,int,ImportGroup)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.ImportGroup.getIndex()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.ImportGroup.getName()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.ImportGroup.getPrefix()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.ImportGroup.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.ImportGroupComparator(List<String>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.IndexedImportGroups.IndexedImportGroups(NavigableMap<String, ImportGroup>,NavigableMap<String, ImportGroup>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.compare(ImportName,ImportName)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.determineSortPosition(ImportName)",1,2,4
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.includeMatchAllImportGroups(List<String>)",2,3,5
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.indexImportOrder(List<String>)",2,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.isWholeSegmentPrefix(String,String)",2,3,4
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportGroupComparator.mapImportGroups(Map<String, Integer>)",1,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportName.ImportName(boolean,String,String)",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportName.createFor(ImportDeclaration)",2,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportName.createFor(boolean,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportName.createOnDemand(boolean,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportName.equals(Object)",2,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportName.getContainerOnDemand()",2,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportName.hashCode()",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportName.isOnDemand()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportName.toString()",1,1,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.ImportRewriteAnalyzer(ICompilationUnit,CompilationUnit,ImportRewriteConfiguration)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.RewriteResult.RewriteResult(TextEdit,Set<ImportName>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.RewriteResult.extractQualifiedNames(boolean,Collection<ImportName>)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.RewriteResult.getCreatedImports()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.RewriteResult.getCreatedStaticImports()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.RewriteResult.getTextEdit()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.addImport(boolean,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.analyzeRewrite(IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.computeDelta(Collection<ImportName>,Collection<OnDemandReduction>)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.computeImportOrder(IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.determineImportsRegion(List<OriginalImportEntry>)",2,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.determineRewriteSite(CompilationUnit,List<OriginalImportEntry>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.determineSurroundingRegion(CompilationUnit,IRegion)",1,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.determineTouchedContainers()",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.getBlankLinesBetweenImportGroups(IJavaProject)",1,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.identifyImplicitImports(Collection<ImportName>,Set<String>)",3,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.mapImportsByNameIdentity(List<OriginalImportEntry>)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.mapTopLevelNodes(CompilationUnit)",1,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.matchExistingOrCreateNew(Collection<ImportName>)",1,2,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.readOriginalImports(CompilationUnit)",2,9,11
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.removeImport(boolean,String)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.requireExplicitImport(boolean,String)",1,2,2
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.selectImportComments(CompilationUnit,List<Comment>,int,int,int)",1,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.shouldInsertSpaceBeforeSemicolon(IJavaProject)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteAnalyzer.subtractImports(Collection<ImportName>,Set<ImportName>)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.Builder(OriginalImportHandling)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.build()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.discardingOriginalImports()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.preservingOriginalImports()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.setImplicitImportIdentification(ImplicitImportIdentification)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.setImportOrder(List<String>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.setStaticContainerSorting(ImportContainerSorting)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.setStaticOnDemandThreshold(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.setTypeContainerSorting(ImportContainerSorting)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.Builder.setTypeOnDemandThreshold(int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportRewriteConfiguration.ImportRewriteConfiguration(Builder)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportsDelta.ImportsDelta(Collection<ImportName>,Collection<ImportName>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ImportsDelta.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.NewImportEntry.NewImportEntry(ImportName)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.NewImportEntry.asOriginalImportEntry()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.NewImportEntry.isOriginal()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.NewImportEntry.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OnDemandComputer.OnDemandComputer(int,int)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OnDemandComputer.identifyPossibleReductions(Set<ImportName>,Set<ImportName>,Set<String>,Set<String>)",1,5,7
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OnDemandComputer.mapByContainer(Collection<ImportName>)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OnDemandComputer.maybeReduce(ImportName,Collection<ImportName>,int,Set<String>)",2,5,6
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OnDemandReduction.OnDemandReduction(ImportName,Collection<ImportName>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OnDemandReduction.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OrderPreservingImportAdder.AdjacentImports.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OrderPreservingImportAdder.OrderPreservingImportAdder(Comparator<ImportName>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OrderPreservingImportAdder.addImports(Collection<ImportName>,Collection<ImportName>)",3,4,6
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OrderPreservingImportAdder.countMatchingPrefixSegments(String,String)",6,8,12
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OrderPreservingImportAdder.determineAdjacentNewImports(Collection<ImportName>,Iterable<ImportName>)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OrderPreservingImportAdder.shouldGroupWithSucceeding(ImportName,ImportName,ImportName)",3,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OriginalImportEntry.OriginalImportEntry(ImportName,Collection<ImportComment>,int,IRegion,IRegion)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OriginalImportEntry.asOriginalImportEntry()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OriginalImportEntry.isOriginal()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.OriginalImportEntry.toString()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.PackageAndContainingTypeImportComparator.compare(ImportName,ImportName)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.PackageImportComparator.PackageImportComparator(JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.PackageImportComparator.compare(ImportName,ImportName)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.PackageImportComparator.determinePackageName(ImportName)",6,3,7
"org.eclipse.jdt.internal.core.dom.rewrite.imports.RemovedImportCommentReassigner.RemovedImportCommentReassigner(List<OriginalImportEntry>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.RemovedImportCommentReassigner.assignRemovedImports(Collection<ImportEntry>)",2,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.imports.RemovedImportCommentReassigner.hasFloatingComment(OriginalImportEntry)",3,1,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.RemovedImportCommentReassigner.identifyFirstOccurrenceOfEachImportName(Iterable<ImportEntry>)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.RemovedImportCommentReassigner.identifyFirstSingleForEachOnDemand(Iterable<ImportEntry>)",1,4,4
"org.eclipse.jdt.internal.core.dom.rewrite.imports.RemovedImportCommentReassigner.identifyRemovedImportsWithComments(Collection<ImportEntry>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.RemovedImportCommentReassigner.reassignComments(Collection<ImportEntry>)",1,8,8
"org.eclipse.jdt.internal.core.dom.rewrite.imports.RemovedImportCommentReassigner.retainImportsWithComments(Collection<OriginalImportEntry>)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ReorderingImportAdder.ReorderingImportAdder(Comparator<ImportName>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.ReorderingImportAdder.addImports(Collection<ImportName>,Collection<ImportName>)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.RewriteSite.RewriteSite(IRegion,IRegion,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.StaticConflictingSimpleNameFinder.StaticConflictingSimpleNameFinder(IJavaProject)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.StaticConflictingSimpleNameFinder.extractStaticMemberNames(IType)",1,5,5
"org.eclipse.jdt.internal.core.dom.rewrite.imports.StaticConflictingSimpleNameFinder.findConflictingSimpleNames(Set<String>,Set<String>,IProgressMonitor)",1,6,6
"org.eclipse.jdt.internal.core.dom.rewrite.imports.StaticConflictingSimpleNameFinder.isStaticImportableMember(int)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.TypeConflictingSimpleNameFinder.ConflictAccumulatingTypeRequestor.ConflictAccumulatingTypeRequestor()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.TypeConflictingSimpleNameFinder.ConflictAccumulatingTypeRequestor.acceptType(int,char[],char[],char[][],String)",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.TypeConflictingSimpleNameFinder.ConflictAccumulatingTypeRequestor.buildContainerName(char[],char[][])",1,3,3
"org.eclipse.jdt.internal.core.dom.rewrite.imports.TypeConflictingSimpleNameFinder.ConflictAccumulatingTypeRequestor.getNamesFoundInMultipleContainers()",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.TypeConflictingSimpleNameFinder.TypeConflictingSimpleNameFinder(IJavaProject,SearchEngine)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.TypeConflictingSimpleNameFinder.findConflictingSimpleNames(Set<String>,Set<String>,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.dom.rewrite.imports.TypeConflictingSimpleNameFinder.stringsToCharArrays(Collection<String>)",1,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.EvaluationContextWrapper(EvaluationContext,JavaProject)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.allVariables()",1,1,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.checkBuilderState()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,CompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,CompletionRequestor,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,CompletionRequestor,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,CompletionRequestor,WorkingCopyOwner,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,ICodeCompletionRequestor)",2,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,ICompletionRequestor)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeComplete(String,int,ICompletionRequestor,WorkingCopyOwner)",2,1,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeSelect(String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.codeSelect(String,int,int,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.deleteVariable(IGlobalVariable)",2,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.evaluateCodeSnippet(String,ICodeSnippetRequestor,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.evaluateCodeSnippet(String,String[],String[],int[],IType,boolean,boolean,ICodeSnippetRequestor,IProgressMonitor)",1,12,12
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.evaluateVariable(IGlobalVariable,ICodeSnippetRequestor,IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getBuildNameEnvironment()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getImports()",1,1,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getInfrastructureEvaluationContext()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getInfrastructureEvaluationRequestor(ICodeSnippetRequestor)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getProblemFactory()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getProject()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.getVarClassName()",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.handleInstallException(InstallException)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.newVariable(String,String,String)",1,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.setImports(String[])",1,2,2
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.setPackageName(String)",1,1,1
"org.eclipse.jdt.internal.core.eval.EvaluationContextWrapper.validateImports(ICodeSnippetRequestor)",1,2,2
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.GlobalVariableWrapper(GlobalVariable)",1,1,1
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.getInitializer()",2,1,2
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.getName()",1,1,1
"org.eclipse.jdt.internal.core.eval.GlobalVariableWrapper.getTypeName()",1,1,1
"org.eclipse.jdt.internal.core.eval.RequestorWrapper.RequestorWrapper(ICodeSnippetRequestor)",1,1,1
"org.eclipse.jdt.internal.core.eval.RequestorWrapper.acceptClassFiles(ClassFile[],char[])",1,2,4
"org.eclipse.jdt.internal.core.eval.RequestorWrapper.acceptProblem(CategorizedProblem,char[],int)",1,3,4
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.ChangeCollector(TypeHierarchy)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addAffectedChildren(IJavaElementDelta)",2,3,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(ICompilationUnit,IJavaElementDelta)",2,4,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IImportContainer,IJavaElementDelta)",4,7,9
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IImportDeclaration,IJavaElementDelta)",3,6,8
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IMember,IJavaElementDelta)",2,4,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addChange(IType,IJavaElementDelta)",2,4,6
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addTypeAddition(IType,SimpleDelta)",2,9,9
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addTypeChange(IType,int,SimpleDelta)",2,14,15
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.addTypeRemoval(IType,SimpleDelta)",2,4,5
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.getAllTypesFromElement(IJavaElement,ArrayList)",2,5,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.getAllTypesFromHierarchy(JavaElement,ArrayList)",2,6,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.hasSuperTypeChange(IType)",5,4,7
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.hasVisibilityChange(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.needsRefresh()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.ChangeCollector.toString()",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.HierarchyBinaryType(int,char[],char[],char[],char[][],char)",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.enrichWithExternalAnnotationsFor(ITypeAnnotationWalker,Object,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getEnclosingMethod()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getEnclosingTypeName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getFields()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getGenericSignature()",1,6,7
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getMemberTypes()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getMethods()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getMissingTypeNames()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getModifiers()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getSourceName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getSuperclassName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getTagBits()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isLocal()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.isMember()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.recordSuperType(char[],char[],char)",3,5,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.sourceFileName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType.toString()",2,8,11
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.HierarchyBuilder(TypeHierarchy)",1,6,7
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.buildSupertypes()",2,2,4
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.connect(IGenericType,IType,IType,IType[])",7,8,13
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.createCompilationUnitFromPath(Openable,IFile)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.createInfoFromClassFile(Openable,IResource)",1,7,7
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.createInfoFromClassFileInJar(Openable)",1,7,7
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.getHandle(IGenericType,ReferenceBinding)",7,6,8
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.getType()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.lookupBinaryHandle(IBinaryType)",3,5,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.worked(IProgressMonitor,int)",3,3,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.HierarchyResolver(INameEnvironment,Map,HierarchyBuilder,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.HierarchyResolver(LookupEnvironment,HierarchyBuilder)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(IBinaryType,PackageBinding,AccessRestriction)",2,2,4
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(ICompilationUnit,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(ISourceType[],PackageBinding,AccessRestriction)",2,4,7
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.findSuperClass(IGenericType,ReferenceBinding)",12,12,13
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.findSuperInterfaces(IGenericType,ReferenceBinding)",10,16,22
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.fixSupertypeBindings()",6,16,26
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.remember(IGenericType,ReferenceBinding)",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.remember(IType,ReferenceBinding)",3,6,11
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.rememberAllTypes(CompilationUnitDeclaration,ICompilationUnit,boolean)",2,10,13
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.rememberWithMemberTypes(TypeDeclaration,IType)",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.reportHierarchy(IType,TypeDeclaration,ReferenceBinding)",5,8,13
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.reset()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(IGenericType)",1,6,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(Openable[],HashSet,IProgressMonitor)",15,34,52
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.setEnvironment(LookupEnvironment,HierarchyBuilder)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.setFocusType(char[][])",8,6,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.subOrSuperOfFocus(ReferenceBinding)",4,2,6
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.subTypeOfType(ReferenceBinding,ReferenceBinding)",7,4,9
"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.worked(IProgressMonitor,int)",3,3,3
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.HierarchyType(IType,char[],int,char[],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.getModifiers()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.HierarchyType.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.IndexBasedHierarchyBuilder(TypeHierarchy,IJavaSearchScope)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue.add(char[])",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue.retrieve()",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.Queue.toString()",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build(boolean)",1,4,7
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildForProject(JavaProject,ArrayList,ICompilationUnit[],HashSet,IProgressMonitor)",10,12,16
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildFromPotentialSubtypes(String[],HashSet,IProgressMonitor)",5,18,24
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.createCompilationUnitFromPath(Openable,IFile)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.createInfoFromClassFile(Openable,IResource)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.createInfoFromClassFileInJar(Openable)",2,3,3
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.determinePossibleSubTypes(HashSet,IProgressMonitor)",1,5,5
"org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.searchAllPossibleSubTypes(IType,IJavaSearchScope,Map,IPathRequestor,int,IProgressMonitor)",4,11,17
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.RegionBasedHierarchyBuilder(TypeHierarchy)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.build(boolean)",1,2,5
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.createTypeHierarchyBasedOnRegion(HashMap,IProgressMonitor)",1,4,5
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.determineOpenablesInRegion(IProgressMonitor)",2,7,12
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.injectAllOpenablesForJavaProject(IJavaProject,ArrayList)",2,2,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.injectAllOpenablesForPackageFragment(IPackageFragment,ArrayList)",1,5,6
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.injectAllOpenablesForPackageFragmentRoot(IPackageFragmentRoot,ArrayList)",1,2,3
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.RegionBasedTypeHierarchy(IRegion,ICompilationUnit[],IType,boolean)",1,8,9
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.compute()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.initializeRegions()",1,4,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.isAffectedByOpenable(IJavaElementDelta,IJavaElement,int)",3,4,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.javaProject()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(IType)",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(IType[])",1,4,4
"org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType(IType)",1,8,8
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.TypeHierarchy()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.TypeHierarchy(IType,ICompilationUnit[],IJavaProject,boolean)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.TypeHierarchy(IType,ICompilationUnit[],IJavaSearchScope,boolean)",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addInterface(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addRootClass(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addSubtype(IType,IType)",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.addTypeHierarchyChangedListener(ITypeHierarchyChangedListener)",1,3,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.bytesToFlags(byte[])",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.cacheFlags(IType,int)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.cacheSuperInterfaces(IType,IType[])",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.cacheSuperclass(IType,IType)",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.checkCanceled()",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute()",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.contains(IType)",4,1,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.elementChanged(ElementChangedEvent)",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.exists()",2,3,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.fireChange()",2,4,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.flagsToBytes(Integer)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllClasses()",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllInterfaces()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSubtypes(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSubtypesForType(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSubtypesForType0(IType,ArrayList<IType>)",4,3,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSuperInterfaces(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSuperInterfaces0(IType,ArrayList<IType>)",5,4,7
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSuperclasses(IType)",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSupertypes(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllSupertypes0(IType,ArrayList<IType>)",2,5,8
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getAllTypes()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getCachedFlags(IType)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getClonedChangeListeners()",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getExtendingInterfaces(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getExtendingInterfaces0(IType)",3,5,6
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getImplementingClasses(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getImplementingClasses0(IType)",3,4,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getRootClasses()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getRootInterfaces()",1,3,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSubclasses(IType)",3,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSubtypes(IType)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSubtypesForType(IType)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSuperInterfaces(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSuperclass(IType)",2,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getSupertypes(IType)",2,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.getType()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.growAndAddToArray(IType[],IType)",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.growAndAddToArray(IType[],IType[])",2,1,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasFineGrainChanges()",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasSubtypeNamed(String)",4,6,8
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasSupertype(String)",3,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.hasTypeNamed(String)",3,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.includesTypeOrSupertype(IType)",7,4,8
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.initialize(int)",1,1,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.initializeRegions()",1,5,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffected(IJavaElementDelta,int)",6,6,6
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByChildren(IJavaElementDelta,int)",4,3,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByJavaModel(IJavaElementDelta,IJavaElement,int)",3,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByJavaProject(IJavaElementDelta,IJavaElement,int)",10,10,17
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByOpenable(IJavaElementDelta,IJavaElement,int)",12,20,26
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByPackageFragment(IJavaElementDelta,PackageFragment,int)",4,4,4
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isAffectedByPackageFragmentRoot(IJavaElementDelta,IJavaElement,int)",10,8,12
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.isInterface(IType)",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.javaProject()",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.load(IType,InputStream,WorkingCopyOwner)",6,17,22
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.packageRegionContainsSamePackageFragment(PackageFragment)",3,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.readUntil(InputStream,byte)",1,1,1
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.readUntil(InputStream,byte,int)",2,4,5
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(IProgressMonitor)",1,9,11
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.removeTypeHierarchyChangedListener(ITypeHierarchyChangedListener)",2,2,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.store(OutputStream,IProgressMonitor)",1,22,27
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.subtypesIncludeSupertypeOf(IType)",4,6,9
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.toString()",1,8,8
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.toString(StringBuffer,IJavaElement,int)",1,2,2
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.toString(StringBuffer,IJavaElement,int,boolean)",1,3,3
"org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.worked(int)",1,2,2
"org.eclipse.jdt.internal.core.index.DiskIndex.DiskIndex()",1,1,1
"org.eclipse.jdt.internal.core.index.DiskIndex.DiskIndex(IndexLocation)",2,1,2
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList.IntList(int[])",1,1,1
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList.add(int)",1,2,3
"org.eclipse.jdt.internal.core.index.DiskIndex.IntList.asArray()",1,1,1
"org.eclipse.jdt.internal.core.index.DiskIndex.addDocumentNames(String,MemoryIndex)",1,12,12
"org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResult(HashtableOfObject,char[],Object,MemoryIndex,boolean)",1,7,9
"org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResults(char[][],char[],int,MemoryIndex)",3,22,27
"org.eclipse.jdt.internal.core.index.DiskIndex.cacheDocumentNames()",1,2,5
"org.eclipse.jdt.internal.core.index.DiskIndex.computeDocumentNames(String[],int[],SimpleLookupTable,MemoryIndex)",7,15,28
"org.eclipse.jdt.internal.core.index.DiskIndex.copyQueryResults(HashtableOfObject,int)",1,8,8
"org.eclipse.jdt.internal.core.index.DiskIndex.initialize(boolean)",7,9,11
"org.eclipse.jdt.internal.core.index.DiskIndex.initializeFrom(DiskIndex,File)",3,6,7
"org.eclipse.jdt.internal.core.index.DiskIndex.mergeCategories(DiskIndex,int[],FileOutputStream)",1,6,6
"org.eclipse.jdt.internal.core.index.DiskIndex.mergeCategory(char[],DiskIndex,int[],FileOutputStream)",5,8,12
"org.eclipse.jdt.internal.core.index.DiskIndex.mergeWith(MemoryIndex)",5,18,22
"org.eclipse.jdt.internal.core.index.DiskIndex.readAllDocumentNames()",2,2,4
"org.eclipse.jdt.internal.core.index.DiskIndex.readCategoryTable(char[],boolean)",5,13,21
"org.eclipse.jdt.internal.core.index.DiskIndex.readChunk(String[],InputStream,int,int)",1,6,7
"org.eclipse.jdt.internal.core.index.DiskIndex.readDocumentName(int)",4,2,9
"org.eclipse.jdt.internal.core.index.DiskIndex.readDocumentNumbers(Object)",2,1,2
"org.eclipse.jdt.internal.core.index.DiskIndex.readHeaderInfo(InputStream)",3,9,11
"org.eclipse.jdt.internal.core.index.DiskIndex.readStreamBuffer(InputStream)",3,3,4
"org.eclipse.jdt.internal.core.index.DiskIndex.readStreamChars(InputStream)",6,8,17
"org.eclipse.jdt.internal.core.index.DiskIndex.readStreamDocumentArray(InputStream,int)",3,7,16
"org.eclipse.jdt.internal.core.index.DiskIndex.readStreamInt(InputStream)",1,2,2
"org.eclipse.jdt.internal.core.index.DiskIndex.startQuery()",1,1,1
"org.eclipse.jdt.internal.core.index.DiskIndex.stopQuery()",1,5,5
"org.eclipse.jdt.internal.core.index.DiskIndex.writeAllDocumentNames(String[],FileOutputStream)",9,5,18
"org.eclipse.jdt.internal.core.index.DiskIndex.writeCategories(FileOutputStream)",1,3,3
"org.eclipse.jdt.internal.core.index.DiskIndex.writeCategoryTable(char[],HashtableOfObject,FileOutputStream)",1,9,9
"org.eclipse.jdt.internal.core.index.DiskIndex.writeDocumentNumbers(int[],FileOutputStream)",2,5,11
"org.eclipse.jdt.internal.core.index.DiskIndex.writeHeaderInfo(FileOutputStream)",1,6,6
"org.eclipse.jdt.internal.core.index.DiskIndex.writeOffsetToHeader(int)",1,2,2
"org.eclipse.jdt.internal.core.index.DiskIndex.writeStreamChars(FileOutputStream,char[])",1,5,6
"org.eclipse.jdt.internal.core.index.DiskIndex.writeStreamChars(FileOutputStream,char[],int,int)",1,1,4
"org.eclipse.jdt.internal.core.index.DiskIndex.writeStreamInt(FileOutputStream,int)",1,2,2
"org.eclipse.jdt.internal.core.index.EntryResult.EntryResult(char[],Object)",1,1,2
"org.eclipse.jdt.internal.core.index.EntryResult.addDocumentName(String)",1,1,2
"org.eclipse.jdt.internal.core.index.EntryResult.addDocumentTable(Object)",1,2,2
"org.eclipse.jdt.internal.core.index.EntryResult.getDocumentNames(Index)",4,6,10
"org.eclipse.jdt.internal.core.index.EntryResult.getWord()",1,1,1
"org.eclipse.jdt.internal.core.index.EntryResult.isEmpty()",1,1,2
"org.eclipse.jdt.internal.core.index.FileIndexLocation.FileIndexLocation(File)",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.FileIndexLocation(File,boolean)",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.FileIndexLocation(URL,File)",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.createNewFile()",1,3,3
"org.eclipse.jdt.internal.core.index.FileIndexLocation.delete()",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.index.FileIndexLocation.exists()",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.fileName()",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.getCanonicalFilePath()",1,1,2
"org.eclipse.jdt.internal.core.index.FileIndexLocation.getIndexFile()",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.getInputStream()",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.lastModified()",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.length()",1,1,1
"org.eclipse.jdt.internal.core.index.FileIndexLocation.startsWith(IPath)",1,1,2
"org.eclipse.jdt.internal.core.index.Index.Index(IndexLocation,String,boolean)",1,1,2
"org.eclipse.jdt.internal.core.index.Index.addIndexEntry(char[],char[],String)",1,1,1
"org.eclipse.jdt.internal.core.index.Index.containerRelativePath(String)",3,2,3
"org.eclipse.jdt.internal.core.index.Index.getIndexFile()",1,2,2
"org.eclipse.jdt.internal.core.index.Index.getIndexLastModified()",1,2,2
"org.eclipse.jdt.internal.core.index.Index.getIndexLocation()",1,1,2
"org.eclipse.jdt.internal.core.index.Index.hasChanged()",1,1,1
"org.eclipse.jdt.internal.core.index.Index.isIndexForJar()",1,1,1
"org.eclipse.jdt.internal.core.index.Index.isMatch(char[],char[],int)",13,16,23
"org.eclipse.jdt.internal.core.index.Index.query(char[][],char[],int)",2,4,7
"org.eclipse.jdt.internal.core.index.Index.queryDocumentNames(String)",2,2,5
"org.eclipse.jdt.internal.core.index.Index.remove(String)",1,1,1
"org.eclipse.jdt.internal.core.index.Index.reset()",1,1,1
"org.eclipse.jdt.internal.core.index.Index.save()",2,2,3
"org.eclipse.jdt.internal.core.index.Index.startQuery()",1,2,2
"org.eclipse.jdt.internal.core.index.Index.stopQuery()",1,2,2
"org.eclipse.jdt.internal.core.index.Index.toString()",1,1,1
"org.eclipse.jdt.internal.core.index.IndexLocation.IndexLocation(File)",1,1,2
"org.eclipse.jdt.internal.core.index.IndexLocation.IndexLocation(URL)",1,1,1
"org.eclipse.jdt.internal.core.index.IndexLocation.close()",1,1,1
"org.eclipse.jdt.internal.core.index.IndexLocation.createIndexLocation(URL)",2,3,4
"org.eclipse.jdt.internal.core.index.IndexLocation.getUrl()",1,1,1
"org.eclipse.jdt.internal.core.index.IndexLocation.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.index.IndexLocation.isParticipantIndex()",1,1,1
"org.eclipse.jdt.internal.core.index.IndexLocation.toString()",1,1,1
"org.eclipse.jdt.internal.core.index.JarIndexLocation.JarIndexLocation(URL,URL)",1,1,1
"org.eclipse.jdt.internal.core.index.JarIndexLocation.close()",1,2,3
"org.eclipse.jdt.internal.core.index.JarIndexLocation.createNewFile()",1,1,1
"org.eclipse.jdt.internal.core.index.JarIndexLocation.delete()",1,1,1
"org.eclipse.jdt.internal.core.index.JarIndexLocation.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.index.JarIndexLocation.exists()",3,2,4
"org.eclipse.jdt.internal.core.index.JarIndexLocation.fileName()",1,1,1
"org.eclipse.jdt.internal.core.index.JarIndexLocation.getCanonicalFilePath()",1,1,1
"org.eclipse.jdt.internal.core.index.JarIndexLocation.getIndexFile()",1,1,1
"org.eclipse.jdt.internal.core.index.JarIndexLocation.getInputStream()",2,2,4
"org.eclipse.jdt.internal.core.index.JarIndexLocation.lastModified()",1,1,1
"org.eclipse.jdt.internal.core.index.JarIndexLocation.length()",1,1,1
"org.eclipse.jdt.internal.core.index.JarIndexLocation.startsWith(IPath)",1,1,1
"org.eclipse.jdt.internal.core.index.MemoryIndex.MemoryIndex()",1,1,1
"org.eclipse.jdt.internal.core.index.MemoryIndex.addDocumentNames(String,SimpleSet)",1,7,7
"org.eclipse.jdt.internal.core.index.MemoryIndex.addIndexEntry(char[],char[],String)",1,4,4
"org.eclipse.jdt.internal.core.index.MemoryIndex.addQueryResults(char[][],char[],int,HashtableOfObject)",5,16,19
"org.eclipse.jdt.internal.core.index.MemoryIndex.hasChanged()",1,1,1
"org.eclipse.jdt.internal.core.index.MemoryIndex.remove(String)",1,1,2
"org.eclipse.jdt.internal.core.index.MemoryIndex.shouldMerge()",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.AbstractDOMBuilder()",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.acceptLineSeparatorPositions(int[])",1,1,7
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.addChild(IDOMNode)",1,3,4
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.createCompilationUnit(ICompilationUnit)",2,1,2
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.createCompilationUnit(char[],char[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.enterCompilationUnit()",1,2,2
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.exitType(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.getLineStart(int)",3,1,3
"org.eclipse.jdt.internal.core.jdom.AbstractDOMBuilder.initializeBuild(char[],boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.CompilationUnit(char[],char[])",1,4,4
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getContents()",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.getPackageName()",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.ignoreOptionalProblems()",1,1,1
"org.eclipse.jdt.internal.core.jdom.CompilationUnit.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.DOMBuilder()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptImport(int,int,int[],char[],int,boolean,int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptInitializer(int,int,int[],int,int,int,int)",1,1,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptPackage(int,int,int[],char[],int)",1,1,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.acceptProblem(CategorizedProblem)",2,1,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.addChild(IDOMNode)",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createCompilationUnit(ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createField(char[])",3,1,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createFields(char[])",2,2,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createImport()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createImport(char[])",2,1,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createInitializer(char[])",2,1,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createMethod(char[])",2,1,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createPackage()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createPackage(char[])",2,1,3
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.createType(char[])",3,2,4
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterAbstractMethod(int,int[],int,int,char[],int,int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,int,int,char[][],int[],int[],int,boolean)",1,1,8
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterClass(int,int[],int,int,int,char[],int,int,char[],int,int,char[][],int[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterConstructor(int,int[],int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,char[][],int[],int[],int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterField(int,int[],int,int,char[],int,int,int,char[],int,int,int,int)",1,1,6
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterInterface(int,int[],int,int,int,char[],int,int,char[][],int[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterMethod(int,int[],int,int,char[],int,int,int,char[],int,int,char[][],int[],int[],char[][],int[],int[],int,int,int,char[][],int[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.enterType(int,int[],int,int,int,char[],int,int,char[],int,int,char[][],int[],int[],int,boolean)",1,2,12
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitAbstractMethod(int,int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitClass(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitConstructor(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitField(int,int)",1,4,5
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitInterface(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.exitMethod(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.getParser(Map)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMBuilder.initializeBuild(char[],boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.DOMCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.DOMCompilationUnit(char[],int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.appendFragmentedContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.canHaveChildren()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getHeader()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getJavaElement(IJavaElement)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getName()",5,4,7
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.initalizeHeader()",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.isAllowableChild(IDOMNode)",2,2,4
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.normalize(ILineStartFinder)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.setHeader(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.setName(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMCompilationUnit.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.DOMField()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.DOMField(char[],int[],String,int[],int,String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.DOMField(char[],int[],String,int[],int[],int,int[],int[],String,boolean,int[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.appendMemberBodyContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.appendMemberDeclarationContents(CharArrayBuffer)",1,5,5
"org.eclipse.jdt.internal.core.jdom.DOMField.appendMemberHeaderFragment(CharArrayBuffer)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.appendSimpleContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.becomeDetailed()",4,7,7
"org.eclipse.jdt.internal.core.jdom.DOMField.clone()",2,3,3
"org.eclipse.jdt.internal.core.jdom.DOMField.expand()",1,7,7
"org.eclipse.jdt.internal.core.jdom.DOMField.getDetailedNode()",2,3,3
"org.eclipse.jdt.internal.core.jdom.DOMField.getFirstFieldDeclaration()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.getInitializer()",3,1,3
"org.eclipse.jdt.internal.core.jdom.DOMField.getJavaElement(IJavaElement)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.getLastFieldDeclaration()",3,4,5
"org.eclipse.jdt.internal.core.jdom.DOMField.getMemberDeclarationStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.getSingleVariableDeclaratorContents()",1,5,5
"org.eclipse.jdt.internal.core.jdom.DOMField.getType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.getTypeContents()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.hasInitializer()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.hasMultipleVariableDeclarators()",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMField.insertSibling(IDOMNode)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.isTypeAltered()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.isVariableDeclarator()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.normalizeEndPosition(ILineStartFinder,DOMNode)",4,5,7
"org.eclipse.jdt.internal.core.jdom.DOMField.normalizeStartPosition(int,ILineStartFinder)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.remove()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setComment(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setFlags(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setHasInitializer(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setInitializer(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setInitializerRange(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setIsVariableDeclarator(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.setName(String)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMField.setType(String)",2,1,2
"org.eclipse.jdt.internal.core.jdom.DOMField.setTypeAltered(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMField.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.DOMImport()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.DOMImport(char[],int[],String,boolean,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.DOMImport(char[],int[],String,int[],boolean,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.appendFragmentedContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.getContents()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.getJavaElement(IJavaElement)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.isOnDemand()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.setFlags(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMImport.setName(String)",2,1,2
"org.eclipse.jdt.internal.core.jdom.DOMImport.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.DOMInitializer()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.DOMInitializer(char[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.DOMInitializer(char[],int[],int[],int,int[],int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.appendMemberBodyContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.appendMemberDeclarationContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.appendSimpleContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getBody()",3,1,3
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getJavaElement(IJavaElement)",2,3,4
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getMemberDeclarationStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.isSignatureEqual(IDOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.setBody(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.setName(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMInitializer.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.DOMMember()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.DOMMember(char[],int[],String,int[],int[],int,int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendFragmentedContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendMemberHeaderFragment(CharArrayBuffer)",1,6,7
"org.eclipse.jdt.internal.core.jdom.DOMMember.appendString(String[],String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.generateFlags()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.getComment()",3,1,3
"org.eclipse.jdt.internal.core.jdom.DOMMember.getFlags()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.getModifiersText()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMMember.hasBody()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.hasComment()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.setComment(String)",2,2,3
"org.eclipse.jdt.internal.core.jdom.DOMMember.setFlags(int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.setHasBody(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.setHasComment(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMember.setStartPosition(int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMember.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.DOMMethod()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.DOMMethod(char[],int[],String,int[],int,boolean,String,String[],String[],String[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.DOMMethod(char[],int[],String,int[],int[],int,int[],boolean,String,int[],String[],String[],int[],String[],int[],int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.addException(String)",2,2,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.addParameter(String,String)",3,3,5
"org.eclipse.jdt.internal.core.jdom.DOMMethod.appendMemberBodyContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.appendMemberDeclarationContents(CharArrayBuffer)",1,10,11
"org.eclipse.jdt.internal.core.jdom.DOMMethod.appendSimpleContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.generateFlags()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getBody()",3,1,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getConstructorName()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getDefault()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getExceptions()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getJavaElement(IJavaElement)",2,5,5
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getMemberDeclarationStartPosition()",2,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getName()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getParameterNames()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getParameterTypes()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getReturnType()",2,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getReturnTypeContents()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMMethod.getTypeParameters()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.hasTrailingArrayQualifier()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.isConstructor()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.isReturnTypeAltered()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.isSignatureEqual(IDOMNode)",9,9,17
"org.eclipse.jdt.internal.core.jdom.DOMMethod.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setBody(String)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setBodyRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setConstructor(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setDefault(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setExceptions(String[])",1,4,5
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setName(String)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setParameters(String[],String[])",4,6,9
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setReturnType(String)",2,1,2
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setReturnTypeAltered(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setSourceRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.setTypeParameters(String[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMMethod.toString()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.DOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.DOMNode(char[],int[],String,int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.addChild(IDOMNode)",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.appendContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.appendContentsOfChildren(CharArrayBuffer)",1,7,7
"org.eclipse.jdt.internal.core.jdom.DOMNode.basicAddChild(IDOMNode)",6,2,8
"org.eclipse.jdt.internal.core.jdom.DOMNode.becomeDetailed()",3,3,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.canHaveChildren()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.clone()",1,6,6
"org.eclipse.jdt.internal.core.jdom.DOMNode.cloneSharingDocument(char[],int)",1,5,5
"org.eclipse.jdt.internal.core.jdom.DOMNode.fragment()",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.getCharacters()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getChild(String)",5,3,5
"org.eclipse.jdt.internal.core.jdom.DOMNode.getChildren()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getContents()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getDocument()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getEndPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getFactory()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getFirstChild()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getInsertionPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getMask(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getName()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getNameContents()",3,3,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.getNextNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getParent()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getParentEndDeclaration()",3,3,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.getPreviousNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.getRoot()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.getStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.insertSibling(IDOMNode)",6,4,10
"org.eclipse.jdt.internal.core.jdom.DOMNode.isAllowableChild(IDOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isContentMergableWith(DOMNode)",1,4,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.isDetailed()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isFragmented()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isNameAltered()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.isSignatureEqual(IDOMNode)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.localizeContents()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.normalize(ILineStartFinder)",1,4,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.normalizeEndPosition(ILineStartFinder,DOMNode)",1,3,4
"org.eclipse.jdt.internal.core.jdom.DOMNode.normalizeStartPosition(int,ILineStartFinder)",1,2,5
"org.eclipse.jdt.internal.core.jdom.DOMNode.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.offsetRange(int[],int)",1,1,3
"org.eclipse.jdt.internal.core.jdom.DOMNode.rangeCopy(int[])",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.remove()",1,2,7
"org.eclipse.jdt.internal.core.jdom.DOMNode.setMask(int,boolean)",1,1,2
"org.eclipse.jdt.internal.core.jdom.DOMNode.setName(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.setNameAltered(boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.setSourceRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.setStartPosition(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMNode.shareContents(DOMNode)",1,3,3
"org.eclipse.jdt.internal.core.jdom.DOMPackage.DOMPackage()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.DOMPackage(char[],int[],String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.DOMPackage(char[],int[],String,int[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.appendFragmentedContents(CharArrayBuffer)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getContents()",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getJavaElement(IJavaElement)",2,2,2
"org.eclipse.jdt.internal.core.jdom.DOMPackage.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.setName(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMPackage.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.DOMType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.DOMType(char[],int[],String,int[],int,String[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.DOMType(char[],int[],String,int[],int[],int,int[],int[],int[],int[],String[],int[],int[],int[],int[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.addSuperInterface(String)",2,2,3
"org.eclipse.jdt.internal.core.jdom.DOMType.appendMemberBodyContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.appendMemberDeclarationContents(CharArrayBuffer)",1,17,17
"org.eclipse.jdt.internal.core.jdom.DOMType.appendSimpleContents(CharArrayBuffer)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.canHaveChildren()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getCloseBodyPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getDetailedNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getInsertionPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getJavaElement(IJavaElement)",4,4,4
"org.eclipse.jdt.internal.core.jdom.DOMType.getMemberDeclarationStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getNodeType()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getOpenBodyEnd()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getSuperInterfaces()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.getSuperclass()",3,1,3
"org.eclipse.jdt.internal.core.jdom.DOMType.getTypeParameters()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.isAllowableChild(IDOMNode)",2,2,5
"org.eclipse.jdt.internal.core.jdom.DOMType.isAnnotation()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.isClass()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.isEnum()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.newDOMNode()",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.normalize(ILineStartFinder)",1,11,20
"org.eclipse.jdt.internal.core.jdom.DOMType.normalizeEndPosition(ILineStartFinder,DOMNode)",1,3,4
"org.eclipse.jdt.internal.core.jdom.DOMType.offset(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setAnnotation(boolean)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMType.setClass(boolean)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMType.setCloseBodyRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setCloseBodyRangeStart(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setEnum(boolean)",1,2,2
"org.eclipse.jdt.internal.core.jdom.DOMType.setName(String)",2,4,5
"org.eclipse.jdt.internal.core.jdom.DOMType.setOpenBodyRangeEnd(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setOpenBodyRangeStart(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setSuperInterfaces(String[])",2,4,5
"org.eclipse.jdt.internal.core.jdom.DOMType.setSuperclass(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setTypeKeyword(String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.setTypeParameters(String[])",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.shareContents(DOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.DOMType.toString()",1,1,1
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration.SiblingEnumeration(IDOMNode)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration.hasMoreElements()",1,1,1
"org.eclipse.jdt.internal.core.jdom.SiblingEnumeration.nextElement()",1,2,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.acceptImport(int,int,int,int,char[][],boolean,int)",1,1,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.acceptPackage(ImportReference)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.acceptProblem(CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.createCompilationUnit(ICompilationUnit)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.createCompilationUnit(String,String)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterAbstractMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterConstructor(MethodInfo)",1,1,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterField(FieldInfo)",1,1,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterInitializer(int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.enterType(TypeInfo)",1,2,2
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitField(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitMember(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitMethod(int,Expression)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.exitType(int)",1,1,1
"org.eclipse.jdt.internal.core.jdom.SimpleDOMBuilder.getParser(Map)",1,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.includesBinaries()",1,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.includesClasspaths()",1,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.setIncludesBinaries(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.AbstractSearchScope.setIncludesClasspaths(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.BasicSearchEngine()",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.BasicSearchEngine(ICompilationUnit[])",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.BasicSearchEngine(WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.convertTypeKind(int)",6,2,6
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.createHierarchyScope(IType)",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.createHierarchyScope(IType,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.createJavaSearchScope(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.createJavaSearchScope(IJavaElement[],boolean)",1,1,2
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.createJavaSearchScope(IJavaElement[],int)",1,6,7
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.createStrictHierarchyScope(IJavaProject,IType,boolean,boolean,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.createTypeNameMatch(IType,int)",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.createWorkspaceScope()",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(SearchPattern,SearchParticipant[],IJavaSearchScope,SearchRequestor,IProgressMonitor)",6,14,19
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.getDefaultSearchParticipant()",1,1,1
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.getMatchRuleString(int)",3,5,14
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.getParser()",1,2,2
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.getSearchForString(int)",13,2,13
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.getWorkingCopies()",2,11,16
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.getWorkingCopies(IJavaElement)",4,3,5
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.match(char,char[],int,char[],int,int,char[],char[])",17,15,38
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.match(char,int)",8,2,8
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(SearchPattern,SearchParticipant[],IJavaSearchScope,SearchRequestor,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchAllConstructorDeclarations(char[],char[],int,IJavaSearchScope,IRestrictedAccessConstructorRequestor,int,IProgressMonitor)",16,37,59
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchAllSecondaryTypeNames(IPackageFragmentRoot[],IRestrictedAccessTypeRequestor,boolean,IProgressMonitor)",6,14,27
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchAllTypeNames(char[],int,char[],int,int,IJavaSearchScope,IRestrictedAccessTypeRequestor,int,IProgressMonitor)",14,35,62
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchAllTypeNames(char[][],char[][],int,int,IJavaSearchScope,IRestrictedAccessTypeRequestor,int,IProgressMonitor)",6,30,49
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations(IJavaElement,SearchRequestor,SearchPattern,IProgressMonitor)",2,6,9
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfAccessedFields(IJavaElement,SearchRequestor,IProgressMonitor)",2,3,4
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfReferencedTypes(IJavaElement,SearchRequestor,IProgressMonitor)",2,3,4
"org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfSentMessages(IJavaElement,SearchRequestor,IProgressMonitor)",2,3,4
"org.eclipse.jdt.internal.core.search.HierarchyScope.HierarchyScope(IJavaProject,IType,WorkingCopyOwner,boolean,boolean,boolean)",1,1,2
"org.eclipse.jdt.internal.core.search.HierarchyScope.HierarchyScope(IType,WorkingCopyOwner)",4,4,4
"org.eclipse.jdt.internal.core.search.HierarchyScope.add(IResource)",1,2,2
"org.eclipse.jdt.internal.core.search.HierarchyScope.buildResourceVector()",5,11,11
"org.eclipse.jdt.internal.core.search.HierarchyScope.computeDependents(IJavaProject,HashSet,HashSet)",2,4,6
"org.eclipse.jdt.internal.core.search.HierarchyScope.computeProjectsAndJars(IType)",1,8,8
"org.eclipse.jdt.internal.core.search.HierarchyScope.encloses(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.HierarchyScope.encloses(IJavaElement,IProgressMonitor)",11,11,16
"org.eclipse.jdt.internal.core.search.HierarchyScope.encloses(String)",1,1,1
"org.eclipse.jdt.internal.core.search.HierarchyScope.encloses(String,IProgressMonitor)",8,7,10
"org.eclipse.jdt.internal.core.search.HierarchyScope.enclosesFineGrained(IJavaElement)",2,1,3
"org.eclipse.jdt.internal.core.search.HierarchyScope.enclosesType(IType,boolean)",10,9,14
"org.eclipse.jdt.internal.core.search.HierarchyScope.enclosingProjectsAndJars()",2,2,3
"org.eclipse.jdt.internal.core.search.HierarchyScope.initialize()",1,1,1
"org.eclipse.jdt.internal.core.search.HierarchyScope.initialize(IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.search.HierarchyScope.processDelta(IJavaElementDelta,int)",2,2,3
"org.eclipse.jdt.internal.core.search.HierarchyScope.refresh()",1,1,1
"org.eclipse.jdt.internal.core.search.HierarchyScope.refresh(IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.search.HierarchyScope.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.IndexSelector.IndexSelector(IJavaSearchScope,SearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.IndexSelector.canSeeFocus(IJavaElement,JavaProject,char[][][])",13,10,16
"org.eclipse.jdt.internal.core.search.IndexSelector.canSeeFocus(IJavaElement[],JavaProject,char[][][])",3,2,4
"org.eclipse.jdt.internal.core.search.IndexSelector.canSeeFocus(SearchPattern,IPath)",6,5,9
"org.eclipse.jdt.internal.core.search.IndexSelector.getFocusedElementsAndTypes(SearchPattern,IJavaElement,ObjectVector)",6,9,12
"org.eclipse.jdt.internal.core.search.IndexSelector.getIndexLocations()",1,2,2
"org.eclipse.jdt.internal.core.search.IndexSelector.getJavaProject(IPath,IJavaModel)",2,2,3
"org.eclipse.jdt.internal.core.search.IndexSelector.getQualifiedNames(ObjectVector)",1,6,8
"org.eclipse.jdt.internal.core.search.IndexSelector.initializeIndexLocations()",1,20,25
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.JavaSearchDocument(String,SearchParticipant)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.JavaSearchDocument(ZipEntry,IPath,byte[],SearchParticipant)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getByteContents()",2,3,5
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getCharContents()",2,3,5
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getEncoding()",2,3,4
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.getFile()",1,2,2
"org.eclipse.jdt.internal.core.search.JavaSearchDocument.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.beginSearching()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.doneSearching()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.getDescription()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.getDocument(String)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexDocument(SearchDocument,IPath)",1,3,3
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexResolvedDocument(SearchDocument,IPath)",1,3,3
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(SearchDocument[],SearchPattern,IJavaSearchScope,SearchRequestor,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.resolveDocument(SearchDocument)",1,3,3
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.selectIndexURLs(SearchPattern,IJavaSearchScope)",1,2,2
"org.eclipse.jdt.internal.core.search.JavaSearchParticipant.selectIndexes(SearchPattern,IJavaSearchScope)",1,3,3
"org.eclipse.jdt.internal.core.search.JavaSearchScope.JavaSearchScope()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.JavaSearchScope(int)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(IJavaElement)",2,17,22
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaProject,IPath,int,HashSet,HashSet,IClasspathEntry)",10,25,36
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaProject,int,HashSet)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.add(String,String,String,boolean,AccessRuleSet)",3,5,10
"org.eclipse.jdt.internal.core.search.JavaSearchScope.addEnclosingProjectOrJar(IPath)",3,2,3
"org.eclipse.jdt.internal.core.search.JavaSearchScope.encloses(IJavaElement)",6,7,8
"org.eclipse.jdt.internal.core.search.JavaSearchScope.encloses(String)",2,2,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.encloses(String,String,int)",6,6,9
"org.eclipse.jdt.internal.core.search.JavaSearchScope.enclosingProjectsAndJars()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchScope.getAccessRuleSet(String,String)",3,1,3
"org.eclipse.jdt.internal.core.search.JavaSearchScope.getPath(IJavaElement,boolean)",7,5,8
"org.eclipse.jdt.internal.core.search.JavaSearchScope.indexOf(String)",4,2,5
"org.eclipse.jdt.internal.core.search.JavaSearchScope.indexOf(String,String)",4,3,5
"org.eclipse.jdt.internal.core.search.JavaSearchScope.initialize(int)",1,1,2
"org.eclipse.jdt.internal.core.search.JavaSearchScope.normalize(String)",2,3,4
"org.eclipse.jdt.internal.core.search.JavaSearchScope.packageFragmentRoot(String,int,String)",7,9,9
"org.eclipse.jdt.internal.core.search.JavaSearchScope.processDelta(IJavaElementDelta,int)",6,8,11
"org.eclipse.jdt.internal.core.search.JavaSearchScope.rehash()",1,4,5
"org.eclipse.jdt.internal.core.search.JavaSearchScope.toString()",5,7,9
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.JavaSearchTypeNameMatch(IType,int)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.equals(Object)",4,5,6
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.getAccessibility()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.getModifiers()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.getType()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.hashCode()",2,1,2
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.setAccessibility(int)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.setModifiers(int)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.setType(IType)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch.toString()",2,2,2
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.JavaWorkspaceScope()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.encloses(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.encloses(String)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.enclosingProjectsAndJars()",2,9,11
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.equals(Object)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.getAccessRuleSet(String,String)",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.packageFragmentRoot(String,int,String)",2,6,7
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.processDelta(IJavaElementDelta,int)",5,7,15
"org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.toString()",1,3,4
"org.eclipse.jdt.internal.core.search.PathCollector.acceptIndexMatch(String,SearchPattern,SearchParticipant,AccessRuleSet)",1,1,1
"org.eclipse.jdt.internal.core.search.PathCollector.getPaths()",1,1,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.PatternSearchJob(SearchPattern,SearchParticipant,IJavaSearchScope,IndexQueryRequestor)",1,1,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.belongsTo(String)",1,1,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.cancel()",1,1,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.ensureReadyToRun()",1,2,2
"org.eclipse.jdt.internal.core.search.PatternSearchJob.execute(IProgressMonitor)",5,7,9
"org.eclipse.jdt.internal.core.search.PatternSearchJob.getIndexes(IProgressMonitor)",1,3,3
"org.eclipse.jdt.internal.core.search.PatternSearchJob.getJobFamily()",1,1,1
"org.eclipse.jdt.internal.core.search.PatternSearchJob.search(Index,IProgressMonitor)",4,4,7
"org.eclipse.jdt.internal.core.search.PatternSearchJob.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.StringOperation.getCamelCaseMatchingRegions(String,int,int,String,int,int,boolean)",30,23,49
"org.eclipse.jdt.internal.core.search.StringOperation.getPatternMatchingRegions(String,int,int,String,int,int,boolean)",31,24,49
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.SubTypeSearchJob(SearchPattern,SearchParticipant,IJavaSearchScope,IndexQueryRequestor)",1,1,1
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.finished()",1,3,3
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.getIndexes(IProgressMonitor)",2,2,2
"org.eclipse.jdt.internal.core.search.SubTypeSearchJob.search(Index,IProgressMonitor)",2,2,3
"org.eclipse.jdt.internal.core.search.TypeNameMatchRequestorWrapper.TypeNameMatchRequestorWrapper(TypeNameMatchRequestor,IJavaSearchScope)",1,1,2
"org.eclipse.jdt.internal.core.search.TypeNameMatchRequestorWrapper.acceptType(int,char[],char[],char[][],String,AccessRestriction)",5,11,16
"org.eclipse.jdt.internal.core.search.TypeNameMatchRequestorWrapper.createTypeFromJar(String,int)",6,9,11
"org.eclipse.jdt.internal.core.search.TypeNameMatchRequestorWrapper.createTypeFromPath(String,String,char[][])",5,12,14
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper.TypeNameRequestorWrapper(TypeNameRequestor)",1,1,1
"org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper.acceptType(int,char[],char[],char[][],String,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.AbstractIndexer(SearchDocument)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addAnnotationTypeDeclaration(int,char[],char[],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addAnnotationTypeReference(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addClassDeclaration(int,char[],char[],char[][],char[],char[][],char[][],boolean)",1,4,4
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addConstructorDeclaration(char[],int,char[],char[][],char[][],int,char[],int,char[][],int)",1,5,5
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addConstructorReference(char[],int)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addDefaultConstructorDeclaration(char[],char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addEnumDeclaration(int,char[],char[],char[][],char[],char[][],boolean)",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addFieldDeclaration(char[],char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addFieldReference(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addIndexEntry(char[],char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addInterfaceDeclaration(int,char[],char[],char[][],char[][],char[][],boolean)",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addMethodDeclaration(char[],char[][],char[],char[][])",1,6,7
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addMethodReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addNameReference(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addTypeDeclaration(int,char[],char[],char[][],boolean)",1,2,4
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addTypeReference(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.erasure(char[])",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.indexResolvedDocument()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex.AddFolderToIndex(IPath,IProject,char[][],char[][],IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex.execute(IProgressMonitor)",10,13,22
"org.eclipse.jdt.internal.core.search.indexing.AddFolderToIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.AddJarFileToIndex(IFile,IndexLocation,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.AddJarFileToIndex(IFile,IndexLocation,IndexManager,boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.AddJarFileToIndex(IPath,IndexLocation,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.AddJarFileToIndex(IPath,IndexLocation,IndexManager,boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.equals(Object)",4,4,4
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.execute(IProgressMonitor)",19,43,49
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.getJobFamily()",2,2,2
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.hasPreBuiltIndex()",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.hashCode()",3,3,3
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.isIdentifier()",3,2,3
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.isValidPackageNameForClass(String)",5,4,8
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.updatedIndexState()",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.BinaryIndexer(SearchDocument)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.addBinaryAnnotation(IBinaryAnnotation)",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.addBinaryRetentionAnnotation(long)",1,4,4
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.addBinaryStandardAnnotations(long)",2,10,11
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.addBinaryTargetAnnotation(long)",1,16,16
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.addPairValue(Object)",1,6,6
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.addTypeReference(char[])",3,2,4
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.convertToArrayType(char[],int)",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.convertToArrayType(char[][],int,int)",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.decodeFieldType(char[])",23,12,25
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.decodeParameterTypes(char[],boolean)",7,15,30
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.decodeReturnType(char[])",24,12,26
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractArgCount(char[],char[])",10,4,16
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractClassName(int[],ClassFileReader,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractClassReference(int[],ClassFileReader,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractName(int[],ClassFileReader,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractReferenceFromConstantPool(byte[],ClassFileReader)",3,6,14
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.extractType(int[],ClassFileReader,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.indexDocument()",7,30,39
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.removeFirstSyntheticParameter(char[])",5,2,5
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.replace(char,char,char[])",2,1,4
"org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.replace(char,char,char[][])",2,2,3
"org.eclipse.jdt.internal.core.search.indexing.DefaultJavaIndexer.generateIndexForJar(String,String)",2,3,4
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.IndexAllProject(IProject,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.equals(Object)",2,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.execute(IProgressMonitor)",32,39,64
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.updatedIndexState()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.IndexBinaryFolder(IContainer,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.equals(Object)",2,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.execute(IProgressMonitor)",12,19,29
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder.updatedIndexState()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.aboutToUpdateIndex(IPath,Integer)",2,4,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.addBinary(IFile,IPath)",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.addIndex(IPath,IndexLocation)",2,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.addSource(IFile,IPath,SourceElementParser)",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.cleanUpIndexes()",1,6,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.computeIndexLocation(IPath)",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.computeIndexLocation(IPath,URL)",1,5,5
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.deleteIndexFiles()",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.deleteIndexFiles(SimpleSet)",4,5,8
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.ensureIndexExists(IndexLocation,IPath)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndex(IPath,IndexLocation,boolean,boolean)",9,17,19
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndex(IPath,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndex(IndexLocation)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndexForUpdate(IPath,boolean,boolean)",2,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndexStates()",2,5,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndexes(IndexLocation[],IProgressMonitor)",3,16,19
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getJavaPluginWorkingLocation()",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getParticipantsContainer(IndexLocation)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getSavedIndexesDirectory()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.getSourceElementParser(IJavaProject,ISourceElementRequestor)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.hasJavaLikeNamesChanged()",5,9,10
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexAll(IProject)",2,4,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexDocument(SearchDocument,SearchParticipant,Index,IPath)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexLibrary(IPath,IProject,URL)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexLibrary(IPath,IProject,URL,boolean)",5,5,10
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexResolvedDocument(SearchDocument,SearchParticipant,Index,IPath)",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexSourceFolder(JavaProject,IPath,char[][],char[][])",3,2,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.jobWasCancelled(IPath)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.moveToNextJob()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.notifyIdle(long)",1,2,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.processName()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.readIndexMap()",5,6,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.readIndexState(String)",4,5,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.readJavaLikeNamesFile()",3,4,5
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.readParticipantsIndexNamesFile()",1,7,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.rebuildIndex(IndexLocation,IPath)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.rebuildIndex(IndexLocation,IPath,boolean)",2,4,9
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.recreateIndex(IPath)",1,5,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.remove(String,IPath)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeIndex(IPath)",1,9,10
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeIndexFamily(IPath)",3,5,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeIndexPath(IPath)",3,12,15
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeIndexesState(IndexLocation[])",4,4,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.removeSourceFolderFromIndex(JavaProject,IPath,char[][],char[][])",3,2,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.reset()",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.resetIndex(IPath)",2,6,6
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndex(Index)",5,6,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndexes()",3,9,11
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.savePreBuiltIndex(Index)",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.scheduleDocumentIndexing(SearchDocument,IPath,IndexLocation,SearchParticipant)",4,4,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.toString()",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.updateIndexState(IndexLocation,Integer)",5,4,12
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.updateParticipant(IPath,IPath)",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.writeIndexMapFile()",1,7,9
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.writeJavaLikeNamesFile()",1,7,8
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.writeParticipantsIndexNamesFile()",1,6,7
"org.eclipse.jdt.internal.core.search.indexing.IndexManager.writeSavedIndexNamesFile()",1,6,8
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.IndexRequest(IPath,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.belongsTo(String)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.cancel()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.ensureReadyToRun()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.getJobFamily()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexRequest.updatedIndexState()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexingParser.IndexingParser(ISourceElementRequestor,IProblemFactory,CompilerOptions,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexingParser.newImportReference(char[][],long[],boolean,int)",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.IndexingParser.newQualifiedNameReference(char[][],long[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.IndexingParser.newSingleNameReference(char[],long)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.enterRead()",1,2,3
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.enterWrite()",1,2,3
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitRead()",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitReadEnterWrite()",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitWrite()",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.exitWriteEnterRead()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor.toString()",1,4,4
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex.RemoveFolderFromIndex(IPath,char[][],char[][],IProject,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex.execute(IProgressMonitor)",4,10,14
"org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex.RemoveFromIndex(String,IPath,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex.execute(IProgressMonitor)",4,3,6
"org.eclipse.jdt.internal.core.search.indexing.RemoveFromIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex.SaveIndex(IPath,IndexManager)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex.execute(IProgressMonitor)",4,5,8
"org.eclipse.jdt.internal.core.search.indexing.SaveIndex.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.SourceIndexer(SearchDocument)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.accept(IBinaryType,PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.accept(ICompilationUnit,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.accept(ISourceType[],PackageBinding,AccessRestriction)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexDocument()",2,5,8
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexResolvedDocument()",4,15,16
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.purgeMethodStatements(TypeDeclaration)",1,3,7
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.reduceParseTree(CompilationUnitDeclaration)",1,2,3
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.resolveDocument()",1,3,3
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.SourceIndexerRequestor(SourceIndexer)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptAnnotationTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptAnnotationTypeReference(char[][],int,int)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptConstructorReference(char[],int,int)",1,4,4
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptFieldReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptImport(int,int,int,int,char[][],boolean,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptLineSeparatorPositions(int[])",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptMethodReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptPackage(ImportReference)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptProblem(CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptTypeReference(char[][],int,int)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptUnknownReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptUnknownReference(char[][],int,int)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.addDefaultConstructorIfNecessary(TypeInfo)",3,4,7
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enclosingTypeNames()",2,1,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterAnnotationType(TypeInfo)",1,2,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterClass(TypeInfo)",1,7,8
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterConstructor(MethodInfo)",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterEnum(TypeInfo)",1,5,5
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterField(FieldInfo)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterInitializer(int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterInterface(TypeInfo)",1,6,6
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterMethod(MethodInfo)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.enterType(TypeInfo)",2,2,5
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitCompilationUnit(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitConstructor(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitField(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitInitializer(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitMethod(int,Expression)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.exitType(int)",1,1,1
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.getMoreExtraFlags(int)",1,1,2
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.getSimpleName(char[])",6,3,9
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.popTypeName()",1,4,4
"org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.pushTypeName(char[])",1,2,2
"org.eclipse.jdt.internal.core.search.matching.AndLocator.AndLocator(AndPattern)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.AndLocator.initializePolymorphicSearch(MatchLocator)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(ASTNode,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(Annotation,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(ConstructorDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(Expression,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(FieldDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(LambdaExpression,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(LocalDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(MemberValuePair,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(MessageSend,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(MethodDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(Reference,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(ReferenceExpression,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(TypeDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(TypeParameter,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.match(TypeReference,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.matchContainer()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.AndLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",3,2,5
"org.eclipse.jdt.internal.core.search.matching.AndLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.AndLocator.matchReportReference(ASTNode,IJavaElement,IJavaElement,IJavaElement[],Binding,int,MatchLocator)",4,2,6
"org.eclipse.jdt.internal.core.search.matching.AndLocator.recordResolution(QualifiedTypeReference,TypeBinding)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.AndLocator.resolveLevel(ASTNode)",3,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.resolveLevel(Binding)",3,2,4
"org.eclipse.jdt.internal.core.search.matching.AndLocator.setFlavors(int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.AndPattern.AndPattern(SearchPattern,SearchPattern)",1,3,8
"org.eclipse.jdt.internal.core.search.matching.AndPattern.combinedMatchRule(int,int)",1,4,4
"org.eclipse.jdt.internal.core.search.matching.AndPattern.currentPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.AndPattern.hasNextQuery()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.AndPattern.resetQuery()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkAnnotation(IBinaryAnnotation,TypeReferencePattern)",6,4,6
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkAnnotationTypeReference(char[],TypeReferencePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkAnnotations(TypeReferencePattern,IBinaryAnnotation[],long)",5,4,6
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkDeclaringType(IBinaryType,char[],char[],boolean,boolean)",3,1,4
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkParameters(char[],char[][],char[][],boolean,boolean)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkStandardAnnotations(long,TypeReferencePattern)",20,13,23
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.checkTypeName(char[],char[],char[],boolean,boolean)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.convertClassFileFormat(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.locateMatches(MatchLocator,ClassFile,IBinaryType)",18,28,45
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchAnnotations(SearchPattern,MatchLocator,ClassFile,IBinaryType)",2,11,13
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchBinary(SearchPattern,Object,IBinaryType)",9,8,9
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchConstructor(ConstructorPattern,Object,IBinaryType)",7,2,7
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchField(FieldPattern,Object,IBinaryType)",5,1,5
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchMethod(MethodPattern,Object,IBinaryType)",9,4,13
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchSuperTypeReference(SuperTypeReferencePattern,Object,IBinaryType)",9,6,9
"org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.matchTypeDeclaration(TypeDeclarationPattern,Object,IBinaryType)",13,5,20
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.ClasspathSourceDirectory(IContainer,char[][],char[][])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.debugPathString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.directoryTable(String)",4,11,14
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.equals(Object)",3,1,3
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.findClass(String,String,String)",3,3,4
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.getProjectRelativePath()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.hashCode()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.isPackage(String)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.reset()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorDeclarationPattern.ConstructorDeclarationPattern(char[],char[],int)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.ConstructorDeclarationPattern.ConstructorDeclarationPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorDeclarationPattern.decodeIndexKey(char[])",1,7,10
"org.eclipse.jdt.internal.core.search.matching.ConstructorDeclarationPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorDeclarationPattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorDeclarationPattern.matchesDecodedKey(SearchPattern)",3,3,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorDeclarationPattern.removeInternalFlags()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.ConstructorLocator(ConstructorPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.fineGrain()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(ASTNode,MatchingNodeSet)",4,1,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(ConstructorDeclaration,MatchingNodeSet)",2,3,6
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(Expression,MatchingNodeSet)",5,2,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(FieldDeclaration,MatchingNodeSet)",6,3,10
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(MessageSend,MatchingNodeSet)",4,3,6
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(ReferenceExpression,MatchingNodeSet)",2,2,4
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.match(TypeDeclaration,MatchingNodeSet)",3,1,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchConstructor(MethodBinding)",9,3,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchContainer()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchLevelForDeclarations(ConstructorDeclaration)",6,2,10
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchLevelForReferences(ConstructorDeclaration)",4,1,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchParametersCount(ASTNode,Expression[])",3,1,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",9,27,32
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.newDeclarationMatch(ASTNode,IJavaElement,Binding,int,int,MatchLocator)",2,8,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(ASTNode)",9,9,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(AllocationExpression)",2,2,3
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(Binding)",3,3,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(ConstructorDeclaration,boolean)",6,5,11
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(FieldDeclaration)",4,3,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.resolveLevel(TypeDeclaration)",4,5,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.ConstructorPattern(char[],char[],String,char[][],char[][],String[],char[][],int,int)",1,8,10
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.ConstructorPattern(char[],char[],char[][],char[][],String[],IMethod,int,int)",1,7,9
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.ConstructorPattern(char[],char[],char[][],char[][],int,int)",2,10,15
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.ConstructorPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.createDeclarationIndexKey(char[],int,char[],char[][],char[][],int,char[],int,int)",1,17,27
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.createDefaultDeclarationIndexKey(char[],char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.createIndexKey(char[],int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.decodeExtraFlags(int)",1,1,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.decodeIndexKey(char[])",1,1,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.decodeModifers(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.encodeExtraFlags(int)",1,1,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.getIndexCategories()",3,1,4
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.getTypeErasure(char[])",3,2,7
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.hasConstructorArguments()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.hasConstructorParameters()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.matchesDecodedKey(SearchPattern)",1,3,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.mustResolve()",5,1,5
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.print(StringBuffer)",1,10,11
"org.eclipse.jdt.internal.core.search.matching.ConstructorPattern.queryIn(Index)",2,6,15
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfAccessedFieldsPattern.DeclarationOfAccessedFieldsPattern(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedMethodsPattern.DeclarationOfReferencedMethodsPattern(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedTypesPattern.DeclarationOfReferencedTypesPattern(IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.FieldLocator(FieldPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.fineGrain()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.match(ASTNode,MatchingNodeSet)",1,6,8
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.match(FieldDeclaration,MatchingNodeSet)",2,6,13
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchContainer()",2,1,3
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchField(FieldBinding,boolean)",7,2,12
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReference(Reference,MatchingNodeSet,boolean)",3,3,4
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReportReference(ASTNode,IJavaElement,IJavaElement,IJavaElement[],Binding,int,MatchLocator)",5,28,35
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.reportDeclaration(FieldBinding,MatchLocator,SimpleSet)",8,7,12
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevel(ASTNode)",5,5,6
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevel(Binding)",3,1,3
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevel(NameReference)",8,7,10
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.resolveLevelForType(TypeBinding)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.FieldLocator.updateMatch(ParameterizedTypeBinding,char[][][],MatchLocator)",2,2,3
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.FieldPattern(char[],char[],char[],char[],char[],String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.FieldPattern(char[],char[],char[],char[],char[],int,int)",1,5,6
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.createIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.getIndexCategories()",3,1,6
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.getIndexKey()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.matchesDecodedKey(SearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.mustResolve()",3,1,5
"org.eclipse.jdt.internal.core.search.matching.FieldPattern.print(StringBuffer)",1,10,11
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.ImportMatchLocatorParser(ProblemReporter,MatchLocator)",1,1,2
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeSingleStaticImportDeclarationName()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeSingleTypeImportDeclarationName()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeStaticImportOnDemandDeclarationName()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser.consumeTypeImportOnDemandDeclarationName()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.IntersectingPattern.IntersectingPattern(int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.IntersectingPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",7,12,16
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.JavaSearchNameEnvironment(IJavaProject,ICompilationUnit[])",1,5,7
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.addProjectClassPath(JavaProject)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.cleanup()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.computeClasspathLocations(JavaProject)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findClass(String,char[])",6,10,13
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findType(char[],char[][])",2,2,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findType(char[][])",2,2,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.isPackage(String)",3,2,3
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.isPackage(char[][],char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.mapToClassPathLocation(JavaModelManager,PackageFragmentRoot)",1,4,5
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.JavaSearchPattern(int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.extractMethodArguments(IMethod)",6,8,9
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.getFineGrainFlagString(int)",3,5,24
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.getMatchMode()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.getTypeArguments()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.hasSignatures()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.hasTypeArguments()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.hasTypeParameters()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.isCamelCase()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.isCaseSensitive()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.isEquivalentMatch()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.isErasureMatch()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.matchDifferentTypeSuffixes(int,int)",13,7,13
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.print(StringBuffer)",2,8,13
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.setTypeArguments(char[][][])",4,1,5
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.storeTypeSignaturesAndArguments(IType)",2,12,13
"org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.LocalVariableLocator(LocalVariablePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.getLocalVariable()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.match(LocalDeclaration,MatchingNodeSet)",1,5,12
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.matchContainer()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.matchLocalVariable(LocalVariableBinding,boolean)",3,2,5
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",4,5,5
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.resolveLevel(ASTNode)",4,4,5
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.resolveLevel(Binding)",3,1,3
"org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator.resolveLevel(NameReference)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern.LocalVariablePattern(LocalVariable,int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",6,5,7
"org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern.print(StringBuffer)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.MatchLocator(SearchPattern,SearchRequestor,IJavaSearchScope,IProgressMonitor)",1,8,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WorkingCopyDocument.WorkingCopyDocument(ICompilationUnit,SearchParticipant)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WorkingCopyDocument.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.WrappedCoreException.WrappedCoreException(CoreException)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.accept(IBinaryType,PackageBinding,AccessRestriction)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.accept(ICompilationUnit,AccessRestriction)",2,3,5
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.accept(ISourceType[],PackageBinding,AccessRestriction)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.addWorkingCopies(SearchPattern,SearchDocument[],ICompilationUnit[],SearchParticipant)",3,7,10
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.basicParser()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.cacheBinaryType(IType,IBinaryType)",3,4,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.classFileReader(IType)",3,4,7
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.computeSuperTypeNames(IType)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createBinaryMethodHandle(IType,char[],char[][])",7,9,12
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandle(AbstractMethodDeclaration,IJavaElement)",9,14,21
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandle(AbstractVariableDeclaration,IJavaElement)",3,3,5
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandle(Annotation,IAnnotatable)",8,5,11
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandle(FieldDeclaration,TypeDeclaration,IJavaElement)",7,4,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandle(LambdaExpression,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHandles(FieldDeclaration[],TypeDeclaration,IJavaElement)",1,3,5
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createHierarchyResolver(IType,PossibleMatch[])",5,6,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createImportHandle(ImportReference)",3,3,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createMethodHandle(IType,String,String[])",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createPackageDeclarationHandle(CompilationUnitDeclaration)",3,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.createTypeHandle(String)",3,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.encloses(IJavaElement)",3,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.filterEnum(SearchMatch)",6,5,7
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.findIndexMatches(SearchPattern,Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.findLastTypeArgumentInfo(TypeReference)",3,1,12
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getBinaryInfo(ClassFile,IResource)",3,4,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getFocusType()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getInverseFullName(char[],char[])",1,3,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMaxResult(int[][])",5,4,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBinding(MethodPattern)",8,10,11
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBinding0(MethodPattern)",20,16,29
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBodies(CompilationUnitDeclaration,MatchingNodeSet)",2,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMostApplicableMethod(List<MethodBinding>,MethodPattern)",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getParticipant()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getProjectOrJar(IJavaElement)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getResultMap(Map<Integer, List<String>>,Map<Integer, List<String>>)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getSplitNames(MethodBinding)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getSplitNames(char[][],char[][])",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.getType(Object,char[])",4,6,11
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.hasAlreadyDefinedType(CompilationUnitDeclaration)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.initialize(JavaProject,int)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(JavaProject,PossibleMatchSet,int)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(JavaProject,PossibleMatch[],int,int)",9,15,27
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(SearchDocument[])",6,27,33
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locatePackageDeclarations(SearchParticipant,IJavaProject[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.locatePackageDeclarations(SearchPattern,SearchParticipant,IJavaProject[])",15,17,26
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.lookupType(ReferenceBinding)",10,8,17
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.mapParameter(List<String>,List<String>)",3,2,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newDeclarationMatch(IJavaElement,Binding,int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newDeclarationMatch(IJavaElement,Binding,int,int,int,SearchParticipant,IResource)",9,8,12
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newFieldReferenceMatch(IJavaElement,IJavaElement,Binding,int,int,int,ASTNode)",1,6,10
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newLocalVariableReferenceMatch(IJavaElement,int,int,int,ASTNode)",1,5,9
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newMethodReferenceMatch(IJavaElement,Binding,int,int,int,boolean,boolean,ASTNode)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newPackageReferenceMatch(IJavaElement,int,int,int,ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newTypeParameterReferenceMatch(IJavaElement,int,int,int,ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newTypeReferenceMatch(IJavaElement,Binding,int,ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.newTypeReferenceMatch(IJavaElement,Binding,int,int,int,ASTNode)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.parseAndBuildBindings(PossibleMatch,boolean)",5,8,13
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(PossibleMatch,boolean)",4,12,17
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.projectOrJarFocus(SearchPattern)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.purgeMethodStatements(TypeDeclaration,boolean)",1,7,13
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reduceParseTree(CompilationUnitDeclaration)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.report(SearchMatch)",3,25,29
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateEnumConstructorReference(SearchMatch,FieldDeclaration,AllocationExpression)",2,4,10
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateFieldReference(SearchMatch[],QualifiedNameReference)",5,7,17
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateParameterizedMethodReference(SearchMatch,ASTNode,TypeReference[])",8,7,13
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateParameterizedTypeReference(SearchMatch,TypeReference,int,TypeReference[])",10,9,16
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportAccurateTypeReference(SearchMatch,ASTNode,char[])",6,5,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportBinaryMemberDeclaration(IResource,IMember,Binding,IBinaryType,int)",1,6,7
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(AbstractMethodDeclaration,TypeDeclaration,IJavaElement,int,boolean,MatchingNodeSet)",6,30,34
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(Annotation[],IJavaElement,IJavaElement[],Binding,MatchingNodeSet,boolean,boolean)",2,18,24
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(Annotation[][],IJavaElement,Binding,MatchingNodeSet,boolean)",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(CompilationUnitDeclaration,boolean)",10,22,33
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(FieldDeclaration,FieldDeclaration[],TypeDeclaration,IJavaElement,int,boolean,MatchingNodeSet)",6,30,42
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(LambdaExpression,IJavaElement,int,MatchingNodeSet,boolean)",1,14,16
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(TypeDeclaration,IJavaElement,int,MatchingNodeSet,int)",18,43,63
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(TypeParameter[],IJavaElement,IJavaElement,Binding,MatchingNodeSet)",2,29,30
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatchingSuper(TypeReference,IJavaElement,Binding,MatchingNodeSet,boolean)",1,9,11
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.setFocus(SearchPattern,IJavaElement)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.typeInHierarchy(ReferenceBinding)",6,3,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocator.workingCopiesThatCanSeeFocus(ICompilationUnit[],SearchPattern,SearchParticipant)",2,4,5
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassAndMethodDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(AnnotationMethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.ClassButNoMethodDeclarationVisitor.visit(TypeDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.MatchLocatorParser(ProblemReporter,MatchLocator)",1,1,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.MethodButNoClassDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.NoClassNoMethodDeclarationVisitor.visit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.augmentTypeWithAdditionalDimensions(TypeReference,int,Annotation[][],boolean)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.checkComment()",1,26,30
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.classInstanceCreation(boolean)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeAdditionalBound()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeAssignment()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeCastExpressionLL1()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeCastExpressionLL1WithBounds()",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeCastExpressionWithGenericsArray()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeCastExpressionWithNameArray()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeCastExpressionWithPrimitiveType()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeCastExpressionWithQualifiedGenericsArray()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeCatchFormalParameter()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeClassHeaderExtends()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeClassInstanceCreationExpressionWithTypeArguments()",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeEnterAnonymousClassBody(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeEnterVariable()",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeExplicitConstructorInvocation(int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeExplicitConstructorInvocationWithTypeArguments(int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeFieldAccess(boolean)",1,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeFormalParameter(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeInstanceOfExpression()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeInstanceOfExpressionWithName()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeInterfaceType()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeLambdaExpression()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeLocalVariableDeclaration()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMarkerAnnotation(boolean)",1,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMemberValuePair()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodHeaderName(boolean)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodHeaderRightParen()",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodHeaderThrowsClause()",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationName()",1,5,5
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationNameWithTypeArguments()",1,5,5
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationPrimary()",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationPrimaryWithTypeArguments()",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationSuper()",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeMethodInvocationSuperWithTypeArguments()",1,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeNormalAnnotation(boolean)",1,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeOnlyTypeArguments()",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumePrimaryNoNewArrayWithName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeReferenceExpression(ReferenceExpression)",1,9,10
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeSingleMemberAnnotation(boolean)",1,2,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeStatementCatch()",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeArgumentList1()",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeArgumentList2()",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeArgumentList3()",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeArgumentReferenceType1()",1,6,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeArgumentReferenceType2()",1,6,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeArguments()",1,4,4
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeElidedLambdaParameter(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeParameter1WithExtends()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeParameter1WithExtendsAndBounds()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeParameterHeader()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeParameterWithExtends()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeTypeParameterWithExtendsAndBounds()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeUnaryExpression(int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeWildcardBounds1Extends()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeWildcardBounds1Super()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeWildcardBounds2Extends()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeWildcardBounds2Super()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeWildcardBounds3Extends()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeWildcardBounds3Super()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeWildcardBoundsExtends()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeWildcardBoundsSuper()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.createParser(ProblemReporter,MatchLocator)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getTypeReference(int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getUnspecifiedReference(boolean)",1,6,6
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getUnspecifiedReferenceOptimized()",1,7,8
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(CompilationUnitDeclaration)",2,2,3
"org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(TypeDeclaration,CompilationUnitDeclaration)",1,12,12
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.MatchingNodeSet(boolean)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addMatch(ASTNode,int)",2,5,8
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addPossibleMatch(ASTNode)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addTrustedMatch(ASTNode,Integer)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.addTrustedMatch(ASTNode,boolean)",1,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.hasPossibleNodes(int,int)",5,1,9
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.matchingNodes(int,int)",2,3,7
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.removePossibleMatch(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.removeTrustedMatch(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.toString()",6,4,8
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.MemberDeclarationVisitor(IJavaElement,ASTNode[],MatchingNodeSet,MatchLocator,boolean)",1,1,3
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.endVisit(Argument,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.endVisit(LocalDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.endVisit(MarkerAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.endVisit(NormalAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.endVisit(SingleMemberAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.getInTypeOccurrenceCountForBinaryAnonymousType(TypeDeclaration,char[],IJavaElement,int)",1,3,5
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.getLocalElement(int)",3,1,3
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.getOtherElements(int)",2,6,7
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.matchNode(ASTNode)",5,1,5
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.storeHandle(int)",2,16,21
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(Argument,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(LambdaExpression,BlockScope)",2,5,6
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(LocalDeclaration,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(MarkerAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(NormalAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(QualifiedNameReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(QualifiedTypeReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(SingleMemberAnnotation,BlockScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(SingleNameReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(SingleTypeReference,BlockScope)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,3,6
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.MethodLocator(MethodPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.clear()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.fineGrain()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.getMatchingSuper(ReferenceBinding)",9,4,10
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.getMethodBinding(ReferenceBinding,char[],TypeBinding[])",5,4,5
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.initializePolymorphicSearch(MatchLocator)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.isTypeInSuperDeclaringTypeNames(char[][])",4,2,4
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.isVirtualInvoke(MethodBinding,MessageSend)",1,6,6
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(ASTNode,MatchingNodeSet)",1,6,8
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(Annotation,MatchingNodeSet)",5,3,8
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(LambdaExpression,MatchingNodeSet)",3,2,4
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(MemberValuePair,MatchingNodeSet)",3,1,4
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(MessageSend,MatchingNodeSet)",5,1,9
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(MethodDeclaration,MatchingNodeSet)",10,6,15
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.match(ReferenceExpression,MatchingNodeSet)",4,2,6
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchContainer()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchMethod(MethodBinding,boolean)",18,18,29
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchOverriddenMethod(ReferenceBinding,MethodBinding,MethodBinding)",19,12,21
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference(ASTNode,IJavaElement,IJavaElement,IJavaElement[],Binding,int,MatchLocator)",8,11,19
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference(MessageSend,MatchLocator,int,MethodBinding)",3,26,29
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.methodParametersEqualsPattern(MethodBinding)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.newDeclarationMatch(ASTNode,IJavaElement,Binding,int,int,MatchLocator)",9,9,9
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.reportDeclaration(MethodBinding,MatchLocator,SimpleSet)",7,11,15
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(ASTNode)",9,9,9
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(Binding)",6,7,16
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(MessageSend)",9,9,22
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(ReferenceExpression)",5,4,9
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevelAsSubtype(char[],char[],ReferenceBinding,char[],TypeBinding[],char[],boolean)",12,16,23
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevelAsSuperInvocation(ReferenceBinding,TypeBinding[],char[][][],boolean)",13,8,13
"org.eclipse.jdt.internal.core.search.matching.MethodLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.MethodPattern(char[],char[],char[],String,char[],char[],String,char[][],char[][],String[],char[][],int,int)",1,6,7
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.MethodPattern(char[],char[],char[],char[],char[],String,char[][],char[][],String[],IMethod,int,int)",1,8,10
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.MethodPattern(char[],char[],char[],char[],char[],char[][],char[][],IType,int,int)",2,12,16
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.MethodPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.createIndexKey(char[],int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.decodeIndexKey(char[])",3,3,4
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.getIndexCategories()",3,1,4
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.hasMethodArguments()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.hasMethodParameters()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.isPolymorphicSearch()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.matchesDecodedKey(SearchPattern)",1,2,4
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.mustResolve()",6,1,8
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.print(StringBuffer)",1,15,16
"org.eclipse.jdt.internal.core.search.matching.MethodPattern.queryIn(Index)",2,5,14
"org.eclipse.jdt.internal.core.search.matching.MultiTypeDeclarationPattern.MultiTypeDeclarationPattern(char[][],char[][],char,int)",1,6,8
"org.eclipse.jdt.internal.core.search.matching.MultiTypeDeclarationPattern.MultiTypeDeclarationPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MultiTypeDeclarationPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MultiTypeDeclarationPattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.MultiTypeDeclarationPattern.matchesDecodedKey(SearchPattern)",12,6,14
"org.eclipse.jdt.internal.core.search.matching.MultiTypeDeclarationPattern.print(StringBuffer)",2,8,15
"org.eclipse.jdt.internal.core.search.matching.MultiTypeDeclarationPattern.queryIn(Index)",7,6,15
"org.eclipse.jdt.internal.core.search.matching.OrLocator.OrLocator(OrPattern)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.initializePolymorphicSearch(MatchLocator)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(ASTNode,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(Annotation,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(ConstructorDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(Expression,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(FieldDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(LambdaExpression,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(LocalDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(MemberValuePair,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(MessageSend,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(MethodDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(Reference,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(ReferenceExpression,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(TypeDeclaration,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(TypeParameter,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.match(TypeReference,MatchingNodeSet)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchContainer()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",11,8,13
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",4,3,5
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.OrLocator.matchReportReference(ASTNode,IJavaElement,IJavaElement,IJavaElement[],Binding,int,MatchLocator)",4,4,6
"org.eclipse.jdt.internal.core.search.matching.OrLocator.newDeclarationMatch(ASTNode,IJavaElement,Binding,int,int,MatchLocator)",5,4,6
"org.eclipse.jdt.internal.core.search.matching.OrLocator.recordResolution(QualifiedTypeReference,TypeBinding)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrLocator.resolveLevel(ASTNode)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.resolveLevel(Binding)",4,2,4
"org.eclipse.jdt.internal.core.search.matching.OrLocator.setFlavors(int)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrPattern.OrPattern(SearchPattern,SearchPattern)",1,3,9
"org.eclipse.jdt.internal.core.search.matching.OrPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.OrPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.OrPattern.hasPackageDeclaration()",3,1,3
"org.eclipse.jdt.internal.core.search.matching.OrPattern.hasSignatures()",3,2,4
"org.eclipse.jdt.internal.core.search.matching.OrPattern.isErasureMatch()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.OrPattern.isPolymorphicSearch()",3,2,3
"org.eclipse.jdt.internal.core.search.matching.OrPattern.toString()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator.PackageDeclarationLocator(PackageDeclarationPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator.matchContainer()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern.PackageDeclarationPattern(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern.print(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern.queryIn(Index)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.PackageReferenceLocator(PackageReferencePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.isDeclaringPackageFragment(IPackageFragment,ReferenceBinding)",5,5,9
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(ASTNode,MatchingNodeSet)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(Annotation,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(Reference,MatchingNodeSet)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.match(TypeReference,MatchingNodeSet)",3,2,3
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchLevel(ImportReference)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",8,5,8
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchLevelForTokens(char[][])",8,4,14
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",1,4,7
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.matchReportReference(ASTNode,IJavaElement,IJavaElement,IJavaElement[],Binding,int,MatchLocator)",7,11,27
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.resolveLevel(ASTNode)",7,7,7
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.resolveLevel(Binding)",10,7,14
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.resolveLevel(QualifiedNameReference)",9,5,14
"org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.PackageReferencePattern(char[],int)",1,3,5
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.PackageReferencePattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.getIndexKey()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.hasNextQuery()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.matchesDecodedKey(SearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.print(StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern.resetQuery()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.PatternLocator(SearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.clear()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.fineGrain()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.getQualifiedPattern(char[],char[])",4,3,4
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.getQualifiedSourceName(TypeBinding)",4,5,6
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.getTypeNameBinding(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.initializePolymorphicSearch(MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(ASTNode,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(Annotation,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(ConstructorDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(Expression,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(FieldDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(LambdaExpression,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(LocalDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(MemberValuePair,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(MessageSend,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(MethodDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(Reference,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(ReferenceExpression,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(TypeDeclaration,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(TypeParameter,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.match(TypeReference,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchContainer()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchLevel(ImportReference)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchNameValue(char[],char[])",13,8,25
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",2,3,7
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportReference(ASTNode,IJavaElement,IJavaElement,IJavaElement[],Binding,int,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchesName(char[],char[])",3,1,3
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchesTypeReference(char[],TypeReference)",3,2,5
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.newDeclarationMatch(ASTNode,IJavaElement,Binding,int,int,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.patternLocator(SearchPattern)",13,2,13
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.qualifiedPattern(char[],char[])",3,3,4
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.qualifiedSourceName(TypeBinding)",3,5,5
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.recordResolution(QualifiedTypeReference,TypeBinding)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevel(ASTNode)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevel(Binding)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevelForType(char[],TypeBinding)",4,3,7
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevelForType(char[],char[],TypeBinding)",11,11,26
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.resolveLevelForType(char[],char[],char[][][],int,TypeBinding)",35,32,66
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.setFlavors(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.updateMatch(ParameterizedTypeBinding,char[][][],MatchLocator)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.updateMatch(ParameterizedTypeBinding,char[][][],boolean,int,MatchLocator)",7,13,19
"org.eclipse.jdt.internal.core.search.matching.PatternLocator.updateMatch(TypeBinding[],MatchLocator,char[][],boolean)",29,31,63
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.PossibleMatch(MatchLocator,IResource,Openable,SearchDocument,boolean)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.cleanUp()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.equals(Object)",3,2,3
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getContents()",4,4,7
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getFileName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getMainTypeName()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getPackageName()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName()",4,5,5
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getSimilarMatch()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getSourceFileName()",2,3,5
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.hasSimilarMatch()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.hashCode()",2,3,3
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.ignoreOptionalProblems()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.setSimilarMatch(PossibleMatch)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.PossibleMatch.toString()",1,2,2
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet.add(PossibleMatch)",3,4,4
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet.getPossibleMatches(IPackageFragmentRoot[])",1,4,4
"org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet.reset()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.QualifiedTypeDeclarationPattern(char[],char[],char,int)",1,3,5
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.QualifiedTypeDeclarationPattern(char[],int,char[],char,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.QualifiedTypeDeclarationPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.decodeIndexKey(char[])",1,4,6
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.matchesDecodedKey(SearchPattern)",3,5,7
"org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern.print(StringBuffer)",2,4,11
"org.eclipse.jdt.internal.core.search.matching.SecondaryTypeDeclarationPattern.SecondaryTypeDeclarationPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SecondaryTypeDeclarationPattern.SecondaryTypeDeclarationPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SecondaryTypeDeclarationPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SecondaryTypeDeclarationPattern.print(StringBuffer)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SecondaryTypeDeclarationPattern.queryIn(Index)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.SuperTypeNamesCollector(SearchPattern,char[],char[],MatchLocator,IType,IProgressMonitor)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(ConstructorDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(FieldDeclaration,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(Initializer,MethodScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(MethodDeclaration,ClassScope)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(TypeDeclaration,BlockScope)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(TypeDeclaration,ClassScope)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.TypeDeclarationVisitor.visit(TypeDeclaration,CompilationUnitScope)",1,2,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.addIfSamePackage(char[][],char[][])",6,4,7
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.addToResult(char[][])",3,3,4
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.buildBindings(ICompilationUnit,boolean)",1,5,5
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.collect()",5,14,20
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.collectSuperTypeNames(ReferenceBinding,char[][])",1,5,7
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.getPathsOfDeclaringType()",2,2,6
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.getSamePackageSuperTypeNames()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.matches(ReferenceBinding)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector.matches(char[][])",5,3,6
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.SuperTypeReferenceLocator(SuperTypeReferencePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.match(LambdaExpression,MatchingNodeSet)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.match(TypeReference,MatchingNodeSet)",4,3,7
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.matchContainer()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",4,4,6
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.resolveLevel(ASTNode)",4,3,7
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.resolveLevel(Binding)",9,4,9
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.SuperTypeReferencePattern(char[],char[],int,char,int)",1,1,2
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.SuperTypeReferencePattern(char[],char[],int,int)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.SuperTypeReferencePattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.createIndexKey(int,char[],char[],char[][],char[][],char,char[],char)",1,14,22
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.decodeIndexKey(char[])",1,7,9
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.matchesDecodedKey(SearchPattern)",5,2,7
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.print(StringBuffer)",2,3,5
"org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.queryIn(Index)",2,3,7
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.TypeDeclarationLocator(TypeDeclarationPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.match(TypeDeclaration,MatchingNodeSet)",2,3,4
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.resolveLevel(ASTNode)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.resolveLevel(Binding)",12,9,25
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.resolveLevelForType(char[],char[],char[],TypeBinding)",5,4,5
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.PackageNameSet.PackageNameSet(int)",1,1,2
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.PackageNameSet.add(char[])",3,3,5
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.PackageNameSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.TypeDeclarationPattern(char[],char[][],char[],char,int)",1,5,9
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.TypeDeclarationPattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.createIndexKey(int,char[],char[],char[][],boolean)",1,5,14
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.decodeIndexKey(char[])",1,4,6
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.decodeModifiers()",2,2,5
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.matchesDecodedKey(SearchPattern)",9,5,12
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.print(StringBuffer)",2,7,14
"org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.queryIn(Index)",3,8,13
"org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator.TypeParameterLocator(TypeParameterPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator.match(TypeParameter,MatchingNodeSet)",3,3,4
"org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator.match(TypeReference,MatchingNodeSet)",4,4,5
"org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator.matchContainer()",2,1,2
"org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator.matchTypeParameter(TypeVariableBinding,boolean)",11,9,15
"org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator.resolveLevel(ASTNode)",5,5,5
"org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator.resolveLevel(Binding)",3,1,3
"org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeParameterPattern.TypeParameterPattern(boolean,boolean,ITypeParameter,int)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.TypeParameterPattern.findIndexMatches(Index,IndexQueryRequestor,SearchParticipant,IJavaSearchScope,IProgressMonitor)",6,5,7
"org.eclipse.jdt.internal.core.search.matching.TypeParameterPattern.print(StringBuffer)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.TypeReferenceLocator(TypeReferencePattern)",1,1,2
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.findElement(IJavaElement,int)",2,3,4
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.fineGrain()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(ASTNode,MatchingNodeSet)",2,1,2
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(Annotation,MatchingNodeSet)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(Reference,MatchingNodeSet)",7,6,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(TypeReference,MatchingNodeSet)",6,6,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchLevel(ImportReference)",17,8,29
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchLevelAndReportImportRef(ImportReference,Binding,MatchLocator)",8,6,10
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportImportRef(ImportReference,Binding,IJavaElement,int,MatchLocator)",7,17,24
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(ASTNode,IJavaElement,Binding,int,MatchLocator)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(ASTNode,IJavaElement,IJavaElement,IJavaElement[],Binding,int,MatchLocator)",6,7,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(ArrayTypeReference,IJavaElement,Binding,int,MatchLocator)",4,5,5
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(Expression,int,TypeBinding,MatchLocator)",10,17,22
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(QualifiedNameReference,IJavaElement,Binding,int,MatchLocator)",5,8,19
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(QualifiedTypeReference,IJavaElement,Binding,int,MatchLocator)",4,7,11
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.recordResolution(QualifiedTypeReference,TypeBinding)",1,1,2
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.referenceType()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclaration(ASTNode,IJavaElement,MatchLocator,SimpleSet)",10,7,19
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclaration(ReferenceBinding,int,MatchLocator,SimpleSet)",2,8,11
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(ASTNode)",3,3,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(Binding)",3,2,5
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(NameReference)",11,8,19
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevel(TypeReference)",2,3,4
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevelForType(TypeBinding)",11,9,24
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevelForTypeOrEnclosingTypes(char[],char[],TypeBinding)",5,3,5
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.resolveLevelForTypeOrQualifyingTypes(TypeReference,TypeBinding)",5,4,6
"org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],IType,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],IType,int,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],String,char,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],String,int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],String,int,char,int)",1,3,4
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(char[],char[],int)",1,7,8
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.TypeReferencePattern(int)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.decodeIndexKey(char[])",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.getBlankPattern()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.getIndexCategories()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.getIndexKey()",3,1,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.hasNextQuery()",2,1,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchesDecodedKey(SearchPattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.print(StringBuffer)",1,3,3
"org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.resetQuery()",1,1,2
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.VariableLocator(VariablePattern)",1,1,1
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.match(Expression,MatchingNodeSet)",5,8,12
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.match(Reference,MatchingNodeSet)",1,2,3
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.matchReference(Reference,MatchingNodeSet,boolean)",9,9,10
"org.eclipse.jdt.internal.core.search.matching.VariableLocator.toString()",1,1,1
"org.eclipse.jdt.internal.core.search.matching.VariablePattern.VariablePattern(int,char[],int,int)",2,3,10
"org.eclipse.jdt.internal.core.search.matching.VariablePattern.mustResolve()",1,1,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.activateProcessing()",1,1,1
"org.eclipse.jdt.internal.core.search.processing.JobManager.awaitingJobsCount()",1,1,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.currentJob()",2,1,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.disable()",1,2,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.discardJobs(String)",1,13,15
"org.eclipse.jdt.internal.core.search.processing.JobManager.enable()",1,2,2
"org.eclipse.jdt.internal.core.search.processing.JobManager.isJobWaiting(IJob)",3,2,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.moveToNextJob()",1,1,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.notifyIdle(long)",1,1,1
"org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob(IJob,int,IProgressMonitor)",5,26,35
"org.eclipse.jdt.internal.core.search.processing.JobManager.request(IJob)",1,4,6
"org.eclipse.jdt.internal.core.search.processing.JobManager.reset()",1,3,3
"org.eclipse.jdt.internal.core.search.processing.JobManager.run()",4,16,20
"org.eclipse.jdt.internal.core.search.processing.JobManager.shutdown()",1,4,5
"org.eclipse.jdt.internal.core.search.processing.JobManager.toString()",1,2,3
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.ASTNodeFinder(CompilationUnitDeclaration)",1,1,1
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findField(IField)",5,3,5
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findInitializer(IInitializer)",5,1,6
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findMethod(IMethod)",7,6,9
"org.eclipse.jdt.internal.core.util.ASTNodeFinder.findType(IType)",13,8,22
"org.eclipse.jdt.internal.core.util.Annotation.Annotation(byte[],IConstantPool,int)",3,4,5
"org.eclipse.jdt.internal.core.util.Annotation.getComponents()",1,1,1
"org.eclipse.jdt.internal.core.util.Annotation.getComponentsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.Annotation.getTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.Annotation.getTypeName()",1,1,1
"org.eclipse.jdt.internal.core.util.Annotation.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.AnnotationComponent(byte[],IConstantPool,int)",3,2,3
"org.eclipse.jdt.internal.core.util.AnnotationComponent.getComponentName()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.getComponentNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.getComponentValue()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponent.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.AnnotationComponentValue(byte[],IConstantPool,int)",10,9,17
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getAnnotationComponentValues()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getAnnotationValue()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getClassInfo()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getClassInfoIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getConstantValue()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getConstantValueIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantName()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantTypeName()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getEnumConstantTypeNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getTag()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.getValuesNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationComponentValue.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute.AnnotationDefaultAttribute(byte[],IConstantPool,int)",1,1,1
"org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute.getMemberValue()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.BindingKeyParser(BindingKeyParser)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.BindingKeyParser(String)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.Scanner(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.getTokenSource()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtAnnotationStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtCapture18Start()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtCaptureStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtFieldOrMethodStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtLocalVariableStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtMemberTypeStart()",1,1,4
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtParametersEnd()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtParametersStart()",1,1,4
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtRawTypeEnd()",1,1,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtSecondaryTypeStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtThrownStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtTypeArgumentStart()",1,2,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtTypeParameterStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtTypeVariableStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtTypeWithCaptureStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.isAtWildcardStart()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.nextToken()",13,4,47
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.skipCapture18Delim()",1,1,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.skipMethodSignature()",5,2,7
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.skipParametersEnd()",1,1,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.skipParametersStart()",1,1,4
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.skipRank()",1,2,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.skipRankEnd()",1,1,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.skipRankStart()",1,1,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.skipThrownStart()",1,1,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.skipTypeEnd()",1,1,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.Scanner.toString()",2,5,17
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeAnnotation()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeArrayDimension(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeBaseType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeCapture(int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeCapture18ID(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeException()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeField(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeFullyQualifiedName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeKey()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeLocalType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeLocalVar(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeMemberType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeMethod(char[],char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeModifiers(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeNonGenericType()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumePackage(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeParameterizedGenericMethod()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeParameterizedType(char[],boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeParser(BindingKeyParser)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeRawType()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeScope(int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeSecondaryType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeTopLevelType()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeType()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeTypeParameter(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeTypeVariable(char[],char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeTypeWithCapture()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeWildCard(int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.consumeWildcardRank(int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.getKey()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.hasTypeName()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.malformedKey()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.newParser()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parse()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parse(boolean)",6,18,21
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseAnnotation()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseCapture()",3,2,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseCapture18()",2,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseCaptureWildcard()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseField()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseFullyQualifiedName()",8,8,15
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseGenericType()",3,4,4
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseInnerType()",3,6,8
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseLocalVariable()",8,8,8
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseMethod()",1,3,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseParameterizedMethod()",1,3,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseParameterizedType(char[],boolean)",1,7,7
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseRawType()",1,4,4
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseReturnType()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseSecondaryType()",2,2,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseThrownExceptions()",1,3,3
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseTypeArgument()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseTypeVariable()",2,4,4
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseTypeWithCapture()",2,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseWildcard()",5,5,8
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseWildcardBound()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyParser.parseWildcardRank()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.BindingKeyResolver(BindingKeyParser,Compiler,LookupEnvironment,CompilationUnitDeclaration,HashtableOfObject)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.BindingKeyResolver(String,Compiler,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.SyntheticLocalVariableBinding.SyntheticLocalVariableBinding(char[],TypeBinding,MethodBinding,int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.SyntheticLocalVariableBinding.computeUniqueKey()",1,2,2
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.SyntheticLocalVariableBinding.equals(Object)",2,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.SyntheticLocalVariableBinding.getEnclosingMethod()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.SyntheticLocalVariableBinding.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.compoundName()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeAnnotation()",7,5,8
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeAnyCapture(int,int)",24,7,29
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeArrayDimension(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeBaseType(char[])",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeCapture(int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeCapture18ID(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeException()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeField(char[])",4,2,4
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeFullyQualifiedName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeKey()",1,2,2
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeLocalType(char[])",4,2,4
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeLocalVar(char[],int,int)",11,8,12
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeMemberType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeMethod(char[],char[])",6,9,10
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumePackage(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeParameterizedGenericMethod()",3,2,4
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeParameterizedType(char[],boolean)",3,5,7
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeParser(BindingKeyParser)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeRawType()",2,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeScope(int)",4,2,4
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeSecondaryType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeTopLevelType()",1,5,6
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeTypeVariable(char[],char[])",7,5,9
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeTypeWithCapture()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeWildCard(int)",2,3,4
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.consumeWildcardRank(int)",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.getAnnotationBinding()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.getArrayBinding(int,TypeBinding)",3,1,3
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.getBaseTypeBinding(char[])",12,2,12
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.getBinaryBinding()",2,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.getCompilationUnitDeclaration()",7,2,7
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.getCompilerBinding()",1,2,2
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.getType(char[])",3,4,14
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.getTypeBinding(char[])",5,3,7
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.getTypeBindingArguments()",3,2,3
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.malformedKey()",1,1,1
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.newParser()",1,1,2
"org.eclipse.jdt.internal.core.util.BindingKeyResolver.toString()",1,1,1
"org.eclipse.jdt.internal.core.util.BootstrapMethodsAttribute.BootstrapMethodsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.BootstrapMethodsAttribute.getBootstrapMethods()",1,1,1
"org.eclipse.jdt.internal.core.util.BootstrapMethodsAttribute.getBootstrapMethodsLength()",1,1,1
"org.eclipse.jdt.internal.core.util.BootstrapMethodsEntry.BootstrapMethodsEntry(byte[],IConstantPool,int)",1,2,2
"org.eclipse.jdt.internal.core.util.BootstrapMethodsEntry.getBootstrapArguments()",1,1,1
"org.eclipse.jdt.internal.core.util.BootstrapMethodsEntry.getBootstrapMethodReference()",1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer()",1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer(char[],int)",1,2,3
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.CharArrayBuffer(int)",1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(String)",1,2,2
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(char)",1,1,1
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(char[])",1,2,2
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.append(char[],int,int)",6,4,8
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.getContents()",3,3,5
"org.eclipse.jdt.internal.core.util.CharArrayBuffer.toString()",1,1,2
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.ClassFileAttribute(byte[],IConstantPool,int)",2,1,2
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.getAttributeLength()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.getAttributeName()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileAttribute.getAttributeNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.ClassFileReader(byte[],int)",6,32,51
"org.eclipse.jdt.internal.core.util.ClassFileReader.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getAttributeCount()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getAttributes()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getClassIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getClassName()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getConstantClassNameAt(byte[],int[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getConstantPool()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getFieldInfos()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getFieldsCount()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getInnerClassesAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getInterfaceIndexes()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMagic()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMajorVersion()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMethodInfos()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMethodsCount()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getMinorVersion()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getSourceFileAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getSuperclassIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.getSuperclassName()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.isClass()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileReader.isInterface()",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.doubleAt(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.equals(char[],char[])",6,1,7
"org.eclipse.jdt.internal.core.util.ClassFileStruct.floatAt(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i1At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i2At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i4At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.i8At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.u1At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.u2At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.u4At(byte[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ClassFileStruct.utf8At(byte[],int,int,int)",1,2,5
"org.eclipse.jdt.internal.core.util.CodeAttribute.CodeAttribute(byte[],IConstantPool,int)",3,8,13
"org.eclipse.jdt.internal.core.util.CodeAttribute.getAttributes()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getAttributesCount()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getBytecodes()",1,2,2
"org.eclipse.jdt.internal.core.util.CodeAttribute.getCodeLength()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getExceptionTable()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getExceptionTableLength()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getLineNumberAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getLocalVariableAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getMaxLocals()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.getMaxStack()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeAttribute.traverse(IBytecodeVisitor)",22,13,239
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.CodeSnippetParsingUtil()",1,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.CodeSnippetParsingUtil(boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.getRecordedParsingInformation(CompilationResult,int[][])",1,3,3
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseClassBodyDeclarations(char[],Map,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseClassBodyDeclarations(char[],int,int,Map,boolean,boolean)",2,2,3
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseCompilationUnit(char[],Map,boolean)",3,5,7
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseExpression(char[],Map,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseExpression(char[],int,int,Map,boolean)",2,2,3
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseStatements(char[],Map,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil.parseStatements(char[],int,int,Map,boolean,boolean)",2,2,3
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.CommentRecorderParser(ProblemReporter,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.checkComment()",3,4,16
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeClassHeader()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeEmptyTypeDeclaration()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.consumeInterfaceHeader()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.endParse(int)",1,2,2
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.flushCommentsDefinedPriorTo(int)",9,4,14
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.getCommentsPositions()",1,1,2
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.initialize()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.initialize(boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.initializeScanner()",1,1,1
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.pushOnCommentsStack(int,int)",1,4,8
"org.eclipse.jdt.internal.core.util.CommentRecorderParser.resetModifiers()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPool.ConstantPool(byte[],int[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPool.decodeEntry(int)",2,2,14
"org.eclipse.jdt.internal.core.util.ConstantPool.getConstantPoolCount()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPool.getEntryKind(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPool.getUtf8ValueAt(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.ConstantPoolEntry()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassInfoName()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassInfoNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getClassName()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getDoubleValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getFieldDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getFieldName()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getFloatValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getIntegerValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getKind()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getLongValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getMethodDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getMethodName()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeInfoDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeInfoNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getNameAndTypeNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getStringIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getStringValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getUtf8Length()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getUtf8Value()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.reset()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassInfoName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassInfoNameIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setClassName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setDoubleValue(double)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setFieldDescriptor(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setFieldName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setFloatValue(float)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setIntegerValue(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setKind(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setLongValue(long)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setMethodDescriptor(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setMethodName(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setNameAndTypeDescriptorIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setNameAndTypeIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setNameAndTypeNameIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setStringIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setStringValue(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setUtf8Length(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry.setUtf8Value(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry2.getBootstrapMethodAttributeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry2.getDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry2.getReferenceIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry2.getReferenceKind()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry2.reset()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry2.setBootstrapMethodAttributeIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry2.setDescriptorIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry2.setReferenceIndex(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantPoolEntry2.setReferenceKind(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute.ConstantValueAttribute(byte[],IConstantPool,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute.getConstantValue()",1,1,1
"org.eclipse.jdt.internal.core.util.ConstantValueAttribute.getConstantValueIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.DOMFinder.DOMFinder(CompilationUnit,SourceRefElement,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.DOMFinder.found(ASTNode,ASTNode)",2,2,3
"org.eclipse.jdt.internal.core.util.DOMFinder.search()",1,3,7
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(AnnotationTypeDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(AnnotationTypeMemberDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(AnonymousClassDeclaration)",2,5,7
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(EnumConstantDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(EnumDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(ImportDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(Initializer)",1,1,1
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(LambdaExpression)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(MarkerAnnotation)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(MethodDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(NormalAnnotation)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(PackageDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(SingleMemberAnnotation)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(SingleVariableDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(TypeDeclaration)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(TypeParameter)",1,3,3
"org.eclipse.jdt.internal.core.util.DOMFinder.visit(VariableDeclarationFragment)",1,3,3
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.DefaultBytecodeVisitor(ICodeAttribute,char[][],char[],boolean,StringBuffer,String,int,int)",1,4,8
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aaload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aconst_null(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._aload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._anewarray(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._areturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._arraylength(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._astore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._athrow(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._baload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._bastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._bipush(int,byte)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._breakpoint(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._caload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._castore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._checkcast(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._d2f(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._d2i(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._d2l(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dadd(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._daload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dcmpg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dcmpl(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dconst_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dconst_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ddiv(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dmul(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dneg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._drem(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dreturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dstore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dsub(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup2_x1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup2_x2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup_x1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._dup_x2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._f2d(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._f2i(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._f2l(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fadd(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._faload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fcmpg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fcmpl(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fconst_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fconst_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fconst_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fdiv(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fmul(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fneg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._frem(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._freturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fstore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._fsub(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._getfield(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._getstatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._goto(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._goto_w(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2b(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2c(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2d(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2f(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2l(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._i2s(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iadd(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iaload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iand(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_4(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_5(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iconst_m1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._idiv(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_acmpeq(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_acmpne(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpeq(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpge(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpgt(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmple(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmplt(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._if_icmpne(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifeq(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifge(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifgt(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifle(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iflt(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifne(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifnonnull(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ifnull(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iinc(int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._impdep1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._impdep2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._imul(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ineg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._instanceof(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokedynamic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokedynamic(int,int,IConstantPoolEntry,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokeinterface(int,int,byte,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokespecial(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokestatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._invokevirtual(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ior(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._irem(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ireturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ishl(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ishr(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._istore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._isub(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._iushr(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ixor(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._jsr(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._jsr_w(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._l2d(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._l2f(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._l2i(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ladd(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._laload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._land(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lcmp(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lconst_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lconst_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldc(int,int,IConstantPoolEntry)",2,2,5
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldc2_w(int,int,IConstantPoolEntry)",2,2,3
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldc_w(int,int,IConstantPoolEntry)",2,2,5
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ldiv(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lload_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lmul(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lneg(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lookupswitch(int,int,int,int[][])",1,2,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lor(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lrem(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lreturn(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lshl(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lshr(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_0(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_1(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lstore_3(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lsub(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lushr(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._lxor(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._monitorenter(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._monitorexit(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._multianewarray(int,int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._new(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._newarray(int,int)",2,2,9
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._nop(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._pop(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._pop2(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._putfield(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._putstatic(int,int,IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._ret(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._return(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._saload(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._sastore(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._sipush(int,short)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._swap(int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._tableswitch(int,int,int,int,int[])",1,2,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._wide(int,int,int)",2,2,12
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor._wide(int,int,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.dumpPcNumber(int)",1,3,3
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.getLocalVariableName(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.getLocalVariableName(int,int,boolean)",11,13,20
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.isCompact()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.returnClassName(char[])",4,3,4
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.returnConstantClassName(IConstantPoolEntry)",3,2,4
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.returnDeclaringClassName(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.returnMethodSignature(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.writeExtraTabs(int)",1,2,2
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.writeNewLine()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor.writeTabs()",1,2,2
"org.eclipse.jdt.internal.core.util.DefaultStackMapFrame.DefaultStackMapFrame(byte[],IConstantPool,int)",1,5,5
"org.eclipse.jdt.internal.core.util.DefaultStackMapFrame.getFrameType()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultStackMapFrame.getLocals()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultStackMapFrame.getNumberOfLocals()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultStackMapFrame.getNumberOfStackItems()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultStackMapFrame.getOffsetDelta()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultStackMapFrame.getStackItems()",1,1,1
"org.eclipse.jdt.internal.core.util.DefaultStackMapFrame.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.appendModifier(StringBuffer,int,int,String,boolean)",1,3,4
"org.eclipse.jdt.internal.core.util.Disassembler.bootstrapArgumentsDescription(IBootstrapMethodsEntry,IConstantPool)",4,5,8
"org.eclipse.jdt.internal.core.util.Disassembler.bootstrapMethodDescription(IBootstrapMethodsEntry,IConstantPool)",2,1,2
"org.eclipse.jdt.internal.core.util.Disassembler.checkMode(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiers(StringBuffer,int,boolean,boolean,int[])",3,7,21
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiers(StringBuffer,int,int[])",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForField(StringBuffer,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForFieldForWorkingCopy(StringBuffer,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForInnerClasses(StringBuffer,int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForMethod(StringBuffer,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForMethodParameters(StringBuffer,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeModifiersForType(StringBuffer,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeStringValue(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.decodeStringValue(char[])",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotation,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotationComponent,StringBuffer,String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotationComponentValue,StringBuffer,String,int,int)",4,5,18
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IAnnotationDefaultAttribute,StringBuffer,String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IBootstrapMethodsAttribute,StringBuffer,String,int,IConstantPool)",1,3,3
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileAttribute,StringBuffer,String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileReader,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileReader,String,int)",3,56,84
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IClassFileReader,char[],IMethodInfo,StringBuffer,String,int,int)",2,70,74
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(ICodeAttribute,char[][],char[],boolean,StringBuffer,String,int,int)",1,33,35
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IConstantPool,StringBuffer,String,int)",2,4,17
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IEnclosingMethodAttribute,StringBuffer,String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IExtendedAnnotation,StringBuffer,String,int,int)",2,3,4
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IFieldInfo,StringBuffer,String,int,int)",3,31,40
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IInnerClassesAttribute,StringBuffer,String,int)",1,6,6
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IMethodParametersAttribute,StringBuffer,String,int,int)",1,3,3
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeInvisibleAnnotationsAttribute,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeInvisibleParameterAnnotationsAttribute,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeInvisibleTypeAnnotationsAttribute,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeVisibleAnnotationsAttribute,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeVisibleParameterAnnotationsAttribute,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IRuntimeVisibleTypeAnnotationsAttribute,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IStackMapAttribute,StringBuffer,String,int,int)",1,3,3
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IStackMapTableAttribute,StringBuffer,String,int,int)",2,6,12
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(IVerificationTypeInfo[],int)",2,5,14
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(byte[],String)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(byte[],String,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassemble(int,IParameterAnnotation,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotation,StringBuffer,String,int,int)",1,4,4
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotationComponent,StringBuffer,String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotationComponentValue,StringBuffer,String,int,int)",4,6,19
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IAnnotationDefaultAttribute,StringBuffer,String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IParameterAnnotation,StringBuffer,String,int,int)",2,3,4
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IParameterAnnotation[],StringBuffer,int,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IRuntimeInvisibleAnnotationsAttribute,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleAsModifier(IRuntimeVisibleAnnotationsAttribute,StringBuffer,String,int,int)",1,3,3
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleEnumConstants(IFieldInfo,StringBuffer,String,int,char[][],int)",3,8,11
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleEnumConstructor(IClassFileReader,char[],IMethodInfo,StringBuffer,String,int,int)",2,9,12
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleGenericSignature(int,StringBuffer,char[])",1,9,9
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleTargetTypeContents(boolean,int,IExtendedAnnotation,StringBuffer,String,int,int)",2,4,13
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleTypeMembers(IClassFileReader,char[],StringBuffer,String,int,int,boolean)",13,18,21
"org.eclipse.jdt.internal.core.util.Disassembler.disassembleTypePathContents(int,IExtendedAnnotation,StringBuffer,String,int,int)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.dumpNewLineWithTabs(String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.dumpTab(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.core.util.Disassembler.escapeChar(StringBuffer,char)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.escapeString(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.getArguments(int[],String[])",1,3,3
"org.eclipse.jdt.internal.core.util.Disassembler.getAttribute(char[],ICodeAttribute)",3,2,3
"org.eclipse.jdt.internal.core.util.Disassembler.getConstructorArgumentsForEnum(IMethodInfo[])",4,4,4
"org.eclipse.jdt.internal.core.util.Disassembler.getDescription()",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.getEnclosingMethodAttribute(IClassFileReader)",3,2,3
"org.eclipse.jdt.internal.core.util.Disassembler.getEntryFor(int,ILocalVariableTableEntry[])",3,2,3
"org.eclipse.jdt.internal.core.util.Disassembler.getLocalIndex(int,int,char[])",3,3,6
"org.eclipse.jdt.internal.core.util.Disassembler.getParameterNames(char[],ICodeAttribute,IMethodParametersAttribute,int)",1,11,12
"org.eclipse.jdt.internal.core.util.Disassembler.getReferenceKind(int)",2,2,10
"org.eclipse.jdt.internal.core.util.Disassembler.getSignatureForField(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.getTargetType(int)",24,2,24
"org.eclipse.jdt.internal.core.util.Disassembler.isCompact(int)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.isDeprecated(IClassFileReader)",3,2,3
"org.eclipse.jdt.internal.core.util.Disassembler.isJavaLangObject(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.isSynthetic(IClassFileReader)",4,2,4
"org.eclipse.jdt.internal.core.util.Disassembler.isVarArgs(IMethodInfo)",2,1,2
"org.eclipse.jdt.internal.core.util.Disassembler.methodDescription(IConstantPoolEntry)",1,1,1
"org.eclipse.jdt.internal.core.util.Disassembler.returnClassName(char[],char,int)",4,4,4
"org.eclipse.jdt.internal.core.util.Disassembler.toTypePathString(int[][])",3,4,8
"org.eclipse.jdt.internal.core.util.Disassembler.writeNewLine(StringBuffer,String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.EnclosingMethodAttribute(byte[],IConstantPool,int)",6,2,6
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getEnclosingClass()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getEnclosingClassIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodName()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodNameAndTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.EnclosingMethodAttribute.getMethodNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.ExceptionAttribute(byte[],IConstantPool,int)",3,2,4
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.getExceptionIndexes()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.getExceptionNames()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionAttribute.getExceptionsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.ExceptionTableEntry(byte[],IConstantPool,int)",3,2,3
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getCatchType()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getCatchTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getEndPC()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getHandlerPC()",1,1,1
"org.eclipse.jdt.internal.core.util.ExceptionTableEntry.getStartPC()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.ExtendedAnnotation(byte[],IConstantPool,int)",3,6,8
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getAnnotationTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getComponents()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getComponentsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getExceptionTableIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getLocalVariableRefenceInfoLength()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getLocalVariableTable()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getOffset()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getParameterIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getTargetType()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getTypeIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getTypeName()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getTypeParameterBoundIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getTypeParameterIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.getTypePath()",1,1,1
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.readTargetInfo(int,byte[],IConstantPool,int)",2,2,13
"org.eclipse.jdt.internal.core.util.ExtendedAnnotation.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.FieldInfo(byte[],IConstantPool,int)",5,9,15
"org.eclipse.jdt.internal.core.util.FieldInfo.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getAttributeCount()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getAttributes()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getConstantValueAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getName()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.getNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.hasConstantValueAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.core.util.FieldInfo.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.HandleFactory()",1,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.createElement(ClassScope,ICompilationUnit,HashSet,HashMap)",1,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.createElement(Scope,int,ICompilationUnit,HashSet,HashMap)",11,15,26
"org.eclipse.jdt.internal.core.util.HandleFactory.createLambdaTypeElement(LambdaExpression,ICompilationUnit,HashSet,HashMap)",1,1,1
"org.eclipse.jdt.internal.core.util.HandleFactory.createOpenable(String,IJavaSearchScope)",8,16,18
"org.eclipse.jdt.internal.core.util.HandleFactory.getJarPkgFragmentRoot(IPath,Object,IJavaProject[])",4,4,5
"org.eclipse.jdt.internal.core.util.HandleFactory.getJarPkgFragmentRoot(String,int,String,IJavaSearchScope)",7,8,12
"org.eclipse.jdt.internal.core.util.HandleFactory.getPkgFragmentRoot(String)",5,5,8
"org.eclipse.jdt.internal.core.util.HashSetOfArray.HashSetOfArray()",1,1,1
"org.eclipse.jdt.internal.core.util.HashSetOfArray.HashSetOfArray(int)",1,1,2
"org.eclipse.jdt.internal.core.util.HashSetOfArray.add(Object[])",3,4,6
"org.eclipse.jdt.internal.core.util.HashSetOfArray.clone()",1,1,1
"org.eclipse.jdt.internal.core.util.HashSetOfArray.contains(Object[])",3,3,5
"org.eclipse.jdt.internal.core.util.HashSetOfArray.hashCode(Object[])",1,1,1
"org.eclipse.jdt.internal.core.util.HashSetOfArray.hashCode(Object[],int)",1,2,2
"org.eclipse.jdt.internal.core.util.HashSetOfArray.rehash()",1,3,3
"org.eclipse.jdt.internal.core.util.HashSetOfArray.remove(Object[])",3,4,5
"org.eclipse.jdt.internal.core.util.HashSetOfArray.size()",1,1,1
"org.eclipse.jdt.internal.core.util.HashSetOfArray.toString()",1,6,6
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.HashSetOfCharArrayArray()",1,1,1
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.HashSetOfCharArrayArray(int)",1,1,2
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.add(char[][])",3,4,6
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.clone()",1,1,1
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.contains(char[][])",3,3,5
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.hashCode(char[][])",1,1,1
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.hashCode(char[][],int)",1,2,2
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.rehash()",1,3,3
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.remove(char[][])",3,4,5
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.size()",1,1,1
"org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray.toString()",1,8,8
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.HashtableOfArrayToObject()",1,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.HashtableOfArrayToObject(int)",1,1,2
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.clone()",1,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.containsKey(Object[])",3,3,5
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.get(Object[])",3,3,5
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.getIndex(Object[])",3,3,5
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.getKey(Object[],int)",3,3,5
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.hashCode(Object[])",1,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.hashCode(Object[],int)",1,2,2
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.put(Object[],Object)",3,4,6
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.rehash()",1,3,3
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.removeKey(Object[])",3,4,5
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.size()",1,1,1
"org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject.toString()",1,6,6
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute.InnerClassesAttribute(byte[],IConstantPool,int)",1,1,3
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute.getInnerClassAttributesEntries()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttribute.getNumberOfClasses()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.InnerClassesAttributeEntry(byte[],IConstantPool,int)",7,4,7
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerClassName()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerClassNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerName()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getInnerNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getOuterClassName()",1,1,1
"org.eclipse.jdt.internal.core.util.InnerClassesAttributeEntry.getOuterClassNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.JavaElementFinder.JavaElementFinder(BindingKeyParser,JavaProject,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.util.JavaElementFinder.JavaElementFinder(String,JavaProject,WorkingCopyOwner)",1,1,1
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumeAnnotation()",3,1,3
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumeField(char[])",2,1,2
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumeFullyQualifiedName(char[])",1,1,2
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumeLocalType(char[])",2,3,5
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumeMemberType(char[])",2,1,2
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumeMethod(char[],char[])",2,1,3
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumePackage(char[])",1,1,2
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumeParser(BindingKeyParser)",1,1,1
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumeSecondaryType(char[])",3,1,3
"org.eclipse.jdt.internal.core.util.JavaElementFinder.consumeTypeVariable(char[],char[])",3,2,4
"org.eclipse.jdt.internal.core.util.JavaElementFinder.newParser()",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.KeyKind(BindingKeyParser)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.KeyKind(String)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeBaseType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeCapture(int)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeField(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeLocalType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeLocalVar(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeMemberType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeMethod(char[],char[])",1,1,2
"org.eclipse.jdt.internal.core.util.KeyKind.consumeParameterizedGenericMethod()",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeParameterizedType(char[],boolean)",1,1,2
"org.eclipse.jdt.internal.core.util.KeyKind.consumeParser(BindingKeyParser)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeRawType()",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeTopLevelType()",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeTypeParameter(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeTypeWithCapture()",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.consumeWildCard(int)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyKind.newParser()",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.KeyToSignature(BindingKeyParser)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.KeyToSignature(String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.KeyToSignature(String,int,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeArrayDimension(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeBaseType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeCapture(int)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeCapture18ID(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeException()",1,3,3
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeField(char[])",1,2,2
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeFullyQualifiedName(char[])",1,2,2
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeLocalType(char[])",1,2,2
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeMemberType(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeMethod(char[],char[])",2,5,6
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumePackage(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeParameterizedGenericMethod()",3,5,6
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeParameterizedType(char[],boolean)",1,4,5
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeParser(BindingKeyParser)",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeSecondaryType(char[])",1,2,4
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeType()",1,4,4
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeTypeParameter(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeTypeVariable(char[],char[])",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeTypeWithCapture()",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.consumeWildCard(int)",2,2,5
"org.eclipse.jdt.internal.core.util.KeyToSignature.getThrownExceptions()",1,2,2
"org.eclipse.jdt.internal.core.util.KeyToSignature.getTypeArguments()",1,2,2
"org.eclipse.jdt.internal.core.util.KeyToSignature.newParser()",1,1,1
"org.eclipse.jdt.internal.core.util.KeyToSignature.substitute(char[],char[][],int)",5,8,9
"org.eclipse.jdt.internal.core.util.KeyToSignature.toString()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCache()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCache(int)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCacheEntry.LRUCacheEntry(Object,Object,int)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.LRUCacheEntry.toString()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.Stats.add(int)",3,2,4
"org.eclipse.jdt.internal.core.util.LRUCache.Stats.getAverageAge(long,int,long)",2,4,8
"org.eclipse.jdt.internal.core.util.LRUCache.Stats.getOldestElement()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.Stats.getOldestTimestamps()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.Stats.getTimestamps(int)",3,1,3
"org.eclipse.jdt.internal.core.util.LRUCache.Stats.printStats()",2,4,7
"org.eclipse.jdt.internal.core.util.LRUCache.Stats.removeCountersOlderThan(int)",3,4,4
"org.eclipse.jdt.internal.core.util.LRUCache.Stats.snapshot()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.clone()",1,2,2
"org.eclipse.jdt.internal.core.util.LRUCache.fillingRatio()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.flush()",1,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.flush(Object)",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.get(Object)",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.getCurrentSpace()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.getKey(Object)",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.getNewestTimestampCounter()",1,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.getOldestElement()",1,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.getOldestTimestampCounter()",1,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.getSpaceLimit()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.keys()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.keysAndValues()",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.makeSpace(int)",3,2,5
"org.eclipse.jdt.internal.core.util.LRUCache.newInstance(int)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.peek(Object)",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.privateAdd(Object,Object,int)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.privateAddEntry(LRUCacheEntry,boolean)",1,2,3
"org.eclipse.jdt.internal.core.util.LRUCache.privateRemoveEntry(LRUCacheEntry,boolean)",1,2,4
"org.eclipse.jdt.internal.core.util.LRUCache.put(Object,Object)",3,4,4
"org.eclipse.jdt.internal.core.util.LRUCache.removeKey(Object)",2,1,2
"org.eclipse.jdt.internal.core.util.LRUCache.setSpaceLimit(int)",1,2,2
"org.eclipse.jdt.internal.core.util.LRUCache.spaceFor(Object)",2,2,2
"org.eclipse.jdt.internal.core.util.LRUCache.toString()",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.toStringContents()",1,4,4
"org.eclipse.jdt.internal.core.util.LRUCache.toStringFillingRation(String)",1,1,1
"org.eclipse.jdt.internal.core.util.LRUCache.updateTimestamp(LRUCacheEntry)",1,2,2
"org.eclipse.jdt.internal.core.util.LineNumberAttribute.LineNumberAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.LineNumberAttribute.getLineNumberTable()",1,1,1
"org.eclipse.jdt.internal.core.util.LineNumberAttribute.getLineNumberTableLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute.LocalVariableAttribute(byte[],IConstantPool,int)",1,1,3
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute.getLocalVariableTable()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableAttribute.getLocalVariableTableLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableReferenceInfo.LocalVariableReferenceInfo(byte[],IConstantPool,int)",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableReferenceInfo.getIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableReferenceInfo.getLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableReferenceInfo.getStartPC()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.LocalVariableTableEntry(byte[],IConstantPool,int)",3,1,3
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getName()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTableEntry.getStartPC()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute.LocalVariableTypeAttribute(byte[],IConstantPool,int)",1,1,3
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute.getLocalVariableTypeTable()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeAttribute.getLocalVariableTypeTableLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.LocalVariableTypeTableEntry(byte[],IConstantPool,int)",3,1,3
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getLength()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getName()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getSignature()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getSignatureIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.LocalVariableTypeTableEntry.getStartPC()",1,1,1
"org.eclipse.jdt.internal.core.util.MementoTokenizer.MementoTokenizer(String)",1,1,1
"org.eclipse.jdt.internal.core.util.MementoTokenizer.hasMoreTokens()",1,1,1
"org.eclipse.jdt.internal.core.util.MementoTokenizer.nextToken()",24,6,27
"org.eclipse.jdt.internal.core.util.Messages.Messages()",1,1,1
"org.eclipse.jdt.internal.core.util.Messages.bind(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Messages.bind(String,Object)",1,1,1
"org.eclipse.jdt.internal.core.util.Messages.bind(String,Object,Object)",1,1,1
"org.eclipse.jdt.internal.core.util.Messages.bind(String,Object[])",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.MethodInfo(byte[],IConstantPool,int,int)",5,17,25
"org.eclipse.jdt.internal.core.util.MethodInfo.getAccessFlags()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getAttributeCount()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getAttributes()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getCodeAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getDescriptor()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getDescriptorIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getExceptionAttribute()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getName()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.getNameIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isAbstract()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isClinit()",1,1,2
"org.eclipse.jdt.internal.core.util.MethodInfo.isConstructor()",1,1,2
"org.eclipse.jdt.internal.core.util.MethodInfo.isDeprecated()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isNative()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.isSynthetic()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodInfo.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodParametersAttribute.MethodParametersAttribute(byte[],IConstantPool,int)",5,4,5
"org.eclipse.jdt.internal.core.util.MethodParametersAttribute.getAccessFlags(int)",1,1,1
"org.eclipse.jdt.internal.core.util.MethodParametersAttribute.getMethodParameterLength()",1,1,1
"org.eclipse.jdt.internal.core.util.MethodParametersAttribute.getParameterName(int)",1,1,1
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.ParameterAnnotation(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.getAnnotationsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.ParameterAnnotation.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.PublicScanner()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.PublicScanner(boolean,boolean,boolean,long,char[][],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.PublicScanner(boolean,boolean,boolean,long,long,char[][],char[][],boolean)",1,5,7
"org.eclipse.jdt.internal.core.util.PublicScanner.atEnd()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.checkTaskTag(int,int)",21,14,41
"org.eclipse.jdt.internal.core.util.PublicScanner.consumeDigits(int)",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.consumeDigits(int,boolean)",4,2,5
"org.eclipse.jdt.internal.core.util.PublicScanner.consumeDigits0(int,int,int,boolean)",6,3,8
"org.eclipse.jdt.internal.core.util.PublicScanner.extractInt(char[],int,int)",4,2,14
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentIdentifierSource()",9,8,9
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentStringLiteral()",2,1,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenEndPosition()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenSource()",1,2,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenSourceString()",1,2,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenStartPosition()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getCurrentTokenString()",2,1,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineEnd(int)",5,1,6
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineEnds()",2,1,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineNumber(int)",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getLineStart(int)",5,1,6
"org.eclipse.jdt.internal.core.util.PublicScanner.getNLSTags()",2,2,2
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextChar()",1,3,6
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextChar(char)",5,3,9
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextChar(char,char)",5,3,11
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsDigit()",5,3,9
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsDigit(int)",5,3,9
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsJavaIdentifierPart()",9,6,17
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharAsJavaIdentifierPartWithBoundCheck()",9,7,17
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextCharWithBoundChecks()",4,5,8
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextToken()",120,82,219
"org.eclipse.jdt.internal.core.util.PublicScanner.getNextUnicodeChar()",6,9,14
"org.eclipse.jdt.internal.core.util.PublicScanner.getRawTokenSource()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getRawTokenSourceEnd()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.getSource()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.internalScanIdentifierOrKeyword(int,int,char[])",139,15,324
"org.eclipse.jdt.internal.core.util.PublicScanner.isFirstTag()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.isIdentifier(int)",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.isKeyword(int)",3,2,3
"org.eclipse.jdt.internal.core.util.PublicScanner.isLiteral(int)",3,2,3
"org.eclipse.jdt.internal.core.util.PublicScanner.jumpOverMethodBody()",25,56,119
"org.eclipse.jdt.internal.core.util.PublicScanner.jumpOverUnicodeWhiteSpace()",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource1()",28,2,28
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource2()",5,1,8
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource3()",5,1,10
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource4()",5,1,12
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource5()",5,1,14
"org.eclipse.jdt.internal.core.util.PublicScanner.optimizedCurrentTokenSource6()",5,1,16
"org.eclipse.jdt.internal.core.util.PublicScanner.parseTags()",2,6,11
"org.eclipse.jdt.internal.core.util.PublicScanner.pushLineSeparator()",6,6,13
"org.eclipse.jdt.internal.core.util.PublicScanner.pushUnicodeLineSeparator()",1,1,4
"org.eclipse.jdt.internal.core.util.PublicScanner.recordComment(int)",2,3,4
"org.eclipse.jdt.internal.core.util.PublicScanner.resetTo(int,int)",1,1,4
"org.eclipse.jdt.internal.core.util.PublicScanner.scanEscapeCharacter()",4,7,20
"org.eclipse.jdt.internal.core.util.PublicScanner.scanIdentifier()",16,13,27
"org.eclipse.jdt.internal.core.util.PublicScanner.scanIdentifierOrKeyword()",9,6,12
"org.eclipse.jdt.internal.core.util.PublicScanner.scanIdentifierOrKeywordWithBoundCheck()",9,6,12
"org.eclipse.jdt.internal.core.util.PublicScanner.scanNumber(boolean)",53,45,93
"org.eclipse.jdt.internal.core.util.PublicScanner.setSource(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.core.util.PublicScanner.setSource(char[])",1,1,2
"org.eclipse.jdt.internal.core.util.PublicScanner.setSource(char[],CompilationResult)",1,2,3
"org.eclipse.jdt.internal.core.util.PublicScanner.toString()",4,3,6
"org.eclipse.jdt.internal.core.util.PublicScanner.toStringAction(int)",107,10,107
"org.eclipse.jdt.internal.core.util.PublicScanner.unicodeInitializeBuffer(int)",1,2,3
"org.eclipse.jdt.internal.core.util.PublicScanner.unicodeStore()",1,2,3
"org.eclipse.jdt.internal.core.util.PublicScanner.unicodeStore(char)",1,2,3
"org.eclipse.jdt.internal.core.util.RecordedParsingInformation.RecordedParsingInformation(CategorizedProblem[],int[],int[][])",1,1,2
"org.eclipse.jdt.internal.core.util.RecordedParsingInformation.updateRecordedParsingInformation(CompilationResult)",1,1,2
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptAnnotationTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptAnnotationTypeReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptConstructorReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptFieldReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptMethodReference(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptTypeReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptTypeReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptUnknownReference(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter.acceptUnknownReference(char[][],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.ResourceCompilationUnit.ResourceCompilationUnit(IFile,URI)",1,2,2
"org.eclipse.jdt.internal.core.util.ResourceCompilationUnit.getContents()",2,1,3
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute.RuntimeInvisibleAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute.getAnnotationsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute.RuntimeInvisibleParameterAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute.getParameterAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute.getParametersNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleTypeAnnotationsAttribute.RuntimeInvisibleTypeAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleTypeAnnotationsAttribute.getExtendedAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeInvisibleTypeAnnotationsAttribute.getExtendedAnnotationsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute.RuntimeVisibleAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute.getAnnotationsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute.RuntimeVisibleParameterAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute.getParameterAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute.getParametersNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleTypeAnnotationsAttribute.RuntimeVisibleTypeAnnotationsAttribute(byte[],IConstantPool,int)",1,3,3
"org.eclipse.jdt.internal.core.util.RuntimeVisibleTypeAnnotationsAttribute.getExtendedAnnotations()",1,1,1
"org.eclipse.jdt.internal.core.util.RuntimeVisibleTypeAnnotationsAttribute.getExtendedAnnotationsNumber()",1,1,1
"org.eclipse.jdt.internal.core.util.SignatureAttribute.SignatureAttribute(byte[],IConstantPool,int)",2,1,2
"org.eclipse.jdt.internal.core.util.SignatureAttribute.getSignature()",1,1,1
"org.eclipse.jdt.internal.core.util.SignatureAttribute.getSignatureIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.SimpleDocument(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addDocumentListener(IDocumentListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addDocumentPartitioningListener(IDocumentPartitioningListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPosition(Position)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPosition(String,Position)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPositionCategory(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPositionUpdater(IPositionUpdater)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.addPrenotifiedDocumentListener(IDocumentListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.computeIndexInCategory(String,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.computeNumberOfLines(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.computePartitioning(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.containsPosition(String,int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.containsPositionCategory(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.get()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.get(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getChar(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getContentType(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getDocumentPartitioner()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLegalContentTypes()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLegalLineDelimiters()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLength()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineDelimiter(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineInformation(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineInformationOfOffset(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineLength(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineOfOffset(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getLineOffset(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getNumberOfLines()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getNumberOfLines(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPartition(int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPositionCategories()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPositionUpdaters()",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.getPositions(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.insertPositionUpdater(IPositionUpdater,int)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removeDocumentListener(IDocumentListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removeDocumentPartitioningListener(IDocumentPartitioningListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePosition(Position)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePosition(String,Position)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePositionCategory(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePositionUpdater(IPositionUpdater)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.removePrenotifiedDocumentListener(IDocumentListener)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.replace(int,int,String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.search(int,String,boolean,boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.set(String)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleDocument.setDocumentPartitioner(IDocumentPartitioner)",1,1,1
"org.eclipse.jdt.internal.core.util.SimpleWordSet.SimpleWordSet(int)",1,1,2
"org.eclipse.jdt.internal.core.util.SimpleWordSet.add(char[])",3,3,5
"org.eclipse.jdt.internal.core.util.SimpleWordSet.includes(char[])",3,2,4
"org.eclipse.jdt.internal.core.util.SimpleWordSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.util.SourceFileAttribute.SourceFileAttribute(byte[],IConstantPool,int)",2,1,2
"org.eclipse.jdt.internal.core.util.SourceFileAttribute.getSourceFileIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.SourceFileAttribute.getSourceFileName()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapAttribute.StackMapAttribute(byte[],IConstantPool,int)",1,4,4
"org.eclipse.jdt.internal.core.util.StackMapAttribute.getBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapAttribute.getNumberOfEntries()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapAttribute.getStackMapFrame()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapFrame.StackMapFrame(byte[],IConstantPool,int)",2,9,14
"org.eclipse.jdt.internal.core.util.StackMapFrame.getFrameType()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapFrame.getLocals()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapFrame.getNumberOfLocals()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapFrame.getNumberOfStackItems()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapFrame.getOffsetDelta()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapFrame.getStackItems()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapFrame.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapTableAttribute.StackMapTableAttribute(byte[],IConstantPool,int)",1,4,4
"org.eclipse.jdt.internal.core.util.StackMapTableAttribute.getBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapTableAttribute.getNumberOfEntries()",1,1,1
"org.eclipse.jdt.internal.core.util.StackMapTableAttribute.getStackMapFrame()",1,1,1
"org.eclipse.jdt.internal.core.util.ToStringSorter.compare(String,String)",1,1,1
"org.eclipse.jdt.internal.core.util.ToStringSorter.quickSort(int,int)",1,4,7
"org.eclipse.jdt.internal.core.util.ToStringSorter.sort(Object[],String[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.Util()",1,1,1
"org.eclipse.jdt.internal.core.util.Util.appendArrayTypeSignature(char[],int,StringBuffer,boolean)",5,6,6
"org.eclipse.jdt.internal.core.util.Util.appendArrayTypeSignatureForAnchor(char[],int,StringBuffer,boolean)",5,7,7
"org.eclipse.jdt.internal.core.util.Util.appendCaptureTypeSignatureForAnchor(char[],int,StringBuffer)",3,3,3
"org.eclipse.jdt.internal.core.util.Util.appendClassTypeSignature(char[],int,StringBuffer,boolean)",5,4,8
"org.eclipse.jdt.internal.core.util.Util.appendClassTypeSignatureForAnchor(char[],int,StringBuffer)",7,6,12
"org.eclipse.jdt.internal.core.util.Util.appendTypeArgumentSignatureForAnchor(char[],int,StringBuffer)",6,5,6
"org.eclipse.jdt.internal.core.util.Util.appendTypeSignature(char[],int,StringBuffer,boolean)",2,2,13
"org.eclipse.jdt.internal.core.util.Util.appendTypeSignatureForAnchor(char[],int,StringBuffer,boolean)",10,10,20
"org.eclipse.jdt.internal.core.util.Util.arrayConcat(String[],String)",4,1,4
"org.eclipse.jdt.internal.core.util.Util.checkTypeSignature(String,int,int,boolean)",8,3,12
"org.eclipse.jdt.internal.core.util.Util.combineHashCodes(int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.compare(byte[],byte[])",8,1,8
"org.eclipse.jdt.internal.core.util.Util.compare(char[],char[])",3,1,3
"org.eclipse.jdt.internal.core.util.Util.concatCompoundNameToCharArray(String[])",3,3,6
"org.eclipse.jdt.internal.core.util.Util.concatWith(String[],String,char)",3,4,6
"org.eclipse.jdt.internal.core.util.Util.concatWith(String[],char)",1,3,3
"org.eclipse.jdt.internal.core.util.Util.concatenateName(String,String,char)",1,6,6
"org.eclipse.jdt.internal.core.util.Util.convertTypeSignature(char[],int,int)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.decodeArgumentString(int,String)",9,5,12
"org.eclipse.jdt.internal.core.util.Util.defaultJavaExtension()",1,1,1
"org.eclipse.jdt.internal.core.util.Util.editedString(String,TextEdit)",2,3,4
"org.eclipse.jdt.internal.core.util.Util.encodeArgument(String,StringBuffer)",2,3,4
"org.eclipse.jdt.internal.core.util.Util.endsWithIgnoreCase(String,String)",4,4,6
"org.eclipse.jdt.internal.core.util.Util.equalArrays(Object[],Object[],int)",7,3,8
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNull(Object[],Object[])",8,3,9
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNull(int[],int[])",6,1,7
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNullSortFirst(Comparable[],Comparable[])",6,3,8
"org.eclipse.jdt.internal.core.util.Util.equalArraysOrNullSortFirst(String[],String[])",6,3,8
"org.eclipse.jdt.internal.core.util.Util.equalOrNull(Object,Object)",3,1,4
"org.eclipse.jdt.internal.core.util.Util.equalsIgnoreJavaLikeExtension(String,String)",9,4,9
"org.eclipse.jdt.internal.core.util.Util.extractLastName(String)",2,1,2
"org.eclipse.jdt.internal.core.util.Util.extractParameterTypes(char[])",5,4,7
"org.eclipse.jdt.internal.core.util.Util.extractReturnType(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.findFirstClassFile(IFolder)",4,3,5
"org.eclipse.jdt.internal.core.util.Util.findLineSeparator(char[])",5,2,7
"org.eclipse.jdt.internal.core.util.Util.findMethod(IType,char[],String[],boolean)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.fixTaskTags(Map)",3,8,8
"org.eclipse.jdt.internal.core.util.Util.getAllTypeArguments(char[][])",2,2,3
"org.eclipse.jdt.internal.core.util.Util.getAnnotation(JavaElement,IBinaryAnnotation,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.getAnnotationMemberValue(JavaElement,MemberValuePair,Object)",6,9,13
"org.eclipse.jdt.internal.core.util.Util.getAnnotationMemberValue(MemberValuePair,Constant)",3,2,12
"org.eclipse.jdt.internal.core.util.Util.getAttribute(IClassFileReader,char[])",3,2,3
"org.eclipse.jdt.internal.core.util.Util.getAttribute(ICodeAttribute,char[])",3,2,3
"org.eclipse.jdt.internal.core.util.Util.getAttribute(IFieldInfo,char[])",3,2,3
"org.eclipse.jdt.internal.core.util.Util.getAttribute(IMethodInfo,char[])",3,2,3
"org.eclipse.jdt.internal.core.util.Util.getClassFile(char[])",3,2,6
"org.eclipse.jdt.internal.core.util.Util.getCompilationUnit(char[],WorkingCopyOwner)",5,2,5
"org.eclipse.jdt.internal.core.util.Util.getDeclaringTypeSignature(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.getFullyQualifiedName(Type,StringBuffer)",3,6,12
"org.eclipse.jdt.internal.core.util.Util.getJavaLikeExtensions()",4,6,7
"org.eclipse.jdt.internal.core.util.Util.getJdkLevel(Object)",6,10,14
"org.eclipse.jdt.internal.core.util.Util.getLineSeparator(String,IJavaProject)",7,5,8
"org.eclipse.jdt.internal.core.util.Util.getLineSeparator(char[],char[])",3,3,3
"org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension(String)",2,1,2
"org.eclipse.jdt.internal.core.util.Util.getNegativeAnnotationMemberValue(MemberValuePair,Constant)",3,2,7
"org.eclipse.jdt.internal.core.util.Util.getPackageFragment(char[],int,int)",8,6,9
"org.eclipse.jdt.internal.core.util.Util.getParameterCount(char[])",4,4,6
"org.eclipse.jdt.internal.core.util.Util.getProblemArgumentsForMarker(String[])",1,4,4
"org.eclipse.jdt.internal.core.util.Util.getProblemArgumentsFromMarker(String)",3,1,4
"org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsByteArray(IFile)",1,1,4
"org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray(IFile)",1,1,2
"org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray(IFile,String)",3,3,7
"org.eclipse.jdt.internal.core.util.Util.getSignature(Type)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.getSourceAttachmentProperty(IPath)",4,3,5
"org.eclipse.jdt.internal.core.util.Util.getSourceAttachmentPropertyName(IPath)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.getTrimmedSimpleNames(String)",1,2,2
"org.eclipse.jdt.internal.core.util.Util.getUnresolvedJavaElement(FieldBinding,WorkingCopyOwner,BindingsToNodesMap)",3,2,4
"org.eclipse.jdt.internal.core.util.Util.getUnresolvedJavaElement(MethodBinding,WorkingCopyOwner,BindingsToNodesMap)",7,16,24
"org.eclipse.jdt.internal.core.util.Util.getUnresolvedJavaElement(TypeBinding,WorkingCopyOwner,BindingsToNodesMap)",19,15,28
"org.eclipse.jdt.internal.core.util.Util.getUnresolvedJavaElement(int,int,JavaElement)",5,3,7
"org.eclipse.jdt.internal.core.util.Util.indexOfEnclosingPath(IPath,IPath[],int)",3,3,5
"org.eclipse.jdt.internal.core.util.Util.indexOfJavaLikeExtension(String)",6,3,6
"org.eclipse.jdt.internal.core.util.Util.indexOfMatchingPath(IPath,IPath[],int)",3,2,3
"org.eclipse.jdt.internal.core.util.Util.indexOfNestedPath(IPath,IPath[],int)",4,2,4
"org.eclipse.jdt.internal.core.util.Util.isAttributeSupported(int)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.isExcluded(IJavaElement)",5,5,9
"org.eclipse.jdt.internal.core.util.Util.isExcluded(IPath,char[][],char[][],boolean)",2,1,3
"org.eclipse.jdt.internal.core.util.Util.isExcluded(IResource,char[][],char[][])",1,1,2
"org.eclipse.jdt.internal.core.util.Util.isJavaLikeFileName(String)",2,1,2
"org.eclipse.jdt.internal.core.util.Util.isJavaLikeFileName(char[])",7,1,7
"org.eclipse.jdt.internal.core.util.Util.isReadOnly(IResource)",3,2,3
"org.eclipse.jdt.internal.core.util.Util.isReadOnlySupported()",1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidClassFileName(String,String,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidCompilationUnitName(String,String,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidFolderNameForPackage(String,String,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.isValidMethodSignature(String)",7,2,7
"org.eclipse.jdt.internal.core.util.Util.isValidTypeSignature(String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.localTypeName(String,int,int)",2,3,5
"org.eclipse.jdt.internal.core.util.Util.log(IStatus)",1,2,2
"org.eclipse.jdt.internal.core.util.Util.log(Throwable)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.log(Throwable,String)",1,2,3
"org.eclipse.jdt.internal.core.util.Util.log(int,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.logRepeatedMessage(String,Exception)",3,1,3
"org.eclipse.jdt.internal.core.util.Util.logRepeatedMessage(String,int,String)",3,1,3
"org.eclipse.jdt.internal.core.util.Util.newClassFileReader(IResource)",1,2,2
"org.eclipse.jdt.internal.core.util.Util.normalizeCRs(String,String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.normalizeCRs(char[],char[])",4,6,10
"org.eclipse.jdt.internal.core.util.Util.packageName(IPath,String,String)",3,3,4
"org.eclipse.jdt.internal.core.util.Util.prefixLength(String,String)",1,2,3
"org.eclipse.jdt.internal.core.util.Util.prefixLength(char[],char[])",1,1,3
"org.eclipse.jdt.internal.core.util.Util.quickSort(Comparable[],int,int)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(Object[],int,int,Comparer)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(String[],int,int)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(char[][],int,int)",1,4,7
"org.eclipse.jdt.internal.core.util.Util.quickSort(int[],int,int)",1,3,7
"org.eclipse.jdt.internal.core.util.Util.raiseIllegalSignatureException(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.raiseUnexpectedCharacterException(char[],int,char)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.relativePath(IPath,int)",1,5,7
"org.eclipse.jdt.internal.core.util.Util.resetJavaLikeExtensions()",1,1,1
"org.eclipse.jdt.internal.core.util.Util.scanGenericEnd(char[],int)",5,2,6
"org.eclipse.jdt.internal.core.util.Util.scanTypeSignature(char[],int)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.setReadOnly(IResource,boolean)",3,2,4
"org.eclipse.jdt.internal.core.util.Util.setSourceAttachmentProperty(IPath,String)",1,3,3
"org.eclipse.jdt.internal.core.util.Util.sort(Comparable[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(Object[],Comparer)",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(String[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(char[][])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sort(int[])",1,2,2
"org.eclipse.jdt.internal.core.util.Util.sortCopy(Comparable[])",1,1,1
"org.eclipse.jdt.internal.core.util.Util.sortCopy(IJavaElement[])",1,1,1
"org.eclipse.jdt.internal.core.util.Util.sortCopy(Object[],Comparer)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.sortCopy(String[])",1,1,1
"org.eclipse.jdt.internal.core.util.Util.splitOn(char,String,int,int)",2,5,8
"org.eclipse.jdt.internal.core.util.Util.splitTypeLevelsSignature(String)",2,7,11
"org.eclipse.jdt.internal.core.util.Util.startsWithIgnoreCase(String[],String[],boolean)",4,3,6
"org.eclipse.jdt.internal.core.util.Util.toAnchor(int,char[],String,boolean)",1,1,2
"org.eclipse.jdt.internal.core.util.Util.toAnchor(int,char[],char[],boolean)",2,5,6
"org.eclipse.jdt.internal.core.util.Util.toCharArrays(String[])",2,2,3
"org.eclipse.jdt.internal.core.util.Util.toCompoundChars(String)",2,3,5
"org.eclipse.jdt.internal.core.util.Util.toLocalFile(URI,IProgressMonitor)",1,2,2
"org.eclipse.jdt.internal.core.util.Util.toString(char[],char[],char[],boolean,boolean)",2,10,14
"org.eclipse.jdt.internal.core.util.Util.toString(char[][])",1,3,3
"org.eclipse.jdt.internal.core.util.Util.toString(char[][],char[])",2,2,3
"org.eclipse.jdt.internal.core.util.Util.toStrings(char[][])",1,1,2
"org.eclipse.jdt.internal.core.util.Util.toUnresolvedTypeSignature(char[])",2,1,2
"org.eclipse.jdt.internal.core.util.Util.toUnresolvedTypeSignature(char[],int,int,StringBuffer)",3,4,7
"org.eclipse.jdt.internal.core.util.Util.typeParameterSignatures(AbstractMethodDeclaration)",2,3,3
"org.eclipse.jdt.internal.core.util.Util.typeSignature(TypeReference)",1,3,3
"org.eclipse.jdt.internal.core.util.Util.validateMethodSignature(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.validateTypeSignature(String,boolean)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.verbose(String)",1,1,1
"org.eclipse.jdt.internal.core.util.Util.verbose(String,PrintStream)",1,3,3
"org.eclipse.jdt.internal.core.util.VerificationInfo.VerificationInfo(byte[],IConstantPool,int)",4,3,5
"org.eclipse.jdt.internal.core.util.VerificationInfo.getClassTypeName()",1,1,1
"org.eclipse.jdt.internal.core.util.VerificationInfo.getConstantPoolIndex()",1,1,1
"org.eclipse.jdt.internal.core.util.VerificationInfo.getOffset()",1,1,1
"org.eclipse.jdt.internal.core.util.VerificationInfo.getTag()",1,1,1
"org.eclipse.jdt.internal.core.util.VerificationInfo.sizeInBytes()",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSet.HashableWeakReference.HashableWeakReference(Object,ReferenceQueue)",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSet.HashableWeakReference.equals(Object)",3,1,3
"org.eclipse.jdt.internal.core.util.WeakHashSet.HashableWeakReference.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSet.HashableWeakReference.toString()",2,1,2
"org.eclipse.jdt.internal.core.util.WeakHashSet.WeakHashSet()",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSet.WeakHashSet(int)",1,1,2
"org.eclipse.jdt.internal.core.util.WeakHashSet.add(Object)",3,3,5
"org.eclipse.jdt.internal.core.util.WeakHashSet.addValue(HashableWeakReference)",4,3,6
"org.eclipse.jdt.internal.core.util.WeakHashSet.cleanupGarbageCollectedValues()",4,1,7
"org.eclipse.jdt.internal.core.util.WeakHashSet.contains(Object)",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSet.get(Object)",3,2,4
"org.eclipse.jdt.internal.core.util.WeakHashSet.rehash()",1,3,3
"org.eclipse.jdt.internal.core.util.WeakHashSet.remove(Object)",3,3,4
"org.eclipse.jdt.internal.core.util.WeakHashSet.size()",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSet.toString()",1,4,4
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.HashableWeakReference.HashableWeakReference(char[],ReferenceQueue)",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.HashableWeakReference.equals(Object)",3,1,3
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.HashableWeakReference.hashCode()",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.HashableWeakReference.toString()",2,1,2
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.WeakHashSetOfCharArray()",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.WeakHashSetOfCharArray(int)",1,1,2
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.add(char[])",3,3,5
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.addValue(HashableWeakReference)",4,3,6
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.cleanupGarbageCollectedValues()",4,1,7
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.contains(char[])",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.get(char[])",3,2,4
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.rehash()",1,3,3
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.remove(char[])",3,3,4
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.size()",1,1,1
"org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray.toString()",1,4,4
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.CodeSnippetAllocationExpression(EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.generateCode(BlockScope,CodeStream,boolean)",1,12,12
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.manageEnclosingInstanceAccessIfNecessary(BlockScope,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetAllocationExpression.resolveType(BlockScope)",26,36,54
"org.eclipse.jdt.internal.eval.CodeSnippetClassFile.CodeSnippetClassFile(SourceTypeBinding,ClassFile,boolean)",1,5,12
"org.eclipse.jdt.internal.eval.CodeSnippetClassFile.createProblemType(TypeDeclaration,CompilationResult)",6,15,21
"org.eclipse.jdt.internal.eval.CodeSnippetCompiler.CodeSnippetCompiler(INameEnvironment,IErrorHandlingPolicy,CompilerOptions,ICompilerRequestor,IProblemFactory,EvaluationContext,int,int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetCompiler.initializeParser()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.CodeSnippetEnvironment(INameEnvironment,EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.cleanup()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.findType(char[],char[][])",2,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.findType(char[][])",6,5,7
"org.eclipse.jdt.internal.eval.CodeSnippetEnvironment.isPackage(char[][],char[])",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.CodeSnippetEvaluator(char[],EvaluationContext,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.addEvaluationResultForCompilationProblem(Map,CategorizedProblem,char[])",2,3,6
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getClassName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getCompiler(ICompilerRequestor)",1,6,6
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getMapper()",1,4,5
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getSource()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetEvaluator.getWrapperEnvironment()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.CodeSnippetFieldReference(char[],long,EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",2,6,7
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generateCode(BlockScope,CodeStream,boolean)",1,11,11
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",2,11,12
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",3,7,9
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",2,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetFieldReference.resolveType(BlockScope)",7,9,12
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.CodeSnippetMessageSend(EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.generateCode(BlockScope,CodeStream,boolean)",2,24,28
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo)",1,4,5
"org.eclipse.jdt.internal.eval.CodeSnippetMessageSend.resolveType(BlockScope)",17,34,46
"org.eclipse.jdt.internal.eval.CodeSnippetParser.CodeSnippetParser(ProblemReporter,EvaluationContext,boolean,int,int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.classInstanceCreation(boolean)",1,3,6
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeClassDeclaration()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeClassHeaderName1()",1,3,5
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeClassInstanceCreationExpressionWithTypeArguments()",1,5,7
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeEmptyStatement()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeEnhancedForStatement()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeExpressionStatement()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeFieldAccess(boolean)",1,2,3
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeInternalCompilationUnit()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeInternalCompilationUnitWithTypes()",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeLocalVariableDeclarationStatement()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodDeclaration(boolean,boolean)",1,8,12
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodInvocationName()",1,6,6
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodInvocationNameWithTypeArguments()",1,4,4
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodInvocationSuper()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeMethodInvocationSuperWithTypeArguments()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumePrimaryNoNewArrayThis()",1,4,4
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementBreak()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementBreakWithLabel()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementCatch()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementContinue()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementContinueWithLabel()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementDo()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementFor()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementIfNoElse()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementIfWithElse()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementLabel()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementReturn()",1,4,6
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementSwitch()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementSynchronized()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementThrow()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementTry(boolean,boolean)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.consumeStatementWhile()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.endParse(int)",7,9,22
"org.eclipse.jdt.internal.eval.CodeSnippetParser.getUnspecifiedReference(boolean)",2,4,5
"org.eclipse.jdt.internal.eval.CodeSnippetParser.getUnspecifiedReferenceOptimized()",3,2,4
"org.eclipse.jdt.internal.eval.CodeSnippetParser.ignoreExpressionAssignment()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetParser.isTopLevelType()",1,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.newMessageSend()",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.newMessageSendWithTypeArguments()",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.recordLastStatementIfNeeded()",1,2,3
"org.eclipse.jdt.internal.eval.CodeSnippetParser.reportSyntaxErrors(boolean,int)",1,1,2
"org.eclipse.jdt.internal.eval.CodeSnippetParser.resumeOnSyntaxError()",2,1,5
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.CodeSnippetQualifiedNameReference(char[][],long[],int,int,EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.checkFieldAccess(BlockScope)",1,8,8
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",3,5,7
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateCode(BlockScope,CodeStream,boolean)",4,23,26
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateCompoundAssignment(BlockScope,CodeStream,Expression,int,int,boolean)",3,7,9
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",3,8,10
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateReadSequence(BlockScope,CodeStream)",2,34,47
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.generateReceiver(CodeStream)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.getOtherFieldBindings(BlockScope)",13,15,18
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.manageSyntheticAccessIfNecessary(BlockScope,FieldBinding,int,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetQualifiedNameReference.reportError(BlockScope)",10,14,15
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.CodeSnippetReturnStatement(Expression,int,int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.analyseCode(BlockScope,FlowContext,FlowInfo)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.generateReturnBytecode(CodeStream)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.generateStoreSaveValueIfNecessary(CodeStream)",1,5,7
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.needValue()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.prepareSaveValueLocation(TryStatement)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.resolve(BlockScope)",6,7,7
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetReturnStatement.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.CodeSnippetScope(BlockScope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.CodeSnippetScope(BlockScope,int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.CodeSnippetScope(int,Scope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetScope.canBeSeenByForCodeSnippet(FieldBinding,TypeBinding,InvocationSite,Scope)",22,9,24
"org.eclipse.jdt.internal.eval.CodeSnippetScope.canBeSeenByForCodeSnippet(MethodBinding,TypeBinding,InvocationSite,Scope)",22,9,24
"org.eclipse.jdt.internal.eval.CodeSnippetScope.canBeSeenByForCodeSnippet(ReferenceBinding,ReferenceBinding)",5,7,9
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findExactMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",3,3,4
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findFieldForCodeSnippet(TypeBinding,char[],InvocationSite)",23,15,28
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite,boolean)",3,3,4
"org.eclipse.jdt.internal.eval.CodeSnippetScope.findMethodForArray(ArrayBinding,char[],TypeBinding[],InvocationSite)",8,4,9
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getBinding(char[][],int,InvocationSite,ReferenceBinding)",17,16,20
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getConstructor(ReferenceBinding,TypeBinding[],InvocationSite)",7,4,11
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getFieldForCodeSnippet(TypeBinding,char[],InvocationSite)",2,1,3
"org.eclipse.jdt.internal.eval.CodeSnippetScope.getImplicitMethod(ReferenceBinding,char[],TypeBinding[],InvocationSite)",4,4,5
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.CodeSnippetSingleNameReference(char[],long,EvaluationContext)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.analyseCode(BlockScope,FlowContext,FlowInfo,boolean)",2,6,9
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.checkFieldAccess(BlockScope)",4,5,5
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateAssignment(BlockScope,CodeStream,Assignment,boolean)",6,25,35
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateCode(BlockScope,CodeStream,boolean)",5,13,18
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateCompoundAssignment(BlockScope,CodeStream,MethodBinding,Expression,int,int,boolean)",13,29,41
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generatePostIncrement(BlockScope,CodeStream,CompoundAssignment,boolean)",4,10,13
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.generateReceiver(CodeStream)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.getReceiverType(BlockScope)",4,2,4
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.manageSyntheticAccessIfNecessary(BlockScope,FlowInfo,boolean)",4,4,6
"org.eclipse.jdt.internal.eval.CodeSnippetSingleNameReference.reportError(BlockScope)",10,12,12
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.BinaryMethodSkeleton(char[],char[],char[][],boolean)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getAnnotatedParametersCount()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getArgumentNames()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getDefaultValue()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getExceptionTypeNames()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getGenericSignature()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getMethodDescriptor()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getModifiers()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getParameterAnnotations(int,char[])",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getSelector()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getTagBits()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.isClinit()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.BinaryMethodSkeleton.isConstructor()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.CodeSnippetSkeleton()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.enrichWithExternalAnnotationsFor(ITypeAnnotationWalker,Object,LookupEnvironment)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getAnnotations()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getEnclosingMethod()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getEnclosingTypeName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getFields()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getFileName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getGenericSignature()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getInterfaceNames()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getJavadocContents()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getJavadocContents(IProgressMonitor,String)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getMemberTypes()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getMethods()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getMissingTypeNames()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getModifiers()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getSourceName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getSuperclassName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getTagBits()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getTypeAnnotations()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.getURLContents(String,String)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isAnonymous()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isBinaryType()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isLocal()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.isMember()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSkeleton.sourceFileName()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.CodeSnippetSuperReference(int,int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.resolveType(BlockScope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetSuperReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.CodeSnippetThisReference(int,int,EvaluationContext,boolean)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.checkAccess(BlockScope,ReferenceBinding)",3,3,4
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.freshInferenceContext(Scope)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.generateCode(BlockScope,CodeStream,boolean)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.genericTypeArguments()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.isSuperAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.isTypeAccess()",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.printExpression(int,StringBuffer)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.resolveType(BlockScope)",3,4,5
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.setActualReceiverType(ReferenceBinding)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.setDepth(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetThisReference.setFieldIndex(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.CodeSnippetToCuMapper(char[],char[],char[][],char[],char[],char[][],char[][],int[],char[],String,long)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.buildCUSource(String)",1,8,9
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getCUSource(String)",1,2,2
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getCompletionRequestor(CompletionRequestor)",7,8,14
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getEvaluationType(int)",6,1,10
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getImport(int)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetToCuMapper.getSelectionRequestor(ISelectionRequestor)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetTypeDeclaration.CodeSnippetTypeDeclaration(CompilationResult)",1,1,1
"org.eclipse.jdt.internal.eval.CodeSnippetTypeDeclaration.generateCode(ClassFile)",6,12,15
"org.eclipse.jdt.internal.eval.EvaluationContext.EvaluationContext()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.allVariables()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.complete(char[],int,SearchableEnvironment,CompletionRequestor,Map,IJavaProject,WorkingCopyOwner,IProgressMonitor)",1,5,7
"org.eclipse.jdt.internal.eval.EvaluationContext.deleteVariable(GlobalVariable)",4,3,5
"org.eclipse.jdt.internal.eval.EvaluationContext.deployCodeSnippetClassIfNeeded(IRequestor)",3,2,3
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluate(char[],INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluate(char[],char[][],char[][],int[],char[],boolean,boolean,INameEnvironment,Map,IRequestor,IProblemFactory)",4,5,8
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluateImports(INameEnvironment,IRequestor,IProblemFactory)",2,8,11
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluateVariable(GlobalVariable,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.evaluateVariables(INameEnvironment,Map,IRequestor,IProblemFactory)",7,3,7
"org.eclipse.jdt.internal.eval.EvaluationContext.getCodeSnippetBytes()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getCodeSnippetSource()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getImports()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getPackageName()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.getRootCodeSnippetBinary()",1,1,2
"org.eclipse.jdt.internal.eval.EvaluationContext.getVarClassName()",2,1,2
"org.eclipse.jdt.internal.eval.EvaluationContext.newVariable(char[],char[],char[])",1,2,2
"org.eclipse.jdt.internal.eval.EvaluationContext.select(char[],int,int,SearchableEnvironment,ISelectionRequestor,Map,WorkingCopyOwner)",1,1,2
"org.eclipse.jdt.internal.eval.EvaluationContext.setImports(char[][])",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.setLineSeparator(String)",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationContext.setPackageName(char[])",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.EvaluationResult(char[],int,CategorizedProblem[])",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.EvaluationResult(char[],int,char[],char[])",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.addProblem(CategorizedProblem)",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getEvaluationID()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getEvaluationType()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getProblems()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getValue()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getValueDisplayString()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.getValueTypeName()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.hasErrors()",4,3,4
"org.eclipse.jdt.internal.eval.EvaluationResult.hasProblems()",1,1,2
"org.eclipse.jdt.internal.eval.EvaluationResult.hasValue()",1,1,1
"org.eclipse.jdt.internal.eval.EvaluationResult.hasWarnings()",4,3,4
"org.eclipse.jdt.internal.eval.EvaluationResult.toString()",2,6,10
"org.eclipse.jdt.internal.eval.Evaluator.Evaluator(EvaluationContext,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.Evaluator.evaluationResultsForCompilationProblems(CompilationResult,char[])",1,3,3
"org.eclipse.jdt.internal.eval.Evaluator.getClasses()",2,7,7
"org.eclipse.jdt.internal.eval.Evaluator.getCompiler(ICompilerRequestor)",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.GlobalVariable(char[],char[],char[])",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.getInitializer()",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.getName()",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.getTypeName()",1,1,1
"org.eclipse.jdt.internal.eval.GlobalVariable.toString()",1,2,2
"org.eclipse.jdt.internal.eval.InstallException.InstallException()",1,1,1
"org.eclipse.jdt.internal.eval.InstallException.InstallException(String)",1,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.VariablesEvaluator(EvaluationContext,INameEnvironment,Map,IRequestor,IProblemFactory)",1,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.addEvaluationResultForCompilationProblem(Map,CategorizedProblem,char[])",4,12,16
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getClassName()",1,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getCompiler(ICompilerRequestor)",1,5,5
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getPackageName()",1,1,1
"org.eclipse.jdt.internal.eval.VariablesEvaluator.getSource()",1,10,11
"org.eclipse.jdt.internal.eval.VariablesEvaluator.numberOfCRs(char[])",2,2,6
"org.eclipse.jdt.internal.eval.VariablesInfo.VariablesInfo(char[],char[],ClassFile[],GlobalVariable[],int)",1,1,1
"org.eclipse.jdt.internal.eval.VariablesInfo.indexOf(GlobalVariable)",3,2,3
"org.eclipse.jdt.internal.eval.VariablesInfo.varNamed(char[])",3,2,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.CommentsPreparator(TokenManager,DefaultCodeFormatterOptions,String)",1,1,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.addSubstituteWraps()",4,5,6
"org.eclipse.jdt.internal.formatter.CommentsPreparator.cleanupHTMLElement(int,int,boolean)",3,6,7
"org.eclipse.jdt.internal.formatter.CommentsPreparator.commentToLines(Token,int)",2,13,25
"org.eclipse.jdt.internal.formatter.CommentsPreparator.disableFormatting(int,int)",1,6,6
"org.eclipse.jdt.internal.formatter.CommentsPreparator.disableFormattingExclusively(int,int)",1,3,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.endVisit(Javadoc)",2,4,5
"org.eclipse.jdt.internal.formatter.CommentsPreparator.endVisit(TagElement)",1,3,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.findCommentLineIndent(int)",3,3,7
"org.eclipse.jdt.internal.formatter.CommentsPreparator.findStringLiteralsInLine(int)",3,3,4
"org.eclipse.jdt.internal.formatter.CommentsPreparator.finishUp()",1,2,2
"org.eclipse.jdt.internal.formatter.CommentsPreparator.formatCode(int,int)",2,2,2
"org.eclipse.jdt.internal.formatter.CommentsPreparator.getCodeToFormat(int,int,StringBuilder,int[])",7,28,33
"org.eclipse.jdt.internal.formatter.CommentsPreparator.getCommentCodeFormatter()",1,2,2
"org.eclipse.jdt.internal.formatter.CommentsPreparator.getHtmlEntityChar(String)",6,4,8
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleBlockComment(int)",2,5,10
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleBreakAfterTag(int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleBreakBeforeTag(int,int,boolean)",1,2,2
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleFormatCodeTag(int,int,boolean)",2,6,7
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleFormatOnOffTags(Token)",2,5,8
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleHtml(TagElement)",4,14,18
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleLineComment(int)",5,11,17
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleNLSTags(Token,int)",2,7,8
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleNoFormatTag(int,int,boolean)",1,4,5
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleOtherTag(int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleReference(ASTNode)",1,4,5
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleSeparateLineTag(int,int)",1,2,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleStringLiterals(String,int)",1,3,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.handleWhitespaceAround(int)",1,22,32
"org.eclipse.jdt.internal.formatter.CommentsPreparator.noSubstituteWrapping(int,int)",1,3,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.preVisit2(ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.CommentsPreparator.preserveWhitespace(Token,int)",3,8,9
"org.eclipse.jdt.internal.formatter.CommentsPreparator.splitToken(Token,int,int)",1,3,4
"org.eclipse.jdt.internal.formatter.CommentsPreparator.substituteWrapIfTouching(int)",1,3,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.tokenEndingAt(int)",2,1,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.tokenStartingAt(int)",2,1,3
"org.eclipse.jdt.internal.formatter.CommentsPreparator.tokenizeLineComment(Token)",3,12,13
"org.eclipse.jdt.internal.formatter.CommentsPreparator.tokenizeMultilineComment(Token)",9,25,42
"org.eclipse.jdt.internal.formatter.CommentsPreparator.translateFormattedTokens(int,List<Token>,int[],HashMap<Token, Token>)",1,8,13
"org.eclipse.jdt.internal.formatter.CommentsPreparator.visit(BlockComment)",1,1,1
"org.eclipse.jdt.internal.formatter.CommentsPreparator.visit(Javadoc)",3,5,9
"org.eclipse.jdt.internal.formatter.CommentsPreparator.visit(LineComment)",1,1,1
"org.eclipse.jdt.internal.formatter.CommentsPreparator.visit(MemberRef)",1,1,1
"org.eclipse.jdt.internal.formatter.CommentsPreparator.visit(MethodRef)",1,1,1
"org.eclipse.jdt.internal.formatter.CommentsPreparator.visit(TagElement)",2,12,19
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter(DefaultCodeFormatterOptions)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter(DefaultCodeFormatterOptions,Map<String, String>)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.DefaultCodeFormatter(Map<String, String>)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.canFormatComment(int,int)",5,2,6
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.createIndentationString(int)",2,1,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.findHeader()",1,3,3
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(int,String,IRegion[],int,String)",4,4,6
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(int,String,int,int,int,String)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatComments(String,int,IRegion[])",3,14,18
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.getOldCommentFormatOption(Map<String, String>)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.init(String)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.initOptions(DefaultCodeFormatterOptions,Map<String, String>)",1,3,4
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.parseSourceCode(ASTParser,int,boolean)",4,2,5
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.parseSourceCode(int)",8,7,9
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.prepareComments()",1,2,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.prepareFormattedCode(String,int)",3,2,4
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.prepareLineBreaks()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.prepareSpaces()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.prepareWraps(int)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.regionsSatisfiesPreconditions(IRegion[],int)",6,6,11
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.setOptions(Map<String, String>)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.tokenizeSource()",3,3,4
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.updateWorkingOptions(int,String,int)",1,4,6
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.DefaultCodeFormatterOptions()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.DefaultCodeFormatterOptions(Map<String, String>)",2,1,2
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getAlignment(int)",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getDefaultSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getEclipseDefaultSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getJavaConventionsSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.getMap()",2,2,234
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.set(Map<String, String>)",1,275,389
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.setDefaultSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.setDeprecatedOptions(Map<String, String>)",1,16,20
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.setEclipseDefaultSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.setJavaConventionsSettings()",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.LineBreaksPreparator(TokenManager,DefaultCodeFormatterOptions)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.breakLineBefore(ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.finishUp()",1,2,2
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.handleAnnotation(Annotation)",1,9,12
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.handleBodyDeclarations(List<BodyDeclaration>)",1,4,6
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.handleBracePosition(Token,int,String)",1,5,5
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.handleBracedCode(ASTNode,ASTNode,String,boolean,boolean)",3,5,7
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.handleEmptyLinesIndentation(int)",4,5,11
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.handleLoopBody(Statement)",1,2,4
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.indent(ASTNode)",1,3,4
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.preVisit2(ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.sameChunk(BodyDeclaration,BodyDeclaration)",4,1,8
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(AnnotationTypeDeclaration)",1,2,2
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(AnnotationTypeMemberDeclaration)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(AnonymousClassDeclaration)",1,2,2
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(ArrayInitializer)",1,7,8
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(Block)",4,6,12
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(CatchClause)",1,2,2
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(CompilationUnit)",1,6,6
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(DoStatement)",1,2,4
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(EnumDeclaration)",4,8,9
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(ForStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(IfStatement)",1,5,12
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(ImportDeclaration)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(LabeledStatement)",1,2,2
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(MethodDeclaration)",2,3,4
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(Modifier)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(PackageDeclaration)",1,3,3
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(SingleVariableDeclaration)",1,2,2
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(SwitchStatement)",3,13,17
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(TryStatement)",1,3,3
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(TypeDeclaration)",2,1,2
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(VariableDeclarationExpression)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.LineBreaksPreparator.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.SpacePreparator(TokenManager,DefaultCodeFormatterOptions)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.endVisit(SingleVariableDeclaration)",1,3,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.finishUp()",2,7,10
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleAnnotation(Annotation,boolean)",1,4,5
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleCommas(List<? extends ASTNode>,boolean,boolean)",1,3,4
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleEmptyBrackets(ASTNode,boolean)",2,3,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleEmptyParens(ASTNode,boolean)",2,3,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleInvocation(ASTNode,ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleInvocation(ASTNode,ASTNode,ASTNode)",1,4,4
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleOperator(String,ASTNode,boolean,boolean)",1,2,4
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleToken(ASTNode,int,boolean,boolean)",1,2,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleToken(Token,boolean,boolean)",1,3,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleTokenAfter(ASTNode,int,boolean,boolean)",1,6,9
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleTokenBefore(ASTNode,int,boolean,boolean)",1,2,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleTypeArguments(List<Type>)",2,1,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.handleTypeParameters(List<TypeParameter>)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.preVisit2(ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(AnnotationTypeDeclaration)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(AnnotationTypeMemberDeclaration)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(AnonymousClassDeclaration)",1,1,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ArrayAccess)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ArrayCreation)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ArrayInitializer)",1,11,11
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ArrayType)",1,2,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(AssertStatement)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(Assignment)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(Block)",3,2,6
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(CastExpression)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(CatchClause)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ClassInstanceCreation)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(CreationReference)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(Dimension)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(DoStatement)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(EnhancedForStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(EnumConstantDeclaration)",4,8,9
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(EnumDeclaration)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ExpressionMethodReference)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ForStatement)",1,1,5
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(IfStatement)",1,4,4
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(InfixExpression)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(InstanceofExpression)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(IntersectionType)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(LabeledStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(LambdaExpression)",1,3,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(MarkerAnnotation)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(MemberValuePair)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(MethodDeclaration)",1,6,15
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(MethodInvocation)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ParameterizedType)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ParenthesizedExpression)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(PostfixExpression)",1,2,4
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(PrefixExpression)",1,3,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ReturnStatement)",1,4,4
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(SingleMemberAnnotation)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(SuperMethodReference)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(SwitchCase)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(SwitchStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(SynchronizedStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(ThrowStatement)",1,3,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(TryStatement)",5,5,6
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(TypeDeclaration)",2,3,4
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(TypeMethodReference)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(TypeParameter)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(UnionType)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(VariableDeclarationExpression)",1,3,3
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(VariableDeclarationFragment)",1,2,2
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(WhileStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.SpacePreparator.visit(WildcardType)",1,2,2
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.TextEditsBuilder(String,IRegion[],TokenManager,DefaultCodeFormatterOptions)",1,1,1
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.TextEditsBuilder(TextEditsBuilder)",1,1,1
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.adaptRegions(IRegion[])",2,6,15
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.adaptReplaceText(String,int,boolean,int)",12,25,37
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.appendIndentationString(StringBuilder,int,int,int,int)",2,2,8
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.bufferAlign(Token,int)",3,8,14
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.bufferIndent(Token,int)",1,4,6
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.bufferLineSeparator(Token,boolean)",7,8,16
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.bufferWhitespaceBefore(Token,int)",1,11,13
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.checkRegions(int,int)",5,2,5
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.flushBuffer(int)",1,4,4
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.getEdits()",1,1,1
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.getReplaceEdit(int,int,String)",1,8,8
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.handleMultiLineComment(Token,int)",1,1,2
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.handleSingleLineComment(Token,int)",2,10,10
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.isOnlyWhitespace(String)",3,2,3
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.processComment(Token)",1,2,2
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.setAlignChar(int)",1,1,1
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.token(Token,int)",1,10,11
"org.eclipse.jdt.internal.formatter.TextEditsBuilder.traverseInternalStructure(Token,int)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.Token(Token)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.Token(Token,int,int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.Token(int,int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.WrapPolicy.WrapPolicy(int,int,boolean)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.WrapPolicy.WrapPolicy(int,int,int,float,boolean,boolean,int,boolean)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.WrapPolicy.isTopPriority()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.breakAfter()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.breakBefore()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.clearLineBreaksAfter()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.clearLineBreaksBefore()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.clearSpaceAfter()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.clearSpaceBefore()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.countChars()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.fromCurrent(Scanner,int)",4,1,5
"org.eclipse.jdt.internal.formatter.Token.getAlign()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.getIndent()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.getInternalStructure()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.getLineBreaksAfter()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.getLineBreaksBefore()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.getNLSTag()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.getWrapPolicy()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.hasNLSTag()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.indent()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.isComment()",2,2,2
"org.eclipse.jdt.internal.formatter.Token.isNextLineOnWrap()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.isSpaceAfter()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.isSpaceBefore()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.isToEscape()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.isWrappable()",1,1,2
"org.eclipse.jdt.internal.formatter.Token.putLineBreaksAfter(int)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.putLineBreaksBefore(int)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.setAlign(int)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.setIndent(int)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.setInternalStructure(List<Token>)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.setNLSTag(Token)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.setNextLineOnWrap()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.setToEscape(boolean)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.setWrapPolicy(WrapPolicy)",1,1,1
"org.eclipse.jdt.internal.formatter.Token.spaceAfter()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.spaceBefore()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.toString()",1,1,1
"org.eclipse.jdt.internal.formatter.Token.toString(String)",2,1,2
"org.eclipse.jdt.internal.formatter.Token.unindent()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.TokenManager(List<Token>,String,DefaultCodeFormatterOptions)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.TokenManager(List<Token>,TokenManager)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.addDisableFormatTokenPair(Token,Token)",1,1,2
"org.eclipse.jdt.internal.formatter.TokenManager.addNLSAlignIndex(int,int)",1,1,2
"org.eclipse.jdt.internal.formatter.TokenManager.applyFormatOff()",2,4,5
"org.eclipse.jdt.internal.formatter.TokenManager.charAt(int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.countLineBreaksBetween(String,int,int)",2,5,8
"org.eclipse.jdt.internal.formatter.TokenManager.countLineBreaksBetween(Token,Token)",1,2,3
"org.eclipse.jdt.internal.formatter.TokenManager.findFirstTokenInLine(int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.findFirstTokenInLine(int,boolean)",3,4,5
"org.eclipse.jdt.internal.formatter.TokenManager.findIndex(int,int,boolean)",3,5,12
"org.eclipse.jdt.internal.formatter.TokenManager.findSourcePositionInLine(int)",1,3,4
"org.eclipse.jdt.internal.formatter.TokenManager.firstIndexAfter(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.firstIndexBefore(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.firstIndexIn(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.firstTokenAfter(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.firstTokenBefore(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.firstTokenIn(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.get(int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.getEscapedTokenString(Token)",4,5,5
"org.eclipse.jdt.internal.formatter.TokenManager.getLength(Token,int)",1,5,6
"org.eclipse.jdt.internal.formatter.TokenManager.getLength(int,int,int)",2,3,6
"org.eclipse.jdt.internal.formatter.TokenManager.getNLSAlign(int)",2,1,3
"org.eclipse.jdt.internal.formatter.TokenManager.getPositionInLine(int)",3,3,4
"org.eclipse.jdt.internal.formatter.TokenManager.getSource()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.getSourceLength()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.indexOf(Token)",2,1,2
"org.eclipse.jdt.internal.formatter.TokenManager.insert(int,Token)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.isGuardClause(Block)",4,2,6
"org.eclipse.jdt.internal.formatter.TokenManager.isInHeader(int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.iterator()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.lastIndexIn(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.lastTokenIn(ASTNode,int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.remove(int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.setHeaderEndIndex(int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.size()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.toIndent(int,boolean)",3,1,5
"org.eclipse.jdt.internal.formatter.TokenManager.toString(ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.toString(Token)",2,2,2
"org.eclipse.jdt.internal.formatter.TokenManager.toString(int)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenManager.tokenInside(ASTNode,int)",1,2,2
"org.eclipse.jdt.internal.formatter.TokenManager.traverse(int,TokenTraverser)",1,1,1
"org.eclipse.jdt.internal.formatter.TokenTraverser.getCurrent()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenTraverser.getLineBreaksAfter()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenTraverser.getLineBreaksBefore()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenTraverser.getNext()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenTraverser.getPrevious()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenTraverser.initTraverse(List<Token>,int)",2,6,7
"org.eclipse.jdt.internal.formatter.TokenTraverser.isSpaceAfter()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenTraverser.isSpaceBefore()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenTraverser.structureChanged()",1,1,1
"org.eclipse.jdt.internal.formatter.TokenTraverser.traverse(List<Token>,int)",3,10,11
"org.eclipse.jdt.internal.formatter.linewrap.CommentWrapExecutor.CommentWrapExecutor(TokenManager,DefaultCodeFormatterOptions)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.CommentWrapExecutor.getLinesCount()",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.CommentWrapExecutor.shouldWrap()",7,8,15
"org.eclipse.jdt.internal.formatter.linewrap.CommentWrapExecutor.token(Token,int)",1,12,16
"org.eclipse.jdt.internal.formatter.linewrap.CommentWrapExecutor.wrapLineComment(Token,int)",5,13,24
"org.eclipse.jdt.internal.formatter.linewrap.CommentWrapExecutor.wrapMultiLineComment(Token,int,boolean,boolean)",3,6,10
"org.eclipse.jdt.internal.formatter.linewrap.FieldAligner.FieldAligner(TokenManager)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.FieldAligner.PositionCounter.PositionCounter()",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.FieldAligner.PositionCounter.findMaxPosition(int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.FieldAligner.PositionCounter.token(Token,int)",2,4,6
"org.eclipse.jdt.internal.formatter.linewrap.FieldAligner.alignComments()",2,9,12
"org.eclipse.jdt.internal.formatter.linewrap.FieldAligner.alignFields(ArrayList<FieldDeclaration>)",2,7,8
"org.eclipse.jdt.internal.formatter.linewrap.FieldAligner.prepareAlign(List<FieldDeclaration>)",1,3,3
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.LineAnalyzer.LineAnalyzer(TokenManager,DefaultCodeFormatterOptions)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.LineAnalyzer.analyzeLine(int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.LineAnalyzer.getLastPosition()",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.LineAnalyzer.token(Token,int)",3,13,19
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.NLSTagHandler.NLSTagHandler()",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.NLSTagHandler.token(Token,int)",10,15,19
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.WrapExecutor(TokenManager,DefaultCodeFormatterOptions)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.WrapInfo.WrapInfo()",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.WrapInfo.WrapInfo(int,int)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.WrapInfo.equals(Object)",6,1,6
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.WrapInfo.hashCode()",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.WrapResult.WrapResult(double,int,WrapInfo)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.executeWraps()",11,10,14
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.findWraps(int,int)",12,10,37
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.findWrapsCached(int,int)",1,3,3
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.getPenalty(WrapPolicy)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.getWrapIndent(Token)",4,8,11
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.getWrapPenalty(int,int,int,int,WrapResult)",4,13,22
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.handleOnColumnIndent(int,WrapPolicy)",4,4,10
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.handleTopPriorityWraps(int)",9,12,17
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.shouldForceWrap(Token,int)",3,4,4
"org.eclipse.jdt.internal.formatter.linewrap.WrapExecutor.toArray(List<Integer>)",2,1,3
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.WrapPreparator(TokenManager,DefaultCodeFormatterOptions,int)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.doHandleWrap(int,ASTNode)",3,11,15
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.findTokensToWrap(InfixExpression,int)",1,13,15
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.finishUp(ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.fixEnumConstantIndents(ASTNode)",1,2,2
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.forceContinuousWrapping(ASTNode,int)",1,6,6
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.getLineBreaksToPreserve(Token,Token,boolean)",2,7,13
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.getWrapPolicy(int,float,boolean,ASTNode)",3,5,16
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.handleArguments(List<? extends ASTNode>,int)",1,5,5
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.handleVariableDeclarations(List<VariableDeclarationFragment>)",1,3,3
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.handleWrap(int)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.handleWrap(int,ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.handleWrap(int,float)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.postVisit(ASTNode)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.preVisit2(ASTNode)",1,3,4
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.preserveExistingLineBreaks()",2,8,11
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.samePrecedence(InfixExpression,InfixExpression)",2,1,3
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.setTokenWrapPolicy(int,WrapPolicy,boolean)",7,8,16
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(AnnotationTypeDeclaration)",1,2,2
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(AnonymousClassDeclaration)",1,2,2
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(ArrayInitializer)",1,5,6
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(Assignment)",1,1,2
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(ClassInstanceCreation)",1,2,3
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(CompilationUnit)",1,2,2
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(ConditionalExpression)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(ConstructorInvocation)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(EnumConstantDeclaration)",1,2,2
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(EnumDeclaration)",1,6,6
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(FieldDeclaration)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(IfStatement)",1,6,8
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(InfixExpression)",5,3,8
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(LambdaExpression)",1,3,3
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(MethodDeclaration)",1,11,13
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(MethodInvocation)",1,6,6
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(NormalAnnotation)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(SuperConstructorInvocation)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(SuperMethodInvocation)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(TryStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(TypeDeclaration)",1,5,6
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(UnionType)",1,5,5
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(VariableDeclarationFragment)",1,2,2
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.visit(VariableDeclarationStatement)",1,1,1
"org.eclipse.jdt.internal.formatter.linewrap.WrapPreparator.wrapComments()",1,7,10
"org.eclipse.jdt.internal.formatter.old.CodeFormatter.CodeFormatter(Map)",1,2,2
"org.eclipse.jdt.internal.formatter.old.CodeFormatter.format(String,int,int[],String)",6,19,22

