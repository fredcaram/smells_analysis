Method,ev(G),iv(G),v(G)
"org.apache.xerces.dom.AttrImpl.AttrImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.AttrImpl.AttrImpl(DocumentImpl,String,String)",1,2,2
"org.apache.xerces.dom.AttrImpl.getElement()",1,1,1
"org.apache.xerces.dom.AttrImpl.getLocalName()",1,2,2
"org.apache.xerces.dom.AttrImpl.getName()",1,2,2
"org.apache.xerces.dom.AttrImpl.getNamespaceURI()",1,2,2
"org.apache.xerces.dom.AttrImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.AttrImpl.getNodeValue()",1,1,1
"org.apache.xerces.dom.AttrImpl.getOwnerElement()",1,1,1
"org.apache.xerces.dom.AttrImpl.getParentNode()",1,1,1
"org.apache.xerces.dom.AttrImpl.getPrefix()",1,2,2
"org.apache.xerces.dom.AttrImpl.getSpecified()",1,2,2
"org.apache.xerces.dom.AttrImpl.getValue()",1,2,2
"org.apache.xerces.dom.AttrImpl.setNodeValue(String)",1,1,1
"org.apache.xerces.dom.AttrImpl.setPrefix(String)",2,2,3
"org.apache.xerces.dom.AttrImpl.setSpecified(boolean)",1,2,2
"org.apache.xerces.dom.AttrImpl.setValue(String)",2,7,9
"org.apache.xerces.dom.AttrImpl.toString()",1,1,1
"org.apache.xerces.dom.CDATASectionImpl.CDATASectionImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.CDATASectionImpl.cloneNode(boolean)",1,1,1
"org.apache.xerces.dom.CDATASectionImpl.getNodeName()",1,1,1
"org.apache.xerces.dom.CDATASectionImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.CharacterDataImpl.CharacterDataImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.CharacterDataImpl.appendData(String)",2,2,3
"org.apache.xerces.dom.CharacterDataImpl.deleteData(int,int)",3,3,6
"org.apache.xerces.dom.CharacterDataImpl.getChildNodes()",1,1,2
"org.apache.xerces.dom.CharacterDataImpl.getData()",1,2,2
"org.apache.xerces.dom.CharacterDataImpl.getLength()",1,2,2
"org.apache.xerces.dom.CharacterDataImpl.insertData(int,String)",2,2,4
"org.apache.xerces.dom.CharacterDataImpl.replaceData(int,int,String)",1,1,1
"org.apache.xerces.dom.CharacterDataImpl.setData(String)",1,1,1
"org.apache.xerces.dom.CharacterDataImpl.substringData(int,int)",2,2,5
"org.apache.xerces.dom.CommentImpl.CommentImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.CommentImpl.cloneNode(boolean)",1,1,1
"org.apache.xerces.dom.CommentImpl.getNodeName()",1,1,1
"org.apache.xerces.dom.CommentImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.DOMExceptionImpl.DOMExceptionImpl(short,String)",1,1,1
"org.apache.xerces.dom.DOMImplementationImpl.createDocument(String,String,DocumentType)",2,1,2
"org.apache.xerces.dom.DOMImplementationImpl.createDocumentType(String,String,String)",2,1,2
"org.apache.xerces.dom.DOMImplementationImpl.getDOMImplementation()",1,1,1
"org.apache.xerces.dom.DOMImplementationImpl.hasFeature(String,String)",1,3,3
"org.apache.xerces.dom.DeepNodeListImpl.DeepNodeListImpl(NodeImpl,String)",1,1,1
"org.apache.xerces.dom.DeepNodeListImpl.DeepNodeListImpl(NodeImpl,String,String)",1,3,4
"org.apache.xerces.dom.DeepNodeListImpl.getLength()",1,1,1
"org.apache.xerces.dom.DeepNodeListImpl.item(int)",2,6,7
"org.apache.xerces.dom.DeepNodeListImpl.nextMatchingElementAfter(Node)",7,14,16
"org.apache.xerces.dom.DeferredAttrImpl.DeferredAttrImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredAttrImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredAttrImpl.synchronizeChildren()",1,2,4
"org.apache.xerces.dom.DeferredAttrImpl.synchronizeData()",1,2,2
"org.apache.xerces.dom.DeferredCDATASectionImpl.DeferredCDATASectionImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredCDATASectionImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredCDATASectionImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.DeferredCommentImpl.DeferredCommentImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredCommentImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredCommentImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.DeferredDocumentImpl(StringPool)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.DeferredDocumentImpl(StringPool,boolean)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.DeferredDocumentImpl(StringPool,boolean,boolean)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.IntVector.addElement(int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.IntVector.elementAt(int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.IntVector.ensureCapacity(int)",1,3,3
"org.apache.xerces.dom.DeferredDocumentImpl.IntVector.removeAllElements()",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.IntVector.size()",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.appendChild(int,int)",1,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.binarySearch(int[],int,int,int)",3,7,10
"org.apache.xerces.dom.DeferredDocumentImpl.createAttribute(int,int,boolean)",1,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.createCDATASection(int,boolean)",1,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.createComment(int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.createDocument()",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.createDocumentType(int,int,int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.createElement(int,XMLAttrList,int)",1,3,4
"org.apache.xerces.dom.DeferredDocumentImpl.createElementDefinition(int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.createEntity(int,int,int,int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.createEntityReference(int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.createNode(short)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.createNotation(int,int,int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.createProcessingInstruction(int,int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.createTextNode(int,boolean)",1,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.ensureCapacity(int,int)",1,2,4
"org.apache.xerces.dom.DeferredDocumentImpl.getAttributeList(int)",2,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.getFirstChild(int)",2,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.getLastChild(int)",4,1,8
"org.apache.xerces.dom.DeferredDocumentImpl.getNamespacesEnabled()",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.getNextSibling(int)",2,1,4
"org.apache.xerces.dom.DeferredDocumentImpl.getNodeName(int)",2,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.getNodeNameString(int)",3,1,3
"org.apache.xerces.dom.DeferredDocumentImpl.getNodeObject(int)",4,9,23
"org.apache.xerces.dom.DeferredDocumentImpl.getNodeType(int)",2,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.getNodeValue(int)",2,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.getNodeValueString(int)",3,1,3
"org.apache.xerces.dom.DeferredDocumentImpl.getParentNode(int)",2,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.getPreviousSibling(int)",4,1,7
"org.apache.xerces.dom.DeferredDocumentImpl.getRealNextSibling(int)",2,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.getStringPool()",1,1,1
"org.apache.xerces.dom.DeferredDocumentImpl.insertBefore(int,int,int)",2,2,4
"org.apache.xerces.dom.DeferredDocumentImpl.lookupElementDefinition(int)",6,4,6
"org.apache.xerces.dom.DeferredDocumentImpl.print()",1,4,4
"org.apache.xerces.dom.DeferredDocumentImpl.print(int[],int,int,int,int)",1,6,6
"org.apache.xerces.dom.DeferredDocumentImpl.putIdentifier(int,int)",1,3,4
"org.apache.xerces.dom.DeferredDocumentImpl.putIdentifier0(String,Element)",1,2,3
"org.apache.xerces.dom.DeferredDocumentImpl.setAsFirstChild(int,int)",1,1,2
"org.apache.xerces.dom.DeferredDocumentImpl.setAttributeNode(int,int)",3,2,7
"org.apache.xerces.dom.DeferredDocumentImpl.synchronizeChildren()",1,2,6
"org.apache.xerces.dom.DeferredDocumentImpl.synchronizeData()",8,8,10
"org.apache.xerces.dom.DeferredDocumentTypeImpl.DeferredDocumentTypeImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredDocumentTypeImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredDocumentTypeImpl.synchronizeChildren()",2,9,9
"org.apache.xerces.dom.DeferredDocumentTypeImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.DeferredElementDefinitionImpl.DeferredElementDefinitionImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredElementDefinitionImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredElementDefinitionImpl.synchronizeChildren()",1,2,2
"org.apache.xerces.dom.DeferredElementDefinitionImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.DeferredElementImpl.DeferredElementImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredElementImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredElementImpl.synchronizeChildren()",1,2,4
"org.apache.xerces.dom.DeferredElementImpl.synchronizeData()",1,4,4
"org.apache.xerces.dom.DeferredEntityImpl.DeferredEntityImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredEntityImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredEntityImpl.synchronizeChildren()",1,2,2
"org.apache.xerces.dom.DeferredEntityImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.DeferredEntityReferenceImpl.DeferredEntityReferenceImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredEntityReferenceImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredEntityReferenceImpl.synchronizeChildren()",1,7,7
"org.apache.xerces.dom.DeferredEntityReferenceImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.DeferredNotationImpl.DeferredNotationImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredNotationImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredNotationImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.DeferredProcessingInstructionImpl.DeferredProcessingInstructionImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredProcessingInstructionImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredProcessingInstructionImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.DeferredTextImpl.DeferredTextImpl(DeferredDocumentImpl,int)",1,1,1
"org.apache.xerces.dom.DeferredTextImpl.getNodeIndex()",1,1,1
"org.apache.xerces.dom.DeferredTextImpl.synchronizeData()",1,6,8
"org.apache.xerces.dom.DocumentFragmentImpl.DocumentFragmentImpl()",1,1,1
"org.apache.xerces.dom.DocumentFragmentImpl.DocumentFragmentImpl(DocumentImpl)",1,1,1
"org.apache.xerces.dom.DocumentFragmentImpl.getNodeName()",1,1,1
"org.apache.xerces.dom.DocumentFragmentImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.DocumentFragmentImpl.setNodeValue(String)",1,1,1
"org.apache.xerces.dom.DocumentImpl.DocumentImpl()",1,1,1
"org.apache.xerces.dom.DocumentImpl.DocumentImpl(DocumentType)",1,1,1
"org.apache.xerces.dom.DocumentImpl.DocumentImpl(DocumentType,boolean)",1,1,2
"org.apache.xerces.dom.DocumentImpl.DocumentImpl(boolean)",1,1,1
"org.apache.xerces.dom.DocumentImpl.cloneNode(boolean)",1,3,3
"org.apache.xerces.dom.DocumentImpl.createAttribute(String)",2,1,2
"org.apache.xerces.dom.DocumentImpl.createAttributeNS(String,String)",2,2,3
"org.apache.xerces.dom.DocumentImpl.createCDATASection(String)",1,1,1
"org.apache.xerces.dom.DocumentImpl.createComment(String)",1,1,1
"org.apache.xerces.dom.DocumentImpl.createDocumentFragment()",1,1,1
"org.apache.xerces.dom.DocumentImpl.createDocumentType(String,String,String)",2,1,2
"org.apache.xerces.dom.DocumentImpl.createElement(String)",2,1,2
"org.apache.xerces.dom.DocumentImpl.createElementDefinition(String)",1,1,1
"org.apache.xerces.dom.DocumentImpl.createElementNS(String,String)",2,2,3
"org.apache.xerces.dom.DocumentImpl.createEntity(String)",1,1,1
"org.apache.xerces.dom.DocumentImpl.createEntityReference(String)",2,1,2
"org.apache.xerces.dom.DocumentImpl.createEvent(String)",3,1,3
"org.apache.xerces.dom.DocumentImpl.createNodeIterator(Node,int,NodeFilter,boolean)",1,1,2
"org.apache.xerces.dom.DocumentImpl.createNodeIterator(Node,short,NodeFilter)",1,1,1
"org.apache.xerces.dom.DocumentImpl.createNotation(String)",1,1,1
"org.apache.xerces.dom.DocumentImpl.createProcessingInstruction(String,String)",2,1,2
"org.apache.xerces.dom.DocumentImpl.createTextNode(String)",1,1,1
"org.apache.xerces.dom.DocumentImpl.createTreeWalker(Node,int,NodeFilter,boolean)",2,1,3
"org.apache.xerces.dom.DocumentImpl.createTreeWalker(Node,short,NodeFilter)",1,1,1
"org.apache.xerces.dom.DocumentImpl.getDoctype()",1,2,2
"org.apache.xerces.dom.DocumentImpl.getDocumentElement()",1,2,2
"org.apache.xerces.dom.DocumentImpl.getElementsByTagName(String)",1,1,1
"org.apache.xerces.dom.DocumentImpl.getElementsByTagNameNS(String,String)",1,1,1
"org.apache.xerces.dom.DocumentImpl.getIdentifier(String)",2,2,3
"org.apache.xerces.dom.DocumentImpl.getIdentifiers()",1,2,3
"org.apache.xerces.dom.DocumentImpl.getImplementation()",1,1,1
"org.apache.xerces.dom.DocumentImpl.getNodeIterators()",2,1,2
"org.apache.xerces.dom.DocumentImpl.getNodeName()",1,1,1
"org.apache.xerces.dom.DocumentImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.DocumentImpl.getNodeValue()",1,1,1
"org.apache.xerces.dom.DocumentImpl.getTreeWalkers()",2,1,2
"org.apache.xerces.dom.DocumentImpl.importNode(Node,boolean)",2,21,21
"org.apache.xerces.dom.DocumentImpl.insertBefore(Node,Node)",2,1,7
"org.apache.xerces.dom.DocumentImpl.isKidOK(Node,Node)",2,3,3
"org.apache.xerces.dom.DocumentImpl.isXMLName(String)",5,6,23
"org.apache.xerces.dom.DocumentImpl.putIdentifier(String,Element)",1,3,4
"org.apache.xerces.dom.DocumentImpl.removeChild(Node)",1,1,3
"org.apache.xerces.dom.DocumentImpl.removeIdentifier(String)",2,2,3
"org.apache.xerces.dom.DocumentImpl.removeNodeIterator(NodeIterator)",3,1,3
"org.apache.xerces.dom.DocumentImpl.removeNodeIterators()",1,1,1
"org.apache.xerces.dom.DocumentImpl.removeTreeWalker(TreeWalker)",3,1,3
"org.apache.xerces.dom.DocumentImpl.removeTreeWalkers()",1,1,1
"org.apache.xerces.dom.DocumentImpl.setNodeValue(String)",1,1,1
"org.apache.xerces.dom.DocumentTypeImpl.DocumentTypeImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.DocumentTypeImpl.DocumentTypeImpl(DocumentImpl,String,String,String)",1,1,1
"org.apache.xerces.dom.DocumentTypeImpl.cloneNode(boolean)",1,1,1
"org.apache.xerces.dom.DocumentTypeImpl.getElements()",1,2,2
"org.apache.xerces.dom.DocumentTypeImpl.getEntities()",1,2,2
"org.apache.xerces.dom.DocumentTypeImpl.getName()",1,2,2
"org.apache.xerces.dom.DocumentTypeImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.DocumentTypeImpl.getNotations()",1,2,2
"org.apache.xerces.dom.DocumentTypeImpl.getPublicID()",1,2,2
"org.apache.xerces.dom.DocumentTypeImpl.getSystemID()",1,2,2
"org.apache.xerces.dom.DocumentTypeImpl.setNodeValue(String)",1,1,1
"org.apache.xerces.dom.DocumentTypeImpl.setReadOnly(boolean,boolean)",1,2,2
"org.apache.xerces.dom.ElementDefinitionImpl.ElementDefinitionImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.ElementDefinitionImpl.cloneNode(boolean)",1,1,1
"org.apache.xerces.dom.ElementDefinitionImpl.getAttributes()",1,2,2
"org.apache.xerces.dom.ElementDefinitionImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.ElementImpl.ElementImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.ElementImpl.ElementImpl(DocumentImpl,String,String)",1,2,2
"org.apache.xerces.dom.ElementImpl.cloneNode(boolean)",1,2,2
"org.apache.xerces.dom.ElementImpl.getAttribute(String)",1,3,3
"org.apache.xerces.dom.ElementImpl.getAttributeNS(String,String)",1,3,3
"org.apache.xerces.dom.ElementImpl.getAttributeNode(String)",1,2,2
"org.apache.xerces.dom.ElementImpl.getAttributeNodeNS(String,String)",1,2,2
"org.apache.xerces.dom.ElementImpl.getAttributes()",1,2,2
"org.apache.xerces.dom.ElementImpl.getElementsByTagName(String)",1,1,1
"org.apache.xerces.dom.ElementImpl.getElementsByTagNameNS(String,String)",1,1,1
"org.apache.xerces.dom.ElementImpl.getLocalName()",1,2,2
"org.apache.xerces.dom.ElementImpl.getNamespaceURI()",1,2,2
"org.apache.xerces.dom.ElementImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.ElementImpl.getNodeValue()",1,1,1
"org.apache.xerces.dom.ElementImpl.getPrefix()",1,2,2
"org.apache.xerces.dom.ElementImpl.getTagName()",1,2,2
"org.apache.xerces.dom.ElementImpl.getValue()",1,1,1
"org.apache.xerces.dom.ElementImpl.normalize()",1,6,6
"org.apache.xerces.dom.ElementImpl.removeAttribute(String)",2,3,4
"org.apache.xerces.dom.ElementImpl.removeAttributeNS(String,String)",2,3,4
"org.apache.xerces.dom.ElementImpl.removeAttributeNode(Attr)",3,3,4
"org.apache.xerces.dom.ElementImpl.setAttribute(String,String)",2,2,3
"org.apache.xerces.dom.ElementImpl.setAttributeNS(String,String,String)",2,2,3
"org.apache.xerces.dom.ElementImpl.setAttributeNode(Attr)",3,2,4
"org.apache.xerces.dom.ElementImpl.setAttributeNodeNS(Attr)",3,2,4
"org.apache.xerces.dom.ElementImpl.setNodeValue(String)",1,1,1
"org.apache.xerces.dom.ElementImpl.setPrefix(String)",2,2,3
"org.apache.xerces.dom.ElementImpl.setReadOnly(boolean,boolean)",1,2,2
"org.apache.xerces.dom.ElementImpl.setupDefaultAttributes()",1,3,3
"org.apache.xerces.dom.ElementImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.EntityImpl.EntityImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.EntityImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.EntityImpl.getNodeValue()",1,1,1
"org.apache.xerces.dom.EntityImpl.getNotationName()",1,2,2
"org.apache.xerces.dom.EntityImpl.getPublicId()",1,2,2
"org.apache.xerces.dom.EntityImpl.getSystemId()",1,2,2
"org.apache.xerces.dom.EntityImpl.setNodeValue(String)",1,1,1
"org.apache.xerces.dom.EntityImpl.setNotationName(String)",1,2,2
"org.apache.xerces.dom.EntityImpl.setPublicId(String)",1,2,2
"org.apache.xerces.dom.EntityImpl.setSystemId(String)",1,2,2
"org.apache.xerces.dom.EntityReferenceImpl.EntityReferenceImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.EntityReferenceImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.EntityReferenceImpl.setNodeValue(String)",1,1,1
"org.apache.xerces.dom.EntityReferenceImpl.setReadOnly(boolean,boolean)",1,1,1
"org.apache.xerces.dom.LCount.lookup(String)",1,2,2
"org.apache.xerces.dom.NamedNodeMapImpl.NamedNodeMapImpl(Document,NamedNodeMapImpl)",1,1,1
"org.apache.xerces.dom.NamedNodeMapImpl.NamedNodeMapImpl(ElementImpl,NamedNodeMapImpl)",1,1,1
"org.apache.xerces.dom.NamedNodeMapImpl.cloneMap()",1,3,3
"org.apache.xerces.dom.NamedNodeMapImpl.findNamePoint(String)",1,1,1
"org.apache.xerces.dom.NamedNodeMapImpl.findNamePoint(String,String)",4,6,11
"org.apache.xerces.dom.NamedNodeMapImpl.getLength()",1,2,2
"org.apache.xerces.dom.NamedNodeMapImpl.getNamedItem(String)",1,2,2
"org.apache.xerces.dom.NamedNodeMapImpl.getNamedItemNS(String,String)",1,2,2
"org.apache.xerces.dom.NamedNodeMapImpl.item(int)",1,3,3
"org.apache.xerces.dom.NamedNodeMapImpl.reconcileDefaults()",1,12,16
"org.apache.xerces.dom.NamedNodeMapImpl.removeNamedItem(String)",1,1,1
"org.apache.xerces.dom.NamedNodeMapImpl.removeNamedItemNS(String,String)",2,7,11
"org.apache.xerces.dom.NamedNodeMapImpl.setNamedItem(Node)",3,4,12
"org.apache.xerces.dom.NamedNodeMapImpl.setReadOnly(boolean,boolean)",1,3,4
"org.apache.xerces.dom.NodeImpl.LEntry.LEntry(String,EventListener,boolean)",1,1,1
"org.apache.xerces.dom.NodeImpl.NodeImpl()",1,1,1
"org.apache.xerces.dom.NodeImpl.NodeImpl(DocumentImpl,String,String)",1,1,1
"org.apache.xerces.dom.NodeImpl.addEventListener(String,EventListener,boolean)",2,3,6
"org.apache.xerces.dom.NodeImpl.appendChild(Node)",1,1,1
"org.apache.xerces.dom.NodeImpl.changed()",1,2,2
"org.apache.xerces.dom.NodeImpl.cloneNode(boolean)",1,5,6
"org.apache.xerces.dom.NodeImpl.dispatchAggregateEvents(AttrImpl,String)",3,8,9
"org.apache.xerces.dom.NodeImpl.dispatchAggregateEvents(EnclosingAttr)",1,2,2
"org.apache.xerces.dom.NodeImpl.dispatchEvent(Event)",11,22,34
"org.apache.xerces.dom.NodeImpl.dispatchEventToSubtree(NodeImpl,Event)",3,4,6
"org.apache.xerces.dom.NodeImpl.finalize()",1,3,4
"org.apache.xerces.dom.NodeImpl.getAttributes()",1,1,1
"org.apache.xerces.dom.NodeImpl.getChildNodes()",1,2,2
"org.apache.xerces.dom.NodeImpl.getEnclosingAttr()",6,4,6
"org.apache.xerces.dom.NodeImpl.getFirstChild()",1,2,2
"org.apache.xerces.dom.NodeImpl.getLastChild()",1,2,2
"org.apache.xerces.dom.NodeImpl.getLength()",1,1,2
"org.apache.xerces.dom.NodeImpl.getLocalName()",1,2,2
"org.apache.xerces.dom.NodeImpl.getNamespaceURI()",1,1,1
"org.apache.xerces.dom.NodeImpl.getNextSibling()",1,1,1
"org.apache.xerces.dom.NodeImpl.getNodeName()",1,2,2
"org.apache.xerces.dom.NodeImpl.getNodeValue()",1,2,2
"org.apache.xerces.dom.NodeImpl.getOwnerDocument()",1,1,1
"org.apache.xerces.dom.NodeImpl.getParentNode()",1,1,1
"org.apache.xerces.dom.NodeImpl.getPrefix()",1,1,1
"org.apache.xerces.dom.NodeImpl.getPreviousSibling()",1,1,1
"org.apache.xerces.dom.NodeImpl.getReadOnly()",1,2,2
"org.apache.xerces.dom.NodeImpl.getUserData()",1,1,1
"org.apache.xerces.dom.NodeImpl.hasChildNodes()",1,2,2
"org.apache.xerces.dom.NodeImpl.insertBefore(Node,Node)",1,1,1
"org.apache.xerces.dom.NodeImpl.internalInsertBefore(Node,Node,int)",9,23,34
"org.apache.xerces.dom.NodeImpl.internalRemoveChild(Node,int)",3,14,19
"org.apache.xerces.dom.NodeImpl.item(int)",1,1,3
"org.apache.xerces.dom.NodeImpl.removeChild(Node)",1,1,1
"org.apache.xerces.dom.NodeImpl.removeEventListener(String,EventListener,boolean)",4,8,11
"org.apache.xerces.dom.NodeImpl.replaceChild(Node,Node)",1,4,4
"org.apache.xerces.dom.NodeImpl.setNodeValue(String)",2,6,7
"org.apache.xerces.dom.NodeImpl.setPrefix(String)",1,1,1
"org.apache.xerces.dom.NodeImpl.setReadOnly(boolean,boolean)",1,6,6
"org.apache.xerces.dom.NodeImpl.setUserData(Object)",1,1,1
"org.apache.xerces.dom.NodeImpl.supports(String,String)",1,1,1
"org.apache.xerces.dom.NodeImpl.synchronizeChildren()",1,1,1
"org.apache.xerces.dom.NodeImpl.synchronizeData()",1,1,1
"org.apache.xerces.dom.NodeImpl.toString()",1,1,1
"org.apache.xerces.dom.NodeImpl.writeObject(ObjectOutputStream)",1,3,3
"org.apache.xerces.dom.NotationImpl.NotationImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.NotationImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.NotationImpl.getPublicId()",1,2,2
"org.apache.xerces.dom.NotationImpl.getSystemId()",1,2,2
"org.apache.xerces.dom.NotationImpl.setNodeValue(String)",1,1,1
"org.apache.xerces.dom.NotationImpl.setPublicId(String)",2,2,3
"org.apache.xerces.dom.NotationImpl.setSystemId(String)",2,2,3
"org.apache.xerces.dom.ProcessingInstructionImpl.ProcessingInstructionImpl(DocumentImpl,String,String)",1,1,1
"org.apache.xerces.dom.ProcessingInstructionImpl.cloneNode(boolean)",1,2,2
"org.apache.xerces.dom.ProcessingInstructionImpl.getData()",1,2,2
"org.apache.xerces.dom.ProcessingInstructionImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.ProcessingInstructionImpl.getTarget()",1,2,2
"org.apache.xerces.dom.ProcessingInstructionImpl.setData(String)",1,1,1
"org.apache.xerces.dom.TextImpl.TextImpl(DocumentImpl,String)",1,1,1
"org.apache.xerces.dom.TextImpl.cloneNode(boolean)",1,1,1
"org.apache.xerces.dom.TextImpl.getNodeName()",1,1,1
"org.apache.xerces.dom.TextImpl.getNodeType()",1,1,1
"org.apache.xerces.dom.TextImpl.isIgnorableWhitespace()",1,2,2
"org.apache.xerces.dom.TextImpl.setIgnorableWhitespace(boolean)",1,2,2
"org.apache.xerces.dom.TextImpl.splitText(int)",3,4,6
"org.apache.xerces.dom.events.EventImpl.getBubbles()",1,1,1
"org.apache.xerces.dom.events.EventImpl.getCancelable()",1,1,1
"org.apache.xerces.dom.events.EventImpl.getCurrentNode()",1,1,1
"org.apache.xerces.dom.events.EventImpl.getEventPhase()",1,1,1
"org.apache.xerces.dom.events.EventImpl.getTarget()",1,1,1
"org.apache.xerces.dom.events.EventImpl.getType()",1,1,1
"org.apache.xerces.dom.events.EventImpl.initEvent(String,boolean,boolean)",1,1,1
"org.apache.xerces.dom.events.EventImpl.preventDefault()",1,1,1
"org.apache.xerces.dom.events.EventImpl.stopPropagation()",1,1,1
"org.apache.xerces.dom.events.MutationEventImpl.getAttrName()",1,1,1
"org.apache.xerces.dom.events.MutationEventImpl.getNewValue()",1,1,1
"org.apache.xerces.dom.events.MutationEventImpl.getPrevValue()",1,1,1
"org.apache.xerces.dom.events.MutationEventImpl.getRelatedNode()",1,1,1
"org.apache.xerces.dom.events.MutationEventImpl.initMutationEvent(String,boolean,boolean,Node,String,String,String)",1,1,1
"org.apache.xerces.dom.traversal.NodeIteratorImpl.NodeIteratorImpl(DocumentImpl,Node,int,NodeFilter,boolean)",1,1,1
"org.apache.xerces.dom.traversal.NodeIteratorImpl.acceptNode(Node)",2,3,3
"org.apache.xerces.dom.traversal.NodeIteratorImpl.detach()",1,1,1
"org.apache.xerces.dom.traversal.NodeIteratorImpl.getExpandEntityReferences()",1,1,1
"org.apache.xerces.dom.traversal.NodeIteratorImpl.getFilter()",1,1,1
"org.apache.xerces.dom.traversal.NodeIteratorImpl.getWhatToShow()",1,1,1
"org.apache.xerces.dom.traversal.NodeIteratorImpl.matchNodeOrParent(Node)",3,1,3
"org.apache.xerces.dom.traversal.NodeIteratorImpl.nextNode()",6,6,11
"org.apache.xerces.dom.traversal.NodeIteratorImpl.nextNode(Node,boolean)",7,5,8
"org.apache.xerces.dom.traversal.NodeIteratorImpl.previousNode()",6,3,9
"org.apache.xerces.dom.traversal.NodeIteratorImpl.previousNode(Node)",3,7,8
"org.apache.xerces.dom.traversal.NodeIteratorImpl.removeNode(Node)",3,3,5
"org.apache.xerces.dom.traversal.TreeWalkerImpl.TreeWalkerImpl(Node,int,NodeFilter,boolean)",1,1,1
"org.apache.xerces.dom.traversal.TreeWalkerImpl.acceptNode(Node)",4,3,4
"org.apache.xerces.dom.traversal.TreeWalkerImpl.firstChild()",2,1,3
"org.apache.xerces.dom.traversal.TreeWalkerImpl.getCurrentNode()",1,1,1
"org.apache.xerces.dom.traversal.TreeWalkerImpl.getExpandEntityReferences()",1,1,1
"org.apache.xerces.dom.traversal.TreeWalkerImpl.getFilter()",1,1,1
"org.apache.xerces.dom.traversal.TreeWalkerImpl.getFirstChild(Node)",6,5,8
"org.apache.xerces.dom.traversal.TreeWalkerImpl.getLastChild(Node)",6,5,8
"org.apache.xerces.dom.traversal.TreeWalkerImpl.getNextSibling(Node)",8,6,10
"org.apache.xerces.dom.traversal.TreeWalkerImpl.getParentNode(Node)",4,2,5
"org.apache.xerces.dom.traversal.TreeWalkerImpl.getPreviousSibling(Node)",8,6,10
"org.apache.xerces.dom.traversal.TreeWalkerImpl.getWhatToShow()",1,1,1
"org.apache.xerces.dom.traversal.TreeWalkerImpl.lastChild()",2,1,3
"org.apache.xerces.dom.traversal.TreeWalkerImpl.nextNode()",6,3,6
"org.apache.xerces.dom.traversal.TreeWalkerImpl.nextSibling()",2,1,3
"org.apache.xerces.dom.traversal.TreeWalkerImpl.parentNode()",2,1,3
"org.apache.xerces.dom.traversal.TreeWalkerImpl.previousNode()",6,2,6
"org.apache.xerces.dom.traversal.TreeWalkerImpl.previousSibling()",2,1,3
"org.apache.xerces.dom.traversal.TreeWalkerImpl.setCurrentNode(Node)",1,1,1
"org.apache.xerces.domx.DOMException.DOMException(short,String)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.OutputFormat.OutputFormat(int)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.OutputFormat.equals(Object)",2,2,3
"org.apache.xerces.domx.XGrammarWriter.OutputFormat.getValue()",1,1,1
"org.apache.xerces.domx.XGrammarWriter.OutputFormat.hashCode()",1,1,1
"org.apache.xerces.domx.XGrammarWriter.OutputFormat.toString()",3,1,3
"org.apache.xerces.domx.XGrammarWriter.XGrammarWriter()",1,1,1
"org.apache.xerces.domx.XGrammarWriter.XGrammarWriter(OutputStream)",1,1,2
"org.apache.xerces.domx.XGrammarWriter.XGrammarWriter(PrintWriter)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.XGrammarWriter(Writer,String)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.buildAllModel(String[],int)",2,4,4
"org.apache.xerces.domx.XGrammarWriter.buildOccurrenceCountString(String,String,String)",1,10,19
"org.apache.xerces.domx.XGrammarWriter.containsMoreThanOneChildOfType(Element,String[])",1,2,2
"org.apache.xerces.domx.XGrammarWriter.createSeq(String[])",1,3,3
"org.apache.xerces.domx.XGrammarWriter.expandAllModel(String)",2,4,4
"org.apache.xerces.domx.XGrammarWriter.getFirstChildOfType(Node,short)",4,3,4
"org.apache.xerces.domx.XGrammarWriter.getNextSiblingOfType(Node,short)",4,3,4
"org.apache.xerces.domx.XGrammarWriter.getOutputFormat()",1,1,1
"org.apache.xerces.domx.XGrammarWriter.init()",1,1,1
"org.apache.xerces.domx.XGrammarWriter.isBasicAttributeType(String)",1,7,7
"org.apache.xerces.domx.XGrammarWriter.isBasicOccurrenceCount(String,String)",1,1,8
"org.apache.xerces.domx.XGrammarWriter.isCanonical()",1,1,1
"org.apache.xerces.domx.XGrammarWriter.isEmpty(Element)",4,2,5
"org.apache.xerces.domx.XGrammarWriter.isVerbose()",1,1,1
"org.apache.xerces.domx.XGrammarWriter.main(String[])",11,18,18
"org.apache.xerces.domx.XGrammarWriter.normalize(String)",2,8,8
"org.apache.xerces.domx.XGrammarWriter.parseInt(String,int)",2,2,4
"org.apache.xerces.domx.XGrammarWriter.printAttribute(Attr)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.printAttributeDecl(String,Element)",1,11,11
"org.apache.xerces.domx.XGrammarWriter.printCloseElement(Element)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.printComment(Element)",1,4,4
"org.apache.xerces.domx.XGrammarWriter.printElement(Element)",1,6,6
"org.apache.xerces.domx.XGrammarWriter.printElementDecl(Element)",1,3,3
"org.apache.xerces.domx.XGrammarWriter.printElementDeclContentModel(Element)",1,6,6
"org.apache.xerces.domx.XGrammarWriter.printElementDeclContentModelChildren(Element)",1,6,6
"org.apache.xerces.domx.XGrammarWriter.printElementDeclContentModelChildren0(Element)",1,8,9
"org.apache.xerces.domx.XGrammarWriter.printElementDeclContentModelMixed(Element)",1,4,4
"org.apache.xerces.domx.XGrammarWriter.printEmptyElement(Element)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.printEntityDecl(Element)",1,6,6
"org.apache.xerces.domx.XGrammarWriter.printGrammar(String,DocumentType)",4,11,13
"org.apache.xerces.domx.XGrammarWriter.printIndent(int)",1,2,2
"org.apache.xerces.domx.XGrammarWriter.printNotationDecl(Element)",1,4,4
"org.apache.xerces.domx.XGrammarWriter.printOpenElement(Element)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.printOpenElement(Element,boolean)",1,5,5
"org.apache.xerces.domx.XGrammarWriter.printText(Text)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.printUsage()",1,1,1
"org.apache.xerces.domx.XGrammarWriter.setCanonical(boolean)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.setOutputFormat(OutputFormat)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.setVerbose(boolean)",1,1,1
"org.apache.xerces.domx.XGrammarWriter.shift(String[],int,int)",1,1,2
"org.apache.xerces.domx.XGrammarWriter.swap(String[],int,int)",1,1,1
"org.apache.xerces.framework.Version.main(String[])",1,1,1
"org.apache.xerces.framework.XMLAttrList.XMLAttrList(StringPool)",1,1,1
"org.apache.xerces.framework.XMLAttrList.addAttr(int,int,int,boolean,boolean)",4,3,6
"org.apache.xerces.framework.XMLAttrList.attrListHandle()",1,1,1
"org.apache.xerces.framework.XMLAttrList.endAttrList()",1,1,1
"org.apache.xerces.framework.XMLAttrList.ensureCapacity(int,int)",1,2,3
"org.apache.xerces.framework.XMLAttrList.getAttType(int)",2,1,3
"org.apache.xerces.framework.XMLAttrList.getAttValue(int)",2,1,3
"org.apache.xerces.framework.XMLAttrList.getAttrName(int)",2,1,3
"org.apache.xerces.framework.XMLAttrList.getAttributeList(int)",1,1,4
"org.apache.xerces.framework.XMLAttrList.getFirstAttr(int)",2,1,3
"org.apache.xerces.framework.XMLAttrList.getLength()",1,1,1
"org.apache.xerces.framework.XMLAttrList.getName(int)",2,1,3
"org.apache.xerces.framework.XMLAttrList.getNextAttr(int)",3,1,4
"org.apache.xerces.framework.XMLAttrList.getType(String)",4,4,6
"org.apache.xerces.framework.XMLAttrList.getType(int)",2,2,4
"org.apache.xerces.framework.XMLAttrList.getValue(String)",4,3,5
"org.apache.xerces.framework.XMLAttrList.getValue(int)",2,1,3
"org.apache.xerces.framework.XMLAttrList.isSpecified(int)",2,1,3
"org.apache.xerces.framework.XMLAttrList.releaseAttrList(int)",4,3,7
"org.apache.xerces.framework.XMLAttrList.reset(StringPool)",1,1,1
"org.apache.xerces.framework.XMLAttrList.startAttrList()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.XMLDTDScanner(EventHandler,StringPool,XMLErrorReporter,XMLEntityHandler,CharBuffer)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.abortMarkup(int,int)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.abortMarkup(int,int,String)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.abortMarkup(int,int,int)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.abortMarkup(int,int,int,int)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.checkForPEReference(boolean)",5,6,9
"org.apache.xerces.framework.XMLDTDScanner.decreaseMarkupDepth()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.decreaseParenDepth()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.endOfInput(int,boolean)",4,12,25
"org.apache.xerces.framework.XMLDTDScanner.getReadingContentSpec()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.getReadingExternalEntity()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.getScannerState()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.increaseMarkupDepth()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.increaseParenDepth()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.init()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.initializeContentModelStack(int)",1,3,3
"org.apache.xerces.framework.XMLDTDScanner.markupDepth()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.parenDepth()",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.readerChange(EntityReader,int)",1,3,3
"org.apache.xerces.framework.XMLDTDScanner.reportFatalXMLError(int,int)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.reportFatalXMLError(int,int,String)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.reportFatalXMLError(int,int,String,String)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.reportFatalXMLError(int,int,String,String,String)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.reportFatalXMLError(int,int,int)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.reportFatalXMLError(int,int,int,int)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.reset(StringPool,CharBuffer)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.restoreScannerState(int)",1,1,2
"org.apache.xerces.framework.XMLDTDScanner.scanAttlistDecl()",25,35,37
"org.apache.xerces.framework.XMLDTDScanner.scanCharRef()",6,3,16
"org.apache.xerces.framework.XMLDTDScanner.scanChildren(int)",8,19,20
"org.apache.xerces.framework.XMLDTDScanner.scanComment()",5,11,12
"org.apache.xerces.framework.XMLDTDScanner.scanComplexEntityValue(char,int)",7,21,24
"org.apache.xerces.framework.XMLDTDScanner.scanDecls(boolean)",9,35,37
"org.apache.xerces.framework.XMLDTDScanner.scanDefaultAttValue(int,int)",12,26,32
"org.apache.xerces.framework.XMLDTDScanner.scanDoctypeDecl()",7,11,11
"org.apache.xerces.framework.XMLDTDScanner.scanElementDecl()",9,10,11
"org.apache.xerces.framework.XMLDTDScanner.scanEntityDecl()",24,37,38
"org.apache.xerces.framework.XMLDTDScanner.scanEntityValue(boolean)",1,2,3
"org.apache.xerces.framework.XMLDTDScanner.scanEnumeration(int,int,boolean)",5,8,8
"org.apache.xerces.framework.XMLDTDScanner.scanExternalID(boolean)",10,7,10
"org.apache.xerces.framework.XMLDTDScanner.scanIgnoreSectContents()",9,10,13
"org.apache.xerces.framework.XMLDTDScanner.scanMixed(int)",7,11,11
"org.apache.xerces.framework.XMLDTDScanner.scanNotationDecl()",6,6,6
"org.apache.xerces.framework.XMLDTDScanner.scanPI(int)",9,19,20
"org.apache.xerces.framework.XMLDTDScanner.scanPubidLiteral()",16,19,26
"org.apache.xerces.framework.XMLDTDScanner.scanSystemLiteral()",6,9,11
"org.apache.xerces.framework.XMLDTDScanner.scanTextDecl()",13,17,22
"org.apache.xerces.framework.XMLDTDScanner.setParenDepth(int)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.setScannerState(int)",1,1,1
"org.apache.xerces.framework.XMLDTDScanner.skipPastEndOfCurrentMarkup()",1,2,2
"org.apache.xerces.framework.XMLDocumentScanner.ContentDispatcher.dispatch(boolean)",21,55,78
"org.apache.xerces.framework.XMLDocumentScanner.ContentDispatcher.endOfInput(int,boolean)",2,10,20
"org.apache.xerces.framework.XMLDocumentScanner.ContentDispatcher.popElementType()",2,1,3
"org.apache.xerces.framework.XMLDocumentScanner.EndOfInputDispatcher.dispatch(boolean)",1,2,2
"org.apache.xerces.framework.XMLDocumentScanner.EndOfInputDispatcher.endOfInput(int,boolean)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.PrologDispatcher.dispatch(boolean)",5,16,17
"org.apache.xerces.framework.XMLDocumentScanner.PrologDispatcher.endOfInput(int,boolean)",2,5,8
"org.apache.xerces.framework.XMLDocumentScanner.TrailingMiscDispatcher.dispatch(boolean)",1,14,15
"org.apache.xerces.framework.XMLDocumentScanner.TrailingMiscDispatcher.endOfInput(int,boolean)",3,2,6
"org.apache.xerces.framework.XMLDocumentScanner.XMLDeclDispatcher.dispatch(boolean)",6,14,14
"org.apache.xerces.framework.XMLDocumentScanner.XMLDeclDispatcher.endOfInput(int,boolean)",2,5,8
"org.apache.xerces.framework.XMLDocumentScanner.XMLDocumentScanner(EventHandler,StringPool,XMLErrorReporter,XMLEntityHandler,CharBuffer)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.abortMarkup(int,int)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.abortMarkup(int,int,String)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.abortMarkup(int,int,int)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.abortMarkup(int,int,int,int)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.atEndOfInput()",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.checkXMLLangAttributeValue(int)",10,10,32
"org.apache.xerces.framework.XMLDocumentScanner.endOfInput(int,boolean)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.parseSome(boolean)",3,2,3
"org.apache.xerces.framework.XMLDocumentScanner.readerChange(EntityReader,int)",1,2,2
"org.apache.xerces.framework.XMLDocumentScanner.reportFatalXMLError(int,int)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.reportFatalXMLError(int,int,String)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.reportFatalXMLError(int,int,String,String)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.reportFatalXMLError(int,int,String,String,String)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.reportFatalXMLError(int,int,int)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.reportFatalXMLError(int,int,int,int)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.reset(StringPool,CharBuffer)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.restoreScannerState(int)",1,1,2
"org.apache.xerces.framework.XMLDocumentScanner.scanAttValue(int,int,boolean)",13,24,30
"org.apache.xerces.framework.XMLDocumentScanner.scanCharRef()",6,3,16
"org.apache.xerces.framework.XMLDocumentScanner.scanComment()",5,11,12
"org.apache.xerces.framework.XMLDocumentScanner.scanElement(int)",11,17,19
"org.apache.xerces.framework.XMLDocumentScanner.scanPI(int)",9,18,20
"org.apache.xerces.framework.XMLDocumentScanner.scanXMLDeclOrTextDecl(boolean)",19,28,43
"org.apache.xerces.framework.XMLDocumentScanner.setScannerState(int)",1,1,1
"org.apache.xerces.framework.XMLDocumentScanner.skipPastEndOfCurrentMarkup()",1,1,2
"org.apache.xerces.framework.XMLParser.NullReader.NullReader()",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.addString(int,int)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.addSymbol(int,int)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.append(CharBuffer,int,int)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.currentOffset()",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.getColumnNumber()",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.getInCDSect()",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.getLineNumber()",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.lookingAtChar(char,boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.lookingAtSpace(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.lookingAtValidChar(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.scanAttValue(char,boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.scanCharRef(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.scanContent(int)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.scanEntityValue(int,boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.scanExpectedName(char,CharArrayRange)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.scanInvalidChar()",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.scanName(char)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.scanQName(char)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.scanStringLiteral()",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.setInCDSect(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.skipPastName(char)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.skipPastNmtoken(char)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.skipPastSpaces()",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.skipToChar(char)",1,1,1
"org.apache.xerces.framework.XMLParser.NullReader.skippedString(char[])",1,1,1
"org.apache.xerces.framework.XMLParser.XMLParser()",1,1,2
"org.apache.xerces.framework.XMLParser.addRecognizer(XMLDeclRecognizer)",1,1,1
"org.apache.xerces.framework.XMLParser.callCharacters(int)",1,2,5
"org.apache.xerces.framework.XMLParser.callComment(int)",1,1,1
"org.apache.xerces.framework.XMLParser.callEndDocument()",1,2,2
"org.apache.xerces.framework.XMLParser.callEndElement(int)",3,2,4
"org.apache.xerces.framework.XMLParser.callProcessingInstruction(int,int)",1,1,1
"org.apache.xerces.framework.XMLParser.callRecognizers(InputSource,ChunkyByteArray,boolean)",3,2,3
"org.apache.xerces.framework.XMLParser.callStartDocument(int,int,int)",1,2,2
"org.apache.xerces.framework.XMLParser.callStartElement(int)",4,7,8
"org.apache.xerces.framework.XMLParser.changeReaders()",1,1,1
"org.apache.xerces.framework.XMLParser.commentInDTD(int)",1,1,1
"org.apache.xerces.framework.XMLParser.createReader(boolean)",4,8,8
"org.apache.xerces.framework.XMLParser.endEntityDecl()",1,1,1
"org.apache.xerces.framework.XMLParser.entityReferencePath(boolean,int)",1,3,5
"org.apache.xerces.framework.XMLParser.expandSystemId(String)",1,1,1
"org.apache.xerces.framework.XMLParser.expandSystemId(String,String)",4,3,10
"org.apache.xerces.framework.XMLParser.fixURI(String)",1,3,5
"org.apache.xerces.framework.XMLParser.getAllowJavaEncodingName()",1,1,1
"org.apache.xerces.framework.XMLParser.getAllowJavaEncodings()",1,1,1
"org.apache.xerces.framework.XMLParser.getColumnNumber()",1,1,1
"org.apache.xerces.framework.XMLParser.getContinueAfterFatalError()",1,1,1
"org.apache.xerces.framework.XMLParser.getEntityReader()",1,1,1
"org.apache.xerces.framework.XMLParser.getExternalGeneralEntities()",1,1,1
"org.apache.xerces.framework.XMLParser.getExternalParameterEntities()",1,1,1
"org.apache.xerces.framework.XMLParser.getFeature(String)",15,12,15
"org.apache.xerces.framework.XMLParser.getFeaturesRecognized()",1,1,1
"org.apache.xerces.framework.XMLParser.getLineNumber()",1,1,1
"org.apache.xerces.framework.XMLParser.getLocator()",1,1,1
"org.apache.xerces.framework.XMLParser.getLocatorImpl(LocatorImpl)",2,1,2
"org.apache.xerces.framework.XMLParser.getNamespaceSep()",1,1,1
"org.apache.xerces.framework.XMLParser.getNamespaces()",1,1,1
"org.apache.xerces.framework.XMLParser.getPropertiesRecognized()",1,1,1
"org.apache.xerces.framework.XMLParser.getProperty(String)",4,4,4
"org.apache.xerces.framework.XMLParser.getPublicId()",1,1,1
"org.apache.xerces.framework.XMLParser.getReaderDepth()",1,1,1
"org.apache.xerces.framework.XMLParser.getReaderId()",1,1,1
"org.apache.xerces.framework.XMLParser.getSchemaValidator()",1,1,2
"org.apache.xerces.framework.XMLParser.getSystemId()",1,1,1
"org.apache.xerces.framework.XMLParser.getValidation()",1,1,1
"org.apache.xerces.framework.XMLParser.getValidationDynamic()",1,1,1
"org.apache.xerces.framework.XMLParser.getValidationWarnOnDuplicateAttdef()",1,1,1
"org.apache.xerces.framework.XMLParser.getValidationWarnOnUndeclaredElemdef()",1,1,1
"org.apache.xerces.framework.XMLParser.getXMLString()",1,1,1
"org.apache.xerces.framework.XMLParser.isFeatureRecognized(String)",3,2,3
"org.apache.xerces.framework.XMLParser.isPropertyRecognized(String)",3,2,3
"org.apache.xerces.framework.XMLParser.parse(InputSource)",2,8,9
"org.apache.xerces.framework.XMLParser.parse(String)",1,3,4
"org.apache.xerces.framework.XMLParser.parseSome()",2,1,2
"org.apache.xerces.framework.XMLParser.parseSomeSetup(InputSource)",1,2,2
"org.apache.xerces.framework.XMLParser.popEntity()",1,1,1
"org.apache.xerces.framework.XMLParser.popReader()",2,1,2
"org.apache.xerces.framework.XMLParser.processCharacters(char[],int,int)",1,2,3
"org.apache.xerces.framework.XMLParser.processCharacters(int)",1,2,3
"org.apache.xerces.framework.XMLParser.processWhitespace(char[],int,int)",1,4,6
"org.apache.xerces.framework.XMLParser.processWhitespace(int)",1,4,6
"org.apache.xerces.framework.XMLParser.processingInstructionInDTD(int,int)",1,1,1
"org.apache.xerces.framework.XMLParser.pushEntity(boolean,int)",4,3,9
"org.apache.xerces.framework.XMLParser.pushNullReader()",1,1,3
"org.apache.xerces.framework.XMLParser.pushReader()",1,1,2
"org.apache.xerces.framework.XMLParser.reportError(Locator,String,int,int,Object[],int)",11,9,12
"org.apache.xerces.framework.XMLParser.reset()",1,1,1
"org.apache.xerces.framework.XMLParser.resetCommon()",1,2,2
"org.apache.xerces.framework.XMLParser.resetEntityHandler()",1,1,1
"org.apache.xerces.framework.XMLParser.resetOrCopy()",1,1,1
"org.apache.xerces.framework.XMLParser.scanAttValue(int,int)",3,3,5
"org.apache.xerces.framework.XMLParser.scanAttributeName(EntityReader,int)",2,4,5
"org.apache.xerces.framework.XMLParser.scanDoctypeDecl(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.scanElementType(EntityReader,char)",2,4,4
"org.apache.xerces.framework.XMLParser.scanExpectedElementType(EntityReader,char)",1,2,2
"org.apache.xerces.framework.XMLParser.sendEndEntityNotifications()",1,1,1
"org.apache.xerces.framework.XMLParser.sendEndOfInputNotifications()",1,2,2
"org.apache.xerces.framework.XMLParser.sendReaderChangeNotifications()",1,2,2
"org.apache.xerces.framework.XMLParser.sendStartEntityNotifications()",1,1,1
"org.apache.xerces.framework.XMLParser.setAllowJavaEncodingName(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.setAllowJavaEncodings(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.setContinueAfterFatalError(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.setEntityResolver(EntityResolver)",1,1,1
"org.apache.xerces.framework.XMLParser.setErrorHandler(ErrorHandler)",1,1,1
"org.apache.xerces.framework.XMLParser.setExternalGeneralEntities(boolean)",2,1,2
"org.apache.xerces.framework.XMLParser.setExternalParameterEntities(boolean)",2,1,2
"org.apache.xerces.framework.XMLParser.setFeature(String,boolean)",15,12,15
"org.apache.xerces.framework.XMLParser.setLocale(Locale)",2,1,2
"org.apache.xerces.framework.XMLParser.setLocator(Locator)",1,1,1
"org.apache.xerces.framework.XMLParser.setNamespaceSep(String)",2,1,2
"org.apache.xerces.framework.XMLParser.setNamespaces(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.setProperty(String,Object)",4,3,5
"org.apache.xerces.framework.XMLParser.setReaderDepth(int)",1,1,1
"org.apache.xerces.framework.XMLParser.setSendCharDataAsCharArray(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.setValidating(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.setValidation(boolean)",1,1,2
"org.apache.xerces.framework.XMLParser.setValidationDynamic(boolean)",2,1,3
"org.apache.xerces.framework.XMLParser.setValidationWarnOnDuplicateAttdef(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.setValidationWarnOnUndeclaredElemdef(boolean)",1,1,1
"org.apache.xerces.framework.XMLParser.startEntityDecl(boolean,int)",2,2,3
"org.apache.xerces.framework.XMLParser.startReadingFromDocument(InputSource)",1,4,4
"org.apache.xerces.framework.XMLParser.startReadingFromEntity(int,int,int)",8,10,13
"org.apache.xerces.framework.XMLParser.startReadingFromExternalEntity(boolean)",2,8,12
"org.apache.xerces.framework.XMLParser.startReadingFromExternalSubset(String,String,int)",1,1,1
"org.apache.xerces.framework.XMLParser.startReadingFromInternalEntity(int,boolean)",1,1,2
"org.apache.xerces.framework.XMLParser.startReadingFromParameterEntity(int,int,int)",4,3,5
"org.apache.xerces.framework.XMLParser.stopReadingFromExternalSubset()",2,1,2
"org.apache.xerces.framework.XMLParser.validEncName(String)",1,1,1
"org.apache.xerces.framework.XMLParser.validVersionNum(String)",1,1,1
"org.apache.xerces.msg.DatatypeMessages.getContents()",1,1,1
"org.apache.xerces.msg.ImplementationMessages.getContents()",1,1,1
"org.apache.xerces.msg.SchemaMessages.getContents()",1,1,1
"org.apache.xerces.msg.XMLMessages.getContents()",1,1,1
"org.apache.xerces.parsers.DOMParser.DOMParser()",1,1,2
"org.apache.xerces.parsers.DOMParser.attlistDecl(int,int,int,String,int,int)",1,32,34
"org.apache.xerces.parsers.DOMParser.characters(char[],int,int)",1,1,1
"org.apache.xerces.parsers.DOMParser.characters(int)",5,8,8
"org.apache.xerces.parsers.DOMParser.comment(int)",1,2,2
"org.apache.xerces.parsers.DOMParser.copyInto(Node,int)",3,16,18
"org.apache.xerces.parsers.DOMParser.createContentModel(ContentSpec,XMLContentSpecNode)",1,1,1
"org.apache.xerces.parsers.DOMParser.createContentModel(ContentSpec,XMLContentSpecNode,Element)",4,13,14
"org.apache.xerces.parsers.DOMParser.createDeferredContentModel(Node)",3,5,5
"org.apache.xerces.parsers.DOMParser.elementDecl(int,ContentSpec)",1,19,19
"org.apache.xerces.parsers.DOMParser.endCDATA()",1,1,1
"org.apache.xerces.parsers.DOMParser.endDTD()",1,1,1
"org.apache.xerces.parsers.DOMParser.endDocument()",1,1,1
"org.apache.xerces.parsers.DOMParser.endElement(int)",1,2,2
"org.apache.xerces.parsers.DOMParser.endEntityReference(int,int,int)",11,11,21
"org.apache.xerces.parsers.DOMParser.endNamespaceDeclScope(int)",1,1,1
"org.apache.xerces.parsers.DOMParser.externalEntityDecl(int,int,int)",1,10,10
"org.apache.xerces.parsers.DOMParser.externalPEDecl(int,int,int)",1,1,1
"org.apache.xerces.parsers.DOMParser.getCreateEntityReferenceNodes()",1,1,1
"org.apache.xerces.parsers.DOMParser.getCurrentElementNode()",2,2,3
"org.apache.xerces.parsers.DOMParser.getDeferNodeExpansion()",1,1,1
"org.apache.xerces.parsers.DOMParser.getDocument()",1,1,1
"org.apache.xerces.parsers.DOMParser.getDocumentClassName()",1,1,1
"org.apache.xerces.parsers.DOMParser.getFeature(String)",6,5,6
"org.apache.xerces.parsers.DOMParser.getFeaturesRecognized()",3,1,3
"org.apache.xerces.parsers.DOMParser.getFirstChildElement(int)",3,2,3
"org.apache.xerces.parsers.DOMParser.getFirstChildElement(int,String)",4,3,4
"org.apache.xerces.parsers.DOMParser.getFirstChildElement(int,String,String,String)",6,5,6
"org.apache.xerces.parsers.DOMParser.getNextSiblingElement(int)",3,2,3
"org.apache.xerces.parsers.DOMParser.getNextSiblingElement(int,String)",4,3,4
"org.apache.xerces.parsers.DOMParser.getNextSiblingElement(int,String,String,String)",5,4,5
"org.apache.xerces.parsers.DOMParser.getPropertiesRecognized()",3,1,3
"org.apache.xerces.parsers.DOMParser.getProperty(String)",5,4,7
"org.apache.xerces.parsers.DOMParser.ignorableWhitespace(char[],int,int)",1,1,1
"org.apache.xerces.parsers.DOMParser.ignorableWhitespace(int)",5,9,9
"org.apache.xerces.parsers.DOMParser.init()",1,1,1
"org.apache.xerces.parsers.DOMParser.internalEntityDecl(int,int)",5,7,9
"org.apache.xerces.parsers.DOMParser.internalPEDecl(int,int)",1,1,1
"org.apache.xerces.parsers.DOMParser.notationDecl(int,int,int)",1,10,12
"org.apache.xerces.parsers.DOMParser.processingInstruction(int,int)",1,2,2
"org.apache.xerces.parsers.DOMParser.reset()",1,1,1
"org.apache.xerces.parsers.DOMParser.resetOrCopy()",1,1,1
"org.apache.xerces.parsers.DOMParser.setCreateEntityReferenceNodes(boolean)",1,1,1
"org.apache.xerces.parsers.DOMParser.setDeferNodeExpansion(boolean)",1,1,1
"org.apache.xerces.parsers.DOMParser.setDocumentClassName(String)",2,2,5
"org.apache.xerces.parsers.DOMParser.setFeature(String,boolean)",7,5,7
"org.apache.xerces.parsers.DOMParser.setOccurrenceCount(Element,int,int)",1,4,4
"org.apache.xerces.parsers.DOMParser.setProperty(String,Object)",5,4,6
"org.apache.xerces.parsers.DOMParser.startCDATA()",1,1,1
"org.apache.xerces.parsers.DOMParser.startDTD(int,int,int)",1,5,5
"org.apache.xerces.parsers.DOMParser.startDocument(int,int,int)",1,7,11
"org.apache.xerces.parsers.DOMParser.startElement(int,XMLAttrList,int)",1,20,24
"org.apache.xerces.parsers.DOMParser.startEntityReference(int,int,int)",4,2,9
"org.apache.xerces.parsers.DOMParser.startNamespaceDeclScope(int,int)",1,1,1
"org.apache.xerces.parsers.DOMParser.unparsedEntityDecl(int,int,int,int)",1,10,10
"org.apache.xerces.parsers.RevalidatingDOMParser.countChildren(Node)",1,4,4
"org.apache.xerces.parsers.RevalidatingDOMParser.expandChildren(Node,int[],Node[],int,StringPool)",1,7,8
"org.apache.xerces.parsers.RevalidatingDOMParser.normalize(String)",6,5,8
"org.apache.xerces.parsers.RevalidatingDOMParser.print(Node,String)",3,5,5
"org.apache.xerces.parsers.RevalidatingDOMParser.recursiveValidate(Node,XMLValidator,StringPool)",6,8,11
"org.apache.xerces.parsers.RevalidatingDOMParser.type(int)",6,2,6
"org.apache.xerces.parsers.RevalidatingDOMParser.validate(Node)",2,1,2
"org.apache.xerces.parsers.SAXParser.SAXParser()",1,1,1
"org.apache.xerces.parsers.SAXParser.attlistDecl(int,int,int,String,int,int)",1,6,7
"org.apache.xerces.parsers.SAXParser.characters(char[],int,int)",1,3,3
"org.apache.xerces.parsers.SAXParser.characters(int)",1,1,1
"org.apache.xerces.parsers.SAXParser.comment(int)",1,4,5
"org.apache.xerces.parsers.SAXParser.commentInDTD(int)",1,1,1
"org.apache.xerces.parsers.SAXParser.elementDecl(int,ContentSpec)",1,4,5
"org.apache.xerces.parsers.SAXParser.endCDATA()",1,3,3
"org.apache.xerces.parsers.SAXParser.endDTD()",1,3,3
"org.apache.xerces.parsers.SAXParser.endDocument()",1,3,3
"org.apache.xerces.parsers.SAXParser.endElement(int)",1,3,3
"org.apache.xerces.parsers.SAXParser.endEntityReference(int,int,int)",4,9,14
"org.apache.xerces.parsers.SAXParser.endNamespaceDeclScope(int)",1,4,5
"org.apache.xerces.parsers.SAXParser.externalEntityDecl(int,int,int)",1,4,5
"org.apache.xerces.parsers.SAXParser.externalPEDecl(int,int,int)",1,4,5
"org.apache.xerces.parsers.SAXParser.getDeclHandler()",1,1,1
"org.apache.xerces.parsers.SAXParser.getFeature(String)",4,4,4
"org.apache.xerces.parsers.SAXParser.getFeaturesRecognized()",3,1,3
"org.apache.xerces.parsers.SAXParser.getLexicalHandler()",1,1,1
"org.apache.xerces.parsers.SAXParser.getNamespaceHandler()",1,1,1
"org.apache.xerces.parsers.SAXParser.getNormalizeText()",1,1,1
"org.apache.xerces.parsers.SAXParser.getPropertiesRecognized()",3,1,3
"org.apache.xerces.parsers.SAXParser.getProperty(String)",7,6,7
"org.apache.xerces.parsers.SAXParser.getUseLocator()",1,1,1
"org.apache.xerces.parsers.SAXParser.ignorableWhitespace(char[],int,int)",1,3,3
"org.apache.xerces.parsers.SAXParser.ignorableWhitespace(int)",1,1,1
"org.apache.xerces.parsers.SAXParser.internalEntityDecl(int,int)",1,4,5
"org.apache.xerces.parsers.SAXParser.internalPEDecl(int,int)",1,4,5
"org.apache.xerces.parsers.SAXParser.notationDecl(int,int,int)",1,4,5
"org.apache.xerces.parsers.SAXParser.processingInstruction(int,int)",1,5,6
"org.apache.xerces.parsers.SAXParser.processingInstructionInDTD(int,int)",1,1,1
"org.apache.xerces.parsers.SAXParser.setDTDHandler(DTDHandler)",1,1,1
"org.apache.xerces.parsers.SAXParser.setDeclHandler(DeclHandler)",2,1,2
"org.apache.xerces.parsers.SAXParser.setDocumentHandler(DocumentHandler)",1,1,1
"org.apache.xerces.parsers.SAXParser.setFeature(String,boolean)",4,4,4
"org.apache.xerces.parsers.SAXParser.setLexicalHandler(LexicalHandler)",2,1,2
"org.apache.xerces.parsers.SAXParser.setNamespaceHandler(NamespaceHandler)",2,1,2
"org.apache.xerces.parsers.SAXParser.setNormalizeText(boolean)",2,1,2
"org.apache.xerces.parsers.SAXParser.setProperty(String,Object)",7,6,10
"org.apache.xerces.parsers.SAXParser.setUseLocator(boolean)",2,1,2
"org.apache.xerces.parsers.SAXParser.startCDATA()",1,3,3
"org.apache.xerces.parsers.SAXParser.startDTD(int,int,int)",1,4,5
"org.apache.xerces.parsers.SAXParser.startDocument(int,int,int)",1,6,6
"org.apache.xerces.parsers.SAXParser.startElement(int,XMLAttrList,int)",1,4,5
"org.apache.xerces.parsers.SAXParser.startEntityReference(int,int,int)",4,9,14
"org.apache.xerces.parsers.SAXParser.startNamespaceDeclScope(int,int)",1,4,5
"org.apache.xerces.parsers.SAXParser.unparsedEntityDecl(int,int,int,int)",1,4,5
"org.apache.xerces.readers.AbstractCharReader.AbstractCharReader(XMLEntityHandler,XMLErrorReporter,boolean,StringPool)",1,1,1
"org.apache.xerces.readers.AbstractCharReader.DeferredError.DeferredError(int,Object[],int)",1,1,1
"org.apache.xerces.readers.AbstractCharReader.addString(int,int)",2,1,2
"org.apache.xerces.readers.AbstractCharReader.addSymbol(int,int)",2,1,2
"org.apache.xerces.readers.AbstractCharReader.append(CharBuffer,int,int)",1,1,1
"org.apache.xerces.readers.AbstractCharReader.atEOF(int)",1,1,1
"org.apache.xerces.readers.AbstractCharReader.callCharDataHandler(int,int,boolean)",5,10,11
"org.apache.xerces.readers.AbstractCharReader.changeReaders()",1,1,1
"org.apache.xerces.readers.AbstractCharReader.deferException(int,Object[],int)",1,1,2
"org.apache.xerces.readers.AbstractCharReader.loadNextChar()",2,2,2
"org.apache.xerces.readers.AbstractCharReader.lookingAtChar(char,boolean)",4,6,6
"org.apache.xerces.readers.AbstractCharReader.lookingAtSpace(boolean)",8,6,10
"org.apache.xerces.readers.AbstractCharReader.lookingAtValidChar(boolean)",10,11,16
"org.apache.xerces.readers.AbstractCharReader.recognizeMarkup(int)",11,6,14
"org.apache.xerces.readers.AbstractCharReader.recognizeReference(int)",3,2,3
"org.apache.xerces.readers.AbstractCharReader.scanAttValue(char,boolean)",8,3,9
"org.apache.xerces.readers.AbstractCharReader.scanCharRef(boolean)",13,4,23
"org.apache.xerces.readers.AbstractCharReader.scanContent(int)",21,31,55
"org.apache.xerces.readers.AbstractCharReader.scanEntityValue(int,boolean)",8,4,9
"org.apache.xerces.readers.AbstractCharReader.scanExpectedName(char,CharArrayRange)",7,4,8
"org.apache.xerces.readers.AbstractCharReader.scanInvalidChar()",7,9,11
"org.apache.xerces.readers.AbstractCharReader.scanName(char)",9,4,11
"org.apache.xerces.readers.AbstractCharReader.scanQName(char)",13,9,22
"org.apache.xerces.readers.AbstractCharReader.scanStringLiteral()",4,3,6
"org.apache.xerces.readers.AbstractCharReader.skipAsciiCharData()",6,2,6
"org.apache.xerces.readers.AbstractCharReader.skipMultiByteCharData(int)",6,4,9
"org.apache.xerces.readers.AbstractCharReader.skipPastName(char)",9,2,9
"org.apache.xerces.readers.AbstractCharReader.skipPastNmtoken(char)",6,2,6
"org.apache.xerces.readers.AbstractCharReader.skipPastSpaces()",4,6,7
"org.apache.xerces.readers.AbstractCharReader.skipToChar(char)",8,6,10
"org.apache.xerces.readers.AbstractCharReader.skippedString(char[])",8,6,10
"org.apache.xerces.readers.AbstractCharReader.slowLoadNextChar()",2,2,2
"org.apache.xerces.readers.CharReader.CharReader(XMLEntityHandler,XMLErrorReporter,boolean,Reader,StringPool)",1,1,1
"org.apache.xerces.readers.CharReader.copyNormalize(char[],int,char[],int)",17,11,19
"org.apache.xerces.readers.CharReader.exitNormalize(int,int,boolean)",1,1,1
"org.apache.xerces.readers.CharReader.fillCurrentChunk()",10,9,29
"org.apache.xerces.readers.EBCDICRecognizer.recognize(XMLEntityReaderFactory,XMLEntityHandler,XMLErrorReporter,boolean,StringPool,ChunkyByteArray,boolean,boolean)",8,3,13
"org.apache.xerces.readers.MIME2Java.MIME2Java()",1,1,1
"org.apache.xerces.readers.MIME2Java.convert(String)",1,1,1
"org.apache.xerces.readers.MIME2Java.reverse(String)",1,1,1
"org.apache.xerces.readers.StringReader.StringReader(XMLEntityHandler,XMLErrorReporter,boolean,int,int,int,StringPool,boolean)",1,3,3
"org.apache.xerces.readers.StringReader.addString(int,int)",2,1,2
"org.apache.xerces.readers.StringReader.addSymbol(int,int)",2,1,2
"org.apache.xerces.readers.StringReader.append(CharBuffer,int,int)",3,4,5
"org.apache.xerces.readers.StringReader.callCharDataHandler(int,int,boolean)",2,4,4
"org.apache.xerces.readers.StringReader.changeReaders()",1,1,1
"org.apache.xerces.readers.StringReader.createStringReader(XMLEntityHandler,XMLErrorReporter,boolean,int,int,int,StringPool,boolean)",2,1,2
"org.apache.xerces.readers.StringReader.init(XMLEntityHandler,XMLErrorReporter,boolean,int,int,int,StringPool,boolean)",1,3,3
"org.apache.xerces.readers.StringReader.loadNextChar()",1,2,3
"org.apache.xerces.readers.StringReader.lookingAtChar(char,boolean)",3,5,6
"org.apache.xerces.readers.StringReader.lookingAtSpace(boolean)",4,4,8
"org.apache.xerces.readers.StringReader.lookingAtValidChar(boolean)",10,9,20
"org.apache.xerces.readers.StringReader.recognizeMarkup(int)",11,9,14
"org.apache.xerces.readers.StringReader.recognizeReference(int)",3,2,3
"org.apache.xerces.readers.StringReader.scanAttValue(char,boolean)",8,3,9
"org.apache.xerces.readers.StringReader.scanCharRef(boolean)",12,3,22
"org.apache.xerces.readers.StringReader.scanContent(int)",29,32,53
"org.apache.xerces.readers.StringReader.scanEntityValue(int,boolean)",12,11,19
"org.apache.xerces.readers.StringReader.scanExpectedName(char,CharArrayRange)",7,3,7
"org.apache.xerces.readers.StringReader.scanInvalidChar()",2,2,2
"org.apache.xerces.readers.StringReader.scanName(char)",7,3,8
"org.apache.xerces.readers.StringReader.scanQName(char)",7,3,7
"org.apache.xerces.readers.StringReader.scanStringLiteral()",4,3,6
"org.apache.xerces.readers.StringReader.skipPastName(char)",9,2,11
"org.apache.xerces.readers.StringReader.skipPastNmtoken(char)",6,2,7
"org.apache.xerces.readers.StringReader.skipPastSpaces()",5,4,9
"org.apache.xerces.readers.StringReader.skipToChar(char)",4,3,4
"org.apache.xerces.readers.StringReader.skippedString(char[])",6,4,6
"org.apache.xerces.readers.UCSReader.UCSReader(XMLEntityHandler,XMLErrorReporter,boolean,ChunkyByteArray,int,StringPool)",1,1,7
"org.apache.xerces.readers.UCSReader.addString(int,int)",2,1,2
"org.apache.xerces.readers.UCSReader.addSymbol(int,int)",2,1,2
"org.apache.xerces.readers.UCSReader.append(CharBuffer,int,int)",1,2,3
"org.apache.xerces.readers.UCSReader.appendCharData(int)",1,2,2
"org.apache.xerces.readers.UCSReader.callCharDataHandler(int,int,boolean)",1,5,5
"org.apache.xerces.readers.UCSReader.equalsString(int,int,char[],int,int)",4,2,5
"org.apache.xerces.readers.UCSReader.getChar(int)",5,3,6
"org.apache.xerces.readers.UCSReader.getHashcode(int,int)",1,2,3
"org.apache.xerces.readers.UCSReader.lookingAtChar(char,boolean)",2,1,3
"org.apache.xerces.readers.UCSReader.lookingAtSpace(boolean)",9,5,10
"org.apache.xerces.readers.UCSReader.lookingAtValidChar(boolean)",12,6,15
"org.apache.xerces.readers.UCSReader.recognizeMarkup()",11,5,14
"org.apache.xerces.readers.UCSReader.recognizeReference()",3,1,3
"org.apache.xerces.readers.UCSReader.releaseString(int,int)",1,1,1
"org.apache.xerces.readers.UCSReader.scanAttValue(char,boolean)",8,3,9
"org.apache.xerces.readers.UCSReader.scanCharRef(boolean)",12,3,22
"org.apache.xerces.readers.UCSReader.scanContent(int)",43,40,64
"org.apache.xerces.readers.UCSReader.scanEntityValue(int,boolean)",7,3,8
"org.apache.xerces.readers.UCSReader.scanExpectedName(char,CharArrayRange)",2,1,2
"org.apache.xerces.readers.UCSReader.scanInvalidChar()",2,5,8
"org.apache.xerces.readers.UCSReader.scanName(char)",2,1,2
"org.apache.xerces.readers.UCSReader.scanQName(char)",2,1,2
"org.apache.xerces.readers.UCSReader.scanStringLiteral()",4,3,6
"org.apache.xerces.readers.UCSReader.skipPastName(char)",5,2,5
"org.apache.xerces.readers.UCSReader.skipPastNmtoken(char)",4,2,4
"org.apache.xerces.readers.UCSReader.skipPastSpaces()",6,6,8
"org.apache.xerces.readers.UCSReader.skipToChar(char)",8,6,10
"org.apache.xerces.readers.UCSReader.skippedString(char[])",3,2,3
"org.apache.xerces.readers.UCSReader.toString(int,int)",1,1,2
"org.apache.xerces.readers.UCSRecognizer.recognize(XMLEntityReaderFactory,XMLEntityHandler,XMLErrorReporter,boolean,StringPool,ChunkyByteArray,boolean,boolean)",1,10,17
"org.apache.xerces.readers.UTF8CharReader.UTF8CharReader(XMLEntityHandler,XMLErrorReporter,boolean,InputStream,StringPool)",1,1,1
"org.apache.xerces.readers.UTF8CharReader.copyNormalize(byte[],int,char[],int)",21,13,25
"org.apache.xerces.readers.UTF8CharReader.exitNormalize(int,int,boolean)",1,1,1
"org.apache.xerces.readers.UTF8CharReader.fillCurrentChunk()",10,9,27
"org.apache.xerces.readers.UTF8CharReader.handleMultiByteChar(byte,byte[],int,int,char[],int,int)",15,15,18
"org.apache.xerces.readers.UTF8CharReader.handlePartialMultiByteChar(byte,byte[],int,int,char[],int,int)",21,27,33
"org.apache.xerces.readers.UTF8CharReader.savePartialMultiByte(int,byte)",1,1,1
"org.apache.xerces.readers.UTF8CharReader.savePartialMultiByte(int,byte,byte)",1,1,1
"org.apache.xerces.readers.UTF8CharReader.savePartialMultiByte(int,byte,byte,byte)",1,1,1
"org.apache.xerces.readers.UTF8Reader.UTF8Reader(XMLEntityHandler,XMLErrorReporter,boolean,InputStream,StringPool)",1,1,1
"org.apache.xerces.readers.UTF8Reader.addString(int,int)",2,1,2
"org.apache.xerces.readers.UTF8Reader.addSymbol(int,int)",2,1,2
"org.apache.xerces.readers.UTF8Reader.addSymbol(int,int,int)",2,1,2
"org.apache.xerces.readers.UTF8Reader.append(CharBuffer,int,int)",1,1,1
"org.apache.xerces.readers.UTF8Reader.appendCharData(int)",1,2,2
"org.apache.xerces.readers.UTF8Reader.atEOF(int)",1,1,1
"org.apache.xerces.readers.UTF8Reader.changeReaders()",1,1,1
"org.apache.xerces.readers.UTF8Reader.characters(int,int)",2,2,2
"org.apache.xerces.readers.UTF8Reader.copyAsciiCharData()",7,4,9
"org.apache.xerces.readers.UTF8Reader.copyMultiByteCharData(int)",5,6,12
"org.apache.xerces.readers.UTF8Reader.fillCurrentChunk()",4,4,9
"org.apache.xerces.readers.UTF8Reader.getMultiByteSymbolChar(int)",6,14,18
"org.apache.xerces.readers.UTF8Reader.loadNextByte()",3,4,4
"org.apache.xerces.readers.UTF8Reader.lookingAtChar(char,boolean)",6,20,22
"org.apache.xerces.readers.UTF8Reader.lookingAtSpace(boolean)",11,14,20
"org.apache.xerces.readers.UTF8Reader.lookingAtValidChar(boolean)",13,34,41
"org.apache.xerces.readers.UTF8Reader.recognizeMarkup(int,int)",17,35,46
"org.apache.xerces.readers.UTF8Reader.recognizeReference(int)",3,2,3
"org.apache.xerces.readers.UTF8Reader.scanAttValue(char,boolean)",9,16,20
"org.apache.xerces.readers.UTF8Reader.scanCharRef(boolean)",13,4,23
"org.apache.xerces.readers.UTF8Reader.scanContent(int)",32,98,120
"org.apache.xerces.readers.UTF8Reader.scanEntityValue(int,boolean)",13,29,37
"org.apache.xerces.readers.UTF8Reader.scanExpectedName(char,CharArrayRange)",16,20,31
"org.apache.xerces.readers.UTF8Reader.scanInvalidChar()",6,8,9
"org.apache.xerces.readers.UTF8Reader.scanMatchingName(int,int,int)",13,34,40
"org.apache.xerces.readers.UTF8Reader.scanName(char)",9,22,26
"org.apache.xerces.readers.UTF8Reader.scanQName(char)",13,8,21
"org.apache.xerces.readers.UTF8Reader.scanStringLiteral()",4,3,6
"org.apache.xerces.readers.UTF8Reader.skipAsciiCharData()",6,3,7
"org.apache.xerces.readers.UTF8Reader.skipMultiByteCharData(int)",5,5,11
"org.apache.xerces.readers.UTF8Reader.skipPastName(char)",9,4,9
"org.apache.xerces.readers.UTF8Reader.skipPastNmtoken(char)",6,3,6
"org.apache.xerces.readers.UTF8Reader.skipPastSpaces()",6,15,17
"org.apache.xerces.readers.UTF8Reader.skipToChar(char)",8,9,11
"org.apache.xerces.readers.UTF8Reader.skippedMultiByteCharWithFlag(int,int)",6,6,10
"org.apache.xerces.readers.UTF8Reader.skippedString(char[])",7,5,9
"org.apache.xerces.readers.UTF8Reader.slowAppendCharData(int)",1,1,1
"org.apache.xerces.readers.UTF8Reader.slowLoadNextByte()",2,2,2
"org.apache.xerces.readers.UTF8Reader.whitespace(int,int)",2,2,2
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.XMLDeclReader(XMLEntityHandler,XMLErrorReporter,boolean,ChunkyByteArray,StringPool)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.addString(int,int)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.addSymbol(int,int)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.append(CharBuffer,int,int)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.lookingAtChar(char,boolean)",2,1,3
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.lookingAtSpace(boolean)",2,1,6
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.lookingAtValidChar(boolean)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.scanAttValue(char,boolean)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.scanCharRef(boolean)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.scanContent(int)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.scanEntityValue(int,boolean)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.scanExpectedName(char,CharArrayRange)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.scanInvalidChar()",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.scanName(char)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.scanQName(char)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.scanStringLiteral()",5,4,8
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.skipPastName(char)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.skipPastNmtoken(char)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.skipPastSpaces()",3,2,6
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.skipToChar(char)",1,1,1
"org.apache.xerces.readers.UTF8Recognizer.XMLDeclReader.skippedString(char[])",3,2,3
"org.apache.xerces.readers.UTF8Recognizer.recognize(XMLEntityReaderFactory,XMLEntityHandler,XMLErrorReporter,boolean,StringPool,ChunkyByteArray,boolean,boolean)",11,11,20
"org.apache.xerces.readers.XCatalog.Parser.Parser(InputSource)",1,1,1
"org.apache.xerces.readers.XCatalog.Parser.Resolver.resolveEntity(String,String)",2,3,3
"org.apache.xerces.readers.XCatalog.Parser.characters(char[],int,int)",1,1,1
"org.apache.xerces.readers.XCatalog.Parser.endDocument()",1,1,1
"org.apache.xerces.readers.XCatalog.Parser.endElement(String)",1,1,1
"org.apache.xerces.readers.XCatalog.Parser.ignorableWhitespace(char[],int,int)",1,1,1
"org.apache.xerces.readers.XCatalog.Parser.processingInstruction(String,String)",1,1,1
"org.apache.xerces.readers.XCatalog.Parser.setBase(String)",1,2,3
"org.apache.xerces.readers.XCatalog.Parser.setDocumentLocator(Locator)",1,1,1
"org.apache.xerces.readers.XCatalog.Parser.startDocument()",1,1,1
"org.apache.xerces.readers.XCatalog.Parser.startElement(String,AttributeList)",2,11,17
"org.apache.xerces.readers.XCatalog.XCatalog()",1,1,1
"org.apache.xerces.readers.XCatalog.addDelegateCatalog(String,XCatalog)",4,6,6
"org.apache.xerces.readers.XCatalog.getDelegateCatalog(String)",1,1,1
"org.apache.xerces.readers.XCatalog.getDelegateCatalogKeys()",1,1,1
"org.apache.xerces.readers.XCatalog.isURL(String)",1,1,2
"org.apache.xerces.readers.XCatalog.loadCatalog(InputSource)",1,1,1
"org.apache.xerces.readers.XCatalog.removeDelegateCatalog(String)",1,1,1
"org.apache.xerces.readers.XCatalog.resolveEntity(String,String)",7,11,13
"org.apache.xerces.readers.XMLCatalogHandler.addPublicMapping(String,String)",1,1,1
"org.apache.xerces.readers.XMLCatalogHandler.addSystemMapping(String,String)",1,1,1
"org.apache.xerces.readers.XMLCatalogHandler.getPublicMapping(String)",1,1,1
"org.apache.xerces.readers.XMLCatalogHandler.getPublicMappingKeys()",1,1,1
"org.apache.xerces.readers.XMLCatalogHandler.getSystemMapping(String)",1,1,1
"org.apache.xerces.readers.XMLCatalogHandler.getSystemMappingKeys()",1,1,1
"org.apache.xerces.readers.XMLCatalogHandler.removePublicMapping(System)",1,1,1
"org.apache.xerces.readers.XMLCatalogHandler.removeSystemMapping(String)",1,1,1
"org.apache.xerces.readers.XMLCatalogHandler.resolveEntity(String,String)",4,3,5
"org.apache.xerces.readers.XMLDeclRecognizer.prescanXMLDeclOrTextDecl(EntityReader,boolean)",11,2,11
"org.apache.xerces.readers.XMLDeclRecognizer.registerDefaultRecognizers(Stack)",1,1,1
"org.apache.xerces.readers.XMLEntityReader.XMLEntityReader(XMLEntityHandler,XMLErrorReporter,boolean)",1,1,1
"org.apache.xerces.readers.XMLEntityReader.XMLEntityReader(XMLEntityHandler,XMLErrorReporter,boolean,int,int)",1,1,1
"org.apache.xerces.readers.XMLEntityReader.changeReaders()",1,2,2
"org.apache.xerces.readers.XMLEntityReader.currentOffset()",1,1,1
"org.apache.xerces.readers.XMLEntityReader.getColumnNumber()",1,1,1
"org.apache.xerces.readers.XMLEntityReader.getInCDSect()",1,1,1
"org.apache.xerces.readers.XMLEntityReader.getLineNumber()",2,1,2
"org.apache.xerces.readers.XMLEntityReader.init(XMLEntityHandler,XMLErrorReporter,boolean,int,int)",1,1,1
"org.apache.xerces.readers.XMLEntityReader.setInCDSect(boolean)",1,1,1
"org.apache.xerces.readers.XMLEntityReaderFactory.XMLEntityReaderFactory()",1,1,1
"org.apache.xerces.readers.XMLEntityReaderFactory.createCharReader(XMLEntityHandler,XMLErrorReporter,boolean,Reader,StringPool)",1,1,1
"org.apache.xerces.readers.XMLEntityReaderFactory.createStringReader(XMLEntityHandler,XMLErrorReporter,boolean,int,int,int,StringPool,boolean)",1,1,1
"org.apache.xerces.readers.XMLEntityReaderFactory.createUTF8Reader(XMLEntityHandler,XMLErrorReporter,boolean,InputStream,StringPool)",1,1,3
"org.apache.xerces.utils.CharDataChunk.CharDataChunk()",1,1,1
"org.apache.xerces.utils.CharDataChunk.addRef()",1,1,1
"org.apache.xerces.utils.CharDataChunk.addString(int,int)",4,4,4
"org.apache.xerces.utils.CharDataChunk.addSymbol(int,int,int)",4,6,6
"org.apache.xerces.utils.CharDataChunk.append(CharBuffer,int,int)",3,2,5
"org.apache.xerces.utils.CharDataChunk.chunkFor(int)",2,1,3
"org.apache.xerces.utils.CharDataChunk.clearNextChunk()",1,2,2
"org.apache.xerces.utils.CharDataChunk.clearPreviousChunk()",2,2,2
"org.apache.xerces.utils.CharDataChunk.createChunk(StringPool,CharDataChunk)",1,2,4
"org.apache.xerces.utils.CharDataChunk.equalsString(int,int,char[],int,int)",10,1,11
"org.apache.xerces.utils.CharDataChunk.nextChunk()",1,1,1
"org.apache.xerces.utils.CharDataChunk.releaseChunk()",1,1,1
"org.apache.xerces.utils.CharDataChunk.releaseString(int,int)",1,1,1
"org.apache.xerces.utils.CharDataChunk.removeRef()",1,1,2
"org.apache.xerces.utils.CharDataChunk.setCharArray(char[])",1,1,1
"org.apache.xerces.utils.CharDataChunk.setNextChunk(CharDataChunk)",2,1,2
"org.apache.xerces.utils.CharDataChunk.toCharArray()",1,1,1
"org.apache.xerces.utils.CharDataChunk.toString(int,int)",2,2,4
"org.apache.xerces.utils.ChunkyByteArray.ChunkyByteArray(InputStream)",1,1,1
"org.apache.xerces.utils.ChunkyByteArray.atEOF(int)",1,1,1
"org.apache.xerces.utils.ChunkyByteArray.byteAt(int)",2,2,3
"org.apache.xerces.utils.ChunkyByteArray.fill()",3,3,4
"org.apache.xerces.utils.ChunkyByteArray.read()",2,3,5
"org.apache.xerces.utils.ChunkyByteArray.read(byte[],int,int)",4,3,8
"org.apache.xerces.utils.ChunkyByteArray.rewind()",1,1,1
"org.apache.xerces.utils.ChunkyCharArray.ChunkyCharArray(StringPool)",1,1,1
"org.apache.xerces.utils.ChunkyCharArray.addString(int,int)",2,1,2
"org.apache.xerces.utils.ChunkyCharArray.addSymbol(int,int)",2,1,2
"org.apache.xerces.utils.ChunkyCharArray.append(ChunkyCharArray,int,int)",1,1,1
"org.apache.xerces.utils.ChunkyCharArray.append(String)",1,2,2
"org.apache.xerces.utils.ChunkyCharArray.append(char)",1,4,4
"org.apache.xerces.utils.ChunkyCharArray.append(char[],int,int)",1,2,2
"org.apache.xerces.utils.ChunkyCharArray.length()",1,1,1
"org.apache.xerces.utils.ImplementationMessages.createMessage(Locale,int,int,Object[])",2,6,10
"org.apache.xerces.utils.ImplementationMessages.getLocale()",1,1,1
"org.apache.xerces.utils.ImplementationMessages.setLocale(Locale)",1,1,1
"org.apache.xerces.utils.NamespacesScope.NamespacesScope(NamespacesHandler)",1,1,1
"org.apache.xerces.utils.NamespacesScope.decreaseDepth()",1,3,3
"org.apache.xerces.utils.NamespacesScope.getNamespaceForPrefix(int)",4,1,4
"org.apache.xerces.utils.NamespacesScope.increaseDepth()",1,2,3
"org.apache.xerces.utils.NamespacesScope.setNamespaceForPrefix(int,int)",1,3,3
"org.apache.xerces.utils.StringHasher.finishHash(int)",1,1,2
"org.apache.xerces.utils.StringHasher.hashChar(int,int)",1,1,1
"org.apache.xerces.utils.StringHasher.hashChars(char[],int,int)",1,1,3
"org.apache.xerces.utils.StringHasher.hashString(String,int)",1,2,3
"org.apache.xerces.utils.StringPool.StringPool()",2,1,2
"org.apache.xerces.utils.StringPool.addNewSymbol(String,int)",1,3,3
"org.apache.xerces.utils.StringPool.addQName(int,int,int)",1,2,2
"org.apache.xerces.utils.StringPool.addString(String)",1,3,3
"org.apache.xerces.utils.StringPool.addString(StringProducer,int,int)",1,3,3
"org.apache.xerces.utils.StringPool.addStringToList(int,int)",2,1,3
"org.apache.xerces.utils.StringPool.addSymbol(String)",8,8,10
"org.apache.xerces.utils.StringPool.addSymbol(StringProducer,int,int,int)",5,7,7
"org.apache.xerces.utils.StringPool.addSymbol(int)",4,2,6
"org.apache.xerces.utils.StringPool.createCharArrayRange()",1,1,1
"org.apache.xerces.utils.StringPool.createNonMatchingSymbol(int,int,int[],int)",1,3,3
"org.apache.xerces.utils.StringPool.ensureCapacity(int,int)",2,3,4
"org.apache.xerces.utils.StringPool.ensureListCapacity(int,int)",2,3,4
"org.apache.xerces.utils.StringPool.ensureQNameCapacity(int,int)",2,3,4
"org.apache.xerces.utils.StringPool.equalNames(int,int)",4,2,7
"org.apache.xerces.utils.StringPool.equalQNames(int,int)",2,1,3
"org.apache.xerces.utils.StringPool.finishStringList(int)",2,1,2
"org.apache.xerces.utils.StringPool.getCharArrayRange(int,CharArrayRange)",4,2,6
"org.apache.xerces.utils.StringPool.getDeclaration(int)",4,2,6
"org.apache.xerces.utils.StringPool.getFullNameForQName(int)",3,1,4
"org.apache.xerces.utils.StringPool.getLocalPartForQName(int)",3,1,4
"org.apache.xerces.utils.StringPool.getPrefixForQName(int)",3,1,4
"org.apache.xerces.utils.StringPool.getSymbolCache()",1,1,1
"org.apache.xerces.utils.StringPool.getURIForQName(int)",3,1,4
"org.apache.xerces.utils.StringPool.hashSymbol(int[],int,int,int)",1,3,3
"org.apache.xerces.utils.StringPool.lookupSymbol(StringProducer,int,int,int)",5,4,5
"org.apache.xerces.utils.StringPool.orphanString(int)",4,4,8
"org.apache.xerces.utils.StringPool.releaseString(int)",3,3,6
"org.apache.xerces.utils.StringPool.releaseStringInternal(int,int)",1,1,1
"org.apache.xerces.utils.StringPool.reset()",2,3,6
"org.apache.xerces.utils.StringPool.resetShuffleCount()",1,1,1
"org.apache.xerces.utils.StringPool.setDeclaration(int,int)",4,2,6
"org.apache.xerces.utils.StringPool.setURIForQName(int,int)",3,1,4
"org.apache.xerces.utils.StringPool.slowToString(int)",5,2,7
"org.apache.xerces.utils.StringPool.startStringList()",1,1,1
"org.apache.xerces.utils.StringPool.stringInList(int,int)",4,1,5
"org.apache.xerces.utils.StringPool.stringListAsString(int)",1,3,4
"org.apache.xerces.utils.StringPool.stringListLength(int)",3,1,4
"org.apache.xerces.utils.StringPool.toString(int)",2,1,3
"org.apache.xerces.utils.StringPool.updateCacheLine(int,int,int)",2,1,2
"org.apache.xerces.utils.SymbolCache.SymbolCache()",1,1,1
"org.apache.xerces.utils.SymbolCache.addSymbolToCache(String,int,int)",10,11,17
"org.apache.xerces.utils.SymbolCache.createSymbol(int,int,int,int[],int)",1,1,2
"org.apache.xerces.utils.SymbolCache.getSymbolChars()",1,1,1
"org.apache.xerces.utils.SymbolCache.reset()",1,1,1
"org.apache.xerces.utils.SymbolCache.updateCacheLine(int,int,int)",4,3,5
"org.apache.xerces.utils.UTF8DataChunk.UTF8DataChunk(StringPool,UTF8DataChunk)",1,1,1
"org.apache.xerces.utils.UTF8DataChunk.addRef()",1,1,1
"org.apache.xerces.utils.UTF8DataChunk.addString(int,int)",5,4,5
"org.apache.xerces.utils.UTF8DataChunk.addSymbol(int,int,int)",5,6,7
"org.apache.xerces.utils.UTF8DataChunk.append(CharBuffer,int,int)",7,6,17
"org.apache.xerces.utils.UTF8DataChunk.chunkFor(int)",2,1,2
"org.apache.xerces.utils.UTF8DataChunk.clearPreviousChunk()",2,2,2
"org.apache.xerces.utils.UTF8DataChunk.createChunk(StringPool,UTF8DataChunk)",2,2,2
"org.apache.xerces.utils.UTF8DataChunk.equalsString(int,int,char[],int,int)",16,1,25
"org.apache.xerces.utils.UTF8DataChunk.getHashcode(int,int)",5,6,6
"org.apache.xerces.utils.UTF8DataChunk.init(StringPool,UTF8DataChunk)",1,2,3
"org.apache.xerces.utils.UTF8DataChunk.nextChunk()",1,1,1
"org.apache.xerces.utils.UTF8DataChunk.releaseChunk()",1,1,1
"org.apache.xerces.utils.UTF8DataChunk.releaseString(int,int)",1,1,1
"org.apache.xerces.utils.UTF8DataChunk.removeRef()",1,1,2
"org.apache.xerces.utils.UTF8DataChunk.setByteArray(byte[])",1,1,1
"org.apache.xerces.utils.UTF8DataChunk.setNextChunk(UTF8DataChunk)",3,4,4
"org.apache.xerces.utils.UTF8DataChunk.slowChunkFor(int)",1,1,2
"org.apache.xerces.utils.UTF8DataChunk.toByteArray()",1,1,1
"org.apache.xerces.utils.UTF8DataChunk.toString(int,int)",7,12,29
"org.apache.xerces.utils.XMLCharacterProperties.initCharFlags()",1,2,2
"org.apache.xerces.utils.XMLCharacterProperties.setFlagForRange(char[],byte)",1,1,4
"org.apache.xerces.utils.XMLCharacterProperties.validEncName(String)",5,2,7
"org.apache.xerces.utils.XMLCharacterProperties.validNCName(String)",9,2,9
"org.apache.xerces.utils.XMLCharacterProperties.validName(String)",9,2,9
"org.apache.xerces.utils.XMLCharacterProperties.validNmtoken(String)",6,2,6
"org.apache.xerces.utils.XMLCharacterProperties.validPublicId(String)",4,2,5
"org.apache.xerces.utils.XMLCharacterProperties.validVersionNum(String)",4,2,5
"org.apache.xerces.utils.XMLMessages.createMessage(Locale,int,int,Object[])",2,6,10
"org.apache.xerces.utils.XMLMessages.getLocale()",1,1,1
"org.apache.xerces.utils.XMLMessages.setLocale(Locale)",1,1,1
"org.apache.xerces.validators.datatype.BooleanValidator.getErrorString(int,int,Object[])",1,1,2
"org.apache.xerces.validators.datatype.BooleanValidator.setBasetype(DatatypeValidator)",1,1,1
"org.apache.xerces.validators.datatype.BooleanValidator.setFacets(Hashtable)",1,1,1
"org.apache.xerces.validators.datatype.BooleanValidator.setFacets(int[])",1,1,1
"org.apache.xerces.validators.datatype.BooleanValidator.setLocale(Locale)",1,1,1
"org.apache.xerces.validators.datatype.BooleanValidator.validate(String)",2,3,3
"org.apache.xerces.validators.datatype.BooleanValidator.validate(int)",1,1,1
"org.apache.xerces.validators.datatype.DatatypeMessageProvider.createMessage(Locale,int,int,Object[])",2,6,10
"org.apache.xerces.validators.datatype.DatatypeMessageProvider.getLocale()",1,1,1
"org.apache.xerces.validators.datatype.DatatypeMessageProvider.setLocale(Locale)",1,1,1
"org.apache.xerces.validators.datatype.DecimalValidator.boundsCheck(double)",2,2,9
"org.apache.xerces.validators.datatype.DecimalValidator.ensureFacetsAreConsistent(Hashtable)",3,10,13
"org.apache.xerces.validators.datatype.DecimalValidator.enumCheck(double)",3,1,3
"org.apache.xerces.validators.datatype.DecimalValidator.getErrorString(int,int,Object[])",1,1,2
"org.apache.xerces.validators.datatype.DecimalValidator.setBasetype(DatatypeValidator)",1,1,1
"org.apache.xerces.validators.datatype.DecimalValidator.setFacets(Hashtable)",15,21,22
"org.apache.xerces.validators.datatype.DecimalValidator.setFacets(int[])",1,1,1
"org.apache.xerces.validators.datatype.DecimalValidator.setLocale(Locale)",1,1,1
"org.apache.xerces.validators.datatype.DecimalValidator.validate(String)",1,3,3
"org.apache.xerces.validators.datatype.DecimalValidator.validate(int)",1,1,1
"org.apache.xerces.validators.datatype.IllegalFacetException.IllegalFacetException()",1,1,1
"org.apache.xerces.validators.datatype.IllegalFacetException.IllegalFacetException(String)",1,1,1
"org.apache.xerces.validators.datatype.IllegalFacetValueException.IllegalFacetValueException()",1,1,1
"org.apache.xerces.validators.datatype.IllegalFacetValueException.IllegalFacetValueException(String)",1,1,1
"org.apache.xerces.validators.datatype.IntegerValidator.boundsCheck(int)",2,2,9
"org.apache.xerces.validators.datatype.IntegerValidator.ensureFacetsAreConsistent(Hashtable)",3,10,13
"org.apache.xerces.validators.datatype.IntegerValidator.enumCheck(int)",3,1,3
"org.apache.xerces.validators.datatype.IntegerValidator.getErrorString(int,int,Object[])",1,1,2
"org.apache.xerces.validators.datatype.IntegerValidator.setBasetype(DatatypeValidator)",1,1,1
"org.apache.xerces.validators.datatype.IntegerValidator.setFacets(Hashtable)",13,21,22
"org.apache.xerces.validators.datatype.IntegerValidator.setFacets(int[])",1,1,1
"org.apache.xerces.validators.datatype.IntegerValidator.setLocale(Locale)",1,1,1
"org.apache.xerces.validators.datatype.IntegerValidator.validate(String)",1,3,3
"org.apache.xerces.validators.datatype.IntegerValidator.validate(int)",1,1,1
"org.apache.xerces.validators.datatype.InvalidDatatypeValueException.InvalidDatatypeValueException()",1,1,1
"org.apache.xerces.validators.datatype.InvalidDatatypeValueException.InvalidDatatypeValueException(String)",1,1,1
"org.apache.xerces.validators.datatype.RealValidator.boundsCheck(double)",2,2,9
"org.apache.xerces.validators.datatype.RealValidator.ensureFacetsAreConsistent(Hashtable)",3,14,17
"org.apache.xerces.validators.datatype.RealValidator.enumCheck(double)",3,1,3
"org.apache.xerces.validators.datatype.RealValidator.getErrorString(int,int,Object[])",1,1,2
"org.apache.xerces.validators.datatype.RealValidator.setBasetype(DatatypeValidator)",1,1,1
"org.apache.xerces.validators.datatype.RealValidator.setFacets(Hashtable)",15,23,24
"org.apache.xerces.validators.datatype.RealValidator.setFacets(int[])",1,1,1
"org.apache.xerces.validators.datatype.RealValidator.setLocale(Locale)",1,1,1
"org.apache.xerces.validators.datatype.RealValidator.validate(String)",1,3,3
"org.apache.xerces.validators.datatype.RealValidator.validate(int)",1,1,1
"org.apache.xerces.validators.datatype.StringValidator.setBasetype(DatatypeValidator)",1,1,1
"org.apache.xerces.validators.datatype.StringValidator.setFacets(Hashtable)",1,1,1
"org.apache.xerces.validators.datatype.StringValidator.setFacets(int[])",1,1,1
"org.apache.xerces.validators.datatype.StringValidator.setLocale(Locale)",1,1,1
"org.apache.xerces.validators.datatype.StringValidator.validate(String)",1,1,1
"org.apache.xerces.validators.datatype.StringValidator.validate(int)",1,1,1
"org.apache.xerces.validators.datatype.UnknownFacetException.UnknownFacetException()",1,1,1
"org.apache.xerces.validators.datatype.UnknownFacetException.UnknownFacetException(String)",1,1,1
"org.apache.xerces.validators.dtd.CMBinOp.CMBinOp(int,CMNode,CMNode)",2,2,3
"org.apache.xerces.validators.dtd.CMBinOp.calcFirstPos(CMStateSet)",3,4,4
"org.apache.xerces.validators.dtd.CMBinOp.calcLastPos(CMStateSet)",3,4,4
"org.apache.xerces.validators.dtd.CMBinOp.getLeft()",1,1,1
"org.apache.xerces.validators.dtd.CMBinOp.getRight()",1,1,1
"org.apache.xerces.validators.dtd.CMBinOp.isNullable()",3,5,5
"org.apache.xerces.validators.dtd.CMException.CMException(int)",1,1,1
"org.apache.xerces.validators.dtd.CMException.getErrorCode()",1,1,1
"org.apache.xerces.validators.dtd.CMLeaf.CMLeaf(int,int)",2,1,2
"org.apache.xerces.validators.dtd.CMLeaf.CMLeaf(int,int,int)",2,1,2
"org.apache.xerces.validators.dtd.CMLeaf.calcFirstPos(CMStateSet)",1,2,2
"org.apache.xerces.validators.dtd.CMLeaf.calcLastPos(CMStateSet)",1,2,2
"org.apache.xerces.validators.dtd.CMLeaf.getElemIndex()",1,1,1
"org.apache.xerces.validators.dtd.CMLeaf.getPosition()",1,1,1
"org.apache.xerces.validators.dtd.CMLeaf.isNullable()",1,1,1
"org.apache.xerces.validators.dtd.CMLeaf.setPosition(int)",1,1,1
"org.apache.xerces.validators.dtd.CMLeaf.toString(StringPool)",1,2,2
"org.apache.xerces.validators.dtd.CMNode.CMNode(int)",1,1,1
"org.apache.xerces.validators.dtd.CMNode.firstPos()",1,2,2
"org.apache.xerces.validators.dtd.CMNode.lastPos()",1,2,2
"org.apache.xerces.validators.dtd.CMNode.setFollowPos(CMStateSet)",1,1,1
"org.apache.xerces.validators.dtd.CMNode.setMaxStates(int)",1,1,1
"org.apache.xerces.validators.dtd.CMNode.type()",1,1,1
"org.apache.xerces.validators.dtd.CMStateSet.CMStateSet(int)",2,1,4
"org.apache.xerces.validators.dtd.CMStateSet.getBit(int)",4,1,4
"org.apache.xerces.validators.dtd.CMStateSet.intersection(CMStateSet)",1,1,3
"org.apache.xerces.validators.dtd.CMStateSet.isEmpty()",4,1,5
"org.apache.xerces.validators.dtd.CMStateSet.isSameSet(CMStateSet)",5,1,6
"org.apache.xerces.validators.dtd.CMStateSet.setBit(int)",2,1,4
"org.apache.xerces.validators.dtd.CMStateSet.setTo(CMStateSet)",2,1,4
"org.apache.xerces.validators.dtd.CMStateSet.toString()",1,3,4
"org.apache.xerces.validators.dtd.CMStateSet.union(CMStateSet)",1,1,3
"org.apache.xerces.validators.dtd.CMStateSet.zeroBits()",1,1,3
"org.apache.xerces.validators.dtd.CMUniOp.CMUniOp(int,CMNode)",2,3,4
"org.apache.xerces.validators.dtd.CMUniOp.calcFirstPos(CMStateSet)",1,1,1
"org.apache.xerces.validators.dtd.CMUniOp.calcLastPos(CMStateSet)",1,1,1
"org.apache.xerces.validators.dtd.CMUniOp.getChild()",1,1,1
"org.apache.xerces.validators.dtd.CMUniOp.isNullable()",2,2,3
"org.apache.xerces.validators.dtd.DFAContentModel.DFAContentModel(StringPool,CMNode,int)",1,1,1
"org.apache.xerces.validators.dtd.DFAContentModel.buildDFA(CMNode)",9,12,19
"org.apache.xerces.validators.dtd.DFAContentModel.calcFollowList(CMNode)",5,9,10
"org.apache.xerces.validators.dtd.DFAContentModel.dumpTree(CMNode,int)",4,9,10
"org.apache.xerces.validators.dtd.DFAContentModel.makeDefStateList()",1,1,2
"org.apache.xerces.validators.dtd.DFAContentModel.postTreeBuildInit(CMNode,int)",4,5,6
"org.apache.xerces.validators.dtd.DFAContentModel.validateContent(int,int[])",8,11,15
"org.apache.xerces.validators.dtd.DFAContentModel.whatCanGoHere(boolean,InsertableElementsInfo)",9,3,15
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorCDATA.normalize(int,int,int,int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorENTITIES.normalize(int,int,int,int,int)",4,11,13
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorENTITY.normalize(int,int,int,int,int)",1,7,7
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorENUMERATION.normalize(int,int,int,int,int)",1,6,6
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorID.normalize(int,int,int,int,int)",1,8,8
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorIDREF.normalize(int,int,int,int,int)",1,7,7
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorIDREFS.normalize(int,int,int,int,int)",4,11,13
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorNMTOKEN.normalize(int,int,int,int,int)",1,6,6
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorNMTOKENS.normalize(int,int,int,int,int)",4,10,12
"org.apache.xerces.validators.dtd.DTDValidator.AttValidatorNOTATION.normalize(int,int,int,int,int)",1,6,6
"org.apache.xerces.validators.dtd.DTDValidator.ContentSpecImpl.getHandle()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.ContentSpecImpl.getNode(int,XMLContentSpecNode)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.ContentSpecImpl.getType()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.ContentSpecImpl.toString()",2,2,3
"org.apache.xerces.validators.dtd.DTDValidator.DTDValidator(EventHandler,StringPool,XMLErrorReporter,XMLEntityHandler)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.addAttDef(int,int,int,int,int,int)",1,3,3
"org.apache.xerces.validators.dtd.DTDValidator.addAttDef(int,int,int,int,int,int,boolean,boolean,boolean)",6,7,16
"org.apache.xerces.validators.dtd.DTDValidator.addContentSpecLeafNode(int)",6,1,7
"org.apache.xerces.validators.dtd.DTDValidator.addContentSpecNode(int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.addContentSpecNode(int,int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.addContentSpecNode(int,int,int,boolean)",3,4,6
"org.apache.xerces.validators.dtd.DTDValidator.addDefaultAttributes(int,XMLAttrList,int,boolean,boolean)",6,18,26
"org.apache.xerces.validators.dtd.DTDValidator.addElement(int)",2,1,2
"org.apache.xerces.validators.dtd.DTDValidator.addElementDecl(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.addElementDecl(int,int,int)",1,3,3
"org.apache.xerces.validators.dtd.DTDValidator.addElementDecl(int,int,int,boolean)",3,1,5
"org.apache.xerces.validators.dtd.DTDValidator.addExternalEntityDecl(int,int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.addExternalPEDecl(int,int,int)",1,1,2
"org.apache.xerces.validators.dtd.DTDValidator.addId(int)",3,2,4
"org.apache.xerces.validators.dtd.DTDValidator.addIdRef(int)",4,3,6
"org.apache.xerces.validators.dtd.DTDValidator.addInternalEntityDecl(int,int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.addInternalPEDecl(int,int,int)",1,1,2
"org.apache.xerces.validators.dtd.DTDValidator.addNameToEnumeration(int,int,int,int,boolean)",1,3,3
"org.apache.xerces.validators.dtd.DTDValidator.addNotationDecl(int,int,int)",1,2,2
"org.apache.xerces.validators.dtd.DTDValidator.addUniqueLeafNode(int)",1,2,3
"org.apache.xerces.validators.dtd.DTDValidator.addUnparsedEntityDecl(int,int,int,int)",1,2,2
"org.apache.xerces.validators.dtd.DTDValidator.appendContentSpecNode(int,StringBuffer,boolean)",2,5,12
"org.apache.xerces.validators.dtd.DTDValidator.attributeSpecified(int,XMLAttrList,int,Locator,int)",3,9,11
"org.apache.xerces.validators.dtd.DTDValidator.buildContentList(int,int,XMLContentSpecNode)",4,3,7
"org.apache.xerces.validators.dtd.DTDValidator.buildSyntaxTree(int,XMLContentSpecNode)",6,6,7
"org.apache.xerces.validators.dtd.DTDValidator.callComment(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.callProcessingInstruction(int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.charDataInContent()",1,2,3
"org.apache.xerces.validators.dtd.DTDValidator.characters(char[],int,int)",1,2,2
"org.apache.xerces.validators.dtd.DTDValidator.characters(int)",1,2,2
"org.apache.xerces.validators.dtd.DTDValidator.checkContent(int,int,int[])",5,12,15
"org.apache.xerces.validators.dtd.DTDValidator.checkDeclaredElements()",1,3,4
"org.apache.xerces.validators.dtd.DTDValidator.checkDeclaredElements(int,int)",2,6,7
"org.apache.xerces.validators.dtd.DTDValidator.checkForAttributeNameWithPEReference(EntityReader,char)",2,3,3
"org.apache.xerces.validators.dtd.DTDValidator.checkForElementTypeWithPEReference(EntityReader,char)",2,3,3
"org.apache.xerces.validators.dtd.DTDValidator.checkForNameWithPEReference(EntityReader,char)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.checkForNmtokenWithPEReference(EntityReader,char)",2,1,2
"org.apache.xerces.validators.dtd.DTDValidator.checkIdRefs()",2,4,5
"org.apache.xerces.validators.dtd.DTDValidator.createChildModel(int)",7,4,11
"org.apache.xerces.validators.dtd.DTDValidator.doctypeDecl(int,int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.endElement(int)",3,7,15
"org.apache.xerces.validators.dtd.DTDValidator.endEnumeration(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.endNamespaceDeclScope(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.endOfInput(int,boolean)",1,5,5
"org.apache.xerces.validators.dtd.DTDValidator.ensureAttrCapacity(int)",1,2,3
"org.apache.xerces.validators.dtd.DTDValidator.ensureElementCapacity(int)",1,2,3
"org.apache.xerces.validators.dtd.DTDValidator.ensureNodeCapacity(int)",1,2,3
"org.apache.xerces.validators.dtd.DTDValidator.externalReferenceInContent(int)",1,4,5
"org.apache.xerces.validators.dtd.DTDValidator.getAttDef(int,int)",4,3,5
"org.apache.xerces.validators.dtd.DTDValidator.getAttDefIsExternal(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getAttDefaultType(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getAttName(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getAttType(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getAttValue(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getAttributeValidator(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getContentModel(int)",4,3,4
"org.apache.xerces.validators.dtd.DTDValidator.getContentSpec(int)",2,1,4
"org.apache.xerces.validators.dtd.DTDValidator.getContentSpecAsString(int)",3,2,5
"org.apache.xerces.validators.dtd.DTDValidator.getContentSpecHandle(int)",2,1,3
"org.apache.xerces.validators.dtd.DTDValidator.getContentSpecNode(int,XMLContentSpecNode)",1,1,4
"org.apache.xerces.validators.dtd.DTDValidator.getContentSpecNodeAsString(int)",2,9,14
"org.apache.xerces.validators.dtd.DTDValidator.getContentSpecType(int)",2,1,3
"org.apache.xerces.validators.dtd.DTDValidator.getDynamicValidationEnabled()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getElementContentModel(int)",2,1,3
"org.apache.xerces.validators.dtd.DTDValidator.getElementDeclIsExternal(int)",2,1,3
"org.apache.xerces.validators.dtd.DTDValidator.getElementType(int)",2,1,3
"org.apache.xerces.validators.dtd.DTDValidator.getEntityValue(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getEnumeration(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getNamespacesEnabled()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getParameterEntityValue(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getPublicIdOfEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getPublicIdOfParameterEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getSystemIdOfEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getSystemIdOfParameterEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getValidationEnabled()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getValidatorForAttType(int)",11,1,21
"org.apache.xerces.validators.dtd.DTDValidator.getWarningOnDuplicateAttDef()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.getWarningOnUndeclaredElements()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.ignorableWhitespace(char[],int,int)",1,3,4
"org.apache.xerces.validators.dtd.DTDValidator.ignorableWhitespace(int)",1,3,4
"org.apache.xerces.validators.dtd.DTDValidator.init()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.invalidStandaloneAttDef(int,int)",3,1,3
"org.apache.xerces.validators.dtd.DTDValidator.isExternalEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.isExternalParameterEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.isUnparsedEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.lookupElement(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.lookupEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.lookupParameterEntity(int)",1,3,4
"org.apache.xerces.validators.dtd.DTDValidator.makeContentList(int,XMLContentSpecNode)",2,2,3
"org.apache.xerces.validators.dtd.DTDValidator.peekChildCount()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.peekChildren()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.poolReset()",1,3,5
"org.apache.xerces.validators.dtd.DTDValidator.readerChange(EntityReader,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.reportRecoverableXMLError(int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.reportRecoverableXMLError(int,int,String)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.reportRecoverableXMLError(int,int,String,String)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.reportRecoverableXMLError(int,int,String,String,String)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.reportRecoverableXMLError(int,int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.reportRecoverableXMLError(int,int,int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.reset(StringPool)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.rootElementSpecified(int)",1,6,8
"org.apache.xerces.validators.dtd.DTDValidator.saveCurrentLocation()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.scanDefaultAttValue(int,int,int,int)",2,3,5
"org.apache.xerces.validators.dtd.DTDValidator.scanDoctypeDecl(boolean)",2,5,6
"org.apache.xerces.validators.dtd.DTDValidator.scanElementType(EntityReader,char)",2,3,3
"org.apache.xerces.validators.dtd.DTDValidator.setContentModel(int,XMLContentModel)",2,1,3
"org.apache.xerces.validators.dtd.DTDValidator.setDynamicValidationEnabled(boolean)",1,1,4
"org.apache.xerces.validators.dtd.DTDValidator.setNamespacesEnabled(boolean)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.setValidating(boolean)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.setValidationEnabled(boolean)",1,1,4
"org.apache.xerces.validators.dtd.DTDValidator.setWarningOnDuplicateAttDef(boolean)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.setWarningOnUndeclaredElements(boolean)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.startElement(int,XMLAttrList)",2,24,31
"org.apache.xerces.validators.dtd.DTDValidator.startEnumeration()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.startNamespaceDeclScope(int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.startReadingFromExternalSubset(int,int)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.stopReadingFromExternalSubset()",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.usingStandaloneReader()",1,2,2
"org.apache.xerces.validators.dtd.DTDValidator.validEncName(String)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.validPublicId(String)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.validVersionNum(String)",1,1,1
"org.apache.xerces.validators.dtd.DTDValidator.valueOfReferenceInAttValue(int)",1,4,4
"org.apache.xerces.validators.dtd.DTDValidator.whatCanGoHere(int,boolean,InsertableElementsInfo)",1,3,6
"org.apache.xerces.validators.dtd.ElementDeclPool.ElementDeclPool(StringPool,XMLErrorReporter)",1,1,1
"org.apache.xerces.validators.dtd.ElementDeclPool.addAttDef(int,int,int,int,int,int,boolean,boolean,boolean)",6,8,18
"org.apache.xerces.validators.dtd.ElementDeclPool.addContentSpecNode(int,int,int,boolean)",3,4,6
"org.apache.xerces.validators.dtd.ElementDeclPool.addDefaultAttributes(int,XMLAttrList,int,boolean,boolean)",6,18,26
"org.apache.xerces.validators.dtd.ElementDeclPool.addElement(int)",4,3,6
"org.apache.xerces.validators.dtd.ElementDeclPool.addElementDecl(int,int,int,boolean)",5,3,9
"org.apache.xerces.validators.dtd.ElementDeclPool.addId(int)",3,2,4
"org.apache.xerces.validators.dtd.ElementDeclPool.addIdRef(int)",4,3,6
"org.apache.xerces.validators.dtd.ElementDeclPool.addUniqueLeafNode(int)",6,1,7
"org.apache.xerces.validators.dtd.ElementDeclPool.appendContentSpecNode(int,StringBuffer,boolean)",2,5,12
"org.apache.xerces.validators.dtd.ElementDeclPool.checkDeclaredElements()",1,4,4
"org.apache.xerces.validators.dtd.ElementDeclPool.checkDeclaredElements(int,int)",2,6,7
"org.apache.xerces.validators.dtd.ElementDeclPool.checkIdRefs()",2,4,5
"org.apache.xerces.validators.dtd.ElementDeclPool.copyAtts(int,int)",3,4,6
"org.apache.xerces.validators.dtd.ElementDeclPool.ensureAttrCapacity(int)",1,2,3
"org.apache.xerces.validators.dtd.ElementDeclPool.ensureElementCapacity(int)",1,2,3
"org.apache.xerces.validators.dtd.ElementDeclPool.ensureNodeCapacity(int)",1,2,3
"org.apache.xerces.validators.dtd.ElementDeclPool.getAttDef(int,int)",6,4,7
"org.apache.xerces.validators.dtd.ElementDeclPool.getAttDefIsExternal(int)",1,1,1
"org.apache.xerces.validators.dtd.ElementDeclPool.getAttDefaultType(int)",1,1,1
"org.apache.xerces.validators.dtd.ElementDeclPool.getAttName(int)",1,1,1
"org.apache.xerces.validators.dtd.ElementDeclPool.getAttType(int)",1,1,1
"org.apache.xerces.validators.dtd.ElementDeclPool.getAttValue(int)",1,1,1
"org.apache.xerces.validators.dtd.ElementDeclPool.getContentModel(int)",2,1,3
"org.apache.xerces.validators.dtd.ElementDeclPool.getContentSpec(int)",2,1,3
"org.apache.xerces.validators.dtd.ElementDeclPool.getContentSpecAsString(int)",3,3,6
"org.apache.xerces.validators.dtd.ElementDeclPool.getContentSpecNode(int,XMLContentSpecNode)",1,1,4
"org.apache.xerces.validators.dtd.ElementDeclPool.getContentSpecNodeAsString(int)",2,9,14
"org.apache.xerces.validators.dtd.ElementDeclPool.getContentSpecType(int)",2,1,3
"org.apache.xerces.validators.dtd.ElementDeclPool.getElement(int)",4,1,4
"org.apache.xerces.validators.dtd.ElementDeclPool.getElementDeclIsExternal(int)",2,1,3
"org.apache.xerces.validators.dtd.ElementDeclPool.getElementType(int)",2,1,3
"org.apache.xerces.validators.dtd.ElementDeclPool.getEnumeration(int)",1,1,1
"org.apache.xerces.validators.dtd.ElementDeclPool.reset(StringPool)",1,3,6
"org.apache.xerces.validators.dtd.ElementDeclPool.setContentModel(int,XMLContentModel)",2,1,3
"org.apache.xerces.validators.dtd.ElementDeclPool.setContentSpec(int,int)",2,1,3
"org.apache.xerces.validators.dtd.EntityPool.EntityPool(StringPool,XMLErrorReporter,boolean)",1,2,2
"org.apache.xerces.validators.dtd.EntityPool.RequiredNotation.RequiredNotation(int,Locator,int,int,Object[])",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.addEntityDecl(int,int,int,int,int,int,boolean)",1,1,2
"org.apache.xerces.validators.dtd.EntityPool.addNotationDecl(int,int,int,boolean)",3,1,4
"org.apache.xerces.validators.dtd.EntityPool.addRequiredNotation(int,Locator,int,int,Object[])",3,2,4
"org.apache.xerces.validators.dtd.EntityPool.checkRequiredNotations()",2,3,4
"org.apache.xerces.validators.dtd.EntityPool.createInternalEntity(String,String)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.ensureCapacity(int)",1,2,3
"org.apache.xerces.validators.dtd.EntityPool.getEntityDeclIsExternal(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.getEntityLocation(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.getEntityName(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.getEntityValue(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.getNotationDeclIsExternal(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.getNotationName(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.getPublicId(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.getSystemId(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.isExternalEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.isUnparsedEntity(int)",1,1,1
"org.apache.xerces.validators.dtd.EntityPool.lookupEntity(int)",4,1,5
"org.apache.xerces.validators.dtd.EntityPool.lookupNotation(int)",3,1,3
"org.apache.xerces.validators.dtd.EntityPool.reset(StringPool)",1,3,3
"org.apache.xerces.validators.dtd.MixedContentModel.MixedContentModel(int,int[])",1,1,1
"org.apache.xerces.validators.dtd.MixedContentModel.validateContent(int,int[])",6,1,6
"org.apache.xerces.validators.dtd.MixedContentModel.whatCanGoHere(boolean,InsertableElementsInfo)",2,1,11
"org.apache.xerces.validators.dtd.SimpleContentModel.SimpleContentModel(int,int,int)",1,1,1
"org.apache.xerces.validators.dtd.SimpleContentModel.validateContent(int,int[])",20,2,28
"org.apache.xerces.validators.dtd.SimpleContentModel.whatCanGoHere(boolean,InsertableElementsInfo)",5,2,39
"org.apache.xerces.validators.schema.DatatypeContentModel.DatatypeContentModel(DatatypeValidatorRegistry,ElementDeclPool,StringPool,int)",1,1,1
"org.apache.xerces.validators.schema.DatatypeContentModel.validateContent(int,int[])",1,3,4
"org.apache.xerces.validators.schema.DatatypeContentModel.whatCanGoHere(boolean,InsertableElementsInfo)",1,1,1
"org.apache.xerces.validators.schema.SchemaMessageProvider.createMessage(Locale,int,int,Object[])",2,6,10
"org.apache.xerces.validators.schema.SchemaMessageProvider.getLocale()",1,1,1
"org.apache.xerces.validators.schema.SchemaMessageProvider.setLocale(Locale)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.DatatypeValidatorRegistry.addValidator(String,DatatypeValidator)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.DatatypeValidatorRegistry.getValidatorFor(String)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.DatatypeValidatorRegistry.initializeRegistry()",1,5,5
"org.apache.xerces.validators.schema.XSchemaValidator.ErrorHandler.error(SAXParseException)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.ErrorHandler.fatalError(SAXParseException)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.ErrorHandler.getLocationString(SAXParseException)",1,3,3
"org.apache.xerces.validators.schema.XSchemaValidator.ErrorHandler.warning(SAXParseException)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.Resolver.resolveEntity(String,String)",3,3,3
"org.apache.xerces.validators.schema.XSchemaValidator.XSchemaValidator(StringPool,XMLErrorReporter,XMLEntityHandler)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.addRequiredNotation(int,Locator,int,int,Object[])",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.addUse(int,Integer)",1,1,2
"org.apache.xerces.validators.schema.XSchemaValidator.addUse(int,int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.attributeSpecified(int,XMLAttrList,int,Locator,int)",2,6,6
"org.apache.xerces.validators.schema.XSchemaValidator.buildAllModel(int[],int)",3,2,3
"org.apache.xerces.validators.schema.XSchemaValidator.buildAllModel(int[],int,XMLContentSpecNode)",2,7,7
"org.apache.xerces.validators.schema.XSchemaValidator.buildContentList(int,int,XMLContentSpecNode)",4,3,7
"org.apache.xerces.validators.schema.XSchemaValidator.buildSyntaxTree(int,XMLContentSpecNode)",6,6,7
"org.apache.xerces.validators.schema.XSchemaValidator.charDataInContent()",1,3,3
"org.apache.xerces.validators.schema.XSchemaValidator.characters(char[],int,int)",1,3,3
"org.apache.xerces.validators.schema.XSchemaValidator.characters(int)",1,3,3
"org.apache.xerces.validators.schema.XSchemaValidator.checkAttributes(int,XMLAttrList,int)",1,6,6
"org.apache.xerces.validators.schema.XSchemaValidator.checkContent(int,int,int[])",7,16,18
"org.apache.xerces.validators.schema.XSchemaValidator.checkIDRefNames()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.cleanupForwardReferences()",1,2,2
"org.apache.xerces.validators.schema.XSchemaValidator.cleanupForwardReferencesTo(int)",2,2,3
"org.apache.xerces.validators.schema.XSchemaValidator.createChildModel(int)",7,4,11
"org.apache.xerces.validators.schema.XSchemaValidator.createSeq(int[])",1,2,2
"org.apache.xerces.validators.schema.XSchemaValidator.endElement(int)",1,5,6
"org.apache.xerces.validators.schema.XSchemaValidator.expandContentModel(int,Element)",2,19,19
"org.apache.xerces.validators.schema.XSchemaValidator.externalReferenceInContent(int)",1,4,5
"org.apache.xerces.validators.schema.XSchemaValidator.getAttName(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getAttValue(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getContentModel(int)",5,3,5
"org.apache.xerces.validators.schema.XSchemaValidator.getContentSpec(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getContentSpecAsString(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getContentSpecNode(int,XMLContentSpecNode)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getContentSpecType(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getDynamicValidationEnabled()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getElement(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getElementType(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getEntityName(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getEntityValue(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getNamespacesEnabled()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getNotationName(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getOccurrenceCount(Element)",8,8,11
"org.apache.xerces.validators.schema.XSchemaValidator.getParameterEntityValue(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getPublicIdIndexOfEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getPublicIdOfEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getPublicIdOfParameterEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getSchemaDocument()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getSystemIdIndexOfEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getSystemIdOfEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getSystemIdOfParameterEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getValidationEnabled()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getWarningOnDuplicateAttDef()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.getWarningOnUndeclaredElements()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.ignorableWhitespace(char[],int,int)",1,3,4
"org.apache.xerces.validators.schema.XSchemaValidator.ignorableWhitespace(int)",1,3,4
"org.apache.xerces.validators.schema.XSchemaValidator.invalidStandaloneAttDef(int,int)",3,1,3
"org.apache.xerces.validators.schema.XSchemaValidator.isExternalEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.isExternalParameterEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.isSimpleOccurrenceCount(int)",1,1,4
"org.apache.xerces.validators.schema.XSchemaValidator.isUnparsedEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.loadSchema(String)",2,6,6
"org.apache.xerces.validators.schema.XSchemaValidator.lookupEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.lookupParameterEntity(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.makeContentList(int,XMLContentSpecNode)",2,2,3
"org.apache.xerces.validators.schema.XSchemaValidator.normalizeAttributeValue(int,int,int,int,int)",19,72,79
"org.apache.xerces.validators.schema.XSchemaValidator.notationDeclared(int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.peekChildCount()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.peekChildren()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.peekContentSpecType()",2,1,2
"org.apache.xerces.validators.schema.XSchemaValidator.peekElementType()",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.popElement()",2,3,4
"org.apache.xerces.validators.schema.XSchemaValidator.pushElement(int,int)",1,5,5
"org.apache.xerces.validators.schema.XSchemaValidator.reportRecoverableXMLError(int,int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.reportRecoverableXMLError(int,int,String)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.reportRecoverableXMLError(int,int,String,String)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.reportRecoverableXMLError(int,int,String,String,String)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.reportRecoverableXMLError(int,int,int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.reportRecoverableXMLError(int,int,int,int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.reportSchemaError(int,Object[])",1,2,2
"org.apache.xerces.validators.schema.XSchemaValidator.reset(StringPool,XMLErrorReporter,XMLEntityHandler)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.rootElementSpecified(int)",1,3,4
"org.apache.xerces.validators.schema.XSchemaValidator.setDynamicValidationEnabled(boolean)",1,1,4
"org.apache.xerces.validators.schema.XSchemaValidator.setNamespacesEnabled(boolean)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.setValidationEnabled(boolean)",1,1,4
"org.apache.xerces.validators.schema.XSchemaValidator.setWarningOnDuplicateAttDef(boolean)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.setWarningOnUndeclaredElements(boolean)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.shift(int[],int,int)",1,1,2
"org.apache.xerces.validators.schema.XSchemaValidator.sort(int[],int,int)",1,1,5
"org.apache.xerces.validators.schema.XSchemaValidator.startElement(int,XMLAttrList)",1,6,7
"org.apache.xerces.validators.schema.XSchemaValidator.swap(int[],int,int)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.traverseAttrGroup(Element)",4,10,12
"org.apache.xerces.validators.schema.XSchemaValidator.traverseAttrGroupRef(Element)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.traverseAttributeDecl(Element,int)",1,21,21
"org.apache.xerces.validators.schema.XSchemaValidator.traverseComment(Element)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.traverseDatatypeDecl(Element)",2,9,9
"org.apache.xerces.validators.schema.XSchemaValidator.traverseElementDecl(Element)",2,13,17
"org.apache.xerces.validators.schema.XSchemaValidator.traverseElementRef(Element)",1,2,2
"org.apache.xerces.validators.schema.XSchemaValidator.traverseGroup(Element)",1,16,18
"org.apache.xerces.validators.schema.XSchemaValidator.traverseModelGroup(Element)",1,14,16
"org.apache.xerces.validators.schema.XSchemaValidator.traverseModelGroupRef(Element)",1,1,1
"org.apache.xerces.validators.schema.XSchemaValidator.traverseSchema(Element)",2,14,15
"org.apache.xerces.validators.schema.XSchemaValidator.traverseTypeDecl(Element)",6,44,52
"org.apache.xerces.validators.schema.XSchemaValidator.usingStandaloneReader()",1,2,2
"org.apache.xerces.validators.schema.XSchemaValidator.valueOfReferenceInAttValue(int)",1,4,4
"org.apache.xerces.validators.schema.XSchemaValidator.whatCanGoHere(int,boolean,InsertableElementsInfo)",1,3,6
"org.apache.xerces.validators.schema.XUtil.XUtil()",1,1,1
"org.apache.xerces.validators.schema.XUtil.copyInto(Node,Node)",3,14,15
"org.apache.xerces.validators.schema.XUtil.getFirstChildElement(Node)",3,2,3
"org.apache.xerces.validators.schema.XUtil.getFirstChildElement(Node,String)",4,3,4
"org.apache.xerces.validators.schema.XUtil.getFirstChildElement(Node,String,String,String)",4,4,5
"org.apache.xerces.validators.schema.XUtil.getFirstChildElement(Node,String[])",5,4,5
"org.apache.xerces.validators.schema.XUtil.getNextSiblingElement(Node)",3,2,3
"org.apache.xerces.validators.schema.XUtil.getNextSiblingElement(Node,String)",4,3,4
"org.apache.xerces.validators.schema.XUtil.getNextSiblingElement(Node,String,String,String)",4,4,5
"org.apache.xerces.validators.schema.XUtil.getNextSiblingElement(Node,String[])",5,4,5
"org.w3c.dom.DOMException.DOMException(short,String)",1,1,1
"org.xml.sax.HandlerBase.characters(char[],int,int)",1,1,1
"org.xml.sax.HandlerBase.endDocument()",1,1,1
"org.xml.sax.HandlerBase.endElement(String)",1,1,1
"org.xml.sax.HandlerBase.error(SAXParseException)",1,1,1
"org.xml.sax.HandlerBase.fatalError(SAXParseException)",1,1,1
"org.xml.sax.HandlerBase.ignorableWhitespace(char[],int,int)",1,1,1
"org.xml.sax.HandlerBase.notationDecl(String,String,String)",1,1,1
"org.xml.sax.HandlerBase.processingInstruction(String,String)",1,1,1
"org.xml.sax.HandlerBase.resolveEntity(String,String)",1,1,1
"org.xml.sax.HandlerBase.setDocumentLocator(Locator)",1,1,1
"org.xml.sax.HandlerBase.startDocument()",1,1,1
"org.xml.sax.HandlerBase.startElement(String,AttributeList)",1,1,1
"org.xml.sax.HandlerBase.unparsedEntityDecl(String,String,String,String)",1,1,1
"org.xml.sax.HandlerBase.warning(SAXParseException)",1,1,1
"org.xml.sax.InputSource.InputSource()",1,1,1
"org.xml.sax.InputSource.InputSource(InputStream)",1,1,1
"org.xml.sax.InputSource.InputSource(Reader)",1,1,1
"org.xml.sax.InputSource.InputSource(String)",1,1,1
"org.xml.sax.InputSource.getByteStream()",1,1,1
"org.xml.sax.InputSource.getCharacterStream()",1,1,1
"org.xml.sax.InputSource.getEncoding()",1,1,1
"org.xml.sax.InputSource.getPublicId()",1,1,1
"org.xml.sax.InputSource.getSystemId()",1,1,1
"org.xml.sax.InputSource.setByteStream(InputStream)",1,1,1
"org.xml.sax.InputSource.setCharacterStream(Reader)",1,1,1
"org.xml.sax.InputSource.setEncoding(String)",1,1,1
"org.xml.sax.InputSource.setPublicId(String)",1,1,1
"org.xml.sax.InputSource.setSystemId(String)",1,1,1
"org.xml.sax.SAXException.SAXException(Exception)",1,1,1
"org.xml.sax.SAXException.SAXException(String)",1,1,1
"org.xml.sax.SAXException.SAXException(String,Exception)",1,1,1
"org.xml.sax.SAXException.getException()",1,1,1
"org.xml.sax.SAXException.getMessage()",2,2,3
"org.xml.sax.SAXException.toString()",1,1,1
"org.xml.sax.SAXNotRecognizedException.SAXNotRecognizedException(String)",1,1,1
"org.xml.sax.SAXNotSupportedException.SAXNotSupportedException(String)",1,1,1
"org.xml.sax.SAXParseException.SAXParseException(String,Locator)",1,1,1
"org.xml.sax.SAXParseException.SAXParseException(String,Locator,Exception)",1,1,1
"org.xml.sax.SAXParseException.SAXParseException(String,String,String,int,int)",1,1,1
"org.xml.sax.SAXParseException.SAXParseException(String,String,String,int,int,Exception)",1,1,1
"org.xml.sax.SAXParseException.getColumnNumber()",1,1,1
"org.xml.sax.SAXParseException.getLineNumber()",1,1,1
"org.xml.sax.SAXParseException.getPublicId()",1,1,1
"org.xml.sax.SAXParseException.getSystemId()",1,1,1
"org.xml.sax.helpers.AttributeListImpl.AttributeListImpl()",1,1,1
"org.xml.sax.helpers.AttributeListImpl.AttributeListImpl(AttributeList)",1,1,1
"org.xml.sax.helpers.AttributeListImpl.addAttribute(String,String,String)",1,1,1
"org.xml.sax.helpers.AttributeListImpl.clear()",1,1,1
"org.xml.sax.helpers.AttributeListImpl.getLength()",1,1,1
"org.xml.sax.helpers.AttributeListImpl.getName(int)",1,1,2
"org.xml.sax.helpers.AttributeListImpl.getType(String)",1,1,1
"org.xml.sax.helpers.AttributeListImpl.getType(int)",1,1,2
"org.xml.sax.helpers.AttributeListImpl.getValue(String)",1,1,1
"org.xml.sax.helpers.AttributeListImpl.getValue(int)",1,1,2
"org.xml.sax.helpers.AttributeListImpl.removeAttribute(String)",1,2,2
"org.xml.sax.helpers.AttributeListImpl.setAttributeList(AttributeList)",1,2,2
"org.xml.sax.helpers.ConfigurableParserAdapter.ConfigurableParserAdapter(Parser)",1,1,2
"org.xml.sax.helpers.ConfigurableParserAdapter.getFeature(String)",2,2,2
"org.xml.sax.helpers.ConfigurableParserAdapter.getProperty(String)",2,2,2
"org.xml.sax.helpers.ConfigurableParserAdapter.parse(InputSource)",1,1,1
"org.xml.sax.helpers.ConfigurableParserAdapter.parse(String)",1,1,1
"org.xml.sax.helpers.ConfigurableParserAdapter.setDTDHandler(DTDHandler)",1,1,1
"org.xml.sax.helpers.ConfigurableParserAdapter.setDocumentHandler(DocumentHandler)",1,1,1
"org.xml.sax.helpers.ConfigurableParserAdapter.setEntityResolver(EntityResolver)",1,1,1
"org.xml.sax.helpers.ConfigurableParserAdapter.setErrorHandler(ErrorHandler)",1,1,1
"org.xml.sax.helpers.ConfigurableParserAdapter.setFeature(String,boolean)",2,2,2
"org.xml.sax.helpers.ConfigurableParserAdapter.setLocale(Locale)",1,1,1
"org.xml.sax.helpers.ConfigurableParserAdapter.setProperty(String,Object)",2,2,2
"org.xml.sax.helpers.LocatorImpl.LocatorImpl()",1,1,1
"org.xml.sax.helpers.LocatorImpl.LocatorImpl(Locator)",1,1,1
"org.xml.sax.helpers.LocatorImpl.getColumnNumber()",1,1,1
"org.xml.sax.helpers.LocatorImpl.getLineNumber()",1,1,1
"org.xml.sax.helpers.LocatorImpl.getPublicId()",1,1,1
"org.xml.sax.helpers.LocatorImpl.getSystemId()",1,1,1
"org.xml.sax.helpers.LocatorImpl.setColumnNumber(int)",1,1,1
"org.xml.sax.helpers.LocatorImpl.setLineNumber(int)",1,1,1
"org.xml.sax.helpers.LocatorImpl.setPublicId(String)",1,1,1
"org.xml.sax.helpers.LocatorImpl.setSystemId(String)",1,1,1
"org.xml.sax.helpers.ParserFactory.makeParser()",2,2,2
"org.xml.sax.helpers.ParserFactory.makeParser(String)",1,1,1

